<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16837.c" pos:tabs="8"><function pos:start="1:1" pos:end="1145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">init_ppc_proc</name> <parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">CPUPPCState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:54">ppc_def_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">def</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1145:1">{<block_content pos:start="5:5" pos:end="1143:5">

    <expr_stmt pos:start="5:5" pos:end="5:22"><expr pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:7">env</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:16">reserve</name></name> <operator pos:start="5:18" pos:end="5:18">=</operator> <operator pos:start="5:20" pos:end="5:20">-</operator><literal type="number" pos:start="5:21" pos:end="5:21">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="7:5" pos:end="7:33">/* Default MMU definitions */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:16">nb_BATs</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <operator pos:start="9:20" pos:end="9:20">-</operator><literal type="number" pos:start="9:21" pos:end="9:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:15">nb_tlb</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:16">nb_ways</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="25:7">/* XXX: missing:

     * 32 bits PowerPC:

     * - MPC5xx(x)

     * - MPC8xx(x)

     * - RCPU (same as MPC5xx ?)

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="33:27"><expr pos:start="27:5" pos:end="33:26"><call pos:start="27:5" pos:end="33:26"><name pos:start="27:5" pos:end="27:16">spr_register</name><argument_list pos:start="27:17" pos:end="33:26">(<argument pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:20">env</name></expr></argument>, <argument pos:start="27:23" pos:end="27:29"><expr pos:start="27:23" pos:end="27:29"><name pos:start="27:23" pos:end="27:29">SPR_PVR</name></expr></argument>, <argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><literal type="string" pos:start="27:32" pos:end="27:36">"PVR"</literal></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="31:18" pos:end="31:34"><expr pos:start="31:18" pos:end="31:34"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:34">spr_read_generic</name></expr></argument>, <argument pos:start="31:37" pos:end="31:48"><expr pos:start="31:37" pos:end="31:48"><name pos:start="31:37" pos:end="31:48">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:25"><expr pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:20">def</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:25">pvr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:62"><expr pos:start="35:5" pos:end="37:61"><call pos:start="35:5" pos:end="37:61"><name pos:start="35:5" pos:end="35:10">printf</name><argument_list pos:start="35:11" pos:end="37:61">(<argument pos:start="35:12" pos:end="35:45"><expr pos:start="35:12" pos:end="35:45"><literal type="string" pos:start="35:12" pos:end="35:45">"%s: PVR %08x mask %08x =&gt; %08x\n"</literal></expr></argument>, <argument pos:start="35:48" pos:end="35:55"><expr pos:start="35:48" pos:end="35:55"><name pos:start="35:48" pos:end="35:55">__func__</name></expr></argument>,

           <argument pos:start="37:12" pos:end="37:19"><expr pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:14">def</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:19">pvr</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:34"><expr pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:24">def</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:34">pvr_mask</name></name></expr></argument>, <argument pos:start="37:37" pos:end="37:60"><expr pos:start="37:37" pos:end="37:60"><name pos:start="37:37" pos:end="37:44"><name pos:start="37:37" pos:end="37:39">def</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:44">pvr</name></name> <operator pos:start="37:46" pos:end="37:46">&amp;</operator> <name pos:start="37:48" pos:end="37:60"><name pos:start="37:48" pos:end="37:50">def</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:60">pvr_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="39:5" pos:end="1121:5">switch <condition pos:start="39:12" pos:end="39:21">(<expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:15">def</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:20">pvr</name></name></expr>)</condition> <block pos:start="39:23" pos:end="1121:5">{<block_content pos:start="43:5" pos:end="1119:14">

    <comment type="block" pos:start="41:5" pos:end="41:61">/* Embedded PowerPC from IBM                           */</comment>

    <case pos:start="43:5" pos:end="43:23">case <expr pos:start="43:10" pos:end="43:22"><name pos:start="43:10" pos:end="43:22">CPU_PPC_401A1</name></expr>:</case>   <comment type="block" pos:start="43:27" pos:end="43:61">/* 401 A1 family                 */</comment>

    <case pos:start="45:5" pos:end="45:23">case <expr pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:22">CPU_PPC_401B2</name></expr>:</case>   <comment type="block" pos:start="45:27" pos:end="45:61">/* 401 B2 family                 */</comment>

    <case pos:start="47:5" pos:end="47:23">case <expr pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:22">CPU_PPC_401C2</name></expr>:</case>   <comment type="block" pos:start="47:27" pos:end="47:61">/* 401 C2 family                 */</comment>

    <case pos:start="49:5" pos:end="49:23">case <expr pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:22">CPU_PPC_401D2</name></expr>:</case>   <comment type="block" pos:start="49:27" pos:end="49:61">/* 401 D2 family                 */</comment>

    <case pos:start="51:5" pos:end="51:23">case <expr pos:start="51:10" pos:end="51:22"><name pos:start="51:10" pos:end="51:22">CPU_PPC_401E2</name></expr>:</case>   <comment type="block" pos:start="51:27" pos:end="51:61">/* 401 E2 family                 */</comment>

    <case pos:start="53:5" pos:end="53:23">case <expr pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:22">CPU_PPC_401F2</name></expr>:</case>   <comment type="block" pos:start="53:27" pos:end="53:61">/* 401 F2 family                 */</comment>

    <case pos:start="55:5" pos:end="55:23">case <expr pos:start="55:10" pos:end="55:22"><name pos:start="55:10" pos:end="55:22">CPU_PPC_401G2</name></expr>:</case>   <comment type="block" pos:start="55:27" pos:end="55:61">/* 401 G2 family                 */</comment>

    <case pos:start="57:5" pos:end="57:24">case <expr pos:start="57:10" pos:end="57:23"><name pos:start="57:10" pos:end="57:23">CPU_PPC_IOP480</name></expr>:</case>  <comment type="block" pos:start="57:27" pos:end="57:61">/* IOP 480 family                */</comment>

    <case pos:start="59:5" pos:end="59:23">case <expr pos:start="59:10" pos:end="59:22"><name pos:start="59:10" pos:end="59:22">CPU_PPC_COBRA</name></expr>:</case>   <comment type="block" pos:start="59:27" pos:end="59:67">/* IBM Processor for Network Resources */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><call pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:23">gen_spr_generic</name><argument_list pos:start="61:24" pos:end="61:28">(<argument pos:start="61:25" pos:end="61:27"><expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><call pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:19">gen_spr_40x</name><argument_list pos:start="63:20" pos:end="63:24">(<argument pos:start="63:21" pos:end="63:23"><expr pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="68:0"><expr pos:start="65:9" pos:end="65:28"><call pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:23">gen_spr_401_403</name><argument_list pos:start="65:24" pos:end="65:28">(<argument pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="67:1" pos:end="67:18">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:18"><call pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:11">defined</name> <argument_list pos:start="67:13" pos:end="67:18">(<argument pos:start="67:14" pos:end="67:17"><expr pos:start="67:14" pos:end="67:17"><name pos:start="67:14" pos:end="67:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <comment type="block" pos:start="69:9" pos:end="69:29">/* XXX: optional ? */</comment>

        <expr_stmt pos:start="71:9" pos:end="74:0"><expr pos:start="71:9" pos:end="71:29"><call pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:24">gen_spr_compress</name><argument_list pos:start="71:25" pos:end="71:29">(<argument pos:start="71:26" pos:end="71:28"><expr pos:start="71:26" pos:end="71:28"><name pos:start="71:26" pos:end="71:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:11">env</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:20">nb_BATs</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <literal type="number" pos:start="75:24" pos:end="75:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:25"><expr pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:19">nb_tlb</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <literal type="number" pos:start="77:23" pos:end="77:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">env</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:20">nb_ways</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <literal type="number" pos:start="79:24" pos:end="79:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:25"><expr pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:11">env</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:20">id_tlbs</name></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:57">/* XXX: TODO: allocate internal IRQ controller */</comment>

        <break pos:start="85:9" pos:end="85:14">break;</break>



    <case pos:start="89:5" pos:end="89:23">case <expr pos:start="89:10" pos:end="89:22"><name pos:start="89:10" pos:end="89:22">CPU_PPC_403GA</name></expr>:</case>   <comment type="block" pos:start="89:27" pos:end="89:61">/* 403 GA family                 */</comment>

    <case pos:start="91:5" pos:end="91:23">case <expr pos:start="91:10" pos:end="91:22"><name pos:start="91:10" pos:end="91:22">CPU_PPC_403GB</name></expr>:</case>   <comment type="block" pos:start="91:27" pos:end="91:61">/* 403 GB family                 */</comment>

    <case pos:start="93:5" pos:end="93:23">case <expr pos:start="93:10" pos:end="93:22"><name pos:start="93:10" pos:end="93:22">CPU_PPC_403GC</name></expr>:</case>   <comment type="block" pos:start="93:27" pos:end="93:61">/* 403 GC family                 */</comment>

    <case pos:start="95:5" pos:end="95:24">case <expr pos:start="95:10" pos:end="95:23"><name pos:start="95:10" pos:end="95:23">CPU_PPC_403GCX</name></expr>:</case>  <comment type="block" pos:start="95:27" pos:end="95:61">/* 403 GCX family                */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><call pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:23">gen_spr_generic</name><argument_list pos:start="97:24" pos:end="97:28">(<argument pos:start="97:25" pos:end="97:27"><expr pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><call pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:19">gen_spr_40x</name><argument_list pos:start="99:20" pos:end="99:24">(<argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><call pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:23">gen_spr_401_403</name><argument_list pos:start="101:24" pos:end="101:28">(<argument pos:start="101:25" pos:end="101:27"><expr pos:start="101:25" pos:end="101:27"><name pos:start="101:25" pos:end="101:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><call pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:19">gen_spr_403</name><argument_list pos:start="103:20" pos:end="103:24">(<argument pos:start="103:21" pos:end="103:23"><expr pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:25"><expr pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:11">env</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:20">nb_BATs</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <literal type="number" pos:start="105:24" pos:end="105:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:11">env</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:19">nb_tlb</name></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <literal type="number" pos:start="107:23" pos:end="107:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:25"><expr pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:11">env</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:20">nb_ways</name></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <literal type="number" pos:start="109:24" pos:end="109:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:25"><expr pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:20">id_tlbs</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <literal type="number" pos:start="111:24" pos:end="111:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="113:9" pos:end="113:57">/* XXX: TODO: allocate internal IRQ controller */</comment>

        <break pos:start="115:9" pos:end="115:14">break;</break>



    <case pos:start="119:5" pos:end="119:23">case <expr pos:start="119:10" pos:end="119:22"><name pos:start="119:10" pos:end="119:22">CPU_PPC_405CR</name></expr>:</case>   <comment type="block" pos:start="119:27" pos:end="119:61">/* 405 GP/CR family              */</comment>

    <case pos:start="121:5" pos:end="121:23">case <expr pos:start="121:10" pos:end="121:22"><name pos:start="121:10" pos:end="121:22">CPU_PPC_405EP</name></expr>:</case>   <comment type="block" pos:start="121:27" pos:end="121:61">/* 405 EP family                 */</comment>

    <case pos:start="123:5" pos:end="123:24">case <expr pos:start="123:10" pos:end="123:23"><name pos:start="123:10" pos:end="123:23">CPU_PPC_405GPR</name></expr>:</case>  <comment type="block" pos:start="123:27" pos:end="123:61">/* 405 GPR family                */</comment>

    <case pos:start="125:5" pos:end="125:23">case <expr pos:start="125:10" pos:end="125:22"><name pos:start="125:10" pos:end="125:22">CPU_PPC_405D2</name></expr>:</case>   <comment type="block" pos:start="125:27" pos:end="125:61">/* 405 D2 family                 */</comment>

    <case pos:start="127:5" pos:end="127:23">case <expr pos:start="127:10" pos:end="127:22"><name pos:start="127:10" pos:end="127:22">CPU_PPC_405D4</name></expr>:</case>   <comment type="block" pos:start="127:27" pos:end="127:61">/* 405 D4 family                 */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><call pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:23">gen_spr_generic</name><argument_list pos:start="129:24" pos:end="129:28">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="131:9" pos:end="131:23">/* Time base */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:21"><expr pos:start="133:9" pos:end="133:20"><call pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:15">gen_tbl</name><argument_list pos:start="133:16" pos:end="133:20">(<argument pos:start="133:17" pos:end="133:19"><expr pos:start="133:17" pos:end="133:19"><name pos:start="133:17" pos:end="133:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:25"><expr pos:start="135:9" pos:end="135:24"><call pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:19">gen_spr_40x</name><argument_list pos:start="135:20" pos:end="135:24">(<argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:25"><expr pos:start="137:9" pos:end="137:24"><call pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:19">gen_spr_405</name><argument_list pos:start="137:20" pos:end="137:24">(<argument pos:start="137:21" pos:end="137:23"><expr pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:11">env</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:20">nb_BATs</name></name> <operator pos:start="139:22" pos:end="139:22">=</operator> <literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:25"><expr pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:11">env</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:19">nb_tlb</name></name> <operator pos:start="141:21" pos:end="141:21">=</operator> <literal type="number" pos:start="141:23" pos:end="141:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:25"><expr pos:start="143:9" pos:end="143:24"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:11">env</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:20">nb_ways</name></name> <operator pos:start="143:22" pos:end="143:22">=</operator> <literal type="number" pos:start="143:24" pos:end="143:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:25"><expr pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:11">env</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:20">id_tlbs</name></name> <operator pos:start="145:22" pos:end="145:22">=</operator> <literal type="number" pos:start="145:24" pos:end="145:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="147:9" pos:end="147:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:29"><expr pos:start="149:9" pos:end="149:28"><call pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:23">ppc405_irq_init</name><argument_list pos:start="149:24" pos:end="149:28">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>



    <case pos:start="155:5" pos:end="155:25">case <expr pos:start="155:10" pos:end="155:24"><name pos:start="155:10" pos:end="155:24">CPU_PPC_NPE405H</name></expr>:</case> <comment type="block" pos:start="155:27" pos:end="155:61">/* NPe405 H family               */</comment>

    <case pos:start="157:5" pos:end="157:26">case <expr pos:start="157:10" pos:end="157:25"><name pos:start="157:10" pos:end="157:25">CPU_PPC_NPE405H2</name></expr>:</case>

    <case pos:start="159:5" pos:end="159:25">case <expr pos:start="159:10" pos:end="159:24"><name pos:start="159:10" pos:end="159:24">CPU_PPC_NPE405L</name></expr>:</case> <comment type="block" pos:start="159:27" pos:end="159:61">/* Npe405 L family               */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:29"><expr pos:start="161:9" pos:end="161:28"><call pos:start="161:9" pos:end="161:28"><name pos:start="161:9" pos:end="161:23">gen_spr_generic</name><argument_list pos:start="161:24" pos:end="161:28">(<argument pos:start="161:25" pos:end="161:27"><expr pos:start="161:25" pos:end="161:27"><name pos:start="161:25" pos:end="161:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="163:9" pos:end="163:23">/* Time base */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:21"><expr pos:start="165:9" pos:end="165:20"><call pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:15">gen_tbl</name><argument_list pos:start="165:16" pos:end="165:20">(<argument pos:start="165:17" pos:end="165:19"><expr pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:25"><expr pos:start="167:9" pos:end="167:24"><call pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:19">gen_spr_40x</name><argument_list pos:start="167:20" pos:end="167:24">(<argument pos:start="167:21" pos:end="167:23"><expr pos:start="167:21" pos:end="167:23"><name pos:start="167:21" pos:end="167:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:25"><expr pos:start="169:9" pos:end="169:24"><call pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:19">gen_spr_405</name><argument_list pos:start="169:20" pos:end="169:24">(<argument pos:start="169:21" pos:end="169:23"><expr pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:25"><expr pos:start="171:9" pos:end="171:24"><name pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:11">env</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:20">nb_BATs</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:25"><expr pos:start="173:9" pos:end="173:24"><name pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:11">env</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:19">nb_tlb</name></name> <operator pos:start="173:21" pos:end="173:21">=</operator> <literal type="number" pos:start="173:23" pos:end="173:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:25"><expr pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:11">env</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:20">nb_ways</name></name> <operator pos:start="175:22" pos:end="175:22">=</operator> <literal type="number" pos:start="175:24" pos:end="175:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:25"><expr pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:11">env</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:20">id_tlbs</name></name> <operator pos:start="177:22" pos:end="177:22">=</operator> <literal type="number" pos:start="177:24" pos:end="177:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="179:9" pos:end="179:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:29"><expr pos:start="181:9" pos:end="181:28"><call pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:23">ppc405_irq_init</name><argument_list pos:start="181:24" pos:end="181:28">(<argument pos:start="181:25" pos:end="181:27"><expr pos:start="181:25" pos:end="181:27"><name pos:start="181:25" pos:end="181:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="183:9" pos:end="188:0">break;</break>



<cpp:if pos:start="187:1" pos:end="187:18">#<cpp:directive pos:start="187:2" pos:end="187:3">if</cpp:directive> <expr pos:start="187:5" pos:end="187:18"><call pos:start="187:5" pos:end="187:18"><name pos:start="187:5" pos:end="187:11">defined</name> <argument_list pos:start="187:13" pos:end="187:18">(<argument pos:start="187:14" pos:end="187:17"><expr pos:start="187:14" pos:end="187:17"><name pos:start="187:14" pos:end="187:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="189:5" pos:end="194:0">case <expr pos:start="189:10" pos:end="189:25"><name pos:start="189:10" pos:end="189:25">CPU_PPC_STB01000</name></expr>:</case>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="193:1" pos:end="193:18">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:18"><call pos:start="193:5" pos:end="193:18"><name pos:start="193:5" pos:end="193:11">defined</name> <argument_list pos:start="193:13" pos:end="193:18">(<argument pos:start="193:14" pos:end="193:17"><expr pos:start="193:14" pos:end="193:17"><name pos:start="193:14" pos:end="193:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="195:5" pos:end="200:0">case <expr pos:start="195:10" pos:end="195:25"><name pos:start="195:10" pos:end="195:25">CPU_PPC_STB01010</name></expr>:</case>

<cpp:endif pos:start="197:1" pos:end="197:6">#<cpp:directive pos:start="197:2" pos:end="197:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="199:1" pos:end="199:18">#<cpp:directive pos:start="199:2" pos:end="199:3">if</cpp:directive> <expr pos:start="199:5" pos:end="199:18"><call pos:start="199:5" pos:end="199:18"><name pos:start="199:5" pos:end="199:11">defined</name> <argument_list pos:start="199:13" pos:end="199:18">(<argument pos:start="199:14" pos:end="199:17"><expr pos:start="199:14" pos:end="199:17"><name pos:start="199:14" pos:end="199:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="201:5" pos:end="204:0">case <expr pos:start="201:10" pos:end="201:24"><name pos:start="201:10" pos:end="201:24">CPU_PPC_STB0210</name></expr>:</case>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>

    <case pos:start="205:5" pos:end="208:0">case <expr pos:start="205:10" pos:end="205:22"><name pos:start="205:10" pos:end="205:22">CPU_PPC_STB03</name></expr>:</case>   <comment type="block" pos:start="205:27" pos:end="205:61">/* STB03 family                  */</comment>

<cpp:if pos:start="207:1" pos:end="207:18">#<cpp:directive pos:start="207:2" pos:end="207:3">if</cpp:directive> <expr pos:start="207:5" pos:end="207:18"><call pos:start="207:5" pos:end="207:18"><name pos:start="207:5" pos:end="207:11">defined</name> <argument_list pos:start="207:13" pos:end="207:18">(<argument pos:start="207:14" pos:end="207:17"><expr pos:start="207:14" pos:end="207:17"><name pos:start="207:14" pos:end="207:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="209:5" pos:end="214:0">case <expr pos:start="209:10" pos:end="209:23"><name pos:start="209:10" pos:end="209:23">CPU_PPC_STB043</name></expr>:</case>  <comment type="block" pos:start="209:27" pos:end="209:62">/* STB043 family                  */</comment>

<cpp:endif pos:start="211:1" pos:end="211:6">#<cpp:directive pos:start="211:2" pos:end="211:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="213:1" pos:end="213:18">#<cpp:directive pos:start="213:2" pos:end="213:3">if</cpp:directive> <expr pos:start="213:5" pos:end="213:18"><call pos:start="213:5" pos:end="213:18"><name pos:start="213:5" pos:end="213:11">defined</name> <argument_list pos:start="213:13" pos:end="213:18">(<argument pos:start="213:14" pos:end="213:17"><expr pos:start="213:14" pos:end="213:17"><name pos:start="213:14" pos:end="213:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="215:5" pos:end="218:0">case <expr pos:start="215:10" pos:end="215:23"><name pos:start="215:10" pos:end="215:23">CPU_PPC_STB045</name></expr>:</case>  <comment type="block" pos:start="215:27" pos:end="215:62">/* STB045 family                  */</comment>

<cpp:endif pos:start="217:1" pos:end="217:6">#<cpp:directive pos:start="217:2" pos:end="217:6">endif</cpp:directive></cpp:endif>

    <case pos:start="219:5" pos:end="222:0">case <expr pos:start="219:10" pos:end="219:22"><name pos:start="219:10" pos:end="219:22">CPU_PPC_STB25</name></expr>:</case>   <comment type="block" pos:start="219:27" pos:end="219:61">/* STB25 family                  */</comment>

<cpp:if pos:start="221:1" pos:end="221:18">#<cpp:directive pos:start="221:2" pos:end="221:3">if</cpp:directive> <expr pos:start="221:5" pos:end="221:18"><call pos:start="221:5" pos:end="221:18"><name pos:start="221:5" pos:end="221:11">defined</name> <argument_list pos:start="221:13" pos:end="221:18">(<argument pos:start="221:14" pos:end="221:17"><expr pos:start="221:14" pos:end="221:17"><name pos:start="221:14" pos:end="221:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="223:5" pos:end="226:0">case <expr pos:start="223:10" pos:end="223:23"><name pos:start="223:10" pos:end="223:23">CPU_PPC_STB130</name></expr>:</case>  <comment type="block" pos:start="223:27" pos:end="223:61">/* STB130 family                 */</comment>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="227:9" pos:end="227:29"><expr pos:start="227:9" pos:end="227:28"><call pos:start="227:9" pos:end="227:28"><name pos:start="227:9" pos:end="227:23">gen_spr_generic</name><argument_list pos:start="227:24" pos:end="227:28">(<argument pos:start="227:25" pos:end="227:27"><expr pos:start="227:25" pos:end="227:27"><name pos:start="227:25" pos:end="227:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="229:9" pos:end="229:23">/* Time base */</comment>

        <expr_stmt pos:start="231:9" pos:end="231:21"><expr pos:start="231:9" pos:end="231:20"><call pos:start="231:9" pos:end="231:20"><name pos:start="231:9" pos:end="231:15">gen_tbl</name><argument_list pos:start="231:16" pos:end="231:20">(<argument pos:start="231:17" pos:end="231:19"><expr pos:start="231:17" pos:end="231:19"><name pos:start="231:17" pos:end="231:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:25"><expr pos:start="233:9" pos:end="233:24"><call pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:19">gen_spr_40x</name><argument_list pos:start="233:20" pos:end="233:24">(<argument pos:start="233:21" pos:end="233:23"><expr pos:start="233:21" pos:end="233:23"><name pos:start="233:21" pos:end="233:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:25"><expr pos:start="235:9" pos:end="235:24"><call pos:start="235:9" pos:end="235:24"><name pos:start="235:9" pos:end="235:19">gen_spr_405</name><argument_list pos:start="235:20" pos:end="235:24">(<argument pos:start="235:21" pos:end="235:23"><expr pos:start="235:21" pos:end="235:23"><name pos:start="235:21" pos:end="235:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:25"><expr pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:20"><name pos:start="237:9" pos:end="237:11">env</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:20">nb_BATs</name></name> <operator pos:start="237:22" pos:end="237:22">=</operator> <literal type="number" pos:start="237:24" pos:end="237:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:25"><expr pos:start="239:9" pos:end="239:24"><name pos:start="239:9" pos:end="239:19"><name pos:start="239:9" pos:end="239:11">env</name><operator pos:start="239:12" pos:end="239:13">-&gt;</operator><name pos:start="239:14" pos:end="239:19">nb_tlb</name></name> <operator pos:start="239:21" pos:end="239:21">=</operator> <literal type="number" pos:start="239:23" pos:end="239:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:25"><expr pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:20"><name pos:start="241:9" pos:end="241:11">env</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:20">nb_ways</name></name> <operator pos:start="241:22" pos:end="241:22">=</operator> <literal type="number" pos:start="241:24" pos:end="241:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:25"><expr pos:start="243:9" pos:end="243:24"><name pos:start="243:9" pos:end="243:20"><name pos:start="243:9" pos:end="243:11">env</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:20">id_tlbs</name></name> <operator pos:start="243:22" pos:end="243:22">=</operator> <literal type="number" pos:start="243:24" pos:end="243:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="245:9" pos:end="245:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="247:9" pos:end="247:29"><expr pos:start="247:9" pos:end="247:28"><call pos:start="247:9" pos:end="247:28"><name pos:start="247:9" pos:end="247:23">ppc405_irq_init</name><argument_list pos:start="247:24" pos:end="247:28">(<argument pos:start="247:25" pos:end="247:27"><expr pos:start="247:25" pos:end="247:27"><name pos:start="247:25" pos:end="247:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="249:14">break;</break>



    <case pos:start="253:5" pos:end="253:23">case <expr pos:start="253:10" pos:end="253:22"><name pos:start="253:10" pos:end="253:22">CPU_PPC_440EP</name></expr>:</case>   <comment type="block" pos:start="253:27" pos:end="253:61">/* 440 EP family                 */</comment>

    <case pos:start="255:5" pos:end="255:23">case <expr pos:start="255:10" pos:end="255:22"><name pos:start="255:10" pos:end="255:22">CPU_PPC_440GP</name></expr>:</case>   <comment type="block" pos:start="255:27" pos:end="255:61">/* 440 GP family                 */</comment>

    <case pos:start="257:5" pos:end="257:23">case <expr pos:start="257:10" pos:end="257:22"><name pos:start="257:10" pos:end="257:22">CPU_PPC_440GX</name></expr>:</case>   <comment type="block" pos:start="257:27" pos:end="257:61">/* 440 GX family                 */</comment>

    <case pos:start="259:5" pos:end="259:24">case <expr pos:start="259:10" pos:end="259:23"><name pos:start="259:10" pos:end="259:23">CPU_PPC_440GXc</name></expr>:</case>  <comment type="block" pos:start="259:27" pos:end="259:61">/* 440 GXc family                */</comment>

    <case pos:start="261:5" pos:end="261:24">case <expr pos:start="261:10" pos:end="261:23"><name pos:start="261:10" pos:end="261:23">CPU_PPC_440GXf</name></expr>:</case>  <comment type="block" pos:start="261:27" pos:end="261:61">/* 440 GXf family                */</comment>

    <case pos:start="263:5" pos:end="263:23">case <expr pos:start="263:10" pos:end="263:22"><name pos:start="263:10" pos:end="263:22">CPU_PPC_440SP</name></expr>:</case>   <comment type="block" pos:start="263:27" pos:end="263:61">/* 440 SP family                 */</comment>

    <case pos:start="265:5" pos:end="265:24">case <expr pos:start="265:10" pos:end="265:23"><name pos:start="265:10" pos:end="265:23">CPU_PPC_440SP2</name></expr>:</case>

    <case pos:start="267:5" pos:end="267:24">case <expr pos:start="267:10" pos:end="267:23"><name pos:start="267:10" pos:end="267:23">CPU_PPC_440SPE</name></expr>:</case>  <comment type="block" pos:start="267:27" pos:end="267:61">/* 440 SPE family                */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:29"><expr pos:start="269:9" pos:end="269:28"><call pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:23">gen_spr_generic</name><argument_list pos:start="269:24" pos:end="269:28">(<argument pos:start="269:25" pos:end="269:27"><expr pos:start="269:25" pos:end="269:27"><name pos:start="269:25" pos:end="269:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="271:9" pos:end="271:23">/* Time base */</comment>

        <expr_stmt pos:start="273:9" pos:end="273:21"><expr pos:start="273:9" pos:end="273:20"><call pos:start="273:9" pos:end="273:20"><name pos:start="273:9" pos:end="273:15">gen_tbl</name><argument_list pos:start="273:16" pos:end="273:20">(<argument pos:start="273:17" pos:end="273:19"><expr pos:start="273:17" pos:end="273:19"><name pos:start="273:17" pos:end="273:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:27"><expr pos:start="275:9" pos:end="275:26"><call pos:start="275:9" pos:end="275:26"><name pos:start="275:9" pos:end="275:21">gen_spr_BookE</name><argument_list pos:start="275:22" pos:end="275:26">(<argument pos:start="275:23" pos:end="275:25"><expr pos:start="275:23" pos:end="275:25"><name pos:start="275:23" pos:end="275:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:25"><expr pos:start="277:9" pos:end="277:24"><call pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:19">gen_spr_440</name><argument_list pos:start="277:20" pos:end="277:24">(<argument pos:start="277:21" pos:end="277:23"><expr pos:start="277:21" pos:end="277:23"><name pos:start="277:21" pos:end="277:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:25"><expr pos:start="279:9" pos:end="279:24"><name pos:start="279:9" pos:end="279:20"><name pos:start="279:9" pos:end="279:11">env</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:20">nb_BATs</name></name> <operator pos:start="279:22" pos:end="279:22">=</operator> <literal type="number" pos:start="279:24" pos:end="279:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:25"><expr pos:start="281:9" pos:end="281:24"><name pos:start="281:9" pos:end="281:19"><name pos:start="281:9" pos:end="281:11">env</name><operator pos:start="281:12" pos:end="281:13">-&gt;</operator><name pos:start="281:14" pos:end="281:19">nb_tlb</name></name> <operator pos:start="281:21" pos:end="281:21">=</operator> <literal type="number" pos:start="281:23" pos:end="281:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:25"><expr pos:start="283:9" pos:end="283:24"><name pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:11">env</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:20">nb_ways</name></name> <operator pos:start="283:22" pos:end="283:22">=</operator> <literal type="number" pos:start="283:24" pos:end="283:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:25"><expr pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:20"><name pos:start="285:9" pos:end="285:11">env</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:20">id_tlbs</name></name> <operator pos:start="285:22" pos:end="285:22">=</operator> <literal type="number" pos:start="285:24" pos:end="285:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="287:9" pos:end="287:57">/* XXX: TODO: allocate internal IRQ controller */</comment>

        <break pos:start="289:9" pos:end="296:0">break;</break>



    <comment type="block" pos:start="293:5" pos:end="293:61">/* Embedded PowerPC from Freescale                     */</comment>

<cpp:if pos:start="295:1" pos:end="295:18">#<cpp:directive pos:start="295:2" pos:end="295:3">if</cpp:directive> <expr pos:start="295:5" pos:end="295:18"><call pos:start="295:5" pos:end="295:18"><name pos:start="295:5" pos:end="295:11">defined</name> <argument_list pos:start="295:13" pos:end="295:18">(<argument pos:start="295:14" pos:end="295:17"><expr pos:start="295:14" pos:end="295:17"><name pos:start="295:14" pos:end="295:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="297:5" pos:end="297:21">case <expr pos:start="297:10" pos:end="297:20"><name pos:start="297:10" pos:end="297:20">CPU_PPC_5xx</name></expr>:</case>

        <break pos:start="299:9" pos:end="304:0">break;</break>

<cpp:endif pos:start="301:1" pos:end="301:6">#<cpp:directive pos:start="301:2" pos:end="301:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="303:1" pos:end="303:18">#<cpp:directive pos:start="303:2" pos:end="303:3">if</cpp:directive> <expr pos:start="303:5" pos:end="303:18"><call pos:start="303:5" pos:end="303:18"><name pos:start="303:5" pos:end="303:11">defined</name> <argument_list pos:start="303:13" pos:end="303:18">(<argument pos:start="303:14" pos:end="303:17"><expr pos:start="303:14" pos:end="303:17"><name pos:start="303:14" pos:end="303:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="305:5" pos:end="305:21">case <expr pos:start="305:10" pos:end="305:20"><name pos:start="305:10" pos:end="305:20">CPU_PPC_8xx</name></expr>:</case>     <comment type="block" pos:start="305:27" pos:end="305:61">/* MPC821 / 823 / 850 / 860      */</comment>

        <break pos:start="307:9" pos:end="312:0">break;</break>

<cpp:endif pos:start="309:1" pos:end="309:6">#<cpp:directive pos:start="309:2" pos:end="309:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="311:1" pos:end="311:18">#<cpp:directive pos:start="311:2" pos:end="311:3">if</cpp:directive> <expr pos:start="311:5" pos:end="311:18"><call pos:start="311:5" pos:end="311:18"><name pos:start="311:5" pos:end="311:11">defined</name> <argument_list pos:start="311:13" pos:end="311:18">(<argument pos:start="311:14" pos:end="311:17"><expr pos:start="311:14" pos:end="311:17"><name pos:start="311:14" pos:end="311:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="313:5" pos:end="313:27">case <expr pos:start="313:10" pos:end="313:26"><name pos:start="313:10" pos:end="313:26">CPU_PPC_82xx_HIP3</name></expr>:</case>    <comment type="block" pos:start="313:32" pos:end="313:66">/* MPC8240 / 8260                */</comment>

    <case pos:start="315:5" pos:end="315:27">case <expr pos:start="315:10" pos:end="315:26"><name pos:start="315:10" pos:end="315:26">CPU_PPC_82xx_HIP4</name></expr>:</case>    <comment type="block" pos:start="315:32" pos:end="315:66">/* MPC8240 / 8260                */</comment>

        <break pos:start="317:9" pos:end="322:0">break;</break>

<cpp:endif pos:start="319:1" pos:end="319:6">#<cpp:directive pos:start="319:2" pos:end="319:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="321:1" pos:end="321:18">#<cpp:directive pos:start="321:2" pos:end="321:3">if</cpp:directive> <expr pos:start="321:5" pos:end="321:18"><call pos:start="321:5" pos:end="321:18"><name pos:start="321:5" pos:end="321:11">defined</name> <argument_list pos:start="321:13" pos:end="321:18">(<argument pos:start="321:14" pos:end="321:17"><expr pos:start="321:14" pos:end="321:17"><name pos:start="321:14" pos:end="321:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="323:5" pos:end="323:22">case <expr pos:start="323:10" pos:end="323:21"><name pos:start="323:10" pos:end="323:21">CPU_PPC_827x</name></expr>:</case>    <comment type="block" pos:start="323:27" pos:end="323:61">/* MPC 827x / 828x               */</comment>

        <break pos:start="325:9" pos:end="328:0">break;</break>

<cpp:endif pos:start="327:1" pos:end="327:6">#<cpp:directive pos:start="327:2" pos:end="327:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="331:5" pos:end="331:71">/* XXX: Use MPC8540 PVR to implement a test PowerPC BookE target */</comment>

    <case pos:start="333:5" pos:end="333:26">case <expr pos:start="333:10" pos:end="333:25"><name pos:start="333:10" pos:end="333:25">CPU_PPC_e500v110</name></expr>:</case>

    <case pos:start="335:5" pos:end="335:26">case <expr pos:start="335:10" pos:end="335:25"><name pos:start="335:10" pos:end="335:25">CPU_PPC_e500v120</name></expr>:</case>

    <case pos:start="337:5" pos:end="337:26">case <expr pos:start="337:10" pos:end="337:25"><name pos:start="337:10" pos:end="337:25">CPU_PPC_e500v210</name></expr>:</case>

    <case pos:start="339:5" pos:end="339:26">case <expr pos:start="339:10" pos:end="339:25"><name pos:start="339:10" pos:end="339:25">CPU_PPC_e500v220</name></expr>:</case>

        <expr_stmt pos:start="341:9" pos:end="341:29"><expr pos:start="341:9" pos:end="341:28"><call pos:start="341:9" pos:end="341:28"><name pos:start="341:9" pos:end="341:23">gen_spr_generic</name><argument_list pos:start="341:24" pos:end="341:28">(<argument pos:start="341:25" pos:end="341:27"><expr pos:start="341:25" pos:end="341:27"><name pos:start="341:25" pos:end="341:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="343:9" pos:end="343:23">/* Time base */</comment>

        <expr_stmt pos:start="345:9" pos:end="345:21"><expr pos:start="345:9" pos:end="345:20"><call pos:start="345:9" pos:end="345:20"><name pos:start="345:9" pos:end="345:15">gen_tbl</name><argument_list pos:start="345:16" pos:end="345:20">(<argument pos:start="345:17" pos:end="345:19"><expr pos:start="345:17" pos:end="345:19"><name pos:start="345:17" pos:end="345:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:27"><expr pos:start="347:9" pos:end="347:26"><call pos:start="347:9" pos:end="347:26"><name pos:start="347:9" pos:end="347:21">gen_spr_BookE</name><argument_list pos:start="347:22" pos:end="347:26">(<argument pos:start="347:23" pos:end="347:25"><expr pos:start="347:23" pos:end="347:25"><name pos:start="347:23" pos:end="347:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:31"><expr pos:start="349:9" pos:end="349:30"><call pos:start="349:9" pos:end="349:30"><name pos:start="349:9" pos:end="349:25">gen_spr_BookE_FSL</name><argument_list pos:start="349:26" pos:end="349:30">(<argument pos:start="349:27" pos:end="349:29"><expr pos:start="349:27" pos:end="349:29"><name pos:start="349:27" pos:end="349:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:25"><expr pos:start="351:9" pos:end="351:24"><name pos:start="351:9" pos:end="351:20"><name pos:start="351:9" pos:end="351:11">env</name><operator pos:start="351:12" pos:end="351:13">-&gt;</operator><name pos:start="351:14" pos:end="351:20">nb_BATs</name></name> <operator pos:start="351:22" pos:end="351:22">=</operator> <literal type="number" pos:start="351:24" pos:end="351:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:25"><expr pos:start="353:9" pos:end="353:24"><name pos:start="353:9" pos:end="353:19"><name pos:start="353:9" pos:end="353:11">env</name><operator pos:start="353:12" pos:end="353:13">-&gt;</operator><name pos:start="353:14" pos:end="353:19">nb_tlb</name></name> <operator pos:start="353:21" pos:end="353:21">=</operator> <literal type="number" pos:start="353:23" pos:end="353:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:25"><expr pos:start="355:9" pos:end="355:24"><name pos:start="355:9" pos:end="355:20"><name pos:start="355:9" pos:end="355:11">env</name><operator pos:start="355:12" pos:end="355:13">-&gt;</operator><name pos:start="355:14" pos:end="355:20">nb_ways</name></name> <operator pos:start="355:22" pos:end="355:22">=</operator> <literal type="number" pos:start="355:24" pos:end="355:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:25"><expr pos:start="357:9" pos:end="357:24"><name pos:start="357:9" pos:end="357:20"><name pos:start="357:9" pos:end="357:11">env</name><operator pos:start="357:12" pos:end="357:13">-&gt;</operator><name pos:start="357:14" pos:end="357:20">id_tlbs</name></name> <operator pos:start="357:22" pos:end="357:22">=</operator> <literal type="number" pos:start="357:24" pos:end="357:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="359:9" pos:end="359:57">/* XXX: TODO: allocate internal IRQ controller */</comment>

        <break pos:start="361:9" pos:end="366:0">break;</break>



<cpp:if pos:start="365:1" pos:end="365:18">#<cpp:directive pos:start="365:2" pos:end="365:3">if</cpp:directive> <expr pos:start="365:5" pos:end="365:18"><call pos:start="365:5" pos:end="365:18"><name pos:start="365:5" pos:end="365:11">defined</name> <argument_list pos:start="365:13" pos:end="365:18">(<argument pos:start="365:14" pos:end="365:17"><expr pos:start="365:14" pos:end="365:17"><name pos:start="365:14" pos:end="365:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="367:5" pos:end="367:22">case <expr pos:start="367:10" pos:end="367:21"><name pos:start="367:10" pos:end="367:21">CPU_PPC_e600</name></expr>:</case>

        <break pos:start="369:9" pos:end="372:0">break;</break>

<cpp:endif pos:start="371:1" pos:end="371:6">#<cpp:directive pos:start="371:2" pos:end="371:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="375:5" pos:end="375:61">/* 32 bits PowerPC                                     */</comment>

    <case pos:start="377:5" pos:end="377:21">case <expr pos:start="377:10" pos:end="377:20"><name pos:start="377:10" pos:end="377:20">CPU_PPC_601</name></expr>:</case>     <comment type="block" pos:start="377:27" pos:end="377:61">/* PowerPC 601                   */</comment>

        <expr_stmt pos:start="379:9" pos:end="379:29"><expr pos:start="379:9" pos:end="379:28"><call pos:start="379:9" pos:end="379:28"><name pos:start="379:9" pos:end="379:23">gen_spr_generic</name><argument_list pos:start="379:24" pos:end="379:28">(<argument pos:start="379:25" pos:end="379:27"><expr pos:start="379:25" pos:end="379:27"><name pos:start="379:25" pos:end="379:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:28"><expr pos:start="381:9" pos:end="381:27"><call pos:start="381:9" pos:end="381:27"><name pos:start="381:9" pos:end="381:22">gen_spr_ne_601</name><argument_list pos:start="381:23" pos:end="381:27">(<argument pos:start="381:24" pos:end="381:26"><expr pos:start="381:24" pos:end="381:26"><name pos:start="381:24" pos:end="381:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:25"><expr pos:start="383:9" pos:end="383:24"><call pos:start="383:9" pos:end="383:24"><name pos:start="383:9" pos:end="383:19">gen_spr_601</name><argument_list pos:start="383:20" pos:end="383:24">(<argument pos:start="383:21" pos:end="383:23"><expr pos:start="383:21" pos:end="383:23"><name pos:start="383:21" pos:end="383:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="385:9" pos:end="385:47">/* Hardware implementation registers */</comment>

        <comment type="block" pos:start="387:9" pos:end="387:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="389:9" pos:end="395:33"><expr pos:start="389:9" pos:end="395:32"><call pos:start="389:9" pos:end="395:32"><name pos:start="389:9" pos:end="389:20">spr_register</name><argument_list pos:start="389:21" pos:end="395:32">(<argument pos:start="389:22" pos:end="389:24"><expr pos:start="389:22" pos:end="389:24"><name pos:start="389:22" pos:end="389:24">env</name></expr></argument>, <argument pos:start="389:27" pos:end="389:34"><expr pos:start="389:27" pos:end="389:34"><name pos:start="389:27" pos:end="389:34">SPR_HID0</name></expr></argument>, <argument pos:start="389:37" pos:end="389:42"><expr pos:start="389:37" pos:end="389:42"><literal type="string" pos:start="389:37" pos:end="389:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="391:22" pos:end="391:33"><expr pos:start="391:22" pos:end="391:33"><name pos:start="391:22" pos:end="391:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="391:36" pos:end="391:47"><expr pos:start="391:36" pos:end="391:47"><name pos:start="391:36" pos:end="391:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="393:22" pos:end="393:38"><expr pos:start="393:22" pos:end="393:38"><operator pos:start="393:22" pos:end="393:22">&amp;</operator><name pos:start="393:23" pos:end="393:38">spr_read_generic</name></expr></argument>, <argument pos:start="393:41" pos:end="393:58"><expr pos:start="393:41" pos:end="393:58"><operator pos:start="393:41" pos:end="393:41">&amp;</operator><name pos:start="393:42" pos:end="393:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="395:22" pos:end="395:31"><expr pos:start="395:22" pos:end="395:31"><literal type="number" pos:start="395:22" pos:end="395:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="397:9" pos:end="397:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="399:9" pos:end="405:33"><expr pos:start="399:9" pos:end="405:32"><call pos:start="399:9" pos:end="405:32"><name pos:start="399:9" pos:end="399:20">spr_register</name><argument_list pos:start="399:21" pos:end="405:32">(<argument pos:start="399:22" pos:end="399:24"><expr pos:start="399:22" pos:end="399:24"><name pos:start="399:22" pos:end="399:24">env</name></expr></argument>, <argument pos:start="399:27" pos:end="399:34"><expr pos:start="399:27" pos:end="399:34"><name pos:start="399:27" pos:end="399:34">SPR_HID1</name></expr></argument>, <argument pos:start="399:37" pos:end="399:42"><expr pos:start="399:37" pos:end="399:42"><literal type="string" pos:start="399:37" pos:end="399:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="401:22" pos:end="401:33"><expr pos:start="401:22" pos:end="401:33"><name pos:start="401:22" pos:end="401:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="401:36" pos:end="401:47"><expr pos:start="401:36" pos:end="401:47"><name pos:start="401:36" pos:end="401:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="403:22" pos:end="403:38"><expr pos:start="403:22" pos:end="403:38"><operator pos:start="403:22" pos:end="403:22">&amp;</operator><name pos:start="403:23" pos:end="403:38">spr_read_generic</name></expr></argument>, <argument pos:start="403:41" pos:end="403:58"><expr pos:start="403:41" pos:end="403:58"><operator pos:start="403:41" pos:end="403:41">&amp;</operator><name pos:start="403:42" pos:end="403:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="405:22" pos:end="405:31"><expr pos:start="405:22" pos:end="405:31"><literal type="number" pos:start="405:22" pos:end="405:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="407:9" pos:end="407:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="409:9" pos:end="415:33"><expr pos:start="409:9" pos:end="415:32"><call pos:start="409:9" pos:end="415:32"><name pos:start="409:9" pos:end="409:20">spr_register</name><argument_list pos:start="409:21" pos:end="415:32">(<argument pos:start="409:22" pos:end="409:24"><expr pos:start="409:22" pos:end="409:24"><name pos:start="409:22" pos:end="409:24">env</name></expr></argument>, <argument pos:start="409:27" pos:end="409:38"><expr pos:start="409:27" pos:end="409:38"><name pos:start="409:27" pos:end="409:38">SPR_601_HID2</name></expr></argument>, <argument pos:start="409:41" pos:end="409:46"><expr pos:start="409:41" pos:end="409:46"><literal type="string" pos:start="409:41" pos:end="409:46">"HID2"</literal></expr></argument>,

                     <argument pos:start="411:22" pos:end="411:33"><expr pos:start="411:22" pos:end="411:33"><name pos:start="411:22" pos:end="411:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="411:36" pos:end="411:47"><expr pos:start="411:36" pos:end="411:47"><name pos:start="411:36" pos:end="411:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="413:22" pos:end="413:38"><expr pos:start="413:22" pos:end="413:38"><operator pos:start="413:22" pos:end="413:22">&amp;</operator><name pos:start="413:23" pos:end="413:38">spr_read_generic</name></expr></argument>, <argument pos:start="413:41" pos:end="413:58"><expr pos:start="413:41" pos:end="413:58"><operator pos:start="413:41" pos:end="413:41">&amp;</operator><name pos:start="413:42" pos:end="413:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="415:22" pos:end="415:31"><expr pos:start="415:22" pos:end="415:31"><literal type="number" pos:start="415:22" pos:end="415:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="417:9" pos:end="417:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="419:9" pos:end="440:0"><expr pos:start="419:9" pos:end="425:32"><call pos:start="419:9" pos:end="425:32"><name pos:start="419:9" pos:end="419:20">spr_register</name><argument_list pos:start="419:21" pos:end="425:32">(<argument pos:start="419:22" pos:end="419:24"><expr pos:start="419:22" pos:end="419:24"><name pos:start="419:22" pos:end="419:24">env</name></expr></argument>, <argument pos:start="419:27" pos:end="419:38"><expr pos:start="419:27" pos:end="419:38"><name pos:start="419:27" pos:end="419:38">SPR_601_HID5</name></expr></argument>, <argument pos:start="419:41" pos:end="419:46"><expr pos:start="419:41" pos:end="419:46"><literal type="string" pos:start="419:41" pos:end="419:46">"HID5"</literal></expr></argument>,

                     <argument pos:start="421:22" pos:end="421:33"><expr pos:start="421:22" pos:end="421:33"><name pos:start="421:22" pos:end="421:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="421:36" pos:end="421:47"><expr pos:start="421:36" pos:end="421:47"><name pos:start="421:36" pos:end="421:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="423:22" pos:end="423:38"><expr pos:start="423:22" pos:end="423:38"><operator pos:start="423:22" pos:end="423:22">&amp;</operator><name pos:start="423:23" pos:end="423:38">spr_read_generic</name></expr></argument>, <argument pos:start="423:41" pos:end="423:58"><expr pos:start="423:41" pos:end="423:58"><operator pos:start="423:41" pos:end="423:41">&amp;</operator><name pos:start="423:42" pos:end="423:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="425:22" pos:end="425:31"><expr pos:start="425:22" pos:end="425:31"><literal type="number" pos:start="425:22" pos:end="425:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="427:9" pos:end="427:35">/* XXX : not implemented */</comment>

<cpp:if pos:start="429:1" pos:end="429:5">#<cpp:directive pos:start="429:2" pos:end="429:3">if</cpp:directive> <expr pos:start="429:5" pos:end="429:5"><literal type="number" pos:start="429:5" pos:end="429:5">0</literal></expr></cpp:if> <comment type="block" pos:start="429:7" pos:end="429:13">/* ? */</comment>

        spr_register(env, SPR_601_HID15, "HID15",

                     SPR_NOACCESS, SPR_NOACCESS,

                     &amp;spr_read_generic, &amp;spr_write_generic,

                     0x00000000);

<cpp:endif pos:start="439:1" pos:end="439:6">#<cpp:directive pos:start="439:2" pos:end="439:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="441:9" pos:end="441:25"><expr pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:19"><name pos:start="441:9" pos:end="441:11">env</name><operator pos:start="441:12" pos:end="441:13">-&gt;</operator><name pos:start="441:14" pos:end="441:19">nb_tlb</name></name> <operator pos:start="441:21" pos:end="441:21">=</operator> <literal type="number" pos:start="441:23" pos:end="441:24">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:25"><expr pos:start="443:9" pos:end="443:24"><name pos:start="443:9" pos:end="443:20"><name pos:start="443:9" pos:end="443:11">env</name><operator pos:start="443:12" pos:end="443:13">-&gt;</operator><name pos:start="443:14" pos:end="443:20">nb_ways</name></name> <operator pos:start="443:22" pos:end="443:22">=</operator> <literal type="number" pos:start="443:24" pos:end="443:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:25"><expr pos:start="445:9" pos:end="445:24"><name pos:start="445:9" pos:end="445:20"><name pos:start="445:9" pos:end="445:11">env</name><operator pos:start="445:12" pos:end="445:13">-&gt;</operator><name pos:start="445:14" pos:end="445:20">id_tlbs</name></name> <operator pos:start="445:22" pos:end="445:22">=</operator> <literal type="number" pos:start="445:24" pos:end="445:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:25"><expr pos:start="447:9" pos:end="447:24"><name pos:start="447:9" pos:end="447:20"><name pos:start="447:9" pos:end="447:11">env</name><operator pos:start="447:12" pos:end="447:13">-&gt;</operator><name pos:start="447:14" pos:end="447:20">id_tlbs</name></name> <operator pos:start="447:22" pos:end="447:22">=</operator> <literal type="number" pos:start="447:24" pos:end="447:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="449:9" pos:end="449:57">/* XXX: TODO: allocate internal IRQ controller */</comment>

        <break pos:start="451:9" pos:end="451:14">break;</break>



    <case pos:start="455:5" pos:end="455:21">case <expr pos:start="455:10" pos:end="455:20"><name pos:start="455:10" pos:end="455:20">CPU_PPC_602</name></expr>:</case>     <comment type="block" pos:start="455:27" pos:end="455:61">/* PowerPC 602                   */</comment>

        <expr_stmt pos:start="457:9" pos:end="457:29"><expr pos:start="457:9" pos:end="457:28"><call pos:start="457:9" pos:end="457:28"><name pos:start="457:9" pos:end="457:23">gen_spr_generic</name><argument_list pos:start="457:24" pos:end="457:28">(<argument pos:start="457:25" pos:end="457:27"><expr pos:start="457:25" pos:end="457:27"><name pos:start="457:25" pos:end="457:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:28"><expr pos:start="459:9" pos:end="459:27"><call pos:start="459:9" pos:end="459:27"><name pos:start="459:9" pos:end="459:22">gen_spr_ne_601</name><argument_list pos:start="459:23" pos:end="459:27">(<argument pos:start="459:24" pos:end="459:26"><expr pos:start="459:24" pos:end="459:26"><name pos:start="459:24" pos:end="459:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="461:9" pos:end="461:31">/* Memory management */</comment>

        <expr_stmt pos:start="463:9" pos:end="463:26"><expr pos:start="463:9" pos:end="463:25"><call pos:start="463:9" pos:end="463:25"><name pos:start="463:9" pos:end="463:20">gen_low_BATs</name><argument_list pos:start="463:21" pos:end="463:25">(<argument pos:start="463:22" pos:end="463:24"><expr pos:start="463:22" pos:end="463:24"><name pos:start="463:22" pos:end="463:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="465:9" pos:end="465:23">/* Time base */</comment>

        <expr_stmt pos:start="467:9" pos:end="467:21"><expr pos:start="467:9" pos:end="467:20"><call pos:start="467:9" pos:end="467:20"><name pos:start="467:9" pos:end="467:15">gen_tbl</name><argument_list pos:start="467:16" pos:end="467:20">(<argument pos:start="467:17" pos:end="467:19"><expr pos:start="467:17" pos:end="467:19"><name pos:start="467:17" pos:end="467:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:41"><expr pos:start="469:9" pos:end="469:40"><call pos:start="469:9" pos:end="469:40"><name pos:start="469:9" pos:end="469:28">gen_6xx_7xx_soft_tlb</name><argument_list pos:start="469:29" pos:end="469:40">(<argument pos:start="469:30" pos:end="469:32"><expr pos:start="469:30" pos:end="469:32"><name pos:start="469:30" pos:end="469:32">env</name></expr></argument>, <argument pos:start="469:35" pos:end="469:36"><expr pos:start="469:35" pos:end="469:36"><literal type="number" pos:start="469:35" pos:end="469:36">64</literal></expr></argument>, <argument pos:start="469:39" pos:end="469:39"><expr pos:start="469:39" pos:end="469:39"><literal type="number" pos:start="469:39" pos:end="469:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:25"><expr pos:start="471:9" pos:end="471:24"><call pos:start="471:9" pos:end="471:24"><name pos:start="471:9" pos:end="471:19">gen_spr_602</name><argument_list pos:start="471:20" pos:end="471:24">(<argument pos:start="471:21" pos:end="471:23"><expr pos:start="471:21" pos:end="471:23"><name pos:start="471:21" pos:end="471:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="473:9" pos:end="473:47">/* hardware implementation registers */</comment>

        <comment type="block" pos:start="475:9" pos:end="475:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="477:9" pos:end="483:33"><expr pos:start="477:9" pos:end="483:32"><call pos:start="477:9" pos:end="483:32"><name pos:start="477:9" pos:end="477:20">spr_register</name><argument_list pos:start="477:21" pos:end="483:32">(<argument pos:start="477:22" pos:end="477:24"><expr pos:start="477:22" pos:end="477:24"><name pos:start="477:22" pos:end="477:24">env</name></expr></argument>, <argument pos:start="477:27" pos:end="477:34"><expr pos:start="477:27" pos:end="477:34"><name pos:start="477:27" pos:end="477:34">SPR_HID0</name></expr></argument>, <argument pos:start="477:37" pos:end="477:42"><expr pos:start="477:37" pos:end="477:42"><literal type="string" pos:start="477:37" pos:end="477:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="479:22" pos:end="479:33"><expr pos:start="479:22" pos:end="479:33"><name pos:start="479:22" pos:end="479:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="479:36" pos:end="479:47"><expr pos:start="479:36" pos:end="479:47"><name pos:start="479:36" pos:end="479:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="481:22" pos:end="481:38"><expr pos:start="481:22" pos:end="481:38"><operator pos:start="481:22" pos:end="481:22">&amp;</operator><name pos:start="481:23" pos:end="481:38">spr_read_generic</name></expr></argument>, <argument pos:start="481:41" pos:end="481:58"><expr pos:start="481:41" pos:end="481:58"><operator pos:start="481:41" pos:end="481:41">&amp;</operator><name pos:start="481:42" pos:end="481:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="483:22" pos:end="483:31"><expr pos:start="483:22" pos:end="483:31"><literal type="number" pos:start="483:22" pos:end="483:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="485:9" pos:end="485:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="487:9" pos:end="493:33"><expr pos:start="487:9" pos:end="493:32"><call pos:start="487:9" pos:end="493:32"><name pos:start="487:9" pos:end="487:20">spr_register</name><argument_list pos:start="487:21" pos:end="493:32">(<argument pos:start="487:22" pos:end="487:24"><expr pos:start="487:22" pos:end="487:24"><name pos:start="487:22" pos:end="487:24">env</name></expr></argument>, <argument pos:start="487:27" pos:end="487:34"><expr pos:start="487:27" pos:end="487:34"><name pos:start="487:27" pos:end="487:34">SPR_HID1</name></expr></argument>, <argument pos:start="487:37" pos:end="487:42"><expr pos:start="487:37" pos:end="487:42"><literal type="string" pos:start="487:37" pos:end="487:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="489:22" pos:end="489:33"><expr pos:start="489:22" pos:end="489:33"><name pos:start="489:22" pos:end="489:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="489:36" pos:end="489:47"><expr pos:start="489:36" pos:end="489:47"><name pos:start="489:36" pos:end="489:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="491:22" pos:end="491:38"><expr pos:start="491:22" pos:end="491:38"><operator pos:start="491:22" pos:end="491:22">&amp;</operator><name pos:start="491:23" pos:end="491:38">spr_read_generic</name></expr></argument>, <argument pos:start="491:41" pos:end="491:58"><expr pos:start="491:41" pos:end="491:58"><operator pos:start="491:41" pos:end="491:41">&amp;</operator><name pos:start="491:42" pos:end="491:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="493:22" pos:end="493:31"><expr pos:start="493:22" pos:end="493:31"><literal type="number" pos:start="493:22" pos:end="493:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="495:9" pos:end="495:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="497:9" pos:end="497:29"><expr pos:start="497:9" pos:end="497:28"><call pos:start="497:9" pos:end="497:28"><name pos:start="497:9" pos:end="497:23">ppc6xx_irq_init</name><argument_list pos:start="497:24" pos:end="497:28">(<argument pos:start="497:25" pos:end="497:27"><expr pos:start="497:25" pos:end="497:27"><name pos:start="497:25" pos:end="497:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="499:9" pos:end="499:14">break;</break>



    <case pos:start="503:5" pos:end="503:21">case <expr pos:start="503:10" pos:end="503:20"><name pos:start="503:10" pos:end="503:20">CPU_PPC_603</name></expr>:</case>     <comment type="block" pos:start="503:27" pos:end="503:61">/* PowerPC 603                   */</comment>

    <case pos:start="505:5" pos:end="505:22">case <expr pos:start="505:10" pos:end="505:21"><name pos:start="505:10" pos:end="505:21">CPU_PPC_603E</name></expr>:</case>    <comment type="block" pos:start="505:27" pos:end="505:61">/* PowerPC 603e                  */</comment>

    <case pos:start="507:5" pos:end="507:24">case <expr pos:start="507:10" pos:end="507:23"><name pos:start="507:10" pos:end="507:23">CPU_PPC_603E7v</name></expr>:</case>

    <case pos:start="509:5" pos:end="509:25">case <expr pos:start="509:10" pos:end="509:24"><name pos:start="509:10" pos:end="509:24">CPU_PPC_603E7v2</name></expr>:</case>

    <case pos:start="511:5" pos:end="511:22">case <expr pos:start="511:10" pos:end="511:21"><name pos:start="511:10" pos:end="511:21">CPU_PPC_603P</name></expr>:</case>    <comment type="block" pos:start="511:27" pos:end="511:61">/* PowerPC 603p                  */</comment>

    <case pos:start="513:5" pos:end="513:22">case <expr pos:start="513:10" pos:end="513:21"><name pos:start="513:10" pos:end="513:21">CPU_PPC_603R</name></expr>:</case>    <comment type="block" pos:start="513:27" pos:end="513:61">/* PowerPC 603r                  */</comment>

        <expr_stmt pos:start="515:9" pos:end="515:29"><expr pos:start="515:9" pos:end="515:28"><call pos:start="515:9" pos:end="515:28"><name pos:start="515:9" pos:end="515:23">gen_spr_generic</name><argument_list pos:start="515:24" pos:end="515:28">(<argument pos:start="515:25" pos:end="515:27"><expr pos:start="515:25" pos:end="515:27"><name pos:start="515:25" pos:end="515:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="517:9" pos:end="517:28"><expr pos:start="517:9" pos:end="517:27"><call pos:start="517:9" pos:end="517:27"><name pos:start="517:9" pos:end="517:22">gen_spr_ne_601</name><argument_list pos:start="517:23" pos:end="517:27">(<argument pos:start="517:24" pos:end="517:26"><expr pos:start="517:24" pos:end="517:26"><name pos:start="517:24" pos:end="517:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="519:9" pos:end="519:31">/* Memory management */</comment>

        <expr_stmt pos:start="521:9" pos:end="521:26"><expr pos:start="521:9" pos:end="521:25"><call pos:start="521:9" pos:end="521:25"><name pos:start="521:9" pos:end="521:20">gen_low_BATs</name><argument_list pos:start="521:21" pos:end="521:25">(<argument pos:start="521:22" pos:end="521:24"><expr pos:start="521:22" pos:end="521:24"><name pos:start="521:22" pos:end="521:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="523:9" pos:end="523:23">/* Time base */</comment>

        <expr_stmt pos:start="525:9" pos:end="525:21"><expr pos:start="525:9" pos:end="525:20"><call pos:start="525:9" pos:end="525:20"><name pos:start="525:9" pos:end="525:15">gen_tbl</name><argument_list pos:start="525:16" pos:end="525:20">(<argument pos:start="525:17" pos:end="525:19"><expr pos:start="525:17" pos:end="525:19"><name pos:start="525:17" pos:end="525:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:41"><expr pos:start="527:9" pos:end="527:40"><call pos:start="527:9" pos:end="527:40"><name pos:start="527:9" pos:end="527:28">gen_6xx_7xx_soft_tlb</name><argument_list pos:start="527:29" pos:end="527:40">(<argument pos:start="527:30" pos:end="527:32"><expr pos:start="527:30" pos:end="527:32"><name pos:start="527:30" pos:end="527:32">env</name></expr></argument>, <argument pos:start="527:35" pos:end="527:36"><expr pos:start="527:35" pos:end="527:36"><literal type="number" pos:start="527:35" pos:end="527:36">64</literal></expr></argument>, <argument pos:start="527:39" pos:end="527:39"><expr pos:start="527:39" pos:end="527:39"><literal type="number" pos:start="527:39" pos:end="527:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:25"><expr pos:start="529:9" pos:end="529:24"><call pos:start="529:9" pos:end="529:24"><name pos:start="529:9" pos:end="529:19">gen_spr_603</name><argument_list pos:start="529:20" pos:end="529:24">(<argument pos:start="529:21" pos:end="529:23"><expr pos:start="529:21" pos:end="529:23"><name pos:start="529:21" pos:end="529:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="531:9" pos:end="531:47">/* hardware implementation registers */</comment>

        <comment type="block" pos:start="533:9" pos:end="533:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="535:9" pos:end="541:33"><expr pos:start="535:9" pos:end="541:32"><call pos:start="535:9" pos:end="541:32"><name pos:start="535:9" pos:end="535:20">spr_register</name><argument_list pos:start="535:21" pos:end="541:32">(<argument pos:start="535:22" pos:end="535:24"><expr pos:start="535:22" pos:end="535:24"><name pos:start="535:22" pos:end="535:24">env</name></expr></argument>, <argument pos:start="535:27" pos:end="535:34"><expr pos:start="535:27" pos:end="535:34"><name pos:start="535:27" pos:end="535:34">SPR_HID0</name></expr></argument>, <argument pos:start="535:37" pos:end="535:42"><expr pos:start="535:37" pos:end="535:42"><literal type="string" pos:start="535:37" pos:end="535:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="537:22" pos:end="537:33"><expr pos:start="537:22" pos:end="537:33"><name pos:start="537:22" pos:end="537:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="537:36" pos:end="537:47"><expr pos:start="537:36" pos:end="537:47"><name pos:start="537:36" pos:end="537:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="539:22" pos:end="539:38"><expr pos:start="539:22" pos:end="539:38"><operator pos:start="539:22" pos:end="539:22">&amp;</operator><name pos:start="539:23" pos:end="539:38">spr_read_generic</name></expr></argument>, <argument pos:start="539:41" pos:end="539:58"><expr pos:start="539:41" pos:end="539:58"><operator pos:start="539:41" pos:end="539:41">&amp;</operator><name pos:start="539:42" pos:end="539:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="541:22" pos:end="541:31"><expr pos:start="541:22" pos:end="541:31"><literal type="number" pos:start="541:22" pos:end="541:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="543:9" pos:end="543:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="545:9" pos:end="551:33"><expr pos:start="545:9" pos:end="551:32"><call pos:start="545:9" pos:end="551:32"><name pos:start="545:9" pos:end="545:20">spr_register</name><argument_list pos:start="545:21" pos:end="551:32">(<argument pos:start="545:22" pos:end="545:24"><expr pos:start="545:22" pos:end="545:24"><name pos:start="545:22" pos:end="545:24">env</name></expr></argument>, <argument pos:start="545:27" pos:end="545:34"><expr pos:start="545:27" pos:end="545:34"><name pos:start="545:27" pos:end="545:34">SPR_HID1</name></expr></argument>, <argument pos:start="545:37" pos:end="545:42"><expr pos:start="545:37" pos:end="545:42"><literal type="string" pos:start="545:37" pos:end="545:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="547:22" pos:end="547:33"><expr pos:start="547:22" pos:end="547:33"><name pos:start="547:22" pos:end="547:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="547:36" pos:end="547:47"><expr pos:start="547:36" pos:end="547:47"><name pos:start="547:36" pos:end="547:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="549:22" pos:end="549:38"><expr pos:start="549:22" pos:end="549:38"><operator pos:start="549:22" pos:end="549:22">&amp;</operator><name pos:start="549:23" pos:end="549:38">spr_read_generic</name></expr></argument>, <argument pos:start="549:41" pos:end="549:58"><expr pos:start="549:41" pos:end="549:58"><operator pos:start="549:41" pos:end="549:41">&amp;</operator><name pos:start="549:42" pos:end="549:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="551:22" pos:end="551:31"><expr pos:start="551:22" pos:end="551:31"><literal type="number" pos:start="551:22" pos:end="551:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="553:9" pos:end="553:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="555:9" pos:end="555:29"><expr pos:start="555:9" pos:end="555:28"><call pos:start="555:9" pos:end="555:28"><name pos:start="555:9" pos:end="555:23">ppc6xx_irq_init</name><argument_list pos:start="555:24" pos:end="555:28">(<argument pos:start="555:25" pos:end="555:27"><expr pos:start="555:25" pos:end="555:27"><name pos:start="555:25" pos:end="555:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="557:9" pos:end="557:14">break;</break>



    <case pos:start="561:5" pos:end="561:20">case <expr pos:start="561:10" pos:end="561:19"><name pos:start="561:10" pos:end="561:19">CPU_PPC_G2</name></expr>:</case>      <comment type="block" pos:start="561:27" pos:end="561:61">/* PowerPC G2 family             */</comment>

    <case pos:start="563:5" pos:end="563:22">case <expr pos:start="563:10" pos:end="563:21"><name pos:start="563:10" pos:end="563:21">CPU_PPC_G2H4</name></expr>:</case>

    <case pos:start="565:5" pos:end="565:22">case <expr pos:start="565:10" pos:end="565:21"><name pos:start="565:10" pos:end="565:21">CPU_PPC_G2gp</name></expr>:</case>

    <case pos:start="567:5" pos:end="567:22">case <expr pos:start="567:10" pos:end="567:21"><name pos:start="567:10" pos:end="567:21">CPU_PPC_G2ls</name></expr>:</case>

    <case pos:start="569:5" pos:end="569:22">case <expr pos:start="569:10" pos:end="569:21"><name pos:start="569:10" pos:end="569:21">CPU_PPC_G2LE</name></expr>:</case>    <comment type="block" pos:start="569:27" pos:end="569:61">/* PowerPC G2LE family           */</comment>

    <case pos:start="571:5" pos:end="571:24">case <expr pos:start="571:10" pos:end="571:23"><name pos:start="571:10" pos:end="571:23">CPU_PPC_G2LEgp</name></expr>:</case>

    <case pos:start="573:5" pos:end="573:24">case <expr pos:start="573:10" pos:end="573:23"><name pos:start="573:10" pos:end="573:23">CPU_PPC_G2LEls</name></expr>:</case>

        <expr_stmt pos:start="575:9" pos:end="575:29"><expr pos:start="575:9" pos:end="575:28"><call pos:start="575:9" pos:end="575:28"><name pos:start="575:9" pos:end="575:23">gen_spr_generic</name><argument_list pos:start="575:24" pos:end="575:28">(<argument pos:start="575:25" pos:end="575:27"><expr pos:start="575:25" pos:end="575:27"><name pos:start="575:25" pos:end="575:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="577:9" pos:end="577:28"><expr pos:start="577:9" pos:end="577:27"><call pos:start="577:9" pos:end="577:27"><name pos:start="577:9" pos:end="577:22">gen_spr_ne_601</name><argument_list pos:start="577:23" pos:end="577:27">(<argument pos:start="577:24" pos:end="577:26"><expr pos:start="577:24" pos:end="577:26"><name pos:start="577:24" pos:end="577:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="579:9" pos:end="579:31">/* Memory management */</comment>

        <expr_stmt pos:start="581:9" pos:end="581:26"><expr pos:start="581:9" pos:end="581:25"><call pos:start="581:9" pos:end="581:25"><name pos:start="581:9" pos:end="581:20">gen_low_BATs</name><argument_list pos:start="581:21" pos:end="581:25">(<argument pos:start="581:22" pos:end="581:24"><expr pos:start="581:22" pos:end="581:24"><name pos:start="581:22" pos:end="581:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="583:9" pos:end="583:23">/* Time base */</comment>

        <expr_stmt pos:start="585:9" pos:end="585:21"><expr pos:start="585:9" pos:end="585:20"><call pos:start="585:9" pos:end="585:20"><name pos:start="585:9" pos:end="585:15">gen_tbl</name><argument_list pos:start="585:16" pos:end="585:20">(<argument pos:start="585:17" pos:end="585:19"><expr pos:start="585:17" pos:end="585:19"><name pos:start="585:17" pos:end="585:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="587:9" pos:end="587:31">/* Memory management */</comment>

        <expr_stmt pos:start="589:9" pos:end="589:27"><expr pos:start="589:9" pos:end="589:26"><call pos:start="589:9" pos:end="589:26"><name pos:start="589:9" pos:end="589:21">gen_high_BATs</name><argument_list pos:start="589:22" pos:end="589:26">(<argument pos:start="589:23" pos:end="589:25"><expr pos:start="589:23" pos:end="589:25"><name pos:start="589:23" pos:end="589:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="591:9" pos:end="591:41"><expr pos:start="591:9" pos:end="591:40"><call pos:start="591:9" pos:end="591:40"><name pos:start="591:9" pos:end="591:28">gen_6xx_7xx_soft_tlb</name><argument_list pos:start="591:29" pos:end="591:40">(<argument pos:start="591:30" pos:end="591:32"><expr pos:start="591:30" pos:end="591:32"><name pos:start="591:30" pos:end="591:32">env</name></expr></argument>, <argument pos:start="591:35" pos:end="591:36"><expr pos:start="591:35" pos:end="591:36"><literal type="number" pos:start="591:35" pos:end="591:36">64</literal></expr></argument>, <argument pos:start="591:39" pos:end="591:39"><expr pos:start="591:39" pos:end="591:39"><literal type="number" pos:start="591:39" pos:end="591:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="593:9" pos:end="593:28"><expr pos:start="593:9" pos:end="593:27"><call pos:start="593:9" pos:end="593:27"><name pos:start="593:9" pos:end="593:22">gen_spr_G2_755</name><argument_list pos:start="593:23" pos:end="593:27">(<argument pos:start="593:24" pos:end="593:26"><expr pos:start="593:24" pos:end="593:26"><name pos:start="593:24" pos:end="593:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="595:9" pos:end="595:24"><expr pos:start="595:9" pos:end="595:23"><call pos:start="595:9" pos:end="595:23"><name pos:start="595:9" pos:end="595:18">gen_spr_G2</name><argument_list pos:start="595:19" pos:end="595:23">(<argument pos:start="595:20" pos:end="595:22"><expr pos:start="595:20" pos:end="595:22"><name pos:start="595:20" pos:end="595:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="597:9" pos:end="597:46">/* Hardware implementation register */</comment>

        <comment type="block" pos:start="599:9" pos:end="599:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="601:9" pos:end="607:33"><expr pos:start="601:9" pos:end="607:32"><call pos:start="601:9" pos:end="607:32"><name pos:start="601:9" pos:end="601:20">spr_register</name><argument_list pos:start="601:21" pos:end="607:32">(<argument pos:start="601:22" pos:end="601:24"><expr pos:start="601:22" pos:end="601:24"><name pos:start="601:22" pos:end="601:24">env</name></expr></argument>, <argument pos:start="601:27" pos:end="601:34"><expr pos:start="601:27" pos:end="601:34"><name pos:start="601:27" pos:end="601:34">SPR_HID0</name></expr></argument>, <argument pos:start="601:37" pos:end="601:42"><expr pos:start="601:37" pos:end="601:42"><literal type="string" pos:start="601:37" pos:end="601:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="603:22" pos:end="603:33"><expr pos:start="603:22" pos:end="603:33"><name pos:start="603:22" pos:end="603:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="603:36" pos:end="603:47"><expr pos:start="603:36" pos:end="603:47"><name pos:start="603:36" pos:end="603:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="605:22" pos:end="605:38"><expr pos:start="605:22" pos:end="605:38"><operator pos:start="605:22" pos:end="605:22">&amp;</operator><name pos:start="605:23" pos:end="605:38">spr_read_generic</name></expr></argument>, <argument pos:start="605:41" pos:end="605:58"><expr pos:start="605:41" pos:end="605:58"><operator pos:start="605:41" pos:end="605:41">&amp;</operator><name pos:start="605:42" pos:end="605:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="607:22" pos:end="607:31"><expr pos:start="607:22" pos:end="607:31"><literal type="number" pos:start="607:22" pos:end="607:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="609:9" pos:end="609:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="611:9" pos:end="617:33"><expr pos:start="611:9" pos:end="617:32"><call pos:start="611:9" pos:end="617:32"><name pos:start="611:9" pos:end="611:20">spr_register</name><argument_list pos:start="611:21" pos:end="617:32">(<argument pos:start="611:22" pos:end="611:24"><expr pos:start="611:22" pos:end="611:24"><name pos:start="611:22" pos:end="611:24">env</name></expr></argument>, <argument pos:start="611:27" pos:end="611:34"><expr pos:start="611:27" pos:end="611:34"><name pos:start="611:27" pos:end="611:34">SPR_HID1</name></expr></argument>, <argument pos:start="611:37" pos:end="611:42"><expr pos:start="611:37" pos:end="611:42"><literal type="string" pos:start="611:37" pos:end="611:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="613:22" pos:end="613:33"><expr pos:start="613:22" pos:end="613:33"><name pos:start="613:22" pos:end="613:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="613:36" pos:end="613:47"><expr pos:start="613:36" pos:end="613:47"><name pos:start="613:36" pos:end="613:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="615:22" pos:end="615:38"><expr pos:start="615:22" pos:end="615:38"><operator pos:start="615:22" pos:end="615:22">&amp;</operator><name pos:start="615:23" pos:end="615:38">spr_read_generic</name></expr></argument>, <argument pos:start="615:41" pos:end="615:58"><expr pos:start="615:41" pos:end="615:58"><operator pos:start="615:41" pos:end="615:41">&amp;</operator><name pos:start="615:42" pos:end="615:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="617:22" pos:end="617:31"><expr pos:start="617:22" pos:end="617:31"><literal type="number" pos:start="617:22" pos:end="617:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="619:9" pos:end="619:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="621:9" pos:end="627:33"><expr pos:start="621:9" pos:end="627:32"><call pos:start="621:9" pos:end="627:32"><name pos:start="621:9" pos:end="621:20">spr_register</name><argument_list pos:start="621:21" pos:end="627:32">(<argument pos:start="621:22" pos:end="621:24"><expr pos:start="621:22" pos:end="621:24"><name pos:start="621:22" pos:end="621:24">env</name></expr></argument>, <argument pos:start="621:27" pos:end="621:34"><expr pos:start="621:27" pos:end="621:34"><name pos:start="621:27" pos:end="621:34">SPR_HID2</name></expr></argument>, <argument pos:start="621:37" pos:end="621:42"><expr pos:start="621:37" pos:end="621:42"><literal type="string" pos:start="621:37" pos:end="621:42">"HID2"</literal></expr></argument>,

                     <argument pos:start="623:22" pos:end="623:33"><expr pos:start="623:22" pos:end="623:33"><name pos:start="623:22" pos:end="623:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="623:36" pos:end="623:47"><expr pos:start="623:36" pos:end="623:47"><name pos:start="623:36" pos:end="623:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="625:22" pos:end="625:38"><expr pos:start="625:22" pos:end="625:38"><operator pos:start="625:22" pos:end="625:22">&amp;</operator><name pos:start="625:23" pos:end="625:38">spr_read_generic</name></expr></argument>, <argument pos:start="625:41" pos:end="625:58"><expr pos:start="625:41" pos:end="625:58"><operator pos:start="625:41" pos:end="625:41">&amp;</operator><name pos:start="625:42" pos:end="625:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="627:22" pos:end="627:31"><expr pos:start="627:22" pos:end="627:31"><literal type="number" pos:start="627:22" pos:end="627:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="629:9" pos:end="629:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="631:9" pos:end="631:29"><expr pos:start="631:9" pos:end="631:28"><call pos:start="631:9" pos:end="631:28"><name pos:start="631:9" pos:end="631:23">ppc6xx_irq_init</name><argument_list pos:start="631:24" pos:end="631:28">(<argument pos:start="631:25" pos:end="631:27"><expr pos:start="631:25" pos:end="631:27"><name pos:start="631:25" pos:end="631:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="633:9" pos:end="633:14">break;</break>



    <case pos:start="637:5" pos:end="637:21">case <expr pos:start="637:10" pos:end="637:20"><name pos:start="637:10" pos:end="637:20">CPU_PPC_604</name></expr>:</case>     <comment type="block" pos:start="637:27" pos:end="637:61">/* PowerPC 604                   */</comment>

    <case pos:start="639:5" pos:end="639:22">case <expr pos:start="639:10" pos:end="639:21"><name pos:start="639:10" pos:end="639:21">CPU_PPC_604E</name></expr>:</case>    <comment type="block" pos:start="639:27" pos:end="639:61">/* PowerPC 604e                  */</comment>

    <case pos:start="641:5" pos:end="641:22">case <expr pos:start="641:10" pos:end="641:21"><name pos:start="641:10" pos:end="641:21">CPU_PPC_604R</name></expr>:</case>    <comment type="block" pos:start="641:27" pos:end="641:61">/* PowerPC 604r                  */</comment>

        <expr_stmt pos:start="643:9" pos:end="643:29"><expr pos:start="643:9" pos:end="643:28"><call pos:start="643:9" pos:end="643:28"><name pos:start="643:9" pos:end="643:23">gen_spr_generic</name><argument_list pos:start="643:24" pos:end="643:28">(<argument pos:start="643:25" pos:end="643:27"><expr pos:start="643:25" pos:end="643:27"><name pos:start="643:25" pos:end="643:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="645:9" pos:end="645:28"><expr pos:start="645:9" pos:end="645:27"><call pos:start="645:9" pos:end="645:27"><name pos:start="645:9" pos:end="645:22">gen_spr_ne_601</name><argument_list pos:start="645:23" pos:end="645:27">(<argument pos:start="645:24" pos:end="645:26"><expr pos:start="645:24" pos:end="645:26"><name pos:start="645:24" pos:end="645:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="647:9" pos:end="647:31">/* Memory management */</comment>

        <expr_stmt pos:start="649:9" pos:end="649:26"><expr pos:start="649:9" pos:end="649:25"><call pos:start="649:9" pos:end="649:25"><name pos:start="649:9" pos:end="649:20">gen_low_BATs</name><argument_list pos:start="649:21" pos:end="649:25">(<argument pos:start="649:22" pos:end="649:24"><expr pos:start="649:22" pos:end="649:24"><name pos:start="649:22" pos:end="649:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="651:9" pos:end="651:23">/* Time base */</comment>

        <expr_stmt pos:start="653:9" pos:end="653:21"><expr pos:start="653:9" pos:end="653:20"><call pos:start="653:9" pos:end="653:20"><name pos:start="653:9" pos:end="653:15">gen_tbl</name><argument_list pos:start="653:16" pos:end="653:20">(<argument pos:start="653:17" pos:end="653:19"><expr pos:start="653:17" pos:end="653:19"><name pos:start="653:17" pos:end="653:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="655:9" pos:end="655:25"><expr pos:start="655:9" pos:end="655:24"><call pos:start="655:9" pos:end="655:24"><name pos:start="655:9" pos:end="655:19">gen_spr_604</name><argument_list pos:start="655:20" pos:end="655:24">(<argument pos:start="655:21" pos:end="655:23"><expr pos:start="655:21" pos:end="655:23"><name pos:start="655:21" pos:end="655:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="657:9" pos:end="657:47">/* Hardware implementation registers */</comment>

        <comment type="block" pos:start="659:9" pos:end="659:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="661:9" pos:end="667:33"><expr pos:start="661:9" pos:end="667:32"><call pos:start="661:9" pos:end="667:32"><name pos:start="661:9" pos:end="661:20">spr_register</name><argument_list pos:start="661:21" pos:end="667:32">(<argument pos:start="661:22" pos:end="661:24"><expr pos:start="661:22" pos:end="661:24"><name pos:start="661:22" pos:end="661:24">env</name></expr></argument>, <argument pos:start="661:27" pos:end="661:34"><expr pos:start="661:27" pos:end="661:34"><name pos:start="661:27" pos:end="661:34">SPR_HID0</name></expr></argument>, <argument pos:start="661:37" pos:end="661:42"><expr pos:start="661:37" pos:end="661:42"><literal type="string" pos:start="661:37" pos:end="661:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="663:22" pos:end="663:33"><expr pos:start="663:22" pos:end="663:33"><name pos:start="663:22" pos:end="663:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="663:36" pos:end="663:47"><expr pos:start="663:36" pos:end="663:47"><name pos:start="663:36" pos:end="663:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="665:22" pos:end="665:38"><expr pos:start="665:22" pos:end="665:38"><operator pos:start="665:22" pos:end="665:22">&amp;</operator><name pos:start="665:23" pos:end="665:38">spr_read_generic</name></expr></argument>, <argument pos:start="665:41" pos:end="665:58"><expr pos:start="665:41" pos:end="665:58"><operator pos:start="665:41" pos:end="665:41">&amp;</operator><name pos:start="665:42" pos:end="665:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="667:22" pos:end="667:31"><expr pos:start="667:22" pos:end="667:31"><literal type="number" pos:start="667:22" pos:end="667:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="669:9" pos:end="669:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="671:9" pos:end="677:33"><expr pos:start="671:9" pos:end="677:32"><call pos:start="671:9" pos:end="677:32"><name pos:start="671:9" pos:end="671:20">spr_register</name><argument_list pos:start="671:21" pos:end="677:32">(<argument pos:start="671:22" pos:end="671:24"><expr pos:start="671:22" pos:end="671:24"><name pos:start="671:22" pos:end="671:24">env</name></expr></argument>, <argument pos:start="671:27" pos:end="671:34"><expr pos:start="671:27" pos:end="671:34"><name pos:start="671:27" pos:end="671:34">SPR_HID1</name></expr></argument>, <argument pos:start="671:37" pos:end="671:42"><expr pos:start="671:37" pos:end="671:42"><literal type="string" pos:start="671:37" pos:end="671:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="673:22" pos:end="673:33"><expr pos:start="673:22" pos:end="673:33"><name pos:start="673:22" pos:end="673:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="673:36" pos:end="673:47"><expr pos:start="673:36" pos:end="673:47"><name pos:start="673:36" pos:end="673:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="675:22" pos:end="675:38"><expr pos:start="675:22" pos:end="675:38"><operator pos:start="675:22" pos:end="675:22">&amp;</operator><name pos:start="675:23" pos:end="675:38">spr_read_generic</name></expr></argument>, <argument pos:start="675:41" pos:end="675:58"><expr pos:start="675:41" pos:end="675:58"><operator pos:start="675:41" pos:end="675:41">&amp;</operator><name pos:start="675:42" pos:end="675:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="677:22" pos:end="677:31"><expr pos:start="677:22" pos:end="677:31"><literal type="number" pos:start="677:22" pos:end="677:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="679:9" pos:end="679:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="681:9" pos:end="681:29"><expr pos:start="681:9" pos:end="681:28"><call pos:start="681:9" pos:end="681:28"><name pos:start="681:9" pos:end="681:23">ppc6xx_irq_init</name><argument_list pos:start="681:24" pos:end="681:28">(<argument pos:start="681:25" pos:end="681:27"><expr pos:start="681:25" pos:end="681:27"><name pos:start="681:25" pos:end="681:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="683:9" pos:end="683:14">break;</break>



    <case pos:start="687:5" pos:end="687:21">case <expr pos:start="687:10" pos:end="687:20"><name pos:start="687:10" pos:end="687:20">CPU_PPC_74x</name></expr>:</case>     <comment type="block" pos:start="687:27" pos:end="687:61">/* PowerPC 740 / 750             */</comment>

    <case pos:start="689:5" pos:end="689:22">case <expr pos:start="689:10" pos:end="689:21"><name pos:start="689:10" pos:end="689:21">CPU_PPC_740E</name></expr>:</case>

    <case pos:start="691:5" pos:end="691:22">case <expr pos:start="691:10" pos:end="691:21"><name pos:start="691:10" pos:end="691:21">CPU_PPC_750E</name></expr>:</case>

    <case pos:start="693:5" pos:end="693:22">case <expr pos:start="693:10" pos:end="693:21"><name pos:start="693:10" pos:end="693:21">CPU_PPC_74xP</name></expr>:</case>    <comment type="block" pos:start="693:27" pos:end="693:61">/* PowerPC 740P / 750P           */</comment>

    <case pos:start="695:5" pos:end="695:26">case <expr pos:start="695:10" pos:end="695:25"><name pos:start="695:10" pos:end="695:25">CPU_PPC_750CXE21</name></expr>:</case> <comment type="block" pos:start="695:28" pos:end="695:62">/* IBM PowerPC 750cxe            */</comment>

    <case pos:start="697:5" pos:end="697:26">case <expr pos:start="697:10" pos:end="697:25"><name pos:start="697:10" pos:end="697:25">CPU_PPC_750CXE22</name></expr>:</case>

    <case pos:start="699:5" pos:end="699:26">case <expr pos:start="699:10" pos:end="699:25"><name pos:start="699:10" pos:end="699:25">CPU_PPC_750CXE23</name></expr>:</case>

    <case pos:start="701:5" pos:end="701:26">case <expr pos:start="701:10" pos:end="701:25"><name pos:start="701:10" pos:end="701:25">CPU_PPC_750CXE24</name></expr>:</case>

    <case pos:start="703:5" pos:end="703:27">case <expr pos:start="703:10" pos:end="703:26"><name pos:start="703:10" pos:end="703:26">CPU_PPC_750CXE24b</name></expr>:</case>

    <case pos:start="705:5" pos:end="705:26">case <expr pos:start="705:10" pos:end="705:25"><name pos:start="705:10" pos:end="705:25">CPU_PPC_750CXE31</name></expr>:</case>

    <case pos:start="707:5" pos:end="707:27">case <expr pos:start="707:10" pos:end="707:26"><name pos:start="707:10" pos:end="707:26">CPU_PPC_750CXE31b</name></expr>:</case>

    <case pos:start="709:5" pos:end="709:24">case <expr pos:start="709:10" pos:end="709:23"><name pos:start="709:10" pos:end="709:23">CPU_PPC_750CXR</name></expr>:</case>

        <expr_stmt pos:start="711:9" pos:end="711:29"><expr pos:start="711:9" pos:end="711:28"><call pos:start="711:9" pos:end="711:28"><name pos:start="711:9" pos:end="711:23">gen_spr_generic</name><argument_list pos:start="711:24" pos:end="711:28">(<argument pos:start="711:25" pos:end="711:27"><expr pos:start="711:25" pos:end="711:27"><name pos:start="711:25" pos:end="711:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="713:9" pos:end="713:28"><expr pos:start="713:9" pos:end="713:27"><call pos:start="713:9" pos:end="713:27"><name pos:start="713:9" pos:end="713:22">gen_spr_ne_601</name><argument_list pos:start="713:23" pos:end="713:27">(<argument pos:start="713:24" pos:end="713:26"><expr pos:start="713:24" pos:end="713:26"><name pos:start="713:24" pos:end="713:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="715:9" pos:end="715:31">/* Memory management */</comment>

        <expr_stmt pos:start="717:9" pos:end="717:26"><expr pos:start="717:9" pos:end="717:25"><call pos:start="717:9" pos:end="717:25"><name pos:start="717:9" pos:end="717:20">gen_low_BATs</name><argument_list pos:start="717:21" pos:end="717:25">(<argument pos:start="717:22" pos:end="717:24"><expr pos:start="717:22" pos:end="717:24"><name pos:start="717:22" pos:end="717:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="719:9" pos:end="719:23">/* Time base */</comment>

        <expr_stmt pos:start="721:9" pos:end="721:21"><expr pos:start="721:9" pos:end="721:20"><call pos:start="721:9" pos:end="721:20"><name pos:start="721:9" pos:end="721:15">gen_tbl</name><argument_list pos:start="721:16" pos:end="721:20">(<argument pos:start="721:17" pos:end="721:19"><expr pos:start="721:17" pos:end="721:19"><name pos:start="721:17" pos:end="721:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="723:9" pos:end="723:25"><expr pos:start="723:9" pos:end="723:24"><call pos:start="723:9" pos:end="723:24"><name pos:start="723:9" pos:end="723:19">gen_spr_7xx</name><argument_list pos:start="723:20" pos:end="723:24">(<argument pos:start="723:21" pos:end="723:23"><expr pos:start="723:21" pos:end="723:23"><name pos:start="723:21" pos:end="723:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="725:9" pos:end="725:47">/* Hardware implementation registers */</comment>

        <comment type="block" pos:start="727:9" pos:end="727:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="729:9" pos:end="735:33"><expr pos:start="729:9" pos:end="735:32"><call pos:start="729:9" pos:end="735:32"><name pos:start="729:9" pos:end="729:20">spr_register</name><argument_list pos:start="729:21" pos:end="735:32">(<argument pos:start="729:22" pos:end="729:24"><expr pos:start="729:22" pos:end="729:24"><name pos:start="729:22" pos:end="729:24">env</name></expr></argument>, <argument pos:start="729:27" pos:end="729:34"><expr pos:start="729:27" pos:end="729:34"><name pos:start="729:27" pos:end="729:34">SPR_HID0</name></expr></argument>, <argument pos:start="729:37" pos:end="729:42"><expr pos:start="729:37" pos:end="729:42"><literal type="string" pos:start="729:37" pos:end="729:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="731:22" pos:end="731:33"><expr pos:start="731:22" pos:end="731:33"><name pos:start="731:22" pos:end="731:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="731:36" pos:end="731:47"><expr pos:start="731:36" pos:end="731:47"><name pos:start="731:36" pos:end="731:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="733:22" pos:end="733:38"><expr pos:start="733:22" pos:end="733:38"><operator pos:start="733:22" pos:end="733:22">&amp;</operator><name pos:start="733:23" pos:end="733:38">spr_read_generic</name></expr></argument>, <argument pos:start="733:41" pos:end="733:58"><expr pos:start="733:41" pos:end="733:58"><operator pos:start="733:41" pos:end="733:41">&amp;</operator><name pos:start="733:42" pos:end="733:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="735:22" pos:end="735:31"><expr pos:start="735:22" pos:end="735:31"><literal type="number" pos:start="735:22" pos:end="735:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="737:9" pos:end="737:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="739:9" pos:end="745:33"><expr pos:start="739:9" pos:end="745:32"><call pos:start="739:9" pos:end="745:32"><name pos:start="739:9" pos:end="739:20">spr_register</name><argument_list pos:start="739:21" pos:end="745:32">(<argument pos:start="739:22" pos:end="739:24"><expr pos:start="739:22" pos:end="739:24"><name pos:start="739:22" pos:end="739:24">env</name></expr></argument>, <argument pos:start="739:27" pos:end="739:34"><expr pos:start="739:27" pos:end="739:34"><name pos:start="739:27" pos:end="739:34">SPR_HID1</name></expr></argument>, <argument pos:start="739:37" pos:end="739:42"><expr pos:start="739:37" pos:end="739:42"><literal type="string" pos:start="739:37" pos:end="739:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="741:22" pos:end="741:33"><expr pos:start="741:22" pos:end="741:33"><name pos:start="741:22" pos:end="741:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="741:36" pos:end="741:47"><expr pos:start="741:36" pos:end="741:47"><name pos:start="741:36" pos:end="741:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="743:22" pos:end="743:38"><expr pos:start="743:22" pos:end="743:38"><operator pos:start="743:22" pos:end="743:22">&amp;</operator><name pos:start="743:23" pos:end="743:38">spr_read_generic</name></expr></argument>, <argument pos:start="743:41" pos:end="743:58"><expr pos:start="743:41" pos:end="743:58"><operator pos:start="743:41" pos:end="743:41">&amp;</operator><name pos:start="743:42" pos:end="743:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="745:22" pos:end="745:31"><expr pos:start="745:22" pos:end="745:31"><literal type="number" pos:start="745:22" pos:end="745:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="747:9" pos:end="747:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="749:9" pos:end="749:29"><expr pos:start="749:9" pos:end="749:28"><call pos:start="749:9" pos:end="749:28"><name pos:start="749:9" pos:end="749:23">ppc6xx_irq_init</name><argument_list pos:start="749:24" pos:end="749:28">(<argument pos:start="749:25" pos:end="749:27"><expr pos:start="749:25" pos:end="749:27"><name pos:start="749:25" pos:end="749:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="751:9" pos:end="751:14">break;</break>



    <case pos:start="755:5" pos:end="755:25">case <expr pos:start="755:10" pos:end="755:24"><name pos:start="755:10" pos:end="755:24">CPU_PPC_750FX10</name></expr>:</case> <comment type="block" pos:start="755:27" pos:end="755:61">/* IBM PowerPC 750 FX            */</comment>

    <case pos:start="757:5" pos:end="757:25">case <expr pos:start="757:10" pos:end="757:24"><name pos:start="757:10" pos:end="757:24">CPU_PPC_750FX20</name></expr>:</case>

    <case pos:start="759:5" pos:end="759:25">case <expr pos:start="759:10" pos:end="759:24"><name pos:start="759:10" pos:end="759:24">CPU_PPC_750FX21</name></expr>:</case>

    <case pos:start="761:5" pos:end="761:25">case <expr pos:start="761:10" pos:end="761:24"><name pos:start="761:10" pos:end="761:24">CPU_PPC_750FX22</name></expr>:</case>

    <case pos:start="763:5" pos:end="763:25">case <expr pos:start="763:10" pos:end="763:24"><name pos:start="763:10" pos:end="763:24">CPU_PPC_750FX23</name></expr>:</case>

    <case pos:start="765:5" pos:end="765:25">case <expr pos:start="765:10" pos:end="765:24"><name pos:start="765:10" pos:end="765:24">CPU_PPC_750GX10</name></expr>:</case> <comment type="block" pos:start="765:27" pos:end="765:61">/* IBM PowerPC 750 GX            */</comment>

    <case pos:start="767:5" pos:end="767:25">case <expr pos:start="767:10" pos:end="767:24"><name pos:start="767:10" pos:end="767:24">CPU_PPC_750GX11</name></expr>:</case>

    <case pos:start="769:5" pos:end="769:25">case <expr pos:start="769:10" pos:end="769:24"><name pos:start="769:10" pos:end="769:24">CPU_PPC_750GX12</name></expr>:</case>

        <expr_stmt pos:start="771:9" pos:end="771:29"><expr pos:start="771:9" pos:end="771:28"><call pos:start="771:9" pos:end="771:28"><name pos:start="771:9" pos:end="771:23">gen_spr_generic</name><argument_list pos:start="771:24" pos:end="771:28">(<argument pos:start="771:25" pos:end="771:27"><expr pos:start="771:25" pos:end="771:27"><name pos:start="771:25" pos:end="771:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="773:9" pos:end="773:28"><expr pos:start="773:9" pos:end="773:27"><call pos:start="773:9" pos:end="773:27"><name pos:start="773:9" pos:end="773:22">gen_spr_ne_601</name><argument_list pos:start="773:23" pos:end="773:27">(<argument pos:start="773:24" pos:end="773:26"><expr pos:start="773:24" pos:end="773:26"><name pos:start="773:24" pos:end="773:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="775:9" pos:end="775:31">/* Memory management */</comment>

        <expr_stmt pos:start="777:9" pos:end="777:26"><expr pos:start="777:9" pos:end="777:25"><call pos:start="777:9" pos:end="777:25"><name pos:start="777:9" pos:end="777:20">gen_low_BATs</name><argument_list pos:start="777:21" pos:end="777:25">(<argument pos:start="777:22" pos:end="777:24"><expr pos:start="777:22" pos:end="777:24"><name pos:start="777:22" pos:end="777:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="779:9" pos:end="779:59">/* PowerPC 750fx &amp; 750gx has 8 DBATs and 8 IBATs */</comment>

        <expr_stmt pos:start="781:9" pos:end="781:27"><expr pos:start="781:9" pos:end="781:26"><call pos:start="781:9" pos:end="781:26"><name pos:start="781:9" pos:end="781:21">gen_high_BATs</name><argument_list pos:start="781:22" pos:end="781:26">(<argument pos:start="781:23" pos:end="781:25"><expr pos:start="781:23" pos:end="781:25"><name pos:start="781:23" pos:end="781:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="783:9" pos:end="783:23">/* Time base */</comment>

        <expr_stmt pos:start="785:9" pos:end="785:21"><expr pos:start="785:9" pos:end="785:20"><call pos:start="785:9" pos:end="785:20"><name pos:start="785:9" pos:end="785:15">gen_tbl</name><argument_list pos:start="785:16" pos:end="785:20">(<argument pos:start="785:17" pos:end="785:19"><expr pos:start="785:17" pos:end="785:19"><name pos:start="785:17" pos:end="785:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:25"><expr pos:start="787:9" pos:end="787:24"><call pos:start="787:9" pos:end="787:24"><name pos:start="787:9" pos:end="787:19">gen_spr_7xx</name><argument_list pos:start="787:20" pos:end="787:24">(<argument pos:start="787:21" pos:end="787:23"><expr pos:start="787:21" pos:end="787:23"><name pos:start="787:21" pos:end="787:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="789:9" pos:end="789:47">/* Hardware implementation registers */</comment>

        <comment type="block" pos:start="791:9" pos:end="791:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="793:9" pos:end="799:33"><expr pos:start="793:9" pos:end="799:32"><call pos:start="793:9" pos:end="799:32"><name pos:start="793:9" pos:end="793:20">spr_register</name><argument_list pos:start="793:21" pos:end="799:32">(<argument pos:start="793:22" pos:end="793:24"><expr pos:start="793:22" pos:end="793:24"><name pos:start="793:22" pos:end="793:24">env</name></expr></argument>, <argument pos:start="793:27" pos:end="793:34"><expr pos:start="793:27" pos:end="793:34"><name pos:start="793:27" pos:end="793:34">SPR_HID0</name></expr></argument>, <argument pos:start="793:37" pos:end="793:42"><expr pos:start="793:37" pos:end="793:42"><literal type="string" pos:start="793:37" pos:end="793:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="795:22" pos:end="795:33"><expr pos:start="795:22" pos:end="795:33"><name pos:start="795:22" pos:end="795:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="795:36" pos:end="795:47"><expr pos:start="795:36" pos:end="795:47"><name pos:start="795:36" pos:end="795:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="797:22" pos:end="797:38"><expr pos:start="797:22" pos:end="797:38"><operator pos:start="797:22" pos:end="797:22">&amp;</operator><name pos:start="797:23" pos:end="797:38">spr_read_generic</name></expr></argument>, <argument pos:start="797:41" pos:end="797:58"><expr pos:start="797:41" pos:end="797:58"><operator pos:start="797:41" pos:end="797:41">&amp;</operator><name pos:start="797:42" pos:end="797:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="799:22" pos:end="799:31"><expr pos:start="799:22" pos:end="799:31"><literal type="number" pos:start="799:22" pos:end="799:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="801:9" pos:end="801:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="803:9" pos:end="809:33"><expr pos:start="803:9" pos:end="809:32"><call pos:start="803:9" pos:end="809:32"><name pos:start="803:9" pos:end="803:20">spr_register</name><argument_list pos:start="803:21" pos:end="809:32">(<argument pos:start="803:22" pos:end="803:24"><expr pos:start="803:22" pos:end="803:24"><name pos:start="803:22" pos:end="803:24">env</name></expr></argument>, <argument pos:start="803:27" pos:end="803:34"><expr pos:start="803:27" pos:end="803:34"><name pos:start="803:27" pos:end="803:34">SPR_HID1</name></expr></argument>, <argument pos:start="803:37" pos:end="803:42"><expr pos:start="803:37" pos:end="803:42"><literal type="string" pos:start="803:37" pos:end="803:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="805:22" pos:end="805:33"><expr pos:start="805:22" pos:end="805:33"><name pos:start="805:22" pos:end="805:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="805:36" pos:end="805:47"><expr pos:start="805:36" pos:end="805:47"><name pos:start="805:36" pos:end="805:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="807:22" pos:end="807:38"><expr pos:start="807:22" pos:end="807:38"><operator pos:start="807:22" pos:end="807:22">&amp;</operator><name pos:start="807:23" pos:end="807:38">spr_read_generic</name></expr></argument>, <argument pos:start="807:41" pos:end="807:58"><expr pos:start="807:41" pos:end="807:58"><operator pos:start="807:41" pos:end="807:41">&amp;</operator><name pos:start="807:42" pos:end="807:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="809:22" pos:end="809:31"><expr pos:start="809:22" pos:end="809:31"><literal type="number" pos:start="809:22" pos:end="809:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="811:9" pos:end="811:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="813:9" pos:end="819:33"><expr pos:start="813:9" pos:end="819:32"><call pos:start="813:9" pos:end="819:32"><name pos:start="813:9" pos:end="813:20">spr_register</name><argument_list pos:start="813:21" pos:end="819:32">(<argument pos:start="813:22" pos:end="813:24"><expr pos:start="813:22" pos:end="813:24"><name pos:start="813:22" pos:end="813:24">env</name></expr></argument>, <argument pos:start="813:27" pos:end="813:38"><expr pos:start="813:27" pos:end="813:38"><name pos:start="813:27" pos:end="813:38">SPR_750_HID2</name></expr></argument>, <argument pos:start="813:41" pos:end="813:46"><expr pos:start="813:41" pos:end="813:46"><literal type="string" pos:start="813:41" pos:end="813:46">"HID2"</literal></expr></argument>,

                     <argument pos:start="815:22" pos:end="815:33"><expr pos:start="815:22" pos:end="815:33"><name pos:start="815:22" pos:end="815:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="815:36" pos:end="815:47"><expr pos:start="815:36" pos:end="815:47"><name pos:start="815:36" pos:end="815:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="817:22" pos:end="817:38"><expr pos:start="817:22" pos:end="817:38"><operator pos:start="817:22" pos:end="817:22">&amp;</operator><name pos:start="817:23" pos:end="817:38">spr_read_generic</name></expr></argument>, <argument pos:start="817:41" pos:end="817:58"><expr pos:start="817:41" pos:end="817:58"><operator pos:start="817:41" pos:end="817:41">&amp;</operator><name pos:start="817:42" pos:end="817:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="819:22" pos:end="819:31"><expr pos:start="819:22" pos:end="819:31"><literal type="number" pos:start="819:22" pos:end="819:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="821:9" pos:end="821:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="823:9" pos:end="823:29"><expr pos:start="823:9" pos:end="823:28"><call pos:start="823:9" pos:end="823:28"><name pos:start="823:9" pos:end="823:23">ppc6xx_irq_init</name><argument_list pos:start="823:24" pos:end="823:28">(<argument pos:start="823:25" pos:end="823:27"><expr pos:start="823:25" pos:end="823:27"><name pos:start="823:25" pos:end="823:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="825:9" pos:end="825:14">break;</break>



    <case pos:start="829:5" pos:end="829:24">case <expr pos:start="829:10" pos:end="829:23"><name pos:start="829:10" pos:end="829:23">CPU_PPC_755_10</name></expr>:</case>  <comment type="block" pos:start="829:27" pos:end="829:61">/* PowerPC 755                   */</comment>

    <case pos:start="831:5" pos:end="831:24">case <expr pos:start="831:10" pos:end="831:23"><name pos:start="831:10" pos:end="831:23">CPU_PPC_755_11</name></expr>:</case>

    <case pos:start="833:5" pos:end="833:24">case <expr pos:start="833:10" pos:end="833:23"><name pos:start="833:10" pos:end="833:23">CPU_PPC_755_20</name></expr>:</case>

    <case pos:start="835:5" pos:end="835:22">case <expr pos:start="835:10" pos:end="835:21"><name pos:start="835:10" pos:end="835:21">CPU_PPC_755D</name></expr>:</case>

    <case pos:start="837:5" pos:end="837:22">case <expr pos:start="837:10" pos:end="837:21"><name pos:start="837:10" pos:end="837:21">CPU_PPC_755E</name></expr>:</case>

        <expr_stmt pos:start="839:9" pos:end="839:29"><expr pos:start="839:9" pos:end="839:28"><call pos:start="839:9" pos:end="839:28"><name pos:start="839:9" pos:end="839:23">gen_spr_generic</name><argument_list pos:start="839:24" pos:end="839:28">(<argument pos:start="839:25" pos:end="839:27"><expr pos:start="839:25" pos:end="839:27"><name pos:start="839:25" pos:end="839:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="841:9" pos:end="841:28"><expr pos:start="841:9" pos:end="841:27"><call pos:start="841:9" pos:end="841:27"><name pos:start="841:9" pos:end="841:22">gen_spr_ne_601</name><argument_list pos:start="841:23" pos:end="841:27">(<argument pos:start="841:24" pos:end="841:26"><expr pos:start="841:24" pos:end="841:26"><name pos:start="841:24" pos:end="841:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="843:9" pos:end="843:31">/* Memory management */</comment>

        <expr_stmt pos:start="845:9" pos:end="845:26"><expr pos:start="845:9" pos:end="845:25"><call pos:start="845:9" pos:end="845:25"><name pos:start="845:9" pos:end="845:20">gen_low_BATs</name><argument_list pos:start="845:21" pos:end="845:25">(<argument pos:start="845:22" pos:end="845:24"><expr pos:start="845:22" pos:end="845:24"><name pos:start="845:22" pos:end="845:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="847:9" pos:end="847:23">/* Time base */</comment>

        <expr_stmt pos:start="849:9" pos:end="849:21"><expr pos:start="849:9" pos:end="849:20"><call pos:start="849:9" pos:end="849:20"><name pos:start="849:9" pos:end="849:15">gen_tbl</name><argument_list pos:start="849:16" pos:end="849:20">(<argument pos:start="849:17" pos:end="849:19"><expr pos:start="849:17" pos:end="849:19"><name pos:start="849:17" pos:end="849:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="851:9" pos:end="851:31">/* Memory management */</comment>

        <expr_stmt pos:start="853:9" pos:end="853:27"><expr pos:start="853:9" pos:end="853:26"><call pos:start="853:9" pos:end="853:26"><name pos:start="853:9" pos:end="853:21">gen_high_BATs</name><argument_list pos:start="853:22" pos:end="853:26">(<argument pos:start="853:23" pos:end="853:25"><expr pos:start="853:23" pos:end="853:25"><name pos:start="853:23" pos:end="853:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="855:9" pos:end="855:41"><expr pos:start="855:9" pos:end="855:40"><call pos:start="855:9" pos:end="855:40"><name pos:start="855:9" pos:end="855:28">gen_6xx_7xx_soft_tlb</name><argument_list pos:start="855:29" pos:end="855:40">(<argument pos:start="855:30" pos:end="855:32"><expr pos:start="855:30" pos:end="855:32"><name pos:start="855:30" pos:end="855:32">env</name></expr></argument>, <argument pos:start="855:35" pos:end="855:36"><expr pos:start="855:35" pos:end="855:36"><literal type="number" pos:start="855:35" pos:end="855:36">64</literal></expr></argument>, <argument pos:start="855:39" pos:end="855:39"><expr pos:start="855:39" pos:end="855:39"><literal type="number" pos:start="855:39" pos:end="855:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:28"><expr pos:start="857:9" pos:end="857:27"><call pos:start="857:9" pos:end="857:27"><name pos:start="857:9" pos:end="857:22">gen_spr_G2_755</name><argument_list pos:start="857:23" pos:end="857:27">(<argument pos:start="857:24" pos:end="857:26"><expr pos:start="857:24" pos:end="857:26"><name pos:start="857:24" pos:end="857:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="859:9" pos:end="859:30">/* L2 cache control */</comment>

        <comment type="block" pos:start="861:9" pos:end="861:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="863:9" pos:end="869:33"><expr pos:start="863:9" pos:end="869:32"><call pos:start="863:9" pos:end="869:32"><name pos:start="863:9" pos:end="863:20">spr_register</name><argument_list pos:start="863:21" pos:end="869:32">(<argument pos:start="863:22" pos:end="863:24"><expr pos:start="863:22" pos:end="863:24"><name pos:start="863:22" pos:end="863:24">env</name></expr></argument>, <argument pos:start="863:27" pos:end="863:34"><expr pos:start="863:27" pos:end="863:34"><name pos:start="863:27" pos:end="863:34">SPR_ICTC</name></expr></argument>, <argument pos:start="863:37" pos:end="863:42"><expr pos:start="863:37" pos:end="863:42"><literal type="string" pos:start="863:37" pos:end="863:42">"ICTC"</literal></expr></argument>,

                     <argument pos:start="865:22" pos:end="865:33"><expr pos:start="865:22" pos:end="865:33"><name pos:start="865:22" pos:end="865:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="865:36" pos:end="865:47"><expr pos:start="865:36" pos:end="865:47"><name pos:start="865:36" pos:end="865:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="867:22" pos:end="867:38"><expr pos:start="867:22" pos:end="867:38"><operator pos:start="867:22" pos:end="867:22">&amp;</operator><name pos:start="867:23" pos:end="867:38">spr_read_generic</name></expr></argument>, <argument pos:start="867:41" pos:end="867:58"><expr pos:start="867:41" pos:end="867:58"><operator pos:start="867:41" pos:end="867:41">&amp;</operator><name pos:start="867:42" pos:end="867:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="869:22" pos:end="869:31"><expr pos:start="869:22" pos:end="869:31"><literal type="number" pos:start="869:22" pos:end="869:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="871:9" pos:end="871:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="873:9" pos:end="879:33"><expr pos:start="873:9" pos:end="879:32"><call pos:start="873:9" pos:end="879:32"><name pos:start="873:9" pos:end="873:20">spr_register</name><argument_list pos:start="873:21" pos:end="879:32">(<argument pos:start="873:22" pos:end="873:24"><expr pos:start="873:22" pos:end="873:24"><name pos:start="873:22" pos:end="873:24">env</name></expr></argument>, <argument pos:start="873:27" pos:end="873:34"><expr pos:start="873:27" pos:end="873:34"><name pos:start="873:27" pos:end="873:34">SPR_L2PM</name></expr></argument>, <argument pos:start="873:37" pos:end="873:42"><expr pos:start="873:37" pos:end="873:42"><literal type="string" pos:start="873:37" pos:end="873:42">"L2PM"</literal></expr></argument>,

                     <argument pos:start="875:22" pos:end="875:33"><expr pos:start="875:22" pos:end="875:33"><name pos:start="875:22" pos:end="875:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="875:36" pos:end="875:47"><expr pos:start="875:36" pos:end="875:47"><name pos:start="875:36" pos:end="875:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="877:22" pos:end="877:38"><expr pos:start="877:22" pos:end="877:38"><operator pos:start="877:22" pos:end="877:22">&amp;</operator><name pos:start="877:23" pos:end="877:38">spr_read_generic</name></expr></argument>, <argument pos:start="877:41" pos:end="877:58"><expr pos:start="877:41" pos:end="877:58"><operator pos:start="877:41" pos:end="877:41">&amp;</operator><name pos:start="877:42" pos:end="877:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="879:22" pos:end="879:31"><expr pos:start="879:22" pos:end="879:31"><literal type="number" pos:start="879:22" pos:end="879:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="881:9" pos:end="881:47">/* Hardware implementation registers */</comment>

        <comment type="block" pos:start="883:9" pos:end="883:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="885:9" pos:end="891:33"><expr pos:start="885:9" pos:end="891:32"><call pos:start="885:9" pos:end="891:32"><name pos:start="885:9" pos:end="885:20">spr_register</name><argument_list pos:start="885:21" pos:end="891:32">(<argument pos:start="885:22" pos:end="885:24"><expr pos:start="885:22" pos:end="885:24"><name pos:start="885:22" pos:end="885:24">env</name></expr></argument>, <argument pos:start="885:27" pos:end="885:34"><expr pos:start="885:27" pos:end="885:34"><name pos:start="885:27" pos:end="885:34">SPR_HID0</name></expr></argument>, <argument pos:start="885:37" pos:end="885:42"><expr pos:start="885:37" pos:end="885:42"><literal type="string" pos:start="885:37" pos:end="885:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="887:22" pos:end="887:33"><expr pos:start="887:22" pos:end="887:33"><name pos:start="887:22" pos:end="887:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="887:36" pos:end="887:47"><expr pos:start="887:36" pos:end="887:47"><name pos:start="887:36" pos:end="887:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="889:22" pos:end="889:38"><expr pos:start="889:22" pos:end="889:38"><operator pos:start="889:22" pos:end="889:22">&amp;</operator><name pos:start="889:23" pos:end="889:38">spr_read_generic</name></expr></argument>, <argument pos:start="889:41" pos:end="889:58"><expr pos:start="889:41" pos:end="889:58"><operator pos:start="889:41" pos:end="889:41">&amp;</operator><name pos:start="889:42" pos:end="889:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="891:22" pos:end="891:31"><expr pos:start="891:22" pos:end="891:31"><literal type="number" pos:start="891:22" pos:end="891:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="893:9" pos:end="893:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="895:9" pos:end="901:33"><expr pos:start="895:9" pos:end="901:32"><call pos:start="895:9" pos:end="901:32"><name pos:start="895:9" pos:end="895:20">spr_register</name><argument_list pos:start="895:21" pos:end="901:32">(<argument pos:start="895:22" pos:end="895:24"><expr pos:start="895:22" pos:end="895:24"><name pos:start="895:22" pos:end="895:24">env</name></expr></argument>, <argument pos:start="895:27" pos:end="895:34"><expr pos:start="895:27" pos:end="895:34"><name pos:start="895:27" pos:end="895:34">SPR_HID1</name></expr></argument>, <argument pos:start="895:37" pos:end="895:42"><expr pos:start="895:37" pos:end="895:42"><literal type="string" pos:start="895:37" pos:end="895:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="897:22" pos:end="897:33"><expr pos:start="897:22" pos:end="897:33"><name pos:start="897:22" pos:end="897:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="897:36" pos:end="897:47"><expr pos:start="897:36" pos:end="897:47"><name pos:start="897:36" pos:end="897:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="899:22" pos:end="899:38"><expr pos:start="899:22" pos:end="899:38"><operator pos:start="899:22" pos:end="899:22">&amp;</operator><name pos:start="899:23" pos:end="899:38">spr_read_generic</name></expr></argument>, <argument pos:start="899:41" pos:end="899:58"><expr pos:start="899:41" pos:end="899:58"><operator pos:start="899:41" pos:end="899:41">&amp;</operator><name pos:start="899:42" pos:end="899:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="901:22" pos:end="901:31"><expr pos:start="901:22" pos:end="901:31"><literal type="number" pos:start="901:22" pos:end="901:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="903:9" pos:end="903:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="905:9" pos:end="911:33"><expr pos:start="905:9" pos:end="911:32"><call pos:start="905:9" pos:end="911:32"><name pos:start="905:9" pos:end="905:20">spr_register</name><argument_list pos:start="905:21" pos:end="911:32">(<argument pos:start="905:22" pos:end="905:24"><expr pos:start="905:22" pos:end="905:24"><name pos:start="905:22" pos:end="905:24">env</name></expr></argument>, <argument pos:start="905:27" pos:end="905:34"><expr pos:start="905:27" pos:end="905:34"><name pos:start="905:27" pos:end="905:34">SPR_HID2</name></expr></argument>, <argument pos:start="905:37" pos:end="905:42"><expr pos:start="905:37" pos:end="905:42"><literal type="string" pos:start="905:37" pos:end="905:42">"HID2"</literal></expr></argument>,

                     <argument pos:start="907:22" pos:end="907:33"><expr pos:start="907:22" pos:end="907:33"><name pos:start="907:22" pos:end="907:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="907:36" pos:end="907:47"><expr pos:start="907:36" pos:end="907:47"><name pos:start="907:36" pos:end="907:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="909:22" pos:end="909:38"><expr pos:start="909:22" pos:end="909:38"><operator pos:start="909:22" pos:end="909:22">&amp;</operator><name pos:start="909:23" pos:end="909:38">spr_read_generic</name></expr></argument>, <argument pos:start="909:41" pos:end="909:58"><expr pos:start="909:41" pos:end="909:58"><operator pos:start="909:41" pos:end="909:41">&amp;</operator><name pos:start="909:42" pos:end="909:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="911:22" pos:end="911:31"><expr pos:start="911:22" pos:end="911:31"><literal type="number" pos:start="911:22" pos:end="911:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="913:9" pos:end="913:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="915:9" pos:end="915:29"><expr pos:start="915:9" pos:end="915:28"><call pos:start="915:9" pos:end="915:28"><name pos:start="915:9" pos:end="915:23">ppc6xx_irq_init</name><argument_list pos:start="915:24" pos:end="915:28">(<argument pos:start="915:25" pos:end="915:27"><expr pos:start="915:25" pos:end="915:27"><name pos:start="915:25" pos:end="915:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="917:9" pos:end="922:0">break;</break>



<cpp:if pos:start="921:1" pos:end="921:18">#<cpp:directive pos:start="921:2" pos:end="921:3">if</cpp:directive> <expr pos:start="921:5" pos:end="921:18"><call pos:start="921:5" pos:end="921:18"><name pos:start="921:5" pos:end="921:11">defined</name> <argument_list pos:start="921:13" pos:end="921:18">(<argument pos:start="921:14" pos:end="921:17"><expr pos:start="921:14" pos:end="921:17"><name pos:start="921:14" pos:end="921:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="923:5" pos:end="923:19">/* G4 family */</comment>

    <case pos:start="925:5" pos:end="925:22">case <expr pos:start="925:10" pos:end="925:21"><name pos:start="925:10" pos:end="925:21">CPU_PPC_7400</name></expr>:</case>    <comment type="block" pos:start="925:27" pos:end="925:61">/* PowerPC 7400                  */</comment>

    <case pos:start="927:5" pos:end="927:23">case <expr pos:start="927:10" pos:end="927:22"><name pos:start="927:10" pos:end="927:22">CPU_PPC_7410C</name></expr>:</case>   <comment type="block" pos:start="927:27" pos:end="927:61">/* PowerPC 7410                  */</comment>

    <case pos:start="929:5" pos:end="929:23">case <expr pos:start="929:10" pos:end="929:22"><name pos:start="929:10" pos:end="929:22">CPU_PPC_7410D</name></expr>:</case>

    <case pos:start="931:5" pos:end="931:23">case <expr pos:start="931:10" pos:end="931:22"><name pos:start="931:10" pos:end="931:22">CPU_PPC_7410E</name></expr>:</case>

    <case pos:start="933:5" pos:end="933:22">case <expr pos:start="933:10" pos:end="933:21"><name pos:start="933:10" pos:end="933:21">CPU_PPC_7441</name></expr>:</case>    <comment type="block" pos:start="933:27" pos:end="933:61">/* PowerPC 7441                  */</comment>

    <case pos:start="935:5" pos:end="935:22">case <expr pos:start="935:10" pos:end="935:21"><name pos:start="935:10" pos:end="935:21">CPU_PPC_7445</name></expr>:</case>    <comment type="block" pos:start="935:27" pos:end="935:61">/* PowerPC 7445                  */</comment>

    <case pos:start="937:5" pos:end="937:22">case <expr pos:start="937:10" pos:end="937:21"><name pos:start="937:10" pos:end="937:21">CPU_PPC_7447</name></expr>:</case>    <comment type="block" pos:start="937:27" pos:end="937:61">/* PowerPC 7447                  */</comment>

    <case pos:start="939:5" pos:end="939:23">case <expr pos:start="939:10" pos:end="939:22"><name pos:start="939:10" pos:end="939:22">CPU_PPC_7447A</name></expr>:</case>   <comment type="block" pos:start="939:27" pos:end="939:61">/* PowerPC 7447A                 */</comment>

    <case pos:start="941:5" pos:end="941:22">case <expr pos:start="941:10" pos:end="941:21"><name pos:start="941:10" pos:end="941:21">CPU_PPC_7448</name></expr>:</case>    <comment type="block" pos:start="941:27" pos:end="941:61">/* PowerPC 7448                  */</comment>

    <case pos:start="943:5" pos:end="943:22">case <expr pos:start="943:10" pos:end="943:21"><name pos:start="943:10" pos:end="943:21">CPU_PPC_7450</name></expr>:</case>    <comment type="block" pos:start="943:27" pos:end="943:61">/* PowerPC 7450                  */</comment>

    <case pos:start="945:5" pos:end="945:23">case <expr pos:start="945:10" pos:end="945:22"><name pos:start="945:10" pos:end="945:22">CPU_PPC_7450b</name></expr>:</case>

    <case pos:start="947:5" pos:end="947:22">case <expr pos:start="947:10" pos:end="947:21"><name pos:start="947:10" pos:end="947:21">CPU_PPC_7451</name></expr>:</case>    <comment type="block" pos:start="947:27" pos:end="947:61">/* PowerPC 7451                  */</comment>

    <case pos:start="949:5" pos:end="949:23">case <expr pos:start="949:10" pos:end="949:22"><name pos:start="949:10" pos:end="949:22">CPU_PPC_7451G</name></expr>:</case>

    <case pos:start="951:5" pos:end="951:22">case <expr pos:start="951:10" pos:end="951:21"><name pos:start="951:10" pos:end="951:21">CPU_PPC_7455</name></expr>:</case>    <comment type="block" pos:start="951:27" pos:end="951:61">/* PowerPC 7455                  */</comment>

    <case pos:start="953:5" pos:end="953:23">case <expr pos:start="953:10" pos:end="953:22"><name pos:start="953:10" pos:end="953:22">CPU_PPC_7455F</name></expr>:</case>

    <case pos:start="955:5" pos:end="955:23">case <expr pos:start="955:10" pos:end="955:22"><name pos:start="955:10" pos:end="955:22">CPU_PPC_7455G</name></expr>:</case>

    <case pos:start="957:5" pos:end="957:22">case <expr pos:start="957:10" pos:end="957:21"><name pos:start="957:10" pos:end="957:21">CPU_PPC_7457</name></expr>:</case>    <comment type="block" pos:start="957:27" pos:end="957:61">/* PowerPC 7457                  */</comment>

    <case pos:start="959:5" pos:end="959:23">case <expr pos:start="959:10" pos:end="959:22"><name pos:start="959:10" pos:end="959:22">CPU_PPC_7457C</name></expr>:</case>

    <case pos:start="961:5" pos:end="961:23">case <expr pos:start="961:10" pos:end="961:22"><name pos:start="961:10" pos:end="961:22">CPU_PPC_7457A</name></expr>:</case>   <comment type="block" pos:start="961:27" pos:end="961:61">/* PowerPC 7457A                 */</comment>

        <break pos:start="963:9" pos:end="974:0">break;</break>

<cpp:endif pos:start="965:1" pos:end="965:6">#<cpp:directive pos:start="965:2" pos:end="965:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="969:5" pos:end="969:61">/* 64 bits PowerPC                                     */</comment>

<cpp:if pos:start="971:1" pos:end="971:26">#<cpp:directive pos:start="971:2" pos:end="971:3">if</cpp:directive> <expr pos:start="971:5" pos:end="971:26"><call pos:start="971:5" pos:end="971:26"><name pos:start="971:5" pos:end="971:11">defined</name> <argument_list pos:start="971:13" pos:end="971:26">(<argument pos:start="971:14" pos:end="971:25"><expr pos:start="971:14" pos:end="971:25"><name pos:start="971:14" pos:end="971:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if pos:start="973:1" pos:end="973:18">#<cpp:directive pos:start="973:2" pos:end="973:3">if</cpp:directive> <expr pos:start="973:5" pos:end="973:18"><call pos:start="973:5" pos:end="973:18"><name pos:start="973:5" pos:end="973:11">defined</name> <argument_list pos:start="973:13" pos:end="973:18">(<argument pos:start="973:14" pos:end="973:17"><expr pos:start="973:14" pos:end="973:17"><name pos:start="973:14" pos:end="973:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="975:5" pos:end="975:21">case <expr pos:start="975:10" pos:end="975:20"><name pos:start="975:10" pos:end="975:20">CPU_PPC_620</name></expr>:</case>     <comment type="block" pos:start="975:27" pos:end="975:61">/* PowerPC 620                   */</comment>

    <case pos:start="977:5" pos:end="977:21">case <expr pos:start="977:10" pos:end="977:20"><name pos:start="977:10" pos:end="977:20">CPU_PPC_630</name></expr>:</case>     <comment type="block" pos:start="977:27" pos:end="977:61">/* PowerPC 630 (Power 3)         */</comment>

    <case pos:start="979:5" pos:end="979:21">case <expr pos:start="979:10" pos:end="979:20"><name pos:start="979:10" pos:end="979:20">CPU_PPC_631</name></expr>:</case>     <comment type="block" pos:start="979:27" pos:end="979:61">/* PowerPC 631 (Power 3+)        */</comment>

    <case pos:start="981:5" pos:end="981:24">case <expr pos:start="981:10" pos:end="981:23"><name pos:start="981:10" pos:end="981:23">CPU_PPC_POWER4</name></expr>:</case>  <comment type="block" pos:start="981:27" pos:end="981:61">/* Power 4                       */</comment>

    <case pos:start="983:5" pos:end="983:25">case <expr pos:start="983:10" pos:end="983:24"><name pos:start="983:10" pos:end="983:24">CPU_PPC_POWER4P</name></expr>:</case> <comment type="block" pos:start="983:27" pos:end="983:61">/* Power 4+                      */</comment>

    <case pos:start="985:5" pos:end="985:24">case <expr pos:start="985:10" pos:end="985:23"><name pos:start="985:10" pos:end="985:23">CPU_PPC_POWER5</name></expr>:</case>  <comment type="block" pos:start="985:27" pos:end="985:61">/* Power 5                       */</comment>

    <case pos:start="987:5" pos:end="990:0">case <expr pos:start="987:10" pos:end="987:24"><name pos:start="987:10" pos:end="987:24">CPU_PPC_POWER5P</name></expr>:</case> <comment type="block" pos:start="987:27" pos:end="987:61">/* Power 5+                      */</comment>

<cpp:endif pos:start="989:1" pos:end="989:6">#<cpp:directive pos:start="989:2" pos:end="989:6">endif</cpp:directive></cpp:endif>

        <break pos:start="991:9" pos:end="991:14">break;</break>



    <case pos:start="995:5" pos:end="995:21">case <expr pos:start="995:10" pos:end="995:20"><name pos:start="995:10" pos:end="995:20">CPU_PPC_970</name></expr>:</case>     <comment type="block" pos:start="995:27" pos:end="995:61">/* PowerPC 970                   */</comment>

    <case pos:start="997:5" pos:end="997:25">case <expr pos:start="997:10" pos:end="997:24"><name pos:start="997:10" pos:end="997:24">CPU_PPC_970FX10</name></expr>:</case> <comment type="block" pos:start="997:27" pos:end="997:61">/* PowerPC 970 FX                */</comment>

    <case pos:start="999:5" pos:end="999:25">case <expr pos:start="999:10" pos:end="999:24"><name pos:start="999:10" pos:end="999:24">CPU_PPC_970FX20</name></expr>:</case>

    <case pos:start="1001:5" pos:end="1001:25">case <expr pos:start="1001:10" pos:end="1001:24"><name pos:start="1001:10" pos:end="1001:24">CPU_PPC_970FX21</name></expr>:</case>

    <case pos:start="1003:5" pos:end="1003:25">case <expr pos:start="1003:10" pos:end="1003:24"><name pos:start="1003:10" pos:end="1003:24">CPU_PPC_970FX30</name></expr>:</case>

    <case pos:start="1005:5" pos:end="1005:25">case <expr pos:start="1005:10" pos:end="1005:24"><name pos:start="1005:10" pos:end="1005:24">CPU_PPC_970FX31</name></expr>:</case>

    <case pos:start="1007:5" pos:end="1007:25">case <expr pos:start="1007:10" pos:end="1007:24"><name pos:start="1007:10" pos:end="1007:24">CPU_PPC_970MP10</name></expr>:</case> <comment type="block" pos:start="1007:27" pos:end="1007:61">/* PowerPC 970 MP                */</comment>

    <case pos:start="1009:5" pos:end="1009:25">case <expr pos:start="1009:10" pos:end="1009:24"><name pos:start="1009:10" pos:end="1009:24">CPU_PPC_970MP11</name></expr>:</case>

        <expr_stmt pos:start="1011:9" pos:end="1011:29"><expr pos:start="1011:9" pos:end="1011:28"><call pos:start="1011:9" pos:end="1011:28"><name pos:start="1011:9" pos:end="1011:23">gen_spr_generic</name><argument_list pos:start="1011:24" pos:end="1011:28">(<argument pos:start="1011:25" pos:end="1011:27"><expr pos:start="1011:25" pos:end="1011:27"><name pos:start="1011:25" pos:end="1011:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1013:9" pos:end="1013:28"><expr pos:start="1013:9" pos:end="1013:27"><call pos:start="1013:9" pos:end="1013:27"><name pos:start="1013:9" pos:end="1013:22">gen_spr_ne_601</name><argument_list pos:start="1013:23" pos:end="1013:27">(<argument pos:start="1013:24" pos:end="1013:26"><expr pos:start="1013:24" pos:end="1013:26"><name pos:start="1013:24" pos:end="1013:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1015:9" pos:end="1015:30">/* XXX: not correct */</comment>

        <expr_stmt pos:start="1017:9" pos:end="1017:26"><expr pos:start="1017:9" pos:end="1017:25"><call pos:start="1017:9" pos:end="1017:25"><name pos:start="1017:9" pos:end="1017:20">gen_low_BATs</name><argument_list pos:start="1017:21" pos:end="1017:25">(<argument pos:start="1017:22" pos:end="1017:24"><expr pos:start="1017:22" pos:end="1017:24"><name pos:start="1017:22" pos:end="1017:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1019:9" pos:end="1019:23">/* Time base */</comment>

        <expr_stmt pos:start="1021:9" pos:end="1021:21"><expr pos:start="1021:9" pos:end="1021:20"><call pos:start="1021:9" pos:end="1021:20"><name pos:start="1021:9" pos:end="1021:15">gen_tbl</name><argument_list pos:start="1021:16" pos:end="1021:20">(<argument pos:start="1021:17" pos:end="1021:19"><expr pos:start="1021:17" pos:end="1021:19"><name pos:start="1021:17" pos:end="1021:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1023:9" pos:end="1023:25"><expr pos:start="1023:9" pos:end="1023:24"><call pos:start="1023:9" pos:end="1023:24"><name pos:start="1023:9" pos:end="1023:19">gen_spr_7xx</name><argument_list pos:start="1023:20" pos:end="1023:24">(<argument pos:start="1023:21" pos:end="1023:23"><expr pos:start="1023:21" pos:end="1023:23"><name pos:start="1023:21" pos:end="1023:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1025:9" pos:end="1025:47">/* Hardware implementation registers */</comment>

        <comment type="block" pos:start="1027:9" pos:end="1027:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="1029:9" pos:end="1035:33"><expr pos:start="1029:9" pos:end="1035:32"><call pos:start="1029:9" pos:end="1035:32"><name pos:start="1029:9" pos:end="1029:20">spr_register</name><argument_list pos:start="1029:21" pos:end="1035:32">(<argument pos:start="1029:22" pos:end="1029:24"><expr pos:start="1029:22" pos:end="1029:24"><name pos:start="1029:22" pos:end="1029:24">env</name></expr></argument>, <argument pos:start="1029:27" pos:end="1029:34"><expr pos:start="1029:27" pos:end="1029:34"><name pos:start="1029:27" pos:end="1029:34">SPR_HID0</name></expr></argument>, <argument pos:start="1029:37" pos:end="1029:42"><expr pos:start="1029:37" pos:end="1029:42"><literal type="string" pos:start="1029:37" pos:end="1029:42">"HID0"</literal></expr></argument>,

                     <argument pos:start="1031:22" pos:end="1031:33"><expr pos:start="1031:22" pos:end="1031:33"><name pos:start="1031:22" pos:end="1031:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="1031:36" pos:end="1031:47"><expr pos:start="1031:36" pos:end="1031:47"><name pos:start="1031:36" pos:end="1031:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="1033:22" pos:end="1033:38"><expr pos:start="1033:22" pos:end="1033:38"><operator pos:start="1033:22" pos:end="1033:22">&amp;</operator><name pos:start="1033:23" pos:end="1033:38">spr_read_generic</name></expr></argument>, <argument pos:start="1033:41" pos:end="1033:58"><expr pos:start="1033:41" pos:end="1033:58"><operator pos:start="1033:41" pos:end="1033:41">&amp;</operator><name pos:start="1033:42" pos:end="1033:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="1035:22" pos:end="1035:31"><expr pos:start="1035:22" pos:end="1035:31"><literal type="number" pos:start="1035:22" pos:end="1035:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1037:9" pos:end="1037:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="1039:9" pos:end="1045:33"><expr pos:start="1039:9" pos:end="1045:32"><call pos:start="1039:9" pos:end="1045:32"><name pos:start="1039:9" pos:end="1039:20">spr_register</name><argument_list pos:start="1039:21" pos:end="1045:32">(<argument pos:start="1039:22" pos:end="1039:24"><expr pos:start="1039:22" pos:end="1039:24"><name pos:start="1039:22" pos:end="1039:24">env</name></expr></argument>, <argument pos:start="1039:27" pos:end="1039:34"><expr pos:start="1039:27" pos:end="1039:34"><name pos:start="1039:27" pos:end="1039:34">SPR_HID1</name></expr></argument>, <argument pos:start="1039:37" pos:end="1039:42"><expr pos:start="1039:37" pos:end="1039:42"><literal type="string" pos:start="1039:37" pos:end="1039:42">"HID1"</literal></expr></argument>,

                     <argument pos:start="1041:22" pos:end="1041:33"><expr pos:start="1041:22" pos:end="1041:33"><name pos:start="1041:22" pos:end="1041:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="1041:36" pos:end="1041:47"><expr pos:start="1041:36" pos:end="1041:47"><name pos:start="1041:36" pos:end="1041:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="1043:22" pos:end="1043:38"><expr pos:start="1043:22" pos:end="1043:38"><operator pos:start="1043:22" pos:end="1043:22">&amp;</operator><name pos:start="1043:23" pos:end="1043:38">spr_read_generic</name></expr></argument>, <argument pos:start="1043:41" pos:end="1043:58"><expr pos:start="1043:41" pos:end="1043:58"><operator pos:start="1043:41" pos:end="1043:41">&amp;</operator><name pos:start="1043:42" pos:end="1043:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="1045:22" pos:end="1045:31"><expr pos:start="1045:22" pos:end="1045:31"><literal type="number" pos:start="1045:22" pos:end="1045:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1047:9" pos:end="1047:35">/* XXX : not implemented */</comment>

        <expr_stmt pos:start="1049:9" pos:end="1055:33"><expr pos:start="1049:9" pos:end="1055:32"><call pos:start="1049:9" pos:end="1055:32"><name pos:start="1049:9" pos:end="1049:20">spr_register</name><argument_list pos:start="1049:21" pos:end="1055:32">(<argument pos:start="1049:22" pos:end="1049:24"><expr pos:start="1049:22" pos:end="1049:24"><name pos:start="1049:22" pos:end="1049:24">env</name></expr></argument>, <argument pos:start="1049:27" pos:end="1049:38"><expr pos:start="1049:27" pos:end="1049:38"><name pos:start="1049:27" pos:end="1049:38">SPR_750_HID2</name></expr></argument>, <argument pos:start="1049:41" pos:end="1049:46"><expr pos:start="1049:41" pos:end="1049:46"><literal type="string" pos:start="1049:41" pos:end="1049:46">"HID2"</literal></expr></argument>,

                     <argument pos:start="1051:22" pos:end="1051:33"><expr pos:start="1051:22" pos:end="1051:33"><name pos:start="1051:22" pos:end="1051:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="1051:36" pos:end="1051:47"><expr pos:start="1051:36" pos:end="1051:47"><name pos:start="1051:36" pos:end="1051:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="1053:22" pos:end="1053:38"><expr pos:start="1053:22" pos:end="1053:38"><operator pos:start="1053:22" pos:end="1053:22">&amp;</operator><name pos:start="1053:23" pos:end="1053:38">spr_read_generic</name></expr></argument>, <argument pos:start="1053:41" pos:end="1053:58"><expr pos:start="1053:41" pos:end="1053:58"><operator pos:start="1053:41" pos:end="1053:41">&amp;</operator><name pos:start="1053:42" pos:end="1053:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="1055:22" pos:end="1055:31"><expr pos:start="1055:22" pos:end="1055:31"><literal type="number" pos:start="1055:22" pos:end="1055:31">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1057:9" pos:end="1057:46">/* Allocate hardware IRQ controller */</comment>

        <expr_stmt pos:start="1059:9" pos:end="1059:29"><expr pos:start="1059:9" pos:end="1059:28"><call pos:start="1059:9" pos:end="1059:28"><name pos:start="1059:9" pos:end="1059:23">ppc970_irq_init</name><argument_list pos:start="1059:24" pos:end="1059:28">(<argument pos:start="1059:25" pos:end="1059:27"><expr pos:start="1059:25" pos:end="1059:27"><name pos:start="1059:25" pos:end="1059:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1061:9" pos:end="1066:0">break;</break>



<cpp:if pos:start="1065:1" pos:end="1065:18">#<cpp:directive pos:start="1065:2" pos:end="1065:3">if</cpp:directive> <expr pos:start="1065:5" pos:end="1065:18"><call pos:start="1065:5" pos:end="1065:18"><name pos:start="1065:5" pos:end="1065:11">defined</name> <argument_list pos:start="1065:13" pos:end="1065:18">(<argument pos:start="1065:14" pos:end="1065:17"><expr pos:start="1065:14" pos:end="1065:17"><name pos:start="1065:14" pos:end="1065:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="1067:5" pos:end="1067:24">case <expr pos:start="1067:10" pos:end="1067:23"><name pos:start="1067:10" pos:end="1067:23">CPU_PPC_CELL10</name></expr>:</case>  <comment type="block" pos:start="1067:27" pos:end="1067:61">/* Cell family                   */</comment>

    <case pos:start="1069:5" pos:end="1069:24">case <expr pos:start="1069:10" pos:end="1069:23"><name pos:start="1069:10" pos:end="1069:23">CPU_PPC_CELL20</name></expr>:</case>

    <case pos:start="1071:5" pos:end="1071:24">case <expr pos:start="1071:10" pos:end="1071:23"><name pos:start="1071:10" pos:end="1071:23">CPU_PPC_CELL30</name></expr>:</case>

    <case pos:start="1073:5" pos:end="1076:0">case <expr pos:start="1073:10" pos:end="1073:23"><name pos:start="1073:10" pos:end="1073:23">CPU_PPC_CELL31</name></expr>:</case>

<cpp:endif pos:start="1075:1" pos:end="1075:6">#<cpp:directive pos:start="1075:2" pos:end="1075:6">endif</cpp:directive></cpp:endif>

        <break pos:start="1077:9" pos:end="1082:0">break;</break>



<cpp:if pos:start="1081:1" pos:end="1081:18">#<cpp:directive pos:start="1081:2" pos:end="1081:3">if</cpp:directive> <expr pos:start="1081:5" pos:end="1081:18"><call pos:start="1081:5" pos:end="1081:18"><name pos:start="1081:5" pos:end="1081:11">defined</name> <argument_list pos:start="1081:13" pos:end="1081:18">(<argument pos:start="1081:14" pos:end="1081:17"><expr pos:start="1081:14" pos:end="1081:17"><name pos:start="1081:14" pos:end="1081:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="1083:5" pos:end="1083:22">case <expr pos:start="1083:10" pos:end="1083:21"><name pos:start="1083:10" pos:end="1083:21">CPU_PPC_RS64</name></expr>:</case>    <comment type="block" pos:start="1083:27" pos:end="1083:61">/* Apache (RS64/A35)             */</comment>

    <case pos:start="1085:5" pos:end="1085:24">case <expr pos:start="1085:10" pos:end="1085:23"><name pos:start="1085:10" pos:end="1085:23">CPU_PPC_RS64II</name></expr>:</case>  <comment type="block" pos:start="1085:27" pos:end="1085:61">/* NorthStar (RS64-II/A50)       */</comment>

    <case pos:start="1087:5" pos:end="1087:25">case <expr pos:start="1087:10" pos:end="1087:24"><name pos:start="1087:10" pos:end="1087:24">CPU_PPC_RS64III</name></expr>:</case> <comment type="block" pos:start="1087:27" pos:end="1087:61">/* Pulsar (RS64-III)             */</comment>

    <case pos:start="1089:5" pos:end="1092:0">case <expr pos:start="1089:10" pos:end="1089:23"><name pos:start="1089:10" pos:end="1089:23">CPU_PPC_RS64IV</name></expr>:</case>  <comment type="block" pos:start="1089:27" pos:end="1089:61">/* IceStar/IStar/SStar (RS64-IV) */</comment>

<cpp:endif pos:start="1091:1" pos:end="1091:6">#<cpp:directive pos:start="1091:2" pos:end="1091:6">endif</cpp:directive></cpp:endif>

        <break pos:start="1093:9" pos:end="1100:0">break;</break>

<cpp:endif pos:start="1095:1" pos:end="1095:6">#<cpp:directive pos:start="1095:2" pos:end="1095:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1095:8" pos:end="1095:35">/* defined (TARGET_PPC64) */</comment>



<cpp:if pos:start="1099:1" pos:end="1099:18">#<cpp:directive pos:start="1099:2" pos:end="1099:3">if</cpp:directive> <expr pos:start="1099:5" pos:end="1099:18"><call pos:start="1099:5" pos:end="1099:18"><name pos:start="1099:5" pos:end="1099:11">defined</name> <argument_list pos:start="1099:13" pos:end="1099:18">(<argument pos:start="1099:14" pos:end="1099:17"><expr pos:start="1099:14" pos:end="1099:17"><name pos:start="1099:14" pos:end="1099:17">TODO</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <comment type="block" pos:start="1101:9" pos:end="1101:65">/* POWER                                               */</comment>

    <case pos:start="1103:5" pos:end="1103:19">case <expr pos:start="1103:10" pos:end="1103:18"><name pos:start="1103:10" pos:end="1103:18">CPU_POWER</name></expr>:</case>       <comment type="block" pos:start="1103:27" pos:end="1103:61">/* POWER                         */</comment>

    <case pos:start="1105:5" pos:end="1105:20">case <expr pos:start="1105:10" pos:end="1105:19"><name pos:start="1105:10" pos:end="1105:19">CPU_POWER2</name></expr>:</case>      <comment type="block" pos:start="1105:27" pos:end="1105:61">/* POWER2                        */</comment>

        <break pos:start="1107:9" pos:end="1110:0">break;</break>

<cpp:endif pos:start="1109:1" pos:end="1109:6">#<cpp:directive pos:start="1109:2" pos:end="1109:6">endif</cpp:directive></cpp:endif>



    <default pos:start="1113:5" pos:end="1113:12">default:</default>

        <expr_stmt pos:start="1115:9" pos:end="1115:29"><expr pos:start="1115:9" pos:end="1115:28"><call pos:start="1115:9" pos:end="1115:28"><name pos:start="1115:9" pos:end="1115:23">gen_spr_generic</name><argument_list pos:start="1115:24" pos:end="1115:28">(<argument pos:start="1115:25" pos:end="1115:27"><expr pos:start="1115:25" pos:end="1115:27"><name pos:start="1115:25" pos:end="1115:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1117:9" pos:end="1117:57">/* XXX: TODO: allocate internal IRQ controller */</comment>

        <break pos:start="1119:9" pos:end="1119:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="1123:5" pos:end="1125:25"><if pos:start="1123:5" pos:end="1125:25">if <condition pos:start="1123:8" pos:end="1123:27">(<expr pos:start="1123:9" pos:end="1123:26"><name pos:start="1123:9" pos:end="1123:20"><name pos:start="1123:9" pos:end="1123:11">env</name><operator pos:start="1123:12" pos:end="1123:13">-&gt;</operator><name pos:start="1123:14" pos:end="1123:20">nb_BATs</name></name> <operator pos:start="1123:22" pos:end="1123:23">==</operator> <operator pos:start="1123:25" pos:end="1123:25">-</operator><literal type="number" pos:start="1123:26" pos:end="1123:26">1</literal></expr>)</condition><block type="pseudo" pos:start="1125:9" pos:end="1125:25"><block_content pos:start="1125:9" pos:end="1125:25">

        <expr_stmt pos:start="1125:9" pos:end="1125:25"><expr pos:start="1125:9" pos:end="1125:24"><name pos:start="1125:9" pos:end="1125:20"><name pos:start="1125:9" pos:end="1125:11">env</name><operator pos:start="1125:12" pos:end="1125:13">-&gt;</operator><name pos:start="1125:14" pos:end="1125:20">nb_BATs</name></name> <operator pos:start="1125:22" pos:end="1125:22">=</operator> <literal type="number" pos:start="1125:24" pos:end="1125:24">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="1127:5" pos:end="1127:42">/* Allocate TLBs buffer when needed */</comment>

    <if_stmt pos:start="1129:5" pos:end="1143:5"><if pos:start="1129:5" pos:end="1143:5">if <condition pos:start="1129:8" pos:end="1129:25">(<expr pos:start="1129:9" pos:end="1129:24"><name pos:start="1129:9" pos:end="1129:19"><name pos:start="1129:9" pos:end="1129:11">env</name><operator pos:start="1129:12" pos:end="1129:13">-&gt;</operator><name pos:start="1129:14" pos:end="1129:19">nb_tlb</name></name> <operator pos:start="1129:21" pos:end="1129:22">!=</operator> <literal type="number" pos:start="1129:24" pos:end="1129:24">0</literal></expr>)</condition> <block pos:start="1129:27" pos:end="1143:5">{<block_content pos:start="1131:9" pos:end="1141:54">

        <decl_stmt pos:start="1131:9" pos:end="1131:33"><decl pos:start="1131:9" pos:end="1131:32"><type pos:start="1131:9" pos:end="1131:11"><name pos:start="1131:9" pos:end="1131:11">int</name></type> <name pos:start="1131:13" pos:end="1131:18">nb_tlb</name> <init pos:start="1131:20" pos:end="1131:32">= <expr pos:start="1131:22" pos:end="1131:32"><name pos:start="1131:22" pos:end="1131:32"><name pos:start="1131:22" pos:end="1131:24">env</name><operator pos:start="1131:25" pos:end="1131:26">-&gt;</operator><name pos:start="1131:27" pos:end="1131:32">nb_tlb</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="1133:9" pos:end="1135:24"><if pos:start="1133:9" pos:end="1135:24">if <condition pos:start="1133:12" pos:end="1133:30">(<expr pos:start="1133:13" pos:end="1133:29"><name pos:start="1133:13" pos:end="1133:24"><name pos:start="1133:13" pos:end="1133:15">env</name><operator pos:start="1133:16" pos:end="1133:17">-&gt;</operator><name pos:start="1133:18" pos:end="1133:24">id_tlbs</name></name> <operator pos:start="1133:26" pos:end="1133:27">!=</operator> <literal type="number" pos:start="1133:29" pos:end="1133:29">0</literal></expr>)</condition><block type="pseudo" pos:start="1135:13" pos:end="1135:24"><block_content pos:start="1135:13" pos:end="1135:24">

            <expr_stmt pos:start="1135:13" pos:end="1135:24"><expr pos:start="1135:13" pos:end="1135:23"><name pos:start="1135:13" pos:end="1135:18">nb_tlb</name> <operator pos:start="1135:20" pos:end="1135:21">*=</operator> <literal type="number" pos:start="1135:23" pos:end="1135:23">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1137:9" pos:end="1137:60"><expr pos:start="1137:9" pos:end="1137:59"><name pos:start="1137:9" pos:end="1137:16"><name pos:start="1137:9" pos:end="1137:11">env</name><operator pos:start="1137:12" pos:end="1137:13">-&gt;</operator><name pos:start="1137:14" pos:end="1137:16">tlb</name></name> <operator pos:start="1137:18" pos:end="1137:18">=</operator> <call pos:start="1137:20" pos:end="1137:59"><name pos:start="1137:20" pos:end="1137:31">qemu_mallocz</name><argument_list pos:start="1137:32" pos:end="1137:59">(<argument pos:start="1137:33" pos:end="1137:58"><expr pos:start="1137:33" pos:end="1137:58"><name pos:start="1137:33" pos:end="1137:38">nb_tlb</name> <operator pos:start="1137:40" pos:end="1137:40">*</operator> <sizeof pos:start="1137:42" pos:end="1137:58">sizeof<argument_list pos:start="1137:48" pos:end="1137:58">(<argument pos:start="1137:49" pos:end="1137:57"><expr pos:start="1137:49" pos:end="1137:57"><name pos:start="1137:49" pos:end="1137:57">ppc_tlb_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1139:9" pos:end="1139:44">/* Pre-compute some useful values */</comment>

        <expr_stmt pos:start="1141:9" pos:end="1141:54"><expr pos:start="1141:9" pos:end="1141:53"><name pos:start="1141:9" pos:end="1141:24"><name pos:start="1141:9" pos:end="1141:11">env</name><operator pos:start="1141:12" pos:end="1141:13">-&gt;</operator><name pos:start="1141:14" pos:end="1141:24">tlb_per_way</name></name> <operator pos:start="1141:26" pos:end="1141:26">=</operator> <name pos:start="1141:28" pos:end="1141:38"><name pos:start="1141:28" pos:end="1141:30">env</name><operator pos:start="1141:31" pos:end="1141:32">-&gt;</operator><name pos:start="1141:33" pos:end="1141:38">nb_tlb</name></name> <operator pos:start="1141:40" pos:end="1141:40">/</operator> <name pos:start="1141:42" pos:end="1141:53"><name pos:start="1141:42" pos:end="1141:44">env</name><operator pos:start="1141:45" pos:end="1141:46">-&gt;</operator><name pos:start="1141:47" pos:end="1141:53">nb_ways</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
