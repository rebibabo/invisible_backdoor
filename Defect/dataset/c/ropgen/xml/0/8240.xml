<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8240.c" pos:tabs="8"><function pos:start="1:1" pos:end="369:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">fft_calc_altivec</name><parameter_list pos:start="1:22" pos:end="1:51">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">FFTContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:47">FFTComplex</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">z</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="369:1">{<block_content pos:start="5:1" pos:end="368:0">

<expr_stmt pos:start="5:1" pos:end="8:0"><expr pos:start="5:1" pos:end="5:51"><call pos:start="5:1" pos:end="5:51"><name pos:start="5:1" pos:end="5:19">POWERPC_TBL_DECLARE</name><argument_list pos:start="5:20" pos:end="5:51">(<argument pos:start="5:21" pos:end="5:35"><expr pos:start="5:21" pos:end="5:35"><name pos:start="5:21" pos:end="5:35">altivec_fft_num</name></expr></argument>, <argument pos:start="5:38" pos:end="5:50"><expr pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:45"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:45">nbits</name></name> <operator pos:start="5:47" pos:end="5:48">&gt;=</operator> <literal type="number" pos:start="5:50" pos:end="5:50">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:35">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:35">ALTIVEC_USE_REFERENCE_C_CODE</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">ln</name> <init pos:start="9:12" pos:end="9:21">= <expr pos:start="9:14" pos:end="9:21"><name pos:start="9:14" pos:end="9:21"><name pos:start="9:14" pos:end="9:14">s</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:21">nbits</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type>	<name pos:start="11:9" pos:end="11:9">j</name></decl>, <decl pos:start="11:12" pos:end="11:13"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:13">np</name></decl>, <decl pos:start="11:16" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:18">np2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>	<name pos:start="13:9" pos:end="13:15">nblocks</name></decl>, <decl pos:start="13:18" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:23">nloops</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:25"><specifier pos:start="15:5" pos:end="15:12">register</specifier> <name pos:start="15:14" pos:end="15:23">FFTComplex</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:26">p</name></decl>, <decl pos:start="15:29" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:25"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:30">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">FFTComplex</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:22">exptab</name> <init pos:start="17:24" pos:end="17:34">= <expr pos:start="17:26" pos:end="17:34"><name pos:start="17:26" pos:end="17:34"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:34">exptab</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:13">FFTSample</name></type> <name pos:start="21:15" pos:end="21:20">tmp_re</name></decl>, <decl pos:start="21:23" pos:end="21:28"><type ref="prev" pos:start="21:5" pos:end="21:13"/><name pos:start="21:23" pos:end="21:28">tmp_im</name></decl>;</decl_stmt>

    

<expr_stmt pos:start="25:1" pos:end="25:56"><expr pos:start="25:1" pos:end="25:55"><call pos:start="25:1" pos:end="25:55"><name pos:start="25:1" pos:end="25:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="25:24" pos:end="25:55">(<argument pos:start="25:25" pos:end="25:39"><expr pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:39">altivec_fft_num</name></expr></argument>, <argument pos:start="25:42" pos:end="25:54"><expr pos:start="25:42" pos:end="25:54"><name pos:start="25:42" pos:end="25:49"><name pos:start="25:42" pos:end="25:42">s</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:49">nbits</name></name> <operator pos:start="25:51" pos:end="25:52">&gt;=</operator> <literal type="number" pos:start="25:54" pos:end="25:54">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 

    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:6">np</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <literal type="number" pos:start="29:10" pos:end="29:10">1</literal> <operator pos:start="29:12" pos:end="29:13">&lt;&lt;</operator> <name pos:start="29:15" pos:end="29:16">ln</name></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:16">/* pass 0 */</comment>



    <expr_stmt pos:start="37:5" pos:end="37:12"><expr pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:5">p</name><operator pos:start="37:6" pos:end="37:6">=</operator><operator pos:start="37:7" pos:end="37:7">&amp;</operator><name pos:start="37:8" pos:end="37:11"><name pos:start="37:8" pos:end="37:8">z</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:16"><expr pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:5">j</name><operator pos:start="39:6" pos:end="39:6">=</operator><operator pos:start="39:7" pos:end="39:7">(</operator><name pos:start="39:8" pos:end="39:9">np</name> <operator pos:start="39:11" pos:end="39:12">&gt;&gt;</operator> <literal type="number" pos:start="39:14" pos:end="39:14">1</literal><operator pos:start="39:15" pos:end="39:15">)</operator></expr>;</expr_stmt>

    <do pos:start="41:5" pos:end="49:23">do <block pos:start="41:8" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:13">

        <expr_stmt pos:start="43:9" pos:end="45:47"><expr pos:start="43:9" pos:end="45:46"><call pos:start="43:9" pos:end="45:46"><name pos:start="43:9" pos:end="43:10">BF</name><argument_list pos:start="43:11" pos:end="45:46">(<argument pos:start="43:12" pos:end="43:18"><expr pos:start="43:12" pos:end="43:18"><name pos:start="43:12" pos:end="43:15"><name pos:start="43:12" pos:end="43:12">p</name><index pos:start="43:13" pos:end="43:15">[<expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>]</index></name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:18">re</name></expr></argument>, <argument pos:start="43:21" pos:end="43:27"><expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:21">p</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>]</index></name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:27">im</name></expr></argument>, <argument pos:start="43:30" pos:end="43:36"><expr pos:start="43:30" pos:end="43:36"><name pos:start="43:30" pos:end="43:33"><name pos:start="43:30" pos:end="43:30">p</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">1</literal></expr>]</index></name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:36">re</name></expr></argument>, <argument pos:start="43:39" pos:end="43:45"><expr pos:start="43:39" pos:end="43:45"><name pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:39">p</name><index pos:start="43:40" pos:end="43:42">[<expr pos:start="43:41" pos:end="43:41"><literal type="number" pos:start="43:41" pos:end="43:41">1</literal></expr>]</index></name><operator pos:start="43:43" pos:end="43:43">.</operator><name pos:start="43:44" pos:end="43:45">im</name></expr></argument>, 

           <argument pos:start="45:12" pos:end="45:18"><expr pos:start="45:12" pos:end="45:18"><name pos:start="45:12" pos:end="45:15"><name pos:start="45:12" pos:end="45:12">p</name><index pos:start="45:13" pos:end="45:15">[<expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>]</index></name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:18">re</name></expr></argument>, <argument pos:start="45:21" pos:end="45:27"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:24"><name pos:start="45:21" pos:end="45:21">p</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>]</index></name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:27">im</name></expr></argument>, <argument pos:start="45:30" pos:end="45:36"><expr pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:30">p</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>]</index></name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:36">re</name></expr></argument>, <argument pos:start="45:39" pos:end="45:45"><expr pos:start="45:39" pos:end="45:45"><name pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:39">p</name><index pos:start="45:40" pos:end="45:42">[<expr pos:start="45:41" pos:end="45:41"><literal type="number" pos:start="45:41" pos:end="45:41">1</literal></expr>]</index></name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:45">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:13"><expr pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:9">p</name><operator pos:start="47:10" pos:end="47:11">+=</operator><literal type="number" pos:start="47:12" pos:end="47:12">2</literal></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="49:13" pos:end="49:22">(<expr pos:start="49:14" pos:end="49:21"><operator pos:start="49:14" pos:end="49:15">--</operator><name pos:start="49:16" pos:end="49:16">j</name> <operator pos:start="49:18" pos:end="49:19">!=</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>)</condition>;</do>



    <comment type="block" pos:start="53:5" pos:end="53:16">/* pass 1 */</comment>



    

    <expr_stmt pos:start="59:5" pos:end="59:12"><expr pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:5">p</name><operator pos:start="59:6" pos:end="59:6">=</operator><operator pos:start="59:7" pos:end="59:7">&amp;</operator><name pos:start="59:8" pos:end="59:11"><name pos:start="59:8" pos:end="59:8">z</name><index pos:start="59:9" pos:end="59:11">[<expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:14"><expr pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:5">j</name><operator pos:start="61:6" pos:end="61:6">=</operator><name pos:start="61:7" pos:end="61:8">np</name> <operator pos:start="61:10" pos:end="61:11">&gt;&gt;</operator> <literal type="number" pos:start="61:13" pos:end="61:13">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="95:5"><if pos:start="63:5" pos:end="79:5">if <condition pos:start="63:8" pos:end="63:19">(<expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">inverse</name></name></expr>)</condition> <block pos:start="63:21" pos:end="79:5">{<block_content pos:start="65:9" pos:end="77:27">

        <do pos:start="65:9" pos:end="77:27">do <block pos:start="65:12" pos:end="77:9">{<block_content pos:start="67:13" pos:end="75:17">

            <expr_stmt pos:start="67:13" pos:end="69:51"><expr pos:start="67:13" pos:end="69:50"><call pos:start="67:13" pos:end="69:50"><name pos:start="67:13" pos:end="67:14">BF</name><argument_list pos:start="67:15" pos:end="69:50">(<argument pos:start="67:16" pos:end="67:22"><expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:16">p</name><index pos:start="67:17" pos:end="67:19">[<expr pos:start="67:18" pos:end="67:18"><literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>]</index></name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:22">re</name></expr></argument>, <argument pos:start="67:25" pos:end="67:31"><expr pos:start="67:25" pos:end="67:31"><name pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:25">p</name><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>]</index></name><operator pos:start="67:29" pos:end="67:29">.</operator><name pos:start="67:30" pos:end="67:31">im</name></expr></argument>, <argument pos:start="67:34" pos:end="67:40"><expr pos:start="67:34" pos:end="67:40"><name pos:start="67:34" pos:end="67:37"><name pos:start="67:34" pos:end="67:34">p</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><literal type="number" pos:start="67:36" pos:end="67:36">2</literal></expr>]</index></name><operator pos:start="67:38" pos:end="67:38">.</operator><name pos:start="67:39" pos:end="67:40">re</name></expr></argument>, <argument pos:start="67:43" pos:end="67:49"><expr pos:start="67:43" pos:end="67:49"><name pos:start="67:43" pos:end="67:46"><name pos:start="67:43" pos:end="67:43">p</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">2</literal></expr>]</index></name><operator pos:start="67:47" pos:end="67:47">.</operator><name pos:start="67:48" pos:end="67:49">im</name></expr></argument>, 

               <argument pos:start="69:16" pos:end="69:22"><expr pos:start="69:16" pos:end="69:22"><name pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:16">p</name><index pos:start="69:17" pos:end="69:19">[<expr pos:start="69:18" pos:end="69:18"><literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>]</index></name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:22">re</name></expr></argument>, <argument pos:start="69:25" pos:end="69:31"><expr pos:start="69:25" pos:end="69:31"><name pos:start="69:25" pos:end="69:28"><name pos:start="69:25" pos:end="69:25">p</name><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr>]</index></name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:31">im</name></expr></argument>, <argument pos:start="69:34" pos:end="69:40"><expr pos:start="69:34" pos:end="69:40"><name pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:34">p</name><index pos:start="69:35" pos:end="69:37">[<expr pos:start="69:36" pos:end="69:36"><literal type="number" pos:start="69:36" pos:end="69:36">2</literal></expr>]</index></name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:40">re</name></expr></argument>, <argument pos:start="69:43" pos:end="69:49"><expr pos:start="69:43" pos:end="69:49"><name pos:start="69:43" pos:end="69:46"><name pos:start="69:43" pos:end="69:43">p</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><literal type="number" pos:start="69:45" pos:end="69:45">2</literal></expr>]</index></name><operator pos:start="69:47" pos:end="69:47">.</operator><name pos:start="69:48" pos:end="69:49">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="73:52"><expr pos:start="71:13" pos:end="73:51"><call pos:start="71:13" pos:end="73:51"><name pos:start="71:13" pos:end="71:14">BF</name><argument_list pos:start="71:15" pos:end="73:51">(<argument pos:start="71:16" pos:end="71:22"><expr pos:start="71:16" pos:end="71:22"><name pos:start="71:16" pos:end="71:19"><name pos:start="71:16" pos:end="71:16">p</name><index pos:start="71:17" pos:end="71:19">[<expr pos:start="71:18" pos:end="71:18"><literal type="number" pos:start="71:18" pos:end="71:18">1</literal></expr>]</index></name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:22">re</name></expr></argument>, <argument pos:start="71:25" pos:end="71:31"><expr pos:start="71:25" pos:end="71:31"><name pos:start="71:25" pos:end="71:28"><name pos:start="71:25" pos:end="71:25">p</name><index pos:start="71:26" pos:end="71:28">[<expr pos:start="71:27" pos:end="71:27"><literal type="number" pos:start="71:27" pos:end="71:27">1</literal></expr>]</index></name><operator pos:start="71:29" pos:end="71:29">.</operator><name pos:start="71:30" pos:end="71:31">im</name></expr></argument>, <argument pos:start="71:34" pos:end="71:40"><expr pos:start="71:34" pos:end="71:40"><name pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:34">p</name><index pos:start="71:35" pos:end="71:37">[<expr pos:start="71:36" pos:end="71:36"><literal type="number" pos:start="71:36" pos:end="71:36">3</literal></expr>]</index></name><operator pos:start="71:38" pos:end="71:38">.</operator><name pos:start="71:39" pos:end="71:40">re</name></expr></argument>, <argument pos:start="71:43" pos:end="71:49"><expr pos:start="71:43" pos:end="71:49"><name pos:start="71:43" pos:end="71:46"><name pos:start="71:43" pos:end="71:43">p</name><index pos:start="71:44" pos:end="71:46">[<expr pos:start="71:45" pos:end="71:45"><literal type="number" pos:start="71:45" pos:end="71:45">3</literal></expr>]</index></name><operator pos:start="71:47" pos:end="71:47">.</operator><name pos:start="71:48" pos:end="71:49">im</name></expr></argument>, 

               <argument pos:start="73:16" pos:end="73:22"><expr pos:start="73:16" pos:end="73:22"><name pos:start="73:16" pos:end="73:19"><name pos:start="73:16" pos:end="73:16">p</name><index pos:start="73:17" pos:end="73:19">[<expr pos:start="73:18" pos:end="73:18"><literal type="number" pos:start="73:18" pos:end="73:18">1</literal></expr>]</index></name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:22">re</name></expr></argument>, <argument pos:start="73:25" pos:end="73:31"><expr pos:start="73:25" pos:end="73:31"><name pos:start="73:25" pos:end="73:28"><name pos:start="73:25" pos:end="73:25">p</name><index pos:start="73:26" pos:end="73:28">[<expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">1</literal></expr>]</index></name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:31">im</name></expr></argument>, <argument pos:start="73:34" pos:end="73:41"><expr pos:start="73:34" pos:end="73:41"><operator pos:start="73:34" pos:end="73:34">-</operator><name pos:start="73:35" pos:end="73:38"><name pos:start="73:35" pos:end="73:35">p</name><index pos:start="73:36" pos:end="73:38">[<expr pos:start="73:37" pos:end="73:37"><literal type="number" pos:start="73:37" pos:end="73:37">3</literal></expr>]</index></name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:41">im</name></expr></argument>, <argument pos:start="73:44" pos:end="73:50"><expr pos:start="73:44" pos:end="73:50"><name pos:start="73:44" pos:end="73:47"><name pos:start="73:44" pos:end="73:44">p</name><index pos:start="73:45" pos:end="73:47">[<expr pos:start="73:46" pos:end="73:46"><literal type="number" pos:start="73:46" pos:end="73:46">3</literal></expr>]</index></name><operator pos:start="73:48" pos:end="73:48">.</operator><name pos:start="73:49" pos:end="73:50">re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:17"><expr pos:start="75:13" pos:end="75:16"><name pos:start="75:13" pos:end="75:13">p</name><operator pos:start="75:14" pos:end="75:15">+=</operator><literal type="number" pos:start="75:16" pos:end="75:16">4</literal></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="77:17" pos:end="77:26">(<expr pos:start="77:18" pos:end="77:25"><operator pos:start="77:18" pos:end="77:19">--</operator><name pos:start="77:20" pos:end="77:20">j</name> <operator pos:start="77:22" pos:end="77:23">!=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>)</condition>;</do>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="95:5">else <block pos:start="79:12" pos:end="95:5">{<block_content pos:start="81:9" pos:end="93:27">

        <do pos:start="81:9" pos:end="93:27">do <block pos:start="81:12" pos:end="93:9">{<block_content pos:start="83:13" pos:end="91:17">

            <expr_stmt pos:start="83:13" pos:end="85:51"><expr pos:start="83:13" pos:end="85:50"><call pos:start="83:13" pos:end="85:50"><name pos:start="83:13" pos:end="83:14">BF</name><argument_list pos:start="83:15" pos:end="85:50">(<argument pos:start="83:16" pos:end="83:22"><expr pos:start="83:16" pos:end="83:22"><name pos:start="83:16" pos:end="83:19"><name pos:start="83:16" pos:end="83:16">p</name><index pos:start="83:17" pos:end="83:19">[<expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>]</index></name><operator pos:start="83:20" pos:end="83:20">.</operator><name pos:start="83:21" pos:end="83:22">re</name></expr></argument>, <argument pos:start="83:25" pos:end="83:31"><expr pos:start="83:25" pos:end="83:31"><name pos:start="83:25" pos:end="83:28"><name pos:start="83:25" pos:end="83:25">p</name><index pos:start="83:26" pos:end="83:28">[<expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>]</index></name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:31">im</name></expr></argument>, <argument pos:start="83:34" pos:end="83:40"><expr pos:start="83:34" pos:end="83:40"><name pos:start="83:34" pos:end="83:37"><name pos:start="83:34" pos:end="83:34">p</name><index pos:start="83:35" pos:end="83:37">[<expr pos:start="83:36" pos:end="83:36"><literal type="number" pos:start="83:36" pos:end="83:36">2</literal></expr>]</index></name><operator pos:start="83:38" pos:end="83:38">.</operator><name pos:start="83:39" pos:end="83:40">re</name></expr></argument>, <argument pos:start="83:43" pos:end="83:49"><expr pos:start="83:43" pos:end="83:49"><name pos:start="83:43" pos:end="83:46"><name pos:start="83:43" pos:end="83:43">p</name><index pos:start="83:44" pos:end="83:46">[<expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">2</literal></expr>]</index></name><operator pos:start="83:47" pos:end="83:47">.</operator><name pos:start="83:48" pos:end="83:49">im</name></expr></argument>, 

               <argument pos:start="85:16" pos:end="85:22"><expr pos:start="85:16" pos:end="85:22"><name pos:start="85:16" pos:end="85:19"><name pos:start="85:16" pos:end="85:16">p</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>]</index></name><operator pos:start="85:20" pos:end="85:20">.</operator><name pos:start="85:21" pos:end="85:22">re</name></expr></argument>, <argument pos:start="85:25" pos:end="85:31"><expr pos:start="85:25" pos:end="85:31"><name pos:start="85:25" pos:end="85:28"><name pos:start="85:25" pos:end="85:25">p</name><index pos:start="85:26" pos:end="85:28">[<expr pos:start="85:27" pos:end="85:27"><literal type="number" pos:start="85:27" pos:end="85:27">0</literal></expr>]</index></name><operator pos:start="85:29" pos:end="85:29">.</operator><name pos:start="85:30" pos:end="85:31">im</name></expr></argument>, <argument pos:start="85:34" pos:end="85:40"><expr pos:start="85:34" pos:end="85:40"><name pos:start="85:34" pos:end="85:37"><name pos:start="85:34" pos:end="85:34">p</name><index pos:start="85:35" pos:end="85:37">[<expr pos:start="85:36" pos:end="85:36"><literal type="number" pos:start="85:36" pos:end="85:36">2</literal></expr>]</index></name><operator pos:start="85:38" pos:end="85:38">.</operator><name pos:start="85:39" pos:end="85:40">re</name></expr></argument>, <argument pos:start="85:43" pos:end="85:49"><expr pos:start="85:43" pos:end="85:49"><name pos:start="85:43" pos:end="85:46"><name pos:start="85:43" pos:end="85:43">p</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><literal type="number" pos:start="85:45" pos:end="85:45">2</literal></expr>]</index></name><operator pos:start="85:47" pos:end="85:47">.</operator><name pos:start="85:48" pos:end="85:49">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="89:52"><expr pos:start="87:13" pos:end="89:51"><call pos:start="87:13" pos:end="89:51"><name pos:start="87:13" pos:end="87:14">BF</name><argument_list pos:start="87:15" pos:end="89:51">(<argument pos:start="87:16" pos:end="87:22"><expr pos:start="87:16" pos:end="87:22"><name pos:start="87:16" pos:end="87:19"><name pos:start="87:16" pos:end="87:16">p</name><index pos:start="87:17" pos:end="87:19">[<expr pos:start="87:18" pos:end="87:18"><literal type="number" pos:start="87:18" pos:end="87:18">1</literal></expr>]</index></name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:22">re</name></expr></argument>, <argument pos:start="87:25" pos:end="87:31"><expr pos:start="87:25" pos:end="87:31"><name pos:start="87:25" pos:end="87:28"><name pos:start="87:25" pos:end="87:25">p</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><literal type="number" pos:start="87:27" pos:end="87:27">1</literal></expr>]</index></name><operator pos:start="87:29" pos:end="87:29">.</operator><name pos:start="87:30" pos:end="87:31">im</name></expr></argument>, <argument pos:start="87:34" pos:end="87:40"><expr pos:start="87:34" pos:end="87:40"><name pos:start="87:34" pos:end="87:37"><name pos:start="87:34" pos:end="87:34">p</name><index pos:start="87:35" pos:end="87:37">[<expr pos:start="87:36" pos:end="87:36"><literal type="number" pos:start="87:36" pos:end="87:36">3</literal></expr>]</index></name><operator pos:start="87:38" pos:end="87:38">.</operator><name pos:start="87:39" pos:end="87:40">re</name></expr></argument>, <argument pos:start="87:43" pos:end="87:49"><expr pos:start="87:43" pos:end="87:49"><name pos:start="87:43" pos:end="87:46"><name pos:start="87:43" pos:end="87:43">p</name><index pos:start="87:44" pos:end="87:46">[<expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">3</literal></expr>]</index></name><operator pos:start="87:47" pos:end="87:47">.</operator><name pos:start="87:48" pos:end="87:49">im</name></expr></argument>, 

               <argument pos:start="89:16" pos:end="89:22"><expr pos:start="89:16" pos:end="89:22"><name pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:16">p</name><index pos:start="89:17" pos:end="89:19">[<expr pos:start="89:18" pos:end="89:18"><literal type="number" pos:start="89:18" pos:end="89:18">1</literal></expr>]</index></name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:22">re</name></expr></argument>, <argument pos:start="89:25" pos:end="89:31"><expr pos:start="89:25" pos:end="89:31"><name pos:start="89:25" pos:end="89:28"><name pos:start="89:25" pos:end="89:25">p</name><index pos:start="89:26" pos:end="89:28">[<expr pos:start="89:27" pos:end="89:27"><literal type="number" pos:start="89:27" pos:end="89:27">1</literal></expr>]</index></name><operator pos:start="89:29" pos:end="89:29">.</operator><name pos:start="89:30" pos:end="89:31">im</name></expr></argument>, <argument pos:start="89:34" pos:end="89:40"><expr pos:start="89:34" pos:end="89:40"><name pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:34">p</name><index pos:start="89:35" pos:end="89:37">[<expr pos:start="89:36" pos:end="89:36"><literal type="number" pos:start="89:36" pos:end="89:36">3</literal></expr>]</index></name><operator pos:start="89:38" pos:end="89:38">.</operator><name pos:start="89:39" pos:end="89:40">im</name></expr></argument>, <argument pos:start="89:43" pos:end="89:50"><expr pos:start="89:43" pos:end="89:50"><operator pos:start="89:43" pos:end="89:43">-</operator><name pos:start="89:44" pos:end="89:47"><name pos:start="89:44" pos:end="89:44">p</name><index pos:start="89:45" pos:end="89:47">[<expr pos:start="89:46" pos:end="89:46"><literal type="number" pos:start="89:46" pos:end="89:46">3</literal></expr>]</index></name><operator pos:start="89:48" pos:end="89:48">.</operator><name pos:start="89:49" pos:end="89:50">re</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:17"><expr pos:start="91:13" pos:end="91:16"><name pos:start="91:13" pos:end="91:13">p</name><operator pos:start="91:14" pos:end="91:15">+=</operator><literal type="number" pos:start="91:16" pos:end="91:16">4</literal></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="93:17" pos:end="93:26">(<expr pos:start="93:18" pos:end="93:25"><operator pos:start="93:18" pos:end="93:19">--</operator><name pos:start="93:20" pos:end="93:20">j</name> <operator pos:start="93:22" pos:end="93:23">!=</operator> <literal type="number" pos:start="93:25" pos:end="93:25">0</literal></expr>)</condition>;</do>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="97:5" pos:end="97:24">/* pass 2 .. ln-1 */</comment>



    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:11">nblocks</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:16">np</name> <operator pos:start="101:18" pos:end="101:19">&gt;&gt;</operator> <literal type="number" pos:start="101:21" pos:end="101:21">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:10">nloops</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">1</literal> <operator pos:start="103:16" pos:end="103:17">&lt;&lt;</operator> <literal type="number" pos:start="103:19" pos:end="103:19">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:18"><expr pos:start="105:5" pos:end="105:17"><name pos:start="105:5" pos:end="105:7">np2</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <name pos:start="105:11" pos:end="105:12">np</name> <operator pos:start="105:14" pos:end="105:15">&gt;&gt;</operator> <literal type="number" pos:start="105:17" pos:end="105:17">1</literal></expr>;</expr_stmt>

    <do pos:start="107:5" pos:end="151:27">do <block pos:start="107:8" pos:end="151:5">{<block_content pos:start="109:9" pos:end="149:29">

        <expr_stmt pos:start="109:9" pos:end="109:14"><expr pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:9">p</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <name pos:start="109:13" pos:end="109:13">z</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:23"><expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:9">q</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:13">z</name> <operator pos:start="111:15" pos:end="111:15">+</operator> <name pos:start="111:17" pos:end="111:22">nloops</name></expr>;</expr_stmt>

        <for pos:start="113:9" pos:end="145:9">for <control pos:start="113:13" pos:end="113:37">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">j</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:32"><expr pos:start="113:21" pos:end="113:31"><name pos:start="113:21" pos:end="113:21">j</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <name pos:start="113:25" pos:end="113:31">nblocks</name></expr>;</condition> <incr pos:start="113:34" pos:end="113:36"><expr pos:start="113:34" pos:end="113:36"><operator pos:start="113:34" pos:end="113:35">++</operator><name pos:start="113:36" pos:end="113:36">j</name></expr></incr>)</control> <block pos:start="113:39" pos:end="145:9">{<block_content pos:start="115:13" pos:end="143:24">

            <expr_stmt pos:start="115:13" pos:end="117:43"><expr pos:start="115:13" pos:end="117:42"><call pos:start="115:13" pos:end="117:42"><name pos:start="115:13" pos:end="115:14">BF</name><argument_list pos:start="115:15" pos:end="117:42">(<argument pos:start="115:16" pos:end="115:20"><expr pos:start="115:16" pos:end="115:20"><name pos:start="115:16" pos:end="115:20"><name pos:start="115:16" pos:end="115:16">p</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:20">re</name></name></expr></argument>, <argument pos:start="115:23" pos:end="115:27"><expr pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:23">p</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">im</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:34"><expr pos:start="115:30" pos:end="115:34"><name pos:start="115:30" pos:end="115:34"><name pos:start="115:30" pos:end="115:30">q</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:34">re</name></name></expr></argument>, <argument pos:start="115:37" pos:end="115:41"><expr pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:37">q</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:41">im</name></name></expr></argument>,

               <argument pos:start="117:16" pos:end="117:20"><expr pos:start="117:16" pos:end="117:20"><name pos:start="117:16" pos:end="117:20"><name pos:start="117:16" pos:end="117:16">p</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:20">re</name></name></expr></argument>, <argument pos:start="117:23" pos:end="117:27"><expr pos:start="117:23" pos:end="117:27"><name pos:start="117:23" pos:end="117:27"><name pos:start="117:23" pos:end="117:23">p</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:27">im</name></name></expr></argument>, <argument pos:start="117:30" pos:end="117:34"><expr pos:start="117:30" pos:end="117:34"><name pos:start="117:30" pos:end="117:34"><name pos:start="117:30" pos:end="117:30">q</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:34">re</name></name></expr></argument>, <argument pos:start="117:37" pos:end="117:41"><expr pos:start="117:37" pos:end="117:41"><name pos:start="117:37" pos:end="117:41"><name pos:start="117:37" pos:end="117:37">q</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:41">im</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <expr_stmt pos:start="121:13" pos:end="121:16"><expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:13">p</name><operator pos:start="121:14" pos:end="121:15">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:16"><expr pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:13">q</name><operator pos:start="123:14" pos:end="123:15">++</operator></expr>;</expr_stmt>

            <for pos:start="125:13" pos:end="137:13">for<control pos:start="125:16" pos:end="125:51">(<init pos:start="125:17" pos:end="125:28"><expr pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:17">l</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:27">nblocks</name></expr>;</init> <condition pos:start="125:30" pos:end="125:37"><expr pos:start="125:30" pos:end="125:36"><name pos:start="125:30" pos:end="125:30">l</name> <operator pos:start="125:32" pos:end="125:32">&lt;</operator> <name pos:start="125:34" pos:end="125:36">np2</name></expr>;</condition> <incr pos:start="125:39" pos:end="125:50"><expr pos:start="125:39" pos:end="125:50"><name pos:start="125:39" pos:end="125:39">l</name> <operator pos:start="125:41" pos:end="125:42">+=</operator> <name pos:start="125:44" pos:end="125:50">nblocks</name></expr></incr>)</control> <block pos:start="125:53" pos:end="137:13">{<block_content pos:start="127:17" pos:end="135:20">

                <expr_stmt pos:start="127:17" pos:end="127:79"><expr pos:start="127:17" pos:end="127:78"><call pos:start="127:17" pos:end="127:78"><name pos:start="127:17" pos:end="127:20">CMUL</name><argument_list pos:start="127:21" pos:end="127:78">(<argument pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:27"><name pos:start="127:22" pos:end="127:27">tmp_re</name></expr></argument>, <argument pos:start="127:30" pos:end="127:35"><expr pos:start="127:30" pos:end="127:35"><name pos:start="127:30" pos:end="127:35">tmp_im</name></expr></argument>, <argument pos:start="127:38" pos:end="127:49"><expr pos:start="127:38" pos:end="127:49"><name pos:start="127:38" pos:end="127:46"><name pos:start="127:38" pos:end="127:43">exptab</name><index pos:start="127:44" pos:end="127:46">[<expr pos:start="127:45" pos:end="127:45"><name pos:start="127:45" pos:end="127:45">l</name></expr>]</index></name><operator pos:start="127:47" pos:end="127:47">.</operator><name pos:start="127:48" pos:end="127:49">re</name></expr></argument>, <argument pos:start="127:52" pos:end="127:63"><expr pos:start="127:52" pos:end="127:63"><name pos:start="127:52" pos:end="127:60"><name pos:start="127:52" pos:end="127:57">exptab</name><index pos:start="127:58" pos:end="127:60">[<expr pos:start="127:59" pos:end="127:59"><name pos:start="127:59" pos:end="127:59">l</name></expr>]</index></name><operator pos:start="127:61" pos:end="127:61">.</operator><name pos:start="127:62" pos:end="127:63">im</name></expr></argument>, <argument pos:start="127:66" pos:end="127:70"><expr pos:start="127:66" pos:end="127:70"><name pos:start="127:66" pos:end="127:70"><name pos:start="127:66" pos:end="127:66">q</name><operator pos:start="127:67" pos:end="127:68">-&gt;</operator><name pos:start="127:69" pos:end="127:70">re</name></name></expr></argument>, <argument pos:start="127:73" pos:end="127:77"><expr pos:start="127:73" pos:end="127:77"><name pos:start="127:73" pos:end="127:77"><name pos:start="127:73" pos:end="127:73">q</name><operator pos:start="127:74" pos:end="127:75">-&gt;</operator><name pos:start="127:76" pos:end="127:77">im</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="131:49"><expr pos:start="129:17" pos:end="131:48"><call pos:start="129:17" pos:end="131:48"><name pos:start="129:17" pos:end="129:18">BF</name><argument_list pos:start="129:19" pos:end="131:48">(<argument pos:start="129:20" pos:end="129:24"><expr pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:20">p</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:24">re</name></name></expr></argument>, <argument pos:start="129:27" pos:end="129:31"><expr pos:start="129:27" pos:end="129:31"><name pos:start="129:27" pos:end="129:31"><name pos:start="129:27" pos:end="129:27">p</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:31">im</name></name></expr></argument>, <argument pos:start="129:34" pos:end="129:38"><expr pos:start="129:34" pos:end="129:38"><name pos:start="129:34" pos:end="129:38"><name pos:start="129:34" pos:end="129:34">q</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:38">re</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:45"><expr pos:start="129:41" pos:end="129:45"><name pos:start="129:41" pos:end="129:45"><name pos:start="129:41" pos:end="129:41">q</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:45">im</name></name></expr></argument>,

                   <argument pos:start="131:20" pos:end="131:24"><expr pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:20">p</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:24">re</name></name></expr></argument>, <argument pos:start="131:27" pos:end="131:31"><expr pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:27">p</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:31">im</name></name></expr></argument>, <argument pos:start="131:34" pos:end="131:39"><expr pos:start="131:34" pos:end="131:39"><name pos:start="131:34" pos:end="131:39">tmp_re</name></expr></argument>, <argument pos:start="131:42" pos:end="131:47"><expr pos:start="131:42" pos:end="131:47"><name pos:start="131:42" pos:end="131:47">tmp_im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:20"><expr pos:start="133:17" pos:end="133:19"><name pos:start="133:17" pos:end="133:17">p</name><operator pos:start="133:18" pos:end="133:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:20"><expr pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:17">q</name><operator pos:start="135:18" pos:end="135:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="141:13" pos:end="141:24"><expr pos:start="141:13" pos:end="141:23"><name pos:start="141:13" pos:end="141:13">p</name> <operator pos:start="141:15" pos:end="141:16">+=</operator> <name pos:start="141:18" pos:end="141:23">nloops</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:24"><expr pos:start="143:13" pos:end="143:23"><name pos:start="143:13" pos:end="143:13">q</name> <operator pos:start="143:15" pos:end="143:16">+=</operator> <name pos:start="143:18" pos:end="143:23">nloops</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:15">nblocks</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <name pos:start="147:19" pos:end="147:25">nblocks</name> <operator pos:start="147:27" pos:end="147:28">&gt;&gt;</operator> <literal type="number" pos:start="147:30" pos:end="147:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:29"><expr pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:14">nloops</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:23">nloops</name> <operator pos:start="149:25" pos:end="149:26">&lt;&lt;</operator> <literal type="number" pos:start="149:28" pos:end="149:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="151:13" pos:end="151:26">(<expr pos:start="151:14" pos:end="151:25"><name pos:start="151:14" pos:end="151:20">nblocks</name> <operator pos:start="151:22" pos:end="151:23">!=</operator> <literal type="number" pos:start="151:25" pos:end="151:25">0</literal></expr>)</condition>;</do>



<expr_stmt pos:start="155:1" pos:end="162:0"><expr pos:start="155:1" pos:end="155:54"><call pos:start="155:1" pos:end="155:54"><name pos:start="155:1" pos:end="155:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="155:23" pos:end="155:54">(<argument pos:start="155:24" pos:end="155:38"><expr pos:start="155:24" pos:end="155:38"><name pos:start="155:24" pos:end="155:38">altivec_fft_num</name></expr></argument>, <argument pos:start="155:41" pos:end="155:53"><expr pos:start="155:41" pos:end="155:53"><name pos:start="155:41" pos:end="155:48"><name pos:start="155:41" pos:end="155:41">s</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:48">nbits</name></name> <operator pos:start="155:50" pos:end="155:51">&gt;=</operator> <literal type="number" pos:start="155:53" pos:end="155:53">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:else pos:start="159:1" pos:end="159:5">#<cpp:directive pos:start="159:2" pos:end="159:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="159:7" pos:end="159:40">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

<cpp:ifdef pos:start="161:1" pos:end="161:20">#<cpp:directive pos:start="161:2" pos:end="161:6">ifdef</cpp:directive> <name pos:start="161:8" pos:end="161:20">CONFIG_DARWIN</name></cpp:ifdef>

    <decl_stmt pos:start="163:5" pos:end="166:0"><decl pos:start="163:5" pos:end="163:65"><type pos:start="163:5" pos:end="163:31"><specifier pos:start="163:5" pos:end="163:12">register</specifier> <specifier pos:start="163:14" pos:end="163:18">const</specifier> <name pos:start="163:20" pos:end="163:25">vector</name> <name pos:start="163:27" pos:end="163:31">float</name></type> <name pos:start="163:33" pos:end="163:38">vczero</name> <init pos:start="163:40" pos:end="163:65">= <expr pos:start="163:42" pos:end="163:65"><operator pos:start="163:42" pos:end="163:42">(</operator><specifier pos:start="163:43" pos:end="163:47">const</specifier> <name pos:start="163:49" pos:end="163:54">vector</name> <name pos:start="163:56" pos:end="163:60">float</name><operator pos:start="163:61" pos:end="163:61">)</operator><operator pos:start="163:62" pos:end="163:62">(</operator><literal type="number" pos:start="163:63" pos:end="163:64">0.</literal><operator pos:start="163:65" pos:end="163:65">)</operator></expr></init></decl>;</decl_stmt>

<cpp:else pos:start="165:1" pos:end="165:5">#<cpp:directive pos:start="165:2" pos:end="165:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="167:5" pos:end="170:0"><decl pos:start="167:5" pos:end="167:74"><type pos:start="167:5" pos:end="167:31"><specifier pos:start="167:5" pos:end="167:12">register</specifier> <specifier pos:start="167:14" pos:end="167:18">const</specifier> <name pos:start="167:20" pos:end="167:25">vector</name> <name pos:start="167:27" pos:end="167:31">float</name></type> <name pos:start="167:33" pos:end="167:38">vczero</name> <init pos:start="167:40" pos:end="167:74">= <expr pos:start="167:42" pos:end="167:74"><operator pos:start="167:42" pos:end="167:42">(</operator><specifier pos:start="167:43" pos:end="167:47">const</specifier> <name pos:start="167:49" pos:end="167:54">vector</name> <name pos:start="167:56" pos:end="167:60">float</name><operator pos:start="167:61" pos:end="167:61">)</operator><block pos:start="167:62" pos:end="167:74">{<expr pos:start="167:63" pos:end="167:64"><literal type="number" pos:start="167:63" pos:end="167:64">0.</literal></expr>,<expr pos:start="167:66" pos:end="167:67"><literal type="number" pos:start="167:66" pos:end="167:67">0.</literal></expr>,<expr pos:start="167:69" pos:end="167:70"><literal type="number" pos:start="167:69" pos:end="167:70">0.</literal></expr>,<expr pos:start="167:72" pos:end="167:73"><literal type="number" pos:start="167:72" pos:end="167:73">0.</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

    

    <decl_stmt pos:start="173:5" pos:end="173:22"><decl pos:start="173:5" pos:end="173:21"><type pos:start="173:5" pos:end="173:7"><name pos:start="173:5" pos:end="173:7">int</name></type> <name pos:start="173:9" pos:end="173:10">ln</name> <init pos:start="173:12" pos:end="173:21">= <expr pos:start="173:14" pos:end="173:21"><name pos:start="173:14" pos:end="173:21"><name pos:start="173:14" pos:end="173:14">s</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:21">nbits</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="175:5" pos:end="175:19"><decl pos:start="175:5" pos:end="175:9"><type pos:start="175:5" pos:end="175:7"><name pos:start="175:5" pos:end="175:7">int</name></type>	<name pos:start="175:9" pos:end="175:9">j</name></decl>, <decl pos:start="175:12" pos:end="175:13"><type ref="prev" pos:start="175:5" pos:end="175:7"/><name pos:start="175:12" pos:end="175:13">np</name></decl>, <decl pos:start="175:16" pos:end="175:18"><type ref="prev" pos:start="175:5" pos:end="175:7"/><name pos:start="175:16" pos:end="175:18">np2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="177:5" pos:end="177:24"><decl pos:start="177:5" pos:end="177:15"><type pos:start="177:5" pos:end="177:7"><name pos:start="177:5" pos:end="177:7">int</name></type>	<name pos:start="177:9" pos:end="177:15">nblocks</name></decl>, <decl pos:start="177:18" pos:end="177:23"><type ref="prev" pos:start="177:5" pos:end="177:7"/><name pos:start="177:18" pos:end="177:23">nloops</name></decl>;</decl_stmt>

    <decl_stmt pos:start="179:5" pos:end="179:31"><decl pos:start="179:5" pos:end="179:26"><type pos:start="179:5" pos:end="179:25"><specifier pos:start="179:5" pos:end="179:12">register</specifier> <name pos:start="179:14" pos:end="179:23">FFTComplex</name> <modifier pos:start="179:25" pos:end="179:25">*</modifier></type><name pos:start="179:26" pos:end="179:26">p</name></decl>, <decl pos:start="179:29" pos:end="179:30"><type ref="prev" pos:start="179:5" pos:end="179:25"><modifier pos:start="179:29" pos:end="179:29">*</modifier></type><name pos:start="179:30" pos:end="179:30">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="181:5" pos:end="181:29"><decl pos:start="181:5" pos:end="181:20"><type pos:start="181:5" pos:end="181:16"><name pos:start="181:5" pos:end="181:14">FFTComplex</name> <modifier pos:start="181:16" pos:end="181:16">*</modifier></type><name pos:start="181:17" pos:end="181:20">cptr</name></decl>, <decl pos:start="181:23" pos:end="181:28"><type ref="prev" pos:start="181:5" pos:end="181:16"><modifier pos:start="181:23" pos:end="181:23">*</modifier></type><name pos:start="181:24" pos:end="181:28">cptr1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="183:5" pos:end="183:10"><decl pos:start="183:5" pos:end="183:9"><type pos:start="183:5" pos:end="183:7"><name pos:start="183:5" pos:end="183:7">int</name></type> <name pos:start="183:9" pos:end="183:9">k</name></decl>;</decl_stmt>



<expr_stmt pos:start="187:1" pos:end="187:56"><expr pos:start="187:1" pos:end="187:55"><call pos:start="187:1" pos:end="187:55"><name pos:start="187:1" pos:end="187:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="187:24" pos:end="187:55">(<argument pos:start="187:25" pos:end="187:39"><expr pos:start="187:25" pos:end="187:39"><name pos:start="187:25" pos:end="187:39">altivec_fft_num</name></expr></argument>, <argument pos:start="187:42" pos:end="187:54"><expr pos:start="187:42" pos:end="187:54"><name pos:start="187:42" pos:end="187:49"><name pos:start="187:42" pos:end="187:42">s</name><operator pos:start="187:43" pos:end="187:44">-&gt;</operator><name pos:start="187:45" pos:end="187:49">nbits</name></name> <operator pos:start="187:51" pos:end="187:52">&gt;=</operator> <literal type="number" pos:start="187:54" pos:end="187:54">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:17"><expr pos:start="191:5" pos:end="191:16"><name pos:start="191:5" pos:end="191:6">np</name> <operator pos:start="191:8" pos:end="191:8">=</operator> <literal type="number" pos:start="191:10" pos:end="191:10">1</literal> <operator pos:start="191:12" pos:end="191:13">&lt;&lt;</operator> <name pos:start="191:15" pos:end="191:16">ln</name></expr>;</expr_stmt>



    <block pos:start="195:5" pos:end="271:5">{<block_content pos:start="197:9" pos:end="269:27">

        <decl_stmt pos:start="197:9" pos:end="197:42"><decl pos:start="197:9" pos:end="197:23"><type pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:14">vector</name> <name pos:start="197:16" pos:end="197:20">float</name> <modifier pos:start="197:22" pos:end="197:22">*</modifier></type><name pos:start="197:23" pos:end="197:23">r</name></decl>, <decl pos:start="197:26" pos:end="197:26"><type ref="prev" pos:start="197:9" pos:end="197:22"/><name pos:start="197:26" pos:end="197:26">a</name></decl>, <decl pos:start="197:29" pos:end="197:29"><type ref="prev" pos:start="197:9" pos:end="197:22"/><name pos:start="197:29" pos:end="197:29">b</name></decl>, <decl pos:start="197:32" pos:end="197:33"><type ref="prev" pos:start="197:9" pos:end="197:22"/><name pos:start="197:32" pos:end="197:33">a1</name></decl>, <decl pos:start="197:36" pos:end="197:37"><type ref="prev" pos:start="197:9" pos:end="197:22"/><name pos:start="197:36" pos:end="197:37">c1</name></decl>, <decl pos:start="197:40" pos:end="197:41"><type ref="prev" pos:start="197:9" pos:end="197:22"/><name pos:start="197:40" pos:end="197:41">c2</name></decl>;</decl_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:34"><expr pos:start="201:9" pos:end="201:33"><name pos:start="201:9" pos:end="201:9">r</name> <operator pos:start="201:11" pos:end="201:11">=</operator> <operator pos:start="201:13" pos:end="201:13">(</operator><name pos:start="201:14" pos:end="201:19">vector</name> <name pos:start="201:21" pos:end="201:25">float</name> <operator pos:start="201:27" pos:end="201:27">*</operator><operator pos:start="201:28" pos:end="201:28">)</operator><operator pos:start="201:29" pos:end="201:29">&amp;</operator><name pos:start="201:30" pos:end="201:33"><name pos:start="201:30" pos:end="201:30">z</name><index pos:start="201:31" pos:end="201:33">[<expr pos:start="201:32" pos:end="201:32"><literal type="number" pos:start="201:32" pos:end="201:32">0</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:27"><expr pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:10">c1</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <call pos:start="205:14" pos:end="205:26"><name pos:start="205:14" pos:end="205:17">vcii</name><argument_list pos:start="205:18" pos:end="205:26">(<argument pos:start="205:19" pos:end="205:19"><expr pos:start="205:19" pos:end="205:19"><name pos:start="205:19" pos:end="205:19">p</name></expr></argument>,<argument pos:start="205:21" pos:end="205:21"><expr pos:start="205:21" pos:end="205:21"><name pos:start="205:21" pos:end="205:21">p</name></expr></argument>,<argument pos:start="205:23" pos:end="205:23"><expr pos:start="205:23" pos:end="205:23"><name pos:start="205:23" pos:end="205:23">n</name></expr></argument>,<argument pos:start="205:25" pos:end="205:25"><expr pos:start="205:25" pos:end="205:25"><name pos:start="205:25" pos:end="205:25">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="209:9" pos:end="223:13"><if pos:start="209:9" pos:end="215:13">if <condition pos:start="209:12" pos:end="209:23">(<expr pos:start="209:13" pos:end="209:22"><name pos:start="209:13" pos:end="209:22"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:22">inverse</name></name></expr>)</condition>

            <block pos:start="211:13" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:35">

                <expr_stmt pos:start="213:17" pos:end="213:35"><expr pos:start="213:17" pos:end="213:34"><name pos:start="213:17" pos:end="213:18">c2</name> <operator pos:start="213:20" pos:end="213:20">=</operator> <call pos:start="213:22" pos:end="213:34"><name pos:start="213:22" pos:end="213:25">vcii</name><argument_list pos:start="213:26" pos:end="213:34">(<argument pos:start="213:27" pos:end="213:27"><expr pos:start="213:27" pos:end="213:27"><name pos:start="213:27" pos:end="213:27">p</name></expr></argument>,<argument pos:start="213:29" pos:end="213:29"><expr pos:start="213:29" pos:end="213:29"><name pos:start="213:29" pos:end="213:29">p</name></expr></argument>,<argument pos:start="213:31" pos:end="213:31"><expr pos:start="213:31" pos:end="213:31"><name pos:start="213:31" pos:end="213:31">n</name></expr></argument>,<argument pos:start="213:33" pos:end="213:33"><expr pos:start="213:33" pos:end="213:33"><name pos:start="213:33" pos:end="213:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

        <else pos:start="217:9" pos:end="223:13">else

            <block pos:start="219:13" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:35">

                <expr_stmt pos:start="221:17" pos:end="221:35"><expr pos:start="221:17" pos:end="221:34"><name pos:start="221:17" pos:end="221:18">c2</name> <operator pos:start="221:20" pos:end="221:20">=</operator> <call pos:start="221:22" pos:end="221:34"><name pos:start="221:22" pos:end="221:25">vcii</name><argument_list pos:start="221:26" pos:end="221:34">(<argument pos:start="221:27" pos:end="221:27"><expr pos:start="221:27" pos:end="221:27"><name pos:start="221:27" pos:end="221:27">p</name></expr></argument>,<argument pos:start="221:29" pos:end="221:29"><expr pos:start="221:29" pos:end="221:29"><name pos:start="221:29" pos:end="221:29">p</name></expr></argument>,<argument pos:start="221:31" pos:end="221:31"><expr pos:start="221:31" pos:end="221:31"><name pos:start="221:31" pos:end="221:31">p</name></expr></argument>,<argument pos:start="221:33" pos:end="221:33"><expr pos:start="221:33" pos:end="221:33"><name pos:start="221:33" pos:end="221:33">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        

        <expr_stmt pos:start="227:9" pos:end="227:22"><expr pos:start="227:9" pos:end="227:21"><name pos:start="227:9" pos:end="227:9">j</name> <operator pos:start="227:11" pos:end="227:11">=</operator> <operator pos:start="227:13" pos:end="227:13">(</operator><name pos:start="227:14" pos:end="227:15">np</name> <operator pos:start="227:17" pos:end="227:18">&gt;&gt;</operator> <literal type="number" pos:start="227:20" pos:end="227:20">2</literal><operator pos:start="227:21" pos:end="227:21">)</operator></expr>;</expr_stmt>

        <do pos:start="229:9" pos:end="269:27">do <block pos:start="229:12" pos:end="269:9">{<block_content pos:start="231:13" pos:end="267:19">

            <expr_stmt pos:start="231:13" pos:end="231:29"><expr pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:13">a</name> <operator pos:start="231:15" pos:end="231:15">=</operator> <call pos:start="231:17" pos:end="231:28"><name pos:start="231:17" pos:end="231:22">vec_ld</name><argument_list pos:start="231:23" pos:end="231:28">(<argument pos:start="231:24" pos:end="231:24"><expr pos:start="231:24" pos:end="231:24"><literal type="number" pos:start="231:24" pos:end="231:24">0</literal></expr></argument>, <argument pos:start="231:27" pos:end="231:27"><expr pos:start="231:27" pos:end="231:27"><name pos:start="231:27" pos:end="231:27">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:49"><expr pos:start="233:13" pos:end="233:48"><name pos:start="233:13" pos:end="233:14">a1</name> <operator pos:start="233:16" pos:end="233:16">=</operator> <call pos:start="233:18" pos:end="233:48"><name pos:start="233:18" pos:end="233:23">vec_ld</name><argument_list pos:start="233:24" pos:end="233:48">(<argument pos:start="233:25" pos:end="233:44"><expr pos:start="233:25" pos:end="233:44">sizeof<operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:37">vector</name> <name pos:start="233:39" pos:end="233:43">float</name><operator pos:start="233:44" pos:end="233:44">)</operator></expr></argument>, <argument pos:start="233:47" pos:end="233:47"><expr pos:start="233:47" pos:end="233:47"><name pos:start="233:47" pos:end="233:47">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <expr_stmt pos:start="237:13" pos:end="237:47"><expr pos:start="237:13" pos:end="237:46"><name pos:start="237:13" pos:end="237:13">b</name> <operator pos:start="237:15" pos:end="237:15">=</operator> <call pos:start="237:17" pos:end="237:46"><name pos:start="237:17" pos:end="237:24">vec_perm</name><argument_list pos:start="237:25" pos:end="237:46">(<argument pos:start="237:26" pos:end="237:26"><expr pos:start="237:26" pos:end="237:26"><name pos:start="237:26" pos:end="237:26">a</name></expr></argument>,<argument pos:start="237:28" pos:end="237:28"><expr pos:start="237:28" pos:end="237:28"><name pos:start="237:28" pos:end="237:28">a</name></expr></argument>,<argument pos:start="237:30" pos:end="237:45"><expr pos:start="237:30" pos:end="237:45"><call pos:start="237:30" pos:end="237:45"><name pos:start="237:30" pos:end="237:36">vcprmle</name><argument_list pos:start="237:37" pos:end="237:45">(<argument pos:start="237:38" pos:end="237:38"><expr pos:start="237:38" pos:end="237:38"><literal type="number" pos:start="237:38" pos:end="237:38">1</literal></expr></argument>,<argument pos:start="237:40" pos:end="237:40"><expr pos:start="237:40" pos:end="237:40"><literal type="number" pos:start="237:40" pos:end="237:40">0</literal></expr></argument>,<argument pos:start="237:42" pos:end="237:42"><expr pos:start="237:42" pos:end="237:42"><literal type="number" pos:start="237:42" pos:end="237:42">3</literal></expr></argument>,<argument pos:start="237:44" pos:end="237:44"><expr pos:start="237:44" pos:end="237:44"><literal type="number" pos:start="237:44" pos:end="237:44">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:33"><expr pos:start="239:13" pos:end="239:32"><name pos:start="239:13" pos:end="239:13">a</name> <operator pos:start="239:15" pos:end="239:15">=</operator> <call pos:start="239:17" pos:end="239:32"><name pos:start="239:17" pos:end="239:24">vec_madd</name><argument_list pos:start="239:25" pos:end="239:32">(<argument pos:start="239:26" pos:end="239:26"><expr pos:start="239:26" pos:end="239:26"><name pos:start="239:26" pos:end="239:26">a</name></expr></argument>,<argument pos:start="239:28" pos:end="239:29"><expr pos:start="239:28" pos:end="239:29"><name pos:start="239:28" pos:end="239:29">c1</name></expr></argument>,<argument pos:start="239:31" pos:end="239:31"><expr pos:start="239:31" pos:end="239:31"><name pos:start="239:31" pos:end="239:31">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="241:13" pos:end="241:41">/* do the pass 0 butterfly */</comment>

            

            <expr_stmt pos:start="245:13" pos:end="245:49"><expr pos:start="245:13" pos:end="245:48"><name pos:start="245:13" pos:end="245:13">b</name> <operator pos:start="245:15" pos:end="245:15">=</operator> <call pos:start="245:17" pos:end="245:48"><name pos:start="245:17" pos:end="245:24">vec_perm</name><argument_list pos:start="245:25" pos:end="245:48">(<argument pos:start="245:26" pos:end="245:27"><expr pos:start="245:26" pos:end="245:27"><name pos:start="245:26" pos:end="245:27">a1</name></expr></argument>,<argument pos:start="245:29" pos:end="245:30"><expr pos:start="245:29" pos:end="245:30"><name pos:start="245:29" pos:end="245:30">a1</name></expr></argument>,<argument pos:start="245:32" pos:end="245:47"><expr pos:start="245:32" pos:end="245:47"><call pos:start="245:32" pos:end="245:47"><name pos:start="245:32" pos:end="245:38">vcprmle</name><argument_list pos:start="245:39" pos:end="245:47">(<argument pos:start="245:40" pos:end="245:40"><expr pos:start="245:40" pos:end="245:40"><literal type="number" pos:start="245:40" pos:end="245:40">1</literal></expr></argument>,<argument pos:start="245:42" pos:end="245:42"><expr pos:start="245:42" pos:end="245:42"><literal type="number" pos:start="245:42" pos:end="245:42">0</literal></expr></argument>,<argument pos:start="245:44" pos:end="245:44"><expr pos:start="245:44" pos:end="245:44"><literal type="number" pos:start="245:44" pos:end="245:44">3</literal></expr></argument>,<argument pos:start="245:46" pos:end="245:46"><expr pos:start="245:46" pos:end="245:46"><literal type="number" pos:start="245:46" pos:end="245:46">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:34"><expr pos:start="247:13" pos:end="247:33"><name pos:start="247:13" pos:end="247:13">b</name> <operator pos:start="247:15" pos:end="247:15">=</operator> <call pos:start="247:17" pos:end="247:33"><name pos:start="247:17" pos:end="247:24">vec_madd</name><argument_list pos:start="247:25" pos:end="247:33">(<argument pos:start="247:26" pos:end="247:27"><expr pos:start="247:26" pos:end="247:27"><name pos:start="247:26" pos:end="247:27">a1</name></expr></argument>,<argument pos:start="247:29" pos:end="247:30"><expr pos:start="247:29" pos:end="247:30"><name pos:start="247:29" pos:end="247:30">c1</name></expr></argument>,<argument pos:start="247:32" pos:end="247:32"><expr pos:start="247:32" pos:end="247:32"><name pos:start="247:32" pos:end="247:32">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="249:13" pos:end="249:41">/* do the pass 0 butterfly */</comment>

            

            <comment type="block" pos:start="253:13" pos:end="253:38">/* multiply third by -i */</comment>

            <expr_stmt pos:start="255:13" pos:end="255:47"><expr pos:start="255:13" pos:end="255:46"><name pos:start="255:13" pos:end="255:13">b</name> <operator pos:start="255:15" pos:end="255:15">=</operator> <call pos:start="255:17" pos:end="255:46"><name pos:start="255:17" pos:end="255:24">vec_perm</name><argument_list pos:start="255:25" pos:end="255:46">(<argument pos:start="255:26" pos:end="255:26"><expr pos:start="255:26" pos:end="255:26"><name pos:start="255:26" pos:end="255:26">b</name></expr></argument>,<argument pos:start="255:28" pos:end="255:28"><expr pos:start="255:28" pos:end="255:28"><name pos:start="255:28" pos:end="255:28">b</name></expr></argument>,<argument pos:start="255:30" pos:end="255:45"><expr pos:start="255:30" pos:end="255:45"><call pos:start="255:30" pos:end="255:45"><name pos:start="255:30" pos:end="255:36">vcprmle</name><argument_list pos:start="255:37" pos:end="255:45">(<argument pos:start="255:38" pos:end="255:38"><expr pos:start="255:38" pos:end="255:38"><literal type="number" pos:start="255:38" pos:end="255:38">2</literal></expr></argument>,<argument pos:start="255:40" pos:end="255:40"><expr pos:start="255:40" pos:end="255:40"><literal type="number" pos:start="255:40" pos:end="255:40">3</literal></expr></argument>,<argument pos:start="255:42" pos:end="255:42"><expr pos:start="255:42" pos:end="255:42"><literal type="number" pos:start="255:42" pos:end="255:42">1</literal></expr></argument>,<argument pos:start="255:44" pos:end="255:44"><expr pos:start="255:44" pos:end="255:44"><literal type="number" pos:start="255:44" pos:end="255:44">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <comment type="block" pos:start="259:13" pos:end="259:41">/* do the pass 1 butterfly */</comment>

            <expr_stmt pos:start="261:13" pos:end="261:43"><expr pos:start="261:13" pos:end="261:42"><call pos:start="261:13" pos:end="261:42"><name pos:start="261:13" pos:end="261:18">vec_st</name><argument_list pos:start="261:19" pos:end="261:42">(<argument pos:start="261:20" pos:end="261:35"><expr pos:start="261:20" pos:end="261:35"><call pos:start="261:20" pos:end="261:35"><name pos:start="261:20" pos:end="261:27">vec_madd</name><argument_list pos:start="261:28" pos:end="261:35">(<argument pos:start="261:29" pos:end="261:29"><expr pos:start="261:29" pos:end="261:29"><name pos:start="261:29" pos:end="261:29">b</name></expr></argument>,<argument pos:start="261:31" pos:end="261:32"><expr pos:start="261:31" pos:end="261:32"><name pos:start="261:31" pos:end="261:32">c2</name></expr></argument>,<argument pos:start="261:34" pos:end="261:34"><expr pos:start="261:34" pos:end="261:34"><name pos:start="261:34" pos:end="261:34">a</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="261:38" pos:end="261:38"><expr pos:start="261:38" pos:end="261:38"><literal type="number" pos:start="261:38" pos:end="261:38">0</literal></expr></argument>, <argument pos:start="261:41" pos:end="261:41"><expr pos:start="261:41" pos:end="261:41"><name pos:start="261:41" pos:end="261:41">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:63"><expr pos:start="263:13" pos:end="263:62"><call pos:start="263:13" pos:end="263:62"><name pos:start="263:13" pos:end="263:18">vec_st</name><argument_list pos:start="263:19" pos:end="263:62">(<argument pos:start="263:20" pos:end="263:36"><expr pos:start="263:20" pos:end="263:36"><call pos:start="263:20" pos:end="263:36"><name pos:start="263:20" pos:end="263:28">vec_nmsub</name><argument_list pos:start="263:29" pos:end="263:36">(<argument pos:start="263:30" pos:end="263:30"><expr pos:start="263:30" pos:end="263:30"><name pos:start="263:30" pos:end="263:30">b</name></expr></argument>,<argument pos:start="263:32" pos:end="263:33"><expr pos:start="263:32" pos:end="263:33"><name pos:start="263:32" pos:end="263:33">c2</name></expr></argument>,<argument pos:start="263:35" pos:end="263:35"><expr pos:start="263:35" pos:end="263:35"><name pos:start="263:35" pos:end="263:35">a</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="263:39" pos:end="263:58"><expr pos:start="263:39" pos:end="263:58">sizeof<operator pos:start="263:45" pos:end="263:45">(</operator><name pos:start="263:46" pos:end="263:51">vector</name> <name pos:start="263:53" pos:end="263:57">float</name><operator pos:start="263:58" pos:end="263:58">)</operator></expr></argument>, <argument pos:start="263:61" pos:end="263:61"><expr pos:start="263:61" pos:end="263:61"><name pos:start="263:61" pos:end="263:61">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <expr_stmt pos:start="267:13" pos:end="267:19"><expr pos:start="267:13" pos:end="267:18"><name pos:start="267:13" pos:end="267:13">r</name> <operator pos:start="267:15" pos:end="267:16">+=</operator> <literal type="number" pos:start="267:18" pos:end="267:18">2</literal></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="269:17" pos:end="269:26">(<expr pos:start="269:18" pos:end="269:25"><operator pos:start="269:18" pos:end="269:19">--</operator><name pos:start="269:20" pos:end="269:20">j</name> <operator pos:start="269:22" pos:end="269:23">!=</operator> <literal type="number" pos:start="269:25" pos:end="269:25">0</literal></expr>)</condition>;</do>

    </block_content>}</block>

    <comment type="block" pos:start="273:5" pos:end="273:24">/* pass 2 .. ln-1 */</comment>



    <expr_stmt pos:start="277:5" pos:end="277:22"><expr pos:start="277:5" pos:end="277:21"><name pos:start="277:5" pos:end="277:11">nblocks</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <name pos:start="277:15" pos:end="277:16">np</name> <operator pos:start="277:18" pos:end="277:19">&gt;&gt;</operator> <literal type="number" pos:start="277:21" pos:end="277:21">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:20"><expr pos:start="279:5" pos:end="279:19"><name pos:start="279:5" pos:end="279:10">nloops</name> <operator pos:start="279:12" pos:end="279:12">=</operator> <literal type="number" pos:start="279:14" pos:end="279:14">1</literal> <operator pos:start="279:16" pos:end="279:17">&lt;&lt;</operator> <literal type="number" pos:start="279:19" pos:end="279:19">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:18"><expr pos:start="281:5" pos:end="281:17"><name pos:start="281:5" pos:end="281:7">np2</name> <operator pos:start="281:9" pos:end="281:9">=</operator> <name pos:start="281:11" pos:end="281:12">np</name> <operator pos:start="281:14" pos:end="281:15">&gt;&gt;</operator> <literal type="number" pos:start="281:17" pos:end="281:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="285:5" pos:end="285:23"><expr pos:start="285:5" pos:end="285:22"><name pos:start="285:5" pos:end="285:9">cptr1</name> <operator pos:start="285:11" pos:end="285:11">=</operator> <name pos:start="285:13" pos:end="285:22"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:22">exptab1</name></name></expr>;</expr_stmt>

    <do pos:start="287:5" pos:end="359:27">do <block pos:start="287:8" pos:end="359:5">{<block_content pos:start="289:9" pos:end="357:29">

        <expr_stmt pos:start="289:9" pos:end="289:14"><expr pos:start="289:9" pos:end="289:13"><name pos:start="289:9" pos:end="289:9">p</name> <operator pos:start="289:11" pos:end="289:11">=</operator> <name pos:start="289:13" pos:end="289:13">z</name></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:23"><expr pos:start="291:9" pos:end="291:22"><name pos:start="291:9" pos:end="291:9">q</name> <operator pos:start="291:11" pos:end="291:11">=</operator> <name pos:start="291:13" pos:end="291:13">z</name> <operator pos:start="291:15" pos:end="291:15">+</operator> <name pos:start="291:17" pos:end="291:22">nloops</name></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:20"><expr pos:start="293:9" pos:end="293:19"><name pos:start="293:9" pos:end="293:9">j</name> <operator pos:start="293:11" pos:end="293:11">=</operator> <name pos:start="293:13" pos:end="293:19">nblocks</name></expr>;</expr_stmt>

        <do pos:start="295:9" pos:end="351:22">do <block pos:start="295:12" pos:end="351:9">{<block_content pos:start="297:13" pos:end="349:24">

            <expr_stmt pos:start="297:13" pos:end="297:25"><expr pos:start="297:13" pos:end="297:24"><name pos:start="297:13" pos:end="297:16">cptr</name> <operator pos:start="297:18" pos:end="297:18">=</operator> <name pos:start="297:20" pos:end="297:24">cptr1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:28"><expr pos:start="299:13" pos:end="299:27"><name pos:start="299:13" pos:end="299:13">k</name> <operator pos:start="299:15" pos:end="299:15">=</operator> <name pos:start="299:17" pos:end="299:22">nloops</name> <operator pos:start="299:24" pos:end="299:25">&gt;&gt;</operator> <literal type="number" pos:start="299:27" pos:end="299:27">1</literal></expr>;</expr_stmt>

            <do pos:start="301:13" pos:end="343:26">do <block pos:start="301:16" pos:end="343:13">{<block_content pos:start="303:17" pos:end="341:26">

                <decl_stmt pos:start="303:17" pos:end="303:38"><decl pos:start="303:17" pos:end="303:30"><type pos:start="303:17" pos:end="303:28"><name pos:start="303:17" pos:end="303:22">vector</name> <name pos:start="303:24" pos:end="303:28">float</name></type> <name pos:start="303:30" pos:end="303:30">a</name></decl>,<decl pos:start="303:32" pos:end="303:32"><type ref="prev" pos:start="303:17" pos:end="303:28"/><name pos:start="303:32" pos:end="303:32">b</name></decl>,<decl pos:start="303:34" pos:end="303:34"><type ref="prev" pos:start="303:17" pos:end="303:28"/><name pos:start="303:34" pos:end="303:34">c</name></decl>,<decl pos:start="303:36" pos:end="303:37"><type ref="prev" pos:start="303:17" pos:end="303:28"/><name pos:start="303:36" pos:end="303:37">t1</name></decl>;</decl_stmt>



                <expr_stmt pos:start="307:17" pos:end="307:41"><expr pos:start="307:17" pos:end="307:40"><name pos:start="307:17" pos:end="307:17">a</name> <operator pos:start="307:19" pos:end="307:19">=</operator> <call pos:start="307:21" pos:end="307:40"><name pos:start="307:21" pos:end="307:26">vec_ld</name><argument_list pos:start="307:27" pos:end="307:40">(<argument pos:start="307:28" pos:end="307:28"><expr pos:start="307:28" pos:end="307:28"><literal type="number" pos:start="307:28" pos:end="307:28">0</literal></expr></argument>, <argument pos:start="307:31" pos:end="307:39"><expr pos:start="307:31" pos:end="307:39"><operator pos:start="307:31" pos:end="307:31">(</operator><name pos:start="307:32" pos:end="307:36">float</name><operator pos:start="307:37" pos:end="307:37">*</operator><operator pos:start="307:38" pos:end="307:38">)</operator><name pos:start="307:39" pos:end="307:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:41"><expr pos:start="309:17" pos:end="309:40"><name pos:start="309:17" pos:end="309:17">b</name> <operator pos:start="309:19" pos:end="309:19">=</operator> <call pos:start="309:21" pos:end="309:40"><name pos:start="309:21" pos:end="309:26">vec_ld</name><argument_list pos:start="309:27" pos:end="309:40">(<argument pos:start="309:28" pos:end="309:28"><expr pos:start="309:28" pos:end="309:28"><literal type="number" pos:start="309:28" pos:end="309:28">0</literal></expr></argument>, <argument pos:start="309:31" pos:end="309:39"><expr pos:start="309:31" pos:end="309:39"><operator pos:start="309:31" pos:end="309:31">(</operator><name pos:start="309:32" pos:end="309:36">float</name><operator pos:start="309:37" pos:end="309:37">*</operator><operator pos:start="309:38" pos:end="309:38">)</operator><name pos:start="309:39" pos:end="309:39">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                

                <comment type="block" pos:start="313:17" pos:end="313:33">/* complex mul */</comment>

                <expr_stmt pos:start="315:17" pos:end="315:44"><expr pos:start="315:17" pos:end="315:43"><name pos:start="315:17" pos:end="315:17">c</name> <operator pos:start="315:19" pos:end="315:19">=</operator> <call pos:start="315:21" pos:end="315:43"><name pos:start="315:21" pos:end="315:26">vec_ld</name><argument_list pos:start="315:27" pos:end="315:43">(<argument pos:start="315:28" pos:end="315:28"><expr pos:start="315:28" pos:end="315:28"><literal type="number" pos:start="315:28" pos:end="315:28">0</literal></expr></argument>, <argument pos:start="315:31" pos:end="315:42"><expr pos:start="315:31" pos:end="315:42"><operator pos:start="315:31" pos:end="315:31">(</operator><name pos:start="315:32" pos:end="315:36">float</name><operator pos:start="315:37" pos:end="315:37">*</operator><operator pos:start="315:38" pos:end="315:38">)</operator><name pos:start="315:39" pos:end="315:42">cptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="317:17" pos:end="317:36">/*  cre*re cim*re */</comment>

                <expr_stmt pos:start="319:17" pos:end="319:72"><expr pos:start="319:17" pos:end="319:71"><name pos:start="319:17" pos:end="319:18">t1</name> <operator pos:start="319:20" pos:end="319:20">=</operator> <call pos:start="319:22" pos:end="319:71"><name pos:start="319:22" pos:end="319:29">vec_madd</name><argument_list pos:start="319:30" pos:end="319:71">(<argument pos:start="319:31" pos:end="319:31"><expr pos:start="319:31" pos:end="319:31"><name pos:start="319:31" pos:end="319:31">c</name></expr></argument>, <argument pos:start="319:34" pos:end="319:63"><expr pos:start="319:34" pos:end="319:63"><call pos:start="319:34" pos:end="319:63"><name pos:start="319:34" pos:end="319:41">vec_perm</name><argument_list pos:start="319:42" pos:end="319:63">(<argument pos:start="319:43" pos:end="319:43"><expr pos:start="319:43" pos:end="319:43"><name pos:start="319:43" pos:end="319:43">b</name></expr></argument>,<argument pos:start="319:45" pos:end="319:45"><expr pos:start="319:45" pos:end="319:45"><name pos:start="319:45" pos:end="319:45">b</name></expr></argument>,<argument pos:start="319:47" pos:end="319:62"><expr pos:start="319:47" pos:end="319:62"><call pos:start="319:47" pos:end="319:62"><name pos:start="319:47" pos:end="319:53">vcprmle</name><argument_list pos:start="319:54" pos:end="319:62">(<argument pos:start="319:55" pos:end="319:55"><expr pos:start="319:55" pos:end="319:55"><literal type="number" pos:start="319:55" pos:end="319:55">2</literal></expr></argument>,<argument pos:start="319:57" pos:end="319:57"><expr pos:start="319:57" pos:end="319:57"><literal type="number" pos:start="319:57" pos:end="319:57">2</literal></expr></argument>,<argument pos:start="319:59" pos:end="319:59"><expr pos:start="319:59" pos:end="319:59"><literal type="number" pos:start="319:59" pos:end="319:59">0</literal></expr></argument>,<argument pos:start="319:61" pos:end="319:61"><expr pos:start="319:61" pos:end="319:61"><literal type="number" pos:start="319:61" pos:end="319:61">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="319:65" pos:end="319:70"><expr pos:start="319:65" pos:end="319:70"><name pos:start="319:65" pos:end="319:70">vczero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:63"><expr pos:start="321:17" pos:end="321:62"><name pos:start="321:17" pos:end="321:17">c</name> <operator pos:start="321:19" pos:end="321:19">=</operator> <call pos:start="321:21" pos:end="321:62"><name pos:start="321:21" pos:end="321:26">vec_ld</name><argument_list pos:start="321:27" pos:end="321:62">(<argument pos:start="321:28" pos:end="321:47"><expr pos:start="321:28" pos:end="321:47">sizeof<operator pos:start="321:34" pos:end="321:34">(</operator><name pos:start="321:35" pos:end="321:40">vector</name> <name pos:start="321:42" pos:end="321:46">float</name><operator pos:start="321:47" pos:end="321:47">)</operator></expr></argument>, <argument pos:start="321:50" pos:end="321:61"><expr pos:start="321:50" pos:end="321:61"><operator pos:start="321:50" pos:end="321:50">(</operator><name pos:start="321:51" pos:end="321:55">float</name><operator pos:start="321:56" pos:end="321:56">*</operator><operator pos:start="321:57" pos:end="321:57">)</operator><name pos:start="321:58" pos:end="321:61">cptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="323:17" pos:end="323:37">/*  -cim*im cre*im */</comment>

                <expr_stmt pos:start="325:17" pos:end="325:67"><expr pos:start="325:17" pos:end="325:66"><name pos:start="325:17" pos:end="325:17">b</name> <operator pos:start="325:19" pos:end="325:19">=</operator> <call pos:start="325:21" pos:end="325:66"><name pos:start="325:21" pos:end="325:28">vec_madd</name><argument_list pos:start="325:29" pos:end="325:66">(<argument pos:start="325:30" pos:end="325:30"><expr pos:start="325:30" pos:end="325:30"><name pos:start="325:30" pos:end="325:30">c</name></expr></argument>, <argument pos:start="325:33" pos:end="325:62"><expr pos:start="325:33" pos:end="325:62"><call pos:start="325:33" pos:end="325:62"><name pos:start="325:33" pos:end="325:40">vec_perm</name><argument_list pos:start="325:41" pos:end="325:62">(<argument pos:start="325:42" pos:end="325:42"><expr pos:start="325:42" pos:end="325:42"><name pos:start="325:42" pos:end="325:42">b</name></expr></argument>,<argument pos:start="325:44" pos:end="325:44"><expr pos:start="325:44" pos:end="325:44"><name pos:start="325:44" pos:end="325:44">b</name></expr></argument>,<argument pos:start="325:46" pos:end="325:61"><expr pos:start="325:46" pos:end="325:61"><call pos:start="325:46" pos:end="325:61"><name pos:start="325:46" pos:end="325:52">vcprmle</name><argument_list pos:start="325:53" pos:end="325:61">(<argument pos:start="325:54" pos:end="325:54"><expr pos:start="325:54" pos:end="325:54"><literal type="number" pos:start="325:54" pos:end="325:54">3</literal></expr></argument>,<argument pos:start="325:56" pos:end="325:56"><expr pos:start="325:56" pos:end="325:56"><literal type="number" pos:start="325:56" pos:end="325:56">3</literal></expr></argument>,<argument pos:start="325:58" pos:end="325:58"><expr pos:start="325:58" pos:end="325:58"><literal type="number" pos:start="325:58" pos:end="325:58">1</literal></expr></argument>,<argument pos:start="325:60" pos:end="325:60"><expr pos:start="325:60" pos:end="325:60"><literal type="number" pos:start="325:60" pos:end="325:60">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="325:64" pos:end="325:65"><expr pos:start="325:64" pos:end="325:65"><name pos:start="325:64" pos:end="325:65">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                

                <comment type="block" pos:start="329:17" pos:end="329:31">/* butterfly */</comment>

                <expr_stmt pos:start="331:17" pos:end="331:51"><expr pos:start="331:17" pos:end="331:50"><call pos:start="331:17" pos:end="331:50"><name pos:start="331:17" pos:end="331:22">vec_st</name><argument_list pos:start="331:23" pos:end="331:50">(<argument pos:start="331:24" pos:end="331:35"><expr pos:start="331:24" pos:end="331:35"><call pos:start="331:24" pos:end="331:35"><name pos:start="331:24" pos:end="331:30">vec_add</name><argument_list pos:start="331:31" pos:end="331:35">(<argument pos:start="331:32" pos:end="331:32"><expr pos:start="331:32" pos:end="331:32"><name pos:start="331:32" pos:end="331:32">a</name></expr></argument>,<argument pos:start="331:34" pos:end="331:34"><expr pos:start="331:34" pos:end="331:34"><name pos:start="331:34" pos:end="331:34">b</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="331:38" pos:end="331:38"><expr pos:start="331:38" pos:end="331:38"><literal type="number" pos:start="331:38" pos:end="331:38">0</literal></expr></argument>, <argument pos:start="331:41" pos:end="331:49"><expr pos:start="331:41" pos:end="331:49"><operator pos:start="331:41" pos:end="331:41">(</operator><name pos:start="331:42" pos:end="331:46">float</name><operator pos:start="331:47" pos:end="331:47">*</operator><operator pos:start="331:48" pos:end="331:48">)</operator><name pos:start="331:49" pos:end="331:49">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:51"><expr pos:start="333:17" pos:end="333:50"><call pos:start="333:17" pos:end="333:50"><name pos:start="333:17" pos:end="333:22">vec_st</name><argument_list pos:start="333:23" pos:end="333:50">(<argument pos:start="333:24" pos:end="333:35"><expr pos:start="333:24" pos:end="333:35"><call pos:start="333:24" pos:end="333:35"><name pos:start="333:24" pos:end="333:30">vec_sub</name><argument_list pos:start="333:31" pos:end="333:35">(<argument pos:start="333:32" pos:end="333:32"><expr pos:start="333:32" pos:end="333:32"><name pos:start="333:32" pos:end="333:32">a</name></expr></argument>,<argument pos:start="333:34" pos:end="333:34"><expr pos:start="333:34" pos:end="333:34"><name pos:start="333:34" pos:end="333:34">b</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="333:38" pos:end="333:38"><expr pos:start="333:38" pos:end="333:38"><literal type="number" pos:start="333:38" pos:end="333:38">0</literal></expr></argument>, <argument pos:start="333:41" pos:end="333:49"><expr pos:start="333:41" pos:end="333:49"><operator pos:start="333:41" pos:end="333:41">(</operator><name pos:start="333:42" pos:end="333:46">float</name><operator pos:start="333:47" pos:end="333:47">*</operator><operator pos:start="333:48" pos:end="333:48">)</operator><name pos:start="333:49" pos:end="333:49">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                

                <expr_stmt pos:start="337:17" pos:end="337:23"><expr pos:start="337:17" pos:end="337:22"><name pos:start="337:17" pos:end="337:17">p</name> <operator pos:start="337:19" pos:end="337:20">+=</operator> <literal type="number" pos:start="337:22" pos:end="337:22">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:23"><expr pos:start="339:17" pos:end="339:22"><name pos:start="339:17" pos:end="339:17">q</name> <operator pos:start="339:19" pos:end="339:20">+=</operator> <literal type="number" pos:start="339:22" pos:end="339:22">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:26"><expr pos:start="341:17" pos:end="341:25"><name pos:start="341:17" pos:end="341:20">cptr</name> <operator pos:start="341:22" pos:end="341:23">+=</operator> <literal type="number" pos:start="341:25" pos:end="341:25">4</literal></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="343:21" pos:end="343:25">(<expr pos:start="343:22" pos:end="343:24"><operator pos:start="343:22" pos:end="343:23">--</operator><name pos:start="343:24" pos:end="343:24">k</name></expr>)</condition>;</do>

            

            <expr_stmt pos:start="347:13" pos:end="347:24"><expr pos:start="347:13" pos:end="347:23"><name pos:start="347:13" pos:end="347:13">p</name> <operator pos:start="347:15" pos:end="347:16">+=</operator> <name pos:start="347:18" pos:end="347:23">nloops</name></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:24"><expr pos:start="349:13" pos:end="349:23"><name pos:start="349:13" pos:end="349:13">q</name> <operator pos:start="349:15" pos:end="349:16">+=</operator> <name pos:start="349:18" pos:end="349:23">nloops</name></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="351:17" pos:end="351:21">(<expr pos:start="351:18" pos:end="351:20"><operator pos:start="351:18" pos:end="351:19">--</operator><name pos:start="351:20" pos:end="351:20">j</name></expr>)</condition>;</do>

        <expr_stmt pos:start="353:9" pos:end="353:28"><expr pos:start="353:9" pos:end="353:27"><name pos:start="353:9" pos:end="353:13">cptr1</name> <operator pos:start="353:15" pos:end="353:16">+=</operator> <name pos:start="353:18" pos:end="353:23">nloops</name> <operator pos:start="353:25" pos:end="353:25">*</operator> <literal type="number" pos:start="353:27" pos:end="353:27">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:31"><expr pos:start="355:9" pos:end="355:30"><name pos:start="355:9" pos:end="355:15">nblocks</name> <operator pos:start="355:17" pos:end="355:17">=</operator> <name pos:start="355:19" pos:end="355:25">nblocks</name> <operator pos:start="355:27" pos:end="355:28">&gt;&gt;</operator> <literal type="number" pos:start="355:30" pos:end="355:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:29"><expr pos:start="357:9" pos:end="357:28"><name pos:start="357:9" pos:end="357:14">nloops</name> <operator pos:start="357:16" pos:end="357:16">=</operator> <name pos:start="357:18" pos:end="357:23">nloops</name> <operator pos:start="357:25" pos:end="357:26">&lt;&lt;</operator> <literal type="number" pos:start="357:28" pos:end="357:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="359:13" pos:end="359:26">(<expr pos:start="359:14" pos:end="359:25"><name pos:start="359:14" pos:end="359:20">nblocks</name> <operator pos:start="359:22" pos:end="359:23">!=</operator> <literal type="number" pos:start="359:25" pos:end="359:25">0</literal></expr>)</condition>;</do>



<expr_stmt pos:start="363:1" pos:end="368:0"><expr pos:start="363:1" pos:end="363:54"><call pos:start="363:1" pos:end="363:54"><name pos:start="363:1" pos:end="363:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="363:23" pos:end="363:54">(<argument pos:start="363:24" pos:end="363:38"><expr pos:start="363:24" pos:end="363:38"><name pos:start="363:24" pos:end="363:38">altivec_fft_num</name></expr></argument>, <argument pos:start="363:41" pos:end="363:53"><expr pos:start="363:41" pos:end="363:53"><name pos:start="363:41" pos:end="363:48"><name pos:start="363:41" pos:end="363:41">s</name><operator pos:start="363:42" pos:end="363:43">-&gt;</operator><name pos:start="363:44" pos:end="363:48">nbits</name></name> <operator pos:start="363:50" pos:end="363:51">&gt;=</operator> <literal type="number" pos:start="363:53" pos:end="363:53">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:endif pos:start="367:1" pos:end="367:6">#<cpp:directive pos:start="367:2" pos:end="367:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="367:8" pos:end="367:41">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

</block_content>}</block></function>
</unit>
