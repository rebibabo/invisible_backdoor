<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20788.c" pos:tabs="8"><function pos:start="1:1" pos:end="283:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:24">do_fcntl</name><parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:31"><decl pos:start="1:26" pos:end="1:31"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:31">fd</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:40"><decl pos:start="1:34" pos:end="1:40"><type pos:start="1:34" pos:end="1:40"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:40">cmd</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:51">abi_ulong</name></type> <name pos:start="1:53" pos:end="1:55">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="283:1">{<block_content pos:start="5:5" pos:end="281:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:16">flock</name></name></type> <name pos:start="5:18" pos:end="5:19">fl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">target_flock</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:34">target_fl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:18">flock64</name></name></type> <name pos:start="9:20" pos:end="9:23">fl64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:25">target_flock64</name></name> <modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:38">target_fl64</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:18">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:18">F_GETOWN_EX</name></cpp:ifdef>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:21">f_owner_ex</name></name></type> <name pos:start="15:23" pos:end="15:25">fox</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:40"><type pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:28">target_f_owner_ex</name></name> <modifier pos:start="17:30" pos:end="17:30">*</modifier></type><name pos:start="17:31" pos:end="17:40">target_fox</name></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">abi_long</name></type> <name pos:start="21:14" pos:end="21:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:49"><decl pos:start="23:5" pos:end="23:48"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">host_cmd</name> <init pos:start="23:18" pos:end="23:48">= <expr pos:start="23:20" pos:end="23:48"><call pos:start="23:20" pos:end="23:48"><name pos:start="23:20" pos:end="23:43">target_to_host_fcntl_cmd</name><argument_list pos:start="23:44" pos:end="23:48">(<argument pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><name pos:start="23:45" pos:end="23:47">cmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:28"><if pos:start="27:5" pos:end="29:28">if <condition pos:start="27:8" pos:end="27:35">(<expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:16">host_cmd</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <operator pos:start="27:21" pos:end="27:21">-</operator><name pos:start="27:22" pos:end="27:34">TARGET_EINVAL</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:28"><block_content pos:start="29:13" pos:end="29:28">

	    <return pos:start="29:13" pos:end="29:28">return <expr pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:27">host_cmd</name></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="33:5" pos:end="279:5">switch<condition pos:start="33:11" pos:end="33:15">(<expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:14">cmd</name></expr>)</condition> <block pos:start="33:17" pos:end="279:5">{<block_content pos:start="35:5" pos:end="277:14">

    <case pos:start="35:5" pos:end="35:24">case <expr pos:start="35:10" pos:end="35:23"><name pos:start="35:10" pos:end="35:23">TARGET_F_GETLK</name></expr>:</case>

        <if_stmt pos:start="37:9" pos:end="39:34"><if pos:start="37:9" pos:end="39:34">if <condition pos:start="37:12" pos:end="37:62">(<expr pos:start="37:13" pos:end="37:61"><operator pos:start="37:13" pos:end="37:13">!</operator><call pos:start="37:14" pos:end="37:61"><name pos:start="37:14" pos:end="37:29">lock_user_struct</name><argument_list pos:start="37:30" pos:end="37:61">(<argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41">VERIFY_READ</name></expr></argument>, <argument pos:start="37:44" pos:end="37:52"><expr pos:start="37:44" pos:end="37:52"><name pos:start="37:44" pos:end="37:52">target_fl</name></expr></argument>, <argument pos:start="37:55" pos:end="37:57"><expr pos:start="37:55" pos:end="37:57"><name pos:start="37:55" pos:end="37:57">arg</name></expr></argument>, <argument pos:start="37:60" pos:end="37:60"><expr pos:start="37:60" pos:end="37:60"><literal type="number" pos:start="37:60" pos:end="37:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:34"><block_content pos:start="39:13" pos:end="39:34">

            <return pos:start="39:13" pos:end="39:34">return <expr pos:start="39:20" pos:end="39:33"><operator pos:start="39:20" pos:end="39:20">-</operator><name pos:start="39:21" pos:end="39:33">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="43:80"><expr pos:start="41:9" pos:end="43:79"><name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:10">fl</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:17">l_type</name></name> <operator pos:start="41:19" pos:end="41:19">=</operator>

                  <call pos:start="43:19" pos:end="43:79"><name pos:start="43:19" pos:end="43:40">target_to_host_bitmask</name><argument_list pos:start="43:41" pos:end="43:79">(<argument pos:start="43:42" pos:end="43:67"><expr pos:start="43:42" pos:end="43:67"><call pos:start="43:42" pos:end="43:67"><name pos:start="43:42" pos:end="43:48">tswap16</name><argument_list pos:start="43:49" pos:end="43:67">(<argument pos:start="43:50" pos:end="43:66"><expr pos:start="43:50" pos:end="43:66"><name pos:start="43:50" pos:end="43:66"><name pos:start="43:50" pos:end="43:58">target_fl</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:66">l_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:70" pos:end="43:78"><expr pos:start="43:70" pos:end="43:78"><name pos:start="43:70" pos:end="43:78">flock_tbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:10">fl</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:19">l_whence</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:50"><name pos:start="45:23" pos:end="45:29">tswap16</name><argument_list pos:start="45:30" pos:end="45:50">(<argument pos:start="45:31" pos:end="45:49"><expr pos:start="45:31" pos:end="45:49"><name pos:start="45:31" pos:end="45:49"><name pos:start="45:31" pos:end="45:39">target_fl</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:49">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:49"><expr pos:start="47:9" pos:end="47:48"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:10">fl</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:18">l_start</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:48"><name pos:start="47:22" pos:end="47:28">tswapal</name><argument_list pos:start="47:29" pos:end="47:48">(<argument pos:start="47:30" pos:end="47:47"><expr pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:38">target_fl</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:47">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:10">fl</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:16">l_len</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:44"><name pos:start="49:20" pos:end="49:26">tswapal</name><argument_list pos:start="49:27" pos:end="49:44">(<argument pos:start="49:28" pos:end="49:43"><expr pos:start="49:28" pos:end="49:43"><name pos:start="49:28" pos:end="49:43"><name pos:start="49:28" pos:end="49:36">target_fl</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:43">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:10">fl</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:16">l_pid</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:44"><name pos:start="51:20" pos:end="51:26">tswap32</name><argument_list pos:start="51:27" pos:end="51:44">(<argument pos:start="51:28" pos:end="51:43"><expr pos:start="51:28" pos:end="51:43"><name pos:start="51:28" pos:end="51:43"><name pos:start="51:28" pos:end="51:36">target_fl</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:43">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:26">unlock_user_struct</name><argument_list pos:start="53:27" pos:end="53:45">(<argument pos:start="53:28" pos:end="53:36"><expr pos:start="53:28" pos:end="53:36"><name pos:start="53:28" pos:end="53:36">target_fl</name></expr></argument>, <argument pos:start="53:39" pos:end="53:41"><expr pos:start="53:39" pos:end="53:41"><name pos:start="53:39" pos:end="53:41">arg</name></expr></argument>, <argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:50"><expr pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:49"><name pos:start="55:15" pos:end="55:23">get_errno</name><argument_list pos:start="55:24" pos:end="55:49">(<argument pos:start="55:25" pos:end="55:48"><expr pos:start="55:25" pos:end="55:48"><call pos:start="55:25" pos:end="55:48"><name pos:start="55:25" pos:end="55:29">fcntl</name><argument_list pos:start="55:30" pos:end="55:48">(<argument pos:start="55:31" pos:end="55:32"><expr pos:start="55:31" pos:end="55:32"><name pos:start="55:31" pos:end="55:32">fd</name></expr></argument>, <argument pos:start="55:35" pos:end="55:42"><expr pos:start="55:35" pos:end="55:42"><name pos:start="55:35" pos:end="55:42">host_cmd</name></expr></argument>, <argument pos:start="55:45" pos:end="55:47"><expr pos:start="55:45" pos:end="55:47"><operator pos:start="55:45" pos:end="55:45">&amp;</operator><name pos:start="55:46" pos:end="55:47">fl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="77:9"><if pos:start="57:9" pos:end="77:9">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:18">==</operator> <literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>)</condition> <block pos:start="57:23" pos:end="77:9">{<block_content pos:start="59:13" pos:end="75:50">

            <if_stmt pos:start="59:13" pos:end="61:38"><if pos:start="59:13" pos:end="61:38">if <condition pos:start="59:16" pos:end="59:67">(<expr pos:start="59:17" pos:end="59:66"><operator pos:start="59:17" pos:end="59:17">!</operator><call pos:start="59:18" pos:end="59:66"><name pos:start="59:18" pos:end="59:33">lock_user_struct</name><argument_list pos:start="59:34" pos:end="59:66">(<argument pos:start="59:35" pos:end="59:46"><expr pos:start="59:35" pos:end="59:46"><name pos:start="59:35" pos:end="59:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="59:49" pos:end="59:57"><expr pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:57">target_fl</name></expr></argument>, <argument pos:start="59:60" pos:end="59:62"><expr pos:start="59:60" pos:end="59:62"><name pos:start="59:60" pos:end="59:62">arg</name></expr></argument>, <argument pos:start="59:65" pos:end="59:65"><expr pos:start="59:65" pos:end="59:65"><literal type="number" pos:start="59:65" pos:end="59:65">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:38"><block_content pos:start="61:17" pos:end="61:38">

                <return pos:start="61:17" pos:end="61:38">return <expr pos:start="61:24" pos:end="61:37"><operator pos:start="61:24" pos:end="61:24">-</operator><name pos:start="61:25" pos:end="61:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="65:80"><expr pos:start="63:13" pos:end="65:79"><name pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:21">target_fl</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:29">l_type</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator>

                          <call pos:start="65:27" pos:end="65:79"><name pos:start="65:27" pos:end="65:48">host_to_target_bitmask</name><argument_list pos:start="65:49" pos:end="65:79">(<argument pos:start="65:50" pos:end="65:67"><expr pos:start="65:50" pos:end="65:67"><call pos:start="65:50" pos:end="65:67"><name pos:start="65:50" pos:end="65:56">tswap16</name><argument_list pos:start="65:57" pos:end="65:67">(<argument pos:start="65:58" pos:end="65:66"><expr pos:start="65:58" pos:end="65:66"><name pos:start="65:58" pos:end="65:66"><name pos:start="65:58" pos:end="65:59">fl</name><operator pos:start="65:60" pos:end="65:60">.</operator><name pos:start="65:61" pos:end="65:66">l_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:70" pos:end="65:78"><expr pos:start="65:70" pos:end="65:78"><name pos:start="65:70" pos:end="65:78">flock_tbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:55"><expr pos:start="67:13" pos:end="67:54"><name pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:21">target_fl</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:31">l_whence</name></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <call pos:start="67:35" pos:end="67:54"><name pos:start="67:35" pos:end="67:41">tswap16</name><argument_list pos:start="67:42" pos:end="67:54">(<argument pos:start="67:43" pos:end="67:53"><expr pos:start="67:43" pos:end="67:53"><name pos:start="67:43" pos:end="67:53"><name pos:start="67:43" pos:end="67:44">fl</name><operator pos:start="67:45" pos:end="67:45">.</operator><name pos:start="67:46" pos:end="67:53">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:53"><expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:21">target_fl</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:30">l_start</name></name> <operator pos:start="69:32" pos:end="69:32">=</operator> <call pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:40">tswapal</name><argument_list pos:start="69:41" pos:end="69:52">(<argument pos:start="69:42" pos:end="69:51"><expr pos:start="69:42" pos:end="69:51"><name pos:start="69:42" pos:end="69:51"><name pos:start="69:42" pos:end="69:43">fl</name><operator pos:start="69:44" pos:end="69:44">.</operator><name pos:start="69:45" pos:end="69:51">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:49"><expr pos:start="71:13" pos:end="71:48"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:21">target_fl</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:28">l_len</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <call pos:start="71:32" pos:end="71:48"><name pos:start="71:32" pos:end="71:38">tswapal</name><argument_list pos:start="71:39" pos:end="71:48">(<argument pos:start="71:40" pos:end="71:47"><expr pos:start="71:40" pos:end="71:47"><name pos:start="71:40" pos:end="71:47"><name pos:start="71:40" pos:end="71:41">fl</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:47">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:21">target_fl</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:28">l_pid</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <call pos:start="73:32" pos:end="73:48"><name pos:start="73:32" pos:end="73:38">tswap32</name><argument_list pos:start="73:39" pos:end="73:48">(<argument pos:start="73:40" pos:end="73:47"><expr pos:start="73:40" pos:end="73:47"><name pos:start="73:40" pos:end="73:47"><name pos:start="73:40" pos:end="73:41">fl</name><operator pos:start="73:42" pos:end="73:42">.</operator><name pos:start="73:43" pos:end="73:47">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:50"><expr pos:start="75:13" pos:end="75:49"><call pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:30">unlock_user_struct</name><argument_list pos:start="75:31" pos:end="75:49">(<argument pos:start="75:32" pos:end="75:40"><expr pos:start="75:32" pos:end="75:40"><name pos:start="75:32" pos:end="75:40">target_fl</name></expr></argument>, <argument pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><name pos:start="75:43" pos:end="75:45">arg</name></expr></argument>, <argument pos:start="75:48" pos:end="75:48"><expr pos:start="75:48" pos:end="75:48"><literal type="number" pos:start="75:48" pos:end="75:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>



    <case pos:start="83:5" pos:end="83:24">case <expr pos:start="83:10" pos:end="83:23"><name pos:start="83:10" pos:end="83:23">TARGET_F_SETLK</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:25">case <expr pos:start="85:10" pos:end="85:24"><name pos:start="85:10" pos:end="85:24">TARGET_F_SETLKW</name></expr>:</case>

        <if_stmt pos:start="87:9" pos:end="89:34"><if pos:start="87:9" pos:end="89:34">if <condition pos:start="87:12" pos:end="87:62">(<expr pos:start="87:13" pos:end="87:61"><operator pos:start="87:13" pos:end="87:13">!</operator><call pos:start="87:14" pos:end="87:61"><name pos:start="87:14" pos:end="87:29">lock_user_struct</name><argument_list pos:start="87:30" pos:end="87:61">(<argument pos:start="87:31" pos:end="87:41"><expr pos:start="87:31" pos:end="87:41"><name pos:start="87:31" pos:end="87:41">VERIFY_READ</name></expr></argument>, <argument pos:start="87:44" pos:end="87:52"><expr pos:start="87:44" pos:end="87:52"><name pos:start="87:44" pos:end="87:52">target_fl</name></expr></argument>, <argument pos:start="87:55" pos:end="87:57"><expr pos:start="87:55" pos:end="87:57"><name pos:start="87:55" pos:end="87:57">arg</name></expr></argument>, <argument pos:start="87:60" pos:end="87:60"><expr pos:start="87:60" pos:end="87:60"><literal type="number" pos:start="87:60" pos:end="87:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:34"><block_content pos:start="89:13" pos:end="89:34">

            <return pos:start="89:13" pos:end="89:34">return <expr pos:start="89:20" pos:end="89:33"><operator pos:start="89:20" pos:end="89:20">-</operator><name pos:start="89:21" pos:end="89:33">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="93:80"><expr pos:start="91:9" pos:end="93:79"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:10">fl</name><operator pos:start="91:11" pos:end="91:11">.</operator><name pos:start="91:12" pos:end="91:17">l_type</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator>

                  <call pos:start="93:19" pos:end="93:79"><name pos:start="93:19" pos:end="93:40">target_to_host_bitmask</name><argument_list pos:start="93:41" pos:end="93:79">(<argument pos:start="93:42" pos:end="93:67"><expr pos:start="93:42" pos:end="93:67"><call pos:start="93:42" pos:end="93:67"><name pos:start="93:42" pos:end="93:48">tswap16</name><argument_list pos:start="93:49" pos:end="93:67">(<argument pos:start="93:50" pos:end="93:66"><expr pos:start="93:50" pos:end="93:66"><name pos:start="93:50" pos:end="93:66"><name pos:start="93:50" pos:end="93:58">target_fl</name><operator pos:start="93:59" pos:end="93:60">-&gt;</operator><name pos:start="93:61" pos:end="93:66">l_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:70" pos:end="93:78"><expr pos:start="93:70" pos:end="93:78"><name pos:start="93:70" pos:end="93:78">flock_tbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:51"><expr pos:start="95:9" pos:end="95:50"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:10">fl</name><operator pos:start="95:11" pos:end="95:11">.</operator><name pos:start="95:12" pos:end="95:19">l_whence</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <call pos:start="95:23" pos:end="95:50"><name pos:start="95:23" pos:end="95:29">tswap16</name><argument_list pos:start="95:30" pos:end="95:50">(<argument pos:start="95:31" pos:end="95:49"><expr pos:start="95:31" pos:end="95:49"><name pos:start="95:31" pos:end="95:49"><name pos:start="95:31" pos:end="95:39">target_fl</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:49">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:49"><expr pos:start="97:9" pos:end="97:48"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:10">fl</name><operator pos:start="97:11" pos:end="97:11">.</operator><name pos:start="97:12" pos:end="97:18">l_start</name></name> <operator pos:start="97:20" pos:end="97:20">=</operator> <call pos:start="97:22" pos:end="97:48"><name pos:start="97:22" pos:end="97:28">tswapal</name><argument_list pos:start="97:29" pos:end="97:48">(<argument pos:start="97:30" pos:end="97:47"><expr pos:start="97:30" pos:end="97:47"><name pos:start="97:30" pos:end="97:47"><name pos:start="97:30" pos:end="97:38">target_fl</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:47">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:45"><expr pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:10">fl</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:16">l_len</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:44"><name pos:start="99:20" pos:end="99:26">tswapal</name><argument_list pos:start="99:27" pos:end="99:44">(<argument pos:start="99:28" pos:end="99:43"><expr pos:start="99:28" pos:end="99:43"><name pos:start="99:28" pos:end="99:43"><name pos:start="99:28" pos:end="99:36">target_fl</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:43">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:45"><expr pos:start="101:9" pos:end="101:44"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:10">fl</name><operator pos:start="101:11" pos:end="101:11">.</operator><name pos:start="101:12" pos:end="101:16">l_pid</name></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <call pos:start="101:20" pos:end="101:44"><name pos:start="101:20" pos:end="101:26">tswap32</name><argument_list pos:start="101:27" pos:end="101:44">(<argument pos:start="101:28" pos:end="101:43"><expr pos:start="101:28" pos:end="101:43"><name pos:start="101:28" pos:end="101:43"><name pos:start="101:28" pos:end="101:36">target_fl</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:43">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><call pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:26">unlock_user_struct</name><argument_list pos:start="103:27" pos:end="103:45">(<argument pos:start="103:28" pos:end="103:36"><expr pos:start="103:28" pos:end="103:36"><name pos:start="103:28" pos:end="103:36">target_fl</name></expr></argument>, <argument pos:start="103:39" pos:end="103:41"><expr pos:start="103:39" pos:end="103:41"><name pos:start="103:39" pos:end="103:41">arg</name></expr></argument>, <argument pos:start="103:44" pos:end="103:44"><expr pos:start="103:44" pos:end="103:44"><literal type="number" pos:start="103:44" pos:end="103:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:50"><expr pos:start="105:9" pos:end="105:49"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:49"><name pos:start="105:15" pos:end="105:23">get_errno</name><argument_list pos:start="105:24" pos:end="105:49">(<argument pos:start="105:25" pos:end="105:48"><expr pos:start="105:25" pos:end="105:48"><call pos:start="105:25" pos:end="105:48"><name pos:start="105:25" pos:end="105:29">fcntl</name><argument_list pos:start="105:30" pos:end="105:48">(<argument pos:start="105:31" pos:end="105:32"><expr pos:start="105:31" pos:end="105:32"><name pos:start="105:31" pos:end="105:32">fd</name></expr></argument>, <argument pos:start="105:35" pos:end="105:42"><expr pos:start="105:35" pos:end="105:42"><name pos:start="105:35" pos:end="105:42">host_cmd</name></expr></argument>, <argument pos:start="105:45" pos:end="105:47"><expr pos:start="105:45" pos:end="105:47"><operator pos:start="105:45" pos:end="105:45">&amp;</operator><name pos:start="105:46" pos:end="105:47">fl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>



    <case pos:start="111:5" pos:end="111:26">case <expr pos:start="111:10" pos:end="111:25"><name pos:start="111:10" pos:end="111:25">TARGET_F_GETLK64</name></expr>:</case>

        <if_stmt pos:start="113:9" pos:end="115:34"><if pos:start="113:9" pos:end="115:34">if <condition pos:start="113:12" pos:end="113:64">(<expr pos:start="113:13" pos:end="113:63"><operator pos:start="113:13" pos:end="113:13">!</operator><call pos:start="113:14" pos:end="113:63"><name pos:start="113:14" pos:end="113:29">lock_user_struct</name><argument_list pos:start="113:30" pos:end="113:63">(<argument pos:start="113:31" pos:end="113:41"><expr pos:start="113:31" pos:end="113:41"><name pos:start="113:31" pos:end="113:41">VERIFY_READ</name></expr></argument>, <argument pos:start="113:44" pos:end="113:54"><expr pos:start="113:44" pos:end="113:54"><name pos:start="113:44" pos:end="113:54">target_fl64</name></expr></argument>, <argument pos:start="113:57" pos:end="113:59"><expr pos:start="113:57" pos:end="113:59"><name pos:start="113:57" pos:end="113:59">arg</name></expr></argument>, <argument pos:start="113:62" pos:end="113:62"><expr pos:start="113:62" pos:end="113:62"><literal type="number" pos:start="113:62" pos:end="113:62">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:34"><block_content pos:start="115:13" pos:end="115:34">

            <return pos:start="115:13" pos:end="115:34">return <expr pos:start="115:20" pos:end="115:33"><operator pos:start="115:20" pos:end="115:20">-</operator><name pos:start="115:21" pos:end="115:33">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="119:80"><expr pos:start="117:9" pos:end="119:79"><name pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:12">fl64</name><operator pos:start="117:13" pos:end="117:13">.</operator><name pos:start="117:14" pos:end="117:19">l_type</name></name> <operator pos:start="117:21" pos:end="117:21">=</operator>

           <call pos:start="119:12" pos:end="119:74"><name pos:start="119:12" pos:end="119:33">target_to_host_bitmask</name><argument_list pos:start="119:34" pos:end="119:74">(<argument pos:start="119:35" pos:end="119:62"><expr pos:start="119:35" pos:end="119:62"><call pos:start="119:35" pos:end="119:62"><name pos:start="119:35" pos:end="119:41">tswap16</name><argument_list pos:start="119:42" pos:end="119:62">(<argument pos:start="119:43" pos:end="119:61"><expr pos:start="119:43" pos:end="119:61"><name pos:start="119:43" pos:end="119:61"><name pos:start="119:43" pos:end="119:53">target_fl64</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:61">l_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:65" pos:end="119:73"><expr pos:start="119:65" pos:end="119:73"><name pos:start="119:65" pos:end="119:73">flock_tbl</name></expr></argument>)</argument_list></call> <operator pos:start="119:76" pos:end="119:77">&gt;&gt;</operator> <literal type="number" pos:start="119:79" pos:end="119:79">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:55"><expr pos:start="121:9" pos:end="121:54"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:12">fl64</name><operator pos:start="121:13" pos:end="121:13">.</operator><name pos:start="121:14" pos:end="121:21">l_whence</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <call pos:start="121:25" pos:end="121:54"><name pos:start="121:25" pos:end="121:31">tswap16</name><argument_list pos:start="121:32" pos:end="121:54">(<argument pos:start="121:33" pos:end="121:53"><expr pos:start="121:33" pos:end="121:53"><name pos:start="121:33" pos:end="121:53"><name pos:start="121:33" pos:end="121:43">target_fl64</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:53">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:53"><expr pos:start="123:9" pos:end="123:52"><name pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:12">fl64</name><operator pos:start="123:13" pos:end="123:13">.</operator><name pos:start="123:14" pos:end="123:20">l_start</name></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <call pos:start="123:24" pos:end="123:52"><name pos:start="123:24" pos:end="123:30">tswap64</name><argument_list pos:start="123:31" pos:end="123:52">(<argument pos:start="123:32" pos:end="123:51"><expr pos:start="123:32" pos:end="123:51"><name pos:start="123:32" pos:end="123:51"><name pos:start="123:32" pos:end="123:42">target_fl64</name><operator pos:start="123:43" pos:end="123:44">-&gt;</operator><name pos:start="123:45" pos:end="123:51">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:12">fl64</name><operator pos:start="125:13" pos:end="125:13">.</operator><name pos:start="125:14" pos:end="125:18">l_len</name></name> <operator pos:start="125:20" pos:end="125:20">=</operator> <call pos:start="125:22" pos:end="125:48"><name pos:start="125:22" pos:end="125:28">tswap64</name><argument_list pos:start="125:29" pos:end="125:48">(<argument pos:start="125:30" pos:end="125:47"><expr pos:start="125:30" pos:end="125:47"><name pos:start="125:30" pos:end="125:47"><name pos:start="125:30" pos:end="125:40">target_fl64</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:47">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:49"><expr pos:start="127:9" pos:end="127:48"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:12">fl64</name><operator pos:start="127:13" pos:end="127:13">.</operator><name pos:start="127:14" pos:end="127:18">l_pid</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:48"><name pos:start="127:22" pos:end="127:28">tswap32</name><argument_list pos:start="127:29" pos:end="127:48">(<argument pos:start="127:30" pos:end="127:47"><expr pos:start="127:30" pos:end="127:47"><name pos:start="127:30" pos:end="127:47"><name pos:start="127:30" pos:end="127:40">target_fl64</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:47">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:48"><expr pos:start="129:9" pos:end="129:47"><call pos:start="129:9" pos:end="129:47"><name pos:start="129:9" pos:end="129:26">unlock_user_struct</name><argument_list pos:start="129:27" pos:end="129:47">(<argument pos:start="129:28" pos:end="129:38"><expr pos:start="129:28" pos:end="129:38"><name pos:start="129:28" pos:end="129:38">target_fl64</name></expr></argument>, <argument pos:start="129:41" pos:end="129:43"><expr pos:start="129:41" pos:end="129:43"><name pos:start="129:41" pos:end="129:43">arg</name></expr></argument>, <argument pos:start="129:46" pos:end="129:46"><expr pos:start="129:46" pos:end="129:46"><literal type="number" pos:start="129:46" pos:end="129:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:52"><expr pos:start="131:9" pos:end="131:51"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:51"><name pos:start="131:15" pos:end="131:23">get_errno</name><argument_list pos:start="131:24" pos:end="131:51">(<argument pos:start="131:25" pos:end="131:50"><expr pos:start="131:25" pos:end="131:50"><call pos:start="131:25" pos:end="131:50"><name pos:start="131:25" pos:end="131:29">fcntl</name><argument_list pos:start="131:30" pos:end="131:50">(<argument pos:start="131:31" pos:end="131:32"><expr pos:start="131:31" pos:end="131:32"><name pos:start="131:31" pos:end="131:32">fd</name></expr></argument>, <argument pos:start="131:35" pos:end="131:42"><expr pos:start="131:35" pos:end="131:42"><name pos:start="131:35" pos:end="131:42">host_cmd</name></expr></argument>, <argument pos:start="131:45" pos:end="131:49"><expr pos:start="131:45" pos:end="131:49"><operator pos:start="131:45" pos:end="131:45">&amp;</operator><name pos:start="131:46" pos:end="131:49">fl64</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="153:9"><if pos:start="133:9" pos:end="153:9">if <condition pos:start="133:12" pos:end="133:21">(<expr pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:18">==</operator> <literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>)</condition> <block pos:start="133:23" pos:end="153:9">{<block_content pos:start="135:13" pos:end="151:52">

            <if_stmt pos:start="135:13" pos:end="137:38"><if pos:start="135:13" pos:end="137:38">if <condition pos:start="135:16" pos:end="135:69">(<expr pos:start="135:17" pos:end="135:68"><operator pos:start="135:17" pos:end="135:17">!</operator><call pos:start="135:18" pos:end="135:68"><name pos:start="135:18" pos:end="135:33">lock_user_struct</name><argument_list pos:start="135:34" pos:end="135:68">(<argument pos:start="135:35" pos:end="135:46"><expr pos:start="135:35" pos:end="135:46"><name pos:start="135:35" pos:end="135:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="135:49" pos:end="135:59"><expr pos:start="135:49" pos:end="135:59"><name pos:start="135:49" pos:end="135:59">target_fl64</name></expr></argument>, <argument pos:start="135:62" pos:end="135:64"><expr pos:start="135:62" pos:end="135:64"><name pos:start="135:62" pos:end="135:64">arg</name></expr></argument>, <argument pos:start="135:67" pos:end="135:67"><expr pos:start="135:67" pos:end="135:67"><literal type="number" pos:start="135:67" pos:end="135:67">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:38"><block_content pos:start="137:17" pos:end="137:38">

                <return pos:start="137:17" pos:end="137:38">return <expr pos:start="137:24" pos:end="137:37"><operator pos:start="137:24" pos:end="137:24">-</operator><name pos:start="137:25" pos:end="137:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="141:80"><expr pos:start="139:13" pos:end="141:79"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:23">target_fl64</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:31">l_type</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator>

                   <call pos:start="141:20" pos:end="141:74"><name pos:start="141:20" pos:end="141:41">host_to_target_bitmask</name><argument_list pos:start="141:42" pos:end="141:74">(<argument pos:start="141:43" pos:end="141:62"><expr pos:start="141:43" pos:end="141:62"><call pos:start="141:43" pos:end="141:62"><name pos:start="141:43" pos:end="141:49">tswap16</name><argument_list pos:start="141:50" pos:end="141:62">(<argument pos:start="141:51" pos:end="141:61"><expr pos:start="141:51" pos:end="141:61"><name pos:start="141:51" pos:end="141:61"><name pos:start="141:51" pos:end="141:54">fl64</name><operator pos:start="141:55" pos:end="141:55">.</operator><name pos:start="141:56" pos:end="141:61">l_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:65" pos:end="141:73"><expr pos:start="141:65" pos:end="141:73"><name pos:start="141:65" pos:end="141:73">flock_tbl</name></expr></argument>)</argument_list></call> <operator pos:start="141:76" pos:end="141:77">&gt;&gt;</operator> <literal type="number" pos:start="141:79" pos:end="141:79">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:59"><expr pos:start="143:13" pos:end="143:58"><name pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:23">target_fl64</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:33">l_whence</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <call pos:start="143:37" pos:end="143:58"><name pos:start="143:37" pos:end="143:43">tswap16</name><argument_list pos:start="143:44" pos:end="143:58">(<argument pos:start="143:45" pos:end="143:57"><expr pos:start="143:45" pos:end="143:57"><name pos:start="143:45" pos:end="143:57"><name pos:start="143:45" pos:end="143:48">fl64</name><operator pos:start="143:49" pos:end="143:49">.</operator><name pos:start="143:50" pos:end="143:57">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:57"><expr pos:start="145:13" pos:end="145:56"><name pos:start="145:13" pos:end="145:32"><name pos:start="145:13" pos:end="145:23">target_fl64</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:32">l_start</name></name> <operator pos:start="145:34" pos:end="145:34">=</operator> <call pos:start="145:36" pos:end="145:56"><name pos:start="145:36" pos:end="145:42">tswap64</name><argument_list pos:start="145:43" pos:end="145:56">(<argument pos:start="145:44" pos:end="145:55"><expr pos:start="145:44" pos:end="145:55"><name pos:start="145:44" pos:end="145:55"><name pos:start="145:44" pos:end="145:47">fl64</name><operator pos:start="145:48" pos:end="145:48">.</operator><name pos:start="145:49" pos:end="145:55">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:53"><expr pos:start="147:13" pos:end="147:52"><name pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:23">target_fl64</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:30">l_len</name></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <call pos:start="147:34" pos:end="147:52"><name pos:start="147:34" pos:end="147:40">tswap64</name><argument_list pos:start="147:41" pos:end="147:52">(<argument pos:start="147:42" pos:end="147:51"><expr pos:start="147:42" pos:end="147:51"><name pos:start="147:42" pos:end="147:51"><name pos:start="147:42" pos:end="147:45">fl64</name><operator pos:start="147:46" pos:end="147:46">.</operator><name pos:start="147:47" pos:end="147:51">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:53"><expr pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:30"><name pos:start="149:13" pos:end="149:23">target_fl64</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:30">l_pid</name></name> <operator pos:start="149:32" pos:end="149:32">=</operator> <call pos:start="149:34" pos:end="149:52"><name pos:start="149:34" pos:end="149:40">tswap32</name><argument_list pos:start="149:41" pos:end="149:52">(<argument pos:start="149:42" pos:end="149:51"><expr pos:start="149:42" pos:end="149:51"><name pos:start="149:42" pos:end="149:51"><name pos:start="149:42" pos:end="149:45">fl64</name><operator pos:start="149:46" pos:end="149:46">.</operator><name pos:start="149:47" pos:end="149:51">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:52"><expr pos:start="151:13" pos:end="151:51"><call pos:start="151:13" pos:end="151:51"><name pos:start="151:13" pos:end="151:30">unlock_user_struct</name><argument_list pos:start="151:31" pos:end="151:51">(<argument pos:start="151:32" pos:end="151:42"><expr pos:start="151:32" pos:end="151:42"><name pos:start="151:32" pos:end="151:42">target_fl64</name></expr></argument>, <argument pos:start="151:45" pos:end="151:47"><expr pos:start="151:45" pos:end="151:47"><name pos:start="151:45" pos:end="151:47">arg</name></expr></argument>, <argument pos:start="151:50" pos:end="151:50"><expr pos:start="151:50" pos:end="151:50"><literal type="number" pos:start="151:50" pos:end="151:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:26">case <expr pos:start="157:10" pos:end="157:25"><name pos:start="157:10" pos:end="157:25">TARGET_F_SETLK64</name></expr>:</case>

    <case pos:start="159:5" pos:end="159:27">case <expr pos:start="159:10" pos:end="159:26"><name pos:start="159:10" pos:end="159:26">TARGET_F_SETLKW64</name></expr>:</case>

        <if_stmt pos:start="161:9" pos:end="163:34"><if pos:start="161:9" pos:end="163:34">if <condition pos:start="161:12" pos:end="161:64">(<expr pos:start="161:13" pos:end="161:63"><operator pos:start="161:13" pos:end="161:13">!</operator><call pos:start="161:14" pos:end="161:63"><name pos:start="161:14" pos:end="161:29">lock_user_struct</name><argument_list pos:start="161:30" pos:end="161:63">(<argument pos:start="161:31" pos:end="161:41"><expr pos:start="161:31" pos:end="161:41"><name pos:start="161:31" pos:end="161:41">VERIFY_READ</name></expr></argument>, <argument pos:start="161:44" pos:end="161:54"><expr pos:start="161:44" pos:end="161:54"><name pos:start="161:44" pos:end="161:54">target_fl64</name></expr></argument>, <argument pos:start="161:57" pos:end="161:59"><expr pos:start="161:57" pos:end="161:59"><name pos:start="161:57" pos:end="161:59">arg</name></expr></argument>, <argument pos:start="161:62" pos:end="161:62"><expr pos:start="161:62" pos:end="161:62"><literal type="number" pos:start="161:62" pos:end="161:62">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:34"><block_content pos:start="163:13" pos:end="163:34">

            <return pos:start="163:13" pos:end="163:34">return <expr pos:start="163:20" pos:end="163:33"><operator pos:start="163:20" pos:end="163:20">-</operator><name pos:start="163:21" pos:end="163:33">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="167:80"><expr pos:start="165:9" pos:end="167:79"><name pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:12">fl64</name><operator pos:start="165:13" pos:end="165:13">.</operator><name pos:start="165:14" pos:end="165:19">l_type</name></name> <operator pos:start="165:21" pos:end="165:21">=</operator>

           <call pos:start="167:12" pos:end="167:74"><name pos:start="167:12" pos:end="167:33">target_to_host_bitmask</name><argument_list pos:start="167:34" pos:end="167:74">(<argument pos:start="167:35" pos:end="167:62"><expr pos:start="167:35" pos:end="167:62"><call pos:start="167:35" pos:end="167:62"><name pos:start="167:35" pos:end="167:41">tswap16</name><argument_list pos:start="167:42" pos:end="167:62">(<argument pos:start="167:43" pos:end="167:61"><expr pos:start="167:43" pos:end="167:61"><name pos:start="167:43" pos:end="167:61"><name pos:start="167:43" pos:end="167:53">target_fl64</name><operator pos:start="167:54" pos:end="167:55">-&gt;</operator><name pos:start="167:56" pos:end="167:61">l_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="167:65" pos:end="167:73"><expr pos:start="167:65" pos:end="167:73"><name pos:start="167:65" pos:end="167:73">flock_tbl</name></expr></argument>)</argument_list></call> <operator pos:start="167:76" pos:end="167:77">&gt;&gt;</operator> <literal type="number" pos:start="167:79" pos:end="167:79">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:55"><expr pos:start="169:9" pos:end="169:54"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:12">fl64</name><operator pos:start="169:13" pos:end="169:13">.</operator><name pos:start="169:14" pos:end="169:21">l_whence</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <call pos:start="169:25" pos:end="169:54"><name pos:start="169:25" pos:end="169:31">tswap16</name><argument_list pos:start="169:32" pos:end="169:54">(<argument pos:start="169:33" pos:end="169:53"><expr pos:start="169:33" pos:end="169:53"><name pos:start="169:33" pos:end="169:53"><name pos:start="169:33" pos:end="169:43">target_fl64</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:53">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:53"><expr pos:start="171:9" pos:end="171:52"><name pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:12">fl64</name><operator pos:start="171:13" pos:end="171:13">.</operator><name pos:start="171:14" pos:end="171:20">l_start</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <call pos:start="171:24" pos:end="171:52"><name pos:start="171:24" pos:end="171:30">tswap64</name><argument_list pos:start="171:31" pos:end="171:52">(<argument pos:start="171:32" pos:end="171:51"><expr pos:start="171:32" pos:end="171:51"><name pos:start="171:32" pos:end="171:51"><name pos:start="171:32" pos:end="171:42">target_fl64</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:51">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:49"><expr pos:start="173:9" pos:end="173:48"><name pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:12">fl64</name><operator pos:start="173:13" pos:end="173:13">.</operator><name pos:start="173:14" pos:end="173:18">l_len</name></name> <operator pos:start="173:20" pos:end="173:20">=</operator> <call pos:start="173:22" pos:end="173:48"><name pos:start="173:22" pos:end="173:28">tswap64</name><argument_list pos:start="173:29" pos:end="173:48">(<argument pos:start="173:30" pos:end="173:47"><expr pos:start="173:30" pos:end="173:47"><name pos:start="173:30" pos:end="173:47"><name pos:start="173:30" pos:end="173:40">target_fl64</name><operator pos:start="173:41" pos:end="173:42">-&gt;</operator><name pos:start="173:43" pos:end="173:47">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:49"><expr pos:start="175:9" pos:end="175:48"><name pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:12">fl64</name><operator pos:start="175:13" pos:end="175:13">.</operator><name pos:start="175:14" pos:end="175:18">l_pid</name></name> <operator pos:start="175:20" pos:end="175:20">=</operator> <call pos:start="175:22" pos:end="175:48"><name pos:start="175:22" pos:end="175:28">tswap32</name><argument_list pos:start="175:29" pos:end="175:48">(<argument pos:start="175:30" pos:end="175:47"><expr pos:start="175:30" pos:end="175:47"><name pos:start="175:30" pos:end="175:47"><name pos:start="175:30" pos:end="175:40">target_fl64</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:47">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:48"><expr pos:start="177:9" pos:end="177:47"><call pos:start="177:9" pos:end="177:47"><name pos:start="177:9" pos:end="177:26">unlock_user_struct</name><argument_list pos:start="177:27" pos:end="177:47">(<argument pos:start="177:28" pos:end="177:38"><expr pos:start="177:28" pos:end="177:38"><name pos:start="177:28" pos:end="177:38">target_fl64</name></expr></argument>, <argument pos:start="177:41" pos:end="177:43"><expr pos:start="177:41" pos:end="177:43"><name pos:start="177:41" pos:end="177:43">arg</name></expr></argument>, <argument pos:start="177:46" pos:end="177:46"><expr pos:start="177:46" pos:end="177:46"><literal type="number" pos:start="177:46" pos:end="177:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:52"><expr pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:11">ret</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:51"><name pos:start="179:15" pos:end="179:23">get_errno</name><argument_list pos:start="179:24" pos:end="179:51">(<argument pos:start="179:25" pos:end="179:50"><expr pos:start="179:25" pos:end="179:50"><call pos:start="179:25" pos:end="179:50"><name pos:start="179:25" pos:end="179:29">fcntl</name><argument_list pos:start="179:30" pos:end="179:50">(<argument pos:start="179:31" pos:end="179:32"><expr pos:start="179:31" pos:end="179:32"><name pos:start="179:31" pos:end="179:32">fd</name></expr></argument>, <argument pos:start="179:35" pos:end="179:42"><expr pos:start="179:35" pos:end="179:42"><name pos:start="179:35" pos:end="179:42">host_cmd</name></expr></argument>, <argument pos:start="179:45" pos:end="179:49"><expr pos:start="179:45" pos:end="179:49"><operator pos:start="179:45" pos:end="179:45">&amp;</operator><name pos:start="179:46" pos:end="179:49">fl64</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>



    <case pos:start="185:5" pos:end="185:24">case <expr pos:start="185:10" pos:end="185:23"><name pos:start="185:10" pos:end="185:23">TARGET_F_GETFL</name></expr>:</case>

        <expr_stmt pos:start="187:9" pos:end="187:50"><expr pos:start="187:9" pos:end="187:49"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <call pos:start="187:15" pos:end="187:49"><name pos:start="187:15" pos:end="187:23">get_errno</name><argument_list pos:start="187:24" pos:end="187:49">(<argument pos:start="187:25" pos:end="187:48"><expr pos:start="187:25" pos:end="187:48"><call pos:start="187:25" pos:end="187:48"><name pos:start="187:25" pos:end="187:29">fcntl</name><argument_list pos:start="187:30" pos:end="187:48">(<argument pos:start="187:31" pos:end="187:32"><expr pos:start="187:31" pos:end="187:32"><name pos:start="187:31" pos:end="187:32">fd</name></expr></argument>, <argument pos:start="187:35" pos:end="187:42"><expr pos:start="187:35" pos:end="187:42"><name pos:start="187:35" pos:end="187:42">host_cmd</name></expr></argument>, <argument pos:start="187:45" pos:end="187:47"><expr pos:start="187:45" pos:end="187:47"><name pos:start="187:45" pos:end="187:47">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="193:9"><if pos:start="189:9" pos:end="193:9">if <condition pos:start="189:12" pos:end="189:21">(<expr pos:start="189:13" pos:end="189:20"><name pos:start="189:13" pos:end="189:15">ret</name> <operator pos:start="189:17" pos:end="189:18">&gt;=</operator> <literal type="number" pos:start="189:20" pos:end="189:20">0</literal></expr>)</condition> <block pos:start="189:23" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:63">

            <expr_stmt pos:start="191:13" pos:end="191:63"><expr pos:start="191:13" pos:end="191:62"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:62"><name pos:start="191:19" pos:end="191:40">host_to_target_bitmask</name><argument_list pos:start="191:41" pos:end="191:62">(<argument pos:start="191:42" pos:end="191:44"><expr pos:start="191:42" pos:end="191:44"><name pos:start="191:42" pos:end="191:44">ret</name></expr></argument>, <argument pos:start="191:47" pos:end="191:61"><expr pos:start="191:47" pos:end="191:61"><name pos:start="191:47" pos:end="191:61">fcntl_flags_tbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>



    <case pos:start="199:5" pos:end="199:24">case <expr pos:start="199:10" pos:end="199:23"><name pos:start="199:10" pos:end="199:23">TARGET_F_SETFL</name></expr>:</case>

        <expr_stmt pos:start="201:9" pos:end="201:91"><expr pos:start="201:9" pos:end="201:90"><name pos:start="201:9" pos:end="201:11">ret</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <call pos:start="201:15" pos:end="201:90"><name pos:start="201:15" pos:end="201:23">get_errno</name><argument_list pos:start="201:24" pos:end="201:90">(<argument pos:start="201:25" pos:end="201:89"><expr pos:start="201:25" pos:end="201:89"><call pos:start="201:25" pos:end="201:89"><name pos:start="201:25" pos:end="201:29">fcntl</name><argument_list pos:start="201:30" pos:end="201:89">(<argument pos:start="201:31" pos:end="201:32"><expr pos:start="201:31" pos:end="201:32"><name pos:start="201:31" pos:end="201:32">fd</name></expr></argument>, <argument pos:start="201:35" pos:end="201:42"><expr pos:start="201:35" pos:end="201:42"><name pos:start="201:35" pos:end="201:42">host_cmd</name></expr></argument>, <argument pos:start="201:45" pos:end="201:88"><expr pos:start="201:45" pos:end="201:88"><call pos:start="201:45" pos:end="201:88"><name pos:start="201:45" pos:end="201:66">target_to_host_bitmask</name><argument_list pos:start="201:67" pos:end="201:88">(<argument pos:start="201:68" pos:end="201:70"><expr pos:start="201:68" pos:end="201:70"><name pos:start="201:68" pos:end="201:70">arg</name></expr></argument>, <argument pos:start="201:73" pos:end="201:87"><expr pos:start="201:73" pos:end="201:87"><name pos:start="201:73" pos:end="201:87">fcntl_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="208:0">break;</break>



<cpp:ifdef pos:start="207:1" pos:end="207:18">#<cpp:directive pos:start="207:2" pos:end="207:6">ifdef</cpp:directive> <name pos:start="207:8" pos:end="207:18">F_GETOWN_EX</name></cpp:ifdef>

    <case pos:start="209:5" pos:end="209:28">case <expr pos:start="209:10" pos:end="209:27"><name pos:start="209:10" pos:end="209:27">TARGET_F_GETOWN_EX</name></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:51"><expr pos:start="211:9" pos:end="211:50"><name pos:start="211:9" pos:end="211:11">ret</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:50"><name pos:start="211:15" pos:end="211:23">get_errno</name><argument_list pos:start="211:24" pos:end="211:50">(<argument pos:start="211:25" pos:end="211:49"><expr pos:start="211:25" pos:end="211:49"><call pos:start="211:25" pos:end="211:49"><name pos:start="211:25" pos:end="211:29">fcntl</name><argument_list pos:start="211:30" pos:end="211:49">(<argument pos:start="211:31" pos:end="211:32"><expr pos:start="211:31" pos:end="211:32"><name pos:start="211:31" pos:end="211:32">fd</name></expr></argument>, <argument pos:start="211:35" pos:end="211:42"><expr pos:start="211:35" pos:end="211:42"><name pos:start="211:35" pos:end="211:42">host_cmd</name></expr></argument>, <argument pos:start="211:45" pos:end="211:48"><expr pos:start="211:45" pos:end="211:48"><operator pos:start="211:45" pos:end="211:45">&amp;</operator><name pos:start="211:46" pos:end="211:48">fox</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="213:9" pos:end="225:9"><if pos:start="213:9" pos:end="225:9">if <condition pos:start="213:12" pos:end="213:21">(<expr pos:start="213:13" pos:end="213:20"><name pos:start="213:13" pos:end="213:15">ret</name> <operator pos:start="213:17" pos:end="213:18">&gt;=</operator> <literal type="number" pos:start="213:20" pos:end="213:20">0</literal></expr>)</condition> <block pos:start="213:23" pos:end="225:9">{<block_content pos:start="215:13" pos:end="223:51">

            <if_stmt pos:start="215:13" pos:end="217:38"><if pos:start="215:13" pos:end="217:38">if <condition pos:start="215:16" pos:end="215:68">(<expr pos:start="215:17" pos:end="215:67"><operator pos:start="215:17" pos:end="215:17">!</operator><call pos:start="215:18" pos:end="215:67"><name pos:start="215:18" pos:end="215:33">lock_user_struct</name><argument_list pos:start="215:34" pos:end="215:67">(<argument pos:start="215:35" pos:end="215:46"><expr pos:start="215:35" pos:end="215:46"><name pos:start="215:35" pos:end="215:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="215:49" pos:end="215:58"><expr pos:start="215:49" pos:end="215:58"><name pos:start="215:49" pos:end="215:58">target_fox</name></expr></argument>, <argument pos:start="215:61" pos:end="215:63"><expr pos:start="215:61" pos:end="215:63"><name pos:start="215:61" pos:end="215:63">arg</name></expr></argument>, <argument pos:start="215:66" pos:end="215:66"><expr pos:start="215:66" pos:end="215:66"><literal type="number" pos:start="215:66" pos:end="215:66">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:38"><block_content pos:start="217:17" pos:end="217:38">

                <return pos:start="217:17" pos:end="217:38">return <expr pos:start="217:24" pos:end="217:37"><operator pos:start="217:24" pos:end="217:24">-</operator><name pos:start="217:25" pos:end="217:37">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:49"><expr pos:start="219:13" pos:end="219:48"><name pos:start="219:13" pos:end="219:28"><name pos:start="219:13" pos:end="219:22">target_fox</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:28">type</name></name> <operator pos:start="219:30" pos:end="219:30">=</operator> <call pos:start="219:32" pos:end="219:48"><name pos:start="219:32" pos:end="219:38">tswap32</name><argument_list pos:start="219:39" pos:end="219:48">(<argument pos:start="219:40" pos:end="219:47"><expr pos:start="219:40" pos:end="219:47"><name pos:start="219:40" pos:end="219:47"><name pos:start="219:40" pos:end="219:42">fox</name><operator pos:start="219:43" pos:end="219:43">.</operator><name pos:start="219:44" pos:end="219:47">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:47"><expr pos:start="221:13" pos:end="221:46"><name pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:22">target_fox</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:27">pid</name></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <call pos:start="221:31" pos:end="221:46"><name pos:start="221:31" pos:end="221:37">tswap32</name><argument_list pos:start="221:38" pos:end="221:46">(<argument pos:start="221:39" pos:end="221:45"><expr pos:start="221:39" pos:end="221:45"><name pos:start="221:39" pos:end="221:45"><name pos:start="221:39" pos:end="221:41">fox</name><operator pos:start="221:42" pos:end="221:42">.</operator><name pos:start="221:43" pos:end="221:45">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:51"><expr pos:start="223:13" pos:end="223:50"><call pos:start="223:13" pos:end="223:50"><name pos:start="223:13" pos:end="223:30">unlock_user_struct</name><argument_list pos:start="223:31" pos:end="223:50">(<argument pos:start="223:32" pos:end="223:41"><expr pos:start="223:32" pos:end="223:41"><name pos:start="223:32" pos:end="223:41">target_fox</name></expr></argument>, <argument pos:start="223:44" pos:end="223:46"><expr pos:start="223:44" pos:end="223:46"><name pos:start="223:44" pos:end="223:46">arg</name></expr></argument>, <argument pos:start="223:49" pos:end="223:49"><expr pos:start="223:49" pos:end="223:49"><literal type="number" pos:start="223:49" pos:end="223:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="227:9" pos:end="234:0">break;</break>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="233:1" pos:end="233:18">#<cpp:directive pos:start="233:2" pos:end="233:6">ifdef</cpp:directive> <name pos:start="233:8" pos:end="233:18">F_SETOWN_EX</name></cpp:ifdef>

    <case pos:start="235:5" pos:end="235:28">case <expr pos:start="235:10" pos:end="235:27"><name pos:start="235:10" pos:end="235:27">TARGET_F_SETOWN_EX</name></expr>:</case>

        <if_stmt pos:start="237:9" pos:end="239:34"><if pos:start="237:9" pos:end="239:34">if <condition pos:start="237:12" pos:end="237:63">(<expr pos:start="237:13" pos:end="237:62"><operator pos:start="237:13" pos:end="237:13">!</operator><call pos:start="237:14" pos:end="237:62"><name pos:start="237:14" pos:end="237:29">lock_user_struct</name><argument_list pos:start="237:30" pos:end="237:62">(<argument pos:start="237:31" pos:end="237:41"><expr pos:start="237:31" pos:end="237:41"><name pos:start="237:31" pos:end="237:41">VERIFY_READ</name></expr></argument>, <argument pos:start="237:44" pos:end="237:53"><expr pos:start="237:44" pos:end="237:53"><name pos:start="237:44" pos:end="237:53">target_fox</name></expr></argument>, <argument pos:start="237:56" pos:end="237:58"><expr pos:start="237:56" pos:end="237:58"><name pos:start="237:56" pos:end="237:58">arg</name></expr></argument>, <argument pos:start="237:61" pos:end="237:61"><expr pos:start="237:61" pos:end="237:61"><literal type="number" pos:start="237:61" pos:end="237:61">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:34"><block_content pos:start="239:13" pos:end="239:34">

            <return pos:start="239:13" pos:end="239:34">return <expr pos:start="239:20" pos:end="239:33"><operator pos:start="239:20" pos:end="239:20">-</operator><name pos:start="239:21" pos:end="239:33">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:45"><expr pos:start="241:9" pos:end="241:44"><name pos:start="241:9" pos:end="241:16"><name pos:start="241:9" pos:end="241:11">fox</name><operator pos:start="241:12" pos:end="241:12">.</operator><name pos:start="241:13" pos:end="241:16">type</name></name> <operator pos:start="241:18" pos:end="241:18">=</operator> <call pos:start="241:20" pos:end="241:44"><name pos:start="241:20" pos:end="241:26">tswap32</name><argument_list pos:start="241:27" pos:end="241:44">(<argument pos:start="241:28" pos:end="241:43"><expr pos:start="241:28" pos:end="241:43"><name pos:start="241:28" pos:end="241:43"><name pos:start="241:28" pos:end="241:37">target_fox</name><operator pos:start="241:38" pos:end="241:39">-&gt;</operator><name pos:start="241:40" pos:end="241:43">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:43"><expr pos:start="243:9" pos:end="243:42"><name pos:start="243:9" pos:end="243:15"><name pos:start="243:9" pos:end="243:11">fox</name><operator pos:start="243:12" pos:end="243:12">.</operator><name pos:start="243:13" pos:end="243:15">pid</name></name> <operator pos:start="243:17" pos:end="243:17">=</operator> <call pos:start="243:19" pos:end="243:42"><name pos:start="243:19" pos:end="243:25">tswap32</name><argument_list pos:start="243:26" pos:end="243:42">(<argument pos:start="243:27" pos:end="243:41"><expr pos:start="243:27" pos:end="243:41"><name pos:start="243:27" pos:end="243:41"><name pos:start="243:27" pos:end="243:36">target_fox</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:41">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:47"><expr pos:start="245:9" pos:end="245:46"><call pos:start="245:9" pos:end="245:46"><name pos:start="245:9" pos:end="245:26">unlock_user_struct</name><argument_list pos:start="245:27" pos:end="245:46">(<argument pos:start="245:28" pos:end="245:37"><expr pos:start="245:28" pos:end="245:37"><name pos:start="245:28" pos:end="245:37">target_fox</name></expr></argument>, <argument pos:start="245:40" pos:end="245:42"><expr pos:start="245:40" pos:end="245:42"><name pos:start="245:40" pos:end="245:42">arg</name></expr></argument>, <argument pos:start="245:45" pos:end="245:45"><expr pos:start="245:45" pos:end="245:45"><literal type="number" pos:start="245:45" pos:end="245:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:51"><expr pos:start="247:9" pos:end="247:50"><name pos:start="247:9" pos:end="247:11">ret</name> <operator pos:start="247:13" pos:end="247:13">=</operator> <call pos:start="247:15" pos:end="247:50"><name pos:start="247:15" pos:end="247:23">get_errno</name><argument_list pos:start="247:24" pos:end="247:50">(<argument pos:start="247:25" pos:end="247:49"><expr pos:start="247:25" pos:end="247:49"><call pos:start="247:25" pos:end="247:49"><name pos:start="247:25" pos:end="247:29">fcntl</name><argument_list pos:start="247:30" pos:end="247:49">(<argument pos:start="247:31" pos:end="247:32"><expr pos:start="247:31" pos:end="247:32"><name pos:start="247:31" pos:end="247:32">fd</name></expr></argument>, <argument pos:start="247:35" pos:end="247:42"><expr pos:start="247:35" pos:end="247:42"><name pos:start="247:35" pos:end="247:42">host_cmd</name></expr></argument>, <argument pos:start="247:45" pos:end="247:48"><expr pos:start="247:45" pos:end="247:48"><operator pos:start="247:45" pos:end="247:45">&amp;</operator><name pos:start="247:46" pos:end="247:48">fox</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="249:9" pos:end="252:0">break;</break>

<cpp:endif pos:start="251:1" pos:end="251:6">#<cpp:directive pos:start="251:2" pos:end="251:6">endif</cpp:directive></cpp:endif>



    <case pos:start="255:5" pos:end="255:25">case <expr pos:start="255:10" pos:end="255:24"><name pos:start="255:10" pos:end="255:24">TARGET_F_SETOWN</name></expr>:</case>

    <case pos:start="257:5" pos:end="257:25">case <expr pos:start="257:10" pos:end="257:24"><name pos:start="257:10" pos:end="257:24">TARGET_F_GETOWN</name></expr>:</case>

    <case pos:start="259:5" pos:end="259:25">case <expr pos:start="259:10" pos:end="259:24"><name pos:start="259:10" pos:end="259:24">TARGET_F_SETSIG</name></expr>:</case>

    <case pos:start="261:5" pos:end="261:25">case <expr pos:start="261:10" pos:end="261:24"><name pos:start="261:10" pos:end="261:24">TARGET_F_GETSIG</name></expr>:</case>

    <case pos:start="263:5" pos:end="263:27">case <expr pos:start="263:10" pos:end="263:26"><name pos:start="263:10" pos:end="263:26">TARGET_F_SETLEASE</name></expr>:</case>

    <case pos:start="265:5" pos:end="265:27">case <expr pos:start="265:10" pos:end="265:26"><name pos:start="265:10" pos:end="265:26">TARGET_F_GETLEASE</name></expr>:</case>

        <expr_stmt pos:start="267:9" pos:end="267:50"><expr pos:start="267:9" pos:end="267:49"><name pos:start="267:9" pos:end="267:11">ret</name> <operator pos:start="267:13" pos:end="267:13">=</operator> <call pos:start="267:15" pos:end="267:49"><name pos:start="267:15" pos:end="267:23">get_errno</name><argument_list pos:start="267:24" pos:end="267:49">(<argument pos:start="267:25" pos:end="267:48"><expr pos:start="267:25" pos:end="267:48"><call pos:start="267:25" pos:end="267:48"><name pos:start="267:25" pos:end="267:29">fcntl</name><argument_list pos:start="267:30" pos:end="267:48">(<argument pos:start="267:31" pos:end="267:32"><expr pos:start="267:31" pos:end="267:32"><name pos:start="267:31" pos:end="267:32">fd</name></expr></argument>, <argument pos:start="267:35" pos:end="267:42"><expr pos:start="267:35" pos:end="267:42"><name pos:start="267:35" pos:end="267:42">host_cmd</name></expr></argument>, <argument pos:start="267:45" pos:end="267:47"><expr pos:start="267:45" pos:end="267:47"><name pos:start="267:45" pos:end="267:47">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="269:9" pos:end="269:14">break;</break>



    <default pos:start="273:5" pos:end="273:12">default:</default>

        <expr_stmt pos:start="275:9" pos:end="275:45"><expr pos:start="275:9" pos:end="275:44"><name pos:start="275:9" pos:end="275:11">ret</name> <operator pos:start="275:13" pos:end="275:13">=</operator> <call pos:start="275:15" pos:end="275:44"><name pos:start="275:15" pos:end="275:23">get_errno</name><argument_list pos:start="275:24" pos:end="275:44">(<argument pos:start="275:25" pos:end="275:43"><expr pos:start="275:25" pos:end="275:43"><call pos:start="275:25" pos:end="275:43"><name pos:start="275:25" pos:end="275:29">fcntl</name><argument_list pos:start="275:30" pos:end="275:43">(<argument pos:start="275:31" pos:end="275:32"><expr pos:start="275:31" pos:end="275:32"><name pos:start="275:31" pos:end="275:32">fd</name></expr></argument>, <argument pos:start="275:35" pos:end="275:37"><expr pos:start="275:35" pos:end="275:37"><name pos:start="275:35" pos:end="275:37">cmd</name></expr></argument>, <argument pos:start="275:40" pos:end="275:42"><expr pos:start="275:40" pos:end="275:42"><name pos:start="275:40" pos:end="275:42">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="281:5" pos:end="281:15">return <expr pos:start="281:12" pos:end="281:14"><name pos:start="281:12" pos:end="281:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
