<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5807.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">bt_l2cap_sdp_sdu_in</name><parameter_list pos:start="1:32" pos:end="1:75">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:65"><decl pos:start="1:47" pos:end="1:65"><type pos:start="1:47" pos:end="1:65"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">data</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:74"><decl pos:start="1:68" pos:end="1:74"><type pos:start="1:68" pos:end="1:74"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:74">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:43">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:31">bt_l2cap_sdp_state_s</name></name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:36">sdp</name> <init pos:start="5:38" pos:end="5:45">= <expr pos:start="5:40" pos:end="5:45"><name pos:start="5:40" pos:end="5:45">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:8">enum</name> <name pos:start="7:10" pos:end="7:19">bt_sdp_cmd</name></name></type> <name pos:start="7:21" pos:end="7:26">pdu_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:51"><name pos:start="9:13" pos:end="9:15">rsp</name><index pos:start="9:16" pos:end="9:51">[<expr pos:start="9:17" pos:end="9:50"><name pos:start="9:17" pos:end="9:32">MAX_PDU_OUT_SIZE</name> <operator pos:start="9:34" pos:end="9:34">-</operator> <name pos:start="9:36" pos:end="9:50">PDU_HEADER_SIZE</name></expr>]</index></name></decl>, <decl pos:start="9:54" pos:end="9:61"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:54" pos:end="9:54">*</modifier></type><name pos:start="9:55" pos:end="9:61">sdu_out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">transaction_id</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:28">plen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">rsp_len</name> <init pos:start="15:17" pos:end="15:19">= <expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">5</literal></expr>)</condition> <block pos:start="19:18" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><call pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:68">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:52"><expr pos:start="21:25" pos:end="21:52"><literal type="string" pos:start="21:25" pos:end="21:52">"%s: short SDP PDU (%iB).\n"</literal></expr></argument>, <argument pos:start="21:55" pos:end="21:62"><expr pos:start="21:55" pos:end="21:62"><name pos:start="21:55" pos:end="21:62">__func__</name></expr></argument>, <argument pos:start="21:65" pos:end="21:67"><expr pos:start="21:65" pos:end="21:67"><name pos:start="21:65" pos:end="21:67">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10">pdu_id</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <operator pos:start="29:14" pos:end="29:14">*</operator><name pos:start="29:15" pos:end="29:18">data</name> <operator pos:start="29:20" pos:end="29:21">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:18">transaction_id</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:29"><name pos:start="31:23" pos:end="31:26">data</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>]</index></name> <operator pos:start="31:31" pos:end="31:32">&lt;&lt;</operator> <literal type="number" pos:start="31:34" pos:end="31:34">8</literal><operator pos:start="31:35" pos:end="31:35">)</operator> <operator pos:start="31:37" pos:end="31:37">|</operator> <name pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:42">data</name><index pos:start="31:43" pos:end="31:45">[<expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:8">plen</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:16">data</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">2</literal></expr>]</index></name> <operator pos:start="33:21" pos:end="33:22">&lt;&lt;</operator> <literal type="number" pos:start="33:24" pos:end="33:24">8</literal><operator pos:start="33:25" pos:end="33:25">)</operator> <operator pos:start="33:27" pos:end="33:27">|</operator> <name pos:start="33:29" pos:end="33:35"><name pos:start="33:29" pos:end="33:32">data</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">3</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:14"><expr pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:8">data</name> <operator pos:start="35:10" pos:end="35:11">+=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:13"><expr pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">len</name> <operator pos:start="37:9" pos:end="37:10">-=</operator> <literal type="number" pos:start="37:12" pos:end="37:12">5</literal></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:11">len</name> <operator pos:start="41:13" pos:end="41:14">!=</operator> <name pos:start="41:16" pos:end="41:19">plen</name></expr>)</condition> <block pos:start="41:22" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:21">

        <expr_stmt pos:start="43:9" pos:end="45:45"><expr pos:start="43:9" pos:end="45:44"><call pos:start="43:9" pos:end="45:44"><name pos:start="43:9" pos:end="43:15">fprintf</name><argument_list pos:start="43:16" pos:end="45:44">(<argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">stderr</name></expr></argument>, <argument pos:start="43:25" pos:end="43:66"><expr pos:start="43:25" pos:end="43:66"><literal type="string" pos:start="43:25" pos:end="43:66">"%s: wrong SDP PDU length (%iB != %iB).\n"</literal></expr></argument>,

                        <argument pos:start="45:25" pos:end="45:32"><expr pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:32">__func__</name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">plen</name></expr></argument>, <argument pos:start="45:41" pos:end="45:43"><expr pos:start="45:41" pos:end="45:43"><name pos:start="45:41" pos:end="45:43">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:11">err</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:34">SDP_INVALID_PDU_SIZE</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:21">goto <name pos:start="49:14" pos:end="49:20">respond</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="55:5" pos:end="105:5">switch <condition pos:start="55:12" pos:end="55:19">(<expr pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">pdu_id</name></expr>)</condition> <block pos:start="55:21" pos:end="105:5">{<block_content pos:start="57:5" pos:end="103:14">

    <case pos:start="57:5" pos:end="57:28">case <expr pos:start="57:10" pos:end="57:27"><name pos:start="57:10" pos:end="57:27">SDP_SVC_SEARCH_REQ</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:15">rsp_len</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:53"><name pos:start="59:19" pos:end="59:32">sdp_svc_search</name><argument_list pos:start="59:33" pos:end="59:53">(<argument pos:start="59:34" pos:end="59:36"><expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:36">sdp</name></expr></argument>, <argument pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:41">rsp</name></expr></argument>, <argument pos:start="59:44" pos:end="59:47"><expr pos:start="59:44" pos:end="59:47"><name pos:start="59:44" pos:end="59:47">data</name></expr></argument>, <argument pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:14">pdu_id</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:35">SDP_SVC_SEARCH_RSP</name></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>



    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">SDP_SVC_ATTR_REQ</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:52"><expr pos:start="69:9" pos:end="69:51"><name pos:start="69:9" pos:end="69:15">rsp_len</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:51"><name pos:start="69:19" pos:end="69:30">sdp_attr_get</name><argument_list pos:start="69:31" pos:end="69:51">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">sdp</name></expr></argument>, <argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">rsp</name></expr></argument>, <argument pos:start="69:42" pos:end="69:45"><expr pos:start="69:42" pos:end="69:45"><name pos:start="69:42" pos:end="69:45">data</name></expr></argument>, <argument pos:start="69:48" pos:end="69:50"><expr pos:start="69:48" pos:end="69:50"><name pos:start="69:48" pos:end="69:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:14">pdu_id</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:33">SDP_SVC_ATTR_RSP</name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>



    <case pos:start="77:5" pos:end="77:33">case <expr pos:start="77:10" pos:end="77:32"><name pos:start="77:10" pos:end="77:32">SDP_SVC_SEARCH_ATTR_REQ</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:63"><expr pos:start="79:9" pos:end="79:62"><name pos:start="79:9" pos:end="79:15">rsp_len</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:62"><name pos:start="79:19" pos:end="79:41">sdp_svc_search_attr_get</name><argument_list pos:start="79:42" pos:end="79:62">(<argument pos:start="79:43" pos:end="79:45"><expr pos:start="79:43" pos:end="79:45"><name pos:start="79:43" pos:end="79:45">sdp</name></expr></argument>, <argument pos:start="79:48" pos:end="79:50"><expr pos:start="79:48" pos:end="79:50"><name pos:start="79:48" pos:end="79:50">rsp</name></expr></argument>, <argument pos:start="79:53" pos:end="79:56"><expr pos:start="79:53" pos:end="79:56"><name pos:start="79:53" pos:end="79:56">data</name></expr></argument>, <argument pos:start="79:59" pos:end="79:61"><expr pos:start="79:59" pos:end="79:61"><name pos:start="79:59" pos:end="79:61">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:14">pdu_id</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:40">SDP_SVC_SEARCH_ATTR_RSP</name></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:23">case <expr pos:start="87:10" pos:end="87:22"><name pos:start="87:10" pos:end="87:22">SDP_ERROR_RSP</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:26">case <expr pos:start="89:10" pos:end="89:25"><name pos:start="89:10" pos:end="89:25">SDP_SVC_ATTR_RSP</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:28">case <expr pos:start="91:10" pos:end="91:27"><name pos:start="91:10" pos:end="91:27">SDP_SVC_SEARCH_RSP</name></expr>:</case>

    <case pos:start="93:5" pos:end="93:33">case <expr pos:start="93:10" pos:end="93:32"><name pos:start="93:10" pos:end="93:32">SDP_SVC_SEARCH_ATTR_RSP</name></expr>:</case>

    <default pos:start="95:5" pos:end="95:12">default:</default>

        <expr_stmt pos:start="97:9" pos:end="99:42"><expr pos:start="97:9" pos:end="99:41"><call pos:start="97:9" pos:end="99:41"><name pos:start="97:9" pos:end="97:15">fprintf</name><argument_list pos:start="97:16" pos:end="99:41">(<argument pos:start="97:17" pos:end="97:22"><expr pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:22">stderr</name></expr></argument>, <argument pos:start="97:25" pos:end="97:59"><expr pos:start="97:25" pos:end="97:59"><literal type="string" pos:start="97:25" pos:end="97:59">"%s: unexpected SDP PDU ID %02x.\n"</literal></expr></argument>,

                        <argument pos:start="99:25" pos:end="99:32"><expr pos:start="99:25" pos:end="99:32"><name pos:start="99:25" pos:end="99:32">__func__</name></expr></argument>, <argument pos:start="99:35" pos:end="99:40"><expr pos:start="99:35" pos:end="99:40"><name pos:start="99:35" pos:end="99:40">pdu_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:11">err</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:32">SDP_INVALID_SYNTAX</name></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:15">rsp_len</name> <operator pos:start="109:17" pos:end="109:17">&lt;</operator> <literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr>)</condition> <block pos:start="109:22" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:20">

        <expr_stmt pos:start="111:9" pos:end="111:23"><expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:11">err</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <operator pos:start="111:15" pos:end="111:15">-</operator><name pos:start="111:16" pos:end="111:22">rsp_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:20"><expr pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:15">rsp_len</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <literal type="number" pos:start="113:19" pos:end="113:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="119:1" pos:end="119:8"><name pos:start="119:1" pos:end="119:7">respond</name>:</label>

    <if_stmt pos:start="121:5" pos:end="129:5"><if pos:start="121:5" pos:end="129:5">if <condition pos:start="121:8" pos:end="121:12">(<expr pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">err</name></expr>)</condition> <block pos:start="121:14" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:37">

        <expr_stmt pos:start="123:9" pos:end="123:31"><expr pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:14">pdu_id</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <name pos:start="123:18" pos:end="123:30">SDP_ERROR_RSP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:35"><expr pos:start="125:9" pos:end="125:34"><name pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:11">rsp</name><index pos:start="125:12" pos:end="125:23">[<expr pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:19">rsp_len</name> <operator pos:start="125:21" pos:end="125:22">++</operator></expr>]</index></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:29">err</name> <operator pos:start="125:31" pos:end="125:32">&gt;&gt;</operator> <literal type="number" pos:start="125:34" pos:end="125:34">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:37"><expr pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:11">rsp</name><index pos:start="127:12" pos:end="127:23">[<expr pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:19">rsp_len</name> <operator pos:start="127:21" pos:end="127:22">++</operator></expr>]</index></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:29">err</name> <operator pos:start="127:31" pos:end="127:31">&amp;</operator> <literal type="number" pos:start="127:33" pos:end="127:36">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:77"><expr pos:start="133:5" pos:end="133:76"><name pos:start="133:5" pos:end="133:11">sdu_out</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:76"><name pos:start="133:15" pos:end="133:35"><name pos:start="133:15" pos:end="133:17">sdp</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:26">channel</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:35">sdu_out</name></name><argument_list pos:start="133:36" pos:end="133:76">(<argument pos:start="133:37" pos:end="133:48"><expr pos:start="133:37" pos:end="133:48"><name pos:start="133:37" pos:end="133:48"><name pos:start="133:37" pos:end="133:39">sdp</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:48">channel</name></name></expr></argument>, <argument pos:start="133:51" pos:end="133:75"><expr pos:start="133:51" pos:end="133:75"><name pos:start="133:51" pos:end="133:57">rsp_len</name> <operator pos:start="133:59" pos:end="133:59">+</operator> <name pos:start="133:61" pos:end="133:75">PDU_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:24"><expr pos:start="137:5" pos:end="137:23"><name pos:start="137:5" pos:end="137:14"><name pos:start="137:5" pos:end="137:11">sdu_out</name><index pos:start="137:12" pos:end="137:14">[<expr pos:start="137:13" pos:end="137:13"><literal type="number" pos:start="137:13" pos:end="137:13">0</literal></expr>]</index></name> <operator pos:start="137:16" pos:end="137:16">=</operator> <name pos:start="137:18" pos:end="137:23">pdu_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:37"><expr pos:start="139:5" pos:end="139:36"><name pos:start="139:5" pos:end="139:14"><name pos:start="139:5" pos:end="139:11">sdu_out</name><index pos:start="139:12" pos:end="139:14">[<expr pos:start="139:13" pos:end="139:13"><literal type="number" pos:start="139:13" pos:end="139:13">1</literal></expr>]</index></name> <operator pos:start="139:16" pos:end="139:16">=</operator> <name pos:start="139:18" pos:end="139:31">transaction_id</name> <operator pos:start="139:33" pos:end="139:34">&gt;&gt;</operator> <literal type="number" pos:start="139:36" pos:end="139:36">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:39"><expr pos:start="141:5" pos:end="141:38"><name pos:start="141:5" pos:end="141:14"><name pos:start="141:5" pos:end="141:11">sdu_out</name><index pos:start="141:12" pos:end="141:14">[<expr pos:start="141:13" pos:end="141:13"><literal type="number" pos:start="141:13" pos:end="141:13">2</literal></expr>]</index></name> <operator pos:start="141:16" pos:end="141:16">=</operator> <name pos:start="141:18" pos:end="141:31">transaction_id</name> <operator pos:start="141:33" pos:end="141:33">&amp;</operator> <literal type="number" pos:start="141:35" pos:end="141:38">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:30"><expr pos:start="143:5" pos:end="143:29"><name pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:11">sdu_out</name><index pos:start="143:12" pos:end="143:14">[<expr pos:start="143:13" pos:end="143:13"><literal type="number" pos:start="143:13" pos:end="143:13">3</literal></expr>]</index></name> <operator pos:start="143:16" pos:end="143:16">=</operator> <name pos:start="143:18" pos:end="143:24">rsp_len</name> <operator pos:start="143:26" pos:end="143:27">&gt;&gt;</operator> <literal type="number" pos:start="143:29" pos:end="143:29">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:32"><expr pos:start="145:5" pos:end="145:31"><name pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:11">sdu_out</name><index pos:start="145:12" pos:end="145:14">[<expr pos:start="145:13" pos:end="145:13"><literal type="number" pos:start="145:13" pos:end="145:13">4</literal></expr>]</index></name> <operator pos:start="145:16" pos:end="145:16">=</operator> <name pos:start="145:18" pos:end="145:24">rsp_len</name> <operator pos:start="145:26" pos:end="145:26">&amp;</operator> <literal type="number" pos:start="145:28" pos:end="145:31">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:52"><expr pos:start="147:5" pos:end="147:51"><call pos:start="147:5" pos:end="147:51"><name pos:start="147:5" pos:end="147:10">memcpy</name><argument_list pos:start="147:11" pos:end="147:51">(<argument pos:start="147:12" pos:end="147:36"><expr pos:start="147:12" pos:end="147:36"><name pos:start="147:12" pos:end="147:18">sdu_out</name> <operator pos:start="147:20" pos:end="147:20">+</operator> <name pos:start="147:22" pos:end="147:36">PDU_HEADER_SIZE</name></expr></argument>, <argument pos:start="147:39" pos:end="147:41"><expr pos:start="147:39" pos:end="147:41"><name pos:start="147:39" pos:end="147:41">rsp</name></expr></argument>, <argument pos:start="147:44" pos:end="147:50"><expr pos:start="147:44" pos:end="147:50"><name pos:start="147:44" pos:end="147:50">rsp_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:43"><expr pos:start="151:5" pos:end="151:42"><call pos:start="151:5" pos:end="151:42"><name pos:start="151:5" pos:end="151:28"><name pos:start="151:5" pos:end="151:7">sdp</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:16">channel</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:28">sdu_submit</name></name><argument_list pos:start="151:29" pos:end="151:42">(<argument pos:start="151:30" pos:end="151:41"><expr pos:start="151:30" pos:end="151:41"><name pos:start="151:30" pos:end="151:41"><name pos:start="151:30" pos:end="151:32">sdp</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:41">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
