<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22332.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">check_codec_match</name><parameter_list pos:start="1:22" pos:end="1:75">(<parameter pos:start="1:23" pos:end="1:41"><decl pos:start="1:23" pos:end="1:41"><type pos:start="1:23" pos:end="1:41"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ccf</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:62"><name pos:start="1:44" pos:end="1:57">AVCodecContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">ccs</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:74"><decl pos:start="1:65" pos:end="1:74"><type pos:start="1:65" pos:end="1:74"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:74">stream</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:19">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">matches</name> <init pos:start="5:17" pos:end="5:19">= <expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">1</literal></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="9:1" pos:end="9:42">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:19">CHECK_CODEC</name><parameter_list pos:start="9:20" pos:end="9:22">(<parameter pos:start="9:21" pos:end="9:21"><type pos:start="9:21" pos:end="9:21"><name pos:start="9:21" pos:end="9:21">x</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value pos:start="9:25" pos:end="9:42">(ccf-&gt;x != ccs-&gt;x)</cpp:value></cpp:define>

    <if_stmt pos:start="11:5" pos:end="59:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:57">(<expr pos:start="11:9" pos:end="11:56"><call pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:19">CHECK_CODEC</name><argument_list pos:start="11:20" pos:end="11:29">(<argument pos:start="11:21" pos:end="11:28"><expr pos:start="11:21" pos:end="11:28"><name pos:start="11:21" pos:end="11:28">codec_id</name></expr></argument>)</argument_list></call> <operator pos:start="11:31" pos:end="11:32">||</operator> <call pos:start="11:34" pos:end="11:56"><name pos:start="11:34" pos:end="11:44">CHECK_CODEC</name><argument_list pos:start="11:45" pos:end="11:56">(<argument pos:start="11:46" pos:end="11:55"><expr pos:start="11:46" pos:end="11:55"><name pos:start="11:46" pos:end="11:55">codec_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:59" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:20">

        <expr_stmt pos:start="13:9" pos:end="13:64"><expr pos:start="13:9" pos:end="13:63"><call pos:start="13:9" pos:end="13:63"><name pos:start="13:9" pos:end="13:16">http_log</name><argument_list pos:start="13:17" pos:end="13:63">(<argument pos:start="13:18" pos:end="13:54"><expr pos:start="13:18" pos:end="13:54"><literal type="string" pos:start="13:18" pos:end="13:54">"Codecs do not match for stream %d\n"</literal></expr></argument>, <argument pos:start="13:57" pos:end="13:62"><expr pos:start="13:57" pos:end="13:62"><name pos:start="13:57" pos:end="13:62">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:20"><expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:15">matches</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if <condition pos:start="17:15" pos:end="17:59">(<expr pos:start="17:16" pos:end="17:58"><call pos:start="17:16" pos:end="17:36"><name pos:start="17:16" pos:end="17:26">CHECK_CODEC</name><argument_list pos:start="17:27" pos:end="17:36">(<argument pos:start="17:28" pos:end="17:35"><expr pos:start="17:28" pos:end="17:35"><name pos:start="17:28" pos:end="17:35">bit_rate</name></expr></argument>)</argument_list></call> <operator pos:start="17:38" pos:end="17:39">||</operator> <call pos:start="17:41" pos:end="17:58"><name pos:start="17:41" pos:end="17:51">CHECK_CODEC</name><argument_list pos:start="17:52" pos:end="17:58">(<argument pos:start="17:53" pos:end="17:57"><expr pos:start="17:53" pos:end="17:57"><name pos:start="17:53" pos:end="17:57">flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:61" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:20">

        <expr_stmt pos:start="19:9" pos:end="19:72"><expr pos:start="19:9" pos:end="19:71"><call pos:start="19:9" pos:end="19:71"><name pos:start="19:9" pos:end="19:16">http_log</name><argument_list pos:start="19:17" pos:end="19:71">(<argument pos:start="19:18" pos:end="19:62"><expr pos:start="19:18" pos:end="19:62"><literal type="string" pos:start="19:18" pos:end="19:62">"Codec bitrates do not match for stream %d\n"</literal></expr></argument>, <argument pos:start="19:65" pos:end="19:70"><expr pos:start="19:65" pos:end="19:70"><name pos:start="19:65" pos:end="19:70">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:20"><expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:15">matches</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="39:5">else if <condition pos:start="23:15" pos:end="23:53">(<expr pos:start="23:16" pos:end="23:52"><name pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:18">ccf</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:30">codec_type</name></name> <operator pos:start="23:32" pos:end="23:33">==</operator> <name pos:start="23:35" pos:end="23:52">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="23:55" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:9">

        <if_stmt pos:start="25:9" pos:end="37:9"><if pos:start="25:9" pos:end="37:9">if <condition pos:start="25:12" pos:end="31:32">(<expr pos:start="25:13" pos:end="31:31"><call pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:23">CHECK_CODEC</name><argument_list pos:start="25:24" pos:end="25:38">(<argument pos:start="25:25" pos:end="25:37"><expr pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:33">time_base</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:37">den</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:40" pos:end="25:41">||</operator>

            <call pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:23">CHECK_CODEC</name><argument_list pos:start="27:24" pos:end="27:38">(<argument pos:start="27:25" pos:end="27:37"><expr pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:33">time_base</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:37">num</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:41">||</operator>

            <call pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:23">CHECK_CODEC</name><argument_list pos:start="29:24" pos:end="29:30">(<argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">width</name></expr></argument>)</argument_list></call> <operator pos:start="29:32" pos:end="29:33">||</operator>

            <call pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:23">CHECK_CODEC</name><argument_list pos:start="31:24" pos:end="31:31">(<argument pos:start="31:25" pos:end="31:30"><expr pos:start="31:25" pos:end="31:30"><name pos:start="31:25" pos:end="31:30">height</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:34" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:24">

            <expr_stmt pos:start="33:13" pos:end="33:94"><expr pos:start="33:13" pos:end="33:93"><call pos:start="33:13" pos:end="33:93"><name pos:start="33:13" pos:end="33:20">http_log</name><argument_list pos:start="33:21" pos:end="33:93">(<argument pos:start="33:22" pos:end="33:84"><expr pos:start="33:22" pos:end="33:84"><literal type="string" pos:start="33:22" pos:end="33:84">"Codec width, height or framerate do not match for stream %d\n"</literal></expr></argument>, <argument pos:start="33:87" pos:end="33:92"><expr pos:start="33:87" pos:end="33:92"><name pos:start="33:87" pos:end="33:92">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:19">matches</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="53:5">else if <condition pos:start="39:15" pos:end="39:53">(<expr pos:start="39:16" pos:end="39:52"><name pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:18">ccf</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:30">codec_type</name></name> <operator pos:start="39:32" pos:end="39:33">==</operator> <name pos:start="39:35" pos:end="39:52">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="39:55" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="45:36">(<expr pos:start="41:13" pos:end="45:35"><call pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:23">CHECK_CODEC</name><argument_list pos:start="41:24" pos:end="41:36">(<argument pos:start="41:25" pos:end="41:35"><expr pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:35">sample_rate</name></expr></argument>)</argument_list></call> <operator pos:start="41:38" pos:end="41:39">||</operator>

            <call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:23">CHECK_CODEC</name><argument_list pos:start="43:24" pos:end="43:33">(<argument pos:start="43:25" pos:end="43:32"><expr pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:32">channels</name></expr></argument>)</argument_list></call> <operator pos:start="43:35" pos:end="43:36">||</operator>

            <call pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:23">CHECK_CODEC</name><argument_list pos:start="45:24" pos:end="45:35">(<argument pos:start="45:25" pos:end="45:34"><expr pos:start="45:25" pos:end="45:34"><name pos:start="45:25" pos:end="45:34">frame_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:38" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:24">

            <expr_stmt pos:start="47:13" pos:end="47:101"><expr pos:start="47:13" pos:end="47:100"><call pos:start="47:13" pos:end="47:100"><name pos:start="47:13" pos:end="47:20">http_log</name><argument_list pos:start="47:21" pos:end="47:100">(<argument pos:start="47:22" pos:end="47:91"><expr pos:start="47:22" pos:end="47:91"><literal type="string" pos:start="47:22" pos:end="47:91">"Codec sample_rate, channels, frame_size do not match for stream %d\n"</literal></expr></argument>, <argument pos:start="47:94" pos:end="47:99"><expr pos:start="47:94" pos:end="47:99"><name pos:start="47:94" pos:end="47:99">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:19">matches</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="59:5">else <block pos:start="53:12" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:20">

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><call pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:16">http_log</name><argument_list pos:start="55:17" pos:end="55:62">(<argument pos:start="55:18" pos:end="55:53"><expr pos:start="55:18" pos:end="55:53"><literal type="string" pos:start="55:18" pos:end="55:53">"Unknown codec type for stream %d\n"</literal></expr></argument>, <argument pos:start="55:56" pos:end="55:61"><expr pos:start="55:56" pos:end="55:61"><name pos:start="55:56" pos:end="55:61">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:15">matches</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="63:5" pos:end="63:19">return <expr pos:start="63:12" pos:end="63:18"><name pos:start="63:12" pos:end="63:18">matches</name></expr>;</return>

</block_content>}</block></function>
</unit>
