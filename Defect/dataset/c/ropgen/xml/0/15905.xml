<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15905.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">vc1_decode_p_blocks</name><parameter_list pos:start="1:32" pos:end="1:46">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:42">VC1Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:67">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:25">apply_loop_filter</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:57">/* select codingmode used for VLC tables selection */</comment>

    <switch pos:start="13:5" pos:end="33:5">switch <condition pos:start="13:12" pos:end="13:32">(<expr pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:13">v</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:31">c_ac_table_index</name></name></expr>)</condition> <block pos:start="13:34" pos:end="33:5">{<block_content pos:start="15:5" pos:end="31:14">

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">0</literal></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:81"><expr pos:start="17:9" pos:end="17:80"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:9">v</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:20">codingset</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <ternary pos:start="17:24" pos:end="17:80"><condition pos:start="17:24" pos:end="17:42"><expr pos:start="17:24" pos:end="17:40"><operator pos:start="17:24" pos:end="17:24">(</operator><name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:25">v</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:34">pqindex</name></name> <operator pos:start="17:36" pos:end="17:37">&lt;=</operator> <literal type="number" pos:start="17:39" pos:end="17:39">8</literal><operator pos:start="17:40" pos:end="17:40">)</operator></expr> ?</condition><then pos:start="17:44" pos:end="17:61"> <expr pos:start="17:44" pos:end="17:61"><name pos:start="17:44" pos:end="17:61">CS_HIGH_RATE_INTRA</name></expr> </then><else pos:start="17:63" pos:end="17:80">: <expr pos:start="17:65" pos:end="17:80"><name pos:start="17:65" pos:end="17:80">CS_LOW_MOT_INTRA</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">1</literal></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">v</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">codingset</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:40">CS_HIGH_MOT_INTRA</name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">v</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">codingset</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:40">CS_MID_RATE_INTRA</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    </block_content>}</block></switch>



    <switch pos:start="37:5" pos:end="57:5">switch <condition pos:start="37:12" pos:end="37:32">(<expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">v</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">c_ac_table_index</name></name></expr>)</condition> <block pos:start="37:34" pos:end="57:5">{<block_content pos:start="39:5" pos:end="55:14">

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">0</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:82"><expr pos:start="41:9" pos:end="41:81"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">v</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">codingset2</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <ternary pos:start="41:25" pos:end="41:81"><condition pos:start="41:25" pos:end="41:43"><expr pos:start="41:25" pos:end="41:41"><operator pos:start="41:25" pos:end="41:25">(</operator><name pos:start="41:26" pos:end="41:35"><name pos:start="41:26" pos:end="41:26">v</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:35">pqindex</name></name> <operator pos:start="41:37" pos:end="41:38">&lt;=</operator> <literal type="number" pos:start="41:40" pos:end="41:40">8</literal><operator pos:start="41:41" pos:end="41:41">)</operator></expr> ?</condition><then pos:start="41:45" pos:end="41:62"> <expr pos:start="41:45" pos:end="41:62"><name pos:start="41:45" pos:end="41:62">CS_HIGH_RATE_INTER</name></expr> </then><else pos:start="41:64" pos:end="41:81">: <expr pos:start="41:66" pos:end="41:81"><name pos:start="41:66" pos:end="41:81">CS_LOW_MOT_INTER</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">1</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">v</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">codingset2</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:41">CS_HIGH_MOT_INTER</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">2</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">v</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">codingset2</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:41">CS_MID_RATE_INTER</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="61:5" pos:end="61:94"><expr pos:start="61:5" pos:end="61:93"><name pos:start="61:5" pos:end="61:21">apply_loop_filter</name>   <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:40"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:40">loop_filter</name></name> <operator pos:start="61:42" pos:end="61:43">&amp;&amp;</operator> <operator pos:start="61:45" pos:end="61:45">!</operator><operator pos:start="61:46" pos:end="61:46">(</operator><name pos:start="61:47" pos:end="61:72"><name pos:start="61:47" pos:end="61:47">s</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:54">avctx</name><operator pos:start="61:55" pos:end="61:56">-&gt;</operator><name pos:start="61:57" pos:end="61:72">skip_loop_filter</name></name> <operator pos:start="61:74" pos:end="61:75">&gt;=</operator> <name pos:start="61:77" pos:end="61:92">AVDISCARD_NONKEY</name><operator pos:start="61:93" pos:end="61:93">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:23">first_slice_line</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:66"><expr pos:start="65:5" pos:end="65:65"><call pos:start="65:5" pos:end="65:65"><name pos:start="65:5" pos:end="65:10">memset</name><argument_list pos:start="65:11" pos:end="65:65">(<argument pos:start="65:12" pos:end="65:22"><expr pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:22"><name pos:start="65:12" pos:end="65:12">v</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:22">cbp_base</name></name></expr></argument>, <argument pos:start="65:25" pos:end="65:25"><expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr></argument>, <argument pos:start="65:28" pos:end="65:64"><expr pos:start="65:28" pos:end="65:64"><sizeof pos:start="65:28" pos:end="65:49">sizeof<argument_list pos:start="65:34" pos:end="65:49">(<argument pos:start="65:35" pos:end="65:48"><expr pos:start="65:35" pos:end="65:48"><name pos:start="65:35" pos:end="65:48"><name pos:start="65:35" pos:end="65:35">v</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:45">cbp_base</name><index pos:start="65:46" pos:end="65:48">[<expr pos:start="65:47" pos:end="65:47"><literal type="number" pos:start="65:47" pos:end="65:47">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator pos:start="65:50" pos:end="65:50">*</operator><literal type="number" pos:start="65:51" pos:end="65:51">2</literal><operator pos:start="65:52" pos:end="65:52">*</operator><name pos:start="65:53" pos:end="65:64"><name pos:start="65:53" pos:end="65:53">s</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:64">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="121:5">for <control pos:start="67:9" pos:end="67:67">(<init pos:start="67:10" pos:end="67:33"><expr pos:start="67:10" pos:end="67:32"><name pos:start="67:10" pos:end="67:16"><name pos:start="67:10" pos:end="67:10">s</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:16">mb_y</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:32">start_mb_y</name></name></expr>;</init> <condition pos:start="67:35" pos:end="67:56"><expr pos:start="67:35" pos:end="67:55"><name pos:start="67:35" pos:end="67:41"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:41">mb_y</name></name> <operator pos:start="67:43" pos:end="67:43">&lt;</operator> <name pos:start="67:45" pos:end="67:55"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:55">end_mb_y</name></name></expr>;</condition> <incr pos:start="67:58" pos:end="67:66"><expr pos:start="67:58" pos:end="67:66"><name pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:58">s</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:64">mb_y</name></name><operator pos:start="67:65" pos:end="67:66">++</operator></expr></incr>)</control> <block pos:start="67:69" pos:end="121:5">{<block_content pos:start="69:9" pos:end="119:32">

        <expr_stmt pos:start="69:9" pos:end="69:20"><expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">mb_x</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:27">ff_init_block_index</name><argument_list pos:start="71:28" pos:end="71:30">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="73:9" pos:end="107:9">for <control pos:start="73:13" pos:end="73:48">(<init pos:start="73:14" pos:end="73:14">;</init> <condition pos:start="73:16" pos:end="73:37"><expr pos:start="73:16" pos:end="73:36"><name pos:start="73:16" pos:end="73:22"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:22">mb_x</name></name> <operator pos:start="73:24" pos:end="73:24">&lt;</operator> <name pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:26">s</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:36">mb_width</name></name></expr>;</condition> <incr pos:start="73:39" pos:end="73:47"><expr pos:start="73:39" pos:end="73:47"><name pos:start="73:39" pos:end="73:45"><name pos:start="73:39" pos:end="73:39">s</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:45">mb_x</name></name><operator pos:start="73:46" pos:end="73:47">++</operator></expr></incr>)</control> <block pos:start="73:50" pos:end="107:9">{<block_content pos:start="75:13" pos:end="105:13">

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><call pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:33">ff_update_block_index</name><argument_list pos:start="75:34" pos:end="75:36">(<argument pos:start="75:35" pos:end="75:35"><expr pos:start="75:35" pos:end="75:35"><name pos:start="75:35" pos:end="75:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="79:13" pos:end="87:36"><if pos:start="79:13" pos:end="81:41">if <condition pos:start="79:16" pos:end="79:38">(<expr pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:17">v</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:22">fcm</name></name> <operator pos:start="79:24" pos:end="79:25">==</operator> <name pos:start="79:27" pos:end="79:37">ILACE_FIELD</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:41"><block_content pos:start="81:17" pos:end="81:41">

                <expr_stmt pos:start="81:17" pos:end="81:41"><expr pos:start="81:17" pos:end="81:40"><call pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:37">vc1_decode_p_mb_intfi</name><argument_list pos:start="81:38" pos:end="81:40">(<argument pos:start="81:39" pos:end="81:39"><expr pos:start="81:39" pos:end="81:39"><name pos:start="81:39" pos:end="81:39">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="83:13" pos:end="85:41">else if <condition pos:start="83:21" pos:end="83:43">(<expr pos:start="83:22" pos:end="83:42"><name pos:start="83:22" pos:end="83:27"><name pos:start="83:22" pos:end="83:22">v</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:27">fcm</name></name> <operator pos:start="83:29" pos:end="83:30">==</operator> <name pos:start="83:32" pos:end="83:42">ILACE_FRAME</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:41"><block_content pos:start="85:17" pos:end="85:41">

                <expr_stmt pos:start="85:17" pos:end="85:41"><expr pos:start="85:17" pos:end="85:40"><call pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:37">vc1_decode_p_mb_intfr</name><argument_list pos:start="85:38" pos:end="85:40">(<argument pos:start="85:39" pos:end="85:39"><expr pos:start="85:39" pos:end="85:39"><name pos:start="85:39" pos:end="85:39">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="87:13" pos:end="87:36">else<block type="pseudo" pos:start="87:18" pos:end="87:36"><block_content pos:start="87:18" pos:end="87:36"> <expr_stmt pos:start="87:18" pos:end="87:36"><expr pos:start="87:18" pos:end="87:35"><call pos:start="87:18" pos:end="87:35"><name pos:start="87:18" pos:end="87:32">vc1_decode_p_mb</name><argument_list pos:start="87:33" pos:end="87:35">(<argument pos:start="87:34" pos:end="87:34"><expr pos:start="87:34" pos:end="87:34"><name pos:start="87:34" pos:end="87:34">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="89:13" pos:end="91:43"><if pos:start="89:13" pos:end="91:43">if <condition pos:start="89:16" pos:end="89:87">(<expr pos:start="89:17" pos:end="89:86"><name pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:23">mb_y</name></name> <operator pos:start="89:25" pos:end="89:26">!=</operator> <name pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:40">start_mb_y</name></name> <operator pos:start="89:42" pos:end="89:43">&amp;&amp;</operator> <name pos:start="89:45" pos:end="89:61">apply_loop_filter</name> <operator pos:start="89:63" pos:end="89:64">&amp;&amp;</operator> <name pos:start="89:66" pos:end="89:71"><name pos:start="89:66" pos:end="89:66">v</name><operator pos:start="89:67" pos:end="89:68">-&gt;</operator><name pos:start="89:69" pos:end="89:71">fcm</name></name> <operator pos:start="89:73" pos:end="89:74">==</operator> <name pos:start="89:76" pos:end="89:86">PROGRESSIVE</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:43"><block_content pos:start="91:17" pos:end="91:43">

                <expr_stmt pos:start="91:17" pos:end="91:43"><expr pos:start="91:17" pos:end="91:42"><call pos:start="91:17" pos:end="91:42"><name pos:start="91:17" pos:end="91:39">vc1_apply_p_loop_filter</name><argument_list pos:start="91:40" pos:end="91:42">(<argument pos:start="91:41" pos:end="91:41"><expr pos:start="91:41" pos:end="91:41"><name pos:start="91:41" pos:end="91:41">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="105:13"><if pos:start="93:13" pos:end="105:13">if <condition pos:start="93:16" pos:end="93:79">(<expr pos:start="93:17" pos:end="93:78"><call pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:30">get_bits_count</name><argument_list pos:start="93:31" pos:end="93:38">(<argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><operator pos:start="93:32" pos:end="93:32">&amp;</operator><name pos:start="93:33" pos:end="93:37"><name pos:start="93:33" pos:end="93:33">s</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:37">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:40" pos:end="93:40">&gt;</operator> <name pos:start="93:42" pos:end="93:48"><name pos:start="93:42" pos:end="93:42">v</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:48">bits</name></name> <operator pos:start="93:50" pos:end="93:51">||</operator> <call pos:start="93:53" pos:end="93:74"><name pos:start="93:53" pos:end="93:66">get_bits_count</name><argument_list pos:start="93:67" pos:end="93:74">(<argument pos:start="93:68" pos:end="93:73"><expr pos:start="93:68" pos:end="93:73"><operator pos:start="93:68" pos:end="93:68">&amp;</operator><name pos:start="93:69" pos:end="93:73"><name pos:start="93:69" pos:end="93:69">s</name><operator pos:start="93:70" pos:end="93:71">-&gt;</operator><name pos:start="93:72" pos:end="93:73">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:76" pos:end="93:76">&lt;</operator> <literal type="number" pos:start="93:78" pos:end="93:78">0</literal></expr>)</condition> <block pos:start="93:81" pos:end="105:13">{<block_content pos:start="97:17" pos:end="103:23">

                <comment type="line" pos:start="95:17" pos:end="95:69">// TODO: may need modification to handle slice coding</comment>

                <expr_stmt pos:start="97:17" pos:end="97:84"><expr pos:start="97:17" pos:end="97:83"><call pos:start="97:17" pos:end="97:83"><name pos:start="97:17" pos:end="97:31">ff_er_add_slice</name><argument_list pos:start="97:32" pos:end="97:83">(<argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">s</name></expr></argument>, <argument pos:start="97:36" pos:end="97:36"><expr pos:start="97:36" pos:end="97:36"><literal type="number" pos:start="97:36" pos:end="97:36">0</literal></expr></argument>, <argument pos:start="97:39" pos:end="97:51"><expr pos:start="97:39" pos:end="97:51"><name pos:start="97:39" pos:end="97:51"><name pos:start="97:39" pos:end="97:39">s</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:51">start_mb_y</name></name></expr></argument>, <argument pos:start="97:54" pos:end="97:60"><expr pos:start="97:54" pos:end="97:60"><name pos:start="97:54" pos:end="97:60"><name pos:start="97:54" pos:end="97:54">s</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:60">mb_x</name></name></expr></argument>, <argument pos:start="97:63" pos:end="97:69"><expr pos:start="97:63" pos:end="97:69"><name pos:start="97:63" pos:end="97:69"><name pos:start="97:63" pos:end="97:63">s</name><operator pos:start="97:64" pos:end="97:65">-&gt;</operator><name pos:start="97:66" pos:end="97:69">mb_y</name></name></expr></argument>, <argument pos:start="97:72" pos:end="97:82"><expr pos:start="97:72" pos:end="97:82"><name pos:start="97:72" pos:end="97:82">ER_MB_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="101:74"><expr pos:start="99:17" pos:end="101:73"><call pos:start="99:17" pos:end="101:73"><name pos:start="99:17" pos:end="99:22">av_log</name><argument_list pos:start="99:23" pos:end="101:73">(<argument pos:start="99:24" pos:end="99:31"><expr pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:31">avctx</name></name></expr></argument>, <argument pos:start="99:34" pos:end="99:45"><expr pos:start="99:34" pos:end="99:45"><name pos:start="99:34" pos:end="99:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:48" pos:end="99:89"><expr pos:start="99:48" pos:end="99:89"><literal type="string" pos:start="99:48" pos:end="99:89">"Bits overconsumption: %i &gt; %i at %ix%i\n"</literal></expr></argument>,

                       <argument pos:start="101:24" pos:end="101:45"><expr pos:start="101:24" pos:end="101:45"><call pos:start="101:24" pos:end="101:45"><name pos:start="101:24" pos:end="101:37">get_bits_count</name><argument_list pos:start="101:38" pos:end="101:45">(<argument pos:start="101:39" pos:end="101:44"><expr pos:start="101:39" pos:end="101:44"><operator pos:start="101:39" pos:end="101:39">&amp;</operator><name pos:start="101:40" pos:end="101:44"><name pos:start="101:40" pos:end="101:40">s</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:44">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:48" pos:end="101:54"><expr pos:start="101:48" pos:end="101:54"><name pos:start="101:48" pos:end="101:54"><name pos:start="101:48" pos:end="101:48">v</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:54">bits</name></name></expr></argument>, <argument pos:start="101:57" pos:end="101:63"><expr pos:start="101:57" pos:end="101:63"><name pos:start="101:57" pos:end="101:63"><name pos:start="101:57" pos:end="101:57">s</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:63">mb_x</name></name></expr></argument>, <argument pos:start="101:66" pos:end="101:72"><expr pos:start="101:66" pos:end="101:72"><name pos:start="101:66" pos:end="101:72"><name pos:start="101:66" pos:end="101:66">s</name><operator pos:start="101:67" pos:end="101:68">-&gt;</operator><name pos:start="101:69" pos:end="101:72">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="103:17" pos:end="103:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="109:9" pos:end="109:91"><expr pos:start="109:9" pos:end="109:90"><call pos:start="109:9" pos:end="109:90"><name pos:start="109:9" pos:end="109:15">memmove</name><argument_list pos:start="109:16" pos:end="109:90">(<argument pos:start="109:17" pos:end="109:27"><expr pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:17">v</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:27">cbp_base</name></name></expr></argument>,      <argument pos:start="109:35" pos:end="109:40"><expr pos:start="109:35" pos:end="109:40"><name pos:start="109:35" pos:end="109:40"><name pos:start="109:35" pos:end="109:35">v</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:40">cbp</name></name></expr></argument>,      <argument pos:start="109:48" pos:end="109:89"><expr pos:start="109:48" pos:end="109:89"><sizeof pos:start="109:48" pos:end="109:69">sizeof<argument_list pos:start="109:54" pos:end="109:69">(<argument pos:start="109:55" pos:end="109:68"><expr pos:start="109:55" pos:end="109:68"><name pos:start="109:55" pos:end="109:68"><name pos:start="109:55" pos:end="109:55">v</name><operator pos:start="109:56" pos:end="109:57">-&gt;</operator><name pos:start="109:58" pos:end="109:65">cbp_base</name><index pos:start="109:66" pos:end="109:68">[<expr pos:start="109:67" pos:end="109:67"><literal type="number" pos:start="109:67" pos:end="109:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof>      <operator pos:start="109:76" pos:end="109:76">*</operator> <name pos:start="109:78" pos:end="109:89"><name pos:start="109:78" pos:end="109:78">s</name><operator pos:start="109:79" pos:end="109:80">-&gt;</operator><name pos:start="109:81" pos:end="109:89">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:91"><expr pos:start="111:9" pos:end="111:90"><call pos:start="111:9" pos:end="111:90"><name pos:start="111:9" pos:end="111:15">memmove</name><argument_list pos:start="111:16" pos:end="111:90">(<argument pos:start="111:17" pos:end="111:29"><expr pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:17">v</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:29">ttblk_base</name></name></expr></argument>,    <argument pos:start="111:35" pos:end="111:42"><expr pos:start="111:35" pos:end="111:42"><name pos:start="111:35" pos:end="111:42"><name pos:start="111:35" pos:end="111:35">v</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:42">ttblk</name></name></expr></argument>,    <argument pos:start="111:48" pos:end="111:89"><expr pos:start="111:48" pos:end="111:89"><sizeof pos:start="111:48" pos:end="111:71">sizeof<argument_list pos:start="111:54" pos:end="111:71">(<argument pos:start="111:55" pos:end="111:70"><expr pos:start="111:55" pos:end="111:70"><name pos:start="111:55" pos:end="111:70"><name pos:start="111:55" pos:end="111:55">v</name><operator pos:start="111:56" pos:end="111:57">-&gt;</operator><name pos:start="111:58" pos:end="111:67">ttblk_base</name><index pos:start="111:68" pos:end="111:70">[<expr pos:start="111:69" pos:end="111:69"><literal type="number" pos:start="111:69" pos:end="111:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof>    <operator pos:start="111:76" pos:end="111:76">*</operator> <name pos:start="111:78" pos:end="111:89"><name pos:start="111:78" pos:end="111:78">s</name><operator pos:start="111:79" pos:end="111:80">-&gt;</operator><name pos:start="111:81" pos:end="111:89">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:91"><expr pos:start="113:9" pos:end="113:90"><call pos:start="113:9" pos:end="113:90"><name pos:start="113:9" pos:end="113:15">memmove</name><argument_list pos:start="113:16" pos:end="113:90">(<argument pos:start="113:17" pos:end="113:32"><expr pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:17">v</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:32">is_intra_base</name></name></expr></argument>, <argument pos:start="113:35" pos:end="113:45"><expr pos:start="113:35" pos:end="113:45"><name pos:start="113:35" pos:end="113:45"><name pos:start="113:35" pos:end="113:35">v</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:45">is_intra</name></name></expr></argument>, <argument pos:start="113:48" pos:end="113:89"><expr pos:start="113:48" pos:end="113:89"><sizeof pos:start="113:48" pos:end="113:74">sizeof<argument_list pos:start="113:54" pos:end="113:74">(<argument pos:start="113:55" pos:end="113:73"><expr pos:start="113:55" pos:end="113:73"><name pos:start="113:55" pos:end="113:73"><name pos:start="113:55" pos:end="113:55">v</name><operator pos:start="113:56" pos:end="113:57">-&gt;</operator><name pos:start="113:58" pos:end="113:70">is_intra_base</name><index pos:start="113:71" pos:end="113:73">[<expr pos:start="113:72" pos:end="113:72"><literal type="number" pos:start="113:72" pos:end="113:72">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="113:76" pos:end="113:76">*</operator> <name pos:start="113:78" pos:end="113:89"><name pos:start="113:78" pos:end="113:78">s</name><operator pos:start="113:79" pos:end="113:80">-&gt;</operator><name pos:start="113:81" pos:end="113:89">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:91"><expr pos:start="115:9" pos:end="115:90"><call pos:start="115:9" pos:end="115:90"><name pos:start="115:9" pos:end="115:15">memmove</name><argument_list pos:start="115:16" pos:end="115:90">(<argument pos:start="115:17" pos:end="115:31"><expr pos:start="115:17" pos:end="115:31"><name pos:start="115:17" pos:end="115:31"><name pos:start="115:17" pos:end="115:17">v</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:31">luma_mv_base</name></name></expr></argument>,  <argument pos:start="115:35" pos:end="115:44"><expr pos:start="115:35" pos:end="115:44"><name pos:start="115:35" pos:end="115:44"><name pos:start="115:35" pos:end="115:35">v</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:44">luma_mv</name></name></expr></argument>,  <argument pos:start="115:48" pos:end="115:89"><expr pos:start="115:48" pos:end="115:89"><sizeof pos:start="115:48" pos:end="115:73">sizeof<argument_list pos:start="115:54" pos:end="115:73">(<argument pos:start="115:55" pos:end="115:72"><expr pos:start="115:55" pos:end="115:72"><name pos:start="115:55" pos:end="115:72"><name pos:start="115:55" pos:end="115:55">v</name><operator pos:start="115:56" pos:end="115:57">-&gt;</operator><name pos:start="115:58" pos:end="115:69">luma_mv_base</name><index pos:start="115:70" pos:end="115:72">[<expr pos:start="115:71" pos:end="115:71"><literal type="number" pos:start="115:71" pos:end="115:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof>  <operator pos:start="115:76" pos:end="115:76">*</operator> <name pos:start="115:78" pos:end="115:89"><name pos:start="115:78" pos:end="115:78">s</name><operator pos:start="115:79" pos:end="115:80">-&gt;</operator><name pos:start="115:81" pos:end="115:89">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="117:84"><if pos:start="117:9" pos:end="117:84">if <condition pos:start="117:12" pos:end="117:37">(<expr pos:start="117:13" pos:end="117:36"><name pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:19">mb_y</name></name> <operator pos:start="117:21" pos:end="117:22">!=</operator> <name pos:start="117:24" pos:end="117:36"><name pos:start="117:24" pos:end="117:24">s</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:36">start_mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="117:39" pos:end="117:84"><block_content pos:start="117:39" pos:end="117:84"> <expr_stmt pos:start="117:39" pos:end="117:84"><expr pos:start="117:39" pos:end="117:83"><call pos:start="117:39" pos:end="117:83"><name pos:start="117:39" pos:end="117:56">ff_draw_horiz_band</name><argument_list pos:start="117:57" pos:end="117:83">(<argument pos:start="117:58" pos:end="117:58"><expr pos:start="117:58" pos:end="117:58"><name pos:start="117:58" pos:end="117:58">s</name></expr></argument>, <argument pos:start="117:61" pos:end="117:78"><expr pos:start="117:61" pos:end="117:78"><operator pos:start="117:61" pos:end="117:61">(</operator><name pos:start="117:62" pos:end="117:68"><name pos:start="117:62" pos:end="117:62">s</name><operator pos:start="117:63" pos:end="117:64">-&gt;</operator><name pos:start="117:65" pos:end="117:68">mb_y</name></name> <operator pos:start="117:70" pos:end="117:70">-</operator> <literal type="number" pos:start="117:72" pos:end="117:72">1</literal><operator pos:start="117:73" pos:end="117:73">)</operator> <operator pos:start="117:75" pos:end="117:75">*</operator> <literal type="number" pos:start="117:77" pos:end="117:78">16</literal></expr></argument>, <argument pos:start="117:81" pos:end="117:82"><expr pos:start="117:81" pos:end="117:82"><literal type="number" pos:start="117:81" pos:end="117:82">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:32"><expr pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:27">first_slice_line</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <literal type="number" pos:start="119:31" pos:end="119:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="123:5" pos:end="137:5"><if pos:start="123:5" pos:end="137:5">if <condition pos:start="123:8" pos:end="123:51">(<expr pos:start="123:9" pos:end="123:50"><name pos:start="123:9" pos:end="123:25">apply_loop_filter</name> <operator pos:start="123:27" pos:end="123:28">&amp;&amp;</operator> <name pos:start="123:30" pos:end="123:35"><name pos:start="123:30" pos:end="123:30">v</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:35">fcm</name></name> <operator pos:start="123:37" pos:end="123:38">==</operator> <name pos:start="123:40" pos:end="123:50">PROGRESSIVE</name></expr>)</condition> <block pos:start="123:53" pos:end="137:5">{<block_content pos:start="125:9" pos:end="135:9">

        <expr_stmt pos:start="125:9" pos:end="125:20"><expr pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:15">mb_x</name></name> <operator pos:start="125:17" pos:end="125:17">=</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:31"><expr pos:start="127:9" pos:end="127:30"><call pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:27">ff_init_block_index</name><argument_list pos:start="127:28" pos:end="127:30">(<argument pos:start="127:29" pos:end="127:29"><expr pos:start="127:29" pos:end="127:29"><name pos:start="127:29" pos:end="127:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="129:9" pos:end="135:9">for <control pos:start="129:13" pos:end="129:48">(<init pos:start="129:14" pos:end="129:14">;</init> <condition pos:start="129:16" pos:end="129:37"><expr pos:start="129:16" pos:end="129:36"><name pos:start="129:16" pos:end="129:22"><name pos:start="129:16" pos:end="129:16">s</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:22">mb_x</name></name> <operator pos:start="129:24" pos:end="129:24">&lt;</operator> <name pos:start="129:26" pos:end="129:36"><name pos:start="129:26" pos:end="129:26">s</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:36">mb_width</name></name></expr>;</condition> <incr pos:start="129:39" pos:end="129:47"><expr pos:start="129:39" pos:end="129:47"><name pos:start="129:39" pos:end="129:45"><name pos:start="129:39" pos:end="129:39">s</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:45">mb_x</name></name><operator pos:start="129:46" pos:end="129:47">++</operator></expr></incr>)</control> <block pos:start="129:50" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:39">

            <expr_stmt pos:start="131:13" pos:end="131:37"><expr pos:start="131:13" pos:end="131:36"><call pos:start="131:13" pos:end="131:36"><name pos:start="131:13" pos:end="131:33">ff_update_block_index</name><argument_list pos:start="131:34" pos:end="131:36">(<argument pos:start="131:35" pos:end="131:35"><expr pos:start="131:35" pos:end="131:35"><name pos:start="131:35" pos:end="131:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:39"><expr pos:start="133:13" pos:end="133:38"><call pos:start="133:13" pos:end="133:38"><name pos:start="133:13" pos:end="133:35">vc1_apply_p_loop_filter</name><argument_list pos:start="133:36" pos:end="133:38">(<argument pos:start="133:37" pos:end="133:37"><expr pos:start="133:37" pos:end="133:37"><name pos:start="133:37" pos:end="133:37">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="141:58"><if pos:start="139:5" pos:end="141:58">if <condition pos:start="139:8" pos:end="139:37">(<expr pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:19">end_mb_y</name></name> <operator pos:start="139:21" pos:end="139:22">&gt;=</operator> <name pos:start="139:24" pos:end="139:36"><name pos:start="139:24" pos:end="139:24">s</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:36">start_mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:58"><block_content pos:start="141:9" pos:end="141:58">

        <expr_stmt pos:start="141:9" pos:end="141:58"><expr pos:start="141:9" pos:end="141:57"><call pos:start="141:9" pos:end="141:57"><name pos:start="141:9" pos:end="141:26">ff_draw_horiz_band</name><argument_list pos:start="141:27" pos:end="141:57">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">s</name></expr></argument>, <argument pos:start="141:31" pos:end="141:52"><expr pos:start="141:31" pos:end="141:52"><operator pos:start="141:31" pos:end="141:31">(</operator><name pos:start="141:32" pos:end="141:42"><name pos:start="141:32" pos:end="141:32">s</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:42">end_mb_y</name></name> <operator pos:start="141:44" pos:end="141:44">-</operator> <literal type="number" pos:start="141:46" pos:end="141:46">1</literal><operator pos:start="141:47" pos:end="141:47">)</operator> <operator pos:start="141:49" pos:end="141:49">*</operator> <literal type="number" pos:start="141:51" pos:end="141:52">16</literal></expr></argument>, <argument pos:start="141:55" pos:end="141:56"><expr pos:start="141:55" pos:end="141:56"><literal type="number" pos:start="141:55" pos:end="141:56">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="145:67"><expr pos:start="143:5" pos:end="145:66"><call pos:start="143:5" pos:end="145:66"><name pos:start="143:5" pos:end="143:19">ff_er_add_slice</name><argument_list pos:start="143:20" pos:end="145:66">(<argument pos:start="143:21" pos:end="143:21"><expr pos:start="143:21" pos:end="143:21"><name pos:start="143:21" pos:end="143:21">s</name></expr></argument>, <argument pos:start="143:24" pos:end="143:24"><expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr></argument>, <argument pos:start="143:27" pos:end="143:56"><expr pos:start="143:27" pos:end="143:56"><name pos:start="143:27" pos:end="143:39"><name pos:start="143:27" pos:end="143:27">s</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:39">start_mb_y</name></name> <operator pos:start="143:41" pos:end="143:42">&lt;&lt;</operator> <name pos:start="143:44" pos:end="143:56"><name pos:start="143:44" pos:end="143:44">v</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:56">field_mode</name></name></expr></argument>, <argument pos:start="143:59" pos:end="143:73"><expr pos:start="143:59" pos:end="143:73"><name pos:start="143:59" pos:end="143:69"><name pos:start="143:59" pos:end="143:59">s</name><operator pos:start="143:60" pos:end="143:61">-&gt;</operator><name pos:start="143:62" pos:end="143:69">mb_width</name></name> <operator pos:start="143:71" pos:end="143:71">-</operator> <literal type="number" pos:start="143:73" pos:end="143:73">1</literal></expr></argument>,

                    <argument pos:start="145:21" pos:end="145:54"><expr pos:start="145:21" pos:end="145:54"><operator pos:start="145:21" pos:end="145:21">(</operator><name pos:start="145:22" pos:end="145:32"><name pos:start="145:22" pos:end="145:22">s</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:32">end_mb_y</name></name> <operator pos:start="145:34" pos:end="145:35">&lt;&lt;</operator> <name pos:start="145:37" pos:end="145:49"><name pos:start="145:37" pos:end="145:37">v</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:49">field_mode</name></name><operator pos:start="145:50" pos:end="145:50">)</operator> <operator pos:start="145:52" pos:end="145:52">-</operator> <literal type="number" pos:start="145:54" pos:end="145:54">1</literal></expr></argument>, <argument pos:start="145:57" pos:end="145:65"><expr pos:start="145:57" pos:end="145:65"><name pos:start="145:57" pos:end="145:65">ER_MB_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
