<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/28.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">av_packet_ref</name><parameter_list pos:start="1:18" pos:end="1:47">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:26">AVPacket</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">dst</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">AVPacket</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:40"><name pos:start="9:11" pos:end="9:30">av_packet_copy_props</name><argument_list pos:start="9:31" pos:end="9:40">(<argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">dst</name></expr></argument>, <argument pos:start="9:37" pos:end="9:39"><expr pos:start="9:37" pos:end="9:39"><name pos:start="9:37" pos:end="9:39">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="29:43"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:17"><name pos:start="17:10" pos:end="17:12">src</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">buf</name></name></expr>)</condition> <block pos:start="17:20" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:53">

        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:48"><name pos:start="19:15" pos:end="19:26">packet_alloc</name><argument_list pos:start="19:27" pos:end="19:48">(<argument pos:start="19:28" pos:end="19:36"><expr pos:start="19:28" pos:end="19:36"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:36"><name pos:start="19:29" pos:end="19:31">dst</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:36">buf</name></name></expr></argument>, <argument pos:start="19:39" pos:end="19:47"><expr pos:start="19:39" pos:end="19:47"><name pos:start="19:39" pos:end="19:47"><name pos:start="19:39" pos:end="19:41">src</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <goto pos:start="23:13" pos:end="23:22">goto <name pos:start="23:18" pos:end="23:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><call pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:14">memcpy</name><argument_list pos:start="25:15" pos:end="25:52">(<argument pos:start="25:16" pos:end="25:29"><expr pos:start="25:16" pos:end="25:29"><name pos:start="25:16" pos:end="25:29"><name pos:start="25:16" pos:end="25:18">dst</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:23">buf</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">data</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:40"><expr pos:start="25:32" pos:end="25:40"><name pos:start="25:32" pos:end="25:40"><name pos:start="25:32" pos:end="25:34">src</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:40">data</name></name></expr></argument>, <argument pos:start="25:43" pos:end="25:51"><expr pos:start="25:43" pos:end="25:51"><name pos:start="25:43" pos:end="25:51"><name pos:start="25:43" pos:end="25:45">src</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:51">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="29:43">else<block type="pseudo" pos:start="29:9" pos:end="29:43"><block_content pos:start="29:9" pos:end="29:43">

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">dst</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:16">buf</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:42"><name pos:start="29:20" pos:end="29:32">av_buffer_ref</name><argument_list pos:start="29:33" pos:end="29:42">(<argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:36">src</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:41">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">dst</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:13">size</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:19">src</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:7">dst</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:13">data</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:19">dst</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:24">buf</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">data</name></name></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

<label pos:start="39:1" pos:end="39:5"><name pos:start="39:1" pos:end="39:4">fail</name>:</label>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:28">av_packet_free_side_data</name><argument_list pos:start="41:29" pos:end="41:33">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:15">return <expr pos:start="43:12" pos:end="43:14"><name pos:start="43:12" pos:end="43:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
