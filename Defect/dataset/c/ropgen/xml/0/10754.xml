<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10754.c" pos:tabs="8"><function pos:start="1:1" pos:end="819:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:28">sws_init_context</name><parameter_list pos:start="1:29" pos:end="3:50">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">SwsContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:53">SwsFilter</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:64">srcFilter</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><name pos:start="3:30" pos:end="3:38">SwsFilter</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:49">dstFilter</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="819:1">{<block_content pos:start="7:5" pos:end="817:14">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">usesVFilter</name></decl>, <decl pos:start="9:22" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:32">usesHFilter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">unscaled</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:54"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">SwsFilter</name></type> <name pos:start="13:15" pos:end="13:25">dummyFilter</name> <init pos:start="13:27" pos:end="13:54">= <expr pos:start="13:29" pos:end="13:54"><block pos:start="13:29" pos:end="13:54">{ <expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">NULL</name></expr>, <expr pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:40">NULL</name></expr>, <expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr>, <expr pos:start="13:49" pos:end="13:52"><name pos:start="13:49" pos:end="13:52">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">srcW</name>              <init pos:start="15:27" pos:end="15:35">= <expr pos:start="15:29" pos:end="15:35"><name pos:start="15:29" pos:end="15:35"><name pos:start="15:29" pos:end="15:29">c</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">srcW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">srcH</name>              <init pos:start="17:27" pos:end="17:35">= <expr pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:29">c</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">srcH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:35"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">dstW</name>              <init pos:start="19:27" pos:end="19:35">= <expr pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:29">c</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">dstW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">dstH</name>              <init pos:start="21:27" pos:end="21:35">= <expr pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:29">c</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">dstH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:69"><decl pos:start="23:5" pos:end="23:68"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">dst_stride</name>        <init pos:start="23:27" pos:end="23:68">= <expr pos:start="23:29" pos:end="23:68"><call pos:start="23:29" pos:end="23:68"><name pos:start="23:29" pos:end="23:35">FFALIGN</name><argument_list pos:start="23:36" pos:end="23:68">(<argument pos:start="23:37" pos:end="23:63"><expr pos:start="23:37" pos:end="23:63"><name pos:start="23:37" pos:end="23:40">dstW</name> <operator pos:start="23:42" pos:end="23:42">*</operator> <sizeof pos:start="23:44" pos:end="23:58">sizeof<argument_list pos:start="23:50" pos:end="23:58">(<argument pos:start="23:51" pos:end="23:57"><expr pos:start="23:51" pos:end="23:57"><name pos:start="23:51" pos:end="23:57">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:60" pos:end="23:60">+</operator> <literal type="number" pos:start="23:62" pos:end="23:63">16</literal></expr></argument>, <argument pos:start="23:66" pos:end="23:67"><expr pos:start="23:66" pos:end="23:67"><literal type="number" pos:start="23:66" pos:end="23:67">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:44"><decl pos:start="25:5" pos:end="25:43"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:21">dst_stride_px</name>     <init pos:start="25:27" pos:end="25:43">= <expr pos:start="25:29" pos:end="25:43"><name pos:start="25:29" pos:end="25:38">dst_stride</name> <operator pos:start="25:40" pos:end="25:41">&gt;&gt;</operator> <literal type="number" pos:start="25:43" pos:end="25:43">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">flags</name></decl>, <decl pos:start="27:16" pos:end="27:24"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:16" pos:end="27:24">cpu_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:46"><decl pos:start="29:5" pos:end="29:45"><type pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:8">enum</name> <name pos:start="29:10" pos:end="29:20">PixelFormat</name></name></type> <name pos:start="29:22" pos:end="29:30">srcFormat</name> <init pos:start="29:32" pos:end="29:45">= <expr pos:start="29:34" pos:end="29:45"><name pos:start="29:34" pos:end="29:45"><name pos:start="29:34" pos:end="29:34">c</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:45">srcFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:46"><decl pos:start="31:5" pos:end="31:45"><type pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:8">enum</name> <name pos:start="31:10" pos:end="31:20">PixelFormat</name></name></type> <name pos:start="31:22" pos:end="31:30">dstFormat</name> <init pos:start="31:32" pos:end="31:45">= <expr pos:start="31:34" pos:end="31:45"><name pos:start="31:34" pos:end="31:45"><name pos:start="31:34" pos:end="31:34">c</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:45">dstFormat</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:13">cpu_flags</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:32">av_get_cpu_flags</name><argument_list pos:start="35:33" pos:end="35:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:9">flags</name>     <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:17">c</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:13"><expr pos:start="39:5" pos:end="39:12"><call pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:10">emms_c</name><argument_list pos:start="39:11" pos:end="39:12">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:27"><if pos:start="41:5" pos:end="43:27">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:18">rgb15to16</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:27"><block_content pos:start="43:9" pos:end="43:27">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><call pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:24">sws_rgb2rgb_init</name><argument_list pos:start="43:25" pos:end="43:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:12">unscaled</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:20">srcW</name> <operator pos:start="47:22" pos:end="47:23">==</operator> <name pos:start="47:25" pos:end="47:28">dstW</name> <operator pos:start="47:30" pos:end="47:31">&amp;&amp;</operator> <name pos:start="47:33" pos:end="47:36">srcH</name> <operator pos:start="47:38" pos:end="47:39">==</operator> <name pos:start="47:41" pos:end="47:44">dstH</name><operator pos:start="47:45" pos:end="47:45">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:41">(<expr pos:start="51:9" pos:end="51:40"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:40"><name pos:start="51:10" pos:end="51:29">sws_isSupportedInput</name><argument_list pos:start="51:30" pos:end="51:40">(<argument pos:start="51:31" pos:end="51:39"><expr pos:start="51:31" pos:end="51:39"><name pos:start="51:31" pos:end="51:39">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:43" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:31">

        <expr_stmt pos:start="53:9" pos:end="55:43"><expr pos:start="53:9" pos:end="55:42"><call pos:start="53:9" pos:end="55:42"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:42">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">c</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:77"><expr pos:start="53:33" pos:end="53:77"><literal type="string" pos:start="53:33" pos:end="53:77">"%s is not supported as input pixel format\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:41"><expr pos:start="55:16" pos:end="55:41"><call pos:start="55:16" pos:end="55:41"><name pos:start="55:16" pos:end="55:30">sws_format_name</name><argument_list pos:start="55:31" pos:end="55:41">(<argument pos:start="55:32" pos:end="55:40"><expr pos:start="55:32" pos:end="55:40"><name pos:start="55:32" pos:end="55:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:42">(<expr pos:start="61:9" pos:end="61:41"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:41"><name pos:start="61:10" pos:end="61:30">sws_isSupportedOutput</name><argument_list pos:start="61:31" pos:end="61:41">(<argument pos:start="61:32" pos:end="61:40"><expr pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:40">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:44" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:31">

        <expr_stmt pos:start="63:9" pos:end="65:43"><expr pos:start="63:9" pos:end="65:42"><call pos:start="63:9" pos:end="65:42"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="65:42">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">c</name></expr></argument>, <argument pos:start="63:19" pos:end="63:30"><expr pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:33" pos:end="63:78"><expr pos:start="63:33" pos:end="63:78"><literal type="string" pos:start="63:33" pos:end="63:78">"%s is not supported as output pixel format\n"</literal></expr></argument>,

               <argument pos:start="65:16" pos:end="65:41"><expr pos:start="65:16" pos:end="65:41"><call pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:30">sws_format_name</name><argument_list pos:start="65:31" pos:end="65:41">(<argument pos:start="65:32" pos:end="65:40"><expr pos:start="65:32" pos:end="65:40"><name pos:start="65:32" pos:end="65:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:31">return <expr pos:start="67:16" pos:end="67:30"><call pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:22">AVERROR</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="93:31"><expr pos:start="73:5" pos:end="93:30"><name pos:start="73:5" pos:end="73:5">i</name> <operator pos:start="73:7" pos:end="73:7">=</operator> <name pos:start="73:9" pos:end="73:13">flags</name> <operator pos:start="73:15" pos:end="73:15">&amp;</operator> <operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:26">SWS_POINT</name>         <operator pos:start="73:36" pos:end="73:36">|</operator>

                 <name pos:start="75:18" pos:end="75:25">SWS_AREA</name>          <operator pos:start="75:36" pos:end="75:36">|</operator>

                 <name pos:start="77:18" pos:end="77:29">SWS_BILINEAR</name>      <operator pos:start="77:36" pos:end="77:36">|</operator>

                 <name pos:start="79:18" pos:end="79:34">SWS_FAST_BILINEAR</name> <operator pos:start="79:36" pos:end="79:36">|</operator>

                 <name pos:start="81:18" pos:end="81:28">SWS_BICUBIC</name>       <operator pos:start="81:36" pos:end="81:36">|</operator>

                 <name pos:start="83:18" pos:end="83:22">SWS_X</name>             <operator pos:start="83:36" pos:end="83:36">|</operator>

                 <name pos:start="85:18" pos:end="85:26">SWS_GAUSS</name>         <operator pos:start="85:36" pos:end="85:36">|</operator>

                 <name pos:start="87:18" pos:end="87:28">SWS_LANCZOS</name>       <operator pos:start="87:36" pos:end="87:36">|</operator>

                 <name pos:start="89:18" pos:end="89:25">SWS_SINC</name>          <operator pos:start="89:36" pos:end="89:36">|</operator>

                 <name pos:start="91:18" pos:end="91:27">SWS_SPLINE</name>        <operator pos:start="91:36" pos:end="91:36">|</operator>

                 <name pos:start="93:18" pos:end="93:29">SWS_BICUBLIN</name><operator pos:start="93:30" pos:end="93:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:28">(<expr pos:start="95:9" pos:end="95:27"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:13">||</operator> <operator pos:start="95:15" pos:end="95:15">(</operator><name pos:start="95:16" pos:end="95:16">i</name> <operator pos:start="95:18" pos:end="95:18">&amp;</operator> <operator pos:start="95:20" pos:end="95:20">(</operator><name pos:start="95:21" pos:end="95:21">i</name> <operator pos:start="95:23" pos:end="95:23">-</operator> <literal type="number" pos:start="95:25" pos:end="95:25">1</literal><operator pos:start="95:26" pos:end="95:26">)</operator><operator pos:start="95:27" pos:end="95:27">)</operator></expr>)</condition> <block pos:start="95:30" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:31">

        <expr_stmt pos:start="97:9" pos:end="99:64"><expr pos:start="97:9" pos:end="99:63"><call pos:start="97:9" pos:end="99:63"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="99:63">(<argument pos:start="97:16" pos:end="97:16"><expr pos:start="97:16" pos:end="97:16"><name pos:start="97:16" pos:end="97:16">c</name></expr></argument>, <argument pos:start="97:19" pos:end="97:30"><expr pos:start="97:19" pos:end="97:30"><name pos:start="97:19" pos:end="97:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="99:16" pos:end="99:62"><expr pos:start="99:16" pos:end="99:62"><literal type="string" pos:start="99:16" pos:end="99:62">"Exactly one scaler algorithm must be chosen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:31">return <expr pos:start="101:16" pos:end="101:30"><call pos:start="101:16" pos:end="101:30"><name pos:start="101:16" pos:end="101:22">AVERROR</name><argument_list pos:start="101:23" pos:end="101:30">(<argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="105:5" pos:end="105:22">/* sanity check */</comment>

    <if_stmt pos:start="107:5" pos:end="119:5"><if pos:start="107:5" pos:end="119:5">if <condition pos:start="107:8" pos:end="107:53">(<expr pos:start="107:9" pos:end="107:52"><name pos:start="107:9" pos:end="107:12">srcW</name> <operator pos:start="107:14" pos:end="107:14">&lt;</operator> <literal type="number" pos:start="107:16" pos:end="107:16">4</literal> <operator pos:start="107:18" pos:end="107:19">||</operator> <name pos:start="107:21" pos:end="107:24">srcH</name> <operator pos:start="107:26" pos:end="107:26">&lt;</operator> <literal type="number" pos:start="107:28" pos:end="107:28">1</literal> <operator pos:start="107:30" pos:end="107:31">||</operator> <name pos:start="107:33" pos:end="107:36">dstW</name> <operator pos:start="107:38" pos:end="107:38">&lt;</operator> <literal type="number" pos:start="107:40" pos:end="107:40">8</literal> <operator pos:start="107:42" pos:end="107:43">||</operator> <name pos:start="107:45" pos:end="107:48">dstH</name> <operator pos:start="107:50" pos:end="107:50">&lt;</operator> <literal type="number" pos:start="107:52" pos:end="107:52">1</literal></expr>)</condition> <block pos:start="107:55" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:31">

        <comment type="block" pos:start="109:9" pos:end="111:51">/* FIXME check if these are enough and try to lower them after

         * fixing the relevant parts of the code */</comment>

        <expr_stmt pos:start="113:9" pos:end="115:39"><expr pos:start="113:9" pos:end="115:38"><call pos:start="113:9" pos:end="115:38"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="115:38">(<argument pos:start="113:16" pos:end="113:16"><expr pos:start="113:16" pos:end="113:16"><name pos:start="113:16" pos:end="113:16">c</name></expr></argument>, <argument pos:start="113:19" pos:end="113:30"><expr pos:start="113:19" pos:end="113:30"><name pos:start="113:19" pos:end="113:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:33" pos:end="113:79"><expr pos:start="113:33" pos:end="113:79"><literal type="string" pos:start="113:33" pos:end="113:79">"%dx%d -&gt; %dx%d is invalid scaling dimension\n"</literal></expr></argument>,

               <argument pos:start="115:16" pos:end="115:19"><expr pos:start="115:16" pos:end="115:19"><name pos:start="115:16" pos:end="115:19">srcW</name></expr></argument>, <argument pos:start="115:22" pos:end="115:25"><expr pos:start="115:22" pos:end="115:25"><name pos:start="115:22" pos:end="115:25">srcH</name></expr></argument>, <argument pos:start="115:28" pos:end="115:31"><expr pos:start="115:28" pos:end="115:31"><name pos:start="115:28" pos:end="115:31">dstW</name></expr></argument>, <argument pos:start="115:34" pos:end="115:37"><expr pos:start="115:34" pos:end="115:37"><name pos:start="115:34" pos:end="115:37">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:31">return <expr pos:start="117:16" pos:end="117:30"><call pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:22">AVERROR</name><argument_list pos:start="117:23" pos:end="117:30">(<argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="125:33"><if pos:start="123:5" pos:end="125:33">if <condition pos:start="123:8" pos:end="123:19">(<expr pos:start="123:9" pos:end="123:18"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:18">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:33"><block_content pos:start="125:9" pos:end="125:33">

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:17">dstFilter</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <operator pos:start="125:21" pos:end="125:21">&amp;</operator><name pos:start="125:22" pos:end="125:32">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="129:33"><if pos:start="127:5" pos:end="129:33">if <condition pos:start="127:8" pos:end="127:19">(<expr pos:start="127:9" pos:end="127:18"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:18">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:33"><block_content pos:start="129:9" pos:end="129:33">

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:17">srcFilter</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <operator pos:start="129:21" pos:end="129:21">&amp;</operator><name pos:start="129:22" pos:end="129:32">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:67"><expr pos:start="133:5" pos:end="133:66"><name pos:start="133:5" pos:end="133:14"><name pos:start="133:5" pos:end="133:5">c</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:14">lumXInc</name></name>      <operator pos:start="133:21" pos:end="133:21">=</operator> <operator pos:start="133:23" pos:end="133:23">(</operator><operator pos:start="133:24" pos:end="133:24">(</operator><operator pos:start="133:25" pos:end="133:25">(</operator><name pos:start="133:26" pos:end="133:32">int64_t</name><operator pos:start="133:33" pos:end="133:33">)</operator><name pos:start="133:34" pos:end="133:37">srcW</name> <operator pos:start="133:39" pos:end="133:40">&lt;&lt;</operator> <literal type="number" pos:start="133:42" pos:end="133:43">16</literal><operator pos:start="133:44" pos:end="133:44">)</operator> <operator pos:start="133:46" pos:end="133:46">+</operator> <operator pos:start="133:48" pos:end="133:48">(</operator><name pos:start="133:49" pos:end="133:52">dstW</name> <operator pos:start="133:54" pos:end="133:55">&gt;&gt;</operator> <literal type="number" pos:start="133:57" pos:end="133:57">1</literal><operator pos:start="133:58" pos:end="133:58">)</operator><operator pos:start="133:59" pos:end="133:59">)</operator> <operator pos:start="133:61" pos:end="133:61">/</operator> <name pos:start="133:63" pos:end="133:66">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:67"><expr pos:start="135:5" pos:end="135:66"><name pos:start="135:5" pos:end="135:14"><name pos:start="135:5" pos:end="135:5">c</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:14">lumYInc</name></name>      <operator pos:start="135:21" pos:end="135:21">=</operator> <operator pos:start="135:23" pos:end="135:23">(</operator><operator pos:start="135:24" pos:end="135:24">(</operator><operator pos:start="135:25" pos:end="135:25">(</operator><name pos:start="135:26" pos:end="135:32">int64_t</name><operator pos:start="135:33" pos:end="135:33">)</operator><name pos:start="135:34" pos:end="135:37">srcH</name> <operator pos:start="135:39" pos:end="135:40">&lt;&lt;</operator> <literal type="number" pos:start="135:42" pos:end="135:43">16</literal><operator pos:start="135:44" pos:end="135:44">)</operator> <operator pos:start="135:46" pos:end="135:46">+</operator> <operator pos:start="135:48" pos:end="135:48">(</operator><name pos:start="135:49" pos:end="135:52">dstH</name> <operator pos:start="135:54" pos:end="135:55">&gt;&gt;</operator> <literal type="number" pos:start="135:57" pos:end="135:57">1</literal><operator pos:start="135:58" pos:end="135:58">)</operator><operator pos:start="135:59" pos:end="135:59">)</operator> <operator pos:start="135:61" pos:end="135:61">/</operator> <name pos:start="135:63" pos:end="135:66">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:80"><expr pos:start="137:5" pos:end="137:79"><name pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:5">c</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:19">dstFormatBpp</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:79"><name pos:start="137:23" pos:end="137:43">av_get_bits_per_pixel</name><argument_list pos:start="137:44" pos:end="137:79">(<argument pos:start="137:45" pos:end="137:78"><expr pos:start="137:45" pos:end="137:78"><operator pos:start="137:45" pos:end="137:45">&amp;</operator><name pos:start="137:46" pos:end="137:78"><name pos:start="137:46" pos:end="137:67">av_pix_fmt_descriptors</name><index pos:start="137:68" pos:end="137:78">[<expr pos:start="137:69" pos:end="137:77"><name pos:start="137:69" pos:end="137:77">dstFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:80"><expr pos:start="139:5" pos:end="139:79"><name pos:start="139:5" pos:end="139:19"><name pos:start="139:5" pos:end="139:5">c</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:19">srcFormatBpp</name></name> <operator pos:start="139:21" pos:end="139:21">=</operator> <call pos:start="139:23" pos:end="139:79"><name pos:start="139:23" pos:end="139:43">av_get_bits_per_pixel</name><argument_list pos:start="139:44" pos:end="139:79">(<argument pos:start="139:45" pos:end="139:78"><expr pos:start="139:45" pos:end="139:78"><operator pos:start="139:45" pos:end="139:45">&amp;</operator><name pos:start="139:46" pos:end="139:78"><name pos:start="139:46" pos:end="139:67">av_pix_fmt_descriptors</name><index pos:start="139:68" pos:end="139:78">[<expr pos:start="139:69" pos:end="139:77"><name pos:start="139:69" pos:end="139:77">srcFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:48"><expr pos:start="141:5" pos:end="141:47"><name pos:start="141:5" pos:end="141:15"><name pos:start="141:5" pos:end="141:5">c</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:15">vRounder</name></name>     <operator pos:start="141:21" pos:end="141:21">=</operator> <literal type="number" pos:start="141:23" pos:end="141:23">4</literal> <operator pos:start="141:25" pos:end="141:25">*</operator> <literal type="number" pos:start="141:27" pos:end="141:47">0x0001000100010001ULL</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="151:67"><expr pos:start="145:5" pos:end="151:66"><name pos:start="145:5" pos:end="145:15">usesVFilter</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <operator pos:start="145:19" pos:end="145:19">(</operator><name pos:start="145:20" pos:end="145:34"><name pos:start="145:20" pos:end="145:28">srcFilter</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:34">lumV</name></name> <operator pos:start="145:36" pos:end="145:37">&amp;&amp;</operator> <name pos:start="145:39" pos:end="145:61"><name pos:start="145:39" pos:end="145:47">srcFilter</name><operator pos:start="145:48" pos:end="145:49">-&gt;</operator><name pos:start="145:50" pos:end="145:53">lumV</name><operator pos:start="145:54" pos:end="145:55">-&gt;</operator><name pos:start="145:56" pos:end="145:61">length</name></name> <operator pos:start="145:63" pos:end="145:63">&gt;</operator> <literal type="number" pos:start="145:65" pos:end="145:65">1</literal><operator pos:start="145:66" pos:end="145:66">)</operator> <operator pos:start="145:68" pos:end="145:69">||</operator>

                  <operator pos:start="147:19" pos:end="147:19">(</operator><name pos:start="147:20" pos:end="147:34"><name pos:start="147:20" pos:end="147:28">srcFilter</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:34">chrV</name></name> <operator pos:start="147:36" pos:end="147:37">&amp;&amp;</operator> <name pos:start="147:39" pos:end="147:61"><name pos:start="147:39" pos:end="147:47">srcFilter</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:53">chrV</name><operator pos:start="147:54" pos:end="147:55">-&gt;</operator><name pos:start="147:56" pos:end="147:61">length</name></name> <operator pos:start="147:63" pos:end="147:63">&gt;</operator> <literal type="number" pos:start="147:65" pos:end="147:65">1</literal><operator pos:start="147:66" pos:end="147:66">)</operator> <operator pos:start="147:68" pos:end="147:69">||</operator>

                  <operator pos:start="149:19" pos:end="149:19">(</operator><name pos:start="149:20" pos:end="149:34"><name pos:start="149:20" pos:end="149:28">dstFilter</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:34">lumV</name></name> <operator pos:start="149:36" pos:end="149:37">&amp;&amp;</operator> <name pos:start="149:39" pos:end="149:61"><name pos:start="149:39" pos:end="149:47">dstFilter</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:53">lumV</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:61">length</name></name> <operator pos:start="149:63" pos:end="149:63">&gt;</operator> <literal type="number" pos:start="149:65" pos:end="149:65">1</literal><operator pos:start="149:66" pos:end="149:66">)</operator> <operator pos:start="149:68" pos:end="149:69">||</operator>

                  <operator pos:start="151:19" pos:end="151:19">(</operator><name pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:28">dstFilter</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:34">chrV</name></name> <operator pos:start="151:36" pos:end="151:37">&amp;&amp;</operator> <name pos:start="151:39" pos:end="151:61"><name pos:start="151:39" pos:end="151:47">dstFilter</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:53">chrV</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:61">length</name></name> <operator pos:start="151:63" pos:end="151:63">&gt;</operator> <literal type="number" pos:start="151:65" pos:end="151:65">1</literal><operator pos:start="151:66" pos:end="151:66">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="159:67"><expr pos:start="153:5" pos:end="159:66"><name pos:start="153:5" pos:end="153:15">usesHFilter</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <operator pos:start="153:19" pos:end="153:19">(</operator><name pos:start="153:20" pos:end="153:34"><name pos:start="153:20" pos:end="153:28">srcFilter</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:34">lumH</name></name> <operator pos:start="153:36" pos:end="153:37">&amp;&amp;</operator> <name pos:start="153:39" pos:end="153:61"><name pos:start="153:39" pos:end="153:47">srcFilter</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:53">lumH</name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:61">length</name></name> <operator pos:start="153:63" pos:end="153:63">&gt;</operator> <literal type="number" pos:start="153:65" pos:end="153:65">1</literal><operator pos:start="153:66" pos:end="153:66">)</operator> <operator pos:start="153:68" pos:end="153:69">||</operator>

                  <operator pos:start="155:19" pos:end="155:19">(</operator><name pos:start="155:20" pos:end="155:34"><name pos:start="155:20" pos:end="155:28">srcFilter</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:34">chrH</name></name> <operator pos:start="155:36" pos:end="155:37">&amp;&amp;</operator> <name pos:start="155:39" pos:end="155:61"><name pos:start="155:39" pos:end="155:47">srcFilter</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:53">chrH</name><operator pos:start="155:54" pos:end="155:55">-&gt;</operator><name pos:start="155:56" pos:end="155:61">length</name></name> <operator pos:start="155:63" pos:end="155:63">&gt;</operator> <literal type="number" pos:start="155:65" pos:end="155:65">1</literal><operator pos:start="155:66" pos:end="155:66">)</operator> <operator pos:start="155:68" pos:end="155:69">||</operator>

                  <operator pos:start="157:19" pos:end="157:19">(</operator><name pos:start="157:20" pos:end="157:34"><name pos:start="157:20" pos:end="157:28">dstFilter</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:34">lumH</name></name> <operator pos:start="157:36" pos:end="157:37">&amp;&amp;</operator> <name pos:start="157:39" pos:end="157:61"><name pos:start="157:39" pos:end="157:47">dstFilter</name><operator pos:start="157:48" pos:end="157:49">-&gt;</operator><name pos:start="157:50" pos:end="157:53">lumH</name><operator pos:start="157:54" pos:end="157:55">-&gt;</operator><name pos:start="157:56" pos:end="157:61">length</name></name> <operator pos:start="157:63" pos:end="157:63">&gt;</operator> <literal type="number" pos:start="157:65" pos:end="157:65">1</literal><operator pos:start="157:66" pos:end="157:66">)</operator> <operator pos:start="157:68" pos:end="157:69">||</operator>

                  <operator pos:start="159:19" pos:end="159:19">(</operator><name pos:start="159:20" pos:end="159:34"><name pos:start="159:20" pos:end="159:28">dstFilter</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:34">chrH</name></name> <operator pos:start="159:36" pos:end="159:37">&amp;&amp;</operator> <name pos:start="159:39" pos:end="159:61"><name pos:start="159:39" pos:end="159:47">dstFilter</name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:53">chrH</name><operator pos:start="159:54" pos:end="159:55">-&gt;</operator><name pos:start="159:56" pos:end="159:61">length</name></name> <operator pos:start="159:63" pos:end="159:63">&gt;</operator> <literal type="number" pos:start="159:65" pos:end="159:65">1</literal><operator pos:start="159:66" pos:end="159:66">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:79"><expr pos:start="163:5" pos:end="163:78"><call pos:start="163:5" pos:end="163:78"><name pos:start="163:5" pos:end="163:23">getSubSampleFactors</name><argument_list pos:start="163:24" pos:end="163:78">(<argument pos:start="163:25" pos:end="163:44"><expr pos:start="163:25" pos:end="163:44"><operator pos:start="163:25" pos:end="163:25">&amp;</operator><name pos:start="163:26" pos:end="163:44"><name pos:start="163:26" pos:end="163:26">c</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:44">chrSrcHSubSample</name></name></expr></argument>, <argument pos:start="163:47" pos:end="163:66"><expr pos:start="163:47" pos:end="163:66"><operator pos:start="163:47" pos:end="163:47">&amp;</operator><name pos:start="163:48" pos:end="163:66"><name pos:start="163:48" pos:end="163:48">c</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:66">chrSrcVSubSample</name></name></expr></argument>, <argument pos:start="163:69" pos:end="163:77"><expr pos:start="163:69" pos:end="163:77"><name pos:start="163:69" pos:end="163:77">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:79"><expr pos:start="165:5" pos:end="165:78"><call pos:start="165:5" pos:end="165:78"><name pos:start="165:5" pos:end="165:23">getSubSampleFactors</name><argument_list pos:start="165:24" pos:end="165:78">(<argument pos:start="165:25" pos:end="165:44"><expr pos:start="165:25" pos:end="165:44"><operator pos:start="165:25" pos:end="165:25">&amp;</operator><name pos:start="165:26" pos:end="165:44"><name pos:start="165:26" pos:end="165:26">c</name><operator pos:start="165:27" pos:end="165:28">-&gt;</operator><name pos:start="165:29" pos:end="165:44">chrDstHSubSample</name></name></expr></argument>, <argument pos:start="165:47" pos:end="165:66"><expr pos:start="165:47" pos:end="165:66"><operator pos:start="165:47" pos:end="165:47">&amp;</operator><name pos:start="165:48" pos:end="165:66"><name pos:start="165:48" pos:end="165:48">c</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:66">chrDstVSubSample</name></name></expr></argument>, <argument pos:start="165:69" pos:end="165:77"><expr pos:start="165:69" pos:end="165:77"><name pos:start="165:69" pos:end="165:77">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="169:5" pos:end="171:30">/* reuse chroma for 2 pixels RGB/BGR unless user wants full

     * chroma interpolation */</comment>

    <if_stmt pos:start="173:5" pos:end="199:5"><if pos:start="173:5" pos:end="199:5">if <condition pos:start="173:8" pos:end="187:35">(<expr pos:start="173:9" pos:end="187:34"><name pos:start="173:9" pos:end="173:13">flags</name> <operator pos:start="173:15" pos:end="173:15">&amp;</operator> <name pos:start="173:17" pos:end="173:34">SWS_FULL_CHR_H_INT</name> <operator pos:start="173:36" pos:end="173:37">&amp;&amp;</operator>

        <call pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:16">isAnyRGB</name><argument_list pos:start="175:17" pos:end="175:27">(<argument pos:start="175:18" pos:end="175:26"><expr pos:start="175:18" pos:end="175:26"><name pos:start="175:18" pos:end="175:26">dstFormat</name></expr></argument>)</argument_list></call>        <operator pos:start="175:36" pos:end="175:37">&amp;&amp;</operator>

        <name pos:start="177:9" pos:end="177:17">dstFormat</name> <operator pos:start="177:19" pos:end="177:20">!=</operator> <name pos:start="177:22" pos:end="177:33">PIX_FMT_RGBA</name>  <operator pos:start="177:36" pos:end="177:37">&amp;&amp;</operator>

        <name pos:start="179:9" pos:end="179:17">dstFormat</name> <operator pos:start="179:19" pos:end="179:20">!=</operator> <name pos:start="179:22" pos:end="179:33">PIX_FMT_ARGB</name>  <operator pos:start="179:36" pos:end="179:37">&amp;&amp;</operator>

        <name pos:start="181:9" pos:end="181:17">dstFormat</name> <operator pos:start="181:19" pos:end="181:20">!=</operator> <name pos:start="181:22" pos:end="181:33">PIX_FMT_BGRA</name>  <operator pos:start="181:36" pos:end="181:37">&amp;&amp;</operator>

        <name pos:start="183:9" pos:end="183:17">dstFormat</name> <operator pos:start="183:19" pos:end="183:20">!=</operator> <name pos:start="183:22" pos:end="183:33">PIX_FMT_ABGR</name>  <operator pos:start="183:36" pos:end="183:37">&amp;&amp;</operator>

        <name pos:start="185:9" pos:end="185:17">dstFormat</name> <operator pos:start="185:19" pos:end="185:20">!=</operator> <name pos:start="185:22" pos:end="185:34">PIX_FMT_RGB24</name> <operator pos:start="185:36" pos:end="185:37">&amp;&amp;</operator>

        <name pos:start="187:9" pos:end="187:17">dstFormat</name> <operator pos:start="187:19" pos:end="187:20">!=</operator> <name pos:start="187:22" pos:end="187:34">PIX_FMT_BGR24</name></expr>)</condition> <block pos:start="187:37" pos:end="199:5">{<block_content pos:start="189:9" pos:end="197:25">

        <expr_stmt pos:start="189:9" pos:end="193:43"><expr pos:start="189:9" pos:end="193:42"><call pos:start="189:9" pos:end="193:42"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="193:42">(<argument pos:start="189:16" pos:end="189:16"><expr pos:start="189:16" pos:end="189:16"><name pos:start="189:16" pos:end="189:16">c</name></expr></argument>, <argument pos:start="189:19" pos:end="189:30"><expr pos:start="189:19" pos:end="189:30"><name pos:start="189:19" pos:end="189:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="191:16" pos:end="191:92"><expr pos:start="191:16" pos:end="191:92"><literal type="string" pos:start="191:16" pos:end="191:92">"full chroma interpolation for destination format '%s' not yet implemented\n"</literal></expr></argument>,

               <argument pos:start="193:16" pos:end="193:41"><expr pos:start="193:16" pos:end="193:41"><call pos:start="193:16" pos:end="193:41"><name pos:start="193:16" pos:end="193:30">sws_format_name</name><argument_list pos:start="193:31" pos:end="193:41">(<argument pos:start="193:32" pos:end="193:40"><expr pos:start="193:32" pos:end="193:40"><name pos:start="193:32" pos:end="193:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:39"><expr pos:start="195:9" pos:end="195:38"><name pos:start="195:9" pos:end="195:13">flags</name>   <operator pos:start="195:17" pos:end="195:18">&amp;=</operator> <operator pos:start="195:20" pos:end="195:20">~</operator><name pos:start="195:21" pos:end="195:38">SWS_FULL_CHR_H_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:25"><expr pos:start="197:9" pos:end="197:24"><name pos:start="197:9" pos:end="197:16"><name pos:start="197:9" pos:end="197:9">c</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">flags</name></name> <operator pos:start="197:18" pos:end="197:18">=</operator> <name pos:start="197:20" pos:end="197:24">flags</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="201:5" pos:end="203:32"><if pos:start="201:5" pos:end="203:32">if <condition pos:start="201:8" pos:end="201:61">(<expr pos:start="201:9" pos:end="201:60"><call pos:start="201:9" pos:end="201:27"><name pos:start="201:9" pos:end="201:16">isAnyRGB</name><argument_list pos:start="201:17" pos:end="201:27">(<argument pos:start="201:18" pos:end="201:26"><expr pos:start="201:18" pos:end="201:26"><name pos:start="201:18" pos:end="201:26">dstFormat</name></expr></argument>)</argument_list></call> <operator pos:start="201:29" pos:end="201:30">&amp;&amp;</operator> <operator pos:start="201:32" pos:end="201:32">!</operator><operator pos:start="201:33" pos:end="201:33">(</operator><name pos:start="201:34" pos:end="201:38">flags</name> <operator pos:start="201:40" pos:end="201:40">&amp;</operator> <name pos:start="201:42" pos:end="201:59">SWS_FULL_CHR_H_INT</name><operator pos:start="201:60" pos:end="201:60">)</operator></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:32"><block_content pos:start="203:9" pos:end="203:32">

        <expr_stmt pos:start="203:9" pos:end="203:32"><expr pos:start="203:9" pos:end="203:31"><name pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:9">c</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:27">chrDstHSubSample</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <literal type="number" pos:start="203:31" pos:end="203:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="207:5" pos:end="207:50">// drop some chroma lines if the user wants it</comment>

    <expr_stmt pos:start="209:5" pos:end="211:52"><expr pos:start="209:5" pos:end="211:51"><name pos:start="209:5" pos:end="209:15"><name pos:start="209:5" pos:end="209:5">c</name><operator pos:start="209:6" pos:end="209:7">-&gt;</operator><name pos:start="209:8" pos:end="209:15">vChrDrop</name></name>          <operator pos:start="209:26" pos:end="209:26">=</operator> <operator pos:start="209:28" pos:end="209:28">(</operator><name pos:start="209:29" pos:end="209:33">flags</name> <operator pos:start="209:35" pos:end="209:35">&amp;</operator> <name pos:start="209:37" pos:end="209:59">SWS_SRC_V_CHR_DROP_MASK</name><operator pos:start="209:60" pos:end="209:60">)</operator> <operator pos:start="209:62" pos:end="209:63">&gt;&gt;</operator>

                           <name pos:start="211:28" pos:end="211:51">SWS_SRC_V_CHR_DROP_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:39"><expr pos:start="213:5" pos:end="213:38"><name pos:start="213:5" pos:end="213:23"><name pos:start="213:5" pos:end="213:5">c</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:23">chrSrcVSubSample</name></name> <operator pos:start="213:25" pos:end="213:26">+=</operator> <name pos:start="213:28" pos:end="213:38"><name pos:start="213:28" pos:end="213:28">c</name><operator pos:start="213:29" pos:end="213:30">-&gt;</operator><name pos:start="213:31" pos:end="213:38">vChrDrop</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="217:5" pos:end="219:27">/* drop every other pixel for chroma calculation unless user

     * wants full chroma */</comment>

    <if_stmt pos:start="221:5" pos:end="233:32"><if pos:start="221:5" pos:end="233:32">if <condition pos:start="221:8" pos:end="231:38">(<expr pos:start="221:9" pos:end="231:37"><call pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:16">isAnyRGB</name><argument_list pos:start="221:17" pos:end="221:27">(<argument pos:start="221:18" pos:end="221:26"><expr pos:start="221:18" pos:end="221:26"><name pos:start="221:18" pos:end="221:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="221:29" pos:end="221:30">&amp;&amp;</operator> <operator pos:start="221:32" pos:end="221:32">!</operator><operator pos:start="221:33" pos:end="221:33">(</operator><name pos:start="221:34" pos:end="221:38">flags</name> <operator pos:start="221:40" pos:end="221:40">&amp;</operator> <name pos:start="221:42" pos:end="221:59">SWS_FULL_CHR_H_INP</name><operator pos:start="221:60" pos:end="221:60">)</operator>   <operator pos:start="221:64" pos:end="221:65">&amp;&amp;</operator>

        <name pos:start="223:9" pos:end="223:17">srcFormat</name> <operator pos:start="223:19" pos:end="223:20">!=</operator> <name pos:start="223:22" pos:end="223:33">PIX_FMT_RGB8</name> <operator pos:start="223:35" pos:end="223:36">&amp;&amp;</operator> <name pos:start="223:38" pos:end="223:46">srcFormat</name> <operator pos:start="223:48" pos:end="223:49">!=</operator> <name pos:start="223:51" pos:end="223:62">PIX_FMT_BGR8</name> <operator pos:start="223:64" pos:end="223:65">&amp;&amp;</operator>

        <name pos:start="225:9" pos:end="225:17">srcFormat</name> <operator pos:start="225:19" pos:end="225:20">!=</operator> <name pos:start="225:22" pos:end="225:33">PIX_FMT_RGB4</name> <operator pos:start="225:35" pos:end="225:36">&amp;&amp;</operator> <name pos:start="225:38" pos:end="225:46">srcFormat</name> <operator pos:start="225:48" pos:end="225:49">!=</operator> <name pos:start="225:51" pos:end="225:62">PIX_FMT_BGR4</name> <operator pos:start="225:64" pos:end="225:65">&amp;&amp;</operator>

        <name pos:start="227:9" pos:end="227:17">srcFormat</name> <operator pos:start="227:19" pos:end="227:20">!=</operator> <name pos:start="227:22" pos:end="227:38">PIX_FMT_RGB4_BYTE</name> <operator pos:start="227:40" pos:end="227:41">&amp;&amp;</operator> <name pos:start="227:43" pos:end="227:51">srcFormat</name> <operator pos:start="227:53" pos:end="227:54">!=</operator> <name pos:start="227:56" pos:end="227:72">PIX_FMT_BGR4_BYTE</name> <operator pos:start="227:74" pos:end="227:75">&amp;&amp;</operator>

        <operator pos:start="229:9" pos:end="229:9">(</operator><operator pos:start="229:10" pos:end="229:10">(</operator><name pos:start="229:11" pos:end="229:14">dstW</name> <operator pos:start="229:16" pos:end="229:17">&gt;&gt;</operator> <name pos:start="229:19" pos:end="229:37"><name pos:start="229:19" pos:end="229:19">c</name><operator pos:start="229:20" pos:end="229:21">-&gt;</operator><name pos:start="229:22" pos:end="229:37">chrDstHSubSample</name></name><operator pos:start="229:38" pos:end="229:38">)</operator> <operator pos:start="229:40" pos:end="229:41">&lt;=</operator> <operator pos:start="229:43" pos:end="229:43">(</operator><name pos:start="229:44" pos:end="229:47">srcW</name> <operator pos:start="229:49" pos:end="229:50">&gt;&gt;</operator> <literal type="number" pos:start="229:52" pos:end="229:52">1</literal><operator pos:start="229:53" pos:end="229:53">)</operator> <operator pos:start="229:55" pos:end="229:56">||</operator>

         <operator pos:start="231:10" pos:end="231:10">(</operator><name pos:start="231:11" pos:end="231:15">flags</name> <operator pos:start="231:17" pos:end="231:17">&amp;</operator> <name pos:start="231:19" pos:end="231:35">SWS_FAST_BILINEAR</name><operator pos:start="231:36" pos:end="231:36">)</operator><operator pos:start="231:37" pos:end="231:37">)</operator></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:32"><block_content pos:start="233:9" pos:end="233:32">

        <expr_stmt pos:start="233:9" pos:end="233:32"><expr pos:start="233:9" pos:end="233:31"><name pos:start="233:9" pos:end="233:27"><name pos:start="233:9" pos:end="233:9">c</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:27">chrSrcHSubSample</name></name> <operator pos:start="233:29" pos:end="233:29">=</operator> <literal type="number" pos:start="233:31" pos:end="233:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="237:5" pos:end="237:66">// Note the -((-x)&gt;&gt;y) is so that we always round toward +inf.</comment>

    <expr_stmt pos:start="239:5" pos:end="239:51"><expr pos:start="239:5" pos:end="239:50"><name pos:start="239:5" pos:end="239:14"><name pos:start="239:5" pos:end="239:5">c</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:14">chrSrcW</name></name> <operator pos:start="239:16" pos:end="239:16">=</operator> <operator pos:start="239:18" pos:end="239:18">-</operator><operator pos:start="239:19" pos:end="239:19">(</operator><operator pos:start="239:20" pos:end="239:20">(</operator><operator pos:start="239:21" pos:end="239:21">-</operator><name pos:start="239:22" pos:end="239:25">srcW</name><operator pos:start="239:26" pos:end="239:26">)</operator> <operator pos:start="239:28" pos:end="239:29">&gt;&gt;</operator> <name pos:start="239:31" pos:end="239:49"><name pos:start="239:31" pos:end="239:31">c</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:49">chrSrcHSubSample</name></name><operator pos:start="239:50" pos:end="239:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:51"><expr pos:start="241:5" pos:end="241:50"><name pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:5">c</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:14">chrSrcH</name></name> <operator pos:start="241:16" pos:end="241:16">=</operator> <operator pos:start="241:18" pos:end="241:18">-</operator><operator pos:start="241:19" pos:end="241:19">(</operator><operator pos:start="241:20" pos:end="241:20">(</operator><operator pos:start="241:21" pos:end="241:21">-</operator><name pos:start="241:22" pos:end="241:25">srcH</name><operator pos:start="241:26" pos:end="241:26">)</operator> <operator pos:start="241:28" pos:end="241:29">&gt;&gt;</operator> <name pos:start="241:31" pos:end="241:49"><name pos:start="241:31" pos:end="241:31">c</name><operator pos:start="241:32" pos:end="241:33">-&gt;</operator><name pos:start="241:34" pos:end="241:49">chrSrcVSubSample</name></name><operator pos:start="241:50" pos:end="241:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:51"><expr pos:start="243:5" pos:end="243:50"><name pos:start="243:5" pos:end="243:14"><name pos:start="243:5" pos:end="243:5">c</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:14">chrDstW</name></name> <operator pos:start="243:16" pos:end="243:16">=</operator> <operator pos:start="243:18" pos:end="243:18">-</operator><operator pos:start="243:19" pos:end="243:19">(</operator><operator pos:start="243:20" pos:end="243:20">(</operator><operator pos:start="243:21" pos:end="243:21">-</operator><name pos:start="243:22" pos:end="243:25">dstW</name><operator pos:start="243:26" pos:end="243:26">)</operator> <operator pos:start="243:28" pos:end="243:29">&gt;&gt;</operator> <name pos:start="243:31" pos:end="243:49"><name pos:start="243:31" pos:end="243:31">c</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:49">chrDstHSubSample</name></name><operator pos:start="243:50" pos:end="243:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:51"><expr pos:start="245:5" pos:end="245:50"><name pos:start="245:5" pos:end="245:14"><name pos:start="245:5" pos:end="245:5">c</name><operator pos:start="245:6" pos:end="245:7">-&gt;</operator><name pos:start="245:8" pos:end="245:14">chrDstH</name></name> <operator pos:start="245:16" pos:end="245:16">=</operator> <operator pos:start="245:18" pos:end="245:18">-</operator><operator pos:start="245:19" pos:end="245:19">(</operator><operator pos:start="245:20" pos:end="245:20">(</operator><operator pos:start="245:21" pos:end="245:21">-</operator><name pos:start="245:22" pos:end="245:25">dstH</name><operator pos:start="245:26" pos:end="245:26">)</operator> <operator pos:start="245:28" pos:end="245:29">&gt;&gt;</operator> <name pos:start="245:31" pos:end="245:49"><name pos:start="245:31" pos:end="245:31">c</name><operator pos:start="245:32" pos:end="245:33">-&gt;</operator><name pos:start="245:34" pos:end="245:49">chrDstVSubSample</name></name><operator pos:start="245:50" pos:end="245:50">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:32">/* unscaled special cases */</comment>

    <if_stmt pos:start="251:5" pos:end="273:5"><if pos:start="251:5" pos:end="273:5">if <condition pos:start="251:8" pos:end="253:60">(<expr pos:start="251:9" pos:end="253:59"><name pos:start="251:9" pos:end="251:16">unscaled</name> <operator pos:start="251:18" pos:end="251:19">&amp;&amp;</operator> <operator pos:start="251:21" pos:end="251:21">!</operator><name pos:start="251:22" pos:end="251:32">usesHFilter</name> <operator pos:start="251:34" pos:end="251:35">&amp;&amp;</operator> <operator pos:start="251:37" pos:end="251:37">!</operator><name pos:start="251:38" pos:end="251:48">usesVFilter</name> <operator pos:start="251:50" pos:end="251:51">&amp;&amp;</operator>

        <operator pos:start="253:9" pos:end="253:9">(</operator><name pos:start="253:10" pos:end="253:20"><name pos:start="253:10" pos:end="253:10">c</name><operator pos:start="253:11" pos:end="253:12">-&gt;</operator><name pos:start="253:13" pos:end="253:20">srcRange</name></name> <operator pos:start="253:22" pos:end="253:23">==</operator> <name pos:start="253:25" pos:end="253:35"><name pos:start="253:25" pos:end="253:25">c</name><operator pos:start="253:26" pos:end="253:27">-&gt;</operator><name pos:start="253:28" pos:end="253:35">dstRange</name></name> <operator pos:start="253:37" pos:end="253:38">||</operator> <call pos:start="253:40" pos:end="253:58"><name pos:start="253:40" pos:end="253:47">isAnyRGB</name><argument_list pos:start="253:48" pos:end="253:58">(<argument pos:start="253:49" pos:end="253:57"><expr pos:start="253:49" pos:end="253:57"><name pos:start="253:49" pos:end="253:57">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="253:59" pos:end="253:59">)</operator></expr>)</condition> <block pos:start="253:62" pos:end="273:5">{<block_content pos:start="255:9" pos:end="271:9">

        <expr_stmt pos:start="255:9" pos:end="255:35"><expr pos:start="255:9" pos:end="255:34"><call pos:start="255:9" pos:end="255:34"><name pos:start="255:9" pos:end="255:31">ff_get_unscaled_swscale</name><argument_list pos:start="255:32" pos:end="255:34">(<argument pos:start="255:33" pos:end="255:33"><expr pos:start="255:33" pos:end="255:33"><name pos:start="255:33" pos:end="255:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="259:9" pos:end="271:9"><if pos:start="259:9" pos:end="271:9">if <condition pos:start="259:12" pos:end="259:23">(<expr pos:start="259:13" pos:end="259:22"><name pos:start="259:13" pos:end="259:22"><name pos:start="259:13" pos:end="259:13">c</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:22">swScale</name></name></expr>)</condition> <block pos:start="259:25" pos:end="271:9">{<block_content pos:start="261:13" pos:end="269:21">

            <if_stmt pos:start="261:13" pos:end="267:79"><if pos:start="261:13" pos:end="267:79">if <condition pos:start="261:16" pos:end="261:39">(<expr pos:start="261:17" pos:end="261:38"><name pos:start="261:17" pos:end="261:21">flags</name> <operator pos:start="261:23" pos:end="261:23">&amp;</operator> <name pos:start="261:25" pos:end="261:38">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="267:79"><block_content pos:start="263:17" pos:end="267:79">

                <expr_stmt pos:start="263:17" pos:end="267:79"><expr pos:start="263:17" pos:end="267:78"><call pos:start="263:17" pos:end="267:78"><name pos:start="263:17" pos:end="263:22">av_log</name><argument_list pos:start="263:23" pos:end="267:78">(<argument pos:start="263:24" pos:end="263:24"><expr pos:start="263:24" pos:end="263:24"><name pos:start="263:24" pos:end="263:24">c</name></expr></argument>, <argument pos:start="263:27" pos:end="263:37"><expr pos:start="263:27" pos:end="263:37"><name pos:start="263:27" pos:end="263:37">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="265:24" pos:end="265:68"><expr pos:start="265:24" pos:end="265:68"><literal type="string" pos:start="265:24" pos:end="265:68">"using unscaled %s -&gt; %s special converter\n"</literal></expr></argument>,

                       <argument pos:start="267:24" pos:end="267:49"><expr pos:start="267:24" pos:end="267:49"><call pos:start="267:24" pos:end="267:49"><name pos:start="267:24" pos:end="267:38">sws_format_name</name><argument_list pos:start="267:39" pos:end="267:49">(<argument pos:start="267:40" pos:end="267:48"><expr pos:start="267:40" pos:end="267:48"><name pos:start="267:40" pos:end="267:48">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="267:52" pos:end="267:77"><expr pos:start="267:52" pos:end="267:77"><call pos:start="267:52" pos:end="267:77"><name pos:start="267:52" pos:end="267:66">sws_format_name</name><argument_list pos:start="267:67" pos:end="267:77">(<argument pos:start="267:68" pos:end="267:76"><expr pos:start="267:68" pos:end="267:76"><name pos:start="267:68" pos:end="267:76">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="269:13" pos:end="269:21">return <expr pos:start="269:20" pos:end="269:20"><literal type="number" pos:start="269:20" pos:end="269:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:75"><expr pos:start="277:5" pos:end="277:74"><name pos:start="277:5" pos:end="277:13"><name pos:start="277:5" pos:end="277:5">c</name><operator pos:start="277:6" pos:end="277:7">-&gt;</operator><name pos:start="277:8" pos:end="277:13">srcBpc</name></name> <operator pos:start="277:15" pos:end="277:15">=</operator> <literal type="number" pos:start="277:17" pos:end="277:19">1</literal> <operator pos:start="277:19" pos:end="277:19">+</operator> <name pos:start="277:21" pos:end="277:53"><name pos:start="277:21" pos:end="277:42">av_pix_fmt_descriptors</name><index pos:start="277:43" pos:end="277:53">[<expr pos:start="277:44" pos:end="277:52"><name pos:start="277:44" pos:end="277:52">srcFormat</name></expr>]</index></name><operator pos:start="277:54" pos:end="277:54">.</operator><name pos:start="277:55" pos:end="277:61"><name pos:start="277:55" pos:end="277:58">comp</name><index pos:start="277:59" pos:end="277:61">[<expr pos:start="277:60" pos:end="277:60"><literal type="number" pos:start="277:60" pos:end="277:60">0</literal></expr>]</index></name><operator pos:start="277:62" pos:end="277:62">.</operator><name pos:start="277:63" pos:end="277:74">depth_minus1</name></expr>;</expr_stmt>

    <if_stmt pos:start="279:5" pos:end="281:22"><if pos:start="279:5" pos:end="281:22">if <condition pos:start="279:8" pos:end="279:22">(<expr pos:start="279:9" pos:end="279:21"><name pos:start="279:9" pos:end="279:17"><name pos:start="279:9" pos:end="279:9">c</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:17">srcBpc</name></name> <operator pos:start="279:19" pos:end="279:19">&lt;</operator> <literal type="number" pos:start="279:21" pos:end="279:21">8</literal></expr>)</condition><block type="pseudo" pos:start="281:9" pos:end="281:22"><block_content pos:start="281:9" pos:end="281:22">

        <expr_stmt pos:start="281:9" pos:end="281:22"><expr pos:start="281:9" pos:end="281:21"><name pos:start="281:9" pos:end="281:17"><name pos:start="281:9" pos:end="281:9">c</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:17">srcBpc</name></name> <operator pos:start="281:19" pos:end="281:19">=</operator> <literal type="number" pos:start="281:21" pos:end="281:21">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:75"><expr pos:start="283:5" pos:end="283:74"><name pos:start="283:5" pos:end="283:13"><name pos:start="283:5" pos:end="283:5">c</name><operator pos:start="283:6" pos:end="283:7">-&gt;</operator><name pos:start="283:8" pos:end="283:13">dstBpc</name></name> <operator pos:start="283:15" pos:end="283:15">=</operator> <literal type="number" pos:start="283:17" pos:end="283:19">1</literal> <operator pos:start="283:19" pos:end="283:19">+</operator> <name pos:start="283:21" pos:end="283:53"><name pos:start="283:21" pos:end="283:42">av_pix_fmt_descriptors</name><index pos:start="283:43" pos:end="283:53">[<expr pos:start="283:44" pos:end="283:52"><name pos:start="283:44" pos:end="283:52">dstFormat</name></expr>]</index></name><operator pos:start="283:54" pos:end="283:54">.</operator><name pos:start="283:55" pos:end="283:61"><name pos:start="283:55" pos:end="283:58">comp</name><index pos:start="283:59" pos:end="283:61">[<expr pos:start="283:60" pos:end="283:60"><literal type="number" pos:start="283:60" pos:end="283:60">0</literal></expr>]</index></name><operator pos:start="283:62" pos:end="283:62">.</operator><name pos:start="283:63" pos:end="283:74">depth_minus1</name></expr>;</expr_stmt>

    <if_stmt pos:start="285:5" pos:end="287:22"><if pos:start="285:5" pos:end="287:22">if <condition pos:start="285:8" pos:end="285:22">(<expr pos:start="285:9" pos:end="285:21"><name pos:start="285:9" pos:end="285:17"><name pos:start="285:9" pos:end="285:9">c</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:17">dstBpc</name></name> <operator pos:start="285:19" pos:end="285:19">&lt;</operator> <literal type="number" pos:start="285:21" pos:end="285:21">8</literal></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="287:22"><block_content pos:start="287:9" pos:end="287:22">

        <expr_stmt pos:start="287:9" pos:end="287:22"><expr pos:start="287:9" pos:end="287:21"><name pos:start="287:9" pos:end="287:17"><name pos:start="287:9" pos:end="287:9">c</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:17">dstBpc</name></name> <operator pos:start="287:19" pos:end="287:19">=</operator> <literal type="number" pos:start="287:21" pos:end="287:21">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="289:5" pos:end="291:25"><if pos:start="289:5" pos:end="291:25">if <condition pos:start="289:8" pos:end="289:24">(<expr pos:start="289:9" pos:end="289:23"><name pos:start="289:9" pos:end="289:17"><name pos:start="289:9" pos:end="289:9">c</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:17">dstBpc</name></name> <operator pos:start="289:19" pos:end="289:20">==</operator> <literal type="number" pos:start="289:22" pos:end="289:23">16</literal></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:25"><block_content pos:start="291:9" pos:end="291:25">

        <expr_stmt pos:start="291:9" pos:end="291:25"><expr pos:start="291:9" pos:end="291:24"><name pos:start="291:9" pos:end="291:18">dst_stride</name> <operator pos:start="291:20" pos:end="291:22">&lt;&lt;=</operator> <literal type="number" pos:start="291:24" pos:end="291:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="293:5" pos:end="297:27"><expr pos:start="293:5" pos:end="297:26"><call pos:start="293:5" pos:end="297:26"><name pos:start="293:5" pos:end="293:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="293:21" pos:end="297:26">(<argument pos:start="293:22" pos:end="293:22"><expr pos:start="293:22" pos:end="293:22"><name pos:start="293:22" pos:end="293:22">c</name></expr></argument>, <argument pos:start="293:25" pos:end="293:43"><expr pos:start="293:25" pos:end="293:43"><name pos:start="293:25" pos:end="293:43"><name pos:start="293:25" pos:end="293:25">c</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:43">formatConvBuffer</name></name></expr></argument>,

                     <argument pos:start="295:22" pos:end="295:78"><expr pos:start="295:22" pos:end="295:78"><operator pos:start="295:22" pos:end="295:22">(</operator><call pos:start="295:23" pos:end="295:39"><name pos:start="295:23" pos:end="295:29">FFALIGN</name><argument_list pos:start="295:30" pos:end="295:39">(<argument pos:start="295:31" pos:end="295:34"><expr pos:start="295:31" pos:end="295:34"><name pos:start="295:31" pos:end="295:34">srcW</name></expr></argument>, <argument pos:start="295:37" pos:end="295:38"><expr pos:start="295:37" pos:end="295:38"><literal type="number" pos:start="295:37" pos:end="295:38">16</literal></expr></argument>)</argument_list></call> <operator pos:start="295:41" pos:end="295:41">*</operator> <literal type="number" pos:start="295:43" pos:end="295:43">2</literal> <operator pos:start="295:45" pos:end="295:45">*</operator> <call pos:start="295:47" pos:end="295:67"><name pos:start="295:47" pos:end="295:53">FFALIGN</name><argument_list pos:start="295:54" pos:end="295:67">(<argument pos:start="295:55" pos:end="295:63"><expr pos:start="295:55" pos:end="295:63"><name pos:start="295:55" pos:end="295:63"><name pos:start="295:55" pos:end="295:55">c</name><operator pos:start="295:56" pos:end="295:57">-&gt;</operator><name pos:start="295:58" pos:end="295:63">srcBpc</name></name></expr></argument>, <argument pos:start="295:66" pos:end="295:66"><expr pos:start="295:66" pos:end="295:66"><literal type="number" pos:start="295:66" pos:end="295:66">8</literal></expr></argument>)</argument_list></call> <operator pos:start="295:69" pos:end="295:70">&gt;&gt;</operator> <literal type="number" pos:start="295:72" pos:end="295:72">3</literal><operator pos:start="295:73" pos:end="295:73">)</operator> <operator pos:start="295:75" pos:end="295:75">+</operator> <literal type="number" pos:start="295:77" pos:end="295:78">16</literal></expr></argument>,

                     <argument pos:start="297:22" pos:end="297:25"><expr pos:start="297:22" pos:end="297:25"><name pos:start="297:22" pos:end="297:25">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="299:5" pos:end="325:29"><if pos:start="299:5" pos:end="323:5">if <condition pos:start="299:8" pos:end="301:42">(<expr pos:start="299:9" pos:end="301:41"><name pos:start="299:9" pos:end="299:19">HAVE_MMXEXT</name> <operator pos:start="299:21" pos:end="299:22">&amp;&amp;</operator> <name pos:start="299:24" pos:end="299:38">HAVE_INLINE_ASM</name> <operator pos:start="299:40" pos:end="299:41">&amp;&amp;</operator> <name pos:start="299:43" pos:end="299:51">cpu_flags</name> <operator pos:start="299:53" pos:end="299:53">&amp;</operator> <name pos:start="299:55" pos:end="299:72">AV_CPU_FLAG_MMXEXT</name> <operator pos:start="299:74" pos:end="299:75">&amp;&amp;</operator>

        <name pos:start="301:9" pos:end="301:17"><name pos:start="301:9" pos:end="301:9">c</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:17">srcBpc</name></name> <operator pos:start="301:19" pos:end="301:20">==</operator> <literal type="number" pos:start="301:22" pos:end="301:22">8</literal> <operator pos:start="301:24" pos:end="301:25">&amp;&amp;</operator> <name pos:start="301:27" pos:end="301:35"><name pos:start="301:27" pos:end="301:27">c</name><operator pos:start="301:28" pos:end="301:29">-&gt;</operator><name pos:start="301:30" pos:end="301:35">dstBpc</name></name> <operator pos:start="301:37" pos:end="301:38">&lt;=</operator> <literal type="number" pos:start="301:40" pos:end="301:41">10</literal></expr>)</condition> <block pos:start="301:44" pos:end="323:5">{<block_content pos:start="303:9" pos:end="321:33">

        <expr_stmt pos:start="303:9" pos:end="305:54"><expr pos:start="303:9" pos:end="305:53"><name pos:start="303:9" pos:end="303:24"><name pos:start="303:9" pos:end="303:9">c</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:24">canMMX2BeUsed</name></name> <operator pos:start="303:26" pos:end="303:26">=</operator> <ternary pos:start="303:28" pos:end="305:53"><condition pos:start="303:28" pos:end="305:47"><expr pos:start="303:28" pos:end="305:45"><operator pos:start="303:28" pos:end="303:28">(</operator><name pos:start="303:29" pos:end="303:32">dstW</name> <operator pos:start="303:34" pos:end="303:35">&gt;=</operator> <name pos:start="303:37" pos:end="303:40">srcW</name> <operator pos:start="303:42" pos:end="303:43">&amp;&amp;</operator> <operator pos:start="303:45" pos:end="303:45">(</operator><name pos:start="303:46" pos:end="303:49">dstW</name> <operator pos:start="303:51" pos:end="303:51">&amp;</operator> <literal type="number" pos:start="303:53" pos:end="303:54">31</literal><operator pos:start="303:55" pos:end="303:55">)</operator> <operator pos:start="303:57" pos:end="303:58">==</operator> <literal type="number" pos:start="303:60" pos:end="303:60">0</literal> <operator pos:start="303:62" pos:end="303:63">&amp;&amp;</operator>

                            <operator pos:start="305:29" pos:end="305:29">(</operator><name pos:start="305:30" pos:end="305:33">srcW</name> <operator pos:start="305:35" pos:end="305:35">&amp;</operator> <literal type="number" pos:start="305:37" pos:end="305:38">15</literal><operator pos:start="305:39" pos:end="305:39">)</operator> <operator pos:start="305:41" pos:end="305:42">==</operator> <literal type="number" pos:start="305:44" pos:end="305:44">0</literal><operator pos:start="305:45" pos:end="305:45">)</operator></expr> ?</condition><then pos:start="305:49" pos:end="305:49"> <expr pos:start="305:49" pos:end="305:49"><literal type="number" pos:start="305:49" pos:end="305:49">1</literal></expr> </then><else pos:start="305:51" pos:end="305:53">: <expr pos:start="305:53" pos:end="305:53"><literal type="number" pos:start="305:53" pos:end="305:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="307:9" pos:end="317:9"><if pos:start="307:9" pos:end="317:9">if <condition pos:start="307:12" pos:end="309:43">(<expr pos:start="307:13" pos:end="309:42"><operator pos:start="307:13" pos:end="307:13">!</operator><name pos:start="307:14" pos:end="307:29"><name pos:start="307:14" pos:end="307:14">c</name><operator pos:start="307:15" pos:end="307:16">-&gt;</operator><name pos:start="307:17" pos:end="307:29">canMMX2BeUsed</name></name> <operator pos:start="307:31" pos:end="307:32">&amp;&amp;</operator> <name pos:start="307:34" pos:end="307:37">dstW</name> <operator pos:start="307:39" pos:end="307:40">&gt;=</operator> <name pos:start="307:42" pos:end="307:45">srcW</name> <operator pos:start="307:47" pos:end="307:48">&amp;&amp;</operator> <operator pos:start="307:50" pos:end="307:50">(</operator><name pos:start="307:51" pos:end="307:54">srcW</name> <operator pos:start="307:56" pos:end="307:56">&amp;</operator> <literal type="number" pos:start="307:58" pos:end="307:59">15</literal><operator pos:start="307:60" pos:end="307:60">)</operator> <operator pos:start="307:62" pos:end="307:63">==</operator> <literal type="number" pos:start="307:65" pos:end="307:65">0</literal>

            <operator pos:start="309:13" pos:end="309:14">&amp;&amp;</operator> <operator pos:start="309:16" pos:end="309:16">(</operator><name pos:start="309:17" pos:end="309:21">flags</name> <operator pos:start="309:23" pos:end="309:23">&amp;</operator> <name pos:start="309:25" pos:end="309:41">SWS_FAST_BILINEAR</name><operator pos:start="309:42" pos:end="309:42">)</operator></expr>)</condition> <block pos:start="309:45" pos:end="317:9">{<block_content pos:start="311:13" pos:end="315:83">

            <if_stmt pos:start="311:13" pos:end="315:83"><if pos:start="311:13" pos:end="315:83">if <condition pos:start="311:16" pos:end="311:39">(<expr pos:start="311:17" pos:end="311:38"><name pos:start="311:17" pos:end="311:21">flags</name> <operator pos:start="311:23" pos:end="311:23">&amp;</operator> <name pos:start="311:25" pos:end="311:38">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="313:17" pos:end="315:83"><block_content pos:start="313:17" pos:end="315:83">

                <expr_stmt pos:start="313:17" pos:end="315:83"><expr pos:start="313:17" pos:end="315:82"><call pos:start="313:17" pos:end="315:82"><name pos:start="313:17" pos:end="313:22">av_log</name><argument_list pos:start="313:23" pos:end="315:82">(<argument pos:start="313:24" pos:end="313:24"><expr pos:start="313:24" pos:end="313:24"><name pos:start="313:24" pos:end="313:24">c</name></expr></argument>, <argument pos:start="313:27" pos:end="313:37"><expr pos:start="313:27" pos:end="313:37"><name pos:start="313:27" pos:end="313:37">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="315:24" pos:end="315:81"><expr pos:start="315:24" pos:end="315:81"><literal type="string" pos:start="315:24" pos:end="315:81">"output width is not a multiple of 32 -&gt; no MMX2 scaler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="319:9" pos:end="321:33"><if pos:start="319:9" pos:end="321:33">if <condition pos:start="319:12" pos:end="319:24">(<expr pos:start="319:13" pos:end="319:23"><name pos:start="319:13" pos:end="319:23">usesHFilter</name></expr>)</condition><block type="pseudo" pos:start="321:13" pos:end="321:33"><block_content pos:start="321:13" pos:end="321:33">

            <expr_stmt pos:start="321:13" pos:end="321:33"><expr pos:start="321:13" pos:end="321:32"><name pos:start="321:13" pos:end="321:28"><name pos:start="321:13" pos:end="321:13">c</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:28">canMMX2BeUsed</name></name> <operator pos:start="321:30" pos:end="321:30">=</operator> <literal type="number" pos:start="321:32" pos:end="321:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="323:7" pos:end="325:29">else<block type="pseudo" pos:start="325:9" pos:end="325:29"><block_content pos:start="325:9" pos:end="325:29">

        <expr_stmt pos:start="325:9" pos:end="325:29"><expr pos:start="325:9" pos:end="325:28"><name pos:start="325:9" pos:end="325:24"><name pos:start="325:9" pos:end="325:9">c</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:24">canMMX2BeUsed</name></name> <operator pos:start="325:26" pos:end="325:26">=</operator> <literal type="number" pos:start="325:28" pos:end="325:28">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="329:5" pos:end="329:80"><expr pos:start="329:5" pos:end="329:79"><name pos:start="329:5" pos:end="329:14"><name pos:start="329:5" pos:end="329:5">c</name><operator pos:start="329:6" pos:end="329:7">-&gt;</operator><name pos:start="329:8" pos:end="329:14">chrXInc</name></name> <operator pos:start="329:16" pos:end="329:16">=</operator> <operator pos:start="329:18" pos:end="329:18">(</operator><operator pos:start="329:19" pos:end="329:19">(</operator><operator pos:start="329:20" pos:end="329:20">(</operator><name pos:start="329:21" pos:end="329:27">int64_t</name><operator pos:start="329:28" pos:end="329:28">)</operator><name pos:start="329:29" pos:end="329:38"><name pos:start="329:29" pos:end="329:29">c</name><operator pos:start="329:30" pos:end="329:31">-&gt;</operator><name pos:start="329:32" pos:end="329:38">chrSrcW</name></name> <operator pos:start="329:40" pos:end="329:41">&lt;&lt;</operator> <literal type="number" pos:start="329:43" pos:end="329:44">16</literal><operator pos:start="329:45" pos:end="329:45">)</operator> <operator pos:start="329:47" pos:end="329:47">+</operator> <operator pos:start="329:49" pos:end="329:49">(</operator><name pos:start="329:50" pos:end="329:59"><name pos:start="329:50" pos:end="329:50">c</name><operator pos:start="329:51" pos:end="329:52">-&gt;</operator><name pos:start="329:53" pos:end="329:59">chrDstW</name></name> <operator pos:start="329:61" pos:end="329:62">&gt;&gt;</operator> <literal type="number" pos:start="329:64" pos:end="329:64">1</literal><operator pos:start="329:65" pos:end="329:65">)</operator><operator pos:start="329:66" pos:end="329:66">)</operator> <operator pos:start="329:68" pos:end="329:68">/</operator> <name pos:start="329:70" pos:end="329:79"><name pos:start="329:70" pos:end="329:70">c</name><operator pos:start="329:71" pos:end="329:72">-&gt;</operator><name pos:start="329:73" pos:end="329:79">chrDstW</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:80"><expr pos:start="331:5" pos:end="331:79"><name pos:start="331:5" pos:end="331:14"><name pos:start="331:5" pos:end="331:5">c</name><operator pos:start="331:6" pos:end="331:7">-&gt;</operator><name pos:start="331:8" pos:end="331:14">chrYInc</name></name> <operator pos:start="331:16" pos:end="331:16">=</operator> <operator pos:start="331:18" pos:end="331:18">(</operator><operator pos:start="331:19" pos:end="331:19">(</operator><operator pos:start="331:20" pos:end="331:20">(</operator><name pos:start="331:21" pos:end="331:27">int64_t</name><operator pos:start="331:28" pos:end="331:28">)</operator><name pos:start="331:29" pos:end="331:38"><name pos:start="331:29" pos:end="331:29">c</name><operator pos:start="331:30" pos:end="331:31">-&gt;</operator><name pos:start="331:32" pos:end="331:38">chrSrcH</name></name> <operator pos:start="331:40" pos:end="331:41">&lt;&lt;</operator> <literal type="number" pos:start="331:43" pos:end="331:44">16</literal><operator pos:start="331:45" pos:end="331:45">)</operator> <operator pos:start="331:47" pos:end="331:47">+</operator> <operator pos:start="331:49" pos:end="331:49">(</operator><name pos:start="331:50" pos:end="331:59"><name pos:start="331:50" pos:end="331:50">c</name><operator pos:start="331:51" pos:end="331:52">-&gt;</operator><name pos:start="331:53" pos:end="331:59">chrDstH</name></name> <operator pos:start="331:61" pos:end="331:62">&gt;&gt;</operator> <literal type="number" pos:start="331:64" pos:end="331:64">1</literal><operator pos:start="331:65" pos:end="331:65">)</operator><operator pos:start="331:66" pos:end="331:66">)</operator> <operator pos:start="331:68" pos:end="331:68">/</operator> <name pos:start="331:70" pos:end="331:79"><name pos:start="331:70" pos:end="331:70">c</name><operator pos:start="331:71" pos:end="331:72">-&gt;</operator><name pos:start="331:73" pos:end="331:79">chrDstH</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="335:5" pos:end="347:56">/* Match pixel 0 of the src to pixel 0 of dst and match pixel n-2 of src

     * to pixel n-2 of dst, but only for the FAST_BILINEAR mode otherwise do

     * correct scaling.

     * n-2 is the last chrominance sample available.

     * This is not perfect, but no one should notice the difference, the more

     * correct variant would be like the vertical one, but that would require

     * some special code for the first and last pixel */</comment>

    <if_stmt pos:start="349:5" pos:end="369:5"><if pos:start="349:5" pos:end="369:5">if <condition pos:start="349:8" pos:end="349:34">(<expr pos:start="349:9" pos:end="349:33"><name pos:start="349:9" pos:end="349:13">flags</name> <operator pos:start="349:15" pos:end="349:15">&amp;</operator> <name pos:start="349:17" pos:end="349:33">SWS_FAST_BILINEAR</name></expr>)</condition> <block pos:start="349:36" pos:end="369:5">{<block_content pos:start="351:9" pos:end="367:9">

        <if_stmt pos:start="351:9" pos:end="367:9"><if pos:start="351:9" pos:end="357:9">if <condition pos:start="351:12" pos:end="351:29">(<expr pos:start="351:13" pos:end="351:28"><name pos:start="351:13" pos:end="351:28"><name pos:start="351:13" pos:end="351:13">c</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:28">canMMX2BeUsed</name></name></expr>)</condition> <block pos:start="351:31" pos:end="357:9">{<block_content pos:start="353:13" pos:end="355:29">

            <expr_stmt pos:start="353:13" pos:end="353:29"><expr pos:start="353:13" pos:end="353:28"><name pos:start="353:13" pos:end="353:22"><name pos:start="353:13" pos:end="353:13">c</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:22">lumXInc</name></name> <operator pos:start="353:24" pos:end="353:25">+=</operator> <literal type="number" pos:start="353:27" pos:end="353:28">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:29"><expr pos:start="355:13" pos:end="355:28"><name pos:start="355:13" pos:end="355:22"><name pos:start="355:13" pos:end="355:13">c</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:22">chrXInc</name></name> <operator pos:start="355:24" pos:end="355:25">+=</operator> <literal type="number" pos:start="355:27" pos:end="355:28">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="line" pos:start="359:9" pos:end="359:62">// we don't use the x86 asm scaler if MMX is available</comment>

        <if type="elseif" pos:start="361:9" pos:end="367:9">else if <condition pos:start="361:17" pos:end="361:57">(<expr pos:start="361:18" pos:end="361:56"><name pos:start="361:18" pos:end="361:25">HAVE_MMX</name> <operator pos:start="361:27" pos:end="361:28">&amp;&amp;</operator> <name pos:start="361:30" pos:end="361:38">cpu_flags</name> <operator pos:start="361:40" pos:end="361:40">&amp;</operator> <name pos:start="361:42" pos:end="361:56">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="361:59" pos:end="367:9">{<block_content pos:start="363:13" pos:end="365:83">

            <expr_stmt pos:start="363:13" pos:end="363:83"><expr pos:start="363:13" pos:end="363:82"><name pos:start="363:13" pos:end="363:22"><name pos:start="363:13" pos:end="363:13">c</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:22">lumXInc</name></name> <operator pos:start="363:24" pos:end="363:24">=</operator> <operator pos:start="363:26" pos:end="363:26">(</operator><operator pos:start="363:27" pos:end="363:27">(</operator><name pos:start="363:28" pos:end="363:34">int64_t</name><operator pos:start="363:35" pos:end="363:35">)</operator><operator pos:start="363:36" pos:end="363:36">(</operator><name pos:start="363:37" pos:end="363:40">srcW</name>       <operator pos:start="363:48" pos:end="363:48">-</operator> <literal type="number" pos:start="363:50" pos:end="363:50">2</literal><operator pos:start="363:51" pos:end="363:51">)</operator> <operator pos:start="363:53" pos:end="363:54">&lt;&lt;</operator> <literal type="number" pos:start="363:56" pos:end="363:57">16</literal><operator pos:start="363:58" pos:end="363:58">)</operator> <operator pos:start="363:60" pos:end="363:60">/</operator> <operator pos:start="363:62" pos:end="363:62">(</operator><name pos:start="363:63" pos:end="363:66">dstW</name>       <operator pos:start="363:74" pos:end="363:74">-</operator> <literal type="number" pos:start="363:76" pos:end="363:76">2</literal><operator pos:start="363:77" pos:end="363:77">)</operator> <operator pos:start="363:79" pos:end="363:79">-</operator> <literal type="number" pos:start="363:81" pos:end="363:82">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:83"><expr pos:start="365:13" pos:end="365:82"><name pos:start="365:13" pos:end="365:22"><name pos:start="365:13" pos:end="365:13">c</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:22">chrXInc</name></name> <operator pos:start="365:24" pos:end="365:24">=</operator> <operator pos:start="365:26" pos:end="365:26">(</operator><operator pos:start="365:27" pos:end="365:27">(</operator><name pos:start="365:28" pos:end="365:34">int64_t</name><operator pos:start="365:35" pos:end="365:35">)</operator><operator pos:start="365:36" pos:end="365:36">(</operator><name pos:start="365:37" pos:end="365:46"><name pos:start="365:37" pos:end="365:37">c</name><operator pos:start="365:38" pos:end="365:39">-&gt;</operator><name pos:start="365:40" pos:end="365:46">chrSrcW</name></name> <operator pos:start="365:48" pos:end="365:48">-</operator> <literal type="number" pos:start="365:50" pos:end="365:50">2</literal><operator pos:start="365:51" pos:end="365:51">)</operator> <operator pos:start="365:53" pos:end="365:54">&lt;&lt;</operator> <literal type="number" pos:start="365:56" pos:end="365:57">16</literal><operator pos:start="365:58" pos:end="365:58">)</operator> <operator pos:start="365:60" pos:end="365:60">/</operator> <operator pos:start="365:62" pos:end="365:62">(</operator><name pos:start="365:63" pos:end="365:72"><name pos:start="365:63" pos:end="365:63">c</name><operator pos:start="365:64" pos:end="365:65">-&gt;</operator><name pos:start="365:66" pos:end="365:72">chrDstW</name></name> <operator pos:start="365:74" pos:end="365:74">-</operator> <literal type="number" pos:start="365:76" pos:end="365:76">2</literal><operator pos:start="365:77" pos:end="365:77">)</operator> <operator pos:start="365:79" pos:end="365:79">-</operator> <literal type="number" pos:start="365:81" pos:end="365:82">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="373:5" pos:end="373:60">/* precalculate horizontal scaler filter coefficients */</comment>

    <block pos:start="375:5" pos:end="493:5">{<block_content pos:start="381:9" pos:end="491:9">

<cpp:if pos:start="377:1" pos:end="377:22">#<cpp:directive pos:start="377:2" pos:end="377:3">if</cpp:directive> <expr pos:start="377:5" pos:end="377:22"><name pos:start="377:5" pos:end="377:22">HAVE_MMXEXT_INLINE</name></expr></cpp:if>

<comment type="line" pos:start="379:1" pos:end="379:22">// can't downscale !!!</comment>

        <if_stmt pos:start="381:9" pos:end="491:9"><if pos:start="381:9" pos:end="447:9">if <condition pos:start="381:12" pos:end="381:60">(<expr pos:start="381:13" pos:end="381:59"><name pos:start="381:13" pos:end="381:28"><name pos:start="381:13" pos:end="381:13">c</name><operator pos:start="381:14" pos:end="381:15">-&gt;</operator><name pos:start="381:16" pos:end="381:28">canMMX2BeUsed</name></name> <operator pos:start="381:30" pos:end="381:31">&amp;&amp;</operator> <operator pos:start="381:33" pos:end="381:33">(</operator><name pos:start="381:34" pos:end="381:38">flags</name> <operator pos:start="381:40" pos:end="381:40">&amp;</operator> <name pos:start="381:42" pos:end="381:58">SWS_FAST_BILINEAR</name><operator pos:start="381:59" pos:end="381:59">)</operator></expr>)</condition> <block pos:start="381:62" pos:end="447:9">{<block_content pos:start="383:13" pos:end="446:0">

            <expr_stmt pos:start="383:13" pos:end="385:70"><expr pos:start="383:13" pos:end="385:69"><name pos:start="383:13" pos:end="383:36"><name pos:start="383:13" pos:end="383:13">c</name><operator pos:start="383:14" pos:end="383:15">-&gt;</operator><name pos:start="383:16" pos:end="383:36">lumMmx2FilterCodeSize</name></name> <operator pos:start="383:38" pos:end="383:38">=</operator> <call pos:start="383:40" pos:end="385:69"><name pos:start="383:40" pos:end="383:54">initMMX2HScaler</name><argument_list pos:start="383:55" pos:end="385:69">(<argument pos:start="383:56" pos:end="383:59"><expr pos:start="383:56" pos:end="383:59"><name pos:start="383:56" pos:end="383:59">dstW</name></expr></argument>, <argument pos:start="383:62" pos:end="383:71"><expr pos:start="383:62" pos:end="383:71"><name pos:start="383:62" pos:end="383:71"><name pos:start="383:62" pos:end="383:62">c</name><operator pos:start="383:63" pos:end="383:64">-&gt;</operator><name pos:start="383:65" pos:end="383:71">lumXInc</name></name></expr></argument>, <argument pos:start="383:74" pos:end="383:77"><expr pos:start="383:74" pos:end="383:77"><name pos:start="383:74" pos:end="383:77">NULL</name></expr></argument>,

                                                       <argument pos:start="385:56" pos:end="385:59"><expr pos:start="385:56" pos:end="385:59"><name pos:start="385:56" pos:end="385:59">NULL</name></expr></argument>, <argument pos:start="385:62" pos:end="385:65"><expr pos:start="385:62" pos:end="385:65"><name pos:start="385:62" pos:end="385:65">NULL</name></expr></argument>, <argument pos:start="385:68" pos:end="385:68"><expr pos:start="385:68" pos:end="385:68"><literal type="number" pos:start="385:68" pos:end="385:68">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="394:0"><expr pos:start="387:13" pos:end="389:75"><name pos:start="387:13" pos:end="387:36"><name pos:start="387:13" pos:end="387:13">c</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:36">chrMmx2FilterCodeSize</name></name> <operator pos:start="387:38" pos:end="387:38">=</operator> <call pos:start="387:40" pos:end="389:75"><name pos:start="387:40" pos:end="387:54">initMMX2HScaler</name><argument_list pos:start="387:55" pos:end="389:75">(<argument pos:start="387:56" pos:end="387:65"><expr pos:start="387:56" pos:end="387:65"><name pos:start="387:56" pos:end="387:65"><name pos:start="387:56" pos:end="387:56">c</name><operator pos:start="387:57" pos:end="387:58">-&gt;</operator><name pos:start="387:59" pos:end="387:65">chrDstW</name></name></expr></argument>, <argument pos:start="387:68" pos:end="387:77"><expr pos:start="387:68" pos:end="387:77"><name pos:start="387:68" pos:end="387:77"><name pos:start="387:68" pos:end="387:68">c</name><operator pos:start="387:69" pos:end="387:70">-&gt;</operator><name pos:start="387:71" pos:end="387:77">chrXInc</name></name></expr></argument>,

                                                       <argument pos:start="389:56" pos:end="389:59"><expr pos:start="389:56" pos:end="389:59"><name pos:start="389:56" pos:end="389:59">NULL</name></expr></argument>, <argument pos:start="389:62" pos:end="389:65"><expr pos:start="389:62" pos:end="389:65"><name pos:start="389:62" pos:end="389:65">NULL</name></expr></argument>, <argument pos:start="389:68" pos:end="389:71"><expr pos:start="389:68" pos:end="389:71"><name pos:start="389:68" pos:end="389:71">NULL</name></expr></argument>, <argument pos:start="389:74" pos:end="389:74"><expr pos:start="389:74" pos:end="389:74"><literal type="number" pos:start="389:74" pos:end="389:74">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="393:1" pos:end="393:20">#<cpp:directive pos:start="393:2" pos:end="393:6">ifdef</cpp:directive> <name pos:start="393:8" pos:end="393:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="395:13" pos:end="395:132"><expr pos:start="395:13" pos:end="395:131"><name pos:start="395:13" pos:end="395:32"><name pos:start="395:13" pos:end="395:13">c</name><operator pos:start="395:14" pos:end="395:15">-&gt;</operator><name pos:start="395:16" pos:end="395:32">lumMmx2FilterCode</name></name> <operator pos:start="395:34" pos:end="395:34">=</operator> <call pos:start="395:36" pos:end="395:131"><name pos:start="395:36" pos:end="395:39">mmap</name><argument_list pos:start="395:40" pos:end="395:131">(<argument pos:start="395:41" pos:end="395:44"><expr pos:start="395:41" pos:end="395:44"><name pos:start="395:41" pos:end="395:44">NULL</name></expr></argument>, <argument pos:start="395:47" pos:end="395:70"><expr pos:start="395:47" pos:end="395:70"><name pos:start="395:47" pos:end="395:70"><name pos:start="395:47" pos:end="395:47">c</name><operator pos:start="395:48" pos:end="395:49">-&gt;</operator><name pos:start="395:50" pos:end="395:70">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="395:73" pos:end="395:94"><expr pos:start="395:73" pos:end="395:94"><name pos:start="395:73" pos:end="395:81">PROT_READ</name> <operator pos:start="395:83" pos:end="395:83">|</operator> <name pos:start="395:85" pos:end="395:94">PROT_WRITE</name></expr></argument>, <argument pos:start="395:97" pos:end="395:123"><expr pos:start="395:97" pos:end="395:123"><name pos:start="395:97" pos:end="395:107">MAP_PRIVATE</name> <operator pos:start="395:109" pos:end="395:109">|</operator> <name pos:start="395:111" pos:end="395:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="395:126" pos:end="395:127"><expr pos:start="395:126" pos:end="395:127"><operator pos:start="395:126" pos:end="395:126">-</operator><literal type="number" pos:start="395:127" pos:end="395:127">1</literal></expr></argument>, <argument pos:start="395:130" pos:end="395:130"><expr pos:start="395:130" pos:end="395:130"><literal type="number" pos:start="395:130" pos:end="395:130">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="400:0"><expr pos:start="397:13" pos:end="397:131"><name pos:start="397:13" pos:end="397:32"><name pos:start="397:13" pos:end="397:13">c</name><operator pos:start="397:14" pos:end="397:15">-&gt;</operator><name pos:start="397:16" pos:end="397:32">chrMmx2FilterCode</name></name> <operator pos:start="397:34" pos:end="397:34">=</operator> <call pos:start="397:36" pos:end="397:131"><name pos:start="397:36" pos:end="397:39">mmap</name><argument_list pos:start="397:40" pos:end="397:131">(<argument pos:start="397:41" pos:end="397:44"><expr pos:start="397:41" pos:end="397:44"><name pos:start="397:41" pos:end="397:44">NULL</name></expr></argument>, <argument pos:start="397:47" pos:end="397:70"><expr pos:start="397:47" pos:end="397:70"><name pos:start="397:47" pos:end="397:70"><name pos:start="397:47" pos:end="397:47">c</name><operator pos:start="397:48" pos:end="397:49">-&gt;</operator><name pos:start="397:50" pos:end="397:70">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="397:73" pos:end="397:94"><expr pos:start="397:73" pos:end="397:94"><name pos:start="397:73" pos:end="397:81">PROT_READ</name> <operator pos:start="397:83" pos:end="397:83">|</operator> <name pos:start="397:85" pos:end="397:94">PROT_WRITE</name></expr></argument>, <argument pos:start="397:97" pos:end="397:123"><expr pos:start="397:97" pos:end="397:123"><name pos:start="397:97" pos:end="397:107">MAP_PRIVATE</name> <operator pos:start="397:109" pos:end="397:109">|</operator> <name pos:start="397:111" pos:end="397:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="397:126" pos:end="397:127"><expr pos:start="397:126" pos:end="397:127"><operator pos:start="397:126" pos:end="397:126">-</operator><literal type="number" pos:start="397:127" pos:end="397:127">1</literal></expr></argument>, <argument pos:start="397:130" pos:end="397:130"><expr pos:start="397:130" pos:end="397:130"><literal type="number" pos:start="397:130" pos:end="397:130">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="399:1" pos:end="399:23">#<cpp:directive pos:start="399:2" pos:end="399:5">elif</cpp:directive> <expr pos:start="399:7" pos:end="399:23"><name pos:start="399:7" pos:end="399:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

            <expr_stmt pos:start="401:13" pos:end="401:116"><expr pos:start="401:13" pos:end="401:115"><name pos:start="401:13" pos:end="401:32"><name pos:start="401:13" pos:end="401:13">c</name><operator pos:start="401:14" pos:end="401:15">-&gt;</operator><name pos:start="401:16" pos:end="401:32">lumMmx2FilterCode</name></name> <operator pos:start="401:34" pos:end="401:34">=</operator> <call pos:start="401:36" pos:end="401:115"><name pos:start="401:36" pos:end="401:47">VirtualAlloc</name><argument_list pos:start="401:48" pos:end="401:115">(<argument pos:start="401:49" pos:end="401:52"><expr pos:start="401:49" pos:end="401:52"><name pos:start="401:49" pos:end="401:52">NULL</name></expr></argument>, <argument pos:start="401:55" pos:end="401:78"><expr pos:start="401:55" pos:end="401:78"><name pos:start="401:55" pos:end="401:78"><name pos:start="401:55" pos:end="401:55">c</name><operator pos:start="401:56" pos:end="401:57">-&gt;</operator><name pos:start="401:58" pos:end="401:78">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="401:81" pos:end="401:90"><expr pos:start="401:81" pos:end="401:90"><name pos:start="401:81" pos:end="401:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="401:93" pos:end="401:114"><expr pos:start="401:93" pos:end="401:114"><name pos:start="401:93" pos:end="401:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="406:0"><expr pos:start="403:13" pos:end="403:115"><name pos:start="403:13" pos:end="403:32"><name pos:start="403:13" pos:end="403:13">c</name><operator pos:start="403:14" pos:end="403:15">-&gt;</operator><name pos:start="403:16" pos:end="403:32">chrMmx2FilterCode</name></name> <operator pos:start="403:34" pos:end="403:34">=</operator> <call pos:start="403:36" pos:end="403:115"><name pos:start="403:36" pos:end="403:47">VirtualAlloc</name><argument_list pos:start="403:48" pos:end="403:115">(<argument pos:start="403:49" pos:end="403:52"><expr pos:start="403:49" pos:end="403:52"><name pos:start="403:49" pos:end="403:52">NULL</name></expr></argument>, <argument pos:start="403:55" pos:end="403:78"><expr pos:start="403:55" pos:end="403:78"><name pos:start="403:55" pos:end="403:78"><name pos:start="403:55" pos:end="403:55">c</name><operator pos:start="403:56" pos:end="403:57">-&gt;</operator><name pos:start="403:58" pos:end="403:78">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="403:81" pos:end="403:90"><expr pos:start="403:81" pos:end="403:90"><name pos:start="403:81" pos:end="403:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="403:93" pos:end="403:114"><expr pos:start="403:93" pos:end="403:114"><name pos:start="403:93" pos:end="403:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="405:1" pos:end="405:5">#<cpp:directive pos:start="405:2" pos:end="405:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="407:13" pos:end="407:71"><expr pos:start="407:13" pos:end="407:70"><name pos:start="407:13" pos:end="407:32"><name pos:start="407:13" pos:end="407:13">c</name><operator pos:start="407:14" pos:end="407:15">-&gt;</operator><name pos:start="407:16" pos:end="407:32">lumMmx2FilterCode</name></name> <operator pos:start="407:34" pos:end="407:34">=</operator> <call pos:start="407:36" pos:end="407:70"><name pos:start="407:36" pos:end="407:44">av_malloc</name><argument_list pos:start="407:45" pos:end="407:70">(<argument pos:start="407:46" pos:end="407:69"><expr pos:start="407:46" pos:end="407:69"><name pos:start="407:46" pos:end="407:69"><name pos:start="407:46" pos:end="407:46">c</name><operator pos:start="407:47" pos:end="407:48">-&gt;</operator><name pos:start="407:49" pos:end="407:69">lumMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="412:0"><expr pos:start="409:13" pos:end="409:70"><name pos:start="409:13" pos:end="409:32"><name pos:start="409:13" pos:end="409:13">c</name><operator pos:start="409:14" pos:end="409:15">-&gt;</operator><name pos:start="409:16" pos:end="409:32">chrMmx2FilterCode</name></name> <operator pos:start="409:34" pos:end="409:34">=</operator> <call pos:start="409:36" pos:end="409:70"><name pos:start="409:36" pos:end="409:44">av_malloc</name><argument_list pos:start="409:45" pos:end="409:70">(<argument pos:start="409:46" pos:end="409:69"><expr pos:start="409:46" pos:end="409:69"><name pos:start="409:46" pos:end="409:69"><name pos:start="409:46" pos:end="409:46">c</name><operator pos:start="409:47" pos:end="409:48">-&gt;</operator><name pos:start="409:49" pos:end="409:69">chrMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="411:1" pos:end="411:6">#<cpp:directive pos:start="411:2" pos:end="411:6">endif</cpp:directive></cpp:endif>



            <if_stmt pos:start="415:13" pos:end="417:39"><if pos:start="415:13" pos:end="417:39">if <condition pos:start="415:16" pos:end="415:63">(<expr pos:start="415:17" pos:end="415:62"><operator pos:start="415:17" pos:end="415:17">!</operator><name pos:start="415:18" pos:end="415:37"><name pos:start="415:18" pos:end="415:18">c</name><operator pos:start="415:19" pos:end="415:20">-&gt;</operator><name pos:start="415:21" pos:end="415:37">lumMmx2FilterCode</name></name> <operator pos:start="415:39" pos:end="415:40">||</operator> <operator pos:start="415:42" pos:end="415:42">!</operator><name pos:start="415:43" pos:end="415:62"><name pos:start="415:43" pos:end="415:43">c</name><operator pos:start="415:44" pos:end="415:45">-&gt;</operator><name pos:start="415:46" pos:end="415:62">chrMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="417:17" pos:end="417:39"><block_content pos:start="417:17" pos:end="417:39">

                <return pos:start="417:17" pos:end="417:39">return <expr pos:start="417:24" pos:end="417:38"><call pos:start="417:24" pos:end="417:38"><name pos:start="417:24" pos:end="417:30">AVERROR</name><argument_list pos:start="417:31" pos:end="417:38">(<argument pos:start="417:32" pos:end="417:37"><expr pos:start="417:32" pos:end="417:37"><name pos:start="417:32" pos:end="417:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:101"><expr pos:start="419:13" pos:end="419:100"><call pos:start="419:13" pos:end="419:100"><name pos:start="419:13" pos:end="419:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="419:30" pos:end="419:100">(<argument pos:start="419:31" pos:end="419:31"><expr pos:start="419:31" pos:end="419:31"><name pos:start="419:31" pos:end="419:31">c</name></expr></argument>, <argument pos:start="419:34" pos:end="419:46"><expr pos:start="419:34" pos:end="419:46"><name pos:start="419:34" pos:end="419:46"><name pos:start="419:34" pos:end="419:34">c</name><operator pos:start="419:35" pos:end="419:36">-&gt;</operator><name pos:start="419:37" pos:end="419:46">hLumFilter</name></name></expr></argument>,    <argument pos:start="419:52" pos:end="419:93"><expr pos:start="419:52" pos:end="419:93"><operator pos:start="419:52" pos:end="419:52">(</operator><name pos:start="419:53" pos:end="419:56">dstW</name>           <operator pos:start="419:68" pos:end="419:68">/</operator> <literal type="number" pos:start="419:70" pos:end="419:72">8</literal> <operator pos:start="419:72" pos:end="419:72">+</operator> <literal type="number" pos:start="419:74" pos:end="419:74">8</literal><operator pos:start="419:75" pos:end="419:75">)</operator> <operator pos:start="419:77" pos:end="419:77">*</operator> <sizeof pos:start="419:79" pos:end="419:93">sizeof<argument_list pos:start="419:85" pos:end="419:93">(<argument pos:start="419:86" pos:end="419:92"><expr pos:start="419:86" pos:end="419:92"><name pos:start="419:86" pos:end="419:92">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="419:96" pos:end="419:99"><expr pos:start="419:96" pos:end="419:99"><name pos:start="419:96" pos:end="419:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:101"><expr pos:start="421:13" pos:end="421:100"><call pos:start="421:13" pos:end="421:100"><name pos:start="421:13" pos:end="421:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="421:30" pos:end="421:100">(<argument pos:start="421:31" pos:end="421:31"><expr pos:start="421:31" pos:end="421:31"><name pos:start="421:31" pos:end="421:31">c</name></expr></argument>, <argument pos:start="421:34" pos:end="421:46"><expr pos:start="421:34" pos:end="421:46"><name pos:start="421:34" pos:end="421:46"><name pos:start="421:34" pos:end="421:34">c</name><operator pos:start="421:35" pos:end="421:36">-&gt;</operator><name pos:start="421:37" pos:end="421:46">hChrFilter</name></name></expr></argument>,    <argument pos:start="421:52" pos:end="421:93"><expr pos:start="421:52" pos:end="421:93"><operator pos:start="421:52" pos:end="421:52">(</operator><name pos:start="421:53" pos:end="421:62"><name pos:start="421:53" pos:end="421:53">c</name><operator pos:start="421:54" pos:end="421:55">-&gt;</operator><name pos:start="421:56" pos:end="421:62">chrDstW</name></name>     <operator pos:start="421:68" pos:end="421:68">/</operator> <literal type="number" pos:start="421:70" pos:end="421:72">4</literal> <operator pos:start="421:72" pos:end="421:72">+</operator> <literal type="number" pos:start="421:74" pos:end="421:74">8</literal><operator pos:start="421:75" pos:end="421:75">)</operator> <operator pos:start="421:77" pos:end="421:77">*</operator> <sizeof pos:start="421:79" pos:end="421:93">sizeof<argument_list pos:start="421:85" pos:end="421:93">(<argument pos:start="421:86" pos:end="421:92"><expr pos:start="421:86" pos:end="421:92"><name pos:start="421:86" pos:end="421:92">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="421:96" pos:end="421:99"><expr pos:start="421:96" pos:end="421:99"><name pos:start="421:96" pos:end="421:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:101"><expr pos:start="423:13" pos:end="423:100"><call pos:start="423:13" pos:end="423:100"><name pos:start="423:13" pos:end="423:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="423:30" pos:end="423:100">(<argument pos:start="423:31" pos:end="423:31"><expr pos:start="423:31" pos:end="423:31"><name pos:start="423:31" pos:end="423:31">c</name></expr></argument>, <argument pos:start="423:34" pos:end="423:49"><expr pos:start="423:34" pos:end="423:49"><name pos:start="423:34" pos:end="423:49"><name pos:start="423:34" pos:end="423:34">c</name><operator pos:start="423:35" pos:end="423:36">-&gt;</operator><name pos:start="423:37" pos:end="423:49">hLumFilterPos</name></name></expr></argument>, <argument pos:start="423:52" pos:end="423:93"><expr pos:start="423:52" pos:end="423:93"><operator pos:start="423:52" pos:end="423:52">(</operator><name pos:start="423:53" pos:end="423:56">dstW</name>       <operator pos:start="423:64" pos:end="423:64">/</operator> <literal type="number" pos:start="423:66" pos:end="423:66">2</literal> <operator pos:start="423:68" pos:end="423:68">/</operator> <literal type="number" pos:start="423:70" pos:end="423:72">8</literal> <operator pos:start="423:72" pos:end="423:72">+</operator> <literal type="number" pos:start="423:74" pos:end="423:74">8</literal><operator pos:start="423:75" pos:end="423:75">)</operator> <operator pos:start="423:77" pos:end="423:77">*</operator> <sizeof pos:start="423:79" pos:end="423:93">sizeof<argument_list pos:start="423:85" pos:end="423:93">(<argument pos:start="423:86" pos:end="423:92"><expr pos:start="423:86" pos:end="423:92"><name pos:start="423:86" pos:end="423:92">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="423:96" pos:end="423:99"><expr pos:start="423:96" pos:end="423:99"><name pos:start="423:96" pos:end="423:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:101"><expr pos:start="425:13" pos:end="425:100"><call pos:start="425:13" pos:end="425:100"><name pos:start="425:13" pos:end="425:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="425:30" pos:end="425:100">(<argument pos:start="425:31" pos:end="425:31"><expr pos:start="425:31" pos:end="425:31"><name pos:start="425:31" pos:end="425:31">c</name></expr></argument>, <argument pos:start="425:34" pos:end="425:49"><expr pos:start="425:34" pos:end="425:49"><name pos:start="425:34" pos:end="425:49"><name pos:start="425:34" pos:end="425:34">c</name><operator pos:start="425:35" pos:end="425:36">-&gt;</operator><name pos:start="425:37" pos:end="425:49">hChrFilterPos</name></name></expr></argument>, <argument pos:start="425:52" pos:end="425:93"><expr pos:start="425:52" pos:end="425:93"><operator pos:start="425:52" pos:end="425:52">(</operator><name pos:start="425:53" pos:end="425:62"><name pos:start="425:53" pos:end="425:53">c</name><operator pos:start="425:54" pos:end="425:55">-&gt;</operator><name pos:start="425:56" pos:end="425:62">chrDstW</name></name> <operator pos:start="425:64" pos:end="425:64">/</operator> <literal type="number" pos:start="425:66" pos:end="425:66">2</literal> <operator pos:start="425:68" pos:end="425:68">/</operator> <literal type="number" pos:start="425:70" pos:end="425:72">4</literal> <operator pos:start="425:72" pos:end="425:72">+</operator> <literal type="number" pos:start="425:74" pos:end="425:74">8</literal><operator pos:start="425:75" pos:end="425:75">)</operator> <operator pos:start="425:77" pos:end="425:77">*</operator> <sizeof pos:start="425:79" pos:end="425:93">sizeof<argument_list pos:start="425:85" pos:end="425:93">(<argument pos:start="425:86" pos:end="425:92"><expr pos:start="425:86" pos:end="425:92"><name pos:start="425:86" pos:end="425:92">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="425:96" pos:end="425:99"><expr pos:start="425:96" pos:end="425:99"><name pos:start="425:96" pos:end="425:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="429:13" pos:end="431:64"><expr pos:start="429:13" pos:end="431:63"><call pos:start="429:13" pos:end="431:63"><name pos:start="429:13" pos:end="429:27">initMMX2HScaler</name><argument_list pos:start="429:28" pos:end="431:63">(<argument pos:start="429:29" pos:end="429:32"><expr pos:start="429:29" pos:end="429:32"><name pos:start="429:29" pos:end="429:32">dstW</name></expr></argument>, <argument pos:start="429:35" pos:end="429:44"><expr pos:start="429:35" pos:end="429:44"><name pos:start="429:35" pos:end="429:44"><name pos:start="429:35" pos:end="429:35">c</name><operator pos:start="429:36" pos:end="429:37">-&gt;</operator><name pos:start="429:38" pos:end="429:44">lumXInc</name></name></expr></argument>, <argument pos:start="429:47" pos:end="429:66"><expr pos:start="429:47" pos:end="429:66"><name pos:start="429:47" pos:end="429:66"><name pos:start="429:47" pos:end="429:47">c</name><operator pos:start="429:48" pos:end="429:49">-&gt;</operator><name pos:start="429:50" pos:end="429:66">lumMmx2FilterCode</name></name></expr></argument>,

                            <argument pos:start="431:29" pos:end="431:41"><expr pos:start="431:29" pos:end="431:41"><name pos:start="431:29" pos:end="431:41"><name pos:start="431:29" pos:end="431:29">c</name><operator pos:start="431:30" pos:end="431:31">-&gt;</operator><name pos:start="431:32" pos:end="431:41">hLumFilter</name></name></expr></argument>, <argument pos:start="431:44" pos:end="431:59"><expr pos:start="431:44" pos:end="431:59"><name pos:start="431:44" pos:end="431:59"><name pos:start="431:44" pos:end="431:44">c</name><operator pos:start="431:45" pos:end="431:46">-&gt;</operator><name pos:start="431:47" pos:end="431:59">hLumFilterPos</name></name></expr></argument>, <argument pos:start="431:62" pos:end="431:62"><expr pos:start="431:62" pos:end="431:62"><literal type="number" pos:start="431:62" pos:end="431:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="440:0"><expr pos:start="433:13" pos:end="435:63"><call pos:start="433:13" pos:end="435:63"><name pos:start="433:13" pos:end="433:27">initMMX2HScaler</name><argument_list pos:start="433:28" pos:end="435:63">(<argument pos:start="433:29" pos:end="433:38"><expr pos:start="433:29" pos:end="433:38"><name pos:start="433:29" pos:end="433:38"><name pos:start="433:29" pos:end="433:29">c</name><operator pos:start="433:30" pos:end="433:31">-&gt;</operator><name pos:start="433:32" pos:end="433:38">chrDstW</name></name></expr></argument>, <argument pos:start="433:41" pos:end="433:50"><expr pos:start="433:41" pos:end="433:50"><name pos:start="433:41" pos:end="433:50"><name pos:start="433:41" pos:end="433:41">c</name><operator pos:start="433:42" pos:end="433:43">-&gt;</operator><name pos:start="433:44" pos:end="433:50">chrXInc</name></name></expr></argument>, <argument pos:start="433:53" pos:end="433:72"><expr pos:start="433:53" pos:end="433:72"><name pos:start="433:53" pos:end="433:72"><name pos:start="433:53" pos:end="433:53">c</name><operator pos:start="433:54" pos:end="433:55">-&gt;</operator><name pos:start="433:56" pos:end="433:72">chrMmx2FilterCode</name></name></expr></argument>,

                            <argument pos:start="435:29" pos:end="435:41"><expr pos:start="435:29" pos:end="435:41"><name pos:start="435:29" pos:end="435:41"><name pos:start="435:29" pos:end="435:29">c</name><operator pos:start="435:30" pos:end="435:31">-&gt;</operator><name pos:start="435:32" pos:end="435:41">hChrFilter</name></name></expr></argument>, <argument pos:start="435:44" pos:end="435:59"><expr pos:start="435:44" pos:end="435:59"><name pos:start="435:44" pos:end="435:59"><name pos:start="435:44" pos:end="435:44">c</name><operator pos:start="435:45" pos:end="435:46">-&gt;</operator><name pos:start="435:47" pos:end="435:59">hChrFilterPos</name></name></expr></argument>, <argument pos:start="435:62" pos:end="435:62"><expr pos:start="435:62" pos:end="435:62"><literal type="number" pos:start="435:62" pos:end="435:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="439:1" pos:end="439:20">#<cpp:directive pos:start="439:2" pos:end="439:6">ifdef</cpp:directive> <name pos:start="439:8" pos:end="439:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="441:13" pos:end="441:92"><expr pos:start="441:13" pos:end="441:91"><call pos:start="441:13" pos:end="441:91"><name pos:start="441:13" pos:end="441:20">mprotect</name><argument_list pos:start="441:21" pos:end="441:91">(<argument pos:start="441:22" pos:end="441:41"><expr pos:start="441:22" pos:end="441:41"><name pos:start="441:22" pos:end="441:41"><name pos:start="441:22" pos:end="441:22">c</name><operator pos:start="441:23" pos:end="441:24">-&gt;</operator><name pos:start="441:25" pos:end="441:41">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="441:44" pos:end="441:67"><expr pos:start="441:44" pos:end="441:67"><name pos:start="441:44" pos:end="441:67"><name pos:start="441:44" pos:end="441:44">c</name><operator pos:start="441:45" pos:end="441:46">-&gt;</operator><name pos:start="441:47" pos:end="441:67">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="441:70" pos:end="441:90"><expr pos:start="441:70" pos:end="441:90"><name pos:start="441:70" pos:end="441:78">PROT_EXEC</name> <operator pos:start="441:80" pos:end="441:80">|</operator> <name pos:start="441:82" pos:end="441:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="446:0"><expr pos:start="443:13" pos:end="443:91"><call pos:start="443:13" pos:end="443:91"><name pos:start="443:13" pos:end="443:20">mprotect</name><argument_list pos:start="443:21" pos:end="443:91">(<argument pos:start="443:22" pos:end="443:41"><expr pos:start="443:22" pos:end="443:41"><name pos:start="443:22" pos:end="443:41"><name pos:start="443:22" pos:end="443:22">c</name><operator pos:start="443:23" pos:end="443:24">-&gt;</operator><name pos:start="443:25" pos:end="443:41">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="443:44" pos:end="443:67"><expr pos:start="443:44" pos:end="443:67"><name pos:start="443:44" pos:end="443:67"><name pos:start="443:44" pos:end="443:44">c</name><operator pos:start="443:45" pos:end="443:46">-&gt;</operator><name pos:start="443:47" pos:end="443:67">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="443:70" pos:end="443:90"><expr pos:start="443:70" pos:end="443:90"><name pos:start="443:70" pos:end="443:78">PROT_EXEC</name> <operator pos:start="443:80" pos:end="443:80">|</operator> <name pos:start="443:82" pos:end="443:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="445:1" pos:end="445:6">#<cpp:directive pos:start="445:2" pos:end="445:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="447:11" pos:end="491:9">else

<cpp:endif pos:start="449:1" pos:end="449:6">#<cpp:directive pos:start="449:2" pos:end="449:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="449:8" pos:end="449:31">/* HAVE_MMXEXT_INLINE */</comment>

        <block pos:start="451:9" pos:end="491:9">{<block_content pos:start="453:13" pos:end="489:26">

            <decl_stmt pos:start="453:13" pos:end="459:18"><decl pos:start="453:13" pos:end="459:17"><type pos:start="453:13" pos:end="453:21"><specifier pos:start="453:13" pos:end="453:17">const</specifier> <name pos:start="453:19" pos:end="453:21">int</name></type> <name pos:start="453:23" pos:end="453:33">filterAlign</name> <init pos:start="453:35" pos:end="459:17">=

                <expr pos:start="455:17" pos:end="459:17"><ternary pos:start="455:17" pos:end="459:17"><condition pos:start="455:17" pos:end="455:59"><expr pos:start="455:17" pos:end="455:57"><operator pos:start="455:17" pos:end="455:17">(</operator><name pos:start="455:18" pos:end="455:25">HAVE_MMX</name> <operator pos:start="455:27" pos:end="455:28">&amp;&amp;</operator> <name pos:start="455:30" pos:end="455:38">cpu_flags</name> <operator pos:start="455:40" pos:end="455:40">&amp;</operator> <name pos:start="455:42" pos:end="455:56">AV_CPU_FLAG_MMX</name><operator pos:start="455:57" pos:end="455:57">)</operator></expr> ?</condition><then pos:start="455:61" pos:end="455:61"> <expr pos:start="455:61" pos:end="455:61"><literal type="number" pos:start="455:61" pos:end="455:61">4</literal></expr> </then><else pos:start="455:63" pos:end="459:17">:

                <expr pos:start="457:17" pos:end="459:17"><ternary pos:start="457:17" pos:end="459:17"><condition pos:start="457:17" pos:end="457:67"><expr pos:start="457:17" pos:end="457:65"><operator pos:start="457:17" pos:end="457:17">(</operator><name pos:start="457:18" pos:end="457:29">HAVE_ALTIVEC</name> <operator pos:start="457:31" pos:end="457:32">&amp;&amp;</operator> <name pos:start="457:34" pos:end="457:42">cpu_flags</name> <operator pos:start="457:44" pos:end="457:44">&amp;</operator> <name pos:start="457:46" pos:end="457:64">AV_CPU_FLAG_ALTIVEC</name><operator pos:start="457:65" pos:end="457:65">)</operator></expr> ?</condition><then pos:start="457:69" pos:end="457:69"> <expr pos:start="457:69" pos:end="457:69"><literal type="number" pos:start="457:69" pos:end="457:69">8</literal></expr> </then><else pos:start="457:71" pos:end="459:17">:

                <expr pos:start="459:17" pos:end="459:17"><literal type="number" pos:start="459:17" pos:end="459:17">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="463:13" pos:end="475:26"><if pos:start="463:13" pos:end="475:26">if <condition pos:start="463:16" pos:end="473:44">(<expr pos:start="463:17" pos:end="473:43"><call pos:start="463:17" pos:end="473:39"><name pos:start="463:17" pos:end="463:26">initFilter</name><argument_list pos:start="463:27" pos:end="473:39">(<argument pos:start="463:28" pos:end="463:41"><expr pos:start="463:28" pos:end="463:41"><operator pos:start="463:28" pos:end="463:28">&amp;</operator><name pos:start="463:29" pos:end="463:41"><name pos:start="463:29" pos:end="463:29">c</name><operator pos:start="463:30" pos:end="463:31">-&gt;</operator><name pos:start="463:32" pos:end="463:41">hLumFilter</name></name></expr></argument>, <argument pos:start="463:44" pos:end="463:60"><expr pos:start="463:44" pos:end="463:60"><operator pos:start="463:44" pos:end="463:44">&amp;</operator><name pos:start="463:45" pos:end="463:60"><name pos:start="463:45" pos:end="463:45">c</name><operator pos:start="463:46" pos:end="463:47">-&gt;</operator><name pos:start="463:48" pos:end="463:60">hLumFilterPos</name></name></expr></argument>,

                           <argument pos:start="465:28" pos:end="465:45"><expr pos:start="465:28" pos:end="465:45"><operator pos:start="465:28" pos:end="465:28">&amp;</operator><name pos:start="465:29" pos:end="465:45"><name pos:start="465:29" pos:end="465:29">c</name><operator pos:start="465:30" pos:end="465:31">-&gt;</operator><name pos:start="465:32" pos:end="465:45">hLumFilterSize</name></name></expr></argument>, <argument pos:start="465:48" pos:end="465:57"><expr pos:start="465:48" pos:end="465:57"><name pos:start="465:48" pos:end="465:57"><name pos:start="465:48" pos:end="465:48">c</name><operator pos:start="465:49" pos:end="465:50">-&gt;</operator><name pos:start="465:51" pos:end="465:57">lumXInc</name></name></expr></argument>,

                           <argument pos:start="467:28" pos:end="467:31"><expr pos:start="467:28" pos:end="467:31"><name pos:start="467:28" pos:end="467:31">srcW</name></expr></argument>, <argument pos:start="467:34" pos:end="467:37"><expr pos:start="467:34" pos:end="467:37"><name pos:start="467:34" pos:end="467:37">dstW</name></expr></argument>, <argument pos:start="467:40" pos:end="467:50"><expr pos:start="467:40" pos:end="467:50"><name pos:start="467:40" pos:end="467:50">filterAlign</name></expr></argument>, <argument pos:start="467:53" pos:end="467:59"><expr pos:start="467:53" pos:end="467:59"><literal type="number" pos:start="467:53" pos:end="467:53">1</literal> <operator pos:start="467:55" pos:end="467:56">&lt;&lt;</operator> <literal type="number" pos:start="467:58" pos:end="467:59">14</literal></expr></argument>,

                           <argument pos:start="469:28" pos:end="469:81"><expr pos:start="469:28" pos:end="469:81"><ternary pos:start="469:28" pos:end="469:81"><condition pos:start="469:28" pos:end="469:51"><expr pos:start="469:28" pos:end="469:49"><operator pos:start="469:28" pos:end="469:28">(</operator><name pos:start="469:29" pos:end="469:33">flags</name> <operator pos:start="469:35" pos:end="469:35">&amp;</operator> <name pos:start="469:37" pos:end="469:48">SWS_BICUBLIN</name><operator pos:start="469:49" pos:end="469:49">)</operator></expr> ?</condition><then pos:start="469:53" pos:end="469:73"> <expr pos:start="469:53" pos:end="469:73"><operator pos:start="469:53" pos:end="469:53">(</operator><name pos:start="469:54" pos:end="469:58">flags</name> <operator pos:start="469:60" pos:end="469:60">|</operator> <name pos:start="469:62" pos:end="469:72">SWS_BICUBIC</name><operator pos:start="469:73" pos:end="469:73">)</operator></expr> </then><else pos:start="469:75" pos:end="469:81">: <expr pos:start="469:77" pos:end="469:81"><name pos:start="469:77" pos:end="469:81">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="471:28" pos:end="471:36"><expr pos:start="471:28" pos:end="471:36"><name pos:start="471:28" pos:end="471:36">cpu_flags</name></expr></argument>, <argument pos:start="471:39" pos:end="471:53"><expr pos:start="471:39" pos:end="471:53"><name pos:start="471:39" pos:end="471:53"><name pos:start="471:39" pos:end="471:47">srcFilter</name><operator pos:start="471:48" pos:end="471:49">-&gt;</operator><name pos:start="471:50" pos:end="471:53">lumH</name></name></expr></argument>, <argument pos:start="471:56" pos:end="471:70"><expr pos:start="471:56" pos:end="471:70"><name pos:start="471:56" pos:end="471:70"><name pos:start="471:56" pos:end="471:64">dstFilter</name><operator pos:start="471:65" pos:end="471:66">-&gt;</operator><name pos:start="471:67" pos:end="471:70">lumH</name></name></expr></argument>,

                           <argument pos:start="473:28" pos:end="473:35"><expr pos:start="473:28" pos:end="473:35"><name pos:start="473:28" pos:end="473:35"><name pos:start="473:28" pos:end="473:28">c</name><operator pos:start="473:29" pos:end="473:30">-&gt;</operator><name pos:start="473:31" pos:end="473:35">param</name></name></expr></argument>, <argument pos:start="473:38" pos:end="473:38"><expr pos:start="473:38" pos:end="473:38"><literal type="number" pos:start="473:38" pos:end="473:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="473:41" pos:end="473:41">&lt;</operator> <literal type="number" pos:start="473:43" pos:end="473:43">0</literal></expr>)</condition><block type="pseudo" pos:start="475:17" pos:end="475:26"><block_content pos:start="475:17" pos:end="475:26">

                <goto pos:start="475:17" pos:end="475:26">goto <name pos:start="475:22" pos:end="475:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="477:13" pos:end="489:26"><if pos:start="477:13" pos:end="489:26">if <condition pos:start="477:16" pos:end="487:44">(<expr pos:start="477:17" pos:end="487:43"><call pos:start="477:17" pos:end="487:39"><name pos:start="477:17" pos:end="477:26">initFilter</name><argument_list pos:start="477:27" pos:end="487:39">(<argument pos:start="477:28" pos:end="477:41"><expr pos:start="477:28" pos:end="477:41"><operator pos:start="477:28" pos:end="477:28">&amp;</operator><name pos:start="477:29" pos:end="477:41"><name pos:start="477:29" pos:end="477:29">c</name><operator pos:start="477:30" pos:end="477:31">-&gt;</operator><name pos:start="477:32" pos:end="477:41">hChrFilter</name></name></expr></argument>, <argument pos:start="477:44" pos:end="477:60"><expr pos:start="477:44" pos:end="477:60"><operator pos:start="477:44" pos:end="477:44">&amp;</operator><name pos:start="477:45" pos:end="477:60"><name pos:start="477:45" pos:end="477:45">c</name><operator pos:start="477:46" pos:end="477:47">-&gt;</operator><name pos:start="477:48" pos:end="477:60">hChrFilterPos</name></name></expr></argument>,

                           <argument pos:start="479:28" pos:end="479:45"><expr pos:start="479:28" pos:end="479:45"><operator pos:start="479:28" pos:end="479:28">&amp;</operator><name pos:start="479:29" pos:end="479:45"><name pos:start="479:29" pos:end="479:29">c</name><operator pos:start="479:30" pos:end="479:31">-&gt;</operator><name pos:start="479:32" pos:end="479:45">hChrFilterSize</name></name></expr></argument>, <argument pos:start="479:48" pos:end="479:57"><expr pos:start="479:48" pos:end="479:57"><name pos:start="479:48" pos:end="479:57"><name pos:start="479:48" pos:end="479:48">c</name><operator pos:start="479:49" pos:end="479:50">-&gt;</operator><name pos:start="479:51" pos:end="479:57">chrXInc</name></name></expr></argument>,

                           <argument pos:start="481:28" pos:end="481:37"><expr pos:start="481:28" pos:end="481:37"><name pos:start="481:28" pos:end="481:37"><name pos:start="481:28" pos:end="481:28">c</name><operator pos:start="481:29" pos:end="481:30">-&gt;</operator><name pos:start="481:31" pos:end="481:37">chrSrcW</name></name></expr></argument>, <argument pos:start="481:40" pos:end="481:49"><expr pos:start="481:40" pos:end="481:49"><name pos:start="481:40" pos:end="481:49"><name pos:start="481:40" pos:end="481:40">c</name><operator pos:start="481:41" pos:end="481:42">-&gt;</operator><name pos:start="481:43" pos:end="481:49">chrDstW</name></name></expr></argument>, <argument pos:start="481:52" pos:end="481:62"><expr pos:start="481:52" pos:end="481:62"><name pos:start="481:52" pos:end="481:62">filterAlign</name></expr></argument>, <argument pos:start="481:65" pos:end="481:71"><expr pos:start="481:65" pos:end="481:71"><literal type="number" pos:start="481:65" pos:end="481:65">1</literal> <operator pos:start="481:67" pos:end="481:68">&lt;&lt;</operator> <literal type="number" pos:start="481:70" pos:end="481:71">14</literal></expr></argument>,

                           <argument pos:start="483:28" pos:end="483:82"><expr pos:start="483:28" pos:end="483:82"><ternary pos:start="483:28" pos:end="483:82"><condition pos:start="483:28" pos:end="483:51"><expr pos:start="483:28" pos:end="483:49"><operator pos:start="483:28" pos:end="483:28">(</operator><name pos:start="483:29" pos:end="483:33">flags</name> <operator pos:start="483:35" pos:end="483:35">&amp;</operator> <name pos:start="483:37" pos:end="483:48">SWS_BICUBLIN</name><operator pos:start="483:49" pos:end="483:49">)</operator></expr> ?</condition><then pos:start="483:53" pos:end="483:74"> <expr pos:start="483:53" pos:end="483:74"><operator pos:start="483:53" pos:end="483:53">(</operator><name pos:start="483:54" pos:end="483:58">flags</name> <operator pos:start="483:60" pos:end="483:60">|</operator> <name pos:start="483:62" pos:end="483:73">SWS_BILINEAR</name><operator pos:start="483:74" pos:end="483:74">)</operator></expr> </then><else pos:start="483:76" pos:end="483:82">: <expr pos:start="483:78" pos:end="483:82"><name pos:start="483:78" pos:end="483:82">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="485:28" pos:end="485:36"><expr pos:start="485:28" pos:end="485:36"><name pos:start="485:28" pos:end="485:36">cpu_flags</name></expr></argument>, <argument pos:start="485:39" pos:end="485:53"><expr pos:start="485:39" pos:end="485:53"><name pos:start="485:39" pos:end="485:53"><name pos:start="485:39" pos:end="485:47">srcFilter</name><operator pos:start="485:48" pos:end="485:49">-&gt;</operator><name pos:start="485:50" pos:end="485:53">chrH</name></name></expr></argument>, <argument pos:start="485:56" pos:end="485:70"><expr pos:start="485:56" pos:end="485:70"><name pos:start="485:56" pos:end="485:70"><name pos:start="485:56" pos:end="485:64">dstFilter</name><operator pos:start="485:65" pos:end="485:66">-&gt;</operator><name pos:start="485:67" pos:end="485:70">chrH</name></name></expr></argument>,

                           <argument pos:start="487:28" pos:end="487:35"><expr pos:start="487:28" pos:end="487:35"><name pos:start="487:28" pos:end="487:35"><name pos:start="487:28" pos:end="487:28">c</name><operator pos:start="487:29" pos:end="487:30">-&gt;</operator><name pos:start="487:31" pos:end="487:35">param</name></name></expr></argument>, <argument pos:start="487:38" pos:end="487:38"><expr pos:start="487:38" pos:end="487:38"><literal type="number" pos:start="487:38" pos:end="487:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="487:41" pos:end="487:41">&lt;</operator> <literal type="number" pos:start="487:43" pos:end="487:43">0</literal></expr>)</condition><block type="pseudo" pos:start="489:17" pos:end="489:26"><block_content pos:start="489:17" pos:end="489:26">

                <goto pos:start="489:17" pos:end="489:26">goto <name pos:start="489:22" pos:end="489:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> <comment type="line" pos:start="493:7" pos:end="493:36">// initialize horizontal stuff</comment>



    <comment type="block" pos:start="497:5" pos:end="497:58">/* precalculate vertical scaler filter coefficients */</comment>

    <block pos:start="499:5" pos:end="575:5">{<block_content pos:start="501:9" pos:end="574:0">

        <decl_stmt pos:start="501:9" pos:end="507:14"><decl pos:start="501:9" pos:end="507:13"><type pos:start="501:9" pos:end="501:17"><specifier pos:start="501:9" pos:end="501:13">const</specifier> <name pos:start="501:15" pos:end="501:17">int</name></type> <name pos:start="501:19" pos:end="501:29">filterAlign</name> <init pos:start="501:31" pos:end="507:13">=

            <expr pos:start="503:13" pos:end="507:13"><ternary pos:start="503:13" pos:end="507:13"><condition pos:start="503:13" pos:end="503:55"><expr pos:start="503:13" pos:end="503:53"><operator pos:start="503:13" pos:end="503:13">(</operator><name pos:start="503:14" pos:end="503:21">HAVE_MMX</name> <operator pos:start="503:23" pos:end="503:24">&amp;&amp;</operator> <name pos:start="503:26" pos:end="503:34">cpu_flags</name> <operator pos:start="503:36" pos:end="503:36">&amp;</operator> <name pos:start="503:38" pos:end="503:52">AV_CPU_FLAG_MMX</name><operator pos:start="503:53" pos:end="503:53">)</operator></expr> ?</condition><then pos:start="503:57" pos:end="503:57"> <expr pos:start="503:57" pos:end="503:57"><literal type="number" pos:start="503:57" pos:end="503:57">2</literal></expr> </then><else pos:start="503:59" pos:end="507:13">:

            <expr pos:start="505:13" pos:end="507:13"><ternary pos:start="505:13" pos:end="507:13"><condition pos:start="505:13" pos:end="505:63"><expr pos:start="505:13" pos:end="505:61"><operator pos:start="505:13" pos:end="505:13">(</operator><name pos:start="505:14" pos:end="505:25">HAVE_ALTIVEC</name> <operator pos:start="505:27" pos:end="505:28">&amp;&amp;</operator> <name pos:start="505:30" pos:end="505:38">cpu_flags</name> <operator pos:start="505:40" pos:end="505:40">&amp;</operator> <name pos:start="505:42" pos:end="505:60">AV_CPU_FLAG_ALTIVEC</name><operator pos:start="505:61" pos:end="505:61">)</operator></expr> ?</condition><then pos:start="505:65" pos:end="505:65"> <expr pos:start="505:65" pos:end="505:65"><literal type="number" pos:start="505:65" pos:end="505:65">8</literal></expr> </then><else pos:start="505:67" pos:end="507:13">:

            <expr pos:start="507:13" pos:end="507:13"><literal type="number" pos:start="507:13" pos:end="507:13">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="511:9" pos:end="521:22"><if pos:start="511:9" pos:end="521:22">if <condition pos:start="511:12" pos:end="519:40">(<expr pos:start="511:13" pos:end="519:39"><call pos:start="511:13" pos:end="519:35"><name pos:start="511:13" pos:end="511:22">initFilter</name><argument_list pos:start="511:23" pos:end="519:35">(<argument pos:start="511:24" pos:end="511:37"><expr pos:start="511:24" pos:end="511:37"><operator pos:start="511:24" pos:end="511:24">&amp;</operator><name pos:start="511:25" pos:end="511:37"><name pos:start="511:25" pos:end="511:25">c</name><operator pos:start="511:26" pos:end="511:27">-&gt;</operator><name pos:start="511:28" pos:end="511:37">vLumFilter</name></name></expr></argument>, <argument pos:start="511:40" pos:end="511:56"><expr pos:start="511:40" pos:end="511:56"><operator pos:start="511:40" pos:end="511:40">&amp;</operator><name pos:start="511:41" pos:end="511:56"><name pos:start="511:41" pos:end="511:41">c</name><operator pos:start="511:42" pos:end="511:43">-&gt;</operator><name pos:start="511:44" pos:end="511:56">vLumFilterPos</name></name></expr></argument>, <argument pos:start="511:59" pos:end="511:76"><expr pos:start="511:59" pos:end="511:76"><operator pos:start="511:59" pos:end="511:59">&amp;</operator><name pos:start="511:60" pos:end="511:76"><name pos:start="511:60" pos:end="511:60">c</name><operator pos:start="511:61" pos:end="511:62">-&gt;</operator><name pos:start="511:63" pos:end="511:76">vLumFilterSize</name></name></expr></argument>,

                       <argument pos:start="513:24" pos:end="513:33"><expr pos:start="513:24" pos:end="513:33"><name pos:start="513:24" pos:end="513:33"><name pos:start="513:24" pos:end="513:24">c</name><operator pos:start="513:25" pos:end="513:26">-&gt;</operator><name pos:start="513:27" pos:end="513:33">lumYInc</name></name></expr></argument>, <argument pos:start="513:36" pos:end="513:39"><expr pos:start="513:36" pos:end="513:39"><name pos:start="513:36" pos:end="513:39">srcH</name></expr></argument>, <argument pos:start="513:42" pos:end="513:45"><expr pos:start="513:42" pos:end="513:45"><name pos:start="513:42" pos:end="513:45">dstH</name></expr></argument>, <argument pos:start="513:48" pos:end="513:58"><expr pos:start="513:48" pos:end="513:58"><name pos:start="513:48" pos:end="513:58">filterAlign</name></expr></argument>, <argument pos:start="513:61" pos:end="513:69"><expr pos:start="513:61" pos:end="513:69"><operator pos:start="513:61" pos:end="513:61">(</operator><literal type="number" pos:start="513:62" pos:end="513:62">1</literal> <operator pos:start="513:64" pos:end="513:65">&lt;&lt;</operator> <literal type="number" pos:start="513:67" pos:end="513:68">12</literal><operator pos:start="513:69" pos:end="513:69">)</operator></expr></argument>,

                       <argument pos:start="515:24" pos:end="515:77"><expr pos:start="515:24" pos:end="515:77"><ternary pos:start="515:24" pos:end="515:77"><condition pos:start="515:24" pos:end="515:47"><expr pos:start="515:24" pos:end="515:45"><operator pos:start="515:24" pos:end="515:24">(</operator><name pos:start="515:25" pos:end="515:29">flags</name> <operator pos:start="515:31" pos:end="515:31">&amp;</operator> <name pos:start="515:33" pos:end="515:44">SWS_BICUBLIN</name><operator pos:start="515:45" pos:end="515:45">)</operator></expr> ?</condition><then pos:start="515:49" pos:end="515:69"> <expr pos:start="515:49" pos:end="515:69"><operator pos:start="515:49" pos:end="515:49">(</operator><name pos:start="515:50" pos:end="515:54">flags</name> <operator pos:start="515:56" pos:end="515:56">|</operator> <name pos:start="515:58" pos:end="515:68">SWS_BICUBIC</name><operator pos:start="515:69" pos:end="515:69">)</operator></expr> </then><else pos:start="515:71" pos:end="515:77">: <expr pos:start="515:73" pos:end="515:77"><name pos:start="515:73" pos:end="515:77">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="517:24" pos:end="517:32"><expr pos:start="517:24" pos:end="517:32"><name pos:start="517:24" pos:end="517:32">cpu_flags</name></expr></argument>, <argument pos:start="517:35" pos:end="517:49"><expr pos:start="517:35" pos:end="517:49"><name pos:start="517:35" pos:end="517:49"><name pos:start="517:35" pos:end="517:43">srcFilter</name><operator pos:start="517:44" pos:end="517:45">-&gt;</operator><name pos:start="517:46" pos:end="517:49">lumV</name></name></expr></argument>, <argument pos:start="517:52" pos:end="517:66"><expr pos:start="517:52" pos:end="517:66"><name pos:start="517:52" pos:end="517:66"><name pos:start="517:52" pos:end="517:60">dstFilter</name><operator pos:start="517:61" pos:end="517:62">-&gt;</operator><name pos:start="517:63" pos:end="517:66">lumV</name></name></expr></argument>,

                       <argument pos:start="519:24" pos:end="519:31"><expr pos:start="519:24" pos:end="519:31"><name pos:start="519:24" pos:end="519:31"><name pos:start="519:24" pos:end="519:24">c</name><operator pos:start="519:25" pos:end="519:26">-&gt;</operator><name pos:start="519:27" pos:end="519:31">param</name></name></expr></argument>, <argument pos:start="519:34" pos:end="519:34"><expr pos:start="519:34" pos:end="519:34"><literal type="number" pos:start="519:34" pos:end="519:34">0</literal></expr></argument>)</argument_list></call> <operator pos:start="519:37" pos:end="519:37">&lt;</operator> <literal type="number" pos:start="519:39" pos:end="519:39">0</literal></expr>)</condition><block type="pseudo" pos:start="521:13" pos:end="521:22"><block_content pos:start="521:13" pos:end="521:22">

            <goto pos:start="521:13" pos:end="521:22">goto <name pos:start="521:18" pos:end="521:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="523:9" pos:end="540:0"><if pos:start="523:9" pos:end="540:0">if <condition pos:start="523:12" pos:end="533:40">(<expr pos:start="523:13" pos:end="533:39"><call pos:start="523:13" pos:end="533:35"><name pos:start="523:13" pos:end="523:22">initFilter</name><argument_list pos:start="523:23" pos:end="533:35">(<argument pos:start="523:24" pos:end="523:37"><expr pos:start="523:24" pos:end="523:37"><operator pos:start="523:24" pos:end="523:24">&amp;</operator><name pos:start="523:25" pos:end="523:37"><name pos:start="523:25" pos:end="523:25">c</name><operator pos:start="523:26" pos:end="523:27">-&gt;</operator><name pos:start="523:28" pos:end="523:37">vChrFilter</name></name></expr></argument>, <argument pos:start="523:40" pos:end="523:56"><expr pos:start="523:40" pos:end="523:56"><operator pos:start="523:40" pos:end="523:40">&amp;</operator><name pos:start="523:41" pos:end="523:56"><name pos:start="523:41" pos:end="523:41">c</name><operator pos:start="523:42" pos:end="523:43">-&gt;</operator><name pos:start="523:44" pos:end="523:56">vChrFilterPos</name></name></expr></argument>, <argument pos:start="523:59" pos:end="523:76"><expr pos:start="523:59" pos:end="523:76"><operator pos:start="523:59" pos:end="523:59">&amp;</operator><name pos:start="523:60" pos:end="523:76"><name pos:start="523:60" pos:end="523:60">c</name><operator pos:start="523:61" pos:end="523:62">-&gt;</operator><name pos:start="523:63" pos:end="523:76">vChrFilterSize</name></name></expr></argument>,

                       <argument pos:start="525:24" pos:end="525:33"><expr pos:start="525:24" pos:end="525:33"><name pos:start="525:24" pos:end="525:33"><name pos:start="525:24" pos:end="525:24">c</name><operator pos:start="525:25" pos:end="525:26">-&gt;</operator><name pos:start="525:27" pos:end="525:33">chrYInc</name></name></expr></argument>, <argument pos:start="525:36" pos:end="525:45"><expr pos:start="525:36" pos:end="525:45"><name pos:start="525:36" pos:end="525:45"><name pos:start="525:36" pos:end="525:36">c</name><operator pos:start="525:37" pos:end="525:38">-&gt;</operator><name pos:start="525:39" pos:end="525:45">chrSrcH</name></name></expr></argument>, <argument pos:start="525:48" pos:end="525:57"><expr pos:start="525:48" pos:end="525:57"><name pos:start="525:48" pos:end="525:57"><name pos:start="525:48" pos:end="525:48">c</name><operator pos:start="525:49" pos:end="525:50">-&gt;</operator><name pos:start="525:51" pos:end="525:57">chrDstH</name></name></expr></argument>,

                       <argument pos:start="527:24" pos:end="527:34"><expr pos:start="527:24" pos:end="527:34"><name pos:start="527:24" pos:end="527:34">filterAlign</name></expr></argument>, <argument pos:start="527:37" pos:end="527:45"><expr pos:start="527:37" pos:end="527:45"><operator pos:start="527:37" pos:end="527:37">(</operator><literal type="number" pos:start="527:38" pos:end="527:38">1</literal> <operator pos:start="527:40" pos:end="527:41">&lt;&lt;</operator> <literal type="number" pos:start="527:43" pos:end="527:44">12</literal><operator pos:start="527:45" pos:end="527:45">)</operator></expr></argument>,

                       <argument pos:start="529:24" pos:end="529:78"><expr pos:start="529:24" pos:end="529:78"><ternary pos:start="529:24" pos:end="529:78"><condition pos:start="529:24" pos:end="529:47"><expr pos:start="529:24" pos:end="529:45"><operator pos:start="529:24" pos:end="529:24">(</operator><name pos:start="529:25" pos:end="529:29">flags</name> <operator pos:start="529:31" pos:end="529:31">&amp;</operator> <name pos:start="529:33" pos:end="529:44">SWS_BICUBLIN</name><operator pos:start="529:45" pos:end="529:45">)</operator></expr> ?</condition><then pos:start="529:49" pos:end="529:70"> <expr pos:start="529:49" pos:end="529:70"><operator pos:start="529:49" pos:end="529:49">(</operator><name pos:start="529:50" pos:end="529:54">flags</name> <operator pos:start="529:56" pos:end="529:56">|</operator> <name pos:start="529:58" pos:end="529:69">SWS_BILINEAR</name><operator pos:start="529:70" pos:end="529:70">)</operator></expr> </then><else pos:start="529:72" pos:end="529:78">: <expr pos:start="529:74" pos:end="529:78"><name pos:start="529:74" pos:end="529:78">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="531:24" pos:end="531:32"><expr pos:start="531:24" pos:end="531:32"><name pos:start="531:24" pos:end="531:32">cpu_flags</name></expr></argument>, <argument pos:start="531:35" pos:end="531:49"><expr pos:start="531:35" pos:end="531:49"><name pos:start="531:35" pos:end="531:49"><name pos:start="531:35" pos:end="531:43">srcFilter</name><operator pos:start="531:44" pos:end="531:45">-&gt;</operator><name pos:start="531:46" pos:end="531:49">chrV</name></name></expr></argument>, <argument pos:start="531:52" pos:end="531:66"><expr pos:start="531:52" pos:end="531:66"><name pos:start="531:52" pos:end="531:66"><name pos:start="531:52" pos:end="531:60">dstFilter</name><operator pos:start="531:61" pos:end="531:62">-&gt;</operator><name pos:start="531:63" pos:end="531:66">chrV</name></name></expr></argument>,

                       <argument pos:start="533:24" pos:end="533:31"><expr pos:start="533:24" pos:end="533:31"><name pos:start="533:24" pos:end="533:31"><name pos:start="533:24" pos:end="533:24">c</name><operator pos:start="533:25" pos:end="533:26">-&gt;</operator><name pos:start="533:27" pos:end="533:31">param</name></name></expr></argument>, <argument pos:start="533:34" pos:end="533:34"><expr pos:start="533:34" pos:end="533:34"><literal type="number" pos:start="533:34" pos:end="533:34">0</literal></expr></argument>)</argument_list></call> <operator pos:start="533:37" pos:end="533:37">&lt;</operator> <literal type="number" pos:start="533:39" pos:end="533:39">0</literal></expr>)</condition><block type="pseudo" pos:start="535:13" pos:end="540:0"><block_content pos:start="535:13" pos:end="540:0">

            <goto pos:start="535:13" pos:end="540:0">goto <name pos:start="535:18" pos:end="535:21">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="539:1" pos:end="539:16">#<cpp:directive pos:start="539:2" pos:end="539:3">if</cpp:directive> <expr pos:start="539:5" pos:end="539:16"><name pos:start="539:5" pos:end="539:16">HAVE_ALTIVEC</name></expr></cpp:if>

        <expr_stmt pos:start="541:9" pos:end="541:113"><expr pos:start="541:9" pos:end="541:112"><call pos:start="541:9" pos:end="541:112"><name pos:start="541:9" pos:end="541:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="541:25" pos:end="541:112">(<argument pos:start="541:26" pos:end="541:26"><expr pos:start="541:26" pos:end="541:26"><name pos:start="541:26" pos:end="541:26">c</name></expr></argument>, <argument pos:start="541:29" pos:end="541:43"><expr pos:start="541:29" pos:end="541:43"><name pos:start="541:29" pos:end="541:43"><name pos:start="541:29" pos:end="541:29">c</name><operator pos:start="541:30" pos:end="541:31">-&gt;</operator><name pos:start="541:32" pos:end="541:43">vYCoeffsBank</name></name></expr></argument>, <argument pos:start="541:46" pos:end="541:102"><expr pos:start="541:46" pos:end="541:102">sizeof<operator pos:start="541:52" pos:end="541:52">(</operator><name pos:start="541:53" pos:end="541:58">vector</name> <name pos:start="541:60" pos:end="541:65">signed</name> <name pos:start="541:67" pos:end="541:71">short</name><operator pos:start="541:72" pos:end="541:72">)</operator> <operator pos:start="541:74" pos:end="541:74">*</operator> <name pos:start="541:76" pos:end="541:92"><name pos:start="541:76" pos:end="541:76">c</name><operator pos:start="541:77" pos:end="541:78">-&gt;</operator><name pos:start="541:79" pos:end="541:92">vLumFilterSize</name></name> <operator pos:start="541:94" pos:end="541:94">*</operator> <name pos:start="541:96" pos:end="541:102"><name pos:start="541:96" pos:end="541:96">c</name><operator pos:start="541:97" pos:end="541:98">-&gt;</operator><name pos:start="541:99" pos:end="541:102">dstH</name></name></expr></argument>,    <argument pos:start="541:108" pos:end="541:111"><expr pos:start="541:108" pos:end="541:111"><name pos:start="541:108" pos:end="541:111">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="543:9" pos:end="543:113"><expr pos:start="543:9" pos:end="543:112"><call pos:start="543:9" pos:end="543:112"><name pos:start="543:9" pos:end="543:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="543:25" pos:end="543:112">(<argument pos:start="543:26" pos:end="543:26"><expr pos:start="543:26" pos:end="543:26"><name pos:start="543:26" pos:end="543:26">c</name></expr></argument>, <argument pos:start="543:29" pos:end="543:43"><expr pos:start="543:29" pos:end="543:43"><name pos:start="543:29" pos:end="543:43"><name pos:start="543:29" pos:end="543:29">c</name><operator pos:start="543:30" pos:end="543:31">-&gt;</operator><name pos:start="543:32" pos:end="543:43">vCCoeffsBank</name></name></expr></argument>, <argument pos:start="543:46" pos:end="543:105"><expr pos:start="543:46" pos:end="543:105">sizeof<operator pos:start="543:52" pos:end="543:52">(</operator><name pos:start="543:53" pos:end="543:58">vector</name> <name pos:start="543:60" pos:end="543:65">signed</name> <name pos:start="543:67" pos:end="543:71">short</name><operator pos:start="543:72" pos:end="543:72">)</operator> <operator pos:start="543:74" pos:end="543:74">*</operator> <name pos:start="543:76" pos:end="543:92"><name pos:start="543:76" pos:end="543:76">c</name><operator pos:start="543:77" pos:end="543:78">-&gt;</operator><name pos:start="543:79" pos:end="543:92">vChrFilterSize</name></name> <operator pos:start="543:94" pos:end="543:94">*</operator> <name pos:start="543:96" pos:end="543:105"><name pos:start="543:96" pos:end="543:96">c</name><operator pos:start="543:97" pos:end="543:98">-&gt;</operator><name pos:start="543:99" pos:end="543:105">chrDstH</name></name></expr></argument>, <argument pos:start="543:108" pos:end="543:111"><expr pos:start="543:108" pos:end="543:111"><name pos:start="543:108" pos:end="543:111">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="547:9" pos:end="557:9">for <control pos:start="547:13" pos:end="547:57">(<init pos:start="547:14" pos:end="547:19"><expr pos:start="547:14" pos:end="547:18"><name pos:start="547:14" pos:end="547:14">i</name> <operator pos:start="547:16" pos:end="547:16">=</operator> <literal type="number" pos:start="547:18" pos:end="547:18">0</literal></expr>;</init> <condition pos:start="547:21" pos:end="547:52"><expr pos:start="547:21" pos:end="547:51"><name pos:start="547:21" pos:end="547:21">i</name> <operator pos:start="547:23" pos:end="547:23">&lt;</operator> <name pos:start="547:25" pos:end="547:41"><name pos:start="547:25" pos:end="547:25">c</name><operator pos:start="547:26" pos:end="547:27">-&gt;</operator><name pos:start="547:28" pos:end="547:41">vLumFilterSize</name></name> <operator pos:start="547:43" pos:end="547:43">*</operator> <name pos:start="547:45" pos:end="547:51"><name pos:start="547:45" pos:end="547:45">c</name><operator pos:start="547:46" pos:end="547:47">-&gt;</operator><name pos:start="547:48" pos:end="547:51">dstH</name></name></expr>;</condition> <incr pos:start="547:54" pos:end="547:56"><expr pos:start="547:54" pos:end="547:56"><name pos:start="547:54" pos:end="547:54">i</name><operator pos:start="547:55" pos:end="547:56">++</operator></expr></incr>)</control> <block pos:start="547:59" pos:end="557:9">{<block_content pos:start="549:13" pos:end="555:40">

            <decl_stmt pos:start="549:13" pos:end="549:18"><decl pos:start="549:13" pos:end="549:17"><type pos:start="549:13" pos:end="549:15"><name pos:start="549:13" pos:end="549:15">int</name></type> <name pos:start="549:17" pos:end="549:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="551:13" pos:end="551:52"><decl pos:start="551:13" pos:end="551:51"><type pos:start="551:13" pos:end="551:19"><name pos:start="551:13" pos:end="551:17">short</name> <modifier pos:start="551:19" pos:end="551:19">*</modifier></type><name pos:start="551:20" pos:end="551:20">p</name> <init pos:start="551:22" pos:end="551:51">= <expr pos:start="551:24" pos:end="551:51"><operator pos:start="551:24" pos:end="551:24">(</operator><name pos:start="551:25" pos:end="551:29">short</name> <operator pos:start="551:31" pos:end="551:31">*</operator><operator pos:start="551:32" pos:end="551:32">)</operator><operator pos:start="551:33" pos:end="551:33">&amp;</operator><name pos:start="551:34" pos:end="551:51"><name pos:start="551:34" pos:end="551:34">c</name><operator pos:start="551:35" pos:end="551:36">-&gt;</operator><name pos:start="551:37" pos:end="551:48">vYCoeffsBank</name><index pos:start="551:49" pos:end="551:51">[<expr pos:start="551:50" pos:end="551:50"><name pos:start="551:50" pos:end="551:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="553:13" pos:end="555:40">for <control pos:start="553:17" pos:end="553:35">(<init pos:start="553:18" pos:end="553:23"><expr pos:start="553:18" pos:end="553:22"><name pos:start="553:18" pos:end="553:18">j</name> <operator pos:start="553:20" pos:end="553:20">=</operator> <literal type="number" pos:start="553:22" pos:end="553:22">0</literal></expr>;</init> <condition pos:start="553:25" pos:end="553:30"><expr pos:start="553:25" pos:end="553:29"><name pos:start="553:25" pos:end="553:25">j</name> <operator pos:start="553:27" pos:end="553:27">&lt;</operator> <literal type="number" pos:start="553:29" pos:end="553:29">8</literal></expr>;</condition> <incr pos:start="553:32" pos:end="553:34"><expr pos:start="553:32" pos:end="553:34"><name pos:start="553:32" pos:end="553:32">j</name><operator pos:start="553:33" pos:end="553:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="555:17" pos:end="555:40"><block_content pos:start="555:17" pos:end="555:40">

                <expr_stmt pos:start="555:17" pos:end="555:40"><expr pos:start="555:17" pos:end="555:39"><name pos:start="555:17" pos:end="555:20"><name pos:start="555:17" pos:end="555:17">p</name><index pos:start="555:18" pos:end="555:20">[<expr pos:start="555:19" pos:end="555:19"><name pos:start="555:19" pos:end="555:19">j</name></expr>]</index></name> <operator pos:start="555:22" pos:end="555:22">=</operator> <name pos:start="555:24" pos:end="555:39"><name pos:start="555:24" pos:end="555:24">c</name><operator pos:start="555:25" pos:end="555:26">-&gt;</operator><name pos:start="555:27" pos:end="555:36">vLumFilter</name><index pos:start="555:37" pos:end="555:39">[<expr pos:start="555:38" pos:end="555:38"><name pos:start="555:38" pos:end="555:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="561:9" pos:end="574:0">for <control pos:start="561:13" pos:end="561:60">(<init pos:start="561:14" pos:end="561:19"><expr pos:start="561:14" pos:end="561:18"><name pos:start="561:14" pos:end="561:14">i</name> <operator pos:start="561:16" pos:end="561:16">=</operator> <literal type="number" pos:start="561:18" pos:end="561:18">0</literal></expr>;</init> <condition pos:start="561:21" pos:end="561:55"><expr pos:start="561:21" pos:end="561:54"><name pos:start="561:21" pos:end="561:21">i</name> <operator pos:start="561:23" pos:end="561:23">&lt;</operator> <name pos:start="561:25" pos:end="561:41"><name pos:start="561:25" pos:end="561:25">c</name><operator pos:start="561:26" pos:end="561:27">-&gt;</operator><name pos:start="561:28" pos:end="561:41">vChrFilterSize</name></name> <operator pos:start="561:43" pos:end="561:43">*</operator> <name pos:start="561:45" pos:end="561:54"><name pos:start="561:45" pos:end="561:45">c</name><operator pos:start="561:46" pos:end="561:47">-&gt;</operator><name pos:start="561:48" pos:end="561:54">chrDstH</name></name></expr>;</condition> <incr pos:start="561:57" pos:end="561:59"><expr pos:start="561:57" pos:end="561:59"><name pos:start="561:57" pos:end="561:57">i</name><operator pos:start="561:58" pos:end="561:59">++</operator></expr></incr>)</control> <block pos:start="561:62" pos:end="574:0">{<block_content pos:start="563:13" pos:end="569:40">

            <decl_stmt pos:start="563:13" pos:end="563:18"><decl pos:start="563:13" pos:end="563:17"><type pos:start="563:13" pos:end="563:15"><name pos:start="563:13" pos:end="563:15">int</name></type> <name pos:start="563:17" pos:end="563:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="565:13" pos:end="565:52"><decl pos:start="565:13" pos:end="565:51"><type pos:start="565:13" pos:end="565:19"><name pos:start="565:13" pos:end="565:17">short</name> <modifier pos:start="565:19" pos:end="565:19">*</modifier></type><name pos:start="565:20" pos:end="565:20">p</name> <init pos:start="565:22" pos:end="565:51">= <expr pos:start="565:24" pos:end="565:51"><operator pos:start="565:24" pos:end="565:24">(</operator><name pos:start="565:25" pos:end="565:29">short</name> <operator pos:start="565:31" pos:end="565:31">*</operator><operator pos:start="565:32" pos:end="565:32">)</operator><operator pos:start="565:33" pos:end="565:33">&amp;</operator><name pos:start="565:34" pos:end="565:51"><name pos:start="565:34" pos:end="565:34">c</name><operator pos:start="565:35" pos:end="565:36">-&gt;</operator><name pos:start="565:37" pos:end="565:48">vCCoeffsBank</name><index pos:start="565:49" pos:end="565:51">[<expr pos:start="565:50" pos:end="565:50"><name pos:start="565:50" pos:end="565:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="567:13" pos:end="569:40">for <control pos:start="567:17" pos:end="567:35">(<init pos:start="567:18" pos:end="567:23"><expr pos:start="567:18" pos:end="567:22"><name pos:start="567:18" pos:end="567:18">j</name> <operator pos:start="567:20" pos:end="567:20">=</operator> <literal type="number" pos:start="567:22" pos:end="567:22">0</literal></expr>;</init> <condition pos:start="567:25" pos:end="567:30"><expr pos:start="567:25" pos:end="567:29"><name pos:start="567:25" pos:end="567:25">j</name> <operator pos:start="567:27" pos:end="567:27">&lt;</operator> <literal type="number" pos:start="567:29" pos:end="567:29">8</literal></expr>;</condition> <incr pos:start="567:32" pos:end="567:34"><expr pos:start="567:32" pos:end="567:34"><name pos:start="567:32" pos:end="567:32">j</name><operator pos:start="567:33" pos:end="567:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="569:17" pos:end="569:40"><block_content pos:start="569:17" pos:end="569:40">

                <expr_stmt pos:start="569:17" pos:end="569:40"><expr pos:start="569:17" pos:end="569:39"><name pos:start="569:17" pos:end="569:20"><name pos:start="569:17" pos:end="569:17">p</name><index pos:start="569:18" pos:end="569:20">[<expr pos:start="569:19" pos:end="569:19"><name pos:start="569:19" pos:end="569:19">j</name></expr>]</index></name> <operator pos:start="569:22" pos:end="569:22">=</operator> <name pos:start="569:24" pos:end="569:39"><name pos:start="569:24" pos:end="569:24">c</name><operator pos:start="569:25" pos:end="569:26">-&gt;</operator><name pos:start="569:27" pos:end="569:36">vChrFilter</name><index pos:start="569:37" pos:end="569:39">[<expr pos:start="569:38" pos:end="569:38"><name pos:start="569:38" pos:end="569:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

<cpp:endif pos:start="573:1" pos:end="573:6">#<cpp:directive pos:start="573:2" pos:end="573:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <comment type="line" pos:start="579:5" pos:end="579:89">// calculate buffer sizes so that they won't run out while handling these damn slices</comment>

    <expr_stmt pos:start="581:5" pos:end="581:39"><expr pos:start="581:5" pos:end="581:38"><name pos:start="581:5" pos:end="581:18"><name pos:start="581:5" pos:end="581:5">c</name><operator pos:start="581:6" pos:end="581:7">-&gt;</operator><name pos:start="581:8" pos:end="581:18">vLumBufSize</name></name> <operator pos:start="581:20" pos:end="581:20">=</operator> <name pos:start="581:22" pos:end="581:38"><name pos:start="581:22" pos:end="581:22">c</name><operator pos:start="581:23" pos:end="581:24">-&gt;</operator><name pos:start="581:25" pos:end="581:38">vLumFilterSize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="583:5" pos:end="583:39"><expr pos:start="583:5" pos:end="583:38"><name pos:start="583:5" pos:end="583:18"><name pos:start="583:5" pos:end="583:5">c</name><operator pos:start="583:6" pos:end="583:7">-&gt;</operator><name pos:start="583:8" pos:end="583:18">vChrBufSize</name></name> <operator pos:start="583:20" pos:end="583:20">=</operator> <name pos:start="583:22" pos:end="583:38"><name pos:start="583:22" pos:end="583:22">c</name><operator pos:start="583:23" pos:end="583:24">-&gt;</operator><name pos:start="583:25" pos:end="583:38">vChrFilterSize</name></name></expr>;</expr_stmt>

    <for pos:start="585:5" pos:end="613:5">for <control pos:start="585:9" pos:end="585:30">(<init pos:start="585:10" pos:end="585:15"><expr pos:start="585:10" pos:end="585:14"><name pos:start="585:10" pos:end="585:10">i</name> <operator pos:start="585:12" pos:end="585:12">=</operator> <literal type="number" pos:start="585:14" pos:end="585:14">0</literal></expr>;</init> <condition pos:start="585:17" pos:end="585:25"><expr pos:start="585:17" pos:end="585:24"><name pos:start="585:17" pos:end="585:17">i</name> <operator pos:start="585:19" pos:end="585:19">&lt;</operator> <name pos:start="585:21" pos:end="585:24">dstH</name></expr>;</condition> <incr pos:start="585:27" pos:end="585:29"><expr pos:start="585:27" pos:end="585:29"><name pos:start="585:27" pos:end="585:27">i</name><operator pos:start="585:28" pos:end="585:29">++</operator></expr></incr>)</control> <block pos:start="585:32" pos:end="613:5">{<block_content pos:start="587:9" pos:end="611:52">

        <decl_stmt pos:start="587:9" pos:end="587:55"><decl pos:start="587:9" pos:end="587:54"><type pos:start="587:9" pos:end="587:11"><name pos:start="587:9" pos:end="587:11">int</name></type> <name pos:start="587:13" pos:end="587:16">chrI</name>      <init pos:start="587:23" pos:end="587:54">= <expr pos:start="587:25" pos:end="587:54"><operator pos:start="587:25" pos:end="587:25">(</operator><name pos:start="587:26" pos:end="587:32">int64_t</name><operator pos:start="587:33" pos:end="587:33">)</operator><name pos:start="587:34" pos:end="587:34">i</name> <operator pos:start="587:36" pos:end="587:36">*</operator> <name pos:start="587:38" pos:end="587:47"><name pos:start="587:38" pos:end="587:38">c</name><operator pos:start="587:39" pos:end="587:40">-&gt;</operator><name pos:start="587:41" pos:end="587:47">chrDstH</name></name> <operator pos:start="587:49" pos:end="587:49">/</operator> <name pos:start="587:51" pos:end="587:54">dstH</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="589:9" pos:end="593:56"><decl pos:start="589:9" pos:end="593:55"><type pos:start="589:9" pos:end="589:11"><name pos:start="589:9" pos:end="589:11">int</name></type> <name pos:start="589:13" pos:end="589:21">nextSlice</name> <init pos:start="589:23" pos:end="593:55">= <expr pos:start="589:25" pos:end="593:55"><call pos:start="589:25" pos:end="593:55"><name pos:start="589:25" pos:end="589:29">FFMAX</name><argument_list pos:start="589:30" pos:end="593:55">(<argument pos:start="589:31" pos:end="589:73"><expr pos:start="589:31" pos:end="589:73"><name pos:start="589:31" pos:end="589:49"><name pos:start="589:31" pos:end="589:31">c</name><operator pos:start="589:32" pos:end="589:33">-&gt;</operator><name pos:start="589:34" pos:end="589:46">vLumFilterPos</name><index pos:start="589:47" pos:end="589:49">[<expr pos:start="589:48" pos:end="589:48"><name pos:start="589:48" pos:end="589:48">i</name></expr>]</index></name> <operator pos:start="589:51" pos:end="589:51">+</operator> <name pos:start="589:53" pos:end="589:69"><name pos:start="589:53" pos:end="589:53">c</name><operator pos:start="589:54" pos:end="589:55">-&gt;</operator><name pos:start="589:56" pos:end="589:69">vLumFilterSize</name></name> <operator pos:start="589:71" pos:end="589:71">-</operator> <literal type="number" pos:start="589:73" pos:end="589:73">1</literal></expr></argument>,

                              <argument pos:start="591:31" pos:end="593:54"><expr pos:start="591:31" pos:end="593:54"><operator pos:start="591:31" pos:end="591:31">(</operator><operator pos:start="591:32" pos:end="591:32">(</operator><name pos:start="591:33" pos:end="591:54"><name pos:start="591:33" pos:end="591:33">c</name><operator pos:start="591:34" pos:end="591:35">-&gt;</operator><name pos:start="591:36" pos:end="591:48">vChrFilterPos</name><index pos:start="591:49" pos:end="591:54">[<expr pos:start="591:50" pos:end="591:53"><name pos:start="591:50" pos:end="591:53">chrI</name></expr>]</index></name> <operator pos:start="591:56" pos:end="591:56">+</operator> <name pos:start="591:58" pos:end="591:74"><name pos:start="591:58" pos:end="591:58">c</name><operator pos:start="591:59" pos:end="591:60">-&gt;</operator><name pos:start="591:61" pos:end="591:74">vChrFilterSize</name></name> <operator pos:start="591:76" pos:end="591:76">-</operator> <literal type="number" pos:start="591:78" pos:end="591:78">1</literal><operator pos:start="591:79" pos:end="591:79">)</operator>

                               <operator pos:start="593:32" pos:end="593:33">&lt;&lt;</operator> <name pos:start="593:35" pos:end="593:53"><name pos:start="593:35" pos:end="593:35">c</name><operator pos:start="593:36" pos:end="593:37">-&gt;</operator><name pos:start="593:38" pos:end="593:53">chrSrcVSubSample</name></name><operator pos:start="593:54" pos:end="593:54">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="597:9" pos:end="597:42"><expr pos:start="597:9" pos:end="597:41"><name pos:start="597:9" pos:end="597:17">nextSlice</name> <operator pos:start="597:19" pos:end="597:21">&gt;&gt;=</operator> <name pos:start="597:23" pos:end="597:41"><name pos:start="597:23" pos:end="597:23">c</name><operator pos:start="597:24" pos:end="597:25">-&gt;</operator><name pos:start="597:26" pos:end="597:41">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="599:9" pos:end="599:42"><expr pos:start="599:9" pos:end="599:41"><name pos:start="599:9" pos:end="599:17">nextSlice</name> <operator pos:start="599:19" pos:end="599:21">&lt;&lt;=</operator> <name pos:start="599:23" pos:end="599:41"><name pos:start="599:23" pos:end="599:23">c</name><operator pos:start="599:24" pos:end="599:25">-&gt;</operator><name pos:start="599:26" pos:end="599:41">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="601:9" pos:end="603:61"><if pos:start="601:9" pos:end="603:61">if <condition pos:start="601:12" pos:end="601:61">(<expr pos:start="601:13" pos:end="601:60"><name pos:start="601:13" pos:end="601:31"><name pos:start="601:13" pos:end="601:13">c</name><operator pos:start="601:14" pos:end="601:15">-&gt;</operator><name pos:start="601:16" pos:end="601:28">vLumFilterPos</name><index pos:start="601:29" pos:end="601:31">[<expr pos:start="601:30" pos:end="601:30"><name pos:start="601:30" pos:end="601:30">i</name></expr>]</index></name> <operator pos:start="601:33" pos:end="601:33">+</operator> <name pos:start="601:35" pos:end="601:48"><name pos:start="601:35" pos:end="601:35">c</name><operator pos:start="601:36" pos:end="601:37">-&gt;</operator><name pos:start="601:38" pos:end="601:48">vLumBufSize</name></name> <operator pos:start="601:50" pos:end="601:50">&lt;</operator> <name pos:start="601:52" pos:end="601:60">nextSlice</name></expr>)</condition><block type="pseudo" pos:start="603:13" pos:end="603:61"><block_content pos:start="603:13" pos:end="603:61">

            <expr_stmt pos:start="603:13" pos:end="603:61"><expr pos:start="603:13" pos:end="603:60"><name pos:start="603:13" pos:end="603:26"><name pos:start="603:13" pos:end="603:13">c</name><operator pos:start="603:14" pos:end="603:15">-&gt;</operator><name pos:start="603:16" pos:end="603:26">vLumBufSize</name></name> <operator pos:start="603:28" pos:end="603:28">=</operator> <name pos:start="603:30" pos:end="603:38">nextSlice</name> <operator pos:start="603:40" pos:end="603:40">-</operator> <name pos:start="603:42" pos:end="603:60"><name pos:start="603:42" pos:end="603:42">c</name><operator pos:start="603:43" pos:end="603:44">-&gt;</operator><name pos:start="603:45" pos:end="603:57">vLumFilterPos</name><index pos:start="603:58" pos:end="603:60">[<expr pos:start="603:59" pos:end="603:59"><name pos:start="603:59" pos:end="603:59">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="605:9" pos:end="611:52"><if pos:start="605:9" pos:end="611:52">if <condition pos:start="605:12" pos:end="607:47">(<expr pos:start="605:13" pos:end="607:46"><name pos:start="605:13" pos:end="605:34"><name pos:start="605:13" pos:end="605:13">c</name><operator pos:start="605:14" pos:end="605:15">-&gt;</operator><name pos:start="605:16" pos:end="605:28">vChrFilterPos</name><index pos:start="605:29" pos:end="605:34">[<expr pos:start="605:30" pos:end="605:33"><name pos:start="605:30" pos:end="605:33">chrI</name></expr>]</index></name> <operator pos:start="605:36" pos:end="605:36">+</operator> <name pos:start="605:38" pos:end="605:51"><name pos:start="605:38" pos:end="605:38">c</name><operator pos:start="605:39" pos:end="605:40">-&gt;</operator><name pos:start="605:41" pos:end="605:51">vChrBufSize</name></name> <operator pos:start="605:53" pos:end="605:53">&lt;</operator>

            <operator pos:start="607:13" pos:end="607:13">(</operator><name pos:start="607:14" pos:end="607:22">nextSlice</name> <operator pos:start="607:24" pos:end="607:25">&gt;&gt;</operator> <name pos:start="607:27" pos:end="607:45"><name pos:start="607:27" pos:end="607:27">c</name><operator pos:start="607:28" pos:end="607:29">-&gt;</operator><name pos:start="607:30" pos:end="607:45">chrSrcVSubSample</name></name><operator pos:start="607:46" pos:end="607:46">)</operator></expr>)</condition><block type="pseudo" pos:start="609:13" pos:end="611:52"><block_content pos:start="609:13" pos:end="611:52">

            <expr_stmt pos:start="609:13" pos:end="611:52"><expr pos:start="609:13" pos:end="611:51"><name pos:start="609:13" pos:end="609:26"><name pos:start="609:13" pos:end="609:13">c</name><operator pos:start="609:14" pos:end="609:15">-&gt;</operator><name pos:start="609:16" pos:end="609:26">vChrBufSize</name></name> <operator pos:start="609:28" pos:end="609:28">=</operator> <operator pos:start="609:30" pos:end="609:30">(</operator><name pos:start="609:31" pos:end="609:39">nextSlice</name> <operator pos:start="609:41" pos:end="609:42">&gt;&gt;</operator> <name pos:start="609:44" pos:end="609:62"><name pos:start="609:44" pos:end="609:44">c</name><operator pos:start="609:45" pos:end="609:46">-&gt;</operator><name pos:start="609:47" pos:end="609:62">chrSrcVSubSample</name></name><operator pos:start="609:63" pos:end="609:63">)</operator> <operator pos:start="609:65" pos:end="609:65">-</operator>

                             <name pos:start="611:30" pos:end="611:51"><name pos:start="611:30" pos:end="611:30">c</name><operator pos:start="611:31" pos:end="611:32">-&gt;</operator><name pos:start="611:33" pos:end="611:45">vChrFilterPos</name><index pos:start="611:46" pos:end="611:51">[<expr pos:start="611:47" pos:end="611:50"><name pos:start="611:47" pos:end="611:50">chrI</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="617:5" pos:end="619:74">/* Allocate pixbufs (we use dynamic allocation because otherwise we would

     * need to allocate several megabytes to handle all possible cases) */</comment>

    <expr_stmt pos:start="621:5" pos:end="621:85"><expr pos:start="621:5" pos:end="621:84"><call pos:start="621:5" pos:end="621:84"><name pos:start="621:5" pos:end="621:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="621:21" pos:end="621:84">(<argument pos:start="621:22" pos:end="621:22"><expr pos:start="621:22" pos:end="621:22"><name pos:start="621:22" pos:end="621:22">c</name></expr></argument>, <argument pos:start="621:25" pos:end="621:36"><expr pos:start="621:25" pos:end="621:36"><name pos:start="621:25" pos:end="621:36"><name pos:start="621:25" pos:end="621:25">c</name><operator pos:start="621:26" pos:end="621:27">-&gt;</operator><name pos:start="621:28" pos:end="621:36">lumPixBuf</name></name></expr></argument>,  <argument pos:start="621:40" pos:end="621:77"><expr pos:start="621:40" pos:end="621:77"><name pos:start="621:40" pos:end="621:53"><name pos:start="621:40" pos:end="621:40">c</name><operator pos:start="621:41" pos:end="621:42">-&gt;</operator><name pos:start="621:43" pos:end="621:53">vLumBufSize</name></name> <operator pos:start="621:55" pos:end="621:55">*</operator> <literal type="number" pos:start="621:57" pos:end="621:57">3</literal> <operator pos:start="621:59" pos:end="621:59">*</operator> <sizeof pos:start="621:61" pos:end="621:77">sizeof<argument_list pos:start="621:67" pos:end="621:77">(<argument pos:start="621:68" pos:end="621:76"><expr pos:start="621:68" pos:end="621:76"><name pos:start="621:68" pos:end="621:74">int16_t</name> <operator pos:start="621:76" pos:end="621:76">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="621:80" pos:end="621:83"><expr pos:start="621:80" pos:end="621:83"><name pos:start="621:80" pos:end="621:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="623:5" pos:end="623:85"><expr pos:start="623:5" pos:end="623:84"><call pos:start="623:5" pos:end="623:84"><name pos:start="623:5" pos:end="623:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="623:21" pos:end="623:84">(<argument pos:start="623:22" pos:end="623:22"><expr pos:start="623:22" pos:end="623:22"><name pos:start="623:22" pos:end="623:22">c</name></expr></argument>, <argument pos:start="623:25" pos:end="623:37"><expr pos:start="623:25" pos:end="623:37"><name pos:start="623:25" pos:end="623:37"><name pos:start="623:25" pos:end="623:25">c</name><operator pos:start="623:26" pos:end="623:27">-&gt;</operator><name pos:start="623:28" pos:end="623:37">chrUPixBuf</name></name></expr></argument>, <argument pos:start="623:40" pos:end="623:77"><expr pos:start="623:40" pos:end="623:77"><name pos:start="623:40" pos:end="623:53"><name pos:start="623:40" pos:end="623:40">c</name><operator pos:start="623:41" pos:end="623:42">-&gt;</operator><name pos:start="623:43" pos:end="623:53">vChrBufSize</name></name> <operator pos:start="623:55" pos:end="623:55">*</operator> <literal type="number" pos:start="623:57" pos:end="623:57">3</literal> <operator pos:start="623:59" pos:end="623:59">*</operator> <sizeof pos:start="623:61" pos:end="623:77">sizeof<argument_list pos:start="623:67" pos:end="623:77">(<argument pos:start="623:68" pos:end="623:76"><expr pos:start="623:68" pos:end="623:76"><name pos:start="623:68" pos:end="623:74">int16_t</name> <operator pos:start="623:76" pos:end="623:76">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="623:80" pos:end="623:83"><expr pos:start="623:80" pos:end="623:83"><name pos:start="623:80" pos:end="623:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="625:5" pos:end="625:85"><expr pos:start="625:5" pos:end="625:84"><call pos:start="625:5" pos:end="625:84"><name pos:start="625:5" pos:end="625:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="625:21" pos:end="625:84">(<argument pos:start="625:22" pos:end="625:22"><expr pos:start="625:22" pos:end="625:22"><name pos:start="625:22" pos:end="625:22">c</name></expr></argument>, <argument pos:start="625:25" pos:end="625:37"><expr pos:start="625:25" pos:end="625:37"><name pos:start="625:25" pos:end="625:37"><name pos:start="625:25" pos:end="625:25">c</name><operator pos:start="625:26" pos:end="625:27">-&gt;</operator><name pos:start="625:28" pos:end="625:37">chrVPixBuf</name></name></expr></argument>, <argument pos:start="625:40" pos:end="625:77"><expr pos:start="625:40" pos:end="625:77"><name pos:start="625:40" pos:end="625:53"><name pos:start="625:40" pos:end="625:40">c</name><operator pos:start="625:41" pos:end="625:42">-&gt;</operator><name pos:start="625:43" pos:end="625:53">vChrBufSize</name></name> <operator pos:start="625:55" pos:end="625:55">*</operator> <literal type="number" pos:start="625:57" pos:end="625:57">3</literal> <operator pos:start="625:59" pos:end="625:59">*</operator> <sizeof pos:start="625:61" pos:end="625:77">sizeof<argument_list pos:start="625:67" pos:end="625:77">(<argument pos:start="625:68" pos:end="625:76"><expr pos:start="625:68" pos:end="625:76"><name pos:start="625:68" pos:end="625:74">int16_t</name> <operator pos:start="625:76" pos:end="625:76">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="625:80" pos:end="625:83"><expr pos:start="625:80" pos:end="625:83"><name pos:start="625:80" pos:end="625:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="627:5" pos:end="629:89"><if pos:start="627:5" pos:end="629:89">if <condition pos:start="627:8" pos:end="627:79">(<expr pos:start="627:9" pos:end="627:78"><name pos:start="627:9" pos:end="627:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="627:30" pos:end="627:31">&amp;&amp;</operator> <call pos:start="627:33" pos:end="627:53"><name pos:start="627:33" pos:end="627:39">isALPHA</name><argument_list pos:start="627:40" pos:end="627:53">(<argument pos:start="627:41" pos:end="627:52"><expr pos:start="627:41" pos:end="627:52"><name pos:start="627:41" pos:end="627:52"><name pos:start="627:41" pos:end="627:41">c</name><operator pos:start="627:42" pos:end="627:43">-&gt;</operator><name pos:start="627:44" pos:end="627:52">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="627:55" pos:end="627:56">&amp;&amp;</operator> <call pos:start="627:58" pos:end="627:78"><name pos:start="627:58" pos:end="627:64">isALPHA</name><argument_list pos:start="627:65" pos:end="627:78">(<argument pos:start="627:66" pos:end="627:77"><expr pos:start="627:66" pos:end="627:77"><name pos:start="627:66" pos:end="627:77"><name pos:start="627:66" pos:end="627:66">c</name><operator pos:start="627:67" pos:end="627:68">-&gt;</operator><name pos:start="627:69" pos:end="627:77">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="629:9" pos:end="629:89"><block_content pos:start="629:9" pos:end="629:89">

        <expr_stmt pos:start="629:9" pos:end="629:89"><expr pos:start="629:9" pos:end="629:88"><call pos:start="629:9" pos:end="629:88"><name pos:start="629:9" pos:end="629:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="629:26" pos:end="629:88">(<argument pos:start="629:27" pos:end="629:27"><expr pos:start="629:27" pos:end="629:27"><name pos:start="629:27" pos:end="629:27">c</name></expr></argument>, <argument pos:start="629:30" pos:end="629:41"><expr pos:start="629:30" pos:end="629:41"><name pos:start="629:30" pos:end="629:41"><name pos:start="629:30" pos:end="629:30">c</name><operator pos:start="629:31" pos:end="629:32">-&gt;</operator><name pos:start="629:33" pos:end="629:41">alpPixBuf</name></name></expr></argument>, <argument pos:start="629:44" pos:end="629:81"><expr pos:start="629:44" pos:end="629:81"><name pos:start="629:44" pos:end="629:57"><name pos:start="629:44" pos:end="629:44">c</name><operator pos:start="629:45" pos:end="629:46">-&gt;</operator><name pos:start="629:47" pos:end="629:57">vLumBufSize</name></name> <operator pos:start="629:59" pos:end="629:59">*</operator> <literal type="number" pos:start="629:61" pos:end="629:61">3</literal> <operator pos:start="629:63" pos:end="629:63">*</operator> <sizeof pos:start="629:65" pos:end="629:81">sizeof<argument_list pos:start="629:71" pos:end="629:81">(<argument pos:start="629:72" pos:end="629:80"><expr pos:start="629:72" pos:end="629:80"><name pos:start="629:72" pos:end="629:78">int16_t</name> <operator pos:start="629:80" pos:end="629:80">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="629:84" pos:end="629:87"><expr pos:start="629:84" pos:end="629:87"><name pos:start="629:84" pos:end="629:87">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="631:5" pos:end="633:64">/* Note we need at least one pixel more at the end because of the MMX code

     * (just in case someone wants to replace the 4000/8000). */</comment>

    <comment type="block" pos:start="635:5" pos:end="635:39">/* align at 16 bytes for AltiVec */</comment>

    <for pos:start="637:5" pos:end="645:5">for <control pos:start="637:9" pos:end="637:40">(<init pos:start="637:10" pos:end="637:15"><expr pos:start="637:10" pos:end="637:14"><name pos:start="637:10" pos:end="637:10">i</name> <operator pos:start="637:12" pos:end="637:12">=</operator> <literal type="number" pos:start="637:14" pos:end="637:14">0</literal></expr>;</init> <condition pos:start="637:17" pos:end="637:35"><expr pos:start="637:17" pos:end="637:34"><name pos:start="637:17" pos:end="637:17">i</name> <operator pos:start="637:19" pos:end="637:19">&lt;</operator> <name pos:start="637:21" pos:end="637:34"><name pos:start="637:21" pos:end="637:21">c</name><operator pos:start="637:22" pos:end="637:23">-&gt;</operator><name pos:start="637:24" pos:end="637:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="637:37" pos:end="637:39"><expr pos:start="637:37" pos:end="637:39"><name pos:start="637:37" pos:end="637:37">i</name><operator pos:start="637:38" pos:end="637:39">++</operator></expr></incr>)</control> <block pos:start="637:42" pos:end="645:5">{<block_content pos:start="639:9" pos:end="643:59">

        <expr_stmt pos:start="639:9" pos:end="641:49"><expr pos:start="639:9" pos:end="641:48"><call pos:start="639:9" pos:end="641:48"><name pos:start="639:9" pos:end="639:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="639:26" pos:end="641:48">(<argument pos:start="639:27" pos:end="639:27"><expr pos:start="639:27" pos:end="639:27"><name pos:start="639:27" pos:end="639:27">c</name></expr></argument>, <argument pos:start="639:30" pos:end="639:61"><expr pos:start="639:30" pos:end="639:61"><name pos:start="639:30" pos:end="639:61"><name pos:start="639:30" pos:end="639:30">c</name><operator pos:start="639:31" pos:end="639:32">-&gt;</operator><name pos:start="639:33" pos:end="639:41">lumPixBuf</name><index pos:start="639:42" pos:end="639:61">[<expr pos:start="639:43" pos:end="639:60"><name pos:start="639:43" pos:end="639:43">i</name> <operator pos:start="639:45" pos:end="639:45">+</operator> <name pos:start="639:47" pos:end="639:60"><name pos:start="639:47" pos:end="639:47">c</name><operator pos:start="639:48" pos:end="639:49">-&gt;</operator><name pos:start="639:50" pos:end="639:60">vLumBufSize</name></name></expr>]</index></name></expr></argument>,

                          <argument pos:start="641:27" pos:end="641:41"><expr pos:start="641:27" pos:end="641:41"><name pos:start="641:27" pos:end="641:36">dst_stride</name> <operator pos:start="641:38" pos:end="641:38">+</operator> <literal type="number" pos:start="641:40" pos:end="641:41">16</literal></expr></argument>, <argument pos:start="641:44" pos:end="641:47"><expr pos:start="641:44" pos:end="641:47"><name pos:start="641:44" pos:end="641:47">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="643:9" pos:end="643:59"><expr pos:start="643:9" pos:end="643:58"><name pos:start="643:9" pos:end="643:23"><name pos:start="643:9" pos:end="643:9">c</name><operator pos:start="643:10" pos:end="643:11">-&gt;</operator><name pos:start="643:12" pos:end="643:20">lumPixBuf</name><index pos:start="643:21" pos:end="643:23">[<expr pos:start="643:22" pos:end="643:22"><name pos:start="643:22" pos:end="643:22">i</name></expr>]</index></name> <operator pos:start="643:25" pos:end="643:25">=</operator> <name pos:start="643:27" pos:end="643:58"><name pos:start="643:27" pos:end="643:27">c</name><operator pos:start="643:28" pos:end="643:29">-&gt;</operator><name pos:start="643:30" pos:end="643:38">lumPixBuf</name><index pos:start="643:39" pos:end="643:58">[<expr pos:start="643:40" pos:end="643:57"><name pos:start="643:40" pos:end="643:40">i</name> <operator pos:start="643:42" pos:end="643:42">+</operator> <name pos:start="643:44" pos:end="643:57"><name pos:start="643:44" pos:end="643:44">c</name><operator pos:start="643:45" pos:end="643:46">-&gt;</operator><name pos:start="643:47" pos:end="643:57">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="line" pos:start="647:5" pos:end="647:77">// 64 / (c-&gt;dstBpc &amp; ~7) is the same as 16 / sizeof(scaling_intermediate)</comment>

    <expr_stmt pos:start="649:5" pos:end="649:59"><expr pos:start="649:5" pos:end="649:58"><name pos:start="649:5" pos:end="649:16"><name pos:start="649:5" pos:end="649:5">c</name><operator pos:start="649:6" pos:end="649:7">-&gt;</operator><name pos:start="649:8" pos:end="649:16">uv_off_px</name></name>   <operator pos:start="649:20" pos:end="649:20">=</operator> <name pos:start="649:22" pos:end="649:34">dst_stride_px</name> <operator pos:start="649:36" pos:end="649:36">+</operator> <literal type="number" pos:start="649:38" pos:end="649:39">64</literal> <operator pos:start="649:41" pos:end="649:41">/</operator> <operator pos:start="649:43" pos:end="649:43">(</operator><name pos:start="649:44" pos:end="649:52"><name pos:start="649:44" pos:end="649:44">c</name><operator pos:start="649:45" pos:end="649:46">-&gt;</operator><name pos:start="649:47" pos:end="649:52">dstBpc</name></name> <operator pos:start="649:54" pos:end="649:54">&amp;</operator> <operator pos:start="649:56" pos:end="649:56">~</operator><literal type="number" pos:start="649:57" pos:end="649:57">7</literal><operator pos:start="649:58" pos:end="649:58">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="651:5" pos:end="651:37"><expr pos:start="651:5" pos:end="651:36"><name pos:start="651:5" pos:end="651:18"><name pos:start="651:5" pos:end="651:5">c</name><operator pos:start="651:6" pos:end="651:7">-&gt;</operator><name pos:start="651:8" pos:end="651:18">uv_off_byte</name></name> <operator pos:start="651:20" pos:end="651:20">=</operator> <name pos:start="651:22" pos:end="651:31">dst_stride</name> <operator pos:start="651:33" pos:end="651:33">+</operator> <literal type="number" pos:start="651:35" pos:end="651:36">16</literal></expr>;</expr_stmt>

    <for pos:start="653:5" pos:end="665:5">for <control pos:start="653:9" pos:end="653:40">(<init pos:start="653:10" pos:end="653:15"><expr pos:start="653:10" pos:end="653:14"><name pos:start="653:10" pos:end="653:10">i</name> <operator pos:start="653:12" pos:end="653:12">=</operator> <literal type="number" pos:start="653:14" pos:end="653:14">0</literal></expr>;</init> <condition pos:start="653:17" pos:end="653:35"><expr pos:start="653:17" pos:end="653:34"><name pos:start="653:17" pos:end="653:17">i</name> <operator pos:start="653:19" pos:end="653:19">&lt;</operator> <name pos:start="653:21" pos:end="653:34"><name pos:start="653:21" pos:end="653:21">c</name><operator pos:start="653:22" pos:end="653:23">-&gt;</operator><name pos:start="653:24" pos:end="653:34">vChrBufSize</name></name></expr>;</condition> <incr pos:start="653:37" pos:end="653:39"><expr pos:start="653:37" pos:end="653:39"><name pos:start="653:37" pos:end="653:37">i</name><operator pos:start="653:38" pos:end="653:39">++</operator></expr></incr>)</control> <block pos:start="653:42" pos:end="665:5">{<block_content pos:start="655:9" pos:end="663:68">

        <expr_stmt pos:start="655:9" pos:end="657:52"><expr pos:start="655:9" pos:end="657:51"><call pos:start="655:9" pos:end="657:51"><name pos:start="655:9" pos:end="655:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="655:25" pos:end="657:51">(<argument pos:start="655:26" pos:end="655:26"><expr pos:start="655:26" pos:end="655:26"><name pos:start="655:26" pos:end="655:26">c</name></expr></argument>, <argument pos:start="655:29" pos:end="655:61"><expr pos:start="655:29" pos:end="655:61"><name pos:start="655:29" pos:end="655:61"><name pos:start="655:29" pos:end="655:29">c</name><operator pos:start="655:30" pos:end="655:31">-&gt;</operator><name pos:start="655:32" pos:end="655:41">chrUPixBuf</name><index pos:start="655:42" pos:end="655:61">[<expr pos:start="655:43" pos:end="655:60"><name pos:start="655:43" pos:end="655:43">i</name> <operator pos:start="655:45" pos:end="655:45">+</operator> <name pos:start="655:47" pos:end="655:60"><name pos:start="655:47" pos:end="655:47">c</name><operator pos:start="655:48" pos:end="655:49">-&gt;</operator><name pos:start="655:50" pos:end="655:60">vChrBufSize</name></name></expr>]</index></name></expr></argument>,

                         <argument pos:start="657:26" pos:end="657:44"><expr pos:start="657:26" pos:end="657:44"><name pos:start="657:26" pos:end="657:35">dst_stride</name> <operator pos:start="657:37" pos:end="657:37">*</operator> <literal type="number" pos:start="657:39" pos:end="657:41">2</literal> <operator pos:start="657:41" pos:end="657:41">+</operator> <literal type="number" pos:start="657:43" pos:end="657:44">32</literal></expr></argument>, <argument pos:start="657:47" pos:end="657:50"><expr pos:start="657:47" pos:end="657:50"><name pos:start="657:47" pos:end="657:50">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="659:9" pos:end="659:61"><expr pos:start="659:9" pos:end="659:60"><name pos:start="659:9" pos:end="659:24"><name pos:start="659:9" pos:end="659:9">c</name><operator pos:start="659:10" pos:end="659:11">-&gt;</operator><name pos:start="659:12" pos:end="659:21">chrUPixBuf</name><index pos:start="659:22" pos:end="659:24">[<expr pos:start="659:23" pos:end="659:23"><name pos:start="659:23" pos:end="659:23">i</name></expr>]</index></name> <operator pos:start="659:26" pos:end="659:26">=</operator> <name pos:start="659:28" pos:end="659:60"><name pos:start="659:28" pos:end="659:28">c</name><operator pos:start="659:29" pos:end="659:30">-&gt;</operator><name pos:start="659:31" pos:end="659:40">chrUPixBuf</name><index pos:start="659:41" pos:end="659:60">[<expr pos:start="659:42" pos:end="659:59"><name pos:start="659:42" pos:end="659:42">i</name> <operator pos:start="659:44" pos:end="659:44">+</operator> <name pos:start="659:46" pos:end="659:59"><name pos:start="659:46" pos:end="659:46">c</name><operator pos:start="659:47" pos:end="659:48">-&gt;</operator><name pos:start="659:49" pos:end="659:59">vChrBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="663:68"><expr pos:start="661:9" pos:end="663:67"><name pos:start="661:9" pos:end="661:24"><name pos:start="661:9" pos:end="661:9">c</name><operator pos:start="661:10" pos:end="661:11">-&gt;</operator><name pos:start="661:12" pos:end="661:21">chrVPixBuf</name><index pos:start="661:22" pos:end="661:24">[<expr pos:start="661:23" pos:end="661:23"><name pos:start="661:23" pos:end="661:23">i</name></expr>]</index></name> <operator pos:start="661:26" pos:end="661:26">=</operator> <name pos:start="661:28" pos:end="661:60"><name pos:start="661:28" pos:end="661:28">c</name><operator pos:start="661:29" pos:end="661:30">-&gt;</operator><name pos:start="661:31" pos:end="661:40">chrVPixBuf</name><index pos:start="661:41" pos:end="661:60">[<expr pos:start="661:42" pos:end="661:59"><name pos:start="661:42" pos:end="661:42">i</name> <operator pos:start="661:44" pos:end="661:44">+</operator> <name pos:start="661:46" pos:end="661:59"><name pos:start="661:46" pos:end="661:46">c</name><operator pos:start="661:47" pos:end="661:48">-&gt;</operator><name pos:start="661:49" pos:end="661:59">vChrBufSize</name></name></expr>]</index></name>

                         <operator pos:start="663:26" pos:end="663:26">=</operator> <name pos:start="663:28" pos:end="663:43"><name pos:start="663:28" pos:end="663:28">c</name><operator pos:start="663:29" pos:end="663:30">-&gt;</operator><name pos:start="663:31" pos:end="663:40">chrUPixBuf</name><index pos:start="663:41" pos:end="663:43">[<expr pos:start="663:42" pos:end="663:42"><name pos:start="663:42" pos:end="663:42">i</name></expr>]</index></name> <operator pos:start="663:45" pos:end="663:45">+</operator> <operator pos:start="663:47" pos:end="663:47">(</operator><name pos:start="663:48" pos:end="663:57">dst_stride</name> <operator pos:start="663:59" pos:end="663:60">&gt;&gt;</operator> <literal type="number" pos:start="663:62" pos:end="663:62">1</literal><operator pos:start="663:63" pos:end="663:63">)</operator> <operator pos:start="663:65" pos:end="663:65">+</operator> <literal type="number" pos:start="663:67" pos:end="663:67">8</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="667:5" pos:end="677:9"><if pos:start="667:5" pos:end="677:9">if <condition pos:start="667:8" pos:end="667:45">(<expr pos:start="667:9" pos:end="667:44"><name pos:start="667:9" pos:end="667:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="667:30" pos:end="667:31">&amp;&amp;</operator> <name pos:start="667:33" pos:end="667:44"><name pos:start="667:33" pos:end="667:33">c</name><operator pos:start="667:34" pos:end="667:35">-&gt;</operator><name pos:start="667:36" pos:end="667:44">alpPixBuf</name></name></expr>)</condition><block type="pseudo" pos:start="669:9" pos:end="677:9"><block_content pos:start="669:9" pos:end="677:9">

        <for pos:start="669:9" pos:end="677:9">for <control pos:start="669:13" pos:end="669:44">(<init pos:start="669:14" pos:end="669:19"><expr pos:start="669:14" pos:end="669:18"><name pos:start="669:14" pos:end="669:14">i</name> <operator pos:start="669:16" pos:end="669:16">=</operator> <literal type="number" pos:start="669:18" pos:end="669:18">0</literal></expr>;</init> <condition pos:start="669:21" pos:end="669:39"><expr pos:start="669:21" pos:end="669:38"><name pos:start="669:21" pos:end="669:21">i</name> <operator pos:start="669:23" pos:end="669:23">&lt;</operator> <name pos:start="669:25" pos:end="669:38"><name pos:start="669:25" pos:end="669:25">c</name><operator pos:start="669:26" pos:end="669:27">-&gt;</operator><name pos:start="669:28" pos:end="669:38">vLumBufSize</name></name></expr>;</condition> <incr pos:start="669:41" pos:end="669:43"><expr pos:start="669:41" pos:end="669:43"><name pos:start="669:41" pos:end="669:41">i</name><operator pos:start="669:42" pos:end="669:43">++</operator></expr></incr>)</control> <block pos:start="669:46" pos:end="677:9">{<block_content pos:start="671:13" pos:end="675:63">

            <expr_stmt pos:start="671:13" pos:end="673:53"><expr pos:start="671:13" pos:end="673:52"><call pos:start="671:13" pos:end="673:52"><name pos:start="671:13" pos:end="671:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="671:30" pos:end="673:52">(<argument pos:start="671:31" pos:end="671:31"><expr pos:start="671:31" pos:end="671:31"><name pos:start="671:31" pos:end="671:31">c</name></expr></argument>, <argument pos:start="671:34" pos:end="671:65"><expr pos:start="671:34" pos:end="671:65"><name pos:start="671:34" pos:end="671:65"><name pos:start="671:34" pos:end="671:34">c</name><operator pos:start="671:35" pos:end="671:36">-&gt;</operator><name pos:start="671:37" pos:end="671:45">alpPixBuf</name><index pos:start="671:46" pos:end="671:65">[<expr pos:start="671:47" pos:end="671:64"><name pos:start="671:47" pos:end="671:47">i</name> <operator pos:start="671:49" pos:end="671:49">+</operator> <name pos:start="671:51" pos:end="671:64"><name pos:start="671:51" pos:end="671:51">c</name><operator pos:start="671:52" pos:end="671:53">-&gt;</operator><name pos:start="671:54" pos:end="671:64">vLumBufSize</name></name></expr>]</index></name></expr></argument>,

                              <argument pos:start="673:31" pos:end="673:45"><expr pos:start="673:31" pos:end="673:45"><name pos:start="673:31" pos:end="673:40">dst_stride</name> <operator pos:start="673:42" pos:end="673:42">+</operator> <literal type="number" pos:start="673:44" pos:end="673:45">16</literal></expr></argument>, <argument pos:start="673:48" pos:end="673:51"><expr pos:start="673:48" pos:end="673:51"><name pos:start="673:48" pos:end="673:51">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="675:13" pos:end="675:63"><expr pos:start="675:13" pos:end="675:62"><name pos:start="675:13" pos:end="675:27"><name pos:start="675:13" pos:end="675:13">c</name><operator pos:start="675:14" pos:end="675:15">-&gt;</operator><name pos:start="675:16" pos:end="675:24">alpPixBuf</name><index pos:start="675:25" pos:end="675:27">[<expr pos:start="675:26" pos:end="675:26"><name pos:start="675:26" pos:end="675:26">i</name></expr>]</index></name> <operator pos:start="675:29" pos:end="675:29">=</operator> <name pos:start="675:31" pos:end="675:62"><name pos:start="675:31" pos:end="675:31">c</name><operator pos:start="675:32" pos:end="675:33">-&gt;</operator><name pos:start="675:34" pos:end="675:42">alpPixBuf</name><index pos:start="675:43" pos:end="675:62">[<expr pos:start="675:44" pos:end="675:61"><name pos:start="675:44" pos:end="675:44">i</name> <operator pos:start="675:46" pos:end="675:46">+</operator> <name pos:start="675:48" pos:end="675:61"><name pos:start="675:48" pos:end="675:48">c</name><operator pos:start="675:49" pos:end="675:50">-&gt;</operator><name pos:start="675:51" pos:end="675:61">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="681:5" pos:end="681:80">// try to avoid drawing green stuff between the right end and the stride end</comment>

    <for pos:start="683:5" pos:end="685:57">for <control pos:start="683:9" pos:end="683:40">(<init pos:start="683:10" pos:end="683:15"><expr pos:start="683:10" pos:end="683:14"><name pos:start="683:10" pos:end="683:10">i</name> <operator pos:start="683:12" pos:end="683:12">=</operator> <literal type="number" pos:start="683:14" pos:end="683:14">0</literal></expr>;</init> <condition pos:start="683:17" pos:end="683:35"><expr pos:start="683:17" pos:end="683:34"><name pos:start="683:17" pos:end="683:17">i</name> <operator pos:start="683:19" pos:end="683:19">&lt;</operator> <name pos:start="683:21" pos:end="683:34"><name pos:start="683:21" pos:end="683:21">c</name><operator pos:start="683:22" pos:end="683:23">-&gt;</operator><name pos:start="683:24" pos:end="683:34">vChrBufSize</name></name></expr>;</condition> <incr pos:start="683:37" pos:end="683:39"><expr pos:start="683:37" pos:end="683:39"><name pos:start="683:37" pos:end="683:37">i</name><operator pos:start="683:38" pos:end="683:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="685:9" pos:end="685:57"><block_content pos:start="685:9" pos:end="685:57">

        <expr_stmt pos:start="685:9" pos:end="685:57"><expr pos:start="685:9" pos:end="685:56"><call pos:start="685:9" pos:end="685:56"><name pos:start="685:9" pos:end="685:14">memset</name><argument_list pos:start="685:15" pos:end="685:56">(<argument pos:start="685:16" pos:end="685:31"><expr pos:start="685:16" pos:end="685:31"><name pos:start="685:16" pos:end="685:31"><name pos:start="685:16" pos:end="685:16">c</name><operator pos:start="685:17" pos:end="685:18">-&gt;</operator><name pos:start="685:19" pos:end="685:28">chrUPixBuf</name><index pos:start="685:29" pos:end="685:31">[<expr pos:start="685:30" pos:end="685:30"><name pos:start="685:30" pos:end="685:30">i</name></expr>]</index></name></expr></argument>, <argument pos:start="685:34" pos:end="685:35"><expr pos:start="685:34" pos:end="685:35"><literal type="number" pos:start="685:34" pos:end="685:35">64</literal></expr></argument>, <argument pos:start="685:38" pos:end="685:55"><expr pos:start="685:38" pos:end="685:55"><name pos:start="685:38" pos:end="685:47">dst_stride</name> <operator pos:start="685:49" pos:end="685:49">*</operator> <literal type="number" pos:start="685:51" pos:end="685:53">2</literal> <operator pos:start="685:53" pos:end="685:53">+</operator> <literal type="number" pos:start="685:55" pos:end="685:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="689:5" pos:end="689:31"><expr pos:start="689:5" pos:end="689:30"><call pos:start="689:5" pos:end="689:30"><name pos:start="689:5" pos:end="689:10">assert</name><argument_list pos:start="689:11" pos:end="689:30">(<argument pos:start="689:12" pos:end="689:29"><expr pos:start="689:12" pos:end="689:29"><name pos:start="689:12" pos:end="689:21"><name pos:start="689:12" pos:end="689:12">c</name><operator pos:start="689:13" pos:end="689:14">-&gt;</operator><name pos:start="689:15" pos:end="689:21">chrDstH</name></name> <operator pos:start="689:23" pos:end="689:24">&lt;=</operator> <name pos:start="689:26" pos:end="689:29">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="693:5" pos:end="807:5"><if pos:start="693:5" pos:end="807:5">if <condition pos:start="693:8" pos:end="693:31">(<expr pos:start="693:9" pos:end="693:30"><name pos:start="693:9" pos:end="693:13">flags</name> <operator pos:start="693:15" pos:end="693:15">&amp;</operator> <name pos:start="693:17" pos:end="693:30">SWS_PRINT_INFO</name></expr>)</condition> <block pos:start="693:33" pos:end="807:5">{<block_content pos:start="695:9" pos:end="805:39">

        <if_stmt pos:start="695:9" pos:end="741:59"><if pos:start="695:9" pos:end="697:61">if <condition pos:start="695:12" pos:end="695:38">(<expr pos:start="695:13" pos:end="695:37"><name pos:start="695:13" pos:end="695:17">flags</name> <operator pos:start="695:19" pos:end="695:19">&amp;</operator> <name pos:start="695:21" pos:end="695:37">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="697:13" pos:end="697:61"><block_content pos:start="697:13" pos:end="697:61">

            <expr_stmt pos:start="697:13" pos:end="697:61"><expr pos:start="697:13" pos:end="697:60"><call pos:start="697:13" pos:end="697:60"><name pos:start="697:13" pos:end="697:18">av_log</name><argument_list pos:start="697:19" pos:end="697:60">(<argument pos:start="697:20" pos:end="697:20"><expr pos:start="697:20" pos:end="697:20"><name pos:start="697:20" pos:end="697:20">c</name></expr></argument>, <argument pos:start="697:23" pos:end="697:33"><expr pos:start="697:23" pos:end="697:33"><name pos:start="697:23" pos:end="697:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="697:36" pos:end="697:59"><expr pos:start="697:36" pos:end="697:59"><literal type="string" pos:start="697:36" pos:end="697:59">"FAST_BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="699:9" pos:end="701:56">else if <condition pos:start="699:17" pos:end="699:38">(<expr pos:start="699:18" pos:end="699:37"><name pos:start="699:18" pos:end="699:22">flags</name> <operator pos:start="699:24" pos:end="699:24">&amp;</operator> <name pos:start="699:26" pos:end="699:37">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="701:13" pos:end="701:56"><block_content pos:start="701:13" pos:end="701:56">

            <expr_stmt pos:start="701:13" pos:end="701:56"><expr pos:start="701:13" pos:end="701:55"><call pos:start="701:13" pos:end="701:55"><name pos:start="701:13" pos:end="701:18">av_log</name><argument_list pos:start="701:19" pos:end="701:55">(<argument pos:start="701:20" pos:end="701:20"><expr pos:start="701:20" pos:end="701:20"><name pos:start="701:20" pos:end="701:20">c</name></expr></argument>, <argument pos:start="701:23" pos:end="701:33"><expr pos:start="701:23" pos:end="701:33"><name pos:start="701:23" pos:end="701:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="701:36" pos:end="701:54"><expr pos:start="701:36" pos:end="701:54"><literal type="string" pos:start="701:36" pos:end="701:54">"BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="703:9" pos:end="705:55">else if <condition pos:start="703:17" pos:end="703:37">(<expr pos:start="703:18" pos:end="703:36"><name pos:start="703:18" pos:end="703:22">flags</name> <operator pos:start="703:24" pos:end="703:24">&amp;</operator> <name pos:start="703:26" pos:end="703:36">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="705:13" pos:end="705:55"><block_content pos:start="705:13" pos:end="705:55">

            <expr_stmt pos:start="705:13" pos:end="705:55"><expr pos:start="705:13" pos:end="705:54"><call pos:start="705:13" pos:end="705:54"><name pos:start="705:13" pos:end="705:18">av_log</name><argument_list pos:start="705:19" pos:end="705:54">(<argument pos:start="705:20" pos:end="705:20"><expr pos:start="705:20" pos:end="705:20"><name pos:start="705:20" pos:end="705:20">c</name></expr></argument>, <argument pos:start="705:23" pos:end="705:33"><expr pos:start="705:23" pos:end="705:33"><name pos:start="705:23" pos:end="705:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="705:36" pos:end="705:53"><expr pos:start="705:36" pos:end="705:53"><literal type="string" pos:start="705:36" pos:end="705:53">"BICUBIC scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="707:9" pos:end="709:60">else if <condition pos:start="707:17" pos:end="707:31">(<expr pos:start="707:18" pos:end="707:30"><name pos:start="707:18" pos:end="707:22">flags</name> <operator pos:start="707:24" pos:end="707:24">&amp;</operator> <name pos:start="707:26" pos:end="707:30">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="709:13" pos:end="709:60"><block_content pos:start="709:13" pos:end="709:60">

            <expr_stmt pos:start="709:13" pos:end="709:60"><expr pos:start="709:13" pos:end="709:59"><call pos:start="709:13" pos:end="709:59"><name pos:start="709:13" pos:end="709:18">av_log</name><argument_list pos:start="709:19" pos:end="709:59">(<argument pos:start="709:20" pos:end="709:20"><expr pos:start="709:20" pos:end="709:20"><name pos:start="709:20" pos:end="709:20">c</name></expr></argument>, <argument pos:start="709:23" pos:end="709:33"><expr pos:start="709:23" pos:end="709:33"><name pos:start="709:23" pos:end="709:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="709:36" pos:end="709:58"><expr pos:start="709:36" pos:end="709:58"><literal type="string" pos:start="709:36" pos:end="709:58">"Experimental scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="711:9" pos:end="713:72">else if <condition pos:start="711:17" pos:end="711:35">(<expr pos:start="711:18" pos:end="711:34"><name pos:start="711:18" pos:end="711:22">flags</name> <operator pos:start="711:24" pos:end="711:24">&amp;</operator> <name pos:start="711:26" pos:end="711:34">SWS_POINT</name></expr>)</condition><block type="pseudo" pos:start="713:13" pos:end="713:72"><block_content pos:start="713:13" pos:end="713:72">

            <expr_stmt pos:start="713:13" pos:end="713:72"><expr pos:start="713:13" pos:end="713:71"><call pos:start="713:13" pos:end="713:71"><name pos:start="713:13" pos:end="713:18">av_log</name><argument_list pos:start="713:19" pos:end="713:71">(<argument pos:start="713:20" pos:end="713:20"><expr pos:start="713:20" pos:end="713:20"><name pos:start="713:20" pos:end="713:20">c</name></expr></argument>, <argument pos:start="713:23" pos:end="713:33"><expr pos:start="713:23" pos:end="713:33"><name pos:start="713:23" pos:end="713:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="713:36" pos:end="713:70"><expr pos:start="713:36" pos:end="713:70"><literal type="string" pos:start="713:36" pos:end="713:70">"Nearest Neighbor / POINT scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="715:9" pos:end="717:62">else if <condition pos:start="715:17" pos:end="715:34">(<expr pos:start="715:18" pos:end="715:33"><name pos:start="715:18" pos:end="715:22">flags</name> <operator pos:start="715:24" pos:end="715:24">&amp;</operator> <name pos:start="715:26" pos:end="715:33">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="717:13" pos:end="717:62"><block_content pos:start="717:13" pos:end="717:62">

            <expr_stmt pos:start="717:13" pos:end="717:62"><expr pos:start="717:13" pos:end="717:61"><call pos:start="717:13" pos:end="717:61"><name pos:start="717:13" pos:end="717:18">av_log</name><argument_list pos:start="717:19" pos:end="717:61">(<argument pos:start="717:20" pos:end="717:20"><expr pos:start="717:20" pos:end="717:20"><name pos:start="717:20" pos:end="717:20">c</name></expr></argument>, <argument pos:start="717:23" pos:end="717:33"><expr pos:start="717:23" pos:end="717:33"><name pos:start="717:23" pos:end="717:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="717:36" pos:end="717:60"><expr pos:start="717:36" pos:end="717:60"><literal type="string" pos:start="717:36" pos:end="717:60">"Area Averaging scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="719:9" pos:end="721:78">else if <condition pos:start="719:17" pos:end="719:38">(<expr pos:start="719:18" pos:end="719:37"><name pos:start="719:18" pos:end="719:22">flags</name> <operator pos:start="719:24" pos:end="719:24">&amp;</operator> <name pos:start="719:26" pos:end="719:37">SWS_BICUBLIN</name></expr>)</condition><block type="pseudo" pos:start="721:13" pos:end="721:78"><block_content pos:start="721:13" pos:end="721:78">

            <expr_stmt pos:start="721:13" pos:end="721:78"><expr pos:start="721:13" pos:end="721:77"><call pos:start="721:13" pos:end="721:77"><name pos:start="721:13" pos:end="721:18">av_log</name><argument_list pos:start="721:19" pos:end="721:77">(<argument pos:start="721:20" pos:end="721:20"><expr pos:start="721:20" pos:end="721:20"><name pos:start="721:20" pos:end="721:20">c</name></expr></argument>, <argument pos:start="721:23" pos:end="721:33"><expr pos:start="721:23" pos:end="721:33"><name pos:start="721:23" pos:end="721:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="721:36" pos:end="721:76"><expr pos:start="721:36" pos:end="721:76"><literal type="string" pos:start="721:36" pos:end="721:76">"luma BICUBIC / chroma BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="723:9" pos:end="725:56">else if <condition pos:start="723:17" pos:end="723:35">(<expr pos:start="723:18" pos:end="723:34"><name pos:start="723:18" pos:end="723:22">flags</name> <operator pos:start="723:24" pos:end="723:24">&amp;</operator> <name pos:start="723:26" pos:end="723:34">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="725:13" pos:end="725:56"><block_content pos:start="725:13" pos:end="725:56">

            <expr_stmt pos:start="725:13" pos:end="725:56"><expr pos:start="725:13" pos:end="725:55"><call pos:start="725:13" pos:end="725:55"><name pos:start="725:13" pos:end="725:18">av_log</name><argument_list pos:start="725:19" pos:end="725:55">(<argument pos:start="725:20" pos:end="725:20"><expr pos:start="725:20" pos:end="725:20"><name pos:start="725:20" pos:end="725:20">c</name></expr></argument>, <argument pos:start="725:23" pos:end="725:33"><expr pos:start="725:23" pos:end="725:33"><name pos:start="725:23" pos:end="725:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="725:36" pos:end="725:54"><expr pos:start="725:36" pos:end="725:54"><literal type="string" pos:start="725:36" pos:end="725:54">"Gaussian scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="727:9" pos:end="729:52">else if <condition pos:start="727:17" pos:end="727:34">(<expr pos:start="727:18" pos:end="727:33"><name pos:start="727:18" pos:end="727:22">flags</name> <operator pos:start="727:24" pos:end="727:24">&amp;</operator> <name pos:start="727:26" pos:end="727:33">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="729:13" pos:end="729:52"><block_content pos:start="729:13" pos:end="729:52">

            <expr_stmt pos:start="729:13" pos:end="729:52"><expr pos:start="729:13" pos:end="729:51"><call pos:start="729:13" pos:end="729:51"><name pos:start="729:13" pos:end="729:18">av_log</name><argument_list pos:start="729:19" pos:end="729:51">(<argument pos:start="729:20" pos:end="729:20"><expr pos:start="729:20" pos:end="729:20"><name pos:start="729:20" pos:end="729:20">c</name></expr></argument>, <argument pos:start="729:23" pos:end="729:33"><expr pos:start="729:23" pos:end="729:33"><name pos:start="729:23" pos:end="729:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="729:36" pos:end="729:50"><expr pos:start="729:36" pos:end="729:50"><literal type="string" pos:start="729:36" pos:end="729:50">"Sinc scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="731:9" pos:end="733:55">else if <condition pos:start="731:17" pos:end="731:37">(<expr pos:start="731:18" pos:end="731:36"><name pos:start="731:18" pos:end="731:22">flags</name> <operator pos:start="731:24" pos:end="731:24">&amp;</operator> <name pos:start="731:26" pos:end="731:36">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="733:13" pos:end="733:55"><block_content pos:start="733:13" pos:end="733:55">

            <expr_stmt pos:start="733:13" pos:end="733:55"><expr pos:start="733:13" pos:end="733:54"><call pos:start="733:13" pos:end="733:54"><name pos:start="733:13" pos:end="733:18">av_log</name><argument_list pos:start="733:19" pos:end="733:54">(<argument pos:start="733:20" pos:end="733:20"><expr pos:start="733:20" pos:end="733:20"><name pos:start="733:20" pos:end="733:20">c</name></expr></argument>, <argument pos:start="733:23" pos:end="733:33"><expr pos:start="733:23" pos:end="733:33"><name pos:start="733:23" pos:end="733:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="733:36" pos:end="733:53"><expr pos:start="733:36" pos:end="733:53"><literal type="string" pos:start="733:36" pos:end="733:53">"Lanczos scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="735:9" pos:end="737:62">else if <condition pos:start="735:17" pos:end="735:36">(<expr pos:start="735:18" pos:end="735:35"><name pos:start="735:18" pos:end="735:22">flags</name> <operator pos:start="735:24" pos:end="735:24">&amp;</operator> <name pos:start="735:26" pos:end="735:35">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="737:13" pos:end="737:62"><block_content pos:start="737:13" pos:end="737:62">

            <expr_stmt pos:start="737:13" pos:end="737:62"><expr pos:start="737:13" pos:end="737:61"><call pos:start="737:13" pos:end="737:61"><name pos:start="737:13" pos:end="737:18">av_log</name><argument_list pos:start="737:19" pos:end="737:61">(<argument pos:start="737:20" pos:end="737:20"><expr pos:start="737:20" pos:end="737:20"><name pos:start="737:20" pos:end="737:20">c</name></expr></argument>, <argument pos:start="737:23" pos:end="737:33"><expr pos:start="737:23" pos:end="737:33"><name pos:start="737:23" pos:end="737:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="737:36" pos:end="737:60"><expr pos:start="737:36" pos:end="737:60"><literal type="string" pos:start="737:36" pos:end="737:60">"Bicubic spline scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="739:9" pos:end="741:59">else<block type="pseudo" pos:start="741:13" pos:end="741:59"><block_content pos:start="741:13" pos:end="741:59">

            <expr_stmt pos:start="741:13" pos:end="741:59"><expr pos:start="741:13" pos:end="741:58"><call pos:start="741:13" pos:end="741:58"><name pos:start="741:13" pos:end="741:18">av_log</name><argument_list pos:start="741:19" pos:end="741:58">(<argument pos:start="741:20" pos:end="741:20"><expr pos:start="741:20" pos:end="741:20"><name pos:start="741:20" pos:end="741:20">c</name></expr></argument>, <argument pos:start="741:23" pos:end="741:33"><expr pos:start="741:23" pos:end="741:33"><name pos:start="741:23" pos:end="741:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="741:36" pos:end="741:57"><expr pos:start="741:36" pos:end="741:57"><literal type="string" pos:start="741:36" pos:end="741:57">"ehh flags invalid?! "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="745:9" pos:end="765:43"><expr pos:start="745:9" pos:end="765:42"><call pos:start="745:9" pos:end="765:42"><name pos:start="745:9" pos:end="745:14">av_log</name><argument_list pos:start="745:15" pos:end="765:42">(<argument pos:start="745:16" pos:end="745:16"><expr pos:start="745:16" pos:end="745:16"><name pos:start="745:16" pos:end="745:16">c</name></expr></argument>, <argument pos:start="745:19" pos:end="745:29"><expr pos:start="745:19" pos:end="745:29"><name pos:start="745:19" pos:end="745:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="745:32" pos:end="745:49"><expr pos:start="745:32" pos:end="745:49"><literal type="string" pos:start="745:32" pos:end="745:49">"from %s to %s%s "</literal></expr></argument>,

               <argument pos:start="747:16" pos:end="747:41"><expr pos:start="747:16" pos:end="747:41"><call pos:start="747:16" pos:end="747:41"><name pos:start="747:16" pos:end="747:30">sws_format_name</name><argument_list pos:start="747:31" pos:end="747:41">(<argument pos:start="747:32" pos:end="747:40"><expr pos:start="747:32" pos:end="747:40"><name pos:start="747:32" pos:end="747:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

<cpp:ifdef pos:start="749:1" pos:end="749:18">#<cpp:directive pos:start="749:2" pos:end="749:6">ifdef</cpp:directive> <name pos:start="749:8" pos:end="749:18">DITHER1XBPP</name></cpp:ifdef>

               <argument pos:start="751:16" pos:end="757:77"><expr pos:start="751:16" pos:end="757:77"><ternary pos:start="751:16" pos:end="757:77"><condition pos:start="751:16" pos:end="755:79"><expr pos:start="751:16" pos:end="755:77"><name pos:start="751:16" pos:end="751:24">dstFormat</name> <operator pos:start="751:26" pos:end="751:27">==</operator> <name pos:start="751:29" pos:end="751:42">PIX_FMT_BGR555</name>   <operator pos:start="751:46" pos:end="751:47">||</operator> <name pos:start="751:49" pos:end="751:57">dstFormat</name> <operator pos:start="751:59" pos:end="751:60">==</operator> <name pos:start="751:62" pos:end="751:75">PIX_FMT_BGR565</name>   <operator pos:start="751:79" pos:end="751:80">||</operator>

               <name pos:start="753:16" pos:end="753:24">dstFormat</name> <operator pos:start="753:26" pos:end="753:27">==</operator> <name pos:start="753:29" pos:end="753:44">PIX_FMT_RGB444BE</name> <operator pos:start="753:46" pos:end="753:47">||</operator> <name pos:start="753:49" pos:end="753:57">dstFormat</name> <operator pos:start="753:59" pos:end="753:60">==</operator> <name pos:start="753:62" pos:end="753:77">PIX_FMT_RGB444LE</name> <operator pos:start="753:79" pos:end="753:80">||</operator>

               <name pos:start="755:16" pos:end="755:24">dstFormat</name> <operator pos:start="755:26" pos:end="755:27">==</operator> <name pos:start="755:29" pos:end="755:44">PIX_FMT_BGR444BE</name> <operator pos:start="755:46" pos:end="755:47">||</operator> <name pos:start="755:49" pos:end="755:57">dstFormat</name> <operator pos:start="755:59" pos:end="755:60">==</operator> <name pos:start="755:62" pos:end="755:77">PIX_FMT_BGR444LE</name></expr> ?</condition><then pos:start="757:62" pos:end="757:72">

                                                             <expr pos:start="757:62" pos:end="757:72"><literal type="string" pos:start="757:62" pos:end="757:72">"dithered "</literal></expr> </then><else pos:start="757:74" pos:end="757:77">: <expr pos:start="757:76" pos:end="757:77"><literal type="string" pos:start="757:76" pos:end="757:77">""</literal></expr></else></ternary></expr></argument>,

<cpp:else pos:start="759:1" pos:end="759:5">#<cpp:directive pos:start="759:2" pos:end="759:5">else</cpp:directive></cpp:else>

               <argument pos:start="761:16" pos:end="761:17"><expr pos:start="761:16" pos:end="761:17"><literal type="string" pos:start="761:16" pos:end="761:17">""</literal></expr></argument>,

<cpp:endif pos:start="763:1" pos:end="763:6">#<cpp:directive pos:start="763:2" pos:end="763:6">endif</cpp:directive></cpp:endif>

               <argument pos:start="765:16" pos:end="765:41"><expr pos:start="765:16" pos:end="765:41"><call pos:start="765:16" pos:end="765:41"><name pos:start="765:16" pos:end="765:30">sws_format_name</name><argument_list pos:start="765:31" pos:end="765:41">(<argument pos:start="765:32" pos:end="765:40"><expr pos:start="765:32" pos:end="765:40"><name pos:start="765:32" pos:end="765:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="769:9" pos:end="787:48"><if pos:start="769:9" pos:end="771:51">if <condition pos:start="769:12" pos:end="769:58">(<expr pos:start="769:13" pos:end="769:57"><name pos:start="769:13" pos:end="769:23">HAVE_MMXEXT</name> <operator pos:start="769:25" pos:end="769:26">&amp;&amp;</operator> <name pos:start="769:28" pos:end="769:36">cpu_flags</name> <operator pos:start="769:38" pos:end="769:38">&amp;</operator> <name pos:start="769:40" pos:end="769:57">AV_CPU_FLAG_MMXEXT</name></expr>)</condition><block type="pseudo" pos:start="771:13" pos:end="771:51"><block_content pos:start="771:13" pos:end="771:51">

            <expr_stmt pos:start="771:13" pos:end="771:51"><expr pos:start="771:13" pos:end="771:50"><call pos:start="771:13" pos:end="771:50"><name pos:start="771:13" pos:end="771:18">av_log</name><argument_list pos:start="771:19" pos:end="771:50">(<argument pos:start="771:20" pos:end="771:20"><expr pos:start="771:20" pos:end="771:20"><name pos:start="771:20" pos:end="771:20">c</name></expr></argument>, <argument pos:start="771:23" pos:end="771:33"><expr pos:start="771:23" pos:end="771:33"><name pos:start="771:23" pos:end="771:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="771:36" pos:end="771:49"><expr pos:start="771:36" pos:end="771:49"><literal type="string" pos:start="771:36" pos:end="771:49">"using MMX2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="773:9" pos:end="775:52">else if <condition pos:start="773:17" pos:end="773:64">(<expr pos:start="773:18" pos:end="773:63"><name pos:start="773:18" pos:end="773:30">HAVE_AMD3DNOW</name> <operator pos:start="773:32" pos:end="773:33">&amp;&amp;</operator> <name pos:start="773:35" pos:end="773:43">cpu_flags</name> <operator pos:start="773:45" pos:end="773:45">&amp;</operator> <name pos:start="773:47" pos:end="773:63">AV_CPU_FLAG_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="775:13" pos:end="775:52"><block_content pos:start="775:13" pos:end="775:52">

            <expr_stmt pos:start="775:13" pos:end="775:52"><expr pos:start="775:13" pos:end="775:51"><call pos:start="775:13" pos:end="775:51"><name pos:start="775:13" pos:end="775:18">av_log</name><argument_list pos:start="775:19" pos:end="775:51">(<argument pos:start="775:20" pos:end="775:20"><expr pos:start="775:20" pos:end="775:20"><name pos:start="775:20" pos:end="775:20">c</name></expr></argument>, <argument pos:start="775:23" pos:end="775:33"><expr pos:start="775:23" pos:end="775:33"><name pos:start="775:23" pos:end="775:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="775:36" pos:end="775:50"><expr pos:start="775:36" pos:end="775:50"><literal type="string" pos:start="775:36" pos:end="775:50">"using 3DNOW\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="777:9" pos:end="779:50">else if <condition pos:start="777:17" pos:end="777:57">(<expr pos:start="777:18" pos:end="777:56"><name pos:start="777:18" pos:end="777:25">HAVE_MMX</name> <operator pos:start="777:27" pos:end="777:28">&amp;&amp;</operator> <name pos:start="777:30" pos:end="777:38">cpu_flags</name> <operator pos:start="777:40" pos:end="777:40">&amp;</operator> <name pos:start="777:42" pos:end="777:56">AV_CPU_FLAG_MMX</name></expr>)</condition><block type="pseudo" pos:start="779:13" pos:end="779:50"><block_content pos:start="779:13" pos:end="779:50">

            <expr_stmt pos:start="779:13" pos:end="779:50"><expr pos:start="779:13" pos:end="779:49"><call pos:start="779:13" pos:end="779:49"><name pos:start="779:13" pos:end="779:18">av_log</name><argument_list pos:start="779:19" pos:end="779:49">(<argument pos:start="779:20" pos:end="779:20"><expr pos:start="779:20" pos:end="779:20"><name pos:start="779:20" pos:end="779:20">c</name></expr></argument>, <argument pos:start="779:23" pos:end="779:33"><expr pos:start="779:23" pos:end="779:33"><name pos:start="779:23" pos:end="779:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="779:36" pos:end="779:48"><expr pos:start="779:36" pos:end="779:48"><literal type="string" pos:start="779:36" pos:end="779:48">"using MMX\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="781:9" pos:end="783:54">else if <condition pos:start="781:17" pos:end="781:65">(<expr pos:start="781:18" pos:end="781:64"><name pos:start="781:18" pos:end="781:29">HAVE_ALTIVEC</name> <operator pos:start="781:31" pos:end="781:32">&amp;&amp;</operator> <name pos:start="781:34" pos:end="781:42">cpu_flags</name> <operator pos:start="781:44" pos:end="781:44">&amp;</operator> <name pos:start="781:46" pos:end="781:64">AV_CPU_FLAG_ALTIVEC</name></expr>)</condition><block type="pseudo" pos:start="783:13" pos:end="783:54"><block_content pos:start="783:13" pos:end="783:54">

            <expr_stmt pos:start="783:13" pos:end="783:54"><expr pos:start="783:13" pos:end="783:53"><call pos:start="783:13" pos:end="783:53"><name pos:start="783:13" pos:end="783:18">av_log</name><argument_list pos:start="783:19" pos:end="783:53">(<argument pos:start="783:20" pos:end="783:20"><expr pos:start="783:20" pos:end="783:20"><name pos:start="783:20" pos:end="783:20">c</name></expr></argument>, <argument pos:start="783:23" pos:end="783:33"><expr pos:start="783:23" pos:end="783:33"><name pos:start="783:23" pos:end="783:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="783:36" pos:end="783:52"><expr pos:start="783:36" pos:end="783:52"><literal type="string" pos:start="783:36" pos:end="783:52">"using AltiVec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="785:9" pos:end="787:48">else<block type="pseudo" pos:start="787:13" pos:end="787:48"><block_content pos:start="787:13" pos:end="787:48">

            <expr_stmt pos:start="787:13" pos:end="787:48"><expr pos:start="787:13" pos:end="787:47"><call pos:start="787:13" pos:end="787:47"><name pos:start="787:13" pos:end="787:18">av_log</name><argument_list pos:start="787:19" pos:end="787:47">(<argument pos:start="787:20" pos:end="787:20"><expr pos:start="787:20" pos:end="787:20"><name pos:start="787:20" pos:end="787:20">c</name></expr></argument>, <argument pos:start="787:23" pos:end="787:33"><expr pos:start="787:23" pos:end="787:33"><name pos:start="787:23" pos:end="787:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="787:36" pos:end="787:46"><expr pos:start="787:36" pos:end="787:46"><literal type="string" pos:start="787:36" pos:end="787:46">"using C\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="791:9" pos:end="791:78"><expr pos:start="791:9" pos:end="791:77"><call pos:start="791:9" pos:end="791:77"><name pos:start="791:9" pos:end="791:14">av_log</name><argument_list pos:start="791:15" pos:end="791:77">(<argument pos:start="791:16" pos:end="791:16"><expr pos:start="791:16" pos:end="791:16"><name pos:start="791:16" pos:end="791:16">c</name></expr></argument>, <argument pos:start="791:19" pos:end="791:32"><expr pos:start="791:19" pos:end="791:32"><name pos:start="791:19" pos:end="791:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="791:35" pos:end="791:52"><expr pos:start="791:35" pos:end="791:52"><literal type="string" pos:start="791:35" pos:end="791:52">"%dx%d -&gt; %dx%d\n"</literal></expr></argument>, <argument pos:start="791:55" pos:end="791:58"><expr pos:start="791:55" pos:end="791:58"><name pos:start="791:55" pos:end="791:58">srcW</name></expr></argument>, <argument pos:start="791:61" pos:end="791:64"><expr pos:start="791:61" pos:end="791:64"><name pos:start="791:61" pos:end="791:64">srcH</name></expr></argument>, <argument pos:start="791:67" pos:end="791:70"><expr pos:start="791:67" pos:end="791:70"><name pos:start="791:67" pos:end="791:70">dstW</name></expr></argument>, <argument pos:start="791:73" pos:end="791:76"><expr pos:start="791:73" pos:end="791:76"><name pos:start="791:73" pos:end="791:76">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="793:9" pos:end="797:75"><expr pos:start="793:9" pos:end="797:74"><call pos:start="793:9" pos:end="797:74"><name pos:start="793:9" pos:end="793:14">av_log</name><argument_list pos:start="793:15" pos:end="797:74">(<argument pos:start="793:16" pos:end="793:16"><expr pos:start="793:16" pos:end="793:16"><name pos:start="793:16" pos:end="793:16">c</name></expr></argument>, <argument pos:start="793:19" pos:end="793:30"><expr pos:start="793:19" pos:end="793:30"><name pos:start="793:19" pos:end="793:30">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="795:16" pos:end="795:70"><expr pos:start="795:16" pos:end="795:70"><literal type="string" pos:start="795:16" pos:end="795:70">"lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="797:16" pos:end="797:22"><expr pos:start="797:16" pos:end="797:22"><name pos:start="797:16" pos:end="797:22"><name pos:start="797:16" pos:end="797:16">c</name><operator pos:start="797:17" pos:end="797:18">-&gt;</operator><name pos:start="797:19" pos:end="797:22">srcW</name></name></expr></argument>, <argument pos:start="797:25" pos:end="797:31"><expr pos:start="797:25" pos:end="797:31"><name pos:start="797:25" pos:end="797:31"><name pos:start="797:25" pos:end="797:25">c</name><operator pos:start="797:26" pos:end="797:27">-&gt;</operator><name pos:start="797:28" pos:end="797:31">srcH</name></name></expr></argument>, <argument pos:start="797:34" pos:end="797:40"><expr pos:start="797:34" pos:end="797:40"><name pos:start="797:34" pos:end="797:40"><name pos:start="797:34" pos:end="797:34">c</name><operator pos:start="797:35" pos:end="797:36">-&gt;</operator><name pos:start="797:37" pos:end="797:40">dstW</name></name></expr></argument>, <argument pos:start="797:43" pos:end="797:49"><expr pos:start="797:43" pos:end="797:49"><name pos:start="797:43" pos:end="797:49"><name pos:start="797:43" pos:end="797:43">c</name><operator pos:start="797:44" pos:end="797:45">-&gt;</operator><name pos:start="797:46" pos:end="797:49">dstH</name></name></expr></argument>, <argument pos:start="797:52" pos:end="797:61"><expr pos:start="797:52" pos:end="797:61"><name pos:start="797:52" pos:end="797:61"><name pos:start="797:52" pos:end="797:52">c</name><operator pos:start="797:53" pos:end="797:54">-&gt;</operator><name pos:start="797:55" pos:end="797:61">lumXInc</name></name></expr></argument>, <argument pos:start="797:64" pos:end="797:73"><expr pos:start="797:64" pos:end="797:73"><name pos:start="797:64" pos:end="797:73"><name pos:start="797:64" pos:end="797:64">c</name><operator pos:start="797:65" pos:end="797:66">-&gt;</operator><name pos:start="797:67" pos:end="797:73">lumYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="799:9" pos:end="805:39"><expr pos:start="799:9" pos:end="805:38"><call pos:start="799:9" pos:end="805:38"><name pos:start="799:9" pos:end="799:14">av_log</name><argument_list pos:start="799:15" pos:end="805:38">(<argument pos:start="799:16" pos:end="799:16"><expr pos:start="799:16" pos:end="799:16"><name pos:start="799:16" pos:end="799:16">c</name></expr></argument>, <argument pos:start="799:19" pos:end="799:30"><expr pos:start="799:19" pos:end="799:30"><name pos:start="799:19" pos:end="799:30">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="801:16" pos:end="801:70"><expr pos:start="801:16" pos:end="801:70"><literal type="string" pos:start="801:16" pos:end="801:70">"chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="803:16" pos:end="803:25"><expr pos:start="803:16" pos:end="803:25"><name pos:start="803:16" pos:end="803:25"><name pos:start="803:16" pos:end="803:16">c</name><operator pos:start="803:17" pos:end="803:18">-&gt;</operator><name pos:start="803:19" pos:end="803:25">chrSrcW</name></name></expr></argument>, <argument pos:start="803:28" pos:end="803:37"><expr pos:start="803:28" pos:end="803:37"><name pos:start="803:28" pos:end="803:37"><name pos:start="803:28" pos:end="803:28">c</name><operator pos:start="803:29" pos:end="803:30">-&gt;</operator><name pos:start="803:31" pos:end="803:37">chrSrcH</name></name></expr></argument>, <argument pos:start="803:40" pos:end="803:49"><expr pos:start="803:40" pos:end="803:49"><name pos:start="803:40" pos:end="803:49"><name pos:start="803:40" pos:end="803:40">c</name><operator pos:start="803:41" pos:end="803:42">-&gt;</operator><name pos:start="803:43" pos:end="803:49">chrDstW</name></name></expr></argument>, <argument pos:start="803:52" pos:end="803:61"><expr pos:start="803:52" pos:end="803:61"><name pos:start="803:52" pos:end="803:61"><name pos:start="803:52" pos:end="803:52">c</name><operator pos:start="803:53" pos:end="803:54">-&gt;</operator><name pos:start="803:55" pos:end="803:61">chrDstH</name></name></expr></argument>,

               <argument pos:start="805:16" pos:end="805:25"><expr pos:start="805:16" pos:end="805:25"><name pos:start="805:16" pos:end="805:25"><name pos:start="805:16" pos:end="805:16">c</name><operator pos:start="805:17" pos:end="805:18">-&gt;</operator><name pos:start="805:19" pos:end="805:25">chrXInc</name></name></expr></argument>, <argument pos:start="805:28" pos:end="805:37"><expr pos:start="805:28" pos:end="805:37"><name pos:start="805:28" pos:end="805:37"><name pos:start="805:28" pos:end="805:28">c</name><operator pos:start="805:29" pos:end="805:30">-&gt;</operator><name pos:start="805:31" pos:end="805:37">chrYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="811:5" pos:end="811:34"><expr pos:start="811:5" pos:end="811:33"><name pos:start="811:5" pos:end="811:14"><name pos:start="811:5" pos:end="811:5">c</name><operator pos:start="811:6" pos:end="811:7">-&gt;</operator><name pos:start="811:8" pos:end="811:14">swScale</name></name> <operator pos:start="811:16" pos:end="811:16">=</operator> <call pos:start="811:18" pos:end="811:33"><name pos:start="811:18" pos:end="811:30">ff_getSwsFunc</name><argument_list pos:start="811:31" pos:end="811:33">(<argument pos:start="811:32" pos:end="811:32"><expr pos:start="811:32" pos:end="811:32"><name pos:start="811:32" pos:end="811:32">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="813:5" pos:end="813:13">return <expr pos:start="813:12" pos:end="813:12"><literal type="number" pos:start="813:12" pos:end="813:12">0</literal></expr>;</return>

<label pos:start="815:1" pos:end="815:5"><name pos:start="815:1" pos:end="815:4">fail</name>:</label> <comment type="line" pos:start="815:7" pos:end="815:56">// FIXME replace things by appropriate error codes</comment>

    <return pos:start="817:5" pos:end="817:14">return <expr pos:start="817:12" pos:end="817:13"><operator pos:start="817:12" pos:end="817:12">-</operator><literal type="number" pos:start="817:13" pos:end="817:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
