<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9357.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">rv20_decode_picture_header</name><parameter_list pos:start="1:38" pos:end="1:55">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:50">RVDecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">rv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="297:1">{<block_content pos:start="5:5" pos:end="295:45">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:27">rv</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:30">m</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">seq</name></decl>, <decl pos:start="7:14" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:19">mb_pos</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:22">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="44:0"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">rpr_bits</name></decl>;</decl_stmt>



<cpp:if pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:5"><literal type="number" pos:start="13:5" pos:end="13:5">0</literal></expr></cpp:if>

    GetBitContext gb= s-&gt;gb;

    for(i=0; i&lt;64; i++){

        av_log(s-&gt;avctx, AV_LOG_DEBUG, "%d", get_bits1(&amp;gb));

        if(i%4==3) av_log(s-&gt;avctx, AV_LOG_DEBUG, " ");

    }

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "\n");

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:5"><literal type="number" pos:start="29:5" pos:end="29:5">0</literal></expr></cpp:if>

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "%3dx%03d/%02Xx%02X ", s-&gt;width, s-&gt;height, s-&gt;width/4, s-&gt;height/4);

    for(i=0; i&lt;s-&gt;avctx-&gt;extradata_size; i++){

        av_log(s-&gt;avctx, AV_LOG_DEBUG, "%02X ", ((uint8_t*)s-&gt;avctx-&gt;extradata)[i]);

        if(i%4==3) av_log(s-&gt;avctx, AV_LOG_DEBUG, " ");

    }

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "\n");

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:5">i</name><operator pos:start="47:6" pos:end="47:6">=</operator> <call pos:start="47:8" pos:end="47:26"><name pos:start="47:8" pos:end="47:15">get_bits</name><argument_list pos:start="47:16" pos:end="47:26">(<argument pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:22"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">s</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:22">gb</name></name></expr></argument>, <argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><literal type="number" pos:start="47:25" pos:end="47:25">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="49:5" pos:end="65:5">switch<condition pos:start="49:11" pos:end="49:13">(<expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">i</name></expr>)</condition><block pos:start="49:14" pos:end="65:5">{<block_content pos:start="51:5" pos:end="63:18">

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">0</literal></expr>:</case> <expr_stmt pos:start="51:13" pos:end="51:44"><expr pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:24">pict_type</name></name><operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:43">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt> <break pos:start="51:46" pos:end="51:51">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">1</literal></expr>:</case> <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">pict_type</name></name><operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:43">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt> <break pos:start="53:46" pos:end="53:51">break;</break> <comment type="line" pos:start="53:53" pos:end="53:61">//hmm ...</comment>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">2</literal></expr>:</case> <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">pict_type</name></name><operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:43">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt> <break pos:start="55:46" pos:end="55:51">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">3</literal></expr>:</case> <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:24">pict_type</name></name><operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:43">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt> <break pos:start="57:46" pos:end="57:51">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:62">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:40" pos:end="61:61"><expr pos:start="61:40" pos:end="61:61"><literal type="string" pos:start="61:40" pos:end="61:61">"unknown frame type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if<condition pos:start="69:7" pos:end="69:68">(<expr pos:start="69:8" pos:end="69:67"><name pos:start="69:8" pos:end="69:26"><name pos:start="69:8" pos:end="69:8">s</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:26">last_picture_ptr</name></name><operator pos:start="69:27" pos:end="69:28">==</operator><name pos:start="69:29" pos:end="69:32">NULL</name> <operator pos:start="69:34" pos:end="69:35">&amp;&amp;</operator> <name pos:start="69:37" pos:end="69:48"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:48">pict_type</name></name><operator pos:start="69:49" pos:end="69:50">==</operator><name pos:start="69:51" pos:end="69:67">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="69:69" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><call pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:55">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:40" pos:end="71:54"><expr pos:start="71:40" pos:end="71:54"><literal type="string" pos:start="71:40" pos:end="71:54">"early B pix\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><call pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:17">get_bits1</name><argument_list pos:start="79:18" pos:end="79:25">(<argument pos:start="79:19" pos:end="79:24"><expr pos:start="79:19" pos:end="79:24"><operator pos:start="79:19" pos:end="79:19">&amp;</operator><name pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:24">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="79:27" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:61"><expr pos:start="81:9" pos:end="81:60"><call pos:start="81:9" pos:end="81:60"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:60">(<argument pos:start="81:16" pos:end="81:23"><expr pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:23">avctx</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:37"><expr pos:start="81:26" pos:end="81:37"><name pos:start="81:26" pos:end="81:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:40" pos:end="81:59"><expr pos:start="81:40" pos:end="81:59"><literal type="string" pos:start="81:40" pos:end="81:59">"reserved bit set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:36"><expr pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:13">qscale</name></name> <operator pos:start="89:15" pos:end="89:15">=</operator> <call pos:start="89:17" pos:end="89:35"><name pos:start="89:17" pos:end="89:24">get_bits</name><argument_list pos:start="89:25" pos:end="89:35">(<argument pos:start="89:26" pos:end="89:31"><expr pos:start="89:26" pos:end="89:31"><operator pos:start="89:26" pos:end="89:26">&amp;</operator><name pos:start="89:27" pos:end="89:31"><name pos:start="89:27" pos:end="89:27">s</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:31">gb</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><literal type="number" pos:start="89:34" pos:end="89:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:20">(<expr pos:start="91:8" pos:end="91:19"><name pos:start="91:8" pos:end="91:16"><name pos:start="91:8" pos:end="91:8">s</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:16">qscale</name></name><operator pos:start="91:17" pos:end="91:18">==</operator><literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition><block pos:start="91:21" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:60"><expr pos:start="93:9" pos:end="93:59"><call pos:start="93:9" pos:end="93:59"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:59">(<argument pos:start="93:16" pos:end="93:23"><expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:23">avctx</name></name></expr></argument>, <argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:40" pos:end="93:58"><expr pos:start="93:40" pos:end="93:58"><literal type="string" pos:start="93:40" pos:end="93:58">"error, qscale:0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="103:43"><if pos:start="101:5" pos:end="103:43">if<condition pos:start="101:7" pos:end="101:41">(<expr pos:start="101:8" pos:end="101:40"><call pos:start="101:8" pos:end="101:35"><name pos:start="101:8" pos:end="101:23">RV_GET_MINOR_VER</name><argument_list pos:start="101:24" pos:end="101:35">(<argument pos:start="101:25" pos:end="101:34"><expr pos:start="101:25" pos:end="101:34"><name pos:start="101:25" pos:end="101:34"><name pos:start="101:25" pos:end="101:26">rv</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:34">sub_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:37" pos:end="101:38">&gt;=</operator> <literal type="number" pos:start="101:40" pos:end="101:40">2</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:43"><block_content pos:start="103:9" pos:end="103:43">

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:22">loop_filter</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <call pos:start="103:26" pos:end="103:42"><name pos:start="103:26" pos:end="103:34">get_bits1</name><argument_list pos:start="103:35" pos:end="103:42">(<argument pos:start="103:36" pos:end="103:41"><expr pos:start="103:36" pos:end="103:41"><operator pos:start="103:36" pos:end="103:36">&amp;</operator><name pos:start="103:37" pos:end="103:41"><name pos:start="103:37" pos:end="103:37">s</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="113:40"><if pos:start="107:5" pos:end="109:39">if<condition pos:start="107:7" pos:end="107:41">(<expr pos:start="107:8" pos:end="107:40"><call pos:start="107:8" pos:end="107:35"><name pos:start="107:8" pos:end="107:23">RV_GET_MINOR_VER</name><argument_list pos:start="107:24" pos:end="107:35">(<argument pos:start="107:25" pos:end="107:34"><expr pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:26">rv</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:34">sub_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="107:37" pos:end="107:38">&lt;=</operator> <literal type="number" pos:start="107:40" pos:end="107:40">1</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:39"><block_content pos:start="109:9" pos:end="109:39">

        <expr_stmt pos:start="109:9" pos:end="109:39"><expr pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:11">seq</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:33"><name pos:start="109:15" pos:end="109:22">get_bits</name><argument_list pos:start="109:23" pos:end="109:33">(<argument pos:start="109:24" pos:end="109:29"><expr pos:start="109:24" pos:end="109:29"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:29"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:29">gb</name></name></expr></argument>, <argument pos:start="109:32" pos:end="109:32"><expr pos:start="109:32" pos:end="109:32"><literal type="number" pos:start="109:32" pos:end="109:32">8</literal></expr></argument>)</argument_list></call> <operator pos:start="109:35" pos:end="109:36">&lt;&lt;</operator> <literal type="number" pos:start="109:38" pos:end="109:38">7</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="111:5" pos:end="113:40">else<block type="pseudo" pos:start="113:9" pos:end="113:40"><block_content pos:start="113:9" pos:end="113:40">

        <expr_stmt pos:start="113:9" pos:end="113:40"><expr pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:11">seq</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:34"><name pos:start="113:15" pos:end="113:22">get_bits</name><argument_list pos:start="113:23" pos:end="113:34">(<argument pos:start="113:24" pos:end="113:29"><expr pos:start="113:24" pos:end="113:29"><operator pos:start="113:24" pos:end="113:24">&amp;</operator><name pos:start="113:25" pos:end="113:29"><name pos:start="113:25" pos:end="113:25">s</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:29">gb</name></name></expr></argument>, <argument pos:start="113:32" pos:end="113:33"><expr pos:start="113:32" pos:end="113:33"><literal type="number" pos:start="113:32" pos:end="113:33">13</literal></expr></argument>)</argument_list></call> <operator pos:start="113:36" pos:end="113:37">&lt;&lt;</operator> <literal type="number" pos:start="113:39" pos:end="113:39">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:42"><expr pos:start="117:5" pos:end="117:41"><name pos:start="117:5" pos:end="117:12">rpr_bits</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:37"><name pos:start="117:16" pos:end="117:16">s</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:23">avctx</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:34">extradata</name><index pos:start="117:35" pos:end="117:37">[<expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">1</literal></expr>]</index></name> <operator pos:start="117:39" pos:end="117:39">&amp;</operator> <literal type="number" pos:start="117:41" pos:end="117:41">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="195:35"><if pos:start="119:5" pos:end="193:5">if<condition pos:start="119:7" pos:end="119:16">(<expr pos:start="119:8" pos:end="119:15"><name pos:start="119:8" pos:end="119:15">rpr_bits</name></expr>)</condition><block pos:start="119:17" pos:end="193:5">{<block_content pos:start="121:9" pos:end="191:9">

        <decl_stmt pos:start="121:9" pos:end="121:28"><decl pos:start="121:9" pos:end="121:13"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:13">f</name></decl>, <decl pos:start="121:16" pos:end="121:20"><type ref="prev" pos:start="121:9" pos:end="121:11"/><name pos:start="121:16" pos:end="121:20">new_w</name></decl>, <decl pos:start="121:23" pos:end="121:27"><type ref="prev" pos:start="121:9" pos:end="121:11"/><name pos:start="121:23" pos:end="121:27">new_h</name></decl>;</decl_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:16">rpr_bits</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:48"><name pos:start="123:20" pos:end="123:24">FFMIN</name><argument_list pos:start="123:25" pos:end="123:48">(<argument pos:start="123:26" pos:end="123:44"><expr pos:start="123:26" pos:end="123:44"><operator pos:start="123:26" pos:end="123:26">(</operator><name pos:start="123:27" pos:end="123:34">rpr_bits</name> <operator pos:start="123:36" pos:end="123:37">&gt;&gt;</operator> <literal type="number" pos:start="123:39" pos:end="123:39">1</literal><operator pos:start="123:40" pos:end="123:40">)</operator> <operator pos:start="123:42" pos:end="123:42">+</operator> <literal type="number" pos:start="123:44" pos:end="123:44">1</literal></expr></argument>, <argument pos:start="123:47" pos:end="123:47"><expr pos:start="123:47" pos:end="123:47"><literal type="number" pos:start="123:47" pos:end="123:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:39"><expr pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:9">f</name> <operator pos:start="127:11" pos:end="127:11">=</operator> <call pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:20">get_bits</name><argument_list pos:start="127:21" pos:end="127:38">(<argument pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:27"><operator pos:start="127:22" pos:end="127:22">&amp;</operator><name pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:27">gb</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:37"><expr pos:start="127:30" pos:end="127:37"><name pos:start="127:30" pos:end="127:37">rpr_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="143:9"><if pos:start="131:9" pos:end="137:9">if<condition pos:start="131:11" pos:end="131:13">(<expr pos:start="131:12" pos:end="131:12"><name pos:start="131:12" pos:end="131:12">f</name></expr>)</condition><block pos:start="131:14" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:60">

            <expr_stmt pos:start="133:13" pos:end="133:60"><expr pos:start="133:13" pos:end="133:59"><name pos:start="133:13" pos:end="133:17">new_w</name><operator pos:start="133:18" pos:end="133:18">=</operator> <literal type="number" pos:start="133:20" pos:end="133:20">4</literal><operator pos:start="133:21" pos:end="133:21">*</operator><operator pos:start="133:22" pos:end="133:22">(</operator><operator pos:start="133:23" pos:end="133:23">(</operator><name pos:start="133:24" pos:end="133:30">uint8_t</name><operator pos:start="133:31" pos:end="133:31">*</operator><operator pos:start="133:32" pos:end="133:32">)</operator><name pos:start="133:33" pos:end="133:51"><name pos:start="133:33" pos:end="133:33">s</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:40">avctx</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:51">extradata</name></name><operator pos:start="133:52" pos:end="133:52">)</operator><index pos:start="133:53" pos:end="133:59">[<expr pos:start="133:54" pos:end="133:58"><literal type="number" pos:start="133:54" pos:end="133:55">6</literal><operator pos:start="133:55" pos:end="133:55">+</operator><literal type="number" pos:start="133:56" pos:end="133:56">2</literal><operator pos:start="133:57" pos:end="133:57">*</operator><name pos:start="133:58" pos:end="133:58">f</name></expr>]</index></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:60"><expr pos:start="135:13" pos:end="135:59"><name pos:start="135:13" pos:end="135:17">new_h</name><operator pos:start="135:18" pos:end="135:18">=</operator> <literal type="number" pos:start="135:20" pos:end="135:20">4</literal><operator pos:start="135:21" pos:end="135:21">*</operator><operator pos:start="135:22" pos:end="135:22">(</operator><operator pos:start="135:23" pos:end="135:23">(</operator><name pos:start="135:24" pos:end="135:30">uint8_t</name><operator pos:start="135:31" pos:end="135:31">*</operator><operator pos:start="135:32" pos:end="135:32">)</operator><name pos:start="135:33" pos:end="135:51"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:40">avctx</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:51">extradata</name></name><operator pos:start="135:52" pos:end="135:52">)</operator><index pos:start="135:53" pos:end="135:59">[<expr pos:start="135:54" pos:end="135:58"><literal type="number" pos:start="135:54" pos:end="135:55">7</literal><operator pos:start="135:55" pos:end="135:55">+</operator><literal type="number" pos:start="135:56" pos:end="135:56">2</literal><operator pos:start="135:57" pos:end="135:57">*</operator><name pos:start="135:58" pos:end="135:58">f</name></expr>]</index></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="137:10" pos:end="143:9">else<block pos:start="137:14" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:34">

            <expr_stmt pos:start="139:13" pos:end="139:34"><expr pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:17">new_w</name><operator pos:start="139:18" pos:end="139:18">=</operator> <name pos:start="139:20" pos:end="139:32"><name pos:start="139:20" pos:end="139:20">s</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:32">orig_width</name></name></expr> ;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:17">new_h</name><operator pos:start="141:18" pos:end="141:18">=</operator> <name pos:start="141:20" pos:end="141:33"><name pos:start="141:20" pos:end="141:20">s</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:33">orig_height</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="145:9" pos:end="183:9"><if pos:start="145:9" pos:end="183:9">if<condition pos:start="145:11" pos:end="145:51">(<expr pos:start="145:12" pos:end="145:50"><name pos:start="145:12" pos:end="145:16">new_w</name> <operator pos:start="145:18" pos:end="145:19">!=</operator> <name pos:start="145:21" pos:end="145:28"><name pos:start="145:21" pos:end="145:21">s</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:28">width</name></name> <operator pos:start="145:30" pos:end="145:31">||</operator> <name pos:start="145:33" pos:end="145:37">new_h</name> <operator pos:start="145:39" pos:end="145:40">!=</operator> <name pos:start="145:42" pos:end="145:50"><name pos:start="145:42" pos:end="145:42">s</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:50">height</name></name></expr>)</condition><block pos:start="145:52" pos:end="183:9">{<block_content pos:start="147:13" pos:end="181:26">

            <decl_stmt pos:start="147:13" pos:end="147:66"><decl pos:start="147:13" pos:end="147:65"><type pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:22">AVRational</name></type> <name pos:start="147:24" pos:end="147:33">old_aspect</name> <init pos:start="147:35" pos:end="147:65">= <expr pos:start="147:37" pos:end="147:65"><name pos:start="147:37" pos:end="147:65"><name pos:start="147:37" pos:end="147:37">s</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:44">avctx</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:65">sample_aspect_ratio</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:103"><expr pos:start="149:13" pos:end="149:102"><call pos:start="149:13" pos:end="149:102"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="149:102">(<argument pos:start="149:20" pos:end="149:27"><expr pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:20">s</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:27">avctx</name></name></expr></argument>, <argument pos:start="149:30" pos:end="149:41"><expr pos:start="149:30" pos:end="149:41"><name pos:start="149:30" pos:end="149:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="149:44" pos:end="149:87"><expr pos:start="149:44" pos:end="149:87"><literal type="string" pos:start="149:44" pos:end="149:87">"attempting to change resolution to %dx%d\n"</literal></expr></argument>, <argument pos:start="149:90" pos:end="149:94"><expr pos:start="149:90" pos:end="149:94"><name pos:start="149:90" pos:end="149:94">new_w</name></expr></argument>, <argument pos:start="149:97" pos:end="149:101"><expr pos:start="149:97" pos:end="149:101"><name pos:start="149:97" pos:end="149:101">new_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="153:26"><if pos:start="151:13" pos:end="153:26">if <condition pos:start="151:16" pos:end="151:67">(<expr pos:start="151:17" pos:end="151:66"><call pos:start="151:17" pos:end="151:62"><name pos:start="151:17" pos:end="151:35">av_image_check_size</name><argument_list pos:start="151:36" pos:end="151:62">(<argument pos:start="151:37" pos:end="151:41"><expr pos:start="151:37" pos:end="151:41"><name pos:start="151:37" pos:end="151:41">new_w</name></expr></argument>, <argument pos:start="151:44" pos:end="151:48"><expr pos:start="151:44" pos:end="151:48"><name pos:start="151:44" pos:end="151:48">new_h</name></expr></argument>, <argument pos:start="151:51" pos:end="151:51"><expr pos:start="151:51" pos:end="151:51"><literal type="number" pos:start="151:51" pos:end="151:51">0</literal></expr></argument>, <argument pos:start="151:54" pos:end="151:61"><expr pos:start="151:54" pos:end="151:61"><name pos:start="151:54" pos:end="151:61"><name pos:start="151:54" pos:end="151:54">s</name><operator pos:start="151:55" pos:end="151:56">-&gt;</operator><name pos:start="151:57" pos:end="151:61">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="151:64" pos:end="151:64">&lt;</operator> <literal type="number" pos:start="151:66" pos:end="151:66">0</literal></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:26"><block_content pos:start="153:17" pos:end="153:26">

                <return pos:start="153:17" pos:end="153:26">return <expr pos:start="153:24" pos:end="153:25"><operator pos:start="153:24" pos:end="153:24">-</operator><literal type="number" pos:start="153:25" pos:end="153:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:33"><expr pos:start="155:13" pos:end="155:32"><call pos:start="155:13" pos:end="155:32"><name pos:start="155:13" pos:end="155:29">ff_MPV_common_end</name><argument_list pos:start="155:30" pos:end="155:32">(<argument pos:start="155:31" pos:end="155:31"><expr pos:start="155:31" pos:end="155:31"><name pos:start="155:31" pos:end="155:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="159:13" pos:end="159:72">// attempt to keep aspect during typical resolution switches</comment>

            <if_stmt pos:start="161:13" pos:end="163:48"><if pos:start="161:13" pos:end="163:48">if <condition pos:start="161:16" pos:end="161:32">(<expr pos:start="161:17" pos:end="161:31"><operator pos:start="161:17" pos:end="161:17">!</operator><name pos:start="161:18" pos:end="161:31"><name pos:start="161:18" pos:end="161:27">old_aspect</name><operator pos:start="161:28" pos:end="161:28">.</operator><name pos:start="161:29" pos:end="161:31">num</name></name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:48"><block_content pos:start="163:17" pos:end="163:48">

                <expr_stmt pos:start="163:17" pos:end="163:48"><expr pos:start="163:17" pos:end="163:47"><name pos:start="163:17" pos:end="163:26">old_aspect</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <operator pos:start="163:30" pos:end="163:30">(</operator><name pos:start="163:31" pos:end="163:40">AVRational</name><operator pos:start="163:41" pos:end="163:41">)</operator><block pos:start="163:42" pos:end="163:47">{<expr pos:start="163:43" pos:end="163:43"><literal type="number" pos:start="163:43" pos:end="163:43">1</literal></expr>, <expr pos:start="163:46" pos:end="163:46"><literal type="number" pos:start="163:46" pos:end="163:46">1</literal></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="165:13" pos:end="167:89"><if pos:start="165:13" pos:end="167:89">if <condition pos:start="165:16" pos:end="165:58">(<expr pos:start="165:17" pos:end="165:57"><literal type="number" pos:start="165:17" pos:end="165:17">2</literal> <operator pos:start="165:19" pos:end="165:19">*</operator> <name pos:start="165:21" pos:end="165:25">new_w</name> <operator pos:start="165:27" pos:end="165:27">*</operator> <name pos:start="165:29" pos:end="165:37"><name pos:start="165:29" pos:end="165:29">s</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:37">height</name></name> <operator pos:start="165:39" pos:end="165:40">==</operator> <name pos:start="165:42" pos:end="165:46">new_h</name> <operator pos:start="165:48" pos:end="165:48">*</operator> <name pos:start="165:50" pos:end="165:57"><name pos:start="165:50" pos:end="165:50">s</name><operator pos:start="165:51" pos:end="165:52">-&gt;</operator><name pos:start="165:53" pos:end="165:57">width</name></name></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:89"><block_content pos:start="167:17" pos:end="167:89">

                <expr_stmt pos:start="167:17" pos:end="167:89"><expr pos:start="167:17" pos:end="167:88"><name pos:start="167:17" pos:end="167:45"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:24">avctx</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:45">sample_aspect_ratio</name></name> <operator pos:start="167:47" pos:end="167:47">=</operator> <macro pos:start="167:49" pos:end="167:88"><name pos:start="167:49" pos:end="167:56">av_mul_q</name><argument_list pos:start="167:57" pos:end="167:88">(<argument pos:start="167:58" pos:end="167:67">old_aspect</argument>, <argument pos:start="167:70" pos:end="167:83">(AVRational){<literal type="number" pos:start="167:83" pos:end="167:83">2</literal></argument>, <argument pos:start="167:86" pos:end="167:87"><literal type="number" pos:start="167:86" pos:end="167:86">1</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="169:13" pos:end="171:89"><if pos:start="169:13" pos:end="171:89">if <condition pos:start="169:16" pos:end="169:58">(<expr pos:start="169:17" pos:end="169:57"><name pos:start="169:17" pos:end="169:21">new_w</name> <operator pos:start="169:23" pos:end="169:23">*</operator> <name pos:start="169:25" pos:end="169:33"><name pos:start="169:25" pos:end="169:25">s</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:33">height</name></name> <operator pos:start="169:35" pos:end="169:36">==</operator> <literal type="number" pos:start="169:38" pos:end="169:38">2</literal> <operator pos:start="169:40" pos:end="169:40">*</operator> <name pos:start="169:42" pos:end="169:46">new_h</name> <operator pos:start="169:48" pos:end="169:48">*</operator> <name pos:start="169:50" pos:end="169:57"><name pos:start="169:50" pos:end="169:50">s</name><operator pos:start="169:51" pos:end="169:52">-&gt;</operator><name pos:start="169:53" pos:end="169:57">width</name></name></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:89"><block_content pos:start="171:17" pos:end="171:89">

                <expr_stmt pos:start="171:17" pos:end="171:89"><expr pos:start="171:17" pos:end="171:88"><name pos:start="171:17" pos:end="171:45"><name pos:start="171:17" pos:end="171:17">s</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:24">avctx</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:45">sample_aspect_ratio</name></name> <operator pos:start="171:47" pos:end="171:47">=</operator> <macro pos:start="171:49" pos:end="171:88"><name pos:start="171:49" pos:end="171:56">av_mul_q</name><argument_list pos:start="171:57" pos:end="171:88">(<argument pos:start="171:58" pos:end="171:67">old_aspect</argument>, <argument pos:start="171:70" pos:end="171:83">(AVRational){<literal type="number" pos:start="171:83" pos:end="171:83">1</literal></argument>, <argument pos:start="171:86" pos:end="171:87"><literal type="number" pos:start="171:86" pos:end="171:86">2</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:59"><expr pos:start="173:13" pos:end="173:58"><call pos:start="173:13" pos:end="173:58"><name pos:start="173:13" pos:end="173:34">avcodec_set_dimensions</name><argument_list pos:start="173:35" pos:end="173:58">(<argument pos:start="173:36" pos:end="173:43"><expr pos:start="173:36" pos:end="173:43"><name pos:start="173:36" pos:end="173:43"><name pos:start="173:36" pos:end="173:36">s</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:43">avctx</name></name></expr></argument>, <argument pos:start="173:46" pos:end="173:50"><expr pos:start="173:46" pos:end="173:50"><name pos:start="173:46" pos:end="173:50">new_w</name></expr></argument>, <argument pos:start="173:53" pos:end="173:57"><expr pos:start="173:53" pos:end="173:57"><name pos:start="173:53" pos:end="173:57">new_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:30"><expr pos:start="175:13" pos:end="175:29"><name pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:20">width</name></name>  <operator pos:start="175:23" pos:end="175:23">=</operator> <name pos:start="175:25" pos:end="175:29">new_w</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:30"><expr pos:start="177:13" pos:end="177:29"><name pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:21">height</name></name> <operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:29">new_h</name></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="181:26"><if pos:start="179:13" pos:end="181:26">if <condition pos:start="179:16" pos:end="179:42">(<expr pos:start="179:17" pos:end="179:41"><call pos:start="179:17" pos:end="179:37"><name pos:start="179:17" pos:end="179:34">ff_MPV_common_init</name><argument_list pos:start="179:35" pos:end="179:37">(<argument pos:start="179:36" pos:end="179:36"><expr pos:start="179:36" pos:end="179:36"><name pos:start="179:36" pos:end="179:36">s</name></expr></argument>)</argument_list></call> <operator pos:start="179:39" pos:end="179:39">&lt;</operator> <literal type="number" pos:start="179:41" pos:end="179:41">0</literal></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:26"><block_content pos:start="181:17" pos:end="181:26">

                <return pos:start="181:17" pos:end="181:26">return <expr pos:start="181:24" pos:end="181:25"><operator pos:start="181:24" pos:end="181:24">-</operator><literal type="number" pos:start="181:25" pos:end="181:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="187:9" pos:end="191:9"><if pos:start="187:9" pos:end="191:9">if<condition pos:start="187:11" pos:end="187:48">(<expr pos:start="187:12" pos:end="187:47"><name pos:start="187:12" pos:end="187:26"><name pos:start="187:12" pos:end="187:12">s</name><operator pos:start="187:13" pos:end="187:14">-&gt;</operator><name pos:start="187:15" pos:end="187:19">avctx</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:26">debug</name></name> <operator pos:start="187:28" pos:end="187:28">&amp;</operator> <name pos:start="187:30" pos:end="187:47">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="187:49" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:69">

            <expr_stmt pos:start="189:13" pos:end="189:69"><expr pos:start="189:13" pos:end="189:68"><call pos:start="189:13" pos:end="189:68"><name pos:start="189:13" pos:end="189:18">av_log</name><argument_list pos:start="189:19" pos:end="189:68">(<argument pos:start="189:20" pos:end="189:27"><expr pos:start="189:20" pos:end="189:27"><name pos:start="189:20" pos:end="189:27"><name pos:start="189:20" pos:end="189:20">s</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:27">avctx</name></name></expr></argument>, <argument pos:start="189:30" pos:end="189:41"><expr pos:start="189:30" pos:end="189:41"><name pos:start="189:30" pos:end="189:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="189:44" pos:end="189:54"><expr pos:start="189:44" pos:end="189:54"><literal type="string" pos:start="189:44" pos:end="189:54">"F %d/%d\n"</literal></expr></argument>, <argument pos:start="189:57" pos:end="189:57"><expr pos:start="189:57" pos:end="189:57"><name pos:start="189:57" pos:end="189:57">f</name></expr></argument>, <argument pos:start="189:60" pos:end="189:67"><expr pos:start="189:60" pos:end="189:67"><name pos:start="189:60" pos:end="189:67">rpr_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="193:7" pos:end="195:35">else if <condition pos:start="193:15" pos:end="193:73">(<expr pos:start="193:16" pos:end="193:72"><call pos:start="193:16" pos:end="193:68"><name pos:start="193:16" pos:end="193:34">av_image_check_size</name><argument_list pos:start="193:35" pos:end="193:68">(<argument pos:start="193:36" pos:end="193:43"><expr pos:start="193:36" pos:end="193:43"><name pos:start="193:36" pos:end="193:43"><name pos:start="193:36" pos:end="193:36">s</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:43">width</name></name></expr></argument>, <argument pos:start="193:46" pos:end="193:54"><expr pos:start="193:46" pos:end="193:54"><name pos:start="193:46" pos:end="193:54"><name pos:start="193:46" pos:end="193:46">s</name><operator pos:start="193:47" pos:end="193:48">-&gt;</operator><name pos:start="193:49" pos:end="193:54">height</name></name></expr></argument>, <argument pos:start="193:57" pos:end="193:57"><expr pos:start="193:57" pos:end="193:57"><literal type="number" pos:start="193:57" pos:end="193:57">0</literal></expr></argument>, <argument pos:start="193:60" pos:end="193:67"><expr pos:start="193:60" pos:end="193:67"><name pos:start="193:60" pos:end="193:67"><name pos:start="193:60" pos:end="193:60">s</name><operator pos:start="193:61" pos:end="193:62">-&gt;</operator><name pos:start="193:63" pos:end="193:67">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="193:70" pos:end="193:70">&lt;</operator> <literal type="number" pos:start="193:72" pos:end="193:72">0</literal></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:35"><block_content pos:start="195:9" pos:end="195:35">

        <return pos:start="195:9" pos:end="195:35">return <expr pos:start="195:16" pos:end="195:34"><name pos:start="195:16" pos:end="195:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:35"><expr pos:start="199:5" pos:end="199:34"><name pos:start="199:5" pos:end="199:10">mb_pos</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <call pos:start="199:14" pos:end="199:34"><name pos:start="199:14" pos:end="199:31">ff_h263_decode_mba</name><argument_list pos:start="199:32" pos:end="199:34">(<argument pos:start="199:33" pos:end="199:33"><expr pos:start="199:33" pos:end="199:33"><name pos:start="199:33" pos:end="199:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="203:1" pos:end="203:46">//av_log(s-&gt;avctx, AV_LOG_DEBUG, "%d\n", seq);</comment>

    <expr_stmt pos:start="205:5" pos:end="205:28"><expr pos:start="205:5" pos:end="205:27"><name pos:start="205:5" pos:end="205:7">seq</name> <operator pos:start="205:9" pos:end="205:10">|=</operator> <name pos:start="205:12" pos:end="205:18"><name pos:start="205:12" pos:end="205:12">s</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:18">time</name></name> <operator pos:start="205:20" pos:end="205:20">&amp;</operator><operator pos:start="205:21" pos:end="205:21">~</operator><literal type="number" pos:start="205:22" pos:end="205:27">0x7FFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="207:46"><if pos:start="207:5" pos:end="207:46">if<condition pos:start="207:7" pos:end="207:31">(<expr pos:start="207:8" pos:end="207:30"><name pos:start="207:8" pos:end="207:10">seq</name> <operator pos:start="207:12" pos:end="207:12">-</operator> <name pos:start="207:14" pos:end="207:20"><name pos:start="207:14" pos:end="207:14">s</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:20">time</name></name> <operator pos:start="207:22" pos:end="207:22">&gt;</operator>  <literal type="number" pos:start="207:25" pos:end="207:30">0x4000</literal></expr>)</condition><block type="pseudo" pos:start="207:33" pos:end="207:46"><block_content pos:start="207:33" pos:end="207:46"> <expr_stmt pos:start="207:33" pos:end="207:46"><expr pos:start="207:33" pos:end="207:45"><name pos:start="207:33" pos:end="207:35">seq</name> <operator pos:start="207:37" pos:end="207:38">-=</operator> <literal type="number" pos:start="207:40" pos:end="207:45">0x8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="209:5" pos:end="209:46"><if pos:start="209:5" pos:end="209:46">if<condition pos:start="209:7" pos:end="209:31">(<expr pos:start="209:8" pos:end="209:30"><name pos:start="209:8" pos:end="209:10">seq</name> <operator pos:start="209:12" pos:end="209:12">-</operator> <name pos:start="209:14" pos:end="209:20"><name pos:start="209:14" pos:end="209:14">s</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:20">time</name></name> <operator pos:start="209:22" pos:end="209:22">&lt;</operator> <operator pos:start="209:24" pos:end="209:24">-</operator><literal type="number" pos:start="209:25" pos:end="209:30">0x4000</literal></expr>)</condition><block type="pseudo" pos:start="209:33" pos:end="209:46"><block_content pos:start="209:33" pos:end="209:46"> <expr_stmt pos:start="209:33" pos:end="209:46"><expr pos:start="209:33" pos:end="209:45"><name pos:start="209:33" pos:end="209:35">seq</name> <operator pos:start="209:37" pos:end="209:38">+=</operator> <literal type="number" pos:start="209:40" pos:end="209:45">0x8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="211:5" pos:end="239:5"><if pos:start="211:5" pos:end="239:5">if<condition pos:start="211:7" pos:end="211:22">(<expr pos:start="211:8" pos:end="211:21"><name pos:start="211:8" pos:end="211:10">seq</name> <operator pos:start="211:12" pos:end="211:13">!=</operator> <name pos:start="211:15" pos:end="211:21"><name pos:start="211:15" pos:end="211:15">s</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:21">time</name></name></expr>)</condition><block pos:start="211:23" pos:end="239:5">{<block_content pos:start="213:9" pos:end="237:9">

        <if_stmt pos:start="213:9" pos:end="237:9"><if pos:start="213:9" pos:end="221:9">if<condition pos:start="213:11" pos:end="213:43">(<expr pos:start="213:12" pos:end="213:42"><name pos:start="213:12" pos:end="213:23"><name pos:start="213:12" pos:end="213:12">s</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:23">pict_type</name></name><operator pos:start="213:24" pos:end="213:25">!=</operator><name pos:start="213:26" pos:end="213:42">AV_PICTURE_TYPE_B</name></expr>)</condition><block pos:start="213:44" pos:end="221:9">{<block_content pos:start="215:13" pos:end="219:40">

            <expr_stmt pos:start="215:13" pos:end="215:25"><expr pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:19"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:19">time</name></name><operator pos:start="215:20" pos:end="215:20">=</operator> <name pos:start="215:22" pos:end="215:24">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:53"><expr pos:start="217:13" pos:end="217:52"><name pos:start="217:13" pos:end="217:22"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:22">pp_time</name></name><operator pos:start="217:23" pos:end="217:23">=</operator> <name pos:start="217:25" pos:end="217:31"><name pos:start="217:25" pos:end="217:25">s</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:31">time</name></name> <operator pos:start="217:33" pos:end="217:33">-</operator> <name pos:start="217:35" pos:end="217:52"><name pos:start="217:35" pos:end="217:35">s</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:52">last_non_b_time</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:40"><expr pos:start="219:13" pos:end="219:39"><name pos:start="219:13" pos:end="219:30"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:30">last_non_b_time</name></name><operator pos:start="219:31" pos:end="219:31">=</operator> <name pos:start="219:33" pos:end="219:39"><name pos:start="219:33" pos:end="219:33">s</name><operator pos:start="219:34" pos:end="219:35">-&gt;</operator><name pos:start="219:36" pos:end="219:39">time</name></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="221:10" pos:end="237:9">else<block pos:start="221:14" pos:end="237:9">{<block_content pos:start="223:13" pos:end="235:39">

            <expr_stmt pos:start="223:13" pos:end="223:25"><expr pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:19"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:19">time</name></name><operator pos:start="223:20" pos:end="223:20">=</operator> <name pos:start="223:22" pos:end="223:24">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:68"><expr pos:start="225:13" pos:end="225:67"><name pos:start="225:13" pos:end="225:22"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:22">pb_time</name></name><operator pos:start="225:23" pos:end="225:23">=</operator> <name pos:start="225:25" pos:end="225:34"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:34">pp_time</name></name> <operator pos:start="225:36" pos:end="225:36">-</operator> <operator pos:start="225:38" pos:end="225:38">(</operator><name pos:start="225:39" pos:end="225:56"><name pos:start="225:39" pos:end="225:39">s</name><operator pos:start="225:40" pos:end="225:41">-&gt;</operator><name pos:start="225:42" pos:end="225:56">last_non_b_time</name></name> <operator pos:start="225:58" pos:end="225:58">-</operator> <name pos:start="225:60" pos:end="225:66"><name pos:start="225:60" pos:end="225:60">s</name><operator pos:start="225:61" pos:end="225:62">-&gt;</operator><name pos:start="225:63" pos:end="225:66">time</name></name><operator pos:start="225:67" pos:end="225:67">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="227:13" pos:end="233:13"><if pos:start="227:13" pos:end="233:13">if<condition pos:start="227:15" pos:end="227:97">(<expr pos:start="227:16" pos:end="227:96"><name pos:start="227:16" pos:end="227:25"><name pos:start="227:16" pos:end="227:16">s</name><operator pos:start="227:17" pos:end="227:18">-&gt;</operator><name pos:start="227:19" pos:end="227:25">pp_time</name></name> <operator pos:start="227:27" pos:end="227:28">&lt;=</operator><name pos:start="227:29" pos:end="227:38"><name pos:start="227:29" pos:end="227:29">s</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:38">pb_time</name></name> <operator pos:start="227:40" pos:end="227:41">||</operator> <name pos:start="227:43" pos:end="227:52"><name pos:start="227:43" pos:end="227:43">s</name><operator pos:start="227:44" pos:end="227:45">-&gt;</operator><name pos:start="227:46" pos:end="227:52">pp_time</name></name> <operator pos:start="227:54" pos:end="227:55">&lt;=</operator> <name pos:start="227:57" pos:end="227:66"><name pos:start="227:57" pos:end="227:57">s</name><operator pos:start="227:58" pos:end="227:59">-&gt;</operator><name pos:start="227:60" pos:end="227:66">pp_time</name></name> <operator pos:start="227:68" pos:end="227:68">-</operator> <name pos:start="227:70" pos:end="227:79"><name pos:start="227:70" pos:end="227:70">s</name><operator pos:start="227:71" pos:end="227:72">-&gt;</operator><name pos:start="227:73" pos:end="227:79">pb_time</name></name> <operator pos:start="227:81" pos:end="227:82">||</operator> <name pos:start="227:84" pos:end="227:93"><name pos:start="227:84" pos:end="227:84">s</name><operator pos:start="227:85" pos:end="227:86">-&gt;</operator><name pos:start="227:87" pos:end="227:93">pp_time</name></name><operator pos:start="227:94" pos:end="227:95">&lt;=</operator><literal type="number" pos:start="227:96" pos:end="227:96">0</literal></expr>)</condition><block pos:start="227:98" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:37">

                <expr_stmt pos:start="229:17" pos:end="229:117"><expr pos:start="229:17" pos:end="229:116"><call pos:start="229:17" pos:end="229:116"><name pos:start="229:17" pos:end="229:22">av_log</name><argument_list pos:start="229:23" pos:end="229:116">(<argument pos:start="229:24" pos:end="229:31"><expr pos:start="229:24" pos:end="229:31"><name pos:start="229:24" pos:end="229:31"><name pos:start="229:24" pos:end="229:24">s</name><operator pos:start="229:25" pos:end="229:26">-&gt;</operator><name pos:start="229:27" pos:end="229:31">avctx</name></name></expr></argument>, <argument pos:start="229:34" pos:end="229:45"><expr pos:start="229:34" pos:end="229:45"><name pos:start="229:34" pos:end="229:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="229:48" pos:end="229:115"><expr pos:start="229:48" pos:end="229:115"><literal type="string" pos:start="229:48" pos:end="229:115">"messed up order, possible from seeking? skipping current b frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="231:17" pos:end="231:37">return <expr pos:start="231:24" pos:end="231:36"><name pos:start="231:24" pos:end="231:36">FRAME_SKIPPED</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:39"><expr pos:start="235:13" pos:end="235:38"><call pos:start="235:13" pos:end="235:38"><name pos:start="235:13" pos:end="235:35">ff_mpeg4_init_direct_mv</name><argument_list pos:start="235:36" pos:end="235:38">(<argument pos:start="235:37" pos:end="235:37"><expr pos:start="235:37" pos:end="235:37"><name pos:start="235:37" pos:end="235:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="241:1" pos:end="241:101">//    printf("%d %d %d %d %d\n", seq, (int)s-&gt;time, (int)s-&gt;last_non_b_time, s-&gt;pp_time, s-&gt;pb_time);</comment>

<comment type="block" pos:start="243:1" pos:end="249:39">/*for(i=0; i&lt;32; i++){

    av_log(s-&gt;avctx, AV_LOG_DEBUG, "%d", get_bits1(&amp;s-&gt;gb));

}

av_log(s-&gt;avctx, AV_LOG_DEBUG, "\n");*/</comment>

    <expr_stmt pos:start="251:5" pos:end="251:38"><expr pos:start="251:5" pos:end="251:37"><name pos:start="251:5" pos:end="251:18"><name pos:start="251:5" pos:end="251:5">s</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:18">no_rounding</name></name><operator pos:start="251:19" pos:end="251:19">=</operator> <call pos:start="251:21" pos:end="251:37"><name pos:start="251:21" pos:end="251:29">get_bits1</name><argument_list pos:start="251:30" pos:end="251:37">(<argument pos:start="251:31" pos:end="251:36"><expr pos:start="251:31" pos:end="251:36"><operator pos:start="251:31" pos:end="251:31">&amp;</operator><name pos:start="251:32" pos:end="251:36"><name pos:start="251:32" pos:end="251:32">s</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="255:5" pos:end="257:29"><if pos:start="255:5" pos:end="257:29">if<condition pos:start="255:7" pos:end="255:78">(<expr pos:start="255:8" pos:end="255:77"><call pos:start="255:8" pos:end="255:35"><name pos:start="255:8" pos:end="255:23">RV_GET_MINOR_VER</name><argument_list pos:start="255:24" pos:end="255:35">(<argument pos:start="255:25" pos:end="255:34"><expr pos:start="255:25" pos:end="255:34"><name pos:start="255:25" pos:end="255:34"><name pos:start="255:25" pos:end="255:26">rv</name><operator pos:start="255:27" pos:end="255:28">-&gt;</operator><name pos:start="255:29" pos:end="255:34">sub_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="255:37" pos:end="255:38">&lt;=</operator> <literal type="number" pos:start="255:40" pos:end="255:40">1</literal> <operator pos:start="255:42" pos:end="255:43">&amp;&amp;</operator> <name pos:start="255:45" pos:end="255:56"><name pos:start="255:45" pos:end="255:45">s</name><operator pos:start="255:46" pos:end="255:47">-&gt;</operator><name pos:start="255:48" pos:end="255:56">pict_type</name></name> <operator pos:start="255:58" pos:end="255:59">==</operator> <name pos:start="255:61" pos:end="255:77">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="257:9" pos:end="257:29"><block_content pos:start="257:9" pos:end="257:29">

        <expr_stmt pos:start="257:9" pos:end="257:29"><expr pos:start="257:9" pos:end="257:28"><call pos:start="257:9" pos:end="257:28"><name pos:start="257:9" pos:end="257:17">skip_bits</name><argument_list pos:start="257:18" pos:end="257:28">(<argument pos:start="257:19" pos:end="257:24"><expr pos:start="257:19" pos:end="257:24"><operator pos:start="257:19" pos:end="257:19">&amp;</operator><name pos:start="257:20" pos:end="257:24"><name pos:start="257:20" pos:end="257:20">s</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:24">gb</name></name></expr></argument>, <argument pos:start="257:27" pos:end="257:27"><expr pos:start="257:27" pos:end="257:27"><literal type="number" pos:start="257:27" pos:end="257:27">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="257:31" pos:end="257:98">// binary decoder reads 3+2 bits here but they don't seem to be used</comment>



    <expr_stmt pos:start="261:5" pos:end="261:18"><expr pos:start="261:5" pos:end="261:17"><name pos:start="261:5" pos:end="261:13"><name pos:start="261:5" pos:end="261:5">s</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:13">f_code</name></name> <operator pos:start="261:15" pos:end="261:15">=</operator> <literal type="number" pos:start="261:17" pos:end="261:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:27"><expr pos:start="263:5" pos:end="263:26"><name pos:start="263:5" pos:end="263:22"><name pos:start="263:5" pos:end="263:5">s</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:22">unrestricted_mv</name></name> <operator pos:start="263:24" pos:end="263:24">=</operator> <literal type="number" pos:start="263:26" pos:end="263:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:51"><expr pos:start="265:5" pos:end="265:50"><name pos:start="265:5" pos:end="265:15"><name pos:start="265:5" pos:end="265:5">s</name><operator pos:start="265:6" pos:end="265:7">-&gt;</operator><name pos:start="265:8" pos:end="265:15">h263_aic</name></name><operator pos:start="265:16" pos:end="265:16">=</operator> <name pos:start="265:18" pos:end="265:29"><name pos:start="265:18" pos:end="265:18">s</name><operator pos:start="265:19" pos:end="265:20">-&gt;</operator><name pos:start="265:21" pos:end="265:29">pict_type</name></name> <operator pos:start="265:31" pos:end="265:32">==</operator> <name pos:start="265:34" pos:end="265:50">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

<comment type="line" pos:start="267:1" pos:end="267:25">//    s-&gt;alt_inter_vlc=1;</comment>

<comment type="line" pos:start="269:1" pos:end="269:16">//    s-&gt;obmc=1;</comment>

<comment type="line" pos:start="271:1" pos:end="271:19">//    s-&gt;umvplus=1;</comment>

    <expr_stmt pos:start="273:5" pos:end="273:24"><expr pos:start="273:5" pos:end="273:23"><name pos:start="273:5" pos:end="273:21"><name pos:start="273:5" pos:end="273:5">s</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:21">modified_quant</name></name><operator pos:start="273:22" pos:end="273:22">=</operator><literal type="number" pos:start="273:23" pos:end="273:23">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="275:5" pos:end="277:25"><if pos:start="275:5" pos:end="277:25">if<condition pos:start="275:7" pos:end="275:25">(<expr pos:start="275:8" pos:end="275:24"><operator pos:start="275:8" pos:end="275:8">!</operator><name pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:16">avctx</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:24">lowres</name></name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:25"><block_content pos:start="277:9" pos:end="277:25">

        <expr_stmt pos:start="277:9" pos:end="277:25"><expr pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:22">loop_filter</name></name><operator pos:start="277:23" pos:end="277:23">=</operator><literal type="number" pos:start="277:24" pos:end="277:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="281:5" pos:end="287:5"><if pos:start="281:5" pos:end="287:5">if<condition pos:start="281:7" pos:end="281:44">(<expr pos:start="281:8" pos:end="281:43"><name pos:start="281:8" pos:end="281:22"><name pos:start="281:8" pos:end="281:8">s</name><operator pos:start="281:9" pos:end="281:10">-&gt;</operator><name pos:start="281:11" pos:end="281:15">avctx</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:22">debug</name></name> <operator pos:start="281:24" pos:end="281:24">&amp;</operator> <name pos:start="281:26" pos:end="281:43">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="281:45" pos:end="287:5">{<block_content pos:start="283:13" pos:end="285:83">

            <expr_stmt pos:start="283:13" pos:end="285:83"><expr pos:start="283:13" pos:end="285:82"><call pos:start="283:13" pos:end="285:82"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="285:82">(<argument pos:start="283:20" pos:end="283:27"><expr pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:20">s</name><operator pos:start="283:21" pos:end="283:22">-&gt;</operator><name pos:start="283:23" pos:end="283:27">avctx</name></name></expr></argument>, <argument pos:start="283:30" pos:end="283:40"><expr pos:start="283:30" pos:end="283:40"><name pos:start="283:30" pos:end="283:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="283:43" pos:end="283:91"><expr pos:start="283:43" pos:end="283:91"><literal type="string" pos:start="283:43" pos:end="283:91">"num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n"</literal></expr></argument>,

                   <argument pos:start="285:20" pos:end="285:22"><expr pos:start="285:20" pos:end="285:22"><name pos:start="285:20" pos:end="285:22">seq</name></expr></argument>, <argument pos:start="285:25" pos:end="285:31"><expr pos:start="285:25" pos:end="285:31"><name pos:start="285:25" pos:end="285:31"><name pos:start="285:25" pos:end="285:25">s</name><operator pos:start="285:26" pos:end="285:27">-&gt;</operator><name pos:start="285:28" pos:end="285:31">mb_x</name></name></expr></argument>, <argument pos:start="285:34" pos:end="285:40"><expr pos:start="285:34" pos:end="285:40"><name pos:start="285:34" pos:end="285:40"><name pos:start="285:34" pos:end="285:34">s</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:40">mb_y</name></name></expr></argument>, <argument pos:start="285:43" pos:end="285:54"><expr pos:start="285:43" pos:end="285:54"><name pos:start="285:43" pos:end="285:54"><name pos:start="285:43" pos:end="285:43">s</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:54">pict_type</name></name></expr></argument>, <argument pos:start="285:57" pos:end="285:65"><expr pos:start="285:57" pos:end="285:65"><name pos:start="285:57" pos:end="285:65"><name pos:start="285:57" pos:end="285:57">s</name><operator pos:start="285:58" pos:end="285:59">-&gt;</operator><name pos:start="285:60" pos:end="285:65">qscale</name></name></expr></argument>, <argument pos:start="285:68" pos:end="285:81"><expr pos:start="285:68" pos:end="285:81"><name pos:start="285:68" pos:end="285:81"><name pos:start="285:68" pos:end="285:68">s</name><operator pos:start="285:69" pos:end="285:70">-&gt;</operator><name pos:start="285:71" pos:end="285:81">no_rounding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:63"><expr pos:start="291:5" pos:end="291:62"><call pos:start="291:5" pos:end="291:62"><name pos:start="291:5" pos:end="291:10">assert</name><argument_list pos:start="291:11" pos:end="291:62">(<argument pos:start="291:12" pos:end="291:61"><expr pos:start="291:12" pos:end="291:61"><name pos:start="291:12" pos:end="291:23"><name pos:start="291:12" pos:end="291:12">s</name><operator pos:start="291:13" pos:end="291:14">-&gt;</operator><name pos:start="291:15" pos:end="291:23">pict_type</name></name> <operator pos:start="291:25" pos:end="291:26">!=</operator> <name pos:start="291:28" pos:end="291:44">AV_PICTURE_TYPE_B</name> <operator pos:start="291:46" pos:end="291:47">||</operator> <operator pos:start="291:49" pos:end="291:49">!</operator><name pos:start="291:50" pos:end="291:61"><name pos:start="291:50" pos:end="291:50">s</name><operator pos:start="291:51" pos:end="291:52">-&gt;</operator><name pos:start="291:53" pos:end="291:61">low_delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="295:5" pos:end="295:45">return <expr pos:start="295:12" pos:end="295:44"><name pos:start="295:12" pos:end="295:22"><name pos:start="295:12" pos:end="295:12">s</name><operator pos:start="295:13" pos:end="295:14">-&gt;</operator><name pos:start="295:15" pos:end="295:22">mb_width</name></name><operator pos:start="295:23" pos:end="295:23">*</operator><name pos:start="295:24" pos:end="295:35"><name pos:start="295:24" pos:end="295:24">s</name><operator pos:start="295:25" pos:end="295:26">-&gt;</operator><name pos:start="295:27" pos:end="295:35">mb_height</name></name> <operator pos:start="295:37" pos:end="295:37">-</operator> <name pos:start="295:39" pos:end="295:44">mb_pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
