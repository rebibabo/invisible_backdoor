<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13573.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">kvm_arm_reset_vcpu</name><parameter_list pos:start="1:24" pos:end="1:36">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:32"><name pos:start="1:25" pos:end="1:30">ARMCPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="17:5">

    <comment type="block" pos:start="5:5" pos:end="5:57">/* Feed the kernel back its initial register state */</comment>

    <expr_stmt pos:start="7:5" pos:end="9:65"><expr pos:start="7:5" pos:end="9:64"><call pos:start="7:5" pos:end="9:64"><name pos:start="7:5" pos:end="7:11">memmove</name><argument_list pos:start="7:12" pos:end="9:64">(<argument pos:start="7:13" pos:end="7:29"><expr pos:start="7:13" pos:end="7:29"><name pos:start="7:13" pos:end="7:29"><name pos:start="7:13" pos:end="7:15">cpu</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:29">cpreg_values</name></name></expr></argument>, <argument pos:start="7:32" pos:end="7:54"><expr pos:start="7:32" pos:end="7:54"><name pos:start="7:32" pos:end="7:54"><name pos:start="7:32" pos:end="7:34">cpu</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:54">cpreg_reset_values</name></name></expr></argument>,

            <argument pos:start="9:13" pos:end="9:63"><expr pos:start="9:13" pos:end="9:63"><name pos:start="9:13" pos:end="9:32"><name pos:start="9:13" pos:end="9:15">cpu</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:32">cpreg_array_len</name></name> <operator pos:start="9:34" pos:end="9:34">*</operator> <sizeof pos:start="9:36" pos:end="9:63">sizeof<argument_list pos:start="9:42" pos:end="9:63">(<argument pos:start="9:43" pos:end="9:62"><expr pos:start="9:43" pos:end="9:62"><name pos:start="9:43" pos:end="9:62"><name pos:start="9:43" pos:end="9:45">cpu</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:59">cpreg_values</name><index pos:start="9:60" pos:end="9:62">[<expr pos:start="9:61" pos:end="9:61"><literal type="number" pos:start="9:61" pos:end="9:61">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:36"><name pos:start="13:10" pos:end="13:31">write_list_to_kvmstate</name><argument_list pos:start="13:32" pos:end="13:36">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">cpu</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:39" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:16">

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><call pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:13">abort</name><argument_list pos:start="15:14" pos:end="15:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
