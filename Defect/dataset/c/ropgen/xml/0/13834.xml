<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13834.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_video2</name><parameter_list pos:start="1:46" pos:end="5:47">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:85"><decl pos:start="1:70" pos:end="1:85"><type pos:start="1:70" pos:end="1:85"><name pos:start="1:70" pos:end="1:76">AVFrame</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">picture</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:45"><decl pos:start="3:26" pos:end="3:45"><type pos:start="3:26" pos:end="3:45"><name pos:start="3:26" pos:end="3:28">int</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:45">got_picture_ptr</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:46"><decl pos:start="5:26" pos:end="5:46"><type pos:start="5:26" pos:end="5:46"><specifier pos:start="5:26" pos:end="5:30">const</specifier> <name pos:start="5:32" pos:end="5:39">AVPacket</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:46">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="125:1">{<block_content pos:start="9:5" pos:end="123:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <comment type="line" pos:start="11:5" pos:end="11:44">// copy to ensure we do not change avpkt</comment>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:16">tmp</name> <init pos:start="13:18" pos:end="13:25">= <expr pos:start="13:20" pos:end="13:25"><operator pos:start="13:20" pos:end="13:20">*</operator><name pos:start="13:21" pos:end="13:25">avpkt</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">codec</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">type</name></name> <operator pos:start="17:28" pos:end="17:29">!=</operator> <name pos:start="17:31" pos:end="17:48">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="17:51" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:31">

        <expr_stmt pos:start="19:9" pos:end="19:70"><expr pos:start="19:9" pos:end="19:69"><call pos:start="19:9" pos:end="19:69"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:69">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:68"><expr pos:start="19:37" pos:end="19:68"><literal type="string" pos:start="19:37" pos:end="19:68">"Invalid media type for video\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:20">got_picture_ptr</name><operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if<condition pos:start="29:7" pos:end="29:123">(<expr pos:start="29:8" pos:end="29:122"><operator pos:start="29:8" pos:end="29:8">(</operator><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:26">coded_width</name></name><operator pos:start="29:27" pos:end="29:28">||</operator><name pos:start="29:29" pos:end="29:47"><name pos:start="29:29" pos:end="29:33">avctx</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:47">coded_height</name></name><operator pos:start="29:48" pos:end="29:48">)</operator> <operator pos:start="29:50" pos:end="29:51">&amp;&amp;</operator> <call pos:start="29:53" pos:end="29:122"><name pos:start="29:53" pos:end="29:71">av_image_check_size</name><argument_list pos:start="29:72" pos:end="29:122">(<argument pos:start="29:73" pos:end="29:90"><expr pos:start="29:73" pos:end="29:90"><name pos:start="29:73" pos:end="29:90"><name pos:start="29:73" pos:end="29:77">avctx</name><operator pos:start="29:78" pos:end="29:79">-&gt;</operator><name pos:start="29:80" pos:end="29:90">coded_width</name></name></expr></argument>, <argument pos:start="29:93" pos:end="29:111"><expr pos:start="29:93" pos:end="29:111"><name pos:start="29:93" pos:end="29:111"><name pos:start="29:93" pos:end="29:97">avctx</name><operator pos:start="29:98" pos:end="29:99">-&gt;</operator><name pos:start="29:100" pos:end="29:111">coded_height</name></name></expr></argument>, <argument pos:start="29:114" pos:end="29:114"><expr pos:start="29:114" pos:end="29:114"><literal type="number" pos:start="29:114" pos:end="29:114">0</literal></expr></argument>, <argument pos:start="29:117" pos:end="29:121"><expr pos:start="29:117" pos:end="29:121"><name pos:start="29:117" pos:end="29:121">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="119:15"><if pos:start="35:5" pos:end="117:5">if<condition pos:start="35:7" pos:end="35:116">(<expr pos:start="35:8" pos:end="35:115"><operator pos:start="35:8" pos:end="35:8">(</operator><name pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">codec</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:34">capabilities</name></name> <operator pos:start="35:36" pos:end="35:36">&amp;</operator> <name pos:start="35:38" pos:end="35:52">CODEC_CAP_DELAY</name><operator pos:start="35:53" pos:end="35:53">)</operator> <operator pos:start="35:55" pos:end="35:56">||</operator> <name pos:start="35:58" pos:end="35:68"><name pos:start="35:58" pos:end="35:62">avpkt</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:68">size</name></name> <operator pos:start="35:70" pos:end="35:71">||</operator> <operator pos:start="35:73" pos:end="35:73">(</operator><name pos:start="35:74" pos:end="35:98"><name pos:start="35:74" pos:end="35:78">avctx</name><operator pos:start="35:79" pos:end="35:80">-&gt;</operator><name pos:start="35:81" pos:end="35:98">active_thread_type</name></name><operator pos:start="35:99" pos:end="35:99">&amp;</operator><name pos:start="35:100" pos:end="35:114">FF_THREAD_FRAME</name><operator pos:start="35:115" pos:end="35:115">)</operator></expr>)</condition><block pos:start="35:117" pos:end="117:5">{<block_content pos:start="37:9" pos:end="115:9">

        <decl_stmt pos:start="37:9" pos:end="37:56"><decl pos:start="37:9" pos:end="37:55"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:21">did_split</name> <init pos:start="37:23" pos:end="37:55">= <expr pos:start="37:25" pos:end="37:55"><call pos:start="37:25" pos:end="37:55"><name pos:start="37:25" pos:end="37:49">av_packet_split_side_data</name><argument_list pos:start="37:50" pos:end="37:55">(<argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><operator pos:start="37:51" pos:end="37:51">&amp;</operator><name pos:start="37:52" pos:end="37:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:26">apply_param_change</name><argument_list pos:start="39:27" pos:end="39:39">(<argument pos:start="39:28" pos:end="39:32"><expr pos:start="39:28" pos:end="39:32"><name pos:start="39:28" pos:end="39:32">avctx</name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:13">avctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">pkt</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <operator pos:start="41:22" pos:end="41:22">&amp;</operator><name pos:start="41:23" pos:end="41:25">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="83:9"><if pos:start="43:9" pos:end="47:48">if <condition pos:start="43:12" pos:end="43:70">(<expr pos:start="43:13" pos:end="43:69"><name pos:start="43:13" pos:end="43:24">HAVE_THREADS</name> <operator pos:start="43:26" pos:end="43:27">&amp;&amp;</operator> <name pos:start="43:29" pos:end="43:53"><name pos:start="43:29" pos:end="43:33">avctx</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:53">active_thread_type</name></name><operator pos:start="43:54" pos:end="43:54">&amp;</operator><name pos:start="43:55" pos:end="43:69">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="45:14" pos:end="47:48"><block_content pos:start="45:14" pos:end="47:48">

             <expr_stmt pos:start="45:14" pos:end="47:48"><expr pos:start="45:14" pos:end="47:47"><name pos:start="45:14" pos:end="45:16">ret</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="47:47"><name pos:start="45:20" pos:end="45:41">ff_thread_decode_frame</name><argument_list pos:start="45:42" pos:end="47:47">(<argument pos:start="45:43" pos:end="45:47"><expr pos:start="45:43" pos:end="45:47"><name pos:start="45:43" pos:end="45:47">avctx</name></expr></argument>, <argument pos:start="45:50" pos:end="45:56"><expr pos:start="45:50" pos:end="45:56"><name pos:start="45:50" pos:end="45:56">picture</name></expr></argument>, <argument pos:start="45:59" pos:end="45:73"><expr pos:start="45:59" pos:end="45:73"><name pos:start="45:59" pos:end="45:73">got_picture_ptr</name></expr></argument>,

                                          <argument pos:start="47:43" pos:end="47:46"><expr pos:start="47:43" pos:end="47:46"><operator pos:start="47:43" pos:end="47:43">&amp;</operator><name pos:start="47:44" pos:end="47:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="49:9" pos:end="83:9">else <block pos:start="49:14" pos:end="83:9">{<block_content pos:start="51:13" pos:end="81:49">

            <expr_stmt pos:start="51:13" pos:end="53:36"><expr pos:start="51:13" pos:end="53:35"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="53:35"><name pos:start="51:19" pos:end="51:38"><name pos:start="51:19" pos:end="51:23">avctx</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:30">codec</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:38">decode</name></name><argument_list pos:start="51:39" pos:end="53:35">(<argument pos:start="51:40" pos:end="51:44"><expr pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:44">avctx</name></expr></argument>, <argument pos:start="51:47" pos:end="51:53"><expr pos:start="51:47" pos:end="51:53"><name pos:start="51:47" pos:end="51:53">picture</name></expr></argument>, <argument pos:start="51:56" pos:end="51:70"><expr pos:start="51:56" pos:end="51:70"><name pos:start="51:56" pos:end="51:70">got_picture_ptr</name></expr></argument>,

                              <argument pos:start="53:31" pos:end="53:34"><expr pos:start="53:31" pos:end="53:34"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:19">picture</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:28">pkt_dts</name></name><operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:40"><name pos:start="55:31" pos:end="55:35">avpkt</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">dts</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if<condition pos:start="59:15" pos:end="59:36">(<expr pos:start="59:16" pos:end="59:35"><operator pos:start="59:16" pos:end="59:16">!</operator><name pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:21">avctx</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:35">has_b_frames</name></name></expr>)</condition><block pos:start="59:37" pos:end="63:13">{<block_content pos:start="61:13" pos:end="61:41">

            <expr_stmt pos:start="61:13" pos:end="61:41"><expr pos:start="61:13" pos:end="61:40"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:19">picture</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:28">pkt_pos</name></name><operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:35">avpkt</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:40">pos</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="65:13" pos:end="65:66">//FIXME these should be under if(!avctx-&gt;has_b_frames)</comment>

            <if_stmt pos:start="67:13" pos:end="69:74"><if pos:start="67:13" pos:end="69:74">if <condition pos:start="67:16" pos:end="67:50">(<expr pos:start="67:17" pos:end="67:49"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:49"><name pos:start="67:18" pos:end="67:24">picture</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:45">sample_aspect_ratio</name><operator pos:start="67:46" pos:end="67:46">.</operator><name pos:start="67:47" pos:end="67:49">num</name></name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:74"><block_content pos:start="69:17" pos:end="69:74">

                <expr_stmt pos:start="69:17" pos:end="69:74"><expr pos:start="69:17" pos:end="69:73"><name pos:start="69:17" pos:end="69:44"><name pos:start="69:17" pos:end="69:23">picture</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:44">sample_aspect_ratio</name></name> <operator pos:start="69:46" pos:end="69:46">=</operator> <name pos:start="69:48" pos:end="69:73"><name pos:start="69:48" pos:end="69:52">avctx</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:73">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="71:13" pos:end="73:46"><if pos:start="71:13" pos:end="73:46">if <condition pos:start="71:16" pos:end="71:32">(<expr pos:start="71:17" pos:end="71:31"><operator pos:start="71:17" pos:end="71:17">!</operator><name pos:start="71:18" pos:end="71:31"><name pos:start="71:18" pos:end="71:24">picture</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:31">width</name></name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:46"><block_content pos:start="73:17" pos:end="73:46">

                <expr_stmt pos:start="73:17" pos:end="73:46"><expr pos:start="73:17" pos:end="73:45"><name pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:23">picture</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:30">width</name></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:38">avctx</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:45">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="77:48"><if pos:start="75:13" pos:end="77:48">if <condition pos:start="75:16" pos:end="75:33">(<expr pos:start="75:17" pos:end="75:32"><operator pos:start="75:17" pos:end="75:17">!</operator><name pos:start="75:18" pos:end="75:32"><name pos:start="75:18" pos:end="75:24">picture</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:32">height</name></name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:48"><block_content pos:start="77:17" pos:end="77:48">

                <expr_stmt pos:start="77:17" pos:end="77:48"><expr pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:23">picture</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:31">height</name></name> <operator pos:start="77:33" pos:end="77:33">=</operator> <name pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:39">avctx</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:47">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="81:49"><if pos:start="79:13" pos:end="81:49">if <condition pos:start="79:16" pos:end="79:48">(<expr pos:start="79:17" pos:end="79:47"><name pos:start="79:17" pos:end="79:31"><name pos:start="79:17" pos:end="79:23">picture</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:31">format</name></name> <operator pos:start="79:33" pos:end="79:34">==</operator> <name pos:start="79:36" pos:end="79:47">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:49"><block_content pos:start="81:17" pos:end="81:49">

                <expr_stmt pos:start="81:17" pos:end="81:49"><expr pos:start="81:17" pos:end="81:48"><name pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:23">picture</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:31">format</name></name> <operator pos:start="81:33" pos:end="81:33">=</operator> <name pos:start="81:35" pos:end="81:48"><name pos:start="81:35" pos:end="81:39">avctx</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:48">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:17"><expr pos:start="87:9" pos:end="87:16"><call pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:14">emms_c</name><argument_list pos:start="87:15" pos:end="87:16">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="87:19" pos:end="87:73">//needed to avoid an emms_c() call before every return;</comment>



        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:13">avctx</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:18">pkt</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:25">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:22">(<expr pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:21">did_split</name></expr>)</condition> <block pos:start="93:24" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:34">

            <expr_stmt pos:start="95:13" pos:end="95:43"><expr pos:start="95:13" pos:end="95:42"><call pos:start="95:13" pos:end="95:42"><name pos:start="95:13" pos:end="95:36">ff_packet_free_side_data</name><argument_list pos:start="95:37" pos:end="95:42">(<argument pos:start="95:38" pos:end="95:41"><expr pos:start="95:38" pos:end="95:41"><operator pos:start="95:38" pos:end="95:38">&amp;</operator><name pos:start="95:39" pos:end="95:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:34"><if pos:start="97:13" pos:end="99:34">if<condition pos:start="97:15" pos:end="97:31">(<expr pos:start="97:16" pos:end="97:30"><name pos:start="97:16" pos:end="97:18">ret</name> <operator pos:start="97:20" pos:end="97:21">==</operator> <name pos:start="97:23" pos:end="97:30"><name pos:start="97:23" pos:end="97:25">tmp</name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:34"><block_content pos:start="99:17" pos:end="99:34">

                <expr_stmt pos:start="99:17" pos:end="99:34"><expr pos:start="99:17" pos:end="99:33"><name pos:start="99:17" pos:end="99:19">ret</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:33"><name pos:start="99:23" pos:end="99:27">avpkt</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="115:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="105:29">(<expr pos:start="105:13" pos:end="105:28"><operator pos:start="105:13" pos:end="105:13">*</operator><name pos:start="105:14" pos:end="105:28">got_picture_ptr</name></expr>)</condition><block pos:start="105:30" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:78">

            <expr_stmt pos:start="107:13" pos:end="107:34"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:17">avctx</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:31">frame_number</name></name><operator pos:start="107:32" pos:end="107:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="113:78"><expr pos:start="109:13" pos:end="113:77"><name pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:19">picture</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:42">best_effort_timestamp</name></name> <operator pos:start="109:44" pos:end="109:44">=</operator> <call pos:start="109:46" pos:end="113:77"><name pos:start="109:46" pos:end="109:62">guess_correct_pts</name><argument_list pos:start="109:63" pos:end="113:77">(<argument pos:start="109:64" pos:end="109:68"><expr pos:start="109:64" pos:end="109:68"><name pos:start="109:64" pos:end="109:68">avctx</name></expr></argument>,

                                                            <argument pos:start="111:61" pos:end="111:76"><expr pos:start="111:61" pos:end="111:76"><name pos:start="111:61" pos:end="111:76"><name pos:start="111:61" pos:end="111:67">picture</name><operator pos:start="111:68" pos:end="111:69">-&gt;</operator><name pos:start="111:70" pos:end="111:76">pkt_pts</name></name></expr></argument>,

                                                            <argument pos:start="113:61" pos:end="113:76"><expr pos:start="113:61" pos:end="113:76"><name pos:start="113:61" pos:end="113:76"><name pos:start="113:61" pos:end="113:67">picture</name><operator pos:start="113:68" pos:end="113:69">-&gt;</operator><name pos:start="113:70" pos:end="113:76">pkt_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="117:6" pos:end="119:15">else<block type="pseudo" pos:start="119:9" pos:end="119:15"><block_content pos:start="119:9" pos:end="119:15">

        <expr_stmt pos:start="119:9" pos:end="119:15"><expr pos:start="119:9" pos:end="119:14"><name pos:start="119:9" pos:end="119:11">ret</name><operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="123:5" pos:end="123:15">return <expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
