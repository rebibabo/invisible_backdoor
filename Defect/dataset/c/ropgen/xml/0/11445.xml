<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11445.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">svq1_decode_delta_block</name><parameter_list pos:start="1:35" pos:end="5:77">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><name pos:start="1:55" pos:end="1:67">GetBitContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:75">bitbuf</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:51">current</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:70"><decl pos:start="3:54" pos:end="3:70"><type pos:start="3:54" pos:end="3:70"><name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:70">previous</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:44"><decl pos:start="5:36" pos:end="5:44"><type pos:start="5:36" pos:end="5:44"><name pos:start="5:36" pos:end="5:38">int</name></type> <name pos:start="5:40" pos:end="5:44">pitch</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:62"><decl pos:start="5:47" pos:end="5:62"><type pos:start="5:47" pos:end="5:62"><name pos:start="5:47" pos:end="5:54">svq1_pmv</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:62">motion</name></decl></parameter>, <parameter pos:start="5:65" pos:end="5:69"><decl pos:start="5:65" pos:end="5:69"><type pos:start="5:65" pos:end="5:69"><name pos:start="5:65" pos:end="5:67">int</name></type> <name pos:start="5:69" pos:end="5:69">x</name></decl></parameter>, <parameter pos:start="5:72" pos:end="5:76"><decl pos:start="5:72" pos:end="5:76"><type pos:start="5:72" pos:end="5:76"><name pos:start="5:72" pos:end="5:74">int</name></type> <name pos:start="5:76" pos:end="5:76">y</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="109:1">{<block_content pos:start="9:5" pos:end="107:18">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:23">block_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">result</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:24">/* get block type */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:14">block_type</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:62"><name pos:start="17:18" pos:end="17:25">get_vlc2</name><argument_list pos:start="17:26" pos:end="17:62">(<argument pos:start="17:27" pos:end="17:32"><expr pos:start="17:27" pos:end="17:32"><name pos:start="17:27" pos:end="17:32">bitbuf</name></expr></argument>, <argument pos:start="17:35" pos:end="17:55"><expr pos:start="17:35" pos:end="17:55"><name pos:start="17:35" pos:end="17:55"><name pos:start="17:35" pos:end="17:49">svq1_block_type</name><operator pos:start="17:50" pos:end="17:50">.</operator><name pos:start="17:51" pos:end="17:55">table</name></name></expr></argument>, <argument pos:start="17:58" pos:end="17:58"><expr pos:start="17:58" pos:end="17:58"><literal type="number" pos:start="17:58" pos:end="17:58">2</literal></expr></argument>, <argument pos:start="17:61" pos:end="17:61"><expr pos:start="17:61" pos:end="17:61"><literal type="number" pos:start="17:61" pos:end="17:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:30">/* reset motion vectors */</comment>

    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:72">(<expr pos:start="23:9" pos:end="23:71"><name pos:start="23:9" pos:end="23:18">block_type</name> <operator pos:start="23:20" pos:end="23:21">==</operator> <name pos:start="23:23" pos:end="23:37">SVQ1_BLOCK_SKIP</name> <operator pos:start="23:39" pos:end="23:40">||</operator> <name pos:start="23:42" pos:end="23:51">block_type</name> <operator pos:start="23:53" pos:end="23:54">==</operator> <name pos:start="23:56" pos:end="23:71">SVQ1_BLOCK_INTRA</name></expr>)</condition> <block pos:start="23:74" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:32">

        <expr_stmt pos:start="25:9" pos:end="35:32"><expr pos:start="25:9" pos:end="35:31"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:14">motion</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>]</index></name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:19">x</name>         <operator pos:start="25:29" pos:end="25:29">=</operator>

        <name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:14">motion</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>]</index></name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:19">y</name>         <operator pos:start="27:29" pos:end="27:29">=</operator>

        <name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:14">motion</name><index pos:start="29:15" pos:end="29:25">[<expr pos:start="29:16" pos:end="29:24"><name pos:start="29:16" pos:end="29:16">x</name> <operator pos:start="29:18" pos:end="29:18">/</operator> <literal type="number" pos:start="29:20" pos:end="29:22">8</literal> <operator pos:start="29:22" pos:end="29:22">+</operator> <literal type="number" pos:start="29:24" pos:end="29:24">2</literal></expr>]</index></name><operator pos:start="29:26" pos:end="29:26">.</operator><name pos:start="29:27" pos:end="29:27">x</name> <operator pos:start="29:29" pos:end="29:29">=</operator>

        <name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:14">motion</name><index pos:start="31:15" pos:end="31:25">[<expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:16">x</name> <operator pos:start="31:18" pos:end="31:18">/</operator> <literal type="number" pos:start="31:20" pos:end="31:22">8</literal> <operator pos:start="31:22" pos:end="31:22">+</operator> <literal type="number" pos:start="31:24" pos:end="31:24">2</literal></expr>]</index></name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:27">y</name> <operator pos:start="31:29" pos:end="31:29">=</operator>

        <name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:14">motion</name><index pos:start="33:15" pos:end="33:25">[<expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:16">x</name> <operator pos:start="33:18" pos:end="33:18">/</operator> <literal type="number" pos:start="33:20" pos:end="33:22">8</literal> <operator pos:start="33:22" pos:end="33:22">+</operator> <literal type="number" pos:start="33:24" pos:end="33:24">3</literal></expr>]</index></name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:27">x</name> <operator pos:start="33:29" pos:end="33:29">=</operator>

        <name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:14">motion</name><index pos:start="35:15" pos:end="35:25">[<expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:16">x</name> <operator pos:start="35:18" pos:end="35:18">/</operator> <literal type="number" pos:start="35:20" pos:end="35:22">8</literal> <operator pos:start="35:22" pos:end="35:22">+</operator> <literal type="number" pos:start="35:24" pos:end="35:24">3</literal></expr>]</index></name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:27">y</name> <operator pos:start="35:29" pos:end="35:29">=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="41:5" pos:end="103:5">switch <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:22">block_type</name></expr>)</condition> <block pos:start="41:25" pos:end="103:5">{<block_content pos:start="43:5" pos:end="101:14">

    <case pos:start="43:5" pos:end="43:25">case <expr pos:start="43:10" pos:end="43:24"><name pos:start="43:10" pos:end="43:24">SVQ1_BLOCK_SKIP</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><call pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:23">svq1_skip_block</name><argument_list pos:start="45:24" pos:end="45:55">(<argument pos:start="45:25" pos:end="45:31"><expr pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:31">current</name></expr></argument>, <argument pos:start="45:34" pos:end="45:41"><expr pos:start="45:34" pos:end="45:41"><name pos:start="45:34" pos:end="45:41">previous</name></expr></argument>, <argument pos:start="45:44" pos:end="45:48"><expr pos:start="45:44" pos:end="45:48"><name pos:start="45:44" pos:end="45:48">pitch</name></expr></argument>, <argument pos:start="45:51" pos:end="45:51"><expr pos:start="45:51" pos:end="45:51"><name pos:start="45:51" pos:end="45:51">x</name></expr></argument>, <argument pos:start="45:54" pos:end="45:54"><expr pos:start="45:54" pos:end="45:54"><name pos:start="45:54" pos:end="45:54">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>



    <case pos:start="51:5" pos:end="51:26">case <expr pos:start="51:10" pos:end="51:25"><name pos:start="51:10" pos:end="51:25">SVQ1_BLOCK_INTER</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="55:62"><expr pos:start="53:9" pos:end="55:61"><name pos:start="53:9" pos:end="53:14">result</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="55:61"><name pos:start="53:18" pos:end="53:40">svq1_motion_inter_block</name><argument_list pos:start="53:41" pos:end="55:61">(<argument pos:start="53:42" pos:end="53:42"><expr pos:start="53:42" pos:end="53:42"><name pos:start="53:42" pos:end="53:42">s</name></expr></argument>, <argument pos:start="53:45" pos:end="53:50"><expr pos:start="53:45" pos:end="53:50"><name pos:start="53:45" pos:end="53:50">bitbuf</name></expr></argument>, <argument pos:start="53:53" pos:end="53:59"><expr pos:start="53:53" pos:end="53:59"><name pos:start="53:53" pos:end="53:59">current</name></expr></argument>, <argument pos:start="53:62" pos:end="53:69"><expr pos:start="53:62" pos:end="53:69"><name pos:start="53:62" pos:end="53:69">previous</name></expr></argument>,

                                         <argument pos:start="55:42" pos:end="55:46"><expr pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:46">pitch</name></expr></argument>, <argument pos:start="55:49" pos:end="55:54"><expr pos:start="55:49" pos:end="55:54"><name pos:start="55:49" pos:end="55:54">motion</name></expr></argument>, <argument pos:start="55:57" pos:end="55:57"><expr pos:start="55:57" pos:end="55:57"><name pos:start="55:57" pos:end="55:57">x</name></expr></argument>, <argument pos:start="55:60" pos:end="55:60"><expr pos:start="55:60" pos:end="55:60"><name pos:start="55:60" pos:end="55:60">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:24">(<expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:18">result</name> <operator pos:start="59:20" pos:end="59:21">!=</operator> <literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>)</condition> <block pos:start="59:26" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:18">

            <expr_stmt pos:start="61:13" pos:end="61:79"><expr pos:start="61:13" pos:end="61:78"><call pos:start="61:13" pos:end="61:78"><name pos:start="61:13" pos:end="61:19">av_dlog</name><argument_list pos:start="61:20" pos:end="61:78">(<argument pos:start="61:21" pos:end="61:28"><expr pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:28">avctx</name></name></expr></argument>, <argument pos:start="61:31" pos:end="61:69"><expr pos:start="61:31" pos:end="61:69"><literal type="string" pos:start="61:31" pos:end="61:69">"Error in svq1_motion_inter_block %i\n"</literal></expr></argument>, <argument pos:start="61:72" pos:end="61:77"><expr pos:start="61:72" pos:end="61:77"><name pos:start="61:72" pos:end="61:77">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:14">result</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="67:68"><name pos:start="67:18" pos:end="67:44">svq1_decode_block_non_intra</name><argument_list pos:start="67:45" pos:end="67:68">(<argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:51">bitbuf</name></expr></argument>, <argument pos:start="67:54" pos:end="67:60"><expr pos:start="67:54" pos:end="67:60"><name pos:start="67:54" pos:end="67:60">current</name></expr></argument>, <argument pos:start="67:63" pos:end="67:67"><expr pos:start="67:63" pos:end="67:67"><name pos:start="67:63" pos:end="67:67">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:29">case <expr pos:start="73:10" pos:end="73:28"><name pos:start="73:10" pos:end="73:28">SVQ1_BLOCK_INTER_4V</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="77:65"><expr pos:start="75:9" pos:end="77:64"><name pos:start="75:9" pos:end="75:14">result</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="77:64"><name pos:start="75:18" pos:end="75:43">svq1_motion_inter_4v_block</name><argument_list pos:start="75:44" pos:end="77:64">(<argument pos:start="75:45" pos:end="75:45"><expr pos:start="75:45" pos:end="75:45"><name pos:start="75:45" pos:end="75:45">s</name></expr></argument>, <argument pos:start="75:48" pos:end="75:53"><expr pos:start="75:48" pos:end="75:53"><name pos:start="75:48" pos:end="75:53">bitbuf</name></expr></argument>, <argument pos:start="75:56" pos:end="75:62"><expr pos:start="75:56" pos:end="75:62"><name pos:start="75:56" pos:end="75:62">current</name></expr></argument>, <argument pos:start="75:65" pos:end="75:72"><expr pos:start="75:65" pos:end="75:72"><name pos:start="75:65" pos:end="75:72">previous</name></expr></argument>,

                                            <argument pos:start="77:45" pos:end="77:49"><expr pos:start="77:45" pos:end="77:49"><name pos:start="77:45" pos:end="77:49">pitch</name></expr></argument>, <argument pos:start="77:52" pos:end="77:57"><expr pos:start="77:52" pos:end="77:57"><name pos:start="77:52" pos:end="77:57">motion</name></expr></argument>, <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">x</name></expr></argument>, <argument pos:start="77:63" pos:end="77:63"><expr pos:start="77:63" pos:end="77:63"><name pos:start="77:63" pos:end="77:63">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="89:9">if <condition pos:start="81:12" pos:end="81:24">(<expr pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:18">result</name> <operator pos:start="81:20" pos:end="81:21">!=</operator> <literal type="number" pos:start="81:23" pos:end="81:23">0</literal></expr>)</condition> <block pos:start="81:26" pos:end="89:9">{<block_content pos:start="83:13" pos:end="87:18">

            <expr_stmt pos:start="83:13" pos:end="85:72"><expr pos:start="83:13" pos:end="85:71"><call pos:start="83:13" pos:end="85:71"><name pos:start="83:13" pos:end="83:19">av_dlog</name><argument_list pos:start="83:20" pos:end="85:71">(<argument pos:start="83:21" pos:end="83:28"><expr pos:start="83:21" pos:end="83:28"><name pos:start="83:21" pos:end="83:28"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:28">avctx</name></name></expr></argument>,

                    <argument pos:start="85:21" pos:end="85:62"><expr pos:start="85:21" pos:end="85:62"><literal type="string" pos:start="85:21" pos:end="85:62">"Error in svq1_motion_inter_4v_block %i\n"</literal></expr></argument>, <argument pos:start="85:65" pos:end="85:70"><expr pos:start="85:65" pos:end="85:70"><name pos:start="85:65" pos:end="85:70">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:69"><expr pos:start="91:9" pos:end="91:68"><name pos:start="91:9" pos:end="91:14">result</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:68"><name pos:start="91:18" pos:end="91:44">svq1_decode_block_non_intra</name><argument_list pos:start="91:45" pos:end="91:68">(<argument pos:start="91:46" pos:end="91:51"><expr pos:start="91:46" pos:end="91:51"><name pos:start="91:46" pos:end="91:51">bitbuf</name></expr></argument>, <argument pos:start="91:54" pos:end="91:60"><expr pos:start="91:54" pos:end="91:60"><name pos:start="91:54" pos:end="91:60">current</name></expr></argument>, <argument pos:start="91:63" pos:end="91:67"><expr pos:start="91:63" pos:end="91:67"><name pos:start="91:63" pos:end="91:67">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>



    <case pos:start="97:5" pos:end="97:26">case <expr pos:start="97:10" pos:end="97:25"><name pos:start="97:10" pos:end="97:25">SVQ1_BLOCK_INTRA</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:65"><expr pos:start="99:9" pos:end="99:64"><name pos:start="99:9" pos:end="99:14">result</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:64"><name pos:start="99:18" pos:end="99:40">svq1_decode_block_intra</name><argument_list pos:start="99:41" pos:end="99:64">(<argument pos:start="99:42" pos:end="99:47"><expr pos:start="99:42" pos:end="99:47"><name pos:start="99:42" pos:end="99:47">bitbuf</name></expr></argument>, <argument pos:start="99:50" pos:end="99:56"><expr pos:start="99:50" pos:end="99:56"><name pos:start="99:50" pos:end="99:56">current</name></expr></argument>, <argument pos:start="99:59" pos:end="99:63"><expr pos:start="99:59" pos:end="99:63"><name pos:start="99:59" pos:end="99:63">pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="107:5" pos:end="107:18">return <expr pos:start="107:12" pos:end="107:17"><name pos:start="107:12" pos:end="107:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
