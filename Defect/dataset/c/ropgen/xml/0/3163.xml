<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3163.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">xmv_process_packet_header</name><parameter_list pos:start="1:37" pos:end="1:56">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:52">AVFormatContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">XMVDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">xmv</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:15">AVIOContext</name>     <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">pb</name>  <init pos:start="7:26" pos:end="7:32">= <expr pos:start="7:28" pos:end="7:32"><name pos:start="7:28" pos:end="7:32"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:32">pb</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type>  <name pos:start="11:14" pos:end="11:20"><name pos:start="11:14" pos:end="11:17">data</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:24">audio_track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:24">data_offset</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:26">/* Next packet size */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:7">xmv</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:25">next_packet_size</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <call pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:37">avio_rl32</name><argument_list pos:start="21:38" pos:end="21:41">(<argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:29">/* Packet video header */</comment>



    <if_stmt pos:start="29:5" pos:end="31:28"><if pos:start="29:5" pos:end="31:28">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:17">avio_read</name><argument_list pos:start="29:18" pos:end="29:30">(<argument pos:start="29:19" pos:end="29:20"><expr pos:start="29:19" pos:end="29:20"><name pos:start="29:19" pos:end="29:20">pb</name></expr></argument>, <argument pos:start="29:23" pos:end="29:26"><expr pos:start="29:23" pos:end="29:26"><name pos:start="29:23" pos:end="29:26">data</name></expr></argument>, <argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">8</literal></expr></argument>)</argument_list></call> <operator pos:start="29:32" pos:end="29:33">!=</operator> <literal type="number" pos:start="29:35" pos:end="29:35">8</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:28"><block_content pos:start="31:9" pos:end="31:28">

        <return pos:start="31:9" pos:end="31:28">return <expr pos:start="31:16" pos:end="31:27"><call pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:27">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:7">xmv</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">video</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:24">data_size</name></name>     <operator pos:start="35:30" pos:end="35:30">=</operator> <call pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:38">AV_RL32</name><argument_list pos:start="35:39" pos:end="35:44">(<argument pos:start="35:40" pos:end="35:43"><expr pos:start="35:40" pos:end="35:43"><name pos:start="35:40" pos:end="35:43">data</name></expr></argument>)</argument_list></call> <operator pos:start="35:46" pos:end="35:46">&amp;</operator> <literal type="number" pos:start="35:48" pos:end="35:57">0x007FFFFF</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:7">xmv</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:14">video</name><operator pos:start="39:15" pos:end="39:15">.</operator><name pos:start="39:16" pos:end="39:28">current_frame</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:7">xmv</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:14">video</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:26">frame_count</name></name>   <operator pos:start="41:30" pos:end="41:30">=</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><call pos:start="41:33" pos:end="41:45"><name pos:start="41:33" pos:end="41:39">AV_RL32</name><argument_list pos:start="41:40" pos:end="41:45">(<argument pos:start="41:41" pos:end="41:44"><expr pos:start="41:41" pos:end="41:44"><name pos:start="41:41" pos:end="41:44">data</name></expr></argument>)</argument_list></call> <operator pos:start="41:47" pos:end="41:48">&gt;&gt;</operator> <literal type="number" pos:start="41:50" pos:end="41:51">23</literal><operator pos:start="41:52" pos:end="41:52">)</operator> <operator pos:start="41:54" pos:end="41:54">&amp;</operator> <literal type="number" pos:start="41:56" pos:end="41:59">0xFF</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:7">xmv</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:14">video</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:28">has_extradata</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <operator pos:start="45:32" pos:end="45:32">(</operator><name pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:36">data</name><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">3</literal></expr>]</index></name> <operator pos:start="45:41" pos:end="45:41">&amp;</operator> <literal type="number" pos:start="45:43" pos:end="45:46">0x80</literal><operator pos:start="45:47" pos:end="45:47">)</operator> <operator pos:start="45:49" pos:end="45:50">!=</operator> <literal type="number" pos:start="45:52" pos:end="45:52">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="65:7">/* Adding the audio data sizes and the video data size keeps you 4 bytes

     * short for every audio track. But as playing around with XMV files with

     * ADPCM audio showed, taking the extra 4 bytes from the audio data gives

     * you either completely distorted audio or click (when skipping the

     * remaining 68 bytes of the ADPCM block). Subtracting 4 bytes for every

     * audio track from the video data works at least for the audio. Probably

     * some alignment thing?

     * The video data has (always?) lots of padding, so it should work out...

     */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:7">xmv</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">video</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:24">data_size</name></name> <operator pos:start="67:26" pos:end="67:27">-=</operator> <name pos:start="67:29" pos:end="67:50"><name pos:start="67:29" pos:end="67:31">xmv</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:50">audio_track_count</name></name> <operator pos:start="67:52" pos:end="67:52">*</operator> <literal type="number" pos:start="67:54" pos:end="67:54">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:7">xmv</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:23">current_stream</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:31"><name pos:start="73:10" pos:end="73:12">xmv</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:19">video</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:31">frame_count</name></name></expr>)</condition> <block pos:start="73:34" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:55">

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:11">xmv</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">video</name><operator pos:start="75:19" pos:end="75:19">.</operator><name pos:start="75:20" pos:end="75:30">frame_count</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <literal type="number" pos:start="75:34" pos:end="75:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:55"><expr pos:start="77:9" pos:end="77:54"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:11">xmv</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:27">current_stream</name></name>    <operator pos:start="77:32" pos:end="77:32">=</operator> <name pos:start="77:34" pos:end="77:50"><name pos:start="77:34" pos:end="77:36">xmv</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:50">stream_count</name></name> <operator pos:start="77:52" pos:end="77:52">&gt;</operator> <literal type="number" pos:start="77:54" pos:end="77:54">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:29">/* Packet audio header */</comment>



    <for pos:start="87:5" pos:end="123:5">for <control pos:start="87:9" pos:end="87:78">(<init pos:start="87:10" pos:end="87:25"><expr pos:start="87:10" pos:end="87:24"><name pos:start="87:10" pos:end="87:20">audio_track</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>;</init> <condition pos:start="87:27" pos:end="87:63"><expr pos:start="87:27" pos:end="87:62"><name pos:start="87:27" pos:end="87:37">audio_track</name> <operator pos:start="87:39" pos:end="87:39">&lt;</operator> <name pos:start="87:41" pos:end="87:62"><name pos:start="87:41" pos:end="87:43">xmv</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:62">audio_track_count</name></name></expr>;</condition> <incr pos:start="87:65" pos:end="87:77"><expr pos:start="87:65" pos:end="87:77"><name pos:start="87:65" pos:end="87:75">audio_track</name><operator pos:start="87:76" pos:end="87:77">++</operator></expr></incr>)</control> <block pos:start="87:80" pos:end="123:5">{<block_content pos:start="89:9" pos:end="121:71">

        <decl_stmt pos:start="89:9" pos:end="89:58"><decl pos:start="89:9" pos:end="89:57"><type pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:22">XMVAudioPacket</name> <modifier pos:start="89:24" pos:end="89:24">*</modifier></type><name pos:start="89:25" pos:end="89:30">packet</name> <init pos:start="89:32" pos:end="89:57">= <expr pos:start="89:34" pos:end="89:57"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:57"><name pos:start="89:35" pos:end="89:37">xmv</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:44">audio</name><index pos:start="89:45" pos:end="89:57">[<expr pos:start="89:46" pos:end="89:56"><name pos:start="89:46" pos:end="89:56">audio_track</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="93:9" pos:end="95:32"><if pos:start="93:9" pos:end="95:32">if <condition pos:start="93:12" pos:end="93:40">(<expr pos:start="93:13" pos:end="93:39"><call pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:21">avio_read</name><argument_list pos:start="93:22" pos:end="93:34">(<argument pos:start="93:23" pos:end="93:24"><expr pos:start="93:23" pos:end="93:24"><name pos:start="93:23" pos:end="93:24">pb</name></expr></argument>, <argument pos:start="93:27" pos:end="93:30"><expr pos:start="93:27" pos:end="93:30"><name pos:start="93:27" pos:end="93:30">data</name></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">4</literal></expr></argument>)</argument_list></call> <operator pos:start="93:36" pos:end="93:37">!=</operator> <literal type="number" pos:start="93:39" pos:end="93:39">4</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:32"><block_content pos:start="95:13" pos:end="95:32">

            <return pos:start="95:13" pos:end="95:32">return <expr pos:start="95:20" pos:end="95:31"><call pos:start="95:20" pos:end="95:31"><name pos:start="95:20" pos:end="95:26">AVERROR</name><argument_list pos:start="95:27" pos:end="95:31">(<argument pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><name pos:start="95:28" pos:end="95:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:55"><expr pos:start="99:9" pos:end="99:54"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:14">packet</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:25">data_size</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <call pos:start="99:29" pos:end="99:41"><name pos:start="99:29" pos:end="99:35">AV_RL32</name><argument_list pos:start="99:36" pos:end="99:41">(<argument pos:start="99:37" pos:end="99:40"><expr pos:start="99:37" pos:end="99:40"><name pos:start="99:37" pos:end="99:40">data</name></expr></argument>)</argument_list></call> <operator pos:start="99:43" pos:end="99:43">&amp;</operator> <literal type="number" pos:start="99:45" pos:end="99:54">0x007FFFFF</literal></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="113:70"><if pos:start="101:9" pos:end="113:70">if <condition pos:start="101:12" pos:end="101:59">(<expr pos:start="101:13" pos:end="101:58"><operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:30"><name pos:start="101:14" pos:end="101:19">packet</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:30">data_size</name></name> <operator pos:start="101:32" pos:end="101:33">==</operator> <literal type="number" pos:start="101:35" pos:end="101:35">0</literal><operator pos:start="101:36" pos:end="101:36">)</operator> <operator pos:start="101:38" pos:end="101:39">&amp;&amp;</operator> <operator pos:start="101:41" pos:end="101:41">(</operator><name pos:start="101:42" pos:end="101:52">audio_track</name> <operator pos:start="101:54" pos:end="101:55">!=</operator> <literal type="number" pos:start="101:57" pos:end="101:57">0</literal><operator pos:start="101:58" pos:end="101:58">)</operator></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:70"><block_content pos:start="113:13" pos:end="113:70">

            <comment type="block" pos:start="103:13" pos:end="111:15">/* This happens when I create an XMV with several identical audio

             * streams. From the size calculations, duplicating the previous

             * stream's size works out, but the track data itself is silent.

             * Maybe this should also redirect the offset to the previous track?

             */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:70"><expr pos:start="113:13" pos:end="113:69"><name pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:18">packet</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:29">data_size</name></name> <operator pos:start="113:31" pos:end="113:31">=</operator> <name pos:start="113:33" pos:end="113:59"><name pos:start="113:33" pos:end="113:35">xmv</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:42">audio</name><index pos:start="113:43" pos:end="113:59">[<expr pos:start="113:44" pos:end="113:58"><name pos:start="113:44" pos:end="113:54">audio_track</name> <operator pos:start="113:56" pos:end="113:56">-</operator> <literal type="number" pos:start="113:58" pos:end="113:58">1</literal></expr>]</index></name><operator pos:start="113:60" pos:end="113:60">.</operator><name pos:start="113:61" pos:end="113:69">data_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="117:9" pos:end="117:59">/* Carve up the audio data in frame_count slices */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:74"><expr pos:start="119:9" pos:end="119:73"><name pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:14">packet</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:26">frame_size</name></name>  <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:47"><name pos:start="119:31" pos:end="119:36">packet</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:47">data_size</name></name>  <operator pos:start="119:50" pos:end="119:50">/</operator> <name pos:start="119:52" pos:end="119:73"><name pos:start="119:52" pos:end="119:54">xmv</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:61">video</name><operator pos:start="119:62" pos:end="119:62">.</operator><name pos:start="119:63" pos:end="119:73">frame_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:71"><expr pos:start="121:9" pos:end="121:70"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:14">packet</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:26">frame_size</name></name> <operator pos:start="121:28" pos:end="121:29">-=</operator> <name pos:start="121:31" pos:end="121:48"><name pos:start="121:31" pos:end="121:36">packet</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:48">frame_size</name></name> <operator pos:start="121:50" pos:end="121:50">%</operator> <name pos:start="121:52" pos:end="121:70"><name pos:start="121:52" pos:end="121:57">packet</name><operator pos:start="121:58" pos:end="121:59">-&gt;</operator><name pos:start="121:60" pos:end="121:70">block_align</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="127:5" pos:end="127:29">/* Packet data offsets */</comment>



    <expr_stmt pos:start="131:5" pos:end="131:32"><expr pos:start="131:5" pos:end="131:31"><name pos:start="131:5" pos:end="131:15">data_offset</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:31"><name pos:start="131:19" pos:end="131:27">avio_tell</name><argument_list pos:start="131:28" pos:end="131:31">(<argument pos:start="131:29" pos:end="131:30"><expr pos:start="131:29" pos:end="131:30"><name pos:start="131:29" pos:end="131:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:41"><expr pos:start="135:5" pos:end="135:40"><name pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:7">xmv</name><operator pos:start="135:8" pos:end="135:9">-&gt;</operator><name pos:start="135:10" pos:end="135:14">video</name><operator pos:start="135:15" pos:end="135:15">.</operator><name pos:start="135:16" pos:end="135:26">data_offset</name></name> <operator pos:start="135:28" pos:end="135:28">=</operator> <name pos:start="135:30" pos:end="135:40">data_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:40"><expr pos:start="137:5" pos:end="137:39"><name pos:start="137:5" pos:end="137:15">data_offset</name> <operator pos:start="137:17" pos:end="137:18">+=</operator> <name pos:start="137:20" pos:end="137:39"><name pos:start="137:20" pos:end="137:22">xmv</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:29">video</name><operator pos:start="137:30" pos:end="137:30">.</operator><name pos:start="137:31" pos:end="137:39">data_size</name></name></expr>;</expr_stmt>



    <for pos:start="141:5" pos:end="147:5">for <control pos:start="141:9" pos:end="141:78">(<init pos:start="141:10" pos:end="141:25"><expr pos:start="141:10" pos:end="141:24"><name pos:start="141:10" pos:end="141:20">audio_track</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <literal type="number" pos:start="141:24" pos:end="141:24">0</literal></expr>;</init> <condition pos:start="141:27" pos:end="141:63"><expr pos:start="141:27" pos:end="141:62"><name pos:start="141:27" pos:end="141:37">audio_track</name> <operator pos:start="141:39" pos:end="141:39">&lt;</operator> <name pos:start="141:41" pos:end="141:62"><name pos:start="141:41" pos:end="141:43">xmv</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:62">audio_track_count</name></name></expr>;</condition> <incr pos:start="141:65" pos:end="141:77"><expr pos:start="141:65" pos:end="141:77"><name pos:start="141:65" pos:end="141:75">audio_track</name><operator pos:start="141:76" pos:end="141:77">++</operator></expr></incr>)</control> <block pos:start="141:80" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:57">

        <expr_stmt pos:start="143:9" pos:end="143:58"><expr pos:start="143:9" pos:end="143:57"><name pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:11">xmv</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:18">audio</name><index pos:start="143:19" pos:end="143:31">[<expr pos:start="143:20" pos:end="143:30"><name pos:start="143:20" pos:end="143:30">audio_track</name></expr>]</index></name><operator pos:start="143:32" pos:end="143:32">.</operator><name pos:start="143:33" pos:end="143:43">data_offset</name> <operator pos:start="143:45" pos:end="143:45">=</operator> <name pos:start="143:47" pos:end="143:57">data_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:57"><expr pos:start="145:9" pos:end="145:56"><name pos:start="145:9" pos:end="145:19">data_offset</name> <operator pos:start="145:21" pos:end="145:22">+=</operator> <name pos:start="145:24" pos:end="145:46"><name pos:start="145:24" pos:end="145:26">xmv</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:33">audio</name><index pos:start="145:34" pos:end="145:46">[<expr pos:start="145:35" pos:end="145:45"><name pos:start="145:35" pos:end="145:45">audio_track</name></expr>]</index></name><operator pos:start="145:47" pos:end="145:47">.</operator><name pos:start="145:48" pos:end="145:56">data_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="151:5" pos:end="151:29">/* Video frames header */</comment>



    <comment type="block" pos:start="155:5" pos:end="155:35">/* Read new video extra data */</comment>

    <if_stmt pos:start="157:5" pos:end="199:5"><if pos:start="157:5" pos:end="199:5">if <condition pos:start="157:8" pos:end="157:33">(<expr pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:11">xmv</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:18">video</name><operator pos:start="157:19" pos:end="157:19">.</operator><name pos:start="157:20" pos:end="157:28">data_size</name></name> <operator pos:start="157:30" pos:end="157:30">&gt;</operator> <literal type="number" pos:start="157:32" pos:end="157:32">0</literal></expr>)</condition> <block pos:start="157:35" pos:end="199:5">{<block_content pos:start="159:9" pos:end="197:9">

        <if_stmt pos:start="159:9" pos:end="197:9"><if pos:start="159:9" pos:end="197:9">if <condition pos:start="159:12" pos:end="159:37">(<expr pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:15">xmv</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:22">video</name><operator pos:start="159:23" pos:end="159:23">.</operator><name pos:start="159:24" pos:end="159:36">has_extradata</name></name></expr>)</condition> <block pos:start="159:39" pos:end="197:9">{<block_content pos:start="161:13" pos:end="195:13">

            <expr_stmt pos:start="161:13" pos:end="161:57"><expr pos:start="161:13" pos:end="161:56"><call pos:start="161:13" pos:end="161:56"><name pos:start="161:13" pos:end="161:30">xmv_read_extradata</name><argument_list pos:start="161:31" pos:end="161:56">(<argument pos:start="161:32" pos:end="161:51"><expr pos:start="161:32" pos:end="161:51"><name pos:start="161:32" pos:end="161:51"><name pos:start="161:32" pos:end="161:34">xmv</name><operator pos:start="161:35" pos:end="161:36">-&gt;</operator><name pos:start="161:37" pos:end="161:41">video</name><operator pos:start="161:42" pos:end="161:42">.</operator><name pos:start="161:43" pos:end="161:51">extradata</name></name></expr></argument>, <argument pos:start="161:54" pos:end="161:55"><expr pos:start="161:54" pos:end="161:55"><name pos:start="161:54" pos:end="161:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="165:13" pos:end="165:40"><expr pos:start="165:13" pos:end="165:39"><name pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:15">xmv</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:22">video</name><operator pos:start="165:23" pos:end="165:23">.</operator><name pos:start="165:24" pos:end="165:32">data_size</name></name>   <operator pos:start="165:36" pos:end="165:37">-=</operator> <literal type="number" pos:start="165:39" pos:end="165:39">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:40"><expr pos:start="167:13" pos:end="167:39"><name pos:start="167:13" pos:end="167:34"><name pos:start="167:13" pos:end="167:15">xmv</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:22">video</name><operator pos:start="167:23" pos:end="167:23">.</operator><name pos:start="167:24" pos:end="167:34">data_offset</name></name> <operator pos:start="167:36" pos:end="167:37">+=</operator> <literal type="number" pos:start="167:39" pos:end="167:39">4</literal></expr>;</expr_stmt>



            <if_stmt pos:start="171:13" pos:end="195:13"><if pos:start="171:13" pos:end="195:13">if <condition pos:start="171:16" pos:end="171:45">(<expr pos:start="171:17" pos:end="171:44"><name pos:start="171:17" pos:end="171:39"><name pos:start="171:17" pos:end="171:19">xmv</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:26">video</name><operator pos:start="171:27" pos:end="171:27">.</operator><name pos:start="171:28" pos:end="171:39">stream_index</name></name> <operator pos:start="171:41" pos:end="171:42">&gt;=</operator> <literal type="number" pos:start="171:44" pos:end="171:44">0</literal></expr>)</condition> <block pos:start="171:47" pos:end="195:13">{<block_content pos:start="173:17" pos:end="193:71">

                <decl_stmt pos:start="173:17" pos:end="173:68"><decl pos:start="173:17" pos:end="173:67"><type pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:24">AVStream</name> <modifier pos:start="173:26" pos:end="173:26">*</modifier></type><name pos:start="173:27" pos:end="173:29">vst</name> <init pos:start="173:31" pos:end="173:67">= <expr pos:start="173:33" pos:end="173:67"><name pos:start="173:33" pos:end="173:67"><name pos:start="173:33" pos:end="173:33">s</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:42">streams</name><index pos:start="173:43" pos:end="173:67">[<expr pos:start="173:44" pos:end="173:66"><name pos:start="173:44" pos:end="173:66"><name pos:start="173:44" pos:end="173:46">xmv</name><operator pos:start="173:47" pos:end="173:48">-&gt;</operator><name pos:start="173:49" pos:end="173:53">video</name><operator pos:start="173:54" pos:end="173:54">.</operator><name pos:start="173:55" pos:end="173:66">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="177:17" pos:end="177:68"><expr pos:start="177:17" pos:end="177:67"><call pos:start="177:17" pos:end="177:67"><name pos:start="177:17" pos:end="177:26">av_assert0</name><argument_list pos:start="177:27" pos:end="177:67">(<argument pos:start="177:28" pos:end="177:66"><expr pos:start="177:28" pos:end="177:66"><name pos:start="177:28" pos:end="177:50"><name pos:start="177:28" pos:end="177:30">xmv</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:37">video</name><operator pos:start="177:38" pos:end="177:38">.</operator><name pos:start="177:39" pos:end="177:50">stream_index</name></name> <operator pos:start="177:52" pos:end="177:52">&lt;</operator> <name pos:start="177:54" pos:end="177:66"><name pos:start="177:54" pos:end="177:54">s</name><operator pos:start="177:55" pos:end="177:56">-&gt;</operator><name pos:start="177:57" pos:end="177:66">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="181:17" pos:end="189:17"><if pos:start="181:17" pos:end="189:17">if <condition pos:start="181:20" pos:end="181:51">(<expr pos:start="181:21" pos:end="181:50"><name pos:start="181:21" pos:end="181:46"><name pos:start="181:21" pos:end="181:23">vst</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:30">codec</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:46">extradata_size</name></name> <operator pos:start="181:48" pos:end="181:48">&lt;</operator> <literal type="number" pos:start="181:50" pos:end="181:50">4</literal></expr>)</condition> <block pos:start="181:53" pos:end="189:17">{<block_content pos:start="183:21" pos:end="187:54">

                    <expr_stmt pos:start="183:21" pos:end="183:53"><expr pos:start="183:21" pos:end="183:52"><call pos:start="183:21" pos:end="183:52"><name pos:start="183:21" pos:end="183:28">av_freep</name><argument_list pos:start="183:29" pos:end="183:52">(<argument pos:start="183:30" pos:end="183:51"><expr pos:start="183:30" pos:end="183:51"><operator pos:start="183:30" pos:end="183:30">&amp;</operator><name pos:start="183:31" pos:end="183:51"><name pos:start="183:31" pos:end="183:33">vst</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:40">codec</name><operator pos:start="183:41" pos:end="183:42">-&gt;</operator><name pos:start="183:43" pos:end="183:51">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="187:21" pos:end="187:54"><expr pos:start="187:21" pos:end="187:53"><call pos:start="187:21" pos:end="187:53"><name pos:start="187:21" pos:end="187:38">ff_alloc_extradata</name><argument_list pos:start="187:39" pos:end="187:53">(<argument pos:start="187:40" pos:end="187:49"><expr pos:start="187:40" pos:end="187:49"><name pos:start="187:40" pos:end="187:49"><name pos:start="187:40" pos:end="187:42">vst</name><operator pos:start="187:43" pos:end="187:44">-&gt;</operator><name pos:start="187:45" pos:end="187:49">codec</name></name></expr></argument>, <argument pos:start="187:52" pos:end="187:52"><expr pos:start="187:52" pos:end="187:52"><literal type="number" pos:start="187:52" pos:end="187:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="193:17" pos:end="193:71"><expr pos:start="193:17" pos:end="193:70"><call pos:start="193:17" pos:end="193:70"><name pos:start="193:17" pos:end="193:22">memcpy</name><argument_list pos:start="193:23" pos:end="193:70">(<argument pos:start="193:24" pos:end="193:44"><expr pos:start="193:24" pos:end="193:44"><name pos:start="193:24" pos:end="193:44"><name pos:start="193:24" pos:end="193:26">vst</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:33">codec</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:44">extradata</name></name></expr></argument>, <argument pos:start="193:47" pos:end="193:66"><expr pos:start="193:47" pos:end="193:66"><name pos:start="193:47" pos:end="193:66"><name pos:start="193:47" pos:end="193:49">xmv</name><operator pos:start="193:50" pos:end="193:51">-&gt;</operator><name pos:start="193:52" pos:end="193:56">video</name><operator pos:start="193:57" pos:end="193:57">.</operator><name pos:start="193:58" pos:end="193:66">extradata</name></name></expr></argument>, <argument pos:start="193:69" pos:end="193:69"><expr pos:start="193:69" pos:end="193:69"><literal type="number" pos:start="193:69" pos:end="193:69">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="203:5" pos:end="203:13">return <expr pos:start="203:12" pos:end="203:12"><literal type="number" pos:start="203:12" pos:end="203:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
