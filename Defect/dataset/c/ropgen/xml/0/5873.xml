<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5873.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">smbios_build_type_1_fields</name><parameter_list pos:start="1:39" pos:end="1:53">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:51"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">t</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:47">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:18">[<expr pos:start="5:14" pos:end="5:17"><literal type="number" pos:start="5:14" pos:end="5:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:47"><if pos:start="9:5" pos:end="13:47">if <condition pos:start="9:8" pos:end="9:61">(<expr pos:start="9:9" pos:end="9:60"><call pos:start="9:9" pos:end="9:60"><name pos:start="9:9" pos:end="9:23">get_param_value</name><argument_list pos:start="9:24" pos:end="9:60">(<argument pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:27">buf</name></expr></argument>, <argument pos:start="9:30" pos:end="9:40"><expr pos:start="9:30" pos:end="9:40"><sizeof pos:start="9:30" pos:end="9:40">sizeof<argument_list pos:start="9:36" pos:end="9:40">(<argument pos:start="9:37" pos:end="9:39"><expr pos:start="9:37" pos:end="9:39"><name pos:start="9:37" pos:end="9:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="9:43" pos:end="9:56"><expr pos:start="9:43" pos:end="9:56"><literal type="string" pos:start="9:43" pos:end="9:56">"manufacturer"</literal></expr></argument>, <argument pos:start="9:59" pos:end="9:59"><expr pos:start="9:59" pos:end="9:59"><name pos:start="9:59" pos:end="9:59">t</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="13:47"><block_content pos:start="11:9" pos:end="13:47">

        <expr_stmt pos:start="11:9" pos:end="13:47"><expr pos:start="11:9" pos:end="13:46"><call pos:start="11:9" pos:end="13:46"><name pos:start="11:9" pos:end="11:24">smbios_add_field</name><argument_list pos:start="11:25" pos:end="13:46">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">1</literal></expr></argument>, <argument pos:start="11:29" pos:end="11:76"><expr pos:start="11:29" pos:end="11:76"><call pos:start="11:29" pos:end="11:76"><name pos:start="11:29" pos:end="11:36">offsetof</name><argument_list pos:start="11:37" pos:end="11:76">(<argument pos:start="11:38" pos:end="11:57"><expr pos:start="11:38" pos:end="11:57">struct <name pos:start="11:45" pos:end="11:57">smbios_type_1</name></expr></argument>, <argument pos:start="11:60" pos:end="11:75"><expr pos:start="11:60" pos:end="11:75"><name pos:start="11:60" pos:end="11:75">manufacturer_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="13:26" pos:end="13:40"><expr pos:start="13:26" pos:end="13:40"><call pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:31">strlen</name><argument_list pos:start="13:32" pos:end="13:36">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="13:38" pos:end="13:38">+</operator> <literal type="number" pos:start="13:40" pos:end="13:40">1</literal></expr></argument>, <argument pos:start="13:43" pos:end="13:45"><expr pos:start="13:43" pos:end="13:45"><name pos:start="13:43" pos:end="13:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="19:47"><if pos:start="15:5" pos:end="19:47">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:23">get_param_value</name><argument_list pos:start="15:24" pos:end="15:55">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">buf</name></expr></argument>, <argument pos:start="15:30" pos:end="15:40"><expr pos:start="15:30" pos:end="15:40"><sizeof pos:start="15:30" pos:end="15:40">sizeof<argument_list pos:start="15:36" pos:end="15:40">(<argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:43" pos:end="15:51"><expr pos:start="15:43" pos:end="15:51"><literal type="string" pos:start="15:43" pos:end="15:51">"product"</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:54"><expr pos:start="15:54" pos:end="15:54"><name pos:start="15:54" pos:end="15:54">t</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="19:47"><block_content pos:start="17:9" pos:end="19:47">

        <expr_stmt pos:start="17:9" pos:end="19:47"><expr pos:start="17:9" pos:end="19:46"><call pos:start="17:9" pos:end="19:46"><name pos:start="17:9" pos:end="17:24">smbios_add_field</name><argument_list pos:start="17:25" pos:end="19:46">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr></argument>, <argument pos:start="17:29" pos:end="17:76"><expr pos:start="17:29" pos:end="17:76"><call pos:start="17:29" pos:end="17:76"><name pos:start="17:29" pos:end="17:36">offsetof</name><argument_list pos:start="17:37" pos:end="17:76">(<argument pos:start="17:38" pos:end="17:57"><expr pos:start="17:38" pos:end="17:57">struct <name pos:start="17:45" pos:end="17:57">smbios_type_1</name></expr></argument>, <argument pos:start="17:60" pos:end="17:75"><expr pos:start="17:60" pos:end="17:75"><name pos:start="17:60" pos:end="17:75">product_name_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="19:26" pos:end="19:40"><expr pos:start="19:26" pos:end="19:40"><call pos:start="19:26" pos:end="19:36"><name pos:start="19:26" pos:end="19:31">strlen</name><argument_list pos:start="19:32" pos:end="19:36">(<argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="19:38" pos:end="19:38">+</operator> <literal type="number" pos:start="19:40" pos:end="19:40">1</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><name pos:start="19:43" pos:end="19:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:47"><if pos:start="21:5" pos:end="25:47">if <condition pos:start="21:8" pos:end="21:56">(<expr pos:start="21:9" pos:end="21:55"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:23">get_param_value</name><argument_list pos:start="21:24" pos:end="21:55">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">buf</name></expr></argument>, <argument pos:start="21:30" pos:end="21:40"><expr pos:start="21:30" pos:end="21:40"><sizeof pos:start="21:30" pos:end="21:40">sizeof<argument_list pos:start="21:36" pos:end="21:40">(<argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:43" pos:end="21:51"><expr pos:start="21:43" pos:end="21:51"><literal type="string" pos:start="21:43" pos:end="21:51">"version"</literal></expr></argument>, <argument pos:start="21:54" pos:end="21:54"><expr pos:start="21:54" pos:end="21:54"><name pos:start="21:54" pos:end="21:54">t</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="25:47"><block_content pos:start="23:9" pos:end="25:47">

        <expr_stmt pos:start="23:9" pos:end="25:47"><expr pos:start="23:9" pos:end="25:46"><call pos:start="23:9" pos:end="25:46"><name pos:start="23:9" pos:end="23:24">smbios_add_field</name><argument_list pos:start="23:25" pos:end="25:46">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr></argument>, <argument pos:start="23:29" pos:end="23:71"><expr pos:start="23:29" pos:end="23:71"><call pos:start="23:29" pos:end="23:71"><name pos:start="23:29" pos:end="23:36">offsetof</name><argument_list pos:start="23:37" pos:end="23:71">(<argument pos:start="23:38" pos:end="23:57"><expr pos:start="23:38" pos:end="23:57">struct <name pos:start="23:45" pos:end="23:57">smbios_type_1</name></expr></argument>, <argument pos:start="23:60" pos:end="23:70"><expr pos:start="23:60" pos:end="23:70"><name pos:start="23:60" pos:end="23:70">version_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="25:26" pos:end="25:40"><expr pos:start="25:26" pos:end="25:40"><call pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:31">strlen</name><argument_list pos:start="25:32" pos:end="25:36">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="25:38" pos:end="25:38">+</operator> <literal type="number" pos:start="25:40" pos:end="25:40">1</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:47"><if pos:start="27:5" pos:end="31:47">if <condition pos:start="27:8" pos:end="27:55">(<expr pos:start="27:9" pos:end="27:54"><call pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:23">get_param_value</name><argument_list pos:start="27:24" pos:end="27:54">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">buf</name></expr></argument>, <argument pos:start="27:30" pos:end="27:40"><expr pos:start="27:30" pos:end="27:40"><sizeof pos:start="27:30" pos:end="27:40">sizeof<argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:43" pos:end="27:50"><expr pos:start="27:43" pos:end="27:50"><literal type="string" pos:start="27:43" pos:end="27:50">"serial"</literal></expr></argument>, <argument pos:start="27:53" pos:end="27:53"><expr pos:start="27:53" pos:end="27:53"><name pos:start="27:53" pos:end="27:53">t</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="31:47"><block_content pos:start="29:9" pos:end="31:47">

        <expr_stmt pos:start="29:9" pos:end="31:47"><expr pos:start="29:9" pos:end="31:46"><call pos:start="29:9" pos:end="31:46"><name pos:start="29:9" pos:end="29:24">smbios_add_field</name><argument_list pos:start="29:25" pos:end="31:46">(<argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr></argument>, <argument pos:start="29:29" pos:end="29:77"><expr pos:start="29:29" pos:end="29:77"><call pos:start="29:29" pos:end="29:77"><name pos:start="29:29" pos:end="29:36">offsetof</name><argument_list pos:start="29:37" pos:end="29:77">(<argument pos:start="29:38" pos:end="29:57"><expr pos:start="29:38" pos:end="29:57">struct <name pos:start="29:45" pos:end="29:57">smbios_type_1</name></expr></argument>, <argument pos:start="29:60" pos:end="29:76"><expr pos:start="29:60" pos:end="29:76"><name pos:start="29:60" pos:end="29:76">serial_number_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:40"><call pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:31">strlen</name><argument_list pos:start="31:32" pos:end="31:36">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="31:38" pos:end="31:38">+</operator> <literal type="number" pos:start="31:40" pos:end="31:40">1</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:45"><expr pos:start="31:43" pos:end="31:45"><name pos:start="31:43" pos:end="31:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:53">(<expr pos:start="33:9" pos:end="33:52"><call pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:23">get_param_value</name><argument_list pos:start="33:24" pos:end="33:52">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">buf</name></expr></argument>, <argument pos:start="33:30" pos:end="33:40"><expr pos:start="33:30" pos:end="33:40"><sizeof pos:start="33:30" pos:end="33:40">sizeof<argument_list pos:start="33:36" pos:end="33:40">(<argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:43" pos:end="33:48"><expr pos:start="33:43" pos:end="33:48"><literal type="string" pos:start="33:43" pos:end="33:48">"uuid"</literal></expr></argument>, <argument pos:start="33:51" pos:end="33:51"><expr pos:start="33:51" pos:end="33:51"><name pos:start="33:51" pos:end="33:51">t</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:55" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:49">(<expr pos:start="35:13" pos:end="35:48"><call pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:27">qemu_uuid_parse</name><argument_list pos:start="35:28" pos:end="35:43">(<argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:31">buf</name></expr></argument>, <argument pos:start="35:34" pos:end="35:42"><expr pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:42">qemu_uuid</name></expr></argument>)</argument_list></call> <operator pos:start="35:45" pos:end="35:46">!=</operator> <literal type="number" pos:start="35:48" pos:end="35:48">0</literal></expr>)</condition> <block pos:start="35:51" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:20">

            <expr_stmt pos:start="37:13" pos:end="37:60"><expr pos:start="37:13" pos:end="37:59"><call pos:start="37:13" pos:end="37:59"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="37:59">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:58"><expr pos:start="37:29" pos:end="37:58"><literal type="string" pos:start="37:29" pos:end="37:58">"Invalid SMBIOS UUID string\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><call pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:16">exit</name><argument_list pos:start="39:17" pos:end="39:19">(<argument pos:start="39:18" pos:end="39:18"><expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="49:47"><if pos:start="45:5" pos:end="49:47">if <condition pos:start="45:8" pos:end="45:52">(<expr pos:start="45:9" pos:end="45:51"><call pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:23">get_param_value</name><argument_list pos:start="45:24" pos:end="45:51">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">buf</name></expr></argument>, <argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><sizeof pos:start="45:30" pos:end="45:40">sizeof<argument_list pos:start="45:36" pos:end="45:40">(<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:43" pos:end="45:47"><expr pos:start="45:43" pos:end="45:47"><literal type="string" pos:start="45:43" pos:end="45:47">"sku"</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><name pos:start="45:50" pos:end="45:50">t</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="49:47"><block_content pos:start="47:9" pos:end="49:47">

        <expr_stmt pos:start="47:9" pos:end="49:47"><expr pos:start="47:9" pos:end="49:46"><call pos:start="47:9" pos:end="49:46"><name pos:start="47:9" pos:end="47:24">smbios_add_field</name><argument_list pos:start="47:25" pos:end="49:46">(<argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>, <argument pos:start="47:29" pos:end="47:74"><expr pos:start="47:29" pos:end="47:74"><call pos:start="47:29" pos:end="47:74"><name pos:start="47:29" pos:end="47:36">offsetof</name><argument_list pos:start="47:37" pos:end="47:74">(<argument pos:start="47:38" pos:end="47:57"><expr pos:start="47:38" pos:end="47:57">struct <name pos:start="47:45" pos:end="47:57">smbios_type_1</name></expr></argument>, <argument pos:start="47:60" pos:end="47:73"><expr pos:start="47:60" pos:end="47:73"><name pos:start="47:60" pos:end="47:73">sku_number_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:40"><expr pos:start="49:26" pos:end="49:40"><call pos:start="49:26" pos:end="49:36"><name pos:start="49:26" pos:end="49:31">strlen</name><argument_list pos:start="49:32" pos:end="49:36">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="49:38" pos:end="49:38">+</operator> <literal type="number" pos:start="49:40" pos:end="49:40">1</literal></expr></argument>, <argument pos:start="49:43" pos:end="49:45"><expr pos:start="49:43" pos:end="49:45"><name pos:start="49:43" pos:end="49:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="55:47"><if pos:start="51:5" pos:end="55:47">if <condition pos:start="51:8" pos:end="51:55">(<expr pos:start="51:9" pos:end="51:54"><call pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:23">get_param_value</name><argument_list pos:start="51:24" pos:end="51:54">(<argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">buf</name></expr></argument>, <argument pos:start="51:30" pos:end="51:40"><expr pos:start="51:30" pos:end="51:40"><sizeof pos:start="51:30" pos:end="51:40">sizeof<argument_list pos:start="51:36" pos:end="51:40">(<argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="51:43" pos:end="51:50"><expr pos:start="51:43" pos:end="51:50"><literal type="string" pos:start="51:43" pos:end="51:50">"family"</literal></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">t</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="55:47"><block_content pos:start="53:9" pos:end="55:47">

        <expr_stmt pos:start="53:9" pos:end="55:47"><expr pos:start="53:9" pos:end="55:46"><call pos:start="53:9" pos:end="55:46"><name pos:start="53:9" pos:end="53:24">smbios_add_field</name><argument_list pos:start="53:25" pos:end="55:46">(<argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">1</literal></expr></argument>, <argument pos:start="53:29" pos:end="53:70"><expr pos:start="53:29" pos:end="53:70"><call pos:start="53:29" pos:end="53:70"><name pos:start="53:29" pos:end="53:36">offsetof</name><argument_list pos:start="53:37" pos:end="53:70">(<argument pos:start="53:38" pos:end="53:57"><expr pos:start="53:38" pos:end="53:57">struct <name pos:start="53:45" pos:end="53:57">smbios_type_1</name></expr></argument>, <argument pos:start="53:60" pos:end="53:69"><expr pos:start="53:60" pos:end="53:69"><name pos:start="53:60" pos:end="53:69">family_str</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:40"><expr pos:start="55:26" pos:end="55:40"><call pos:start="55:26" pos:end="55:36"><name pos:start="55:26" pos:end="55:31">strlen</name><argument_list pos:start="55:32" pos:end="55:36">(<argument pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:35">buf</name></expr></argument>)</argument_list></call> <operator pos:start="55:38" pos:end="55:38">+</operator> <literal type="number" pos:start="55:40" pos:end="55:40">1</literal></expr></argument>, <argument pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
