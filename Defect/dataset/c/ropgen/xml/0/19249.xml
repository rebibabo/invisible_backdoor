<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19249.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="251:1"><decl pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:35">sniff_channel_order</name><argument_list pos:start="1:36" pos:end="1:71">(<argument pos:start="1:37" pos:end="1:60"><expr pos:start="1:37" pos:end="1:60"><call pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <argument_list pos:start="1:45" pos:end="1:57">(<argument pos:start="1:46" pos:end="1:56"><expr pos:start="1:46" pos:end="1:56"><operator pos:start="1:46" pos:end="1:46">*</operator><name pos:start="1:47" pos:end="1:56">layout_map</name></expr></argument>)</argument_list></call><index pos:start="1:58" pos:end="1:60">[<expr pos:start="1:59" pos:end="1:59"><literal type="number" pos:start="1:59" pos:end="1:59">3</literal></expr>]</index></expr></argument>, <argument pos:start="1:63" pos:end="1:70"><expr pos:start="1:63" pos:end="1:70"><name pos:start="1:63" pos:end="1:65">int</name> <name pos:start="1:67" pos:end="1:70">tags</name></expr></argument>)</argument_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:18">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">n</name></decl>, <decl pos:start="5:15" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:35">total_non_cc_elements</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">elem_to_channel</name></name></type> <name pos:start="7:28" pos:end="7:47"><name pos:start="7:28" pos:end="7:34">e2c_vec</name><index pos:start="7:35" pos:end="7:47">[<expr pos:start="7:36" pos:end="7:46"><name pos:start="7:36" pos:end="7:46">MAX_ELEM_ID</name></expr>]</index></name> <init pos:start="7:49" pos:end="7:57">= <expr pos:start="7:51" pos:end="7:57"><block pos:start="7:51" pos:end="7:57">{<expr pos:start="7:52" pos:end="7:56"><block pos:start="7:52" pos:end="7:56">{ <expr pos:start="7:54" pos:end="7:54"><literal type="number" pos:start="7:54" pos:end="7:54">0</literal></expr> }</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:26">num_front_channels</name></decl>, <decl pos:start="9:29" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:45">num_side_channels</name></decl>, <decl pos:start="9:48" pos:end="9:64"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:48" pos:end="9:64">num_back_channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">layout</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:10"><expr pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">i</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <literal type="number" pos:start="15:9" pos:end="15:9">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:71"><expr pos:start="17:5" pos:end="19:70"><name pos:start="17:5" pos:end="17:22">num_front_channels</name> <operator pos:start="17:24" pos:end="17:24">=</operator>

        <call pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:29">count_paired_channels</name><argument_list pos:start="19:30" pos:end="19:70">(<argument pos:start="19:31" pos:end="19:40"><expr pos:start="19:31" pos:end="19:40"><name pos:start="19:31" pos:end="19:40">layout_map</name></expr></argument>, <argument pos:start="19:43" pos:end="19:46"><expr pos:start="19:43" pos:end="19:46"><name pos:start="19:43" pos:end="19:46">tags</name></expr></argument>, <argument pos:start="19:49" pos:end="19:65"><expr pos:start="19:49" pos:end="19:65"><name pos:start="19:49" pos:end="19:65">AAC_CHANNEL_FRONT</name></expr></argument>, <argument pos:start="19:68" pos:end="19:69"><expr pos:start="19:68" pos:end="19:69"><operator pos:start="19:68" pos:end="19:68">&amp;</operator><name pos:start="19:69" pos:end="19:69">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:26">num_front_channels</name> <operator pos:start="21:28" pos:end="21:28">&lt;</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:70"><expr pos:start="25:5" pos:end="27:69"><name pos:start="25:5" pos:end="25:21">num_side_channels</name> <operator pos:start="25:23" pos:end="25:23">=</operator>

        <call pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:29">count_paired_channels</name><argument_list pos:start="27:30" pos:end="27:69">(<argument pos:start="27:31" pos:end="27:40"><expr pos:start="27:31" pos:end="27:40"><name pos:start="27:31" pos:end="27:40">layout_map</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">tags</name></expr></argument>, <argument pos:start="27:49" pos:end="27:64"><expr pos:start="27:49" pos:end="27:64"><name pos:start="27:49" pos:end="27:64">AAC_CHANNEL_SIDE</name></expr></argument>, <argument pos:start="27:67" pos:end="27:68"><expr pos:start="27:67" pos:end="27:68"><operator pos:start="27:67" pos:end="27:67">&amp;</operator><name pos:start="27:68" pos:end="27:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:25">num_side_channels</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:70"><expr pos:start="33:5" pos:end="35:69"><name pos:start="33:5" pos:end="33:21">num_back_channels</name> <operator pos:start="33:23" pos:end="33:23">=</operator>

        <call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:29">count_paired_channels</name><argument_list pos:start="35:30" pos:end="35:69">(<argument pos:start="35:31" pos:end="35:40"><expr pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:40">layout_map</name></expr></argument>, <argument pos:start="35:43" pos:end="35:46"><expr pos:start="35:43" pos:end="35:46"><name pos:start="35:43" pos:end="35:46">tags</name></expr></argument>, <argument pos:start="35:49" pos:end="35:64"><expr pos:start="35:49" pos:end="35:64"><name pos:start="35:49" pos:end="35:64">AAC_CHANNEL_BACK</name></expr></argument>, <argument pos:start="35:67" pos:end="35:68"><expr pos:start="35:67" pos:end="35:68"><operator pos:start="35:67" pos:end="35:67">&amp;</operator><name pos:start="35:68" pos:end="35:68">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:17"><if pos:start="37:5" pos:end="39:17">if <condition pos:start="37:8" pos:end="37:30">(<expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:25">num_back_channels</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:17"><block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:10"><expr pos:start="43:5" pos:end="43:9"><name pos:start="43:5" pos:end="43:5">i</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <literal type="number" pos:start="43:9" pos:end="43:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:31">(<expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:26">num_front_channels</name> <operator pos:start="45:28" pos:end="45:28">&amp;</operator> <literal type="number" pos:start="45:30" pos:end="45:30">1</literal></expr>)</condition> <block pos:start="45:33" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:29">

        <expr_stmt pos:start="47:9" pos:end="51:77"><expr pos:start="47:9" pos:end="51:76"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:15">e2c_vec</name><index pos:start="47:16" pos:end="47:18">[<expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">i</name></expr>]</index></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <operator pos:start="47:22" pos:end="47:22">(</operator>struct <name pos:start="47:30" pos:end="47:44">elem_to_channel</name><operator pos:start="47:45" pos:end="47:45">)</operator> <block pos:start="47:47" pos:end="51:76">{

            <expr pos:start="49:13" pos:end="49:45"><operator pos:start="49:13" pos:end="49:13">.</operator><name pos:start="49:14" pos:end="49:24">av_position</name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:45">AV_CH_FRONT_CENTER</name></expr>, <expr pos:start="49:48" pos:end="49:66"><operator pos:start="49:48" pos:end="49:48">.</operator><name pos:start="49:49" pos:end="49:55">syn_ele</name> <operator pos:start="49:57" pos:end="49:57">=</operator> <name pos:start="49:59" pos:end="49:66">TYPE_SCE</name></expr>,

            <expr pos:start="51:13" pos:end="51:39"><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:20">elem_id</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:33">layout_map</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">i</name></expr>]</index><index pos:start="51:37" pos:end="51:39">[<expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr>]</index></name></expr>, <expr pos:start="51:42" pos:end="51:74"><operator pos:start="51:42" pos:end="51:42">.</operator><name pos:start="51:43" pos:end="51:54">aac_position</name> <operator pos:start="51:56" pos:end="51:56">=</operator> <name pos:start="51:58" pos:end="51:74">AAC_CHANNEL_FRONT</name></expr> }</block></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:26">num_front_channels</name><operator pos:start="55:27" pos:end="55:28">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="71:5">if <condition pos:start="59:8" pos:end="59:32">(<expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:26">num_front_channels</name> <operator pos:start="59:28" pos:end="59:29">&gt;=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">4</literal></expr>)</condition> <block pos:start="59:34" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:32">

        <expr_stmt pos:start="61:9" pos:end="67:44"><expr pos:start="61:9" pos:end="67:43"><name pos:start="61:9" pos:end="61:9">i</name> <operator pos:start="61:11" pos:end="61:12">+=</operator> <call pos:start="61:14" pos:end="67:43"><name pos:start="61:14" pos:end="61:24">assign_pair</name><argument_list pos:start="61:25" pos:end="67:43">(<argument pos:start="61:26" pos:end="61:32"><expr pos:start="61:26" pos:end="61:32"><name pos:start="61:26" pos:end="61:32">e2c_vec</name></expr></argument>, <argument pos:start="61:35" pos:end="61:44"><expr pos:start="61:35" pos:end="61:44"><name pos:start="61:35" pos:end="61:44">layout_map</name></expr></argument>, <argument pos:start="61:47" pos:end="61:47"><expr pos:start="61:47" pos:end="61:47"><name pos:start="61:47" pos:end="61:47">i</name></expr></argument>, <argument pos:start="61:50" pos:end="61:53"><expr pos:start="61:50" pos:end="61:53"><name pos:start="61:50" pos:end="61:53">tags</name></expr></argument>,

                         <argument pos:start="63:26" pos:end="63:51"><expr pos:start="63:26" pos:end="63:51"><name pos:start="63:26" pos:end="63:51">AV_CH_FRONT_LEFT_OF_CENTER</name></expr></argument>,

                         <argument pos:start="65:26" pos:end="65:52"><expr pos:start="65:26" pos:end="65:52"><name pos:start="65:26" pos:end="65:52">AV_CH_FRONT_RIGHT_OF_CENTER</name></expr></argument>,

                         <argument pos:start="67:26" pos:end="67:42"><expr pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:42">AAC_CHANNEL_FRONT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:26">num_front_channels</name> <operator pos:start="69:28" pos:end="69:29">-=</operator> <literal type="number" pos:start="69:31" pos:end="69:31">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:32">(<expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:26">num_front_channels</name> <operator pos:start="73:28" pos:end="73:29">&gt;=</operator> <literal type="number" pos:start="73:31" pos:end="73:31">2</literal></expr>)</condition> <block pos:start="73:34" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:32">

        <expr_stmt pos:start="75:9" pos:end="81:44"><expr pos:start="75:9" pos:end="81:43"><name pos:start="75:9" pos:end="75:9">i</name> <operator pos:start="75:11" pos:end="75:12">+=</operator> <call pos:start="75:14" pos:end="81:43"><name pos:start="75:14" pos:end="75:24">assign_pair</name><argument_list pos:start="75:25" pos:end="81:43">(<argument pos:start="75:26" pos:end="75:32"><expr pos:start="75:26" pos:end="75:32"><name pos:start="75:26" pos:end="75:32">e2c_vec</name></expr></argument>, <argument pos:start="75:35" pos:end="75:44"><expr pos:start="75:35" pos:end="75:44"><name pos:start="75:35" pos:end="75:44">layout_map</name></expr></argument>, <argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><name pos:start="75:47" pos:end="75:47">i</name></expr></argument>, <argument pos:start="75:50" pos:end="75:53"><expr pos:start="75:50" pos:end="75:53"><name pos:start="75:50" pos:end="75:53">tags</name></expr></argument>,

                         <argument pos:start="77:26" pos:end="77:41"><expr pos:start="77:26" pos:end="77:41"><name pos:start="77:26" pos:end="77:41">AV_CH_FRONT_LEFT</name></expr></argument>,

                         <argument pos:start="79:26" pos:end="79:42"><expr pos:start="79:26" pos:end="79:42"><name pos:start="79:26" pos:end="79:42">AV_CH_FRONT_RIGHT</name></expr></argument>,

                         <argument pos:start="81:26" pos:end="81:42"><expr pos:start="81:26" pos:end="81:42"><name pos:start="81:26" pos:end="81:42">AAC_CHANNEL_FRONT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:26">num_front_channels</name> <operator pos:start="83:28" pos:end="83:29">-=</operator> <literal type="number" pos:start="83:31" pos:end="83:31">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="87:5" pos:end="99:5">while <condition pos:start="87:11" pos:end="87:35">(<expr pos:start="87:12" pos:end="87:34"><name pos:start="87:12" pos:end="87:29">num_front_channels</name> <operator pos:start="87:31" pos:end="87:32">&gt;=</operator> <literal type="number" pos:start="87:34" pos:end="87:34">2</literal></expr>)</condition> <block pos:start="87:37" pos:end="99:5">{<block_content pos:start="89:9" pos:end="97:32">

        <expr_stmt pos:start="89:9" pos:end="95:44"><expr pos:start="89:9" pos:end="95:43"><name pos:start="89:9" pos:end="89:9">i</name> <operator pos:start="89:11" pos:end="89:12">+=</operator> <call pos:start="89:14" pos:end="95:43"><name pos:start="89:14" pos:end="89:24">assign_pair</name><argument_list pos:start="89:25" pos:end="95:43">(<argument pos:start="89:26" pos:end="89:32"><expr pos:start="89:26" pos:end="89:32"><name pos:start="89:26" pos:end="89:32">e2c_vec</name></expr></argument>, <argument pos:start="89:35" pos:end="89:44"><expr pos:start="89:35" pos:end="89:44"><name pos:start="89:35" pos:end="89:44">layout_map</name></expr></argument>, <argument pos:start="89:47" pos:end="89:47"><expr pos:start="89:47" pos:end="89:47"><name pos:start="89:47" pos:end="89:47">i</name></expr></argument>, <argument pos:start="89:50" pos:end="89:53"><expr pos:start="89:50" pos:end="89:53"><name pos:start="89:50" pos:end="89:53">tags</name></expr></argument>,

                         <argument pos:start="91:26" pos:end="91:35"><expr pos:start="91:26" pos:end="91:35"><name pos:start="91:26" pos:end="91:35">UINT64_MAX</name></expr></argument>,

                         <argument pos:start="93:26" pos:end="93:35"><expr pos:start="93:26" pos:end="93:35"><name pos:start="93:26" pos:end="93:35">UINT64_MAX</name></expr></argument>,

                         <argument pos:start="95:26" pos:end="95:42"><expr pos:start="95:26" pos:end="95:42"><name pos:start="95:26" pos:end="95:42">AAC_CHANNEL_FRONT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:32"><expr pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:26">num_front_channels</name> <operator pos:start="97:28" pos:end="97:29">-=</operator> <literal type="number" pos:start="97:31" pos:end="97:31">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="103:5" pos:end="115:5"><if pos:start="103:5" pos:end="115:5">if <condition pos:start="103:8" pos:end="103:31">(<expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:25">num_side_channels</name> <operator pos:start="103:27" pos:end="103:28">&gt;=</operator> <literal type="number" pos:start="103:30" pos:end="103:30">2</literal></expr>)</condition> <block pos:start="103:33" pos:end="115:5">{<block_content pos:start="105:9" pos:end="113:31">

        <expr_stmt pos:start="105:9" pos:end="111:44"><expr pos:start="105:9" pos:end="111:43"><name pos:start="105:9" pos:end="105:9">i</name> <operator pos:start="105:11" pos:end="105:12">+=</operator> <call pos:start="105:14" pos:end="111:43"><name pos:start="105:14" pos:end="105:24">assign_pair</name><argument_list pos:start="105:25" pos:end="111:43">(<argument pos:start="105:26" pos:end="105:32"><expr pos:start="105:26" pos:end="105:32"><name pos:start="105:26" pos:end="105:32">e2c_vec</name></expr></argument>, <argument pos:start="105:35" pos:end="105:44"><expr pos:start="105:35" pos:end="105:44"><name pos:start="105:35" pos:end="105:44">layout_map</name></expr></argument>, <argument pos:start="105:47" pos:end="105:47"><expr pos:start="105:47" pos:end="105:47"><name pos:start="105:47" pos:end="105:47">i</name></expr></argument>, <argument pos:start="105:50" pos:end="105:53"><expr pos:start="105:50" pos:end="105:53"><name pos:start="105:50" pos:end="105:53">tags</name></expr></argument>,

                         <argument pos:start="107:26" pos:end="107:40"><expr pos:start="107:26" pos:end="107:40"><name pos:start="107:26" pos:end="107:40">AV_CH_SIDE_LEFT</name></expr></argument>,

                         <argument pos:start="109:26" pos:end="109:41"><expr pos:start="109:26" pos:end="109:41"><name pos:start="109:26" pos:end="109:41">AV_CH_SIDE_RIGHT</name></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:42"><expr pos:start="111:26" pos:end="111:42"><name pos:start="111:26" pos:end="111:42">AAC_CHANNEL_FRONT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:31"><expr pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:25">num_side_channels</name> <operator pos:start="113:27" pos:end="113:28">-=</operator> <literal type="number" pos:start="113:30" pos:end="113:30">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="117:5" pos:end="129:5">while <condition pos:start="117:11" pos:end="117:34">(<expr pos:start="117:12" pos:end="117:33"><name pos:start="117:12" pos:end="117:28">num_side_channels</name> <operator pos:start="117:30" pos:end="117:31">&gt;=</operator> <literal type="number" pos:start="117:33" pos:end="117:33">2</literal></expr>)</condition> <block pos:start="117:36" pos:end="129:5">{<block_content pos:start="119:9" pos:end="127:31">

        <expr_stmt pos:start="119:9" pos:end="125:43"><expr pos:start="119:9" pos:end="125:42"><name pos:start="119:9" pos:end="119:9">i</name> <operator pos:start="119:11" pos:end="119:12">+=</operator> <call pos:start="119:14" pos:end="125:42"><name pos:start="119:14" pos:end="119:24">assign_pair</name><argument_list pos:start="119:25" pos:end="125:42">(<argument pos:start="119:26" pos:end="119:32"><expr pos:start="119:26" pos:end="119:32"><name pos:start="119:26" pos:end="119:32">e2c_vec</name></expr></argument>, <argument pos:start="119:35" pos:end="119:44"><expr pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:44">layout_map</name></expr></argument>, <argument pos:start="119:47" pos:end="119:47"><expr pos:start="119:47" pos:end="119:47"><name pos:start="119:47" pos:end="119:47">i</name></expr></argument>, <argument pos:start="119:50" pos:end="119:53"><expr pos:start="119:50" pos:end="119:53"><name pos:start="119:50" pos:end="119:53">tags</name></expr></argument>,

                         <argument pos:start="121:26" pos:end="121:35"><expr pos:start="121:26" pos:end="121:35"><name pos:start="121:26" pos:end="121:35">UINT64_MAX</name></expr></argument>,

                         <argument pos:start="123:26" pos:end="123:35"><expr pos:start="123:26" pos:end="123:35"><name pos:start="123:26" pos:end="123:35">UINT64_MAX</name></expr></argument>,

                         <argument pos:start="125:26" pos:end="125:41"><expr pos:start="125:26" pos:end="125:41"><name pos:start="125:26" pos:end="125:41">AAC_CHANNEL_SIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:31"><expr pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:25">num_side_channels</name> <operator pos:start="127:27" pos:end="127:28">-=</operator> <literal type="number" pos:start="127:30" pos:end="127:30">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <while pos:start="133:5" pos:end="145:5">while <condition pos:start="133:11" pos:end="133:34">(<expr pos:start="133:12" pos:end="133:33"><name pos:start="133:12" pos:end="133:28">num_back_channels</name> <operator pos:start="133:30" pos:end="133:31">&gt;=</operator> <literal type="number" pos:start="133:33" pos:end="133:33">4</literal></expr>)</condition> <block pos:start="133:36" pos:end="145:5">{<block_content pos:start="135:9" pos:end="143:31">

        <expr_stmt pos:start="135:9" pos:end="141:43"><expr pos:start="135:9" pos:end="141:42"><name pos:start="135:9" pos:end="135:9">i</name> <operator pos:start="135:11" pos:end="135:12">+=</operator> <call pos:start="135:14" pos:end="141:42"><name pos:start="135:14" pos:end="135:24">assign_pair</name><argument_list pos:start="135:25" pos:end="141:42">(<argument pos:start="135:26" pos:end="135:32"><expr pos:start="135:26" pos:end="135:32"><name pos:start="135:26" pos:end="135:32">e2c_vec</name></expr></argument>, <argument pos:start="135:35" pos:end="135:44"><expr pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:44">layout_map</name></expr></argument>, <argument pos:start="135:47" pos:end="135:47"><expr pos:start="135:47" pos:end="135:47"><name pos:start="135:47" pos:end="135:47">i</name></expr></argument>, <argument pos:start="135:50" pos:end="135:53"><expr pos:start="135:50" pos:end="135:53"><name pos:start="135:50" pos:end="135:53">tags</name></expr></argument>,

                         <argument pos:start="137:26" pos:end="137:35"><expr pos:start="137:26" pos:end="137:35"><name pos:start="137:26" pos:end="137:35">UINT64_MAX</name></expr></argument>,

                         <argument pos:start="139:26" pos:end="139:35"><expr pos:start="139:26" pos:end="139:35"><name pos:start="139:26" pos:end="139:35">UINT64_MAX</name></expr></argument>,

                         <argument pos:start="141:26" pos:end="141:41"><expr pos:start="141:26" pos:end="141:41"><name pos:start="141:26" pos:end="141:41">AAC_CHANNEL_BACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:31"><expr pos:start="143:9" pos:end="143:30"><name pos:start="143:9" pos:end="143:25">num_back_channels</name> <operator pos:start="143:27" pos:end="143:28">-=</operator> <literal type="number" pos:start="143:30" pos:end="143:30">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="147:5" pos:end="159:5"><if pos:start="147:5" pos:end="159:5">if <condition pos:start="147:8" pos:end="147:31">(<expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:25">num_back_channels</name> <operator pos:start="147:27" pos:end="147:28">&gt;=</operator> <literal type="number" pos:start="147:30" pos:end="147:30">2</literal></expr>)</condition> <block pos:start="147:33" pos:end="159:5">{<block_content pos:start="149:9" pos:end="157:31">

        <expr_stmt pos:start="149:9" pos:end="155:43"><expr pos:start="149:9" pos:end="155:42"><name pos:start="149:9" pos:end="149:9">i</name> <operator pos:start="149:11" pos:end="149:12">+=</operator> <call pos:start="149:14" pos:end="155:42"><name pos:start="149:14" pos:end="149:24">assign_pair</name><argument_list pos:start="149:25" pos:end="155:42">(<argument pos:start="149:26" pos:end="149:32"><expr pos:start="149:26" pos:end="149:32"><name pos:start="149:26" pos:end="149:32">e2c_vec</name></expr></argument>, <argument pos:start="149:35" pos:end="149:44"><expr pos:start="149:35" pos:end="149:44"><name pos:start="149:35" pos:end="149:44">layout_map</name></expr></argument>, <argument pos:start="149:47" pos:end="149:47"><expr pos:start="149:47" pos:end="149:47"><name pos:start="149:47" pos:end="149:47">i</name></expr></argument>, <argument pos:start="149:50" pos:end="149:53"><expr pos:start="149:50" pos:end="149:53"><name pos:start="149:50" pos:end="149:53">tags</name></expr></argument>,

                         <argument pos:start="151:26" pos:end="151:40"><expr pos:start="151:26" pos:end="151:40"><name pos:start="151:26" pos:end="151:40">AV_CH_BACK_LEFT</name></expr></argument>,

                         <argument pos:start="153:26" pos:end="153:41"><expr pos:start="153:26" pos:end="153:41"><name pos:start="153:26" pos:end="153:41">AV_CH_BACK_RIGHT</name></expr></argument>,

                         <argument pos:start="155:26" pos:end="155:41"><expr pos:start="155:26" pos:end="155:41"><name pos:start="155:26" pos:end="155:41">AAC_CHANNEL_BACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:31"><expr pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:25">num_back_channels</name> <operator pos:start="157:27" pos:end="157:28">-=</operator> <literal type="number" pos:start="157:30" pos:end="157:30">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="173:5"><if pos:start="161:5" pos:end="173:5">if <condition pos:start="161:8" pos:end="161:26">(<expr pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:25">num_back_channels</name></expr>)</condition> <block pos:start="161:28" pos:end="173:5">{<block_content pos:start="163:9" pos:end="171:28">

        <expr_stmt pos:start="163:9" pos:end="167:74"><expr pos:start="163:9" pos:end="167:73"><name pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:15">e2c_vec</name><index pos:start="163:16" pos:end="163:18">[<expr pos:start="163:17" pos:end="163:17"><name pos:start="163:17" pos:end="163:17">i</name></expr>]</index></name> <operator pos:start="163:20" pos:end="163:20">=</operator> <operator pos:start="163:22" pos:end="163:22">(</operator>struct <name pos:start="163:30" pos:end="163:44">elem_to_channel</name><operator pos:start="163:45" pos:end="163:45">)</operator> <block pos:start="163:47" pos:end="167:73">{

          <expr pos:start="165:11" pos:end="165:42"><operator pos:start="165:11" pos:end="165:11">.</operator><name pos:start="165:12" pos:end="165:22">av_position</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <name pos:start="165:26" pos:end="165:42">AV_CH_BACK_CENTER</name></expr>, <expr pos:start="165:45" pos:end="165:63"><operator pos:start="165:45" pos:end="165:45">.</operator><name pos:start="165:46" pos:end="165:52">syn_ele</name> <operator pos:start="165:54" pos:end="165:54">=</operator> <name pos:start="165:56" pos:end="165:63">TYPE_SCE</name></expr>,

          <expr pos:start="167:11" pos:end="167:37"><operator pos:start="167:11" pos:end="167:11">.</operator><name pos:start="167:12" pos:end="167:18">elem_id</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <name pos:start="167:22" pos:end="167:37"><name pos:start="167:22" pos:end="167:31">layout_map</name><index pos:start="167:32" pos:end="167:34">[<expr pos:start="167:33" pos:end="167:33"><name pos:start="167:33" pos:end="167:33">i</name></expr>]</index><index pos:start="167:35" pos:end="167:37">[<expr pos:start="167:36" pos:end="167:36"><literal type="number" pos:start="167:36" pos:end="167:36">1</literal></expr>]</index></name></expr>, <expr pos:start="167:40" pos:end="167:71"><operator pos:start="167:40" pos:end="167:40">.</operator><name pos:start="167:41" pos:end="167:52">aac_position</name> <operator pos:start="167:54" pos:end="167:54">=</operator> <name pos:start="167:56" pos:end="167:71">AAC_CHANNEL_BACK</name></expr> }</block></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:12"><expr pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:9">i</name><operator pos:start="169:10" pos:end="169:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:28"><expr pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:25">num_back_channels</name><operator pos:start="171:26" pos:end="171:27">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="187:5"><if pos:start="177:5" pos:end="187:5">if <condition pos:start="177:8" pos:end="177:56">(<expr pos:start="177:9" pos:end="177:55"><name pos:start="177:9" pos:end="177:9">i</name> <operator pos:start="177:11" pos:end="177:11">&lt;</operator> <name pos:start="177:13" pos:end="177:16">tags</name> <operator pos:start="177:18" pos:end="177:19">&amp;&amp;</operator> <name pos:start="177:21" pos:end="177:36"><name pos:start="177:21" pos:end="177:30">layout_map</name><index pos:start="177:31" pos:end="177:33">[<expr pos:start="177:32" pos:end="177:32"><name pos:start="177:32" pos:end="177:32">i</name></expr>]</index><index pos:start="177:34" pos:end="177:36">[<expr pos:start="177:35" pos:end="177:35"><literal type="number" pos:start="177:35" pos:end="177:35">2</literal></expr>]</index></name> <operator pos:start="177:38" pos:end="177:39">==</operator> <name pos:start="177:41" pos:end="177:55">AAC_CHANNEL_LFE</name></expr>)</condition> <block pos:start="177:58" pos:end="187:5">{<block_content pos:start="179:9" pos:end="185:12">

        <expr_stmt pos:start="179:9" pos:end="183:73"><expr pos:start="179:9" pos:end="183:72"><name pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:15">e2c_vec</name><index pos:start="179:16" pos:end="179:18">[<expr pos:start="179:17" pos:end="179:17"><name pos:start="179:17" pos:end="179:17">i</name></expr>]</index></name> <operator pos:start="179:20" pos:end="179:20">=</operator> <operator pos:start="179:22" pos:end="179:22">(</operator>struct <name pos:start="179:30" pos:end="179:44">elem_to_channel</name><operator pos:start="179:45" pos:end="179:45">)</operator> <block pos:start="179:47" pos:end="183:72">{

          <expr pos:start="181:11" pos:end="181:44"><operator pos:start="181:11" pos:end="181:11">.</operator><name pos:start="181:12" pos:end="181:22">av_position</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <name pos:start="181:26" pos:end="181:44">AV_CH_LOW_FREQUENCY</name></expr>, <expr pos:start="181:47" pos:end="181:65"><operator pos:start="181:47" pos:end="181:47">.</operator><name pos:start="181:48" pos:end="181:54">syn_ele</name> <operator pos:start="181:56" pos:end="181:56">=</operator> <name pos:start="181:58" pos:end="181:65">TYPE_LFE</name></expr>,

          <expr pos:start="183:11" pos:end="183:37"><operator pos:start="183:11" pos:end="183:11">.</operator><name pos:start="183:12" pos:end="183:18">elem_id</name> <operator pos:start="183:20" pos:end="183:20">=</operator> <name pos:start="183:22" pos:end="183:37"><name pos:start="183:22" pos:end="183:31">layout_map</name><index pos:start="183:32" pos:end="183:34">[<expr pos:start="183:33" pos:end="183:33"><name pos:start="183:33" pos:end="183:33">i</name></expr>]</index><index pos:start="183:35" pos:end="183:37">[<expr pos:start="183:36" pos:end="183:36"><literal type="number" pos:start="183:36" pos:end="183:36">1</literal></expr>]</index></name></expr>, <expr pos:start="183:40" pos:end="183:70"><operator pos:start="183:40" pos:end="183:40">.</operator><name pos:start="183:41" pos:end="183:52">aac_position</name> <operator pos:start="183:54" pos:end="183:54">=</operator> <name pos:start="183:56" pos:end="183:70">AAC_CHANNEL_LFE</name></expr> }</block></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:12"><expr pos:start="185:9" pos:end="185:11"><name pos:start="185:9" pos:end="185:9">i</name><operator pos:start="185:10" pos:end="185:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="189:5" pos:end="199:5">while <condition pos:start="189:11" pos:end="189:59">(<expr pos:start="189:12" pos:end="189:58"><name pos:start="189:12" pos:end="189:12">i</name> <operator pos:start="189:14" pos:end="189:14">&lt;</operator> <name pos:start="189:16" pos:end="189:19">tags</name> <operator pos:start="189:21" pos:end="189:22">&amp;&amp;</operator> <name pos:start="189:24" pos:end="189:39"><name pos:start="189:24" pos:end="189:33">layout_map</name><index pos:start="189:34" pos:end="189:36">[<expr pos:start="189:35" pos:end="189:35"><name pos:start="189:35" pos:end="189:35">i</name></expr>]</index><index pos:start="189:37" pos:end="189:39">[<expr pos:start="189:38" pos:end="189:38"><literal type="number" pos:start="189:38" pos:end="189:38">2</literal></expr>]</index></name> <operator pos:start="189:41" pos:end="189:42">==</operator> <name pos:start="189:44" pos:end="189:58">AAC_CHANNEL_LFE</name></expr>)</condition> <block pos:start="189:61" pos:end="199:5">{<block_content pos:start="191:9" pos:end="197:12">

        <expr_stmt pos:start="191:9" pos:end="195:73"><expr pos:start="191:9" pos:end="195:72"><name pos:start="191:9" pos:end="191:18"><name pos:start="191:9" pos:end="191:15">e2c_vec</name><index pos:start="191:16" pos:end="191:18">[<expr pos:start="191:17" pos:end="191:17"><name pos:start="191:17" pos:end="191:17">i</name></expr>]</index></name> <operator pos:start="191:20" pos:end="191:20">=</operator> <operator pos:start="191:22" pos:end="191:22">(</operator>struct <name pos:start="191:30" pos:end="191:44">elem_to_channel</name><operator pos:start="191:45" pos:end="191:45">)</operator> <block pos:start="191:47" pos:end="195:72">{

          <expr pos:start="193:11" pos:end="193:35"><operator pos:start="193:11" pos:end="193:11">.</operator><name pos:start="193:12" pos:end="193:22">av_position</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <name pos:start="193:26" pos:end="193:35">UINT64_MAX</name></expr>, <expr pos:start="193:38" pos:end="193:56"><operator pos:start="193:38" pos:end="193:38">.</operator><name pos:start="193:39" pos:end="193:45">syn_ele</name> <operator pos:start="193:47" pos:end="193:47">=</operator> <name pos:start="193:49" pos:end="193:56">TYPE_LFE</name></expr>,

          <expr pos:start="195:11" pos:end="195:37"><operator pos:start="195:11" pos:end="195:11">.</operator><name pos:start="195:12" pos:end="195:18">elem_id</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <name pos:start="195:22" pos:end="195:37"><name pos:start="195:22" pos:end="195:31">layout_map</name><index pos:start="195:32" pos:end="195:34">[<expr pos:start="195:33" pos:end="195:33"><name pos:start="195:33" pos:end="195:33">i</name></expr>]</index><index pos:start="195:35" pos:end="195:37">[<expr pos:start="195:36" pos:end="195:36"><literal type="number" pos:start="195:36" pos:end="195:36">1</literal></expr>]</index></name></expr>, <expr pos:start="195:40" pos:end="195:70"><operator pos:start="195:40" pos:end="195:40">.</operator><name pos:start="195:41" pos:end="195:52">aac_position</name> <operator pos:start="195:54" pos:end="195:54">=</operator> <name pos:start="195:56" pos:end="195:70">AAC_CHANNEL_LFE</name></expr> }</block></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:12"><expr pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:9">i</name><operator pos:start="197:10" pos:end="197:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="line" pos:start="203:5" pos:end="203:32">// Must choose a stable sort</comment>

    <expr_stmt pos:start="205:5" pos:end="205:34"><expr pos:start="205:5" pos:end="205:33"><name pos:start="205:5" pos:end="205:25">total_non_cc_elements</name> <operator pos:start="205:27" pos:end="205:27">=</operator> <name pos:start="205:29" pos:end="205:29">n</name> <operator pos:start="205:31" pos:end="205:31">=</operator> <name pos:start="205:33" pos:end="205:33">i</name></expr>;</expr_stmt>

    <do pos:start="207:5" pos:end="225:20">do <block pos:start="207:8" pos:end="225:5">{<block_content pos:start="209:9" pos:end="223:19">

        <decl_stmt pos:start="209:9" pos:end="209:23"><decl pos:start="209:9" pos:end="209:22"><type pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:11">int</name></type> <name pos:start="209:13" pos:end="209:18">next_n</name> <init pos:start="209:20" pos:end="209:22">= <expr pos:start="209:22" pos:end="209:22"><literal type="number" pos:start="209:22" pos:end="209:22">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="211:9" pos:end="221:9">for <control pos:start="211:13" pos:end="211:31">(<init pos:start="211:14" pos:end="211:19"><expr pos:start="211:14" pos:end="211:18"><name pos:start="211:14" pos:end="211:14">i</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <literal type="number" pos:start="211:18" pos:end="211:18">1</literal></expr>;</init> <condition pos:start="211:21" pos:end="211:26"><expr pos:start="211:21" pos:end="211:25"><name pos:start="211:21" pos:end="211:21">i</name> <operator pos:start="211:23" pos:end="211:23">&lt;</operator> <name pos:start="211:25" pos:end="211:25">n</name></expr>;</condition> <incr pos:start="211:28" pos:end="211:30"><expr pos:start="211:28" pos:end="211:30"><name pos:start="211:28" pos:end="211:28">i</name><operator pos:start="211:29" pos:end="211:30">++</operator></expr></incr>)</control> <block pos:start="211:33" pos:end="221:9">{<block_content pos:start="213:13" pos:end="219:13">

            <if_stmt pos:start="213:13" pos:end="219:13"><if pos:start="213:13" pos:end="219:13">if <condition pos:start="213:16" pos:end="213:66">(<expr pos:start="213:17" pos:end="213:65"><name pos:start="213:17" pos:end="213:28"><name pos:start="213:17" pos:end="213:23">e2c_vec</name><index pos:start="213:24" pos:end="213:28">[<expr pos:start="213:25" pos:end="213:27"><name pos:start="213:25" pos:end="213:25">i</name><operator pos:start="213:26" pos:end="213:26">-</operator><literal type="number" pos:start="213:27" pos:end="213:27">1</literal></expr>]</index></name><operator pos:start="213:29" pos:end="213:29">.</operator><name pos:start="213:30" pos:end="213:40">av_position</name> <operator pos:start="213:42" pos:end="213:42">&gt;</operator> <name pos:start="213:44" pos:end="213:53"><name pos:start="213:44" pos:end="213:50">e2c_vec</name><index pos:start="213:51" pos:end="213:53">[<expr pos:start="213:52" pos:end="213:52"><name pos:start="213:52" pos:end="213:52">i</name></expr>]</index></name><operator pos:start="213:54" pos:end="213:54">.</operator><name pos:start="213:55" pos:end="213:65">av_position</name></expr>)</condition> <block pos:start="213:68" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:27">

                <expr_stmt pos:start="215:17" pos:end="215:73"><expr pos:start="215:17" pos:end="215:72"><call pos:start="215:17" pos:end="215:72"><name pos:start="215:17" pos:end="215:22">FFSWAP</name><argument_list pos:start="215:23" pos:end="215:72">(<argument pos:start="215:24" pos:end="215:45"><expr pos:start="215:24" pos:end="215:45">struct <name pos:start="215:31" pos:end="215:45">elem_to_channel</name></expr></argument>, <argument pos:start="215:48" pos:end="215:59"><expr pos:start="215:48" pos:end="215:59"><name pos:start="215:48" pos:end="215:59"><name pos:start="215:48" pos:end="215:54">e2c_vec</name><index pos:start="215:55" pos:end="215:59">[<expr pos:start="215:56" pos:end="215:58"><name pos:start="215:56" pos:end="215:56">i</name><operator pos:start="215:57" pos:end="215:57">-</operator><literal type="number" pos:start="215:58" pos:end="215:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:62" pos:end="215:71"><expr pos:start="215:62" pos:end="215:71"><name pos:start="215:62" pos:end="215:71"><name pos:start="215:62" pos:end="215:68">e2c_vec</name><index pos:start="215:69" pos:end="215:71">[<expr pos:start="215:70" pos:end="215:70"><name pos:start="215:70" pos:end="215:70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:27"><expr pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:22">next_n</name> <operator pos:start="217:24" pos:end="217:24">=</operator> <name pos:start="217:26" pos:end="217:26">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="223:9" pos:end="223:19"><expr pos:start="223:9" pos:end="223:18"><name pos:start="223:9" pos:end="223:9">n</name> <operator pos:start="223:11" pos:end="223:11">=</operator> <name pos:start="223:13" pos:end="223:18">next_n</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="225:13" pos:end="225:19">(<expr pos:start="225:14" pos:end="225:18"><name pos:start="225:14" pos:end="225:14">n</name> <operator pos:start="225:16" pos:end="225:16">&gt;</operator> <literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="229:5" pos:end="229:15"><expr pos:start="229:5" pos:end="229:14"><name pos:start="229:5" pos:end="229:10">layout</name> <operator pos:start="229:12" pos:end="229:12">=</operator> <literal type="number" pos:start="229:14" pos:end="229:14">0</literal></expr>;</expr_stmt>

    <for pos:start="231:5" pos:end="245:5">for <control pos:start="231:9" pos:end="231:47">(<init pos:start="231:10" pos:end="231:15"><expr pos:start="231:10" pos:end="231:14"><name pos:start="231:10" pos:end="231:10">i</name> <operator pos:start="231:12" pos:end="231:12">=</operator> <literal type="number" pos:start="231:14" pos:end="231:14">0</literal></expr>;</init> <condition pos:start="231:17" pos:end="231:42"><expr pos:start="231:17" pos:end="231:41"><name pos:start="231:17" pos:end="231:17">i</name> <operator pos:start="231:19" pos:end="231:19">&lt;</operator> <name pos:start="231:21" pos:end="231:41">total_non_cc_elements</name></expr>;</condition> <incr pos:start="231:44" pos:end="231:46"><expr pos:start="231:44" pos:end="231:46"><name pos:start="231:44" pos:end="231:44">i</name><operator pos:start="231:45" pos:end="231:46">++</operator></expr></incr>)</control> <block pos:start="231:49" pos:end="245:5">{<block_content pos:start="233:9" pos:end="243:9">

        <expr_stmt pos:start="233:9" pos:end="233:46"><expr pos:start="233:9" pos:end="233:45"><name pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:18">layout_map</name><index pos:start="233:19" pos:end="233:21">[<expr pos:start="233:20" pos:end="233:20"><name pos:start="233:20" pos:end="233:20">i</name></expr>]</index><index pos:start="233:22" pos:end="233:24">[<expr pos:start="233:23" pos:end="233:23"><literal type="number" pos:start="233:23" pos:end="233:23">0</literal></expr>]</index></name> <operator pos:start="233:26" pos:end="233:26">=</operator> <name pos:start="233:28" pos:end="233:37"><name pos:start="233:28" pos:end="233:34">e2c_vec</name><index pos:start="233:35" pos:end="233:37">[<expr pos:start="233:36" pos:end="233:36"><name pos:start="233:36" pos:end="233:36">i</name></expr>]</index></name><operator pos:start="233:38" pos:end="233:38">.</operator><name pos:start="233:39" pos:end="233:45">syn_ele</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:46"><expr pos:start="235:9" pos:end="235:45"><name pos:start="235:9" pos:end="235:24"><name pos:start="235:9" pos:end="235:18">layout_map</name><index pos:start="235:19" pos:end="235:21">[<expr pos:start="235:20" pos:end="235:20"><name pos:start="235:20" pos:end="235:20">i</name></expr>]</index><index pos:start="235:22" pos:end="235:24">[<expr pos:start="235:23" pos:end="235:23"><literal type="number" pos:start="235:23" pos:end="235:23">1</literal></expr>]</index></name> <operator pos:start="235:26" pos:end="235:26">=</operator> <name pos:start="235:28" pos:end="235:37"><name pos:start="235:28" pos:end="235:34">e2c_vec</name><index pos:start="235:35" pos:end="235:37">[<expr pos:start="235:36" pos:end="235:36"><name pos:start="235:36" pos:end="235:36">i</name></expr>]</index></name><operator pos:start="235:38" pos:end="235:38">.</operator><name pos:start="235:39" pos:end="235:45">elem_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:51"><expr pos:start="237:9" pos:end="237:50"><name pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:18">layout_map</name><index pos:start="237:19" pos:end="237:21">[<expr pos:start="237:20" pos:end="237:20"><name pos:start="237:20" pos:end="237:20">i</name></expr>]</index><index pos:start="237:22" pos:end="237:24">[<expr pos:start="237:23" pos:end="237:23"><literal type="number" pos:start="237:23" pos:end="237:23">2</literal></expr>]</index></name> <operator pos:start="237:26" pos:end="237:26">=</operator> <name pos:start="237:28" pos:end="237:37"><name pos:start="237:28" pos:end="237:34">e2c_vec</name><index pos:start="237:35" pos:end="237:37">[<expr pos:start="237:36" pos:end="237:36"><name pos:start="237:36" pos:end="237:36">i</name></expr>]</index></name><operator pos:start="237:38" pos:end="237:38">.</operator><name pos:start="237:39" pos:end="237:50">aac_position</name></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="243:9"><if pos:start="239:9" pos:end="243:9">if <condition pos:start="239:12" pos:end="239:49">(<expr pos:start="239:13" pos:end="239:48"><name pos:start="239:13" pos:end="239:22"><name pos:start="239:13" pos:end="239:19">e2c_vec</name><index pos:start="239:20" pos:end="239:22">[<expr pos:start="239:21" pos:end="239:21"><name pos:start="239:21" pos:end="239:21">i</name></expr>]</index></name><operator pos:start="239:23" pos:end="239:23">.</operator><name pos:start="239:24" pos:end="239:34">av_position</name> <operator pos:start="239:36" pos:end="239:37">!=</operator> <name pos:start="239:39" pos:end="239:48">UINT64_MAX</name></expr>)</condition> <block pos:start="239:51" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:45">

            <expr_stmt pos:start="241:13" pos:end="241:45"><expr pos:start="241:13" pos:end="241:44"><name pos:start="241:13" pos:end="241:18">layout</name> <operator pos:start="241:20" pos:end="241:21">|=</operator> <name pos:start="241:23" pos:end="241:32"><name pos:start="241:23" pos:end="241:29">e2c_vec</name><index pos:start="241:30" pos:end="241:32">[<expr pos:start="241:31" pos:end="241:31"><name pos:start="241:31" pos:end="241:31">i</name></expr>]</index></name><operator pos:start="241:33" pos:end="241:33">.</operator><name pos:start="241:34" pos:end="241:44">av_position</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="249:5" pos:end="249:18">return <expr pos:start="249:12" pos:end="249:17"><name pos:start="249:12" pos:end="249:17">layout</name></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
