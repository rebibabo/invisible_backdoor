<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14584.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:27">addr_to_string</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">format</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:55"><decl pos:start="3:29" pos:end="3:55"><type pos:start="3:29" pos:end="3:55"><name pos:start="3:29" pos:end="3:51"><name pos:start="3:29" pos:end="3:34">struct</name> <name pos:start="3:36" pos:end="3:51">sockaddr_storage</name></name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:55">sa</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:37">socklen_t</name></type> <name pos:start="5:39" pos:end="5:43">salen</name></decl></parameter>)</parameter_list> <block pos:start="5:46" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:16">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:13">host</name><index pos:start="9:14" pos:end="9:25">[<expr pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:24">NI_MAXHOST</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:13">serv</name><index pos:start="11:14" pos:end="11:25">[<expr pos:start="11:15" pos:end="11:24"><name pos:start="11:15" pos:end="11:24">NI_MAXSERV</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="23:66">(<expr pos:start="17:9" pos:end="23:65"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">err</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="23:59"><name pos:start="17:16" pos:end="17:26">getnameinfo</name><argument_list pos:start="17:27" pos:end="23:59">(<argument pos:start="17:28" pos:end="17:48"><expr pos:start="17:28" pos:end="17:48"><operator pos:start="17:28" pos:end="17:28">(</operator>struct <name pos:start="17:36" pos:end="17:43">sockaddr</name> <operator pos:start="17:45" pos:end="17:45">*</operator><operator pos:start="17:46" pos:end="17:46">)</operator><name pos:start="17:47" pos:end="17:48">sa</name></expr></argument>, <argument pos:start="17:51" pos:end="17:55"><expr pos:start="17:51" pos:end="17:55"><name pos:start="17:51" pos:end="17:55">salen</name></expr></argument>,

                           <argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">host</name></expr></argument>, <argument pos:start="19:34" pos:end="19:45"><expr pos:start="19:34" pos:end="19:45"><sizeof pos:start="19:34" pos:end="19:45">sizeof<argument_list pos:start="19:40" pos:end="19:45">(<argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">host</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">serv</name></expr></argument>, <argument pos:start="21:34" pos:end="21:45"><expr pos:start="21:34" pos:end="21:45"><sizeof pos:start="21:34" pos:end="21:45">sizeof<argument_list pos:start="21:40" pos:end="21:45">(<argument pos:start="21:41" pos:end="21:44"><expr pos:start="21:41" pos:end="21:44"><name pos:start="21:41" pos:end="21:44">serv</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:58"><expr pos:start="23:28" pos:end="23:58"><name pos:start="23:28" pos:end="23:41">NI_NUMERICHOST</name> <operator pos:start="23:43" pos:end="23:43">|</operator> <name pos:start="23:45" pos:end="23:58">NI_NUMERICSERV</name></expr></argument>)</argument_list></call><operator pos:start="23:60" pos:end="23:60">)</operator> <operator pos:start="23:62" pos:end="23:63">!=</operator> <literal type="number" pos:start="23:65" pos:end="23:65">0</literal></expr>)</condition> <block pos:start="23:68" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:20">

        <expr_stmt pos:start="25:9" pos:end="27:42"><expr pos:start="25:9" pos:end="27:41"><call pos:start="25:9" pos:end="27:41"><name pos:start="25:9" pos:end="25:17">VNC_DEBUG</name><argument_list pos:start="25:18" pos:end="27:41">(<argument pos:start="25:19" pos:end="25:51"><expr pos:start="25:19" pos:end="25:51"><literal type="string" pos:start="25:19" pos:end="25:51">"Cannot resolve address %d: %s\n"</literal></expr></argument>,

                  <argument pos:start="27:19" pos:end="27:21"><expr pos:start="27:19" pos:end="27:21"><name pos:start="27:19" pos:end="27:21">err</name></expr></argument>, <argument pos:start="27:24" pos:end="27:40"><expr pos:start="27:24" pos:end="27:40"><call pos:start="27:24" pos:end="27:40"><name pos:start="27:24" pos:end="27:35">gai_strerror</name><argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:20"><if pos:start="35:5" pos:end="37:20">if <condition pos:start="35:8" pos:end="35:48">(<expr pos:start="35:9" pos:end="35:47"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:16">asprintf</name><argument_list pos:start="35:17" pos:end="35:43">(<argument pos:start="35:18" pos:end="35:22"><expr pos:start="35:18" pos:end="35:22"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:22">addr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">format</name></expr></argument>, <argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><name pos:start="35:33" pos:end="35:36">host</name></expr></argument>, <argument pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:42"><name pos:start="35:39" pos:end="35:42">serv</name></expr></argument>)</argument_list></call> <operator pos:start="35:45" pos:end="35:45">&lt;</operator> <literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:20"><block_content pos:start="37:9" pos:end="37:20">

        <return pos:start="37:9" pos:end="37:20">return <expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="41:5" pos:end="41:16">return <expr pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:15">addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
