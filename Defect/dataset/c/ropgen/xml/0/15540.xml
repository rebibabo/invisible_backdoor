<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15540.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:71">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:70"><decl pos:start="5:50" pos:end="5:70"><type pos:start="5:50" pos:end="5:70"><name pos:start="5:50" pos:end="5:65">CPUOpenRISCState</name> <modifier pos:start="5:67" pos:end="5:67">*</modifier></type><name pos:start="5:68" pos:end="5:70">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="145:1">{<block_content pos:start="9:5" pos:end="143:30">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">abi_ulong</name></type> <name pos:start="11:15" pos:end="11:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:27">return_ip</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:29">target_rt_sigframe</name></name> <modifier pos:start="15:31" pos:end="15:31">*</modifier></type><name pos:start="15:32" pos:end="15:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">abi_ulong</name></type> <name pos:start="17:15" pos:end="17:23">info_addr</name></decl>, <decl pos:start="17:26" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:13"/><name pos:start="17:26" pos:end="17:32">uc_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:14">frame_addr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:54"><name pos:start="21:18" pos:end="21:29">get_sigframe</name><argument_list pos:start="21:30" pos:end="21:54">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">ka</name></expr></argument>, <argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">env</name></expr></argument>, <argument pos:start="21:40" pos:end="21:53"><expr pos:start="21:40" pos:end="21:53"><sizeof pos:start="21:40" pos:end="21:53">sizeof<argument_list pos:start="21:46" pos:end="21:53">(<argument pos:start="21:47" pos:end="21:52"><expr pos:start="21:47" pos:end="21:52"><operator pos:start="21:47" pos:end="21:47">*</operator><name pos:start="21:48" pos:end="21:52">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">frame</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">frame_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:26">

        <goto pos:start="25:9" pos:end="25:26">goto <name pos:start="25:14" pos:end="25:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:71"><expr pos:start="31:5" pos:end="31:70"><name pos:start="31:5" pos:end="31:13">info_addr</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:26">frame_addr</name> <operator pos:start="31:28" pos:end="31:28">+</operator> <call pos:start="31:30" pos:end="31:70"><name pos:start="31:30" pos:end="31:37">offsetof</name><argument_list pos:start="31:38" pos:end="31:70">(<argument pos:start="31:39" pos:end="31:63"><expr pos:start="31:39" pos:end="31:63">struct <name pos:start="31:46" pos:end="31:63">target_rt_sigframe</name></expr></argument>, <argument pos:start="31:66" pos:end="31:69"><expr pos:start="31:66" pos:end="31:69"><name pos:start="31:66" pos:end="31:69">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><call pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:14">__put_user</name><argument_list pos:start="33:15" pos:end="33:40">(<argument pos:start="33:16" pos:end="33:24"><expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:24">info_addr</name></expr></argument>, <argument pos:start="33:27" pos:end="33:39"><expr pos:start="33:27" pos:end="33:39"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:39"><name pos:start="33:28" pos:end="33:32">frame</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:39">pinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:67"><expr pos:start="35:5" pos:end="35:66"><name pos:start="35:5" pos:end="35:11">uc_addr</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:24">frame_addr</name> <operator pos:start="35:26" pos:end="35:26">+</operator> <call pos:start="35:28" pos:end="35:66"><name pos:start="35:28" pos:end="35:35">offsetof</name><argument_list pos:start="35:36" pos:end="35:66">(<argument pos:start="35:37" pos:end="35:61"><expr pos:start="35:37" pos:end="35:61">struct <name pos:start="35:44" pos:end="35:61">target_rt_sigframe</name></expr></argument>, <argument pos:start="35:64" pos:end="35:65"><expr pos:start="35:64" pos:end="35:65"><name pos:start="35:64" pos:end="35:65">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><call pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:14">__put_user</name><argument_list pos:start="37:15" pos:end="37:36">(<argument pos:start="37:16" pos:end="37:22"><expr pos:start="37:16" pos:end="37:22"><name pos:start="37:16" pos:end="37:22">uc_addr</name></expr></argument>, <argument pos:start="37:25" pos:end="37:35"><expr pos:start="37:25" pos:end="37:35"><operator pos:start="37:25" pos:end="37:25">&amp;</operator><name pos:start="37:26" pos:end="37:35"><name pos:start="37:26" pos:end="37:30">frame</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:35">puc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:10">ka</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:20">sa_flags</name></name> <operator pos:start="41:22" pos:end="41:22">&amp;</operator> <name pos:start="41:24" pos:end="41:33">SA_SIGINFO</name></expr>)</condition> <block pos:start="41:36" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:49">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:28">copy_siginfo_to_user</name><argument_list pos:start="43:29" pos:end="43:48">(<argument pos:start="43:30" pos:end="43:41"><expr pos:start="43:30" pos:end="43:41"><operator pos:start="43:30" pos:end="43:30">&amp;</operator><name pos:start="43:31" pos:end="43:41"><name pos:start="43:31" pos:end="43:35">frame</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:41">info</name></name></expr></argument>, <argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:80">/*err |= __clear_user(&amp;frame-&gt;uc, offsetof(struct ucontext, uc_mcontext));*/</comment>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><call pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:14">__put_user</name><argument_list pos:start="51:15" pos:end="51:39">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr></argument>, <argument pos:start="51:19" pos:end="51:38"><expr pos:start="51:19" pos:end="51:38"><operator pos:start="51:19" pos:end="51:19">&amp;</operator><name pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:24">frame</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:28">uc</name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:14">__put_user</name><argument_list pos:start="53:15" pos:end="53:38">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr></argument>, <argument pos:start="53:19" pos:end="53:37"><expr pos:start="53:19" pos:end="53:37"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:24">frame</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:28">uc</name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:37">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:43"><expr pos:start="55:5" pos:end="57:42"><call pos:start="55:5" pos:end="57:42"><name pos:start="55:5" pos:end="55:14">__put_user</name><argument_list pos:start="55:15" pos:end="57:42">(<argument pos:start="55:16" pos:end="55:44"><expr pos:start="55:16" pos:end="55:44"><name pos:start="55:16" pos:end="55:44"><name pos:start="55:16" pos:end="55:38">target_sigaltstack_used</name><operator pos:start="55:39" pos:end="55:39">.</operator><name pos:start="55:40" pos:end="55:44">ss_sp</name></name></expr></argument>,

               <argument pos:start="57:16" pos:end="57:41"><expr pos:start="57:16" pos:end="57:41"><operator pos:start="57:16" pos:end="57:16">&amp;</operator><name pos:start="57:17" pos:end="57:41"><name pos:start="57:17" pos:end="57:21">frame</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:25">uc</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:35">tuc_stack</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:41">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:73"><expr pos:start="59:5" pos:end="59:72"><call pos:start="59:5" pos:end="59:72"><name pos:start="59:5" pos:end="59:14">__put_user</name><argument_list pos:start="59:15" pos:end="59:72">(<argument pos:start="59:16" pos:end="59:40"><expr pos:start="59:16" pos:end="59:40"><call pos:start="59:16" pos:end="59:40"><name pos:start="59:16" pos:end="59:27">sas_ss_flags</name><argument_list pos:start="59:28" pos:end="59:40">(<argument pos:start="59:29" pos:end="59:39"><expr pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:31">env</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:36">gpr</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:43" pos:end="59:71"><expr pos:start="59:43" pos:end="59:71"><operator pos:start="59:43" pos:end="59:43">&amp;</operator><name pos:start="59:44" pos:end="59:71"><name pos:start="59:44" pos:end="59:48">frame</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:52">uc</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:62">tuc_stack</name><operator pos:start="59:63" pos:end="59:63">.</operator><name pos:start="59:64" pos:end="59:71">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:45"><expr pos:start="61:5" pos:end="63:44"><call pos:start="61:5" pos:end="63:44"><name pos:start="61:5" pos:end="61:14">__put_user</name><argument_list pos:start="61:15" pos:end="63:44">(<argument pos:start="61:16" pos:end="61:46"><expr pos:start="61:16" pos:end="61:46"><name pos:start="61:16" pos:end="61:46"><name pos:start="61:16" pos:end="61:38">target_sigaltstack_used</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:46">ss_size</name></name></expr></argument>,

               <argument pos:start="63:16" pos:end="63:43"><expr pos:start="63:16" pos:end="63:43"><operator pos:start="63:16" pos:end="63:16">&amp;</operator><name pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:21">frame</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:25">uc</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:35">tuc_stack</name><operator pos:start="63:36" pos:end="63:36">.</operator><name pos:start="63:37" pos:end="63:43">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:58"><expr pos:start="65:5" pos:end="65:57"><name pos:start="65:5" pos:end="65:7">err</name> <operator pos:start="65:9" pos:end="65:10">|=</operator> <call pos:start="65:12" pos:end="65:57"><name pos:start="65:12" pos:end="65:27">setup_sigcontext</name><argument_list pos:start="65:28" pos:end="65:57">(<argument pos:start="65:29" pos:end="65:38"><expr pos:start="65:29" pos:end="65:38"><operator pos:start="65:29" pos:end="65:29">&amp;</operator><name pos:start="65:30" pos:end="65:38"><name pos:start="65:30" pos:end="65:34">frame</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:38">sc</name></name></expr></argument>, <argument pos:start="65:41" pos:end="65:43"><expr pos:start="65:41" pos:end="65:43"><name pos:start="65:41" pos:end="65:43">env</name></expr></argument>, <argument pos:start="65:46" pos:end="65:56"><expr pos:start="65:46" pos:end="65:56"><name pos:start="65:46" pos:end="65:56"><name pos:start="65:46" pos:end="65:48">set</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:53">sig</name><index pos:start="65:54" pos:end="65:56">[<expr pos:start="65:55" pos:end="65:55"><literal type="number" pos:start="65:55" pos:end="65:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:70">/*err |= copy_to_user(frame-&gt;uc.tuc_sigmask, set, sizeof(*set));*/</comment>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">err</name></expr>)</condition> <block pos:start="73:14" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:26">

        <goto pos:start="75:9" pos:end="75:26">goto <name pos:start="75:14" pos:end="75:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:66">/* trampoline - the desired return ip is the retcode itself */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:13">return_ip</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:25">unsigned</name> <name pos:start="83:27" pos:end="83:30">long</name><operator pos:start="83:31" pos:end="83:31">)</operator><operator pos:start="83:32" pos:end="83:32">&amp;</operator><name pos:start="83:33" pos:end="83:46"><name pos:start="83:33" pos:end="83:37">frame</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:46">retcode</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="85:5" pos:end="85:54">/* This is l.ori r11,r0,__NR_sigreturn, l.sys 1 */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:54"><expr pos:start="87:5" pos:end="87:53"><call pos:start="87:5" pos:end="87:53"><name pos:start="87:5" pos:end="87:14">__put_user</name><argument_list pos:start="87:15" pos:end="87:53">(<argument pos:start="87:16" pos:end="87:21"><expr pos:start="87:16" pos:end="87:21"><literal type="number" pos:start="87:16" pos:end="87:21">0xa960</literal></expr></argument>, <argument pos:start="87:24" pos:end="87:52"><expr pos:start="87:24" pos:end="87:52"><operator pos:start="87:24" pos:end="87:24">(</operator><name pos:start="87:25" pos:end="87:29">short</name> <operator pos:start="87:31" pos:end="87:31">*</operator><operator pos:start="87:32" pos:end="87:32">)</operator><operator pos:start="87:33" pos:end="87:33">(</operator><name pos:start="87:34" pos:end="87:47"><name pos:start="87:34" pos:end="87:38">frame</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:47">retcode</name></name> <operator pos:start="87:49" pos:end="87:49">+</operator> <literal type="number" pos:start="87:51" pos:end="87:51">0</literal><operator pos:start="87:52" pos:end="87:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:70"><expr pos:start="89:5" pos:end="89:69"><call pos:start="89:5" pos:end="89:69"><name pos:start="89:5" pos:end="89:14">__put_user</name><argument_list pos:start="89:15" pos:end="89:69">(<argument pos:start="89:16" pos:end="89:37"><expr pos:start="89:16" pos:end="89:37"><name pos:start="89:16" pos:end="89:37">TARGET_NR_rt_sigreturn</name></expr></argument>, <argument pos:start="89:40" pos:end="89:68"><expr pos:start="89:40" pos:end="89:68"><operator pos:start="89:40" pos:end="89:40">(</operator><name pos:start="89:41" pos:end="89:45">short</name> <operator pos:start="89:47" pos:end="89:47">*</operator><operator pos:start="89:48" pos:end="89:48">)</operator><operator pos:start="89:49" pos:end="89:49">(</operator><name pos:start="89:50" pos:end="89:63"><name pos:start="89:50" pos:end="89:54">frame</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:63">retcode</name></name> <operator pos:start="89:65" pos:end="89:65">+</operator> <literal type="number" pos:start="89:67" pos:end="89:67">2</literal><operator pos:start="89:68" pos:end="89:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:66"><expr pos:start="91:5" pos:end="91:65"><call pos:start="91:5" pos:end="91:65"><name pos:start="91:5" pos:end="91:14">__put_user</name><argument_list pos:start="91:15" pos:end="91:65">(<argument pos:start="91:16" pos:end="91:25"><expr pos:start="91:16" pos:end="91:25"><literal type="number" pos:start="91:16" pos:end="91:25">0x20000001</literal></expr></argument>, <argument pos:start="91:28" pos:end="91:64"><expr pos:start="91:28" pos:end="91:64"><operator pos:start="91:28" pos:end="91:28">(</operator><name pos:start="91:29" pos:end="91:36">unsigned</name> <name pos:start="91:38" pos:end="91:41">long</name> <operator pos:start="91:43" pos:end="91:43">*</operator><operator pos:start="91:44" pos:end="91:44">)</operator><operator pos:start="91:45" pos:end="91:45">(</operator><name pos:start="91:46" pos:end="91:59"><name pos:start="91:46" pos:end="91:50">frame</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:59">retcode</name></name> <operator pos:start="91:61" pos:end="91:61">+</operator> <literal type="number" pos:start="91:63" pos:end="91:63">4</literal><operator pos:start="91:64" pos:end="91:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:66"><expr pos:start="93:5" pos:end="93:65"><call pos:start="93:5" pos:end="93:65"><name pos:start="93:5" pos:end="93:14">__put_user</name><argument_list pos:start="93:15" pos:end="93:65">(<argument pos:start="93:16" pos:end="93:25"><expr pos:start="93:16" pos:end="93:25"><literal type="number" pos:start="93:16" pos:end="93:25">0x15000000</literal></expr></argument>, <argument pos:start="93:28" pos:end="93:64"><expr pos:start="93:28" pos:end="93:64"><operator pos:start="93:28" pos:end="93:28">(</operator><name pos:start="93:29" pos:end="93:36">unsigned</name> <name pos:start="93:38" pos:end="93:41">long</name> <operator pos:start="93:43" pos:end="93:43">*</operator><operator pos:start="93:44" pos:end="93:44">)</operator><operator pos:start="93:45" pos:end="93:45">(</operator><name pos:start="93:46" pos:end="93:59"><name pos:start="93:46" pos:end="93:50">frame</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:59">retcode</name></name> <operator pos:start="93:61" pos:end="93:61">+</operator> <literal type="number" pos:start="93:63" pos:end="93:63">8</literal><operator pos:start="93:64" pos:end="93:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:12">(<expr pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">err</name></expr>)</condition> <block pos:start="97:14" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:26">

        <goto pos:start="99:9" pos:end="99:26">goto <name pos:start="99:14" pos:end="99:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:66">/* TODO what is the current-&gt;exec_domain stuff and invmap ? */</comment>



    <comment type="block" pos:start="109:5" pos:end="109:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:45"><expr pos:start="111:5" pos:end="111:44"><name pos:start="111:5" pos:end="111:11"><name pos:start="111:5" pos:end="111:7">env</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:11">pc</name></name> <operator pos:start="111:13" pos:end="111:13">=</operator> <operator pos:start="111:15" pos:end="111:15">(</operator><name pos:start="111:16" pos:end="111:23">unsigned</name> <name pos:start="111:25" pos:end="111:28">long</name><operator pos:start="111:29" pos:end="111:29">)</operator><name pos:start="111:30" pos:end="111:44"><name pos:start="111:30" pos:end="111:31">ka</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:44">_sa_handler</name></name></expr>;</expr_stmt> <comment type="block" pos:start="111:47" pos:end="111:69">/* what we enter NOW */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:43"><expr pos:start="113:5" pos:end="113:42"><name pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:12">gpr</name><index pos:start="113:13" pos:end="113:15">[<expr pos:start="113:14" pos:end="113:14"><literal type="number" pos:start="113:14" pos:end="113:14">9</literal></expr>]</index></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <operator pos:start="113:19" pos:end="113:19">(</operator><name pos:start="113:20" pos:end="113:27">unsigned</name> <name pos:start="113:29" pos:end="113:32">long</name><operator pos:start="113:33" pos:end="113:33">)</operator><name pos:start="113:34" pos:end="113:42">return_ip</name></expr>;</expr_stmt>     <comment type="block" pos:start="113:49" pos:end="113:73">/* what we enter LATER */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:37"><expr pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:15"><name pos:start="115:5" pos:end="115:7">env</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:12">gpr</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">3</literal></expr>]</index></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <operator pos:start="115:19" pos:end="115:19">(</operator><name pos:start="115:20" pos:end="115:27">unsigned</name> <name pos:start="115:29" pos:end="115:32">long</name><operator pos:start="115:33" pos:end="115:33">)</operator><name pos:start="115:34" pos:end="115:36">sig</name></expr>;</expr_stmt>           <comment type="block" pos:start="115:49" pos:end="115:66">/* arg 1: signo */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:46"><expr pos:start="117:5" pos:end="117:45"><name pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:7">env</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:12">gpr</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">4</literal></expr>]</index></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <operator pos:start="117:19" pos:end="117:19">(</operator><name pos:start="117:20" pos:end="117:27">unsigned</name> <name pos:start="117:29" pos:end="117:32">long</name><operator pos:start="117:33" pos:end="117:33">)</operator><operator pos:start="117:34" pos:end="117:34">&amp;</operator><name pos:start="117:35" pos:end="117:45"><name pos:start="117:35" pos:end="117:39">frame</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:45">info</name></name></expr>;</expr_stmt>  <comment type="block" pos:start="117:49" pos:end="117:73">/* arg 2: (siginfo_t*) */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:44"><expr pos:start="119:5" pos:end="119:43"><name pos:start="119:5" pos:end="119:15"><name pos:start="119:5" pos:end="119:7">env</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:12">gpr</name><index pos:start="119:13" pos:end="119:15">[<expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">5</literal></expr>]</index></name> <operator pos:start="119:17" pos:end="119:17">=</operator> <operator pos:start="119:19" pos:end="119:19">(</operator><name pos:start="119:20" pos:end="119:27">unsigned</name> <name pos:start="119:29" pos:end="119:32">long</name><operator pos:start="119:33" pos:end="119:33">)</operator><operator pos:start="119:34" pos:end="119:34">&amp;</operator><name pos:start="119:35" pos:end="119:43"><name pos:start="119:35" pos:end="119:39">frame</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:43">uc</name></name></expr>;</expr_stmt>    <comment type="block" pos:start="119:49" pos:end="119:69">/* arg 3: ucontext */</comment>



    <comment type="block" pos:start="123:5" pos:end="123:60">/* actually move the usp to reflect the stacked frame */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:39"><expr pos:start="125:5" pos:end="125:38"><name pos:start="125:5" pos:end="125:15"><name pos:start="125:5" pos:end="125:7">env</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:12">gpr</name><index pos:start="125:13" pos:end="125:15">[<expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">1</literal></expr>]</index></name> <operator pos:start="125:17" pos:end="125:17">=</operator> <operator pos:start="125:19" pos:end="125:19">(</operator><name pos:start="125:20" pos:end="125:27">unsigned</name> <name pos:start="125:29" pos:end="125:32">long</name><operator pos:start="125:33" pos:end="125:33">)</operator><name pos:start="125:34" pos:end="125:38">frame</name></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:11">return;</return>



<label pos:start="133:1" pos:end="133:13"><name pos:start="133:1" pos:end="133:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="135:5" pos:end="135:45"><expr pos:start="135:5" pos:end="135:44"><call pos:start="135:5" pos:end="135:44"><name pos:start="135:5" pos:end="135:22">unlock_user_struct</name><argument_list pos:start="135:23" pos:end="135:44">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><name pos:start="135:24" pos:end="135:28">frame</name></expr></argument>, <argument pos:start="135:31" pos:end="135:40"><expr pos:start="135:31" pos:end="135:40"><name pos:start="135:31" pos:end="135:40">frame_addr</name></expr></argument>, <argument pos:start="135:43" pos:end="135:43"><expr pos:start="135:43" pos:end="135:43"><literal type="number" pos:start="135:43" pos:end="135:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="141:5"><if pos:start="137:5" pos:end="141:5">if <condition pos:start="137:8" pos:end="137:30">(<expr pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:11">sig</name> <operator pos:start="137:13" pos:end="137:14">==</operator> <name pos:start="137:16" pos:end="137:29">TARGET_SIGSEGV</name></expr>)</condition> <block pos:start="137:32" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:41">

        <expr_stmt pos:start="139:9" pos:end="139:41"><expr pos:start="139:9" pos:end="139:40"><name pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:10">ka</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:23">_sa_handler</name></name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:40">TARGET_SIG_DFL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:30"><expr pos:start="143:5" pos:end="143:29"><call pos:start="143:5" pos:end="143:29"><name pos:start="143:5" pos:end="143:13">force_sig</name><argument_list pos:start="143:14" pos:end="143:29">(<argument pos:start="143:15" pos:end="143:28"><expr pos:start="143:15" pos:end="143:28"><name pos:start="143:15" pos:end="143:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
