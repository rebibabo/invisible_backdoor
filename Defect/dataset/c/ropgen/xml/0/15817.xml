<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15817.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">rcu_qtest</name><parameter_list pos:start="1:22" pos:end="1:67">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">test</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:52">duration</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:66">nreaders</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:8">long</name> <name pos:start="7:10" pos:end="7:13">long</name></type> <name pos:start="7:15" pos:end="7:29">n_removed_local</name> <init pos:start="7:31" pos:end="7:33">= <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:23">list_element</name></name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:27">el</name></decl>, <decl pos:start="11:30" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:25"><modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:37">prev_el</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><call pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">rcu_qtest_init</name><argument_list pos:start="15:19" pos:end="15:20">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="21:5">for <control pos:start="17:9" pos:end="17:34">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:29"><expr pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:28">nreaders</name></expr>;</condition> <incr pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:31">i</name><operator pos:start="17:32" pos:end="17:33">++</operator></expr></incr>)</control> <block pos:start="17:36" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:36">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:21">create_thread</name><argument_list pos:start="19:22" pos:end="19:35">(<argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">rcu_q_reader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:17">create_thread</name><argument_list pos:start="23:18" pos:end="23:32">(<argument pos:start="23:19" pos:end="23:31"><expr pos:start="23:19" pos:end="23:31"><name pos:start="23:19" pos:end="23:31">rcu_q_updater</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><call pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:17">rcu_qtest_run</name><argument_list pos:start="25:18" pos:end="25:37">(<argument pos:start="25:19" pos:end="25:26"><expr pos:start="25:19" pos:end="25:26"><name pos:start="25:19" pos:end="25:26">duration</name></expr></argument>, <argument pos:start="25:29" pos:end="25:36"><expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36">nreaders</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="29:5" pos:end="29:60"><name pos:start="29:5" pos:end="29:26">QLIST_FOREACH_SAFE_RCU</name><argument_list pos:start="29:27" pos:end="29:60">(<argument pos:start="29:28" pos:end="29:34">prev_el</argument>, <argument pos:start="29:37" pos:end="29:48">&amp;Q_list_head</argument>, <argument pos:start="29:51" pos:end="29:55">entry</argument>, <argument pos:start="29:58" pos:end="29:59">el</argument>)</argument_list></macro> <block pos:start="29:62" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:26">

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:24">QLIST_REMOVE_RCU</name><argument_list pos:start="31:25" pos:end="31:40">(<argument pos:start="31:26" pos:end="31:32"><expr pos:start="31:26" pos:end="31:32"><name pos:start="31:26" pos:end="31:32">prev_el</name></expr></argument>, <argument pos:start="31:35" pos:end="31:39"><expr pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:39">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:17">call_rcu1</name><argument_list pos:start="33:18" pos:end="33:49">(<argument pos:start="33:19" pos:end="33:31"><expr pos:start="33:19" pos:end="33:31"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:26">prev_el</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">rcu</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:48"><expr pos:start="33:34" pos:end="33:48"><name pos:start="33:34" pos:end="33:48">reclaim_list_el</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:23">n_removed_local</name><operator pos:start="35:24" pos:end="35:25">++</operator></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><call pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:14">atomic_add</name><argument_list pos:start="39:15" pos:end="39:49">(<argument pos:start="39:16" pos:end="39:31"><expr pos:start="39:16" pos:end="39:31"><operator pos:start="39:16" pos:end="39:16">&amp;</operator><name pos:start="39:17" pos:end="39:31">n_nodes_removed</name></expr></argument>, <argument pos:start="39:34" pos:end="39:48"><expr pos:start="39:34" pos:end="39:48"><name pos:start="39:34" pos:end="39:48">n_removed_local</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><call pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:19">synchronize_rcu</name><argument_list pos:start="41:20" pos:end="41:21">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="43:5" pos:end="49:5">while <condition pos:start="43:11" pos:end="43:40">(<expr pos:start="43:12" pos:end="43:39"><name pos:start="43:12" pos:end="43:26">n_nodes_removed</name> <operator pos:start="43:28" pos:end="43:28">&gt;</operator> <name pos:start="43:30" pos:end="43:39">n_reclaims</name></expr>)</condition> <block pos:start="43:42" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:26">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><call pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:16">g_usleep</name><argument_list pos:start="45:17" pos:end="45:21">(<argument pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><literal type="number" pos:start="45:18" pos:end="45:20">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:23">synchronize_rcu</name><argument_list pos:start="47:24" pos:end="47:25">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:25">(<expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:24">g_test_in_charge</name></expr>)</condition> <block pos:start="51:27" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:57">

        <expr_stmt pos:start="53:9" pos:end="53:57"><expr pos:start="53:9" pos:end="53:56"><call pos:start="53:9" pos:end="53:56"><name pos:start="53:9" pos:end="53:23">g_assert_cmpint</name><argument_list pos:start="53:24" pos:end="53:56">(<argument pos:start="53:25" pos:end="53:39"><expr pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:39">n_nodes_removed</name></expr></argument>, <argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><operator pos:start="53:42" pos:end="53:43">==</operator></expr></argument>, <argument pos:start="53:46" pos:end="53:55"><expr pos:start="53:46" pos:end="53:55"><name pos:start="53:46" pos:end="53:55">n_reclaims</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="65:5">else <block pos:start="55:12" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:16">

        <expr_stmt pos:start="57:9" pos:end="61:80"><expr pos:start="57:9" pos:end="61:79"><call pos:start="57:9" pos:end="61:79"><name pos:start="57:9" pos:end="57:14">printf</name><argument_list pos:start="57:15" pos:end="61:79">(<argument pos:start="57:16" pos:end="59:67"><expr pos:start="57:16" pos:end="59:67"><literal type="string" pos:start="57:16" pos:end="57:56">"%s: %d readers; 1 updater; nodes read: "</literal>  \

               <literal type="string" pos:start="59:16" pos:end="59:67">"%lld, nodes removed: %lld; nodes reclaimed: %lld\n"</literal></expr></argument>,

               <argument pos:start="61:16" pos:end="61:19"><expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">test</name></expr></argument>, <argument pos:start="61:22" pos:end="61:40"><expr pos:start="61:22" pos:end="61:40"><name pos:start="61:22" pos:end="61:36">nthreadsrunning</name> <operator pos:start="61:38" pos:end="61:38">-</operator> <literal type="number" pos:start="61:40" pos:end="61:40">1</literal></expr></argument>, <argument pos:start="61:43" pos:end="61:49"><expr pos:start="61:43" pos:end="61:49"><name pos:start="61:43" pos:end="61:49">n_reads</name></expr></argument>, <argument pos:start="61:52" pos:end="61:66"><expr pos:start="61:52" pos:end="61:66"><name pos:start="61:52" pos:end="61:66">n_nodes_removed</name></expr></argument>, <argument pos:start="61:69" pos:end="61:78"><expr pos:start="61:69" pos:end="61:78"><name pos:start="61:69" pos:end="61:78">n_reclaims</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:16"><expr pos:start="63:9" pos:end="63:15"><call pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:12">exit</name><argument_list pos:start="63:13" pos:end="63:15">(<argument pos:start="63:14" pos:end="63:14"><expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
