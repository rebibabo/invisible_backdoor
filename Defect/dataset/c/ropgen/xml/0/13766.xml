<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13766.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_lpc_calc_coefs</name><parameter_list pos:start="1:22" pos:end="11:65">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">LPCContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:44"><decl pos:start="3:23" pos:end="3:44"><type pos:start="3:23" pos:end="3:44"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">int32_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:44">samples</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:59">blocksize</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:74"><decl pos:start="3:62" pos:end="3:74"><type pos:start="3:62" pos:end="3:74"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:74">min_order</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:35"><decl pos:start="5:23" pos:end="5:35"><type pos:start="5:23" pos:end="5:35"><name pos:start="5:23" pos:end="5:25">int</name></type> <name pos:start="5:27" pos:end="5:35">max_order</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:50"><decl pos:start="5:38" pos:end="5:50"><type pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:50">precision</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:52"><decl pos:start="7:23" pos:end="7:52"><type pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:29">int32_t</name></type> <name pos:start="7:31" pos:end="7:52"><name pos:start="7:31" pos:end="7:35">coefs</name><index pos:start="7:36" pos:end="7:37">[]</index><index pos:start="7:38" pos:end="7:52">[<expr pos:start="7:39" pos:end="7:51"><name pos:start="7:39" pos:end="7:51">MAX_LPC_ORDER</name></expr>]</index></name></decl></parameter>, <parameter pos:start="7:55" pos:end="7:64"><decl pos:start="7:55" pos:end="7:64"><type pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:57">int</name> <modifier pos:start="7:59" pos:end="7:59">*</modifier></type><name pos:start="7:60" pos:end="7:64">shift</name></decl></parameter>,

                      <parameter pos:start="9:23" pos:end="9:45"><decl pos:start="9:23" pos:end="9:45"><type pos:start="9:23" pos:end="9:45"><name pos:start="9:23" pos:end="9:36"><name pos:start="9:23" pos:end="9:26">enum</name> <name pos:start="9:28" pos:end="9:36">FFLPCType</name></name></type> <name pos:start="9:38" pos:end="9:45">lpc_type</name></decl></parameter>, <parameter pos:start="9:48" pos:end="9:61"><decl pos:start="9:48" pos:end="9:61"><type pos:start="9:48" pos:end="9:61"><name pos:start="9:48" pos:end="9:50">int</name></type> <name pos:start="9:52" pos:end="9:61">lpc_passes</name></decl></parameter>,

                      <parameter pos:start="11:23" pos:end="11:33"><decl pos:start="11:23" pos:end="11:33"><type pos:start="11:23" pos:end="11:33"><name pos:start="11:23" pos:end="11:25">int</name></type> <name pos:start="11:27" pos:end="11:33">omethod</name></decl></parameter>, <parameter pos:start="11:36" pos:end="11:48"><decl pos:start="11:36" pos:end="11:48"><type pos:start="11:36" pos:end="11:48"><name pos:start="11:36" pos:end="11:38">int</name></type> <name pos:start="11:40" pos:end="11:48">max_shift</name></decl></parameter>, <parameter pos:start="11:51" pos:end="11:64"><decl pos:start="11:51" pos:end="11:64"><type pos:start="11:51" pos:end="11:64"><name pos:start="11:51" pos:end="11:53">int</name></type> <name pos:start="11:55" pos:end="11:64">zero_shift</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="171:1">{<block_content pos:start="15:5" pos:end="169:21">

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:33"><name pos:start="15:12" pos:end="15:16">autoc</name><index pos:start="15:17" pos:end="15:33">[<expr pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:30">MAX_LPC_ORDER</name><operator pos:start="15:31" pos:end="15:31">+</operator><literal type="number" pos:start="15:32" pos:end="15:32">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:29"><name pos:start="17:12" pos:end="17:14">ref</name><index pos:start="17:15" pos:end="17:29">[<expr pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:28">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:44"><name pos:start="19:12" pos:end="19:14">lpc</name><index pos:start="19:15" pos:end="19:29">[<expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28">MAX_LPC_ORDER</name></expr>]</index><index pos:start="19:30" pos:end="19:44">[<expr pos:start="19:31" pos:end="19:43"><name pos:start="19:31" pos:end="19:43">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:12"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:12">j</name></decl>, <decl pos:start="21:15" pos:end="21:18"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:15" pos:end="21:18">pass</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">opt_order</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:41"><expr pos:start="27:5" pos:end="29:40"><call pos:start="27:5" pos:end="29:40"><name pos:start="27:5" pos:end="27:14">av_assert2</name><argument_list pos:start="27:15" pos:end="29:40">(<argument pos:start="27:16" pos:end="29:39"><expr pos:start="27:16" pos:end="29:39"><name pos:start="27:16" pos:end="27:24">max_order</name> <operator pos:start="27:26" pos:end="27:27">&gt;=</operator> <name pos:start="27:29" pos:end="27:41">MIN_LPC_ORDER</name> <operator pos:start="27:43" pos:end="27:44">&amp;&amp;</operator> <name pos:start="27:46" pos:end="27:54">max_order</name> <operator pos:start="27:56" pos:end="27:57">&lt;=</operator> <name pos:start="27:59" pos:end="27:71">MAX_LPC_ORDER</name> <operator pos:start="27:73" pos:end="27:74">&amp;&amp;</operator>

           <name pos:start="29:12" pos:end="29:19">lpc_type</name> <operator pos:start="29:21" pos:end="29:21">&gt;</operator> <name pos:start="29:23" pos:end="29:39">FF_LPC_TYPE_FIXED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:55">/* reinit LPC context if parameters have changed */</comment>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="37:33">(<expr pos:start="35:9" pos:end="37:32"><name pos:start="35:9" pos:end="35:17">blocksize</name> <operator pos:start="35:19" pos:end="35:20">!=</operator> <name pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:22">s</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:33">blocksize</name></name> <operator pos:start="35:35" pos:end="35:36">||</operator> <name pos:start="35:38" pos:end="35:46">max_order</name> <operator pos:start="35:48" pos:end="35:49">!=</operator> <name pos:start="35:51" pos:end="35:62"><name pos:start="35:51" pos:end="35:51">s</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:62">max_order</name></name> <operator pos:start="35:64" pos:end="35:65">||</operator>

        <name pos:start="37:9" pos:end="37:16">lpc_type</name>  <operator pos:start="37:19" pos:end="37:20">!=</operator> <name pos:start="37:22" pos:end="37:32"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:32">lpc_type</name></name></expr>)</condition> <block pos:start="37:35" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:55">

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:18">ff_lpc_end</name><argument_list pos:start="39:19" pos:end="39:21">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><call pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:19">ff_lpc_init</name><argument_list pos:start="41:20" pos:end="41:54">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">s</name></expr></argument>, <argument pos:start="41:24" pos:end="41:32"><expr pos:start="41:24" pos:end="41:32"><name pos:start="41:24" pos:end="41:32">blocksize</name></expr></argument>, <argument pos:start="41:35" pos:end="41:43"><expr pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:43">max_order</name></expr></argument>, <argument pos:start="41:46" pos:end="41:53"><expr pos:start="41:46" pos:end="41:53"><name pos:start="41:46" pos:end="41:53">lpc_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="143:5"><if pos:start="47:5" pos:end="65:5">if <condition pos:start="47:8" pos:end="47:41">(<expr pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:16">lpc_type</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <name pos:start="47:21" pos:end="47:40">FF_LPC_TYPE_LEVINSON</name></expr>)</condition> <block pos:start="47:43" pos:end="65:5">{<block_content pos:start="49:9" pos:end="63:37">

        <expr_stmt pos:start="49:9" pos:end="49:75"><expr pos:start="49:9" pos:end="49:74"><call pos:start="49:9" pos:end="49:74"><name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:33">lpc_apply_welch_window</name></name><argument_list pos:start="49:34" pos:end="49:74">(<argument pos:start="49:35" pos:end="49:41"><expr pos:start="49:35" pos:end="49:41"><name pos:start="49:35" pos:end="49:41">samples</name></expr></argument>, <argument pos:start="49:44" pos:end="49:52"><expr pos:start="49:44" pos:end="49:52"><name pos:start="49:44" pos:end="49:52">blocksize</name></expr></argument>, <argument pos:start="49:55" pos:end="49:73"><expr pos:start="49:55" pos:end="49:73"><name pos:start="49:55" pos:end="49:73"><name pos:start="49:55" pos:end="49:55">s</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:73">windowed_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:82"><expr pos:start="53:9" pos:end="53:81"><call pos:start="53:9" pos:end="53:81"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:31">lpc_compute_autocorr</name></name><argument_list pos:start="53:32" pos:end="53:81">(<argument pos:start="53:33" pos:end="53:51"><expr pos:start="53:33" pos:end="53:51"><name pos:start="53:33" pos:end="53:51"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:51">windowed_samples</name></name></expr></argument>, <argument pos:start="53:54" pos:end="53:62"><expr pos:start="53:54" pos:end="53:62"><name pos:start="53:54" pos:end="53:62">blocksize</name></expr></argument>, <argument pos:start="53:65" pos:end="53:73"><expr pos:start="53:65" pos:end="53:73"><name pos:start="53:65" pos:end="53:73">max_order</name></expr></argument>, <argument pos:start="53:76" pos:end="53:80"><expr pos:start="53:76" pos:end="53:80"><name pos:start="53:76" pos:end="53:80">autoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:77"><expr pos:start="57:9" pos:end="57:76"><call pos:start="57:9" pos:end="57:76"><name pos:start="57:9" pos:end="57:25">compute_lpc_coefs</name><argument_list pos:start="57:26" pos:end="57:76">(<argument pos:start="57:27" pos:end="57:31"><expr pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:31">autoc</name></expr></argument>, <argument pos:start="57:34" pos:end="57:42"><expr pos:start="57:34" pos:end="57:42"><name pos:start="57:34" pos:end="57:42">max_order</name></expr></argument>, <argument pos:start="57:45" pos:end="57:54"><expr pos:start="57:45" pos:end="57:54"><operator pos:start="57:45" pos:end="57:45">&amp;</operator><name pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:48">lpc</name><index pos:start="57:49" pos:end="57:51">[<expr pos:start="57:50" pos:end="57:50"><literal type="number" pos:start="57:50" pos:end="57:50">0</literal></expr>]</index><index pos:start="57:52" pos:end="57:54">[<expr pos:start="57:53" pos:end="57:53"><literal type="number" pos:start="57:53" pos:end="57:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:57" pos:end="57:69"><expr pos:start="57:57" pos:end="57:69"><name pos:start="57:57" pos:end="57:69">MAX_LPC_ORDER</name></expr></argument>, <argument pos:start="57:72" pos:end="57:72"><expr pos:start="57:72" pos:end="57:72"><literal type="number" pos:start="57:72" pos:end="57:72">0</literal></expr></argument>, <argument pos:start="57:75" pos:end="57:75"><expr pos:start="57:75" pos:end="57:75"><literal type="number" pos:start="57:75" pos:end="57:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="61:9" pos:end="63:37">for<control pos:start="61:12" pos:end="61:34">(<init pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:13">i</name><operator pos:start="61:14" pos:end="61:14">=</operator><literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>;</init> <condition pos:start="61:18" pos:end="61:29"><expr pos:start="61:18" pos:end="61:28"><name pos:start="61:18" pos:end="61:18">i</name><operator pos:start="61:19" pos:end="61:19">&lt;</operator><name pos:start="61:20" pos:end="61:28">max_order</name></expr>;</condition> <incr pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:31">i</name><operator pos:start="61:32" pos:end="61:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:13" pos:end="63:37"><block_content pos:start="63:13" pos:end="63:37">

            <expr_stmt pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:15">ref</name><index pos:start="63:16" pos:end="63:18">[<expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">i</name></expr>]</index></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:25">fabs</name><argument_list pos:start="63:26" pos:end="63:36">(<argument pos:start="63:27" pos:end="63:35"><expr pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:29">lpc</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><name pos:start="63:31" pos:end="63:31">i</name></expr>]</index><index pos:start="63:33" pos:end="63:35">[<expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="143:5">else if <condition pos:start="65:15" pos:end="65:48">(<expr pos:start="65:16" pos:end="65:47"><name pos:start="65:16" pos:end="65:23">lpc_type</name> <operator pos:start="65:25" pos:end="65:26">==</operator> <name pos:start="65:28" pos:end="65:47">FF_LPC_TYPE_CHOLESKY</name></expr>)</condition> <block pos:start="65:50" pos:end="143:5">{<block_content pos:start="67:9" pos:end="141:39">

        <decl_stmt pos:start="67:9" pos:end="67:22"><decl pos:start="67:9" pos:end="67:21"><type pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:16">LLSModel</name></type> <name pos:start="67:18" pos:end="67:21"><name pos:start="67:18" pos:end="67:18">m</name><index pos:start="67:19" pos:end="67:21">[<expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:55"><decl pos:start="69:9" pos:end="69:35"><type pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:14">double</name></type> <name pos:start="69:16" pos:end="69:35"><name pos:start="69:16" pos:end="69:18">var</name><index pos:start="69:19" pos:end="69:35">[<expr pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:32">MAX_LPC_ORDER</name><operator pos:start="69:33" pos:end="69:33">+</operator><literal type="number" pos:start="69:34" pos:end="69:34">1</literal></expr>]</index></name></decl>, <decl pos:start="69:38" pos:end="69:54"><type ref="prev" pos:start="69:9" pos:end="69:14"/><name pos:start="69:38" pos:end="69:46">av_uninit</name><argument_list pos:start="69:47" pos:end="69:54">(<argument pos:start="69:48" pos:end="69:53"><expr pos:start="69:48" pos:end="69:53"><name pos:start="69:48" pos:end="69:53">weight</name></expr></argument>)</argument_list></decl>;</decl_stmt>



        <if_stmt pos:start="73:9" pos:end="75:27"><if pos:start="73:9" pos:end="75:27">if<condition pos:start="73:11" pos:end="73:27">(<expr pos:start="73:12" pos:end="73:26"><name pos:start="73:12" pos:end="73:21">lpc_passes</name> <operator pos:start="73:23" pos:end="73:24">&lt;=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:27"><block_content pos:start="75:13" pos:end="75:27">

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:22">lpc_passes</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="79:9" pos:end="125:9">for<control pos:start="79:12" pos:end="79:44">(<init pos:start="79:13" pos:end="79:19"><expr pos:start="79:13" pos:end="79:18"><name pos:start="79:13" pos:end="79:16">pass</name><operator pos:start="79:17" pos:end="79:17">=</operator><literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:36"><expr pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:24">pass</name><operator pos:start="79:25" pos:end="79:25">&lt;</operator><name pos:start="79:26" pos:end="79:35">lpc_passes</name></expr>;</condition> <incr pos:start="79:38" pos:end="79:43"><expr pos:start="79:38" pos:end="79:43"><name pos:start="79:38" pos:end="79:41">pass</name><operator pos:start="79:42" pos:end="79:43">++</operator></expr></incr>)</control><block pos:start="79:45" pos:end="125:9">{<block_content pos:start="81:13" pos:end="123:47">

            <expr_stmt pos:start="81:13" pos:end="81:47"><expr pos:start="81:13" pos:end="81:46"><call pos:start="81:13" pos:end="81:46"><name pos:start="81:13" pos:end="81:23">av_init_lls</name><argument_list pos:start="81:24" pos:end="81:46">(<argument pos:start="81:25" pos:end="81:34"><expr pos:start="81:25" pos:end="81:34"><operator pos:start="81:25" pos:end="81:25">&amp;</operator><name pos:start="81:26" pos:end="81:34"><name pos:start="81:26" pos:end="81:26">m</name><index pos:start="81:27" pos:end="81:34">[<expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:31">pass</name><operator pos:start="81:32" pos:end="81:32">&amp;</operator><literal type="number" pos:start="81:33" pos:end="81:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="81:37" pos:end="81:45"><expr pos:start="81:37" pos:end="81:45"><name pos:start="81:37" pos:end="81:45">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:18">weight</name><operator pos:start="85:19" pos:end="85:19">=</operator><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</expr_stmt>

            <for pos:start="87:13" pos:end="121:13">for<control pos:start="87:16" pos:end="87:46">(<init pos:start="87:17" pos:end="87:28"><expr pos:start="87:17" pos:end="87:27"><name pos:start="87:17" pos:end="87:17">i</name><operator pos:start="87:18" pos:end="87:18">=</operator><name pos:start="87:19" pos:end="87:27">max_order</name></expr>;</init> <condition pos:start="87:30" pos:end="87:41"><expr pos:start="87:30" pos:end="87:40"><name pos:start="87:30" pos:end="87:30">i</name><operator pos:start="87:31" pos:end="87:31">&lt;</operator><name pos:start="87:32" pos:end="87:40">blocksize</name></expr>;</condition> <incr pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><name pos:start="87:43" pos:end="87:43">i</name><operator pos:start="87:44" pos:end="87:45">++</operator></expr></incr>)</control><block pos:start="87:47" pos:end="121:13">{<block_content pos:start="89:17" pos:end="119:52">

                <for pos:start="89:17" pos:end="91:41">for<control pos:start="89:20" pos:end="89:43">(<init pos:start="89:21" pos:end="89:24"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:21">j</name><operator pos:start="89:22" pos:end="89:22">=</operator><literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr>;</init> <condition pos:start="89:26" pos:end="89:38"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:26">j</name><operator pos:start="89:27" pos:end="89:28">&lt;=</operator><name pos:start="89:29" pos:end="89:37">max_order</name></expr>;</condition> <incr pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">j</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:21" pos:end="91:41"><block_content pos:start="91:21" pos:end="91:41">

                    <expr_stmt pos:start="91:21" pos:end="91:41"><expr pos:start="91:21" pos:end="91:40"><name pos:start="91:21" pos:end="91:26"><name pos:start="91:21" pos:end="91:23">var</name><index pos:start="91:24" pos:end="91:26">[<expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">j</name></expr>]</index></name><operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:40"><name pos:start="91:29" pos:end="91:35">samples</name><index pos:start="91:36" pos:end="91:40">[<expr pos:start="91:37" pos:end="91:39"><name pos:start="91:37" pos:end="91:37">i</name><operator pos:start="91:38" pos:end="91:38">-</operator><name pos:start="91:39" pos:end="91:39">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                <if_stmt pos:start="95:17" pos:end="115:29"><if pos:start="95:17" pos:end="113:17">if<condition pos:start="95:19" pos:end="95:24">(<expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">pass</name></expr>)</condition><block pos:start="95:25" pos:end="113:17">{<block_content pos:start="97:21" pos:end="111:34">

                    <decl_stmt pos:start="97:21" pos:end="97:43"><decl pos:start="97:21" pos:end="97:31"><type pos:start="97:21" pos:end="97:26"><name pos:start="97:21" pos:end="97:26">double</name></type> <name pos:start="97:28" pos:end="97:31">eval</name></decl>, <decl pos:start="97:34" pos:end="97:36"><type ref="prev" pos:start="97:21" pos:end="97:26"/><name pos:start="97:34" pos:end="97:36">inv</name></decl>, <decl pos:start="97:39" pos:end="97:42"><type ref="prev" pos:start="97:21" pos:end="97:26"/><name pos:start="97:39" pos:end="97:42">rinv</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:78"><expr pos:start="99:21" pos:end="99:77"><name pos:start="99:21" pos:end="99:24">eval</name><operator pos:start="99:25" pos:end="99:25">=</operator> <call pos:start="99:27" pos:end="99:77"><name pos:start="99:27" pos:end="99:41">av_evaluate_lls</name><argument_list pos:start="99:42" pos:end="99:77">(<argument pos:start="99:43" pos:end="99:56"><expr pos:start="99:43" pos:end="99:56"><operator pos:start="99:43" pos:end="99:43">&amp;</operator><name pos:start="99:44" pos:end="99:56"><name pos:start="99:44" pos:end="99:44">m</name><index pos:start="99:45" pos:end="99:56">[<expr pos:start="99:46" pos:end="99:55"><operator pos:start="99:46" pos:end="99:46">(</operator><name pos:start="99:47" pos:end="99:50">pass</name><operator pos:start="99:51" pos:end="99:51">-</operator><literal type="number" pos:start="99:52" pos:end="99:52">1</literal><operator pos:start="99:53" pos:end="99:53">)</operator><operator pos:start="99:54" pos:end="99:54">&amp;</operator><literal type="number" pos:start="99:55" pos:end="99:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:59" pos:end="99:63"><expr pos:start="99:59" pos:end="99:63"><name pos:start="99:59" pos:end="99:61">var</name><operator pos:start="99:62" pos:end="99:62">+</operator><literal type="number" pos:start="99:63" pos:end="99:63">1</literal></expr></argument>, <argument pos:start="99:66" pos:end="99:76"><expr pos:start="99:66" pos:end="99:76"><name pos:start="99:66" pos:end="99:74">max_order</name><operator pos:start="99:75" pos:end="99:75">-</operator><literal type="number" pos:start="99:76" pos:end="99:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:60"><expr pos:start="101:21" pos:end="101:59"><name pos:start="101:21" pos:end="101:24">eval</name><operator pos:start="101:25" pos:end="101:25">=</operator> <operator pos:start="101:27" pos:end="101:27">(</operator><literal type="number" pos:start="101:28" pos:end="101:30">512</literal><operator pos:start="101:31" pos:end="101:32">&gt;&gt;</operator><name pos:start="101:33" pos:end="101:36">pass</name><operator pos:start="101:37" pos:end="101:37">)</operator> <operator pos:start="101:39" pos:end="101:39">+</operator> <call pos:start="101:41" pos:end="101:59"><name pos:start="101:41" pos:end="101:44">fabs</name><argument_list pos:start="101:45" pos:end="101:59">(<argument pos:start="101:46" pos:end="101:58"><expr pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:49">eval</name> <operator pos:start="101:51" pos:end="101:51">-</operator> <name pos:start="101:53" pos:end="101:58"><name pos:start="101:53" pos:end="101:55">var</name><index pos:start="101:56" pos:end="101:58">[<expr pos:start="101:57" pos:end="101:57"><literal type="number" pos:start="101:57" pos:end="101:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:33"><expr pos:start="103:21" pos:end="103:32"><name pos:start="103:21" pos:end="103:23">inv</name> <operator pos:start="103:25" pos:end="103:25">=</operator> <literal type="number" pos:start="103:27" pos:end="103:27">1</literal><operator pos:start="103:28" pos:end="103:28">/</operator><name pos:start="103:29" pos:end="103:32">eval</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:37"><expr pos:start="105:21" pos:end="105:36"><name pos:start="105:21" pos:end="105:24">rinv</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:36"><name pos:start="105:28" pos:end="105:31">sqrt</name><argument_list pos:start="105:32" pos:end="105:36">(<argument pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:35">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="107:21" pos:end="109:39">for<control pos:start="107:24" pos:end="107:47">(<init pos:start="107:25" pos:end="107:28"><expr pos:start="107:25" pos:end="107:27"><name pos:start="107:25" pos:end="107:25">j</name><operator pos:start="107:26" pos:end="107:26">=</operator><literal type="number" pos:start="107:27" pos:end="107:27">0</literal></expr>;</init> <condition pos:start="107:30" pos:end="107:42"><expr pos:start="107:30" pos:end="107:41"><name pos:start="107:30" pos:end="107:30">j</name><operator pos:start="107:31" pos:end="107:32">&lt;=</operator><name pos:start="107:33" pos:end="107:41">max_order</name></expr>;</condition> <incr pos:start="107:44" pos:end="107:46"><expr pos:start="107:44" pos:end="107:46"><name pos:start="107:44" pos:end="107:44">j</name><operator pos:start="107:45" pos:end="107:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:25" pos:end="109:39"><block_content pos:start="109:25" pos:end="109:39">

                        <expr_stmt pos:start="109:25" pos:end="109:39"><expr pos:start="109:25" pos:end="109:38"><name pos:start="109:25" pos:end="109:30"><name pos:start="109:25" pos:end="109:27">var</name><index pos:start="109:28" pos:end="109:30">[<expr pos:start="109:29" pos:end="109:29"><name pos:start="109:29" pos:end="109:29">j</name></expr>]</index></name> <operator pos:start="109:32" pos:end="109:33">*=</operator> <name pos:start="109:35" pos:end="109:38">rinv</name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="111:21" pos:end="111:34"><expr pos:start="111:21" pos:end="111:33"><name pos:start="111:21" pos:end="111:26">weight</name> <operator pos:start="111:28" pos:end="111:29">+=</operator> <name pos:start="111:31" pos:end="111:33">inv</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="113:18" pos:end="115:29">else<block type="pseudo" pos:start="115:21" pos:end="115:29"><block_content pos:start="115:21" pos:end="115:29">

                    <expr_stmt pos:start="115:21" pos:end="115:29"><expr pos:start="115:21" pos:end="115:28"><name pos:start="115:21" pos:end="115:26">weight</name><operator pos:start="115:27" pos:end="115:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="119:17" pos:end="119:52"><expr pos:start="119:17" pos:end="119:51"><call pos:start="119:17" pos:end="119:51"><name pos:start="119:17" pos:end="119:29">av_update_lls</name><argument_list pos:start="119:30" pos:end="119:51">(<argument pos:start="119:31" pos:end="119:40"><expr pos:start="119:31" pos:end="119:40"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:40"><name pos:start="119:32" pos:end="119:32">m</name><index pos:start="119:33" pos:end="119:40">[<expr pos:start="119:34" pos:end="119:39"><name pos:start="119:34" pos:end="119:37">pass</name><operator pos:start="119:38" pos:end="119:38">&amp;</operator><literal type="number" pos:start="119:39" pos:end="119:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">var</name></expr></argument>, <argument pos:start="119:48" pos:end="119:50"><expr pos:start="119:48" pos:end="119:50"><literal type="number" pos:start="119:48" pos:end="119:50">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="123:13" pos:end="123:47"><expr pos:start="123:13" pos:end="123:46"><call pos:start="123:13" pos:end="123:46"><name pos:start="123:13" pos:end="123:24">av_solve_lls</name><argument_list pos:start="123:25" pos:end="123:46">(<argument pos:start="123:26" pos:end="123:35"><expr pos:start="123:26" pos:end="123:35"><operator pos:start="123:26" pos:end="123:26">&amp;</operator><name pos:start="123:27" pos:end="123:35"><name pos:start="123:27" pos:end="123:27">m</name><index pos:start="123:28" pos:end="123:35">[<expr pos:start="123:29" pos:end="123:34"><name pos:start="123:29" pos:end="123:32">pass</name><operator pos:start="123:33" pos:end="123:33">&amp;</operator><literal type="number" pos:start="123:34" pos:end="123:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:38" pos:end="123:42"><expr pos:start="123:38" pos:end="123:42"><literal type="number" pos:start="123:38" pos:end="123:42">0.001</literal></expr></argument>, <argument pos:start="123:45" pos:end="123:45"><expr pos:start="123:45" pos:end="123:45"><literal type="number" pos:start="123:45" pos:end="123:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="129:9" pos:end="137:9">for<control pos:start="129:12" pos:end="129:34">(<init pos:start="129:13" pos:end="129:16"><expr pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:13">i</name><operator pos:start="129:14" pos:end="129:14">=</operator><literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>;</init> <condition pos:start="129:18" pos:end="129:29"><expr pos:start="129:18" pos:end="129:28"><name pos:start="129:18" pos:end="129:18">i</name><operator pos:start="129:19" pos:end="129:19">&lt;</operator><name pos:start="129:20" pos:end="129:28">max_order</name></expr>;</condition> <incr pos:start="129:31" pos:end="129:33"><expr pos:start="129:31" pos:end="129:33"><name pos:start="129:31" pos:end="129:31">i</name><operator pos:start="129:32" pos:end="129:33">++</operator></expr></incr>)</control><block pos:start="129:35" pos:end="137:9">{<block_content pos:start="131:13" pos:end="135:94">

            <for pos:start="131:13" pos:end="133:53">for<control pos:start="131:16" pos:end="131:38">(<init pos:start="131:17" pos:end="131:20"><expr pos:start="131:17" pos:end="131:19"><name pos:start="131:17" pos:end="131:17">j</name><operator pos:start="131:18" pos:end="131:18">=</operator><literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</init> <condition pos:start="131:22" pos:end="131:33"><expr pos:start="131:22" pos:end="131:32"><name pos:start="131:22" pos:end="131:22">j</name><operator pos:start="131:23" pos:end="131:23">&lt;</operator><name pos:start="131:24" pos:end="131:32">max_order</name></expr>;</condition> <incr pos:start="131:35" pos:end="131:37"><expr pos:start="131:35" pos:end="131:37"><name pos:start="131:35" pos:end="131:35">j</name><operator pos:start="131:36" pos:end="131:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:17" pos:end="133:53"><block_content pos:start="133:17" pos:end="133:53">

                <expr_stmt pos:start="133:17" pos:end="133:53"><expr pos:start="133:17" pos:end="133:52"><name pos:start="133:17" pos:end="133:25"><name pos:start="133:17" pos:end="133:19">lpc</name><index pos:start="133:20" pos:end="133:22">[<expr pos:start="133:21" pos:end="133:21"><name pos:start="133:21" pos:end="133:21">i</name></expr>]</index><index pos:start="133:23" pos:end="133:25">[<expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">j</name></expr>]</index></name><operator pos:start="133:26" pos:end="133:26">=</operator><operator pos:start="133:27" pos:end="133:27">-</operator><name pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:28">m</name><index pos:start="133:29" pos:end="133:40">[<expr pos:start="133:30" pos:end="133:39"><operator pos:start="133:30" pos:end="133:30">(</operator><name pos:start="133:31" pos:end="133:34">pass</name><operator pos:start="133:35" pos:end="133:35">-</operator><literal type="number" pos:start="133:36" pos:end="133:36">1</literal><operator pos:start="133:37" pos:end="133:37">)</operator><operator pos:start="133:38" pos:end="133:38">&amp;</operator><literal type="number" pos:start="133:39" pos:end="133:39">1</literal></expr>]</index></name><operator pos:start="133:41" pos:end="133:41">.</operator><name pos:start="133:42" pos:end="133:52"><name pos:start="133:42" pos:end="133:46">coeff</name><index pos:start="133:47" pos:end="133:49">[<expr pos:start="133:48" pos:end="133:48"><name pos:start="133:48" pos:end="133:48">i</name></expr>]</index><index pos:start="133:50" pos:end="133:52">[<expr pos:start="133:51" pos:end="133:51"><name pos:start="133:51" pos:end="133:51">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="135:13" pos:end="135:94"><expr pos:start="135:13" pos:end="135:93"><name pos:start="135:13" pos:end="135:18"><name pos:start="135:13" pos:end="135:15">ref</name><index pos:start="135:16" pos:end="135:18">[<expr pos:start="135:17" pos:end="135:17"><name pos:start="135:17" pos:end="135:17">i</name></expr>]</index></name><operator pos:start="135:19" pos:end="135:19">=</operator> <call pos:start="135:21" pos:end="135:60"><name pos:start="135:21" pos:end="135:24">sqrt</name><argument_list pos:start="135:25" pos:end="135:60">(<argument pos:start="135:26" pos:end="135:59"><expr pos:start="135:26" pos:end="135:59"><name pos:start="135:26" pos:end="135:38"><name pos:start="135:26" pos:end="135:26">m</name><index pos:start="135:27" pos:end="135:38">[<expr pos:start="135:28" pos:end="135:37"><operator pos:start="135:28" pos:end="135:28">(</operator><name pos:start="135:29" pos:end="135:32">pass</name><operator pos:start="135:33" pos:end="135:33">-</operator><literal type="number" pos:start="135:34" pos:end="135:34">1</literal><operator pos:start="135:35" pos:end="135:35">)</operator><operator pos:start="135:36" pos:end="135:36">&amp;</operator><literal type="number" pos:start="135:37" pos:end="135:37">1</literal></expr>]</index></name><operator pos:start="135:39" pos:end="135:39">.</operator><name pos:start="135:40" pos:end="135:50"><name pos:start="135:40" pos:end="135:47">variance</name><index pos:start="135:48" pos:end="135:50">[<expr pos:start="135:49" pos:end="135:49"><name pos:start="135:49" pos:end="135:49">i</name></expr>]</index></name> <operator pos:start="135:52" pos:end="135:52">/</operator> <name pos:start="135:54" pos:end="135:59">weight</name></expr></argument>)</argument_list></call> <operator pos:start="135:62" pos:end="135:62">*</operator> <operator pos:start="135:64" pos:end="135:64">(</operator><name pos:start="135:65" pos:end="135:73">blocksize</name> <operator pos:start="135:75" pos:end="135:75">-</operator> <name pos:start="135:77" pos:end="135:85">max_order</name><operator pos:start="135:86" pos:end="135:86">)</operator> <operator pos:start="135:88" pos:end="135:88">/</operator> <literal type="number" pos:start="135:90" pos:end="135:93">4000</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="139:9" pos:end="141:39">for<control pos:start="139:12" pos:end="139:36">(<init pos:start="139:13" pos:end="139:26"><expr pos:start="139:13" pos:end="139:25"><name pos:start="139:13" pos:end="139:13">i</name><operator pos:start="139:14" pos:end="139:14">=</operator><name pos:start="139:15" pos:end="139:23">max_order</name><operator pos:start="139:24" pos:end="139:24">-</operator><literal type="number" pos:start="139:25" pos:end="139:25">1</literal></expr>;</init> <condition pos:start="139:28" pos:end="139:31"><expr pos:start="139:28" pos:end="139:30"><name pos:start="139:28" pos:end="139:28">i</name><operator pos:start="139:29" pos:end="139:29">&gt;</operator><literal type="number" pos:start="139:30" pos:end="139:30">0</literal></expr>;</condition> <incr pos:start="139:33" pos:end="139:35"><expr pos:start="139:33" pos:end="139:35"><name pos:start="139:33" pos:end="139:33">i</name><operator pos:start="139:34" pos:end="139:35">--</operator></expr></incr>)</control><block type="pseudo" pos:start="141:13" pos:end="141:39"><block_content pos:start="141:13" pos:end="141:39">

            <expr_stmt pos:start="141:13" pos:end="141:39"><expr pos:start="141:13" pos:end="141:38"><name pos:start="141:13" pos:end="141:18"><name pos:start="141:13" pos:end="141:15">ref</name><index pos:start="141:16" pos:end="141:18">[<expr pos:start="141:17" pos:end="141:17"><name pos:start="141:17" pos:end="141:17">i</name></expr>]</index></name> <operator pos:start="141:20" pos:end="141:20">=</operator> <name pos:start="141:22" pos:end="141:29"><name pos:start="141:22" pos:end="141:24">ref</name><index pos:start="141:25" pos:end="141:29">[<expr pos:start="141:26" pos:end="141:28"><name pos:start="141:26" pos:end="141:26">i</name><operator pos:start="141:27" pos:end="141:27">-</operator><literal type="number" pos:start="141:28" pos:end="141:28">1</literal></expr>]</index></name> <operator pos:start="141:31" pos:end="141:31">-</operator> <name pos:start="141:33" pos:end="141:38"><name pos:start="141:33" pos:end="141:35">ref</name><index pos:start="141:36" pos:end="141:38">[<expr pos:start="141:37" pos:end="141:37"><name pos:start="141:37" pos:end="141:37">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:26"><expr pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:13">opt_order</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <name pos:start="145:17" pos:end="145:25">max_order</name></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="165:5"><if pos:start="149:5" pos:end="157:5">if<condition pos:start="149:7" pos:end="149:35">(<expr pos:start="149:8" pos:end="149:34"><name pos:start="149:8" pos:end="149:14">omethod</name> <operator pos:start="149:16" pos:end="149:17">==</operator> <name pos:start="149:19" pos:end="149:34">ORDER_METHOD_EST</name></expr>)</condition> <block pos:start="149:37" pos:end="157:5">{<block_content pos:start="151:9" pos:end="155:95">

        <expr_stmt pos:start="151:9" pos:end="151:67"><expr pos:start="151:9" pos:end="151:66"><name pos:start="151:9" pos:end="151:17">opt_order</name> <operator pos:start="151:19" pos:end="151:19">=</operator> <call pos:start="151:21" pos:end="151:66"><name pos:start="151:21" pos:end="151:39">estimate_best_order</name><argument_list pos:start="151:40" pos:end="151:66">(<argument pos:start="151:41" pos:end="151:43"><expr pos:start="151:41" pos:end="151:43"><name pos:start="151:41" pos:end="151:43">ref</name></expr></argument>, <argument pos:start="151:46" pos:end="151:54"><expr pos:start="151:46" pos:end="151:54"><name pos:start="151:46" pos:end="151:54">min_order</name></expr></argument>, <argument pos:start="151:57" pos:end="151:65"><expr pos:start="151:57" pos:end="151:65"><name pos:start="151:57" pos:end="151:65">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:24"><expr pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:9">i</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <name pos:start="153:13" pos:end="153:21">opt_order</name><operator pos:start="153:22" pos:end="153:22">-</operator><literal type="number" pos:start="153:23" pos:end="153:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:95"><expr pos:start="155:9" pos:end="155:94"><call pos:start="155:9" pos:end="155:94"><name pos:start="155:9" pos:end="155:26">quantize_lpc_coefs</name><argument_list pos:start="155:27" pos:end="155:94">(<argument pos:start="155:28" pos:end="155:33"><expr pos:start="155:28" pos:end="155:33"><name pos:start="155:28" pos:end="155:33"><name pos:start="155:28" pos:end="155:30">lpc</name><index pos:start="155:31" pos:end="155:33">[<expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><name pos:start="155:36" pos:end="155:36">i</name><operator pos:start="155:37" pos:end="155:37">+</operator><literal type="number" pos:start="155:38" pos:end="155:38">1</literal></expr></argument>, <argument pos:start="155:41" pos:end="155:49"><expr pos:start="155:41" pos:end="155:49"><name pos:start="155:41" pos:end="155:49">precision</name></expr></argument>, <argument pos:start="155:52" pos:end="155:59"><expr pos:start="155:52" pos:end="155:59"><name pos:start="155:52" pos:end="155:59"><name pos:start="155:52" pos:end="155:56">coefs</name><index pos:start="155:57" pos:end="155:59">[<expr pos:start="155:58" pos:end="155:58"><name pos:start="155:58" pos:end="155:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="155:62" pos:end="155:70"><expr pos:start="155:62" pos:end="155:70"><operator pos:start="155:62" pos:end="155:62">&amp;</operator><name pos:start="155:63" pos:end="155:70"><name pos:start="155:63" pos:end="155:67">shift</name><index pos:start="155:68" pos:end="155:70">[<expr pos:start="155:69" pos:end="155:69"><name pos:start="155:69" pos:end="155:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="155:73" pos:end="155:81"><expr pos:start="155:73" pos:end="155:81"><name pos:start="155:73" pos:end="155:81">max_shift</name></expr></argument>, <argument pos:start="155:84" pos:end="155:93"><expr pos:start="155:84" pos:end="155:93"><name pos:start="155:84" pos:end="155:93">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="157:7" pos:end="165:5">else <block pos:start="157:12" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:9">

        <for pos:start="159:9" pos:end="163:9">for<control pos:start="159:12" pos:end="159:44">(<init pos:start="159:13" pos:end="159:26"><expr pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:13">i</name><operator pos:start="159:14" pos:end="159:14">=</operator><name pos:start="159:15" pos:end="159:23">min_order</name><operator pos:start="159:24" pos:end="159:24">-</operator><literal type="number" pos:start="159:25" pos:end="159:25">1</literal></expr>;</init> <condition pos:start="159:28" pos:end="159:39"><expr pos:start="159:28" pos:end="159:38"><name pos:start="159:28" pos:end="159:28">i</name><operator pos:start="159:29" pos:end="159:29">&lt;</operator><name pos:start="159:30" pos:end="159:38">max_order</name></expr>;</condition> <incr pos:start="159:41" pos:end="159:43"><expr pos:start="159:41" pos:end="159:43"><name pos:start="159:41" pos:end="159:41">i</name><operator pos:start="159:42" pos:end="159:43">++</operator></expr></incr>)</control> <block pos:start="159:46" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:99">

            <expr_stmt pos:start="161:13" pos:end="161:99"><expr pos:start="161:13" pos:end="161:98"><call pos:start="161:13" pos:end="161:98"><name pos:start="161:13" pos:end="161:30">quantize_lpc_coefs</name><argument_list pos:start="161:31" pos:end="161:98">(<argument pos:start="161:32" pos:end="161:37"><expr pos:start="161:32" pos:end="161:37"><name pos:start="161:32" pos:end="161:37"><name pos:start="161:32" pos:end="161:34">lpc</name><index pos:start="161:35" pos:end="161:37">[<expr pos:start="161:36" pos:end="161:36"><name pos:start="161:36" pos:end="161:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="161:40" pos:end="161:42"><expr pos:start="161:40" pos:end="161:42"><name pos:start="161:40" pos:end="161:40">i</name><operator pos:start="161:41" pos:end="161:41">+</operator><literal type="number" pos:start="161:42" pos:end="161:42">1</literal></expr></argument>, <argument pos:start="161:45" pos:end="161:53"><expr pos:start="161:45" pos:end="161:53"><name pos:start="161:45" pos:end="161:53">precision</name></expr></argument>, <argument pos:start="161:56" pos:end="161:63"><expr pos:start="161:56" pos:end="161:63"><name pos:start="161:56" pos:end="161:63"><name pos:start="161:56" pos:end="161:60">coefs</name><index pos:start="161:61" pos:end="161:63">[<expr pos:start="161:62" pos:end="161:62"><name pos:start="161:62" pos:end="161:62">i</name></expr>]</index></name></expr></argument>, <argument pos:start="161:66" pos:end="161:74"><expr pos:start="161:66" pos:end="161:74"><operator pos:start="161:66" pos:end="161:66">&amp;</operator><name pos:start="161:67" pos:end="161:74"><name pos:start="161:67" pos:end="161:71">shift</name><index pos:start="161:72" pos:end="161:74">[<expr pos:start="161:73" pos:end="161:73"><name pos:start="161:73" pos:end="161:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="161:77" pos:end="161:85"><expr pos:start="161:77" pos:end="161:85"><name pos:start="161:77" pos:end="161:85">max_shift</name></expr></argument>, <argument pos:start="161:88" pos:end="161:97"><expr pos:start="161:88" pos:end="161:97"><name pos:start="161:88" pos:end="161:97">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="169:5" pos:end="169:21">return <expr pos:start="169:12" pos:end="169:20"><name pos:start="169:12" pos:end="169:20">opt_order</name></expr>;</return>

</block_content>}</block></function>
</unit>
