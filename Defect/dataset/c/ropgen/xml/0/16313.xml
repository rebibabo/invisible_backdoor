<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16313.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_save</name><parameter_list pos:start="1:14" pos:end="1:40">(<parameter pos:start="1:15" pos:end="1:25"><decl pos:start="1:15" pos:end="1:25"><type pos:start="1:15" pos:end="1:25"><name pos:start="1:15" pos:end="1:22">QEMUFile</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:25">f</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:32">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:18">fptag</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:21" pos:end="7:24">fpus</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:27" pos:end="7:30">fpuc</name></decl>, <decl pos:start="7:33" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:33" pos:end="7:45">fpregs_format</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:19">hflags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:20">a20_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="19:41">for<control pos:start="17:8" pos:end="17:36">(<init pos:start="17:9" pos:end="17:14"><expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">i</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</init> <condition pos:start="17:16" pos:end="17:31"><expr pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:16">i</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:30">CPU_NB_REGS</name></expr>;</condition> <incr pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:33">i</name><operator pos:start="17:34" pos:end="17:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="19:41"><block_content pos:start="19:9" pos:end="19:41">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:22">qemu_put_betls</name><argument_list pos:start="19:23" pos:end="19:40">(<argument pos:start="19:24" pos:end="19:24"><expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">f</name></expr></argument>, <argument pos:start="19:27" pos:end="19:39"><expr pos:start="19:27" pos:end="19:39"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:39"><name pos:start="19:28" pos:end="19:30">env</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:36">regs</name><index pos:start="19:37" pos:end="19:39">[<expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:18">qemu_put_betls</name><argument_list pos:start="21:19" pos:end="21:32">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">f</name></expr></argument>, <argument pos:start="21:23" pos:end="21:31"><expr pos:start="21:23" pos:end="21:31"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:26">env</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:31">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:18">qemu_put_betls</name><argument_list pos:start="23:19" pos:end="23:35">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">f</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:26">env</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:34">eflags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:10">hflags</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:24"><name pos:start="25:14" pos:end="25:16">env</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:24">hflags</name></name></expr>;</expr_stmt> <comment type="block" pos:start="25:27" pos:end="25:74">/* XXX: suppress most of the redundant hflags */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><call pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:18">qemu_put_be32s</name><argument_list pos:start="27:19" pos:end="27:30">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">f</name></expr></argument>, <argument pos:start="27:23" pos:end="27:29"><expr pos:start="27:23" pos:end="27:29"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:29">hflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:13">/* FPU */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:8">fpuc</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:20"><name pos:start="33:12" pos:end="33:14">env</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:20">fpuc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:8">fpus</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:15">env</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:21">fpus</name></name> <operator pos:start="35:23" pos:end="35:23">&amp;</operator> <operator pos:start="35:25" pos:end="35:25">~</operator><literal type="number" pos:start="35:26" pos:end="35:31">0x3800</literal><operator pos:start="35:32" pos:end="35:32">)</operator> <operator pos:start="35:34" pos:end="35:34">|</operator> <operator pos:start="35:36" pos:end="35:36">(</operator><name pos:start="35:37" pos:end="35:46"><name pos:start="35:37" pos:end="35:39">env</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:46">fpstt</name></name> <operator pos:start="35:48" pos:end="35:48">&amp;</operator> <literal type="number" pos:start="35:50" pos:end="35:52">0x7</literal><operator pos:start="35:53" pos:end="35:53">)</operator> <operator pos:start="35:55" pos:end="35:56">&lt;&lt;</operator> <literal type="number" pos:start="35:58" pos:end="35:59">11</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:14"><expr pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:9">fptag</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="43:5">for<control pos:start="39:8" pos:end="39:26">(<init pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">i</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>;</init> <condition pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">i</name> <operator pos:start="39:18" pos:end="39:18">&lt;</operator> <literal type="number" pos:start="39:20" pos:end="39:20">8</literal></expr>;</condition> <incr pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:23">i</name><operator pos:start="39:24" pos:end="39:25">++</operator></expr></incr>)</control> <block pos:start="39:28" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:42">

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:13">fptag</name> <operator pos:start="41:15" pos:end="41:16">|=</operator> <operator pos:start="41:18" pos:end="41:18">(</operator><operator pos:start="41:19" pos:end="41:19">(</operator><operator pos:start="41:20" pos:end="41:20">!</operator><name pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:23">env</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:31">fptags</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name><operator pos:start="41:35" pos:end="41:35">)</operator> <operator pos:start="41:37" pos:end="41:38">&lt;&lt;</operator> <name pos:start="41:40" pos:end="41:40">i</name><operator pos:start="41:41" pos:end="41:41">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><call pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:18">qemu_put_be16s</name><argument_list pos:start="47:19" pos:end="47:28">(<argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">f</name></expr></argument>, <argument pos:start="47:23" pos:end="47:27"><expr pos:start="47:23" pos:end="47:27"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:27">fpuc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><call pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:18">qemu_put_be16s</name><argument_list pos:start="49:19" pos:end="49:28">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">f</name></expr></argument>, <argument pos:start="49:23" pos:end="49:27"><expr pos:start="49:23" pos:end="49:27"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:27">fpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="56:0"><expr pos:start="51:5" pos:end="51:29"><call pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:18">qemu_put_be16s</name><argument_list pos:start="51:19" pos:end="51:29">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">f</name></expr></argument>, <argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:28">fptag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="55:1" pos:end="55:21">#<cpp:directive pos:start="55:2" pos:end="55:6">ifdef</cpp:directive> <name pos:start="55:8" pos:end="55:21">USE_X86LDOUBLE</name></cpp:ifdef>

    <expr_stmt pos:start="57:5" pos:end="60:0"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:17">fpregs_format</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <literal type="number" pos:start="57:21" pos:end="57:21">0</literal></expr>;</expr_stmt>

<cpp:else pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:17">fpregs_format</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="65:5" pos:end="65:38"><expr pos:start="65:5" pos:end="65:37"><call pos:start="65:5" pos:end="65:37"><name pos:start="65:5" pos:end="65:18">qemu_put_be16s</name><argument_list pos:start="65:19" pos:end="65:37">(<argument pos:start="65:20" pos:end="65:20"><expr pos:start="65:20" pos:end="65:20"><name pos:start="65:20" pos:end="65:20">f</name></expr></argument>, <argument pos:start="65:23" pos:end="65:36"><expr pos:start="65:23" pos:end="65:36"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:36">fpregs_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="69:5" pos:end="105:5">for<control pos:start="69:8" pos:end="69:26">(<init pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">i</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>;</init> <condition pos:start="69:16" pos:end="69:21"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:16">i</name> <operator pos:start="69:18" pos:end="69:18">&lt;</operator> <literal type="number" pos:start="69:20" pos:end="69:20">8</literal></expr>;</condition> <incr pos:start="69:23" pos:end="69:25"><expr pos:start="69:23" pos:end="69:25"><name pos:start="69:23" pos:end="69:23">i</name><operator pos:start="69:24" pos:end="69:25">++</operator></expr></incr>)</control> <block pos:start="69:28" pos:end="105:5">{<block_content pos:start="73:9" pos:end="104:0">

<cpp:ifdef pos:start="71:1" pos:end="71:21">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:21">USE_X86LDOUBLE</name></cpp:ifdef>

        <block pos:start="73:9" pos:end="92:0">{<block_content pos:start="75:13" pos:end="87:34">

            <decl_stmt pos:start="75:13" pos:end="75:26"><decl pos:start="75:13" pos:end="75:25"><type pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:20">uint64_t</name></type> <name pos:start="75:22" pos:end="75:25">mant</name></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:25"><decl pos:start="77:13" pos:end="77:24"><type pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:20">uint16_t</name></type> <name pos:start="77:22" pos:end="77:24">exp</name></decl>;</decl_stmt>

            <comment type="block" pos:start="79:13" pos:end="81:43">/* we save the real CPU data (in case of MMX usage only 'mant'

               contains the MMX register */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:56"><expr pos:start="83:13" pos:end="83:55"><call pos:start="83:13" pos:end="83:55"><name pos:start="83:13" pos:end="83:24">cpu_get_fp80</name><argument_list pos:start="83:25" pos:end="83:55">(<argument pos:start="83:26" pos:end="83:30"><expr pos:start="83:26" pos:end="83:30"><operator pos:start="83:26" pos:end="83:26">&amp;</operator><name pos:start="83:27" pos:end="83:30">mant</name></expr></argument>, <argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:36">exp</name></expr></argument>, <argument pos:start="83:39" pos:end="83:54"><expr pos:start="83:39" pos:end="83:54"><name pos:start="83:39" pos:end="83:52"><name pos:start="83:39" pos:end="83:41">env</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:49">fpregs</name><index pos:start="83:50" pos:end="83:52">[<expr pos:start="83:51" pos:end="83:51"><name pos:start="83:51" pos:end="83:51">i</name></expr>]</index></name><operator pos:start="83:53" pos:end="83:53">.</operator><name pos:start="83:54" pos:end="83:54">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:34"><call pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:25">qemu_put_be64</name><argument_list pos:start="85:26" pos:end="85:34">(<argument pos:start="85:27" pos:end="85:27"><expr pos:start="85:27" pos:end="85:27"><name pos:start="85:27" pos:end="85:27">f</name></expr></argument>, <argument pos:start="85:30" pos:end="85:33"><expr pos:start="85:30" pos:end="85:33"><name pos:start="85:30" pos:end="85:33">mant</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><call pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:25">qemu_put_be16</name><argument_list pos:start="87:26" pos:end="87:33">(<argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">f</name></expr></argument>, <argument pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:32">exp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:else pos:start="91:1" pos:end="91:5">#<cpp:directive pos:start="91:2" pos:end="91:5">else</cpp:directive></cpp:else>

        <comment type="block" pos:start="93:9" pos:end="99:39">/* if we use doubles for float emulation, we save the doubles to

           avoid losing information in case of MMX usage. It can give

           problems if the image is restored on a CPU where long

           doubles are used instead. */</comment>

        <expr_stmt pos:start="101:9" pos:end="104:0"><expr pos:start="101:9" pos:end="101:53"><call pos:start="101:9" pos:end="101:53"><name pos:start="101:9" pos:end="101:21">qemu_put_be64</name><argument_list pos:start="101:22" pos:end="101:53">(<argument pos:start="101:23" pos:end="101:23"><expr pos:start="101:23" pos:end="101:23"><name pos:start="101:23" pos:end="101:23">f</name></expr></argument>, <argument pos:start="101:26" pos:end="101:52"><expr pos:start="101:26" pos:end="101:52"><name pos:start="101:26" pos:end="101:39"><name pos:start="101:26" pos:end="101:28">env</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:36">fpregs</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">i</name></expr>]</index></name><operator pos:start="101:40" pos:end="101:40">.</operator><call pos:start="101:41" pos:end="101:52"><name pos:start="101:41" pos:end="101:49"><name pos:start="101:41" pos:end="101:43">mmx</name><operator pos:start="101:44" pos:end="101:44">.</operator><name pos:start="101:45" pos:end="101:49">MMX_Q</name></name><argument_list pos:start="101:50" pos:end="101:52">(<argument pos:start="101:51" pos:end="101:51"><expr pos:start="101:51" pos:end="101:51"><literal type="number" pos:start="101:51" pos:end="101:51">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <for pos:start="109:5" pos:end="111:38">for<control pos:start="109:8" pos:end="109:26">(<init pos:start="109:9" pos:end="109:14"><expr pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:9">i</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <literal type="number" pos:start="109:13" pos:end="109:13">0</literal></expr>;</init> <condition pos:start="109:16" pos:end="109:21"><expr pos:start="109:16" pos:end="109:20"><name pos:start="109:16" pos:end="109:16">i</name> <operator pos:start="109:18" pos:end="109:18">&lt;</operator> <literal type="number" pos:start="109:20" pos:end="109:20">6</literal></expr>;</condition> <incr pos:start="109:23" pos:end="109:25"><expr pos:start="109:23" pos:end="109:25"><name pos:start="109:23" pos:end="109:23">i</name><operator pos:start="109:24" pos:end="109:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:9" pos:end="111:38"><block_content pos:start="111:9" pos:end="111:38">

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><call pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:19">cpu_put_seg</name><argument_list pos:start="111:20" pos:end="111:37">(<argument pos:start="111:21" pos:end="111:21"><expr pos:start="111:21" pos:end="111:21"><name pos:start="111:21" pos:end="111:21">f</name></expr></argument>, <argument pos:start="111:24" pos:end="111:36"><expr pos:start="111:24" pos:end="111:36"><operator pos:start="111:24" pos:end="111:24">&amp;</operator><name pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:27">env</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:33">segs</name><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="113:5" pos:end="113:30"><expr pos:start="113:5" pos:end="113:29"><call pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:15">cpu_put_seg</name><argument_list pos:start="113:16" pos:end="113:29">(<argument pos:start="113:17" pos:end="113:17"><expr pos:start="113:17" pos:end="113:17"><name pos:start="113:17" pos:end="113:17">f</name></expr></argument>, <argument pos:start="113:20" pos:end="113:28"><expr pos:start="113:20" pos:end="113:28"><operator pos:start="113:20" pos:end="113:20">&amp;</operator><name pos:start="113:21" pos:end="113:28"><name pos:start="113:21" pos:end="113:23">env</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:28">ldt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:29"><expr pos:start="115:5" pos:end="115:28"><call pos:start="115:5" pos:end="115:28"><name pos:start="115:5" pos:end="115:15">cpu_put_seg</name><argument_list pos:start="115:16" pos:end="115:28">(<argument pos:start="115:17" pos:end="115:17"><expr pos:start="115:17" pos:end="115:17"><name pos:start="115:17" pos:end="115:17">f</name></expr></argument>, <argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><operator pos:start="115:20" pos:end="115:20">&amp;</operator><name pos:start="115:21" pos:end="115:27"><name pos:start="115:21" pos:end="115:23">env</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">tr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:30"><expr pos:start="117:5" pos:end="117:29"><call pos:start="117:5" pos:end="117:29"><name pos:start="117:5" pos:end="117:15">cpu_put_seg</name><argument_list pos:start="117:16" pos:end="117:29">(<argument pos:start="117:17" pos:end="117:17"><expr pos:start="117:17" pos:end="117:17"><name pos:start="117:17" pos:end="117:17">f</name></expr></argument>, <argument pos:start="117:20" pos:end="117:28"><expr pos:start="117:20" pos:end="117:28"><operator pos:start="117:20" pos:end="117:20">&amp;</operator><name pos:start="117:21" pos:end="117:28"><name pos:start="117:21" pos:end="117:23">env</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:28">gdt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><call pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:15">cpu_put_seg</name><argument_list pos:start="119:16" pos:end="119:29">(<argument pos:start="119:17" pos:end="119:17"><expr pos:start="119:17" pos:end="119:17"><name pos:start="119:17" pos:end="119:17">f</name></expr></argument>, <argument pos:start="119:20" pos:end="119:28"><expr pos:start="119:20" pos:end="119:28"><operator pos:start="119:20" pos:end="119:20">&amp;</operator><name pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:23">env</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:28">idt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:41"><expr pos:start="123:5" pos:end="123:40"><call pos:start="123:5" pos:end="123:40"><name pos:start="123:5" pos:end="123:18">qemu_put_be32s</name><argument_list pos:start="123:19" pos:end="123:40">(<argument pos:start="123:20" pos:end="123:20"><expr pos:start="123:20" pos:end="123:20"><name pos:start="123:20" pos:end="123:20">f</name></expr></argument>, <argument pos:start="123:23" pos:end="123:39"><expr pos:start="123:23" pos:end="123:39"><operator pos:start="123:23" pos:end="123:23">&amp;</operator><name pos:start="123:24" pos:end="123:39"><name pos:start="123:24" pos:end="123:26">env</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:39">sysenter_cs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:42"><expr pos:start="125:5" pos:end="125:41"><call pos:start="125:5" pos:end="125:41"><name pos:start="125:5" pos:end="125:18">qemu_put_be32s</name><argument_list pos:start="125:19" pos:end="125:41">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">f</name></expr></argument>, <argument pos:start="125:23" pos:end="125:40"><expr pos:start="125:23" pos:end="125:40"><operator pos:start="125:23" pos:end="125:23">&amp;</operator><name pos:start="125:24" pos:end="125:40"><name pos:start="125:24" pos:end="125:26">env</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:40">sysenter_esp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><call pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:18">qemu_put_be32s</name><argument_list pos:start="127:19" pos:end="127:41">(<argument pos:start="127:20" pos:end="127:20"><expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">f</name></expr></argument>, <argument pos:start="127:23" pos:end="127:40"><expr pos:start="127:23" pos:end="127:40"><operator pos:start="127:23" pos:end="127:23">&amp;</operator><name pos:start="127:24" pos:end="127:40"><name pos:start="127:24" pos:end="127:26">env</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:40">sysenter_eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:35"><expr pos:start="131:5" pos:end="131:34"><call pos:start="131:5" pos:end="131:34"><name pos:start="131:5" pos:end="131:18">qemu_put_betls</name><argument_list pos:start="131:19" pos:end="131:34">(<argument pos:start="131:20" pos:end="131:20"><expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">f</name></expr></argument>, <argument pos:start="131:23" pos:end="131:33"><expr pos:start="131:23" pos:end="131:33"><operator pos:start="131:23" pos:end="131:23">&amp;</operator><name pos:start="131:24" pos:end="131:33"><name pos:start="131:24" pos:end="131:26">env</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:30">cr</name><index pos:start="131:31" pos:end="131:33">[<expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:35"><expr pos:start="133:5" pos:end="133:34"><call pos:start="133:5" pos:end="133:34"><name pos:start="133:5" pos:end="133:18">qemu_put_betls</name><argument_list pos:start="133:19" pos:end="133:34">(<argument pos:start="133:20" pos:end="133:20"><expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">f</name></expr></argument>, <argument pos:start="133:23" pos:end="133:33"><expr pos:start="133:23" pos:end="133:33"><operator pos:start="133:23" pos:end="133:23">&amp;</operator><name pos:start="133:24" pos:end="133:33"><name pos:start="133:24" pos:end="133:26">env</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:30">cr</name><index pos:start="133:31" pos:end="133:33">[<expr pos:start="133:32" pos:end="133:32"><literal type="number" pos:start="133:32" pos:end="133:32">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:35"><expr pos:start="135:5" pos:end="135:34"><call pos:start="135:5" pos:end="135:34"><name pos:start="135:5" pos:end="135:18">qemu_put_betls</name><argument_list pos:start="135:19" pos:end="135:34">(<argument pos:start="135:20" pos:end="135:20"><expr pos:start="135:20" pos:end="135:20"><name pos:start="135:20" pos:end="135:20">f</name></expr></argument>, <argument pos:start="135:23" pos:end="135:33"><expr pos:start="135:23" pos:end="135:33"><operator pos:start="135:23" pos:end="135:23">&amp;</operator><name pos:start="135:24" pos:end="135:33"><name pos:start="135:24" pos:end="135:26">env</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:30">cr</name><index pos:start="135:31" pos:end="135:33">[<expr pos:start="135:32" pos:end="135:32"><literal type="number" pos:start="135:32" pos:end="135:32">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:35"><expr pos:start="137:5" pos:end="137:34"><call pos:start="137:5" pos:end="137:34"><name pos:start="137:5" pos:end="137:18">qemu_put_betls</name><argument_list pos:start="137:19" pos:end="137:34">(<argument pos:start="137:20" pos:end="137:20"><expr pos:start="137:20" pos:end="137:20"><name pos:start="137:20" pos:end="137:20">f</name></expr></argument>, <argument pos:start="137:23" pos:end="137:33"><expr pos:start="137:23" pos:end="137:33"><operator pos:start="137:23" pos:end="137:23">&amp;</operator><name pos:start="137:24" pos:end="137:33"><name pos:start="137:24" pos:end="137:26">env</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:30">cr</name><index pos:start="137:31" pos:end="137:33">[<expr pos:start="137:32" pos:end="137:32"><literal type="number" pos:start="137:32" pos:end="137:32">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="141:5" pos:end="143:39">for<control pos:start="141:8" pos:end="141:26">(<init pos:start="141:9" pos:end="141:14"><expr pos:start="141:9" pos:end="141:13"><name pos:start="141:9" pos:end="141:9">i</name> <operator pos:start="141:11" pos:end="141:11">=</operator> <literal type="number" pos:start="141:13" pos:end="141:13">0</literal></expr>;</init> <condition pos:start="141:16" pos:end="141:21"><expr pos:start="141:16" pos:end="141:20"><name pos:start="141:16" pos:end="141:16">i</name> <operator pos:start="141:18" pos:end="141:18">&lt;</operator> <literal type="number" pos:start="141:20" pos:end="141:20">8</literal></expr>;</condition> <incr pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:23">i</name><operator pos:start="141:24" pos:end="141:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="143:9" pos:end="143:39"><block_content pos:start="143:9" pos:end="143:39">

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><call pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:22">qemu_put_betls</name><argument_list pos:start="143:23" pos:end="143:38">(<argument pos:start="143:24" pos:end="143:24"><expr pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">f</name></expr></argument>, <argument pos:start="143:27" pos:end="143:37"><expr pos:start="143:27" pos:end="143:37"><operator pos:start="143:27" pos:end="143:27">&amp;</operator><name pos:start="143:28" pos:end="143:37"><name pos:start="143:28" pos:end="143:30">env</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:34">dr</name><index pos:start="143:35" pos:end="143:37">[<expr pos:start="143:36" pos:end="143:36"><name pos:start="143:36" pos:end="143:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="147:5" pos:end="147:13">/* MMU */</comment>

    <expr_stmt pos:start="149:5" pos:end="149:39"><expr pos:start="149:5" pos:end="149:38"><name pos:start="149:5" pos:end="149:12">a20_mask</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <operator pos:start="149:16" pos:end="149:16">(</operator><name pos:start="149:17" pos:end="149:23">int32_t</name><operator pos:start="149:24" pos:end="149:24">)</operator> <name pos:start="149:26" pos:end="149:38"><name pos:start="149:26" pos:end="149:28">env</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:38">a20_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:34"><expr pos:start="151:5" pos:end="151:33"><call pos:start="151:5" pos:end="151:33"><name pos:start="151:5" pos:end="151:19">qemu_put_sbe32s</name><argument_list pos:start="151:20" pos:end="151:33">(<argument pos:start="151:21" pos:end="151:21"><expr pos:start="151:21" pos:end="151:21"><name pos:start="151:21" pos:end="151:21">f</name></expr></argument>, <argument pos:start="151:24" pos:end="151:32"><expr pos:start="151:24" pos:end="151:32"><operator pos:start="151:24" pos:end="151:24">&amp;</operator><name pos:start="151:25" pos:end="151:32">a20_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:13">/* XMM */</comment>

    <expr_stmt pos:start="157:5" pos:end="157:35"><expr pos:start="157:5" pos:end="157:34"><call pos:start="157:5" pos:end="157:34"><name pos:start="157:5" pos:end="157:18">qemu_put_be32s</name><argument_list pos:start="157:19" pos:end="157:34">(<argument pos:start="157:20" pos:end="157:20"><expr pos:start="157:20" pos:end="157:20"><name pos:start="157:20" pos:end="157:20">f</name></expr></argument>, <argument pos:start="157:23" pos:end="157:33"><expr pos:start="157:23" pos:end="157:33"><operator pos:start="157:23" pos:end="157:23">&amp;</operator><name pos:start="157:24" pos:end="157:33"><name pos:start="157:24" pos:end="157:26">env</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:33">mxcsr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="159:5" pos:end="170:0">for<control pos:start="159:8" pos:end="159:36">(<init pos:start="159:9" pos:end="159:14"><expr pos:start="159:9" pos:end="159:13"><name pos:start="159:9" pos:end="159:9">i</name> <operator pos:start="159:11" pos:end="159:11">=</operator> <literal type="number" pos:start="159:13" pos:end="159:13">0</literal></expr>;</init> <condition pos:start="159:16" pos:end="159:31"><expr pos:start="159:16" pos:end="159:30"><name pos:start="159:16" pos:end="159:16">i</name> <operator pos:start="159:18" pos:end="159:18">&lt;</operator> <name pos:start="159:20" pos:end="159:30">CPU_NB_REGS</name></expr>;</condition> <incr pos:start="159:33" pos:end="159:35"><expr pos:start="159:33" pos:end="159:35"><name pos:start="159:33" pos:end="159:33">i</name><operator pos:start="159:34" pos:end="159:35">++</operator></expr></incr>)</control> <block pos:start="159:38" pos:end="170:0">{<block_content pos:start="161:9" pos:end="163:54">

        <expr_stmt pos:start="161:9" pos:end="161:54"><expr pos:start="161:9" pos:end="161:53"><call pos:start="161:9" pos:end="161:53"><name pos:start="161:9" pos:end="161:22">qemu_put_be64s</name><argument_list pos:start="161:23" pos:end="161:53">(<argument pos:start="161:24" pos:end="161:24"><expr pos:start="161:24" pos:end="161:24"><name pos:start="161:24" pos:end="161:24">f</name></expr></argument>, <argument pos:start="161:27" pos:end="161:52"><expr pos:start="161:27" pos:end="161:52"><operator pos:start="161:27" pos:end="161:27">&amp;</operator><name pos:start="161:28" pos:end="161:43"><name pos:start="161:28" pos:end="161:30">env</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:40">xmm_regs</name><index pos:start="161:41" pos:end="161:43">[<expr pos:start="161:42" pos:end="161:42"><name pos:start="161:42" pos:end="161:42">i</name></expr>]</index></name><operator pos:start="161:44" pos:end="161:44">.</operator><call pos:start="161:45" pos:end="161:52"><name pos:start="161:45" pos:end="161:49">XMM_Q</name><argument_list pos:start="161:50" pos:end="161:52">(<argument pos:start="161:51" pos:end="161:51"><expr pos:start="161:51" pos:end="161:51"><literal type="number" pos:start="161:51" pos:end="161:51">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:54"><expr pos:start="163:9" pos:end="163:53"><call pos:start="163:9" pos:end="163:53"><name pos:start="163:9" pos:end="163:22">qemu_put_be64s</name><argument_list pos:start="163:23" pos:end="163:53">(<argument pos:start="163:24" pos:end="163:24"><expr pos:start="163:24" pos:end="163:24"><name pos:start="163:24" pos:end="163:24">f</name></expr></argument>, <argument pos:start="163:27" pos:end="163:52"><expr pos:start="163:27" pos:end="163:52"><operator pos:start="163:27" pos:end="163:27">&amp;</operator><name pos:start="163:28" pos:end="163:43"><name pos:start="163:28" pos:end="163:30">env</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:40">xmm_regs</name><index pos:start="163:41" pos:end="163:43">[<expr pos:start="163:42" pos:end="163:42"><name pos:start="163:42" pos:end="163:42">i</name></expr>]</index></name><operator pos:start="163:44" pos:end="163:44">.</operator><call pos:start="163:45" pos:end="163:52"><name pos:start="163:45" pos:end="163:49">XMM_Q</name><argument_list pos:start="163:50" pos:end="163:52">(<argument pos:start="163:51" pos:end="163:51"><expr pos:start="163:51" pos:end="163:51"><literal type="number" pos:start="163:51" pos:end="163:51">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<cpp:ifdef pos:start="169:1" pos:end="169:20">#<cpp:directive pos:start="169:2" pos:end="169:6">ifdef</cpp:directive> <name pos:start="169:8" pos:end="169:20">TARGET_X86_64</name></cpp:ifdef>

    <expr_stmt pos:start="171:5" pos:end="171:34"><expr pos:start="171:5" pos:end="171:33"><call pos:start="171:5" pos:end="171:33"><name pos:start="171:5" pos:end="171:18">qemu_put_be64s</name><argument_list pos:start="171:19" pos:end="171:33">(<argument pos:start="171:20" pos:end="171:20"><expr pos:start="171:20" pos:end="171:20"><name pos:start="171:20" pos:end="171:20">f</name></expr></argument>, <argument pos:start="171:23" pos:end="171:32"><expr pos:start="171:23" pos:end="171:32"><operator pos:start="171:23" pos:end="171:23">&amp;</operator><name pos:start="171:24" pos:end="171:32"><name pos:start="171:24" pos:end="171:26">env</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:32">efer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:34"><expr pos:start="173:5" pos:end="173:33"><call pos:start="173:5" pos:end="173:33"><name pos:start="173:5" pos:end="173:18">qemu_put_be64s</name><argument_list pos:start="173:19" pos:end="173:33">(<argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><name pos:start="173:20" pos:end="173:20">f</name></expr></argument>, <argument pos:start="173:23" pos:end="173:32"><expr pos:start="173:23" pos:end="173:32"><operator pos:start="173:23" pos:end="173:23">&amp;</operator><name pos:start="173:24" pos:end="173:32"><name pos:start="173:24" pos:end="173:26">env</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:32">star</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:35"><expr pos:start="175:5" pos:end="175:34"><call pos:start="175:5" pos:end="175:34"><name pos:start="175:5" pos:end="175:18">qemu_put_be64s</name><argument_list pos:start="175:19" pos:end="175:34">(<argument pos:start="175:20" pos:end="175:20"><expr pos:start="175:20" pos:end="175:20"><name pos:start="175:20" pos:end="175:20">f</name></expr></argument>, <argument pos:start="175:23" pos:end="175:33"><expr pos:start="175:23" pos:end="175:33"><operator pos:start="175:23" pos:end="175:23">&amp;</operator><name pos:start="175:24" pos:end="175:33"><name pos:start="175:24" pos:end="175:26">env</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:33">lstar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:35"><expr pos:start="177:5" pos:end="177:34"><call pos:start="177:5" pos:end="177:34"><name pos:start="177:5" pos:end="177:18">qemu_put_be64s</name><argument_list pos:start="177:19" pos:end="177:34">(<argument pos:start="177:20" pos:end="177:20"><expr pos:start="177:20" pos:end="177:20"><name pos:start="177:20" pos:end="177:20">f</name></expr></argument>, <argument pos:start="177:23" pos:end="177:33"><expr pos:start="177:23" pos:end="177:33"><operator pos:start="177:23" pos:end="177:23">&amp;</operator><name pos:start="177:24" pos:end="177:33"><name pos:start="177:24" pos:end="177:26">env</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:33">cstar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:35"><expr pos:start="179:5" pos:end="179:34"><call pos:start="179:5" pos:end="179:34"><name pos:start="179:5" pos:end="179:18">qemu_put_be64s</name><argument_list pos:start="179:19" pos:end="179:34">(<argument pos:start="179:20" pos:end="179:20"><expr pos:start="179:20" pos:end="179:20"><name pos:start="179:20" pos:end="179:20">f</name></expr></argument>, <argument pos:start="179:23" pos:end="179:33"><expr pos:start="179:23" pos:end="179:33"><operator pos:start="179:23" pos:end="179:23">&amp;</operator><name pos:start="179:24" pos:end="179:33"><name pos:start="179:24" pos:end="179:26">env</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:33">fmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="184:0"><expr pos:start="181:5" pos:end="181:41"><call pos:start="181:5" pos:end="181:41"><name pos:start="181:5" pos:end="181:18">qemu_put_be64s</name><argument_list pos:start="181:19" pos:end="181:41">(<argument pos:start="181:20" pos:end="181:20"><expr pos:start="181:20" pos:end="181:20"><name pos:start="181:20" pos:end="181:20">f</name></expr></argument>, <argument pos:start="181:23" pos:end="181:40"><expr pos:start="181:23" pos:end="181:40"><operator pos:start="181:23" pos:end="181:23">&amp;</operator><name pos:start="181:24" pos:end="181:40"><name pos:start="181:24" pos:end="181:26">env</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:40">kernelgsbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="185:5" pos:end="185:36"><expr pos:start="185:5" pos:end="185:35"><call pos:start="185:5" pos:end="185:35"><name pos:start="185:5" pos:end="185:18">qemu_put_be32s</name><argument_list pos:start="185:19" pos:end="185:35">(<argument pos:start="185:20" pos:end="185:20"><expr pos:start="185:20" pos:end="185:20"><name pos:start="185:20" pos:end="185:20">f</name></expr></argument>, <argument pos:start="185:23" pos:end="185:34"><expr pos:start="185:23" pos:end="185:34"><operator pos:start="185:23" pos:end="185:23">&amp;</operator><name pos:start="185:24" pos:end="185:34"><name pos:start="185:24" pos:end="185:26">env</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:34">smbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:33"><expr pos:start="189:5" pos:end="189:32"><call pos:start="189:5" pos:end="189:32"><name pos:start="189:5" pos:end="189:18">qemu_put_be64s</name><argument_list pos:start="189:19" pos:end="189:32">(<argument pos:start="189:20" pos:end="189:20"><expr pos:start="189:20" pos:end="189:20"><name pos:start="189:20" pos:end="189:20">f</name></expr></argument>, <argument pos:start="189:23" pos:end="189:31"><expr pos:start="189:23" pos:end="189:31"><operator pos:start="189:23" pos:end="189:23">&amp;</operator><name pos:start="189:24" pos:end="189:31"><name pos:start="189:24" pos:end="189:26">env</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:31">pat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:37"><expr pos:start="191:5" pos:end="191:36"><call pos:start="191:5" pos:end="191:36"><name pos:start="191:5" pos:end="191:18">qemu_put_be32s</name><argument_list pos:start="191:19" pos:end="191:36">(<argument pos:start="191:20" pos:end="191:20"><expr pos:start="191:20" pos:end="191:20"><name pos:start="191:20" pos:end="191:20">f</name></expr></argument>, <argument pos:start="191:23" pos:end="191:35"><expr pos:start="191:23" pos:end="191:35"><operator pos:start="191:23" pos:end="191:23">&amp;</operator><name pos:start="191:24" pos:end="191:35"><name pos:start="191:24" pos:end="191:26">env</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:35">hflags2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="195:5" pos:end="195:38"><expr pos:start="195:5" pos:end="195:37"><call pos:start="195:5" pos:end="195:37"><name pos:start="195:5" pos:end="195:18">qemu_put_be64s</name><argument_list pos:start="195:19" pos:end="195:37">(<argument pos:start="195:20" pos:end="195:20"><expr pos:start="195:20" pos:end="195:20"><name pos:start="195:20" pos:end="195:20">f</name></expr></argument>, <argument pos:start="195:23" pos:end="195:36"><expr pos:start="195:23" pos:end="195:36"><operator pos:start="195:23" pos:end="195:23">&amp;</operator><name pos:start="195:24" pos:end="195:36"><name pos:start="195:24" pos:end="195:26">env</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:36">vm_hsave</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:37"><expr pos:start="197:5" pos:end="197:36"><call pos:start="197:5" pos:end="197:36"><name pos:start="197:5" pos:end="197:18">qemu_put_be64s</name><argument_list pos:start="197:19" pos:end="197:36">(<argument pos:start="197:20" pos:end="197:20"><expr pos:start="197:20" pos:end="197:20"><name pos:start="197:20" pos:end="197:20">f</name></expr></argument>, <argument pos:start="197:23" pos:end="197:35"><expr pos:start="197:23" pos:end="197:35"><operator pos:start="197:23" pos:end="197:23">&amp;</operator><name pos:start="197:24" pos:end="197:35"><name pos:start="197:24" pos:end="197:26">env</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:35">vm_vmcb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:40"><expr pos:start="199:5" pos:end="199:39"><call pos:start="199:5" pos:end="199:39"><name pos:start="199:5" pos:end="199:18">qemu_put_be64s</name><argument_list pos:start="199:19" pos:end="199:39">(<argument pos:start="199:20" pos:end="199:20"><expr pos:start="199:20" pos:end="199:20"><name pos:start="199:20" pos:end="199:20">f</name></expr></argument>, <argument pos:start="199:23" pos:end="199:38"><expr pos:start="199:23" pos:end="199:38"><operator pos:start="199:23" pos:end="199:23">&amp;</operator><name pos:start="199:24" pos:end="199:38"><name pos:start="199:24" pos:end="199:26">env</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:38">tsc_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:39"><expr pos:start="201:5" pos:end="201:38"><call pos:start="201:5" pos:end="201:38"><name pos:start="201:5" pos:end="201:18">qemu_put_be64s</name><argument_list pos:start="201:19" pos:end="201:38">(<argument pos:start="201:20" pos:end="201:20"><expr pos:start="201:20" pos:end="201:20"><name pos:start="201:20" pos:end="201:20">f</name></expr></argument>, <argument pos:start="201:23" pos:end="201:37"><expr pos:start="201:23" pos:end="201:37"><operator pos:start="201:23" pos:end="201:23">&amp;</operator><name pos:start="201:24" pos:end="201:37"><name pos:start="201:24" pos:end="201:26">env</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:37">intercept</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:47"><expr pos:start="203:5" pos:end="203:46"><call pos:start="203:5" pos:end="203:46"><name pos:start="203:5" pos:end="203:18">qemu_put_be16s</name><argument_list pos:start="203:19" pos:end="203:46">(<argument pos:start="203:20" pos:end="203:20"><expr pos:start="203:20" pos:end="203:20"><name pos:start="203:20" pos:end="203:20">f</name></expr></argument>, <argument pos:start="203:23" pos:end="203:45"><expr pos:start="203:23" pos:end="203:45"><operator pos:start="203:23" pos:end="203:23">&amp;</operator><name pos:start="203:24" pos:end="203:45"><name pos:start="203:24" pos:end="203:26">env</name><operator pos:start="203:27" pos:end="203:28">-&gt;</operator><name pos:start="203:29" pos:end="203:45">intercept_cr_read</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:48"><expr pos:start="205:5" pos:end="205:47"><call pos:start="205:5" pos:end="205:47"><name pos:start="205:5" pos:end="205:18">qemu_put_be16s</name><argument_list pos:start="205:19" pos:end="205:47">(<argument pos:start="205:20" pos:end="205:20"><expr pos:start="205:20" pos:end="205:20"><name pos:start="205:20" pos:end="205:20">f</name></expr></argument>, <argument pos:start="205:23" pos:end="205:46"><expr pos:start="205:23" pos:end="205:46"><operator pos:start="205:23" pos:end="205:23">&amp;</operator><name pos:start="205:24" pos:end="205:46"><name pos:start="205:24" pos:end="205:26">env</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:46">intercept_cr_write</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:47"><expr pos:start="207:5" pos:end="207:46"><call pos:start="207:5" pos:end="207:46"><name pos:start="207:5" pos:end="207:18">qemu_put_be16s</name><argument_list pos:start="207:19" pos:end="207:46">(<argument pos:start="207:20" pos:end="207:20"><expr pos:start="207:20" pos:end="207:20"><name pos:start="207:20" pos:end="207:20">f</name></expr></argument>, <argument pos:start="207:23" pos:end="207:45"><expr pos:start="207:23" pos:end="207:45"><operator pos:start="207:23" pos:end="207:23">&amp;</operator><name pos:start="207:24" pos:end="207:45"><name pos:start="207:24" pos:end="207:26">env</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:45">intercept_dr_read</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:48"><expr pos:start="209:5" pos:end="209:47"><call pos:start="209:5" pos:end="209:47"><name pos:start="209:5" pos:end="209:18">qemu_put_be16s</name><argument_list pos:start="209:19" pos:end="209:47">(<argument pos:start="209:20" pos:end="209:20"><expr pos:start="209:20" pos:end="209:20"><name pos:start="209:20" pos:end="209:20">f</name></expr></argument>, <argument pos:start="209:23" pos:end="209:46"><expr pos:start="209:23" pos:end="209:46"><operator pos:start="209:23" pos:end="209:23">&amp;</operator><name pos:start="209:24" pos:end="209:46"><name pos:start="209:24" pos:end="209:26">env</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:46">intercept_dr_write</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:50"><expr pos:start="211:5" pos:end="211:49"><call pos:start="211:5" pos:end="211:49"><name pos:start="211:5" pos:end="211:18">qemu_put_be32s</name><argument_list pos:start="211:19" pos:end="211:49">(<argument pos:start="211:20" pos:end="211:20"><expr pos:start="211:20" pos:end="211:20"><name pos:start="211:20" pos:end="211:20">f</name></expr></argument>, <argument pos:start="211:23" pos:end="211:48"><expr pos:start="211:23" pos:end="211:48"><operator pos:start="211:23" pos:end="211:23">&amp;</operator><name pos:start="211:24" pos:end="211:48"><name pos:start="211:24" pos:end="211:26">env</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:48">intercept_exceptions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:32"><expr pos:start="213:5" pos:end="213:31"><call pos:start="213:5" pos:end="213:31"><name pos:start="213:5" pos:end="213:15">qemu_put_8s</name><argument_list pos:start="213:16" pos:end="213:31">(<argument pos:start="213:17" pos:end="213:17"><expr pos:start="213:17" pos:end="213:17"><name pos:start="213:17" pos:end="213:17">f</name></expr></argument>, <argument pos:start="213:20" pos:end="213:30"><expr pos:start="213:20" pos:end="213:30"><operator pos:start="213:20" pos:end="213:20">&amp;</operator><name pos:start="213:21" pos:end="213:30"><name pos:start="213:21" pos:end="213:23">env</name><operator pos:start="213:24" pos:end="213:25">-&gt;</operator><name pos:start="213:26" pos:end="213:30">v_tpr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
