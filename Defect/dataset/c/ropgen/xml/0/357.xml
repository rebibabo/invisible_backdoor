<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/357.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vorbis_decode_frame</name><parameter_list pos:start="1:31" pos:end="5:47">(<parameter pos:start="1:32" pos:end="1:57"><decl pos:start="1:32" pos:end="1:57"><type pos:start="1:32" pos:end="1:57"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:57">avccontext</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:41"><decl pos:start="3:32" pos:end="3:41"><type pos:start="3:32" pos:end="3:41"><name pos:start="3:32" pos:end="3:35">void</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">data</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:57">data_size</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:46"><decl pos:start="5:32" pos:end="5:46"><type pos:start="5:32" pos:end="5:46"><name pos:start="5:32" pos:end="5:39">AVPacket</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:46">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="107:1">{<block_content pos:start="9:5" pos:end="105:21">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">vorbis_context</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:22">vc</name> <init pos:start="13:24" pos:end="13:46">= <expr pos:start="13:26" pos:end="13:46"><name pos:start="13:26" pos:end="13:46"><name pos:start="13:26" pos:end="13:35">avccontext</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:46">priv_data</name></name></expr></init></decl> ;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">GetBitContext</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:21">gb</name> <init pos:start="15:23" pos:end="15:33">= <expr pos:start="15:25" pos:end="15:33"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><operator pos:start="15:26" pos:end="15:26">(</operator><name pos:start="15:27" pos:end="15:32"><name pos:start="15:27" pos:end="15:28">vc</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">gb</name></name><operator pos:start="15:33" pos:end="15:33">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:17"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:15">float</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:34"><name pos:start="17:18" pos:end="17:29">channel_ptrs</name><index pos:start="17:30" pos:end="17:34">[<expr pos:start="17:31" pos:end="17:33"><literal type="number" pos:start="17:31" pos:end="17:33">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:14">len</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><call pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:11">av_dlog</name><argument_list pos:start="29:12" pos:end="29:50">(<argument pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">NULL</name></expr></argument>, <argument pos:start="29:19" pos:end="29:39"><expr pos:start="29:19" pos:end="29:39"><literal type="string" pos:start="29:19" pos:end="29:39">"packet length %d \n"</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:49"><expr pos:start="29:42" pos:end="29:49"><name pos:start="29:42" pos:end="29:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:17">init_get_bits</name><argument_list pos:start="33:18" pos:end="33:38">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">gb</name></expr></argument>, <argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">buf</name></expr></argument>, <argument pos:start="33:28" pos:end="33:37"><expr pos:start="33:28" pos:end="33:37"><name pos:start="33:28" pos:end="33:35">buf_size</name><operator pos:start="33:36" pos:end="33:36">*</operator><literal type="number" pos:start="33:37" pos:end="33:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:7">len</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:39"><name pos:start="37:11" pos:end="37:35">vorbis_parse_audio_packet</name><argument_list pos:start="37:36" pos:end="37:39">(<argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">vc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">len</name> <operator pos:start="41:13" pos:end="41:14">&lt;=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>)</condition> <block pos:start="41:19" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:24">

        <expr_stmt pos:start="43:9" pos:end="43:23"><expr pos:start="43:9" pos:end="43:22"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:18">data_size</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:24">return <expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:25">(<expr pos:start="51:9" pos:end="51:24"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:11">vc</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:24">first_frame</name></name></expr>)</condition> <block pos:start="51:27" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:25">

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:10">vc</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:23">first_frame</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:18">data_size</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:25">return <expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">buf_size</name></expr> ;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:65"><expr pos:start="63:5" pos:end="65:64"><call pos:start="63:5" pos:end="65:64"><name pos:start="63:5" pos:end="63:11">av_dlog</name><argument_list pos:start="63:12" pos:end="65:64">(<argument pos:start="63:13" pos:end="63:16"><expr pos:start="63:13" pos:end="63:16"><name pos:start="63:13" pos:end="63:16">NULL</name></expr></argument>, <argument pos:start="63:19" pos:end="63:78"><expr pos:start="63:19" pos:end="63:78"><literal type="string" pos:start="63:19" pos:end="63:78">"parsed %d bytes %d bits, returned %d samples (*ch*bits) \n"</literal></expr></argument>,

            <argument pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:34"><call pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:26">get_bits_count</name><argument_list pos:start="65:27" pos:end="65:30">(<argument pos:start="65:28" pos:end="65:29"><expr pos:start="65:28" pos:end="65:29"><name pos:start="65:28" pos:end="65:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="65:32" pos:end="65:32">/</operator> <literal type="number" pos:start="65:34" pos:end="65:34">8</literal></expr></argument>, <argument pos:start="65:37" pos:end="65:58"><expr pos:start="65:37" pos:end="65:58"><call pos:start="65:37" pos:end="65:54"><name pos:start="65:37" pos:end="65:50">get_bits_count</name><argument_list pos:start="65:51" pos:end="65:54">(<argument pos:start="65:52" pos:end="65:53"><expr pos:start="65:52" pos:end="65:53"><name pos:start="65:52" pos:end="65:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="65:56" pos:end="65:56">%</operator> <literal type="number" pos:start="65:58" pos:end="65:58">8</literal></expr></argument>, <argument pos:start="65:61" pos:end="65:63"><expr pos:start="65:61" pos:end="65:63"><name pos:start="65:61" pos:end="65:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:31">(<expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:10">vc</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:26">audio_channels</name></name> <operator pos:start="69:28" pos:end="69:28">&gt;</operator> <literal type="number" pos:start="69:30" pos:end="69:30">8</literal></expr>)</condition> <block pos:start="69:33" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:59">

        <for pos:start="71:9" pos:end="73:59">for <control pos:start="71:13" pos:end="71:48">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:43"><expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:42"><name pos:start="71:25" pos:end="71:26">vc</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:42">audio_channels</name></name></expr>;</condition> <incr pos:start="71:45" pos:end="71:47"><expr pos:start="71:45" pos:end="71:47"><name pos:start="71:45" pos:end="71:45">i</name><operator pos:start="71:46" pos:end="71:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:13" pos:end="73:59"><block_content pos:start="73:13" pos:end="73:59">

            <expr_stmt pos:start="73:13" pos:end="73:59"><expr pos:start="73:13" pos:end="73:58"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:24">channel_ptrs</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">i</name></expr>]</index></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:48"><name pos:start="73:31" pos:end="73:32">vc</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:48">channel_floors</name></name> <operator pos:start="73:50" pos:end="73:50">+</operator> <name pos:start="73:52" pos:end="73:52">i</name> <operator pos:start="73:54" pos:end="73:54">*</operator> <name pos:start="73:56" pos:end="73:58">len</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="83:5">else <block pos:start="75:12" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:96">

        <for pos:start="77:9" pos:end="81:96">for <control pos:start="77:13" pos:end="77:48">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:43"><expr pos:start="77:21" pos:end="77:42"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:42"><name pos:start="77:25" pos:end="77:26">vc</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:42">audio_channels</name></name></expr>;</condition> <incr pos:start="77:45" pos:end="77:47"><expr pos:start="77:45" pos:end="77:47"><name pos:start="77:45" pos:end="77:45">i</name><operator pos:start="77:46" pos:end="77:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:13" pos:end="81:96"><block_content pos:start="79:13" pos:end="81:96">

            <expr_stmt pos:start="79:13" pos:end="81:96"><expr pos:start="79:13" pos:end="81:95"><name pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:24">channel_ptrs</name><index pos:start="79:25" pos:end="79:27">[<expr pos:start="79:26" pos:end="79:26"><name pos:start="79:26" pos:end="79:26">i</name></expr>]</index></name> <operator pos:start="79:29" pos:end="79:29">=</operator> <name pos:start="79:31" pos:end="79:48"><name pos:start="79:31" pos:end="79:32">vc</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:48">channel_floors</name></name> <operator pos:start="79:50" pos:end="79:50">+</operator>

                              <name pos:start="81:31" pos:end="81:33">len</name> <operator pos:start="81:35" pos:end="81:35">*</operator> <name pos:start="81:37" pos:end="81:95"><name pos:start="81:37" pos:end="81:68">ff_vorbis_channel_layout_offsets</name><index pos:start="81:69" pos:end="81:92">[<expr pos:start="81:70" pos:end="81:91"><name pos:start="81:70" pos:end="81:87"><name pos:start="81:70" pos:end="81:71">vc</name><operator pos:start="81:72" pos:end="81:73">-&gt;</operator><name pos:start="81:74" pos:end="81:87">audio_channels</name></name> <operator pos:start="81:89" pos:end="81:89">-</operator> <literal type="number" pos:start="81:91" pos:end="81:91">1</literal></expr>]</index><index pos:start="81:93" pos:end="81:95">[<expr pos:start="81:94" pos:end="81:94"><name pos:start="81:94" pos:end="81:94">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="87:5" pos:end="95:67"><if pos:start="87:5" pos:end="89:83">if <condition pos:start="87:8" pos:end="87:52">(<expr pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:18">avccontext</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:30">sample_fmt</name></name> <operator pos:start="87:32" pos:end="87:33">==</operator> <name pos:start="87:35" pos:end="87:51">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:83"><block_content pos:start="89:9" pos:end="89:83">

        <expr_stmt pos:start="89:9" pos:end="89:83"><expr pos:start="89:9" pos:end="89:82"><call pos:start="89:9" pos:end="89:82"><name pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:10">vc</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:20">fmt_conv</name><operator pos:start="89:21" pos:end="89:21">.</operator><name pos:start="89:22" pos:end="89:37">float_interleave</name></name><argument_list pos:start="89:38" pos:end="89:82">(<argument pos:start="89:39" pos:end="89:42"><expr pos:start="89:39" pos:end="89:42"><name pos:start="89:39" pos:end="89:42">data</name></expr></argument>, <argument pos:start="89:45" pos:end="89:56"><expr pos:start="89:45" pos:end="89:56"><name pos:start="89:45" pos:end="89:56">channel_ptrs</name></expr></argument>, <argument pos:start="89:59" pos:end="89:61"><expr pos:start="89:59" pos:end="89:61"><name pos:start="89:59" pos:end="89:61">len</name></expr></argument>, <argument pos:start="89:64" pos:end="89:81"><expr pos:start="89:64" pos:end="89:81"><name pos:start="89:64" pos:end="89:81"><name pos:start="89:64" pos:end="89:65">vc</name><operator pos:start="89:66" pos:end="89:67">-&gt;</operator><name pos:start="89:68" pos:end="89:81">audio_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="91:5" pos:end="95:67">else<block type="pseudo" pos:start="93:9" pos:end="95:67"><block_content pos:start="93:9" pos:end="95:67">

        <expr_stmt pos:start="93:9" pos:end="95:67"><expr pos:start="93:9" pos:end="95:66"><call pos:start="93:9" pos:end="95:66"><name pos:start="93:9" pos:end="93:46"><name pos:start="93:9" pos:end="93:10">vc</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:20">fmt_conv</name><operator pos:start="93:21" pos:end="93:21">.</operator><name pos:start="93:22" pos:end="93:46">float_to_int16_interleave</name></name><argument_list pos:start="93:47" pos:end="95:66">(<argument pos:start="93:48" pos:end="93:51"><expr pos:start="93:48" pos:end="93:51"><name pos:start="93:48" pos:end="93:51">data</name></expr></argument>, <argument pos:start="93:54" pos:end="93:65"><expr pos:start="93:54" pos:end="93:65"><name pos:start="93:54" pos:end="93:65">channel_ptrs</name></expr></argument>, <argument pos:start="93:68" pos:end="93:70"><expr pos:start="93:68" pos:end="93:70"><name pos:start="93:68" pos:end="93:70">len</name></expr></argument>,

                                               <argument pos:start="95:48" pos:end="95:65"><expr pos:start="95:48" pos:end="95:65"><name pos:start="95:48" pos:end="95:65"><name pos:start="95:48" pos:end="95:49">vc</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:65">audio_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="101:65"><expr pos:start="99:5" pos:end="101:64"><operator pos:start="99:5" pos:end="99:5">*</operator><name pos:start="99:6" pos:end="99:14">data_size</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:20">len</name> <operator pos:start="99:22" pos:end="99:22">*</operator> <name pos:start="99:24" pos:end="99:41"><name pos:start="99:24" pos:end="99:25">vc</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:41">audio_channels</name></name> <operator pos:start="99:43" pos:end="99:43">*</operator>

                 <call pos:start="101:18" pos:end="101:64"><name pos:start="101:18" pos:end="101:40">av_get_bytes_per_sample</name><argument_list pos:start="101:41" pos:end="101:64">(<argument pos:start="101:42" pos:end="101:63"><expr pos:start="101:42" pos:end="101:63"><name pos:start="101:42" pos:end="101:63"><name pos:start="101:42" pos:end="101:51">avccontext</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:63">sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="105:5" pos:end="105:21">return <expr pos:start="105:12" pos:end="105:19"><name pos:start="105:12" pos:end="105:19">buf_size</name></expr> ;</return>

</block_content>}</block></function>
</unit>
