<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6850.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">gen_thumb2_parallel_addsub</name><parameter_list pos:start="1:39" pos:end="1:72">(<parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">op1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">op2</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:63"><decl pos:start="1:58" pos:end="1:63"><type pos:start="1:58" pos:end="1:63"><name pos:start="1:58" pos:end="1:61">TCGv</name></type> <name pos:start="1:63" pos:end="1:63">a</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:71"><decl pos:start="1:66" pos:end="1:71"><type pos:start="1:66" pos:end="1:71"><name pos:start="1:66" pos:end="1:69">TCGv</name></type> <name pos:start="1:71" pos:end="1:71">b</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="63:5">switch <condition pos:start="9:12" pos:end="9:16">(<expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">op1</name></expr>)</condition> <block pos:start="9:18" pos:end="63:5">{<block_content pos:start="13:5" pos:end="62:0">

<cpp:define pos:start="11:1" pos:end="11:65">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:22">gen_pas_helper</name><parameter_list pos:start="11:23" pos:end="11:28">(<parameter pos:start="11:24" pos:end="11:27"><type pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="11:30" pos:end="11:65">glue(gen_helper_,name)(a, a, b, tmp)</cpp:value></cpp:define>

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:11">tmp</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:40"><name pos:start="15:15" pos:end="15:26">tcg_temp_new</name><argument_list pos:start="15:27" pos:end="15:40">(<argument pos:start="15:28" pos:end="15:39"><expr pos:start="15:28" pos:end="15:39"><name pos:start="15:28" pos:end="15:39">TCG_TYPE_PTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:24">tcg_gen_addi_ptr</name><argument_list pos:start="17:25" pos:end="17:62">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">tmp</name></expr></argument>, <argument pos:start="17:31" pos:end="17:37"><expr pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:37">cpu_env</name></expr></argument>, <argument pos:start="17:40" pos:end="17:61"><expr pos:start="17:40" pos:end="17:61"><call pos:start="17:40" pos:end="17:61"><name pos:start="17:40" pos:end="17:47">offsetof</name><argument_list pos:start="17:48" pos:end="17:61">(<argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><name pos:start="17:49" pos:end="17:56">CPUState</name></expr></argument>, <argument pos:start="17:59" pos:end="17:60"><expr pos:start="17:59" pos:end="17:60"><name pos:start="17:59" pos:end="17:60">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:14">PAS_OP</name><argument_list pos:start="19:15" pos:end="19:17">(<argument pos:start="19:16" pos:end="19:16">s</argument>)</argument_list></macro>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">4</literal></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:11">tmp</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:40"><name pos:start="25:15" pos:end="25:26">tcg_temp_new</name><argument_list pos:start="25:27" pos:end="25:40">(<argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:39">TCG_TYPE_PTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><call pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:24">tcg_gen_addi_ptr</name><argument_list pos:start="27:25" pos:end="27:62">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">tmp</name></expr></argument>, <argument pos:start="27:31" pos:end="27:37"><expr pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:37">cpu_env</name></expr></argument>, <argument pos:start="27:40" pos:end="27:61"><expr pos:start="27:40" pos:end="27:61"><call pos:start="27:40" pos:end="27:61"><name pos:start="27:40" pos:end="27:47">offsetof</name><argument_list pos:start="27:48" pos:end="27:61">(<argument pos:start="27:49" pos:end="27:56"><expr pos:start="27:49" pos:end="27:56"><name pos:start="27:49" pos:end="27:56">CPUState</name></expr></argument>, <argument pos:start="27:59" pos:end="27:60"><expr pos:start="27:59" pos:end="27:60"><name pos:start="27:59" pos:end="27:60">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:14">PAS_OP</name><argument_list pos:start="29:15" pos:end="29:17">(<argument pos:start="29:16" pos:end="29:16">u</argument>)</argument_list></macro>

        <break pos:start="31:9" pos:end="36:0">break;</break>

<cpp:undef pos:start="33:1" pos:end="33:21">#<cpp:directive pos:start="33:2" pos:end="33:6">undef</cpp:directive> <name pos:start="33:8" pos:end="33:21">gen_pas_helper</name></cpp:undef>

<cpp:define pos:start="35:1" pos:end="35:60">#<cpp:directive pos:start="35:2" pos:end="35:7">define</cpp:directive> <cpp:macro pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:22">gen_pas_helper</name><parameter_list pos:start="35:23" pos:end="35:28">(<parameter pos:start="35:24" pos:end="35:27"><type pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="35:30" pos:end="35:60">glue(gen_helper_,name)(a, a, b)</cpp:value></cpp:define>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">1</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><call pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:14">PAS_OP</name><argument_list pos:start="39:15" pos:end="39:17">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">2</literal></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:19"><expr pos:start="45:9" pos:end="45:18"><call pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:14">PAS_OP</name><argument_list pos:start="45:15" pos:end="45:18">(<argument pos:start="45:16" pos:end="45:17"><expr pos:start="45:16" pos:end="45:17"><name pos:start="45:16" pos:end="45:17">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">5</literal></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:19"><expr pos:start="51:9" pos:end="51:18"><call pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:14">PAS_OP</name><argument_list pos:start="51:15" pos:end="51:18">(<argument pos:start="51:16" pos:end="51:17"><expr pos:start="51:16" pos:end="51:17"><name pos:start="51:16" pos:end="51:17">uq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">6</literal></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:19"><expr pos:start="57:9" pos:end="57:18"><call pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:14">PAS_OP</name><argument_list pos:start="57:15" pos:end="57:18">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">uh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="62:0">break;</break>

<cpp:undef pos:start="61:1" pos:end="61:21">#<cpp:directive pos:start="61:2" pos:end="61:6">undef</cpp:directive> <name pos:start="61:8" pos:end="61:21">gen_pas_helper</name></cpp:undef>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
