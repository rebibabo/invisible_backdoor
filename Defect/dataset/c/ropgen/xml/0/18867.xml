<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18867.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">find_pte32</name><parameter_list pos:start="1:22" pos:end="3:61">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">CPUPPCState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:66"><decl pos:start="1:41" pos:end="1:66"><type pos:start="1:41" pos:end="1:66"><name pos:start="1:41" pos:end="1:61"><name pos:start="1:41" pos:end="1:46">struct</name> <name pos:start="1:48" pos:end="1:61">mmu_ctx_hash32</name></name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">ctx</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:73"><decl pos:start="1:69" pos:end="1:73"><type pos:start="1:69" pos:end="1:73"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:73">h</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:28"><decl pos:start="3:23" pos:end="3:28"><type pos:start="3:23" pos:end="3:28"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:28">rw</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:38"><decl pos:start="3:31" pos:end="3:38"><type pos:start="3:31" pos:end="3:38"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:38">type</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:60"><decl pos:start="3:41" pos:end="3:60"><type pos:start="3:41" pos:end="3:60"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:60">target_page_bits</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="123:1">{<block_content pos:start="7:5" pos:end="121:15">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:19">pteg_off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">pte0</name></decl>, <decl pos:start="9:24" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:24" pos:end="9:27">pte1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:15">good</name> <init pos:start="11:17" pos:end="11:20">= <expr pos:start="11:19" pos:end="11:20"><operator pos:start="11:19" pos:end="11:19">-</operator><literal type="number" pos:start="11:20" pos:end="11:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:15" pos:end="17:34">/* No entry found */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:12">pteg_off</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:51"><name pos:start="19:16" pos:end="19:32">get_pteg_offset32</name><argument_list pos:start="19:33" pos:end="19:51">(<argument pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:36">env</name></expr></argument>, <argument pos:start="19:39" pos:end="19:50"><expr pos:start="19:39" pos:end="19:50"><name pos:start="19:39" pos:end="19:50"><name pos:start="19:39" pos:end="19:41">ctx</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:47">hash</name><index pos:start="19:48" pos:end="19:50">[<expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">h</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="83:5">for <control pos:start="21:9" pos:end="21:41">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:36"><expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:35">HPTES_PER_GROUP</name></expr>;</condition> <incr pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:38">i</name><operator pos:start="21:39" pos:end="21:40">++</operator></expr></incr>)</control> <block pos:start="21:43" pos:end="83:5">{<block_content pos:start="23:9" pos:end="81:9">

        <expr_stmt pos:start="23:9" pos:end="23:73"><expr pos:start="23:9" pos:end="23:72"><name pos:start="23:9" pos:end="23:12">pte0</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:72"><name pos:start="23:16" pos:end="23:36">ppc_hash32_load_hpte0</name><argument_list pos:start="23:37" pos:end="23:72">(<argument pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><name pos:start="23:38" pos:end="23:40">env</name></expr></argument>, <argument pos:start="23:43" pos:end="23:71"><expr pos:start="23:43" pos:end="23:71"><name pos:start="23:43" pos:end="23:50">pteg_off</name> <operator pos:start="23:52" pos:end="23:52">+</operator> <name pos:start="23:54" pos:end="23:54">i</name><operator pos:start="23:55" pos:end="23:55">*</operator><name pos:start="23:56" pos:end="23:71">HASH_PTE_SIZE_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:73"><expr pos:start="25:9" pos:end="25:72"><name pos:start="25:9" pos:end="25:12">pte1</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:72"><name pos:start="25:16" pos:end="25:36">ppc_hash32_load_hpte1</name><argument_list pos:start="25:37" pos:end="25:72">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">env</name></expr></argument>, <argument pos:start="25:43" pos:end="25:71"><expr pos:start="25:43" pos:end="25:71"><name pos:start="25:43" pos:end="25:50">pteg_off</name> <operator pos:start="25:52" pos:end="25:52">+</operator> <name pos:start="25:54" pos:end="25:54">i</name><operator pos:start="25:55" pos:end="25:55">*</operator><name pos:start="25:56" pos:end="25:71">HASH_PTE_SIZE_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:58"><name pos:start="27:13" pos:end="27:28">pte_check_hash32</name><argument_list pos:start="27:29" pos:end="27:58">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">ctx</name></expr></argument>, <argument pos:start="27:35" pos:end="27:38"><expr pos:start="27:35" pos:end="27:38"><name pos:start="27:35" pos:end="27:38">pte0</name></expr></argument>, <argument pos:start="27:41" pos:end="27:44"><expr pos:start="27:41" pos:end="27:44"><name pos:start="27:41" pos:end="27:44">pte1</name></expr></argument>, <argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">h</name></expr></argument>, <argument pos:start="27:50" pos:end="27:51"><expr pos:start="27:50" pos:end="27:51"><name pos:start="27:50" pos:end="27:51">rw</name></expr></argument>, <argument pos:start="27:54" pos:end="27:57"><expr pos:start="27:54" pos:end="27:57"><name pos:start="27:54" pos:end="27:57">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="35:51"><expr pos:start="29:9" pos:end="35:50"><call pos:start="29:9" pos:end="35:50"><name pos:start="29:9" pos:end="29:15">LOG_MMU</name><argument_list pos:start="29:16" pos:end="35:50">(<argument pos:start="29:17" pos:end="31:61"><expr pos:start="29:17" pos:end="31:61"><literal type="string" pos:start="29:17" pos:end="29:35">"Load pte from %08"</literal> <name pos:start="29:37" pos:end="29:47">HWADDR_PRIx</name> <literal type="string" pos:start="29:49" pos:end="29:54">" =&gt; "</literal> <name pos:start="29:56" pos:end="29:68">TARGET_FMT_lx</name> <literal type="string" pos:start="29:70" pos:end="29:72">" "</literal>

                <name pos:start="31:17" pos:end="31:29">TARGET_FMT_lx</name> <literal type="string" pos:start="31:31" pos:end="31:42">" %d %d %d "</literal> <name pos:start="31:44" pos:end="31:56">TARGET_FMT_lx</name> <literal type="string" pos:start="31:58" pos:end="31:61">"\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:24">pteg_off</name> <operator pos:start="33:26" pos:end="33:26">+</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:29">i</name> <operator pos:start="33:31" pos:end="33:31">*</operator> <literal type="number" pos:start="33:33" pos:end="33:33">8</literal><operator pos:start="33:34" pos:end="33:34">)</operator></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">pte0</name></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">pte1</name></expr></argument>, <argument pos:start="33:49" pos:end="33:65"><expr pos:start="33:49" pos:end="33:65"><operator pos:start="33:49" pos:end="33:49">(</operator><name pos:start="33:50" pos:end="33:52">int</name><operator pos:start="33:53" pos:end="33:53">)</operator><operator pos:start="33:54" pos:end="33:54">(</operator><name pos:start="33:55" pos:end="33:58">pte0</name> <operator pos:start="33:60" pos:end="33:61">&gt;&gt;</operator> <literal type="number" pos:start="33:63" pos:end="33:64">31</literal><operator pos:start="33:65" pos:end="33:65">)</operator></expr></argument>, <argument pos:start="33:68" pos:end="33:68"><expr pos:start="33:68" pos:end="33:68"><name pos:start="33:68" pos:end="33:68">h</name></expr></argument>,

                <argument pos:start="35:17" pos:end="35:38"><expr pos:start="35:17" pos:end="35:38"><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:20">int</name><operator pos:start="35:21" pos:end="35:21">)</operator><operator pos:start="35:22" pos:end="35:22">(</operator><operator pos:start="35:23" pos:end="35:23">(</operator><name pos:start="35:24" pos:end="35:27">pte0</name> <operator pos:start="35:29" pos:end="35:30">&gt;&gt;</operator> <literal type="number" pos:start="35:32" pos:end="35:32">6</literal><operator pos:start="35:33" pos:end="35:33">)</operator> <operator pos:start="35:35" pos:end="35:35">&amp;</operator> <literal type="number" pos:start="35:37" pos:end="35:37">1</literal><operator pos:start="35:38" pos:end="35:38">)</operator></expr></argument>, <argument pos:start="35:41" pos:end="35:49"><expr pos:start="35:41" pos:end="35:49"><name pos:start="35:41" pos:end="35:49"><name pos:start="35:41" pos:end="35:43">ctx</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:49">ptem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="37:9" pos:end="81:9">switch <condition pos:start="37:16" pos:end="37:18">(<expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">r</name></expr>)</condition> <block pos:start="37:20" pos:end="81:9">{<block_content pos:start="39:9" pos:end="79:22">

        <case pos:start="39:9" pos:end="39:16">case <expr pos:start="39:14" pos:end="39:15"><operator pos:start="39:14" pos:end="39:14">-</operator><literal type="number" pos:start="39:15" pos:end="39:15">3</literal></expr>:</case>

            <comment type="block" pos:start="41:13" pos:end="41:35">/* PTE inconsistency */</comment>

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return>

        <case pos:start="45:9" pos:end="45:16">case <expr pos:start="45:14" pos:end="45:15"><operator pos:start="45:14" pos:end="45:14">-</operator><literal type="number" pos:start="45:15" pos:end="45:15">2</literal></expr>:</case>

            <comment type="block" pos:start="47:13" pos:end="47:34">/* Access violation */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:21"><expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">-</operator><literal type="number" pos:start="49:20" pos:end="49:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:16">good</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:20">i</name></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:16">case <expr pos:start="55:14" pos:end="55:15"><operator pos:start="55:14" pos:end="55:14">-</operator><literal type="number" pos:start="55:15" pos:end="55:15">1</literal></expr>:</case>

        <default pos:start="57:9" pos:end="57:16">default:</default>

            <comment type="block" pos:start="59:13" pos:end="59:30">/* No PTE match */</comment>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:15">case <expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>:</case>

            <comment type="block" pos:start="65:13" pos:end="65:32">/* access granted */</comment>

            <comment type="block" pos:start="67:13" pos:end="73:15">/* XXX: we should go on looping to check all PTEs consistency

             *      but if we can speed-up the whole thing as the

             *      result would be undefined if PTEs are not consistent.

             */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:20"><expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:21"><expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:16">good</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:20">i</name></expr>;</expr_stmt>

            <goto pos:start="79:13" pos:end="79:22">goto <name pos:start="79:18" pos:end="79:21">done</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <if_stmt pos:start="85:5" pos:end="105:5"><if pos:start="85:5" pos:end="105:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:12">good</name> <operator pos:start="85:14" pos:end="85:15">!=</operator> <operator pos:start="85:17" pos:end="85:17">-</operator><literal type="number" pos:start="85:18" pos:end="85:18">1</literal></expr>)</condition> <block pos:start="85:21" pos:end="105:5">{<block_content pos:start="87:5" pos:end="103:9">

    <label pos:start="87:5" pos:end="87:9"><name pos:start="87:5" pos:end="87:8">done</name>:</label>

        <expr_stmt pos:start="89:9" pos:end="91:44"><expr pos:start="89:9" pos:end="91:43"><call pos:start="89:9" pos:end="91:43"><name pos:start="89:9" pos:end="89:15">LOG_MMU</name><argument_list pos:start="89:16" pos:end="91:43">(<argument pos:start="89:17" pos:end="89:73"><expr pos:start="89:17" pos:end="89:73"><literal type="string" pos:start="89:17" pos:end="89:39">"found PTE at addr %08"</literal> <name pos:start="89:41" pos:end="89:51">HWADDR_PRIx</name> <literal type="string" pos:start="89:53" pos:end="89:73">" prot=%01x ret=%d\n"</literal></expr></argument>,

                <argument pos:start="91:17" pos:end="91:26"><expr pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:19">ctx</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:26">raddr</name></name></expr></argument>, <argument pos:start="91:29" pos:end="91:37"><expr pos:start="91:29" pos:end="91:37"><name pos:start="91:29" pos:end="91:37"><name pos:start="91:29" pos:end="91:31">ctx</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:37">prot</name></name></expr></argument>, <argument pos:start="91:40" pos:end="91:42"><expr pos:start="91:40" pos:end="91:42"><name pos:start="91:40" pos:end="91:42">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="93:9" pos:end="93:31">/* Update page flags */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:12">pte1</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:25"><name pos:start="95:16" pos:end="95:18">ctx</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:25">raddr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:66">(<expr pos:start="97:13" pos:end="97:65"><call pos:start="97:13" pos:end="97:60"><name pos:start="97:13" pos:end="97:39">ppc_hash32_pte_update_flags</name><argument_list pos:start="97:40" pos:end="97:60">(<argument pos:start="97:41" pos:end="97:43"><expr pos:start="97:41" pos:end="97:43"><name pos:start="97:41" pos:end="97:43">ctx</name></expr></argument>, <argument pos:start="97:46" pos:end="97:50"><expr pos:start="97:46" pos:end="97:50"><operator pos:start="97:46" pos:end="97:46">&amp;</operator><name pos:start="97:47" pos:end="97:50">pte1</name></expr></argument>, <argument pos:start="97:53" pos:end="97:55"><expr pos:start="97:53" pos:end="97:55"><name pos:start="97:53" pos:end="97:55">ret</name></expr></argument>, <argument pos:start="97:58" pos:end="97:59"><expr pos:start="97:58" pos:end="97:59"><name pos:start="97:58" pos:end="97:59">rw</name></expr></argument>)</argument_list></call> <operator pos:start="97:62" pos:end="97:63">==</operator> <literal type="number" pos:start="97:65" pos:end="97:65">1</literal></expr>)</condition> <block pos:start="97:68" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:41">

            <expr_stmt pos:start="99:13" pos:end="101:41"><expr pos:start="99:13" pos:end="101:40"><call pos:start="99:13" pos:end="101:40"><name pos:start="99:13" pos:end="99:34">ppc_hash32_store_hpte1</name><argument_list pos:start="99:35" pos:end="101:40">(<argument pos:start="99:36" pos:end="99:38"><expr pos:start="99:36" pos:end="99:38"><name pos:start="99:36" pos:end="99:38">env</name></expr></argument>, <argument pos:start="99:41" pos:end="99:74"><expr pos:start="99:41" pos:end="99:74"><name pos:start="99:41" pos:end="99:48">pteg_off</name> <operator pos:start="99:50" pos:end="99:50">+</operator> <name pos:start="99:52" pos:end="99:55">good</name> <operator pos:start="99:57" pos:end="99:57">*</operator> <name pos:start="99:59" pos:end="99:74">HASH_PTE_SIZE_32</name></expr></argument>,

                                   <argument pos:start="101:36" pos:end="101:39"><expr pos:start="101:36" pos:end="101:39"><name pos:start="101:36" pos:end="101:39">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="111:40">/* We have a TLB that saves 4K pages, so let's

     * split a huge page to 4k chunks */</comment>

    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:45">(<expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:24">target_page_bits</name> <operator pos:start="113:26" pos:end="113:27">!=</operator> <name pos:start="113:29" pos:end="113:44">TARGET_PAGE_BITS</name></expr>)</condition> <block pos:start="113:47" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:41">

        <expr_stmt pos:start="115:9" pos:end="117:41"><expr pos:start="115:9" pos:end="117:40"><name pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:11">ctx</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:18">raddr</name></name> <operator pos:start="115:20" pos:end="115:21">|=</operator> <operator pos:start="115:23" pos:end="115:23">(</operator><name pos:start="115:24" pos:end="115:33"><name pos:start="115:24" pos:end="115:26">ctx</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:33">eaddr</name></name> <operator pos:start="115:35" pos:end="115:35">&amp;</operator> <operator pos:start="115:37" pos:end="115:37">(</operator><operator pos:start="115:38" pos:end="115:38">(</operator><literal type="number" pos:start="115:39" pos:end="115:39">1</literal> <operator pos:start="115:41" pos:end="115:42">&lt;&lt;</operator> <name pos:start="115:44" pos:end="115:59">target_page_bits</name><operator pos:start="115:60" pos:end="115:60">)</operator> <operator pos:start="115:62" pos:end="115:62">-</operator> <literal type="number" pos:start="115:64" pos:end="115:64">1</literal><operator pos:start="115:65" pos:end="115:65">)</operator><operator pos:start="115:66" pos:end="115:66">)</operator>

                      <operator pos:start="117:23" pos:end="117:23">&amp;</operator> <name pos:start="117:25" pos:end="117:40">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="121:5" pos:end="121:15">return <expr pos:start="121:12" pos:end="121:14"><name pos:start="121:12" pos:end="121:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
