<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11880.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="9:41">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>, 

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:44"><decl pos:start="7:26" pos:end="7:44"><type pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:34">AVPicture</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:44">picture1</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:40"><decl pos:start="9:26" pos:end="9:40"><type pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:28">int</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:40">frame_size</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="229:1">{<block_content pos:start="13:5" pos:end="227:26">

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">n1</name></decl>, <decl pos:start="13:13" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:14">n2</name></decl>, <decl pos:start="13:17" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:18">nb</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">i</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:26">ret</name></decl>, <decl pos:start="13:29" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:40">frame_number</name></decl>, <decl pos:start="13:43" pos:end="13:56"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:43" pos:end="13:56">dec_frame_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AVPicture</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:22">picture</name></decl>, <decl pos:start="15:25" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:15"><modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:33">picture2</name></decl>, <decl pos:start="15:36" pos:end="15:40"><type ref="prev" pos:start="15:5" pos:end="15:15"><modifier pos:start="15:36" pos:end="15:36">*</modifier></type><name pos:start="15:37" pos:end="15:40">pict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">AVPicture</name></type> <name pos:start="17:15" pos:end="17:26">picture_tmp1</name></decl>, <decl pos:start="17:29" pos:end="17:40"><type ref="prev" pos:start="17:5" pos:end="17:13"/><name pos:start="17:29" pos:end="17:40">picture_tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">UINT8</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:23">video_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">UINT8</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:14">buf</name> <init pos:start="21:16" pos:end="21:21">= <expr pos:start="21:18" pos:end="21:21"><name pos:start="21:18" pos:end="21:21">NULL</name></expr></init></decl>, <decl pos:start="21:24" pos:end="21:35"><type ref="prev" pos:start="21:5" pos:end="21:11"><modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:28">buf1</name> <init pos:start="21:30" pos:end="21:35">= <expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="28:0"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">AVCodecContext</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:23">enc</name></decl>, <decl pos:start="23:26" pos:end="23:29"><type ref="prev" pos:start="23:5" pos:end="23:20"><modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:29">dec</name></decl>;</decl_stmt>



<cpp:define pos:start="27:1" pos:end="27:37">#<cpp:directive pos:start="27:2" pos:end="27:7">define</cpp:directive> <cpp:macro pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:25">VIDEO_BUFFER_SIZE</name></cpp:macro> <cpp:value pos:start="27:27" pos:end="27:37">(1024*1024)</cpp:value></cpp:define>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">enc</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <operator pos:start="31:11" pos:end="31:11">&amp;</operator><name pos:start="31:12" pos:end="31:25"><name pos:start="31:12" pos:end="31:14">ost</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:18">st</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:7">dec</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <operator pos:start="33:11" pos:end="33:11">&amp;</operator><name pos:start="33:12" pos:end="33:25"><name pos:start="33:12" pos:end="33:14">ist</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:18">st</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">codec</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:16">frame_number</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:36"><name pos:start="37:20" pos:end="37:22">ist</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:36">frame_number</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:18">dec_frame_rate</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:42"><name pos:start="39:22" pos:end="39:24">ist</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:28">st</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:42">r_frame_rate</name></name></expr>;</expr_stmt>

    <comment type="line" pos:start="41:5" pos:end="41:50">//    fprintf(stderr, "\n%d", dec_frame_rate);</comment>

    <comment type="block" pos:start="43:5" pos:end="43:36">/* first drop frame if needed */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:6">n1</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <operator pos:start="45:10" pos:end="45:10">(</operator><operator pos:start="45:11" pos:end="45:11">(</operator><name pos:start="45:12" pos:end="45:16">INT64</name><operator pos:start="45:17" pos:end="45:17">)</operator><name pos:start="45:18" pos:end="45:29">frame_number</name> <operator pos:start="45:31" pos:end="45:31">*</operator> <name pos:start="45:33" pos:end="45:47"><name pos:start="45:33" pos:end="45:35">enc</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:47">frame_rate</name></name><operator pos:start="45:48" pos:end="45:48">)</operator> <operator pos:start="45:50" pos:end="45:50">/</operator> <name pos:start="45:52" pos:end="45:65">dec_frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:72"><expr pos:start="47:5" pos:end="47:71"><name pos:start="47:5" pos:end="47:6">n2</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <operator pos:start="47:10" pos:end="47:10">(</operator><operator pos:start="47:11" pos:end="47:11">(</operator><operator pos:start="47:12" pos:end="47:12">(</operator><name pos:start="47:13" pos:end="47:17">INT64</name><operator pos:start="47:18" pos:end="47:18">)</operator><name pos:start="47:19" pos:end="47:30">frame_number</name> <operator pos:start="47:32" pos:end="47:32">+</operator> <literal type="number" pos:start="47:34" pos:end="47:34">1</literal><operator pos:start="47:35" pos:end="47:35">)</operator> <operator pos:start="47:37" pos:end="47:37">*</operator> <name pos:start="47:39" pos:end="47:53"><name pos:start="47:39" pos:end="47:41">enc</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:53">frame_rate</name></name><operator pos:start="47:54" pos:end="47:54">)</operator> <operator pos:start="47:56" pos:end="47:56">/</operator> <name pos:start="47:58" pos:end="47:71">dec_frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:17"><expr pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:6">nb</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <name pos:start="49:10" pos:end="49:11">n2</name> <operator pos:start="49:13" pos:end="49:13">-</operator> <name pos:start="49:15" pos:end="49:16">n1</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:15"><if pos:start="51:5" pos:end="53:15">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:10">nb</name> <operator pos:start="51:12" pos:end="51:13">&lt;=</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:15"><block_content pos:start="53:9" pos:end="53:15"> 

        <return pos:start="53:9" pos:end="53:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:16">video_buffer</name><operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:46"><name pos:start="57:19" pos:end="57:27">av_malloc</name><argument_list pos:start="57:28" pos:end="57:46">(<argument pos:start="57:29" pos:end="57:45"><expr pos:start="57:29" pos:end="57:45"><name pos:start="57:29" pos:end="57:45">VIDEO_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="59:29"><if pos:start="59:5" pos:end="59:29">if<condition pos:start="59:7" pos:end="59:21">(<expr pos:start="59:8" pos:end="59:20"><operator pos:start="59:8" pos:end="59:8">!</operator><name pos:start="59:9" pos:end="59:20">video_buffer</name></expr>)</condition><block type="pseudo" pos:start="59:23" pos:end="59:29"><block_content pos:start="59:23" pos:end="59:29"> <return pos:start="59:23" pos:end="59:29">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:54">/* deinterlace : must be done before any resize */</comment>

    <if_stmt pos:start="65:5" pos:end="107:5"><if pos:start="65:5" pos:end="103:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:22">do_deinterlace</name></expr>)</condition> <block pos:start="65:25" pos:end="103:5">{<block_content pos:start="67:9" pos:end="101:9">

        <decl_stmt pos:start="67:9" pos:end="67:17"><decl pos:start="67:9" pos:end="67:16"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:16">size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:38">/* create temporary picture */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:73"><expr pos:start="73:9" pos:end="73:72"><name pos:start="73:9" pos:end="73:12">size</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:72"><name pos:start="73:16" pos:end="73:33">avpicture_get_size</name><argument_list pos:start="73:34" pos:end="73:72">(<argument pos:start="73:35" pos:end="73:46"><expr pos:start="73:35" pos:end="73:46"><name pos:start="73:35" pos:end="73:46"><name pos:start="73:35" pos:end="73:37">dec</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:46">pix_fmt</name></name></expr></argument>, <argument pos:start="73:49" pos:end="73:58"><expr pos:start="73:49" pos:end="73:58"><name pos:start="73:49" pos:end="73:58"><name pos:start="73:49" pos:end="73:51">dec</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:58">width</name></name></expr></argument>, <argument pos:start="73:61" pos:end="73:71"><expr pos:start="73:61" pos:end="73:71"><name pos:start="73:61" pos:end="73:71"><name pos:start="73:61" pos:end="73:63">dec</name><operator pos:start="73:64" pos:end="73:65">-&gt;</operator><name pos:start="73:66" pos:end="73:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:12">buf1</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:24">av_malloc</name><argument_list pos:start="75:25" pos:end="75:30">(<argument pos:start="75:26" pos:end="75:29"><expr pos:start="75:26" pos:end="75:29"><name pos:start="75:26" pos:end="75:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:19"><if pos:start="77:9" pos:end="79:19">if <condition pos:start="77:12" pos:end="77:18">(<expr pos:start="77:13" pos:end="77:17"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:17">buf1</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:19"><block_content pos:start="79:13" pos:end="79:19">

            <return pos:start="79:13" pos:end="79:19">return;</return></block_content></block></if></if_stmt>

        

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:16">picture2</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:32">picture_tmp2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:78"><expr pos:start="85:9" pos:end="85:77"><call pos:start="85:9" pos:end="85:77"><name pos:start="85:9" pos:end="85:22">avpicture_fill</name><argument_list pos:start="85:23" pos:end="85:77">(<argument pos:start="85:24" pos:end="85:31"><expr pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:31">picture2</name></expr></argument>, <argument pos:start="85:34" pos:end="85:37"><expr pos:start="85:34" pos:end="85:37"><name pos:start="85:34" pos:end="85:37">buf1</name></expr></argument>, <argument pos:start="85:40" pos:end="85:51"><expr pos:start="85:40" pos:end="85:51"><name pos:start="85:40" pos:end="85:51"><name pos:start="85:40" pos:end="85:42">dec</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:51">pix_fmt</name></name></expr></argument>, <argument pos:start="85:54" pos:end="85:63"><expr pos:start="85:54" pos:end="85:63"><name pos:start="85:54" pos:end="85:63"><name pos:start="85:54" pos:end="85:56">dec</name><operator pos:start="85:57" pos:end="85:58">-&gt;</operator><name pos:start="85:59" pos:end="85:63">width</name></name></expr></argument>, <argument pos:start="85:66" pos:end="85:76"><expr pos:start="85:66" pos:end="85:76"><name pos:start="85:66" pos:end="85:76"><name pos:start="85:66" pos:end="85:68">dec</name><operator pos:start="85:69" pos:end="85:70">-&gt;</operator><name pos:start="85:71" pos:end="85:76">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="101:9"><if pos:start="89:9" pos:end="101:9">if <condition pos:start="89:12" pos:end="91:77">(<expr pos:start="89:13" pos:end="91:76"><call pos:start="89:13" pos:end="91:72"><name pos:start="89:13" pos:end="89:33">avpicture_deinterlace</name><argument_list pos:start="89:34" pos:end="91:72">(<argument pos:start="89:35" pos:end="89:42"><expr pos:start="89:35" pos:end="89:42"><name pos:start="89:35" pos:end="89:42">picture2</name></expr></argument>, <argument pos:start="89:45" pos:end="89:52"><expr pos:start="89:45" pos:end="89:52"><name pos:start="89:45" pos:end="89:52">picture1</name></expr></argument>, 

                                  <argument pos:start="91:35" pos:end="91:46"><expr pos:start="91:35" pos:end="91:46"><name pos:start="91:35" pos:end="91:46"><name pos:start="91:35" pos:end="91:37">dec</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:46">pix_fmt</name></name></expr></argument>, <argument pos:start="91:49" pos:end="91:58"><expr pos:start="91:49" pos:end="91:58"><name pos:start="91:49" pos:end="91:58"><name pos:start="91:49" pos:end="91:51">dec</name><operator pos:start="91:52" pos:end="91:53">-&gt;</operator><name pos:start="91:54" pos:end="91:58">width</name></name></expr></argument>, <argument pos:start="91:61" pos:end="91:71"><expr pos:start="91:61" pos:end="91:71"><name pos:start="91:61" pos:end="91:71"><name pos:start="91:61" pos:end="91:63">dec</name><operator pos:start="91:64" pos:end="91:65">-&gt;</operator><name pos:start="91:66" pos:end="91:71">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:74" pos:end="91:74">&lt;</operator> <literal type="number" pos:start="91:76" pos:end="91:76">0</literal></expr>)</condition> <block pos:start="91:79" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:32">

            <comment type="block" pos:start="93:13" pos:end="93:46">/* if error, do not deinterlace */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:26"><expr pos:start="95:13" pos:end="95:25"><call pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:19">av_free</name><argument_list pos:start="95:20" pos:end="95:25">(<argument pos:start="95:21" pos:end="95:24"><expr pos:start="95:21" pos:end="95:24"><name pos:start="95:21" pos:end="95:24">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:24"><expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:16">buf1</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:23">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:32"><expr pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:20">picture2</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:31">picture1</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="107:5">else <block pos:start="103:12" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:28">

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:16">picture2</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:27">picture1</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:40">/* convert pixel format if needed */</comment>

    <if_stmt pos:start="113:5" pos:end="151:5"><if pos:start="113:5" pos:end="147:5">if <condition pos:start="113:8" pos:end="113:37">(<expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:11">enc</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:20">pix_fmt</name></name> <operator pos:start="113:22" pos:end="113:23">!=</operator> <name pos:start="113:25" pos:end="113:36"><name pos:start="113:25" pos:end="113:27">dec</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:36">pix_fmt</name></name></expr>)</condition> <block pos:start="113:39" pos:end="147:5">{<block_content pos:start="115:9" pos:end="145:9">

        <decl_stmt pos:start="115:9" pos:end="115:17"><decl pos:start="115:9" pos:end="115:16"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:16">size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="119:9" pos:end="119:38">/* create temporary picture */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:73"><expr pos:start="121:9" pos:end="121:72"><name pos:start="121:9" pos:end="121:12">size</name> <operator pos:start="121:14" pos:end="121:14">=</operator> <call pos:start="121:16" pos:end="121:72"><name pos:start="121:16" pos:end="121:33">avpicture_get_size</name><argument_list pos:start="121:34" pos:end="121:72">(<argument pos:start="121:35" pos:end="121:46"><expr pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:37">enc</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:46">pix_fmt</name></name></expr></argument>, <argument pos:start="121:49" pos:end="121:58"><expr pos:start="121:49" pos:end="121:58"><name pos:start="121:49" pos:end="121:58"><name pos:start="121:49" pos:end="121:51">dec</name><operator pos:start="121:52" pos:end="121:53">-&gt;</operator><name pos:start="121:54" pos:end="121:58">width</name></name></expr></argument>, <argument pos:start="121:61" pos:end="121:71"><expr pos:start="121:61" pos:end="121:71"><name pos:start="121:61" pos:end="121:71"><name pos:start="121:61" pos:end="121:63">dec</name><operator pos:start="121:64" pos:end="121:65">-&gt;</operator><name pos:start="121:66" pos:end="121:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:30"><expr pos:start="123:9" pos:end="123:29"><name pos:start="123:9" pos:end="123:11">buf</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:29"><name pos:start="123:15" pos:end="123:23">av_malloc</name><argument_list pos:start="123:24" pos:end="123:29">(<argument pos:start="123:25" pos:end="123:28"><expr pos:start="123:25" pos:end="123:28"><name pos:start="123:25" pos:end="123:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:19"><if pos:start="125:9" pos:end="127:19">if <condition pos:start="125:12" pos:end="125:17">(<expr pos:start="125:13" pos:end="125:16"><operator pos:start="125:13" pos:end="125:13">!</operator><name pos:start="125:14" pos:end="125:16">buf</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:19"><block_content pos:start="127:13" pos:end="127:19">

            <return pos:start="127:13" pos:end="127:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:12">pict</name> <operator pos:start="129:14" pos:end="129:14">=</operator> <operator pos:start="129:16" pos:end="129:16">&amp;</operator><name pos:start="129:17" pos:end="129:28">picture_tmp1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:73"><expr pos:start="131:9" pos:end="131:72"><call pos:start="131:9" pos:end="131:72"><name pos:start="131:9" pos:end="131:22">avpicture_fill</name><argument_list pos:start="131:23" pos:end="131:72">(<argument pos:start="131:24" pos:end="131:27"><expr pos:start="131:24" pos:end="131:27"><name pos:start="131:24" pos:end="131:27">pict</name></expr></argument>, <argument pos:start="131:30" pos:end="131:32"><expr pos:start="131:30" pos:end="131:32"><name pos:start="131:30" pos:end="131:32">buf</name></expr></argument>, <argument pos:start="131:35" pos:end="131:46"><expr pos:start="131:35" pos:end="131:46"><name pos:start="131:35" pos:end="131:46"><name pos:start="131:35" pos:end="131:37">enc</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:46">pix_fmt</name></name></expr></argument>, <argument pos:start="131:49" pos:end="131:58"><expr pos:start="131:49" pos:end="131:58"><name pos:start="131:49" pos:end="131:58"><name pos:start="131:49" pos:end="131:51">dec</name><operator pos:start="131:52" pos:end="131:53">-&gt;</operator><name pos:start="131:54" pos:end="131:58">width</name></name></expr></argument>, <argument pos:start="131:61" pos:end="131:71"><expr pos:start="131:61" pos:end="131:71"><name pos:start="131:61" pos:end="131:71"><name pos:start="131:61" pos:end="131:63">dec</name><operator pos:start="131:64" pos:end="131:65">-&gt;</operator><name pos:start="131:66" pos:end="131:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="135:9" pos:end="145:9"><if pos:start="135:9" pos:end="145:9">if <condition pos:start="135:12" pos:end="139:53">(<expr pos:start="135:13" pos:end="139:52"><call pos:start="135:13" pos:end="139:48"><name pos:start="135:13" pos:end="135:23">img_convert</name><argument_list pos:start="135:24" pos:end="139:48">(<argument pos:start="135:25" pos:end="135:28"><expr pos:start="135:25" pos:end="135:28"><name pos:start="135:25" pos:end="135:28">pict</name></expr></argument>, <argument pos:start="135:31" pos:end="135:42"><expr pos:start="135:31" pos:end="135:42"><name pos:start="135:31" pos:end="135:42"><name pos:start="135:31" pos:end="135:33">enc</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:42">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="137:25" pos:end="137:32"><expr pos:start="137:25" pos:end="137:32"><name pos:start="137:25" pos:end="137:32">picture2</name></expr></argument>, <argument pos:start="137:35" pos:end="137:46"><expr pos:start="137:35" pos:end="137:46"><name pos:start="137:35" pos:end="137:46"><name pos:start="137:35" pos:end="137:37">dec</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:46">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="139:25" pos:end="139:34"><expr pos:start="139:25" pos:end="139:34"><name pos:start="139:25" pos:end="139:34"><name pos:start="139:25" pos:end="139:27">dec</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:34">width</name></name></expr></argument>, <argument pos:start="139:37" pos:end="139:47"><expr pos:start="139:37" pos:end="139:47"><name pos:start="139:37" pos:end="139:47"><name pos:start="139:37" pos:end="139:39">dec</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:47">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="139:50" pos:end="139:50">&lt;</operator> <literal type="number" pos:start="139:52" pos:end="139:52">0</literal></expr>)</condition> <block pos:start="139:55" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:25">

            <expr_stmt pos:start="141:13" pos:end="141:69"><expr pos:start="141:13" pos:end="141:68"><call pos:start="141:13" pos:end="141:68"><name pos:start="141:13" pos:end="141:19">fprintf</name><argument_list pos:start="141:20" pos:end="141:68">(<argument pos:start="141:21" pos:end="141:26"><expr pos:start="141:21" pos:end="141:26"><name pos:start="141:21" pos:end="141:26">stderr</name></expr></argument>, <argument pos:start="141:29" pos:end="141:67"><expr pos:start="141:29" pos:end="141:67"><literal type="string" pos:start="141:29" pos:end="141:67">"pixel format conversion not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="143:13" pos:end="143:25">goto <name pos:start="143:18" pos:end="143:24">the_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="147:7" pos:end="151:5">else <block pos:start="147:12" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:24">

        <expr_stmt pos:start="149:9" pos:end="149:24"><expr pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:12">pict</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <name pos:start="149:16" pos:end="149:23">picture2</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="155:5" pos:end="157:33">/* XXX: resampling could be done before raw format convertion in

       some cases to go faster */</comment>

    <comment type="block" pos:start="159:5" pos:end="159:37">/* XXX: only works for YUV420P */</comment>

    <if_stmt pos:start="161:5" pos:end="171:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:28">(<expr pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:11">ost</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:27">video_resample</name></name></expr>)</condition> <block pos:start="161:30" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:59">

        <expr_stmt pos:start="163:9" pos:end="163:33"><expr pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:15">picture</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <operator pos:start="163:19" pos:end="163:19">&amp;</operator><name pos:start="163:20" pos:end="163:32"><name pos:start="163:20" pos:end="163:22">ost</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:32">pict_tmp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:59"><expr pos:start="165:9" pos:end="165:58"><call pos:start="165:9" pos:end="165:58"><name pos:start="165:9" pos:end="165:20">img_resample</name><argument_list pos:start="165:21" pos:end="165:58">(<argument pos:start="165:22" pos:end="165:42"><expr pos:start="165:22" pos:end="165:42"><name pos:start="165:22" pos:end="165:42"><name pos:start="165:22" pos:end="165:24">ost</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:42">img_resample_ctx</name></name></expr></argument>, <argument pos:start="165:45" pos:end="165:51"><expr pos:start="165:45" pos:end="165:51"><name pos:start="165:45" pos:end="165:51">picture</name></expr></argument>, <argument pos:start="165:54" pos:end="165:57"><expr pos:start="165:54" pos:end="165:57"><name pos:start="165:54" pos:end="165:57">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="171:5">else <block pos:start="167:12" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:23">

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:15">picture</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <name pos:start="169:19" pos:end="169:22">pict</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:9"><expr pos:start="173:5" pos:end="173:8"><name pos:start="173:5" pos:end="173:6">nb</name><operator pos:start="173:7" pos:end="173:7">=</operator><literal type="number" pos:start="173:8" pos:end="173:8">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="175:5" pos:end="175:36">/* duplicates frame if needed */</comment>

    <comment type="block" pos:start="177:5" pos:end="177:41">/* XXX: pb because no interleaving */</comment>

    <for pos:start="179:5" pos:end="219:5">for<control pos:start="179:8" pos:end="179:21">(<init pos:start="179:9" pos:end="179:12"><expr pos:start="179:9" pos:end="179:11"><name pos:start="179:9" pos:end="179:9">i</name><operator pos:start="179:10" pos:end="179:10">=</operator><literal type="number" pos:start="179:11" pos:end="179:11">0</literal></expr>;</init><condition pos:start="179:13" pos:end="179:17"><expr pos:start="179:13" pos:end="179:16"><name pos:start="179:13" pos:end="179:13">i</name><operator pos:start="179:14" pos:end="179:14">&lt;</operator><name pos:start="179:15" pos:end="179:16">nb</name></expr>;</condition><incr pos:start="179:18" pos:end="179:20"><expr pos:start="179:18" pos:end="179:20"><name pos:start="179:18" pos:end="179:18">i</name><operator pos:start="179:19" pos:end="179:20">++</operator></expr></incr>)</control> <block pos:start="179:23" pos:end="219:5">{<block_content pos:start="181:9" pos:end="217:9">

        <if_stmt pos:start="181:9" pos:end="217:9"><if pos:start="181:9" pos:end="213:9">if <condition pos:start="181:12" pos:end="181:47">(<expr pos:start="181:13" pos:end="181:46"><name pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:15">enc</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:25">codec_id</name></name> <operator pos:start="181:27" pos:end="181:28">!=</operator> <name pos:start="181:30" pos:end="181:46">CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="181:49" pos:end="213:9">{<block_content pos:start="187:13" pos:end="205:30">

            <comment type="block" pos:start="183:13" pos:end="185:40">/* handles sameq here. This is not correct because it may

               not be a global option */</comment>

            <if_stmt pos:start="187:13" pos:end="191:13"><if pos:start="187:13" pos:end="191:13">if <condition pos:start="187:16" pos:end="187:29">(<expr pos:start="187:17" pos:end="187:28"><name pos:start="187:17" pos:end="187:28">same_quality</name></expr>)</condition> <block pos:start="187:31" pos:end="191:13">{<block_content pos:start="189:17" pos:end="189:44">

                <expr_stmt pos:start="189:17" pos:end="189:44"><expr pos:start="189:17" pos:end="189:43"><name pos:start="189:17" pos:end="189:28"><name pos:start="189:17" pos:end="189:19">enc</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:28">quality</name></name> <operator pos:start="189:30" pos:end="189:30">=</operator> <name pos:start="189:32" pos:end="189:43"><name pos:start="189:32" pos:end="189:34">dec</name><operator pos:start="189:35" pos:end="189:36">-&gt;</operator><name pos:start="189:37" pos:end="189:43">quality</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            

            <expr_stmt pos:start="195:13" pos:end="199:48"><expr pos:start="195:13" pos:end="199:47"><name pos:start="195:13" pos:end="195:15">ret</name> <operator pos:start="195:17" pos:end="195:17">=</operator> <call pos:start="195:19" pos:end="199:47"><name pos:start="195:19" pos:end="195:38">avcodec_encode_video</name><argument_list pos:start="195:39" pos:end="199:47">(<argument pos:start="195:40" pos:end="195:42"><expr pos:start="195:40" pos:end="195:42"><name pos:start="195:40" pos:end="195:42">enc</name></expr></argument>, 

                                       <argument pos:start="197:40" pos:end="197:51"><expr pos:start="197:40" pos:end="197:51"><name pos:start="197:40" pos:end="197:51">video_buffer</name></expr></argument>, <argument pos:start="197:54" pos:end="197:70"><expr pos:start="197:54" pos:end="197:70"><name pos:start="197:54" pos:end="197:70">VIDEO_BUFFER_SIZE</name></expr></argument>,

                                       <argument pos:start="199:40" pos:end="199:46"><expr pos:start="199:40" pos:end="199:46"><name pos:start="199:40" pos:end="199:46">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="201:13" pos:end="201:53">//enc-&gt;frame_number = enc-&gt;real_pict_num;</comment>

            <expr_stmt pos:start="203:13" pos:end="203:74"><expr pos:start="203:13" pos:end="203:73"><call pos:start="203:13" pos:end="203:73"><name pos:start="203:13" pos:end="203:36"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:22">oformat</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:36">write_packet</name></name><argument_list pos:start="203:37" pos:end="203:73">(<argument pos:start="203:38" pos:end="203:38"><expr pos:start="203:38" pos:end="203:38"><name pos:start="203:38" pos:end="203:38">s</name></expr></argument>, <argument pos:start="203:41" pos:end="203:50"><expr pos:start="203:41" pos:end="203:50"><name pos:start="203:41" pos:end="203:50"><name pos:start="203:41" pos:end="203:43">ost</name><operator pos:start="203:44" pos:end="203:45">-&gt;</operator><name pos:start="203:46" pos:end="203:50">index</name></name></expr></argument>, <argument pos:start="203:53" pos:end="203:64"><expr pos:start="203:53" pos:end="203:64"><name pos:start="203:53" pos:end="203:64">video_buffer</name></expr></argument>, <argument pos:start="203:67" pos:end="203:69"><expr pos:start="203:67" pos:end="203:69"><name pos:start="203:67" pos:end="203:69">ret</name></expr></argument>, <argument pos:start="203:72" pos:end="203:72"><expr pos:start="203:72" pos:end="203:72"><literal type="number" pos:start="203:72" pos:end="203:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:30"><expr pos:start="205:13" pos:end="205:29"><operator pos:start="205:13" pos:end="205:13">*</operator><name pos:start="205:14" pos:end="205:23">frame_size</name> <operator pos:start="205:25" pos:end="205:25">=</operator> <name pos:start="205:27" pos:end="205:29">ret</name></expr>;</expr_stmt>

            <comment type="line" pos:start="207:13" pos:end="207:67">//fprintf(stderr,"\nFrame: %3d %3d size: %5d type: %d",</comment>

            <comment type="line" pos:start="209:13" pos:end="209:67">//        enc-&gt;frame_number-1, enc-&gt;real_pict_num, ret,</comment>

            <comment type="line" pos:start="211:13" pos:end="211:38">//        enc-&gt;pict_type);</comment>

        </block_content>}</block></if> <else pos:start="213:11" pos:end="217:9">else <block pos:start="213:16" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:89">

            <expr_stmt pos:start="215:13" pos:end="215:89"><expr pos:start="215:13" pos:end="215:88"><call pos:start="215:13" pos:end="215:88"><name pos:start="215:13" pos:end="215:25">write_picture</name><argument_list pos:start="215:26" pos:end="215:88">(<argument pos:start="215:27" pos:end="215:27"><expr pos:start="215:27" pos:end="215:27"><name pos:start="215:27" pos:end="215:27">s</name></expr></argument>, <argument pos:start="215:30" pos:end="215:39"><expr pos:start="215:30" pos:end="215:39"><name pos:start="215:30" pos:end="215:39"><name pos:start="215:30" pos:end="215:32">ost</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:39">index</name></name></expr></argument>, <argument pos:start="215:42" pos:end="215:48"><expr pos:start="215:42" pos:end="215:48"><name pos:start="215:42" pos:end="215:48">picture</name></expr></argument>, <argument pos:start="215:51" pos:end="215:62"><expr pos:start="215:51" pos:end="215:62"><name pos:start="215:51" pos:end="215:62"><name pos:start="215:51" pos:end="215:53">enc</name><operator pos:start="215:54" pos:end="215:55">-&gt;</operator><name pos:start="215:56" pos:end="215:62">pix_fmt</name></name></expr></argument>, <argument pos:start="215:65" pos:end="215:74"><expr pos:start="215:65" pos:end="215:74"><name pos:start="215:65" pos:end="215:74"><name pos:start="215:65" pos:end="215:67">enc</name><operator pos:start="215:68" pos:end="215:69">-&gt;</operator><name pos:start="215:70" pos:end="215:74">width</name></name></expr></argument>, <argument pos:start="215:77" pos:end="215:87"><expr pos:start="215:77" pos:end="215:87"><name pos:start="215:77" pos:end="215:87"><name pos:start="215:77" pos:end="215:79">enc</name><operator pos:start="215:80" pos:end="215:81">-&gt;</operator><name pos:start="215:82" pos:end="215:87">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <label pos:start="221:5" pos:end="221:12"><name pos:start="221:5" pos:end="221:11">the_end</name>:</label>

    <expr_stmt pos:start="223:5" pos:end="223:17"><expr pos:start="223:5" pos:end="223:16"><call pos:start="223:5" pos:end="223:16"><name pos:start="223:5" pos:end="223:11">av_free</name><argument_list pos:start="223:12" pos:end="223:16">(<argument pos:start="223:13" pos:end="223:15"><expr pos:start="223:13" pos:end="223:15"><name pos:start="223:13" pos:end="223:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:18"><expr pos:start="225:5" pos:end="225:17"><call pos:start="225:5" pos:end="225:17"><name pos:start="225:5" pos:end="225:11">av_free</name><argument_list pos:start="225:12" pos:end="225:17">(<argument pos:start="225:13" pos:end="225:16"><expr pos:start="225:13" pos:end="225:16"><name pos:start="225:13" pos:end="225:16">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:26"><expr pos:start="227:5" pos:end="227:25"><call pos:start="227:5" pos:end="227:25"><name pos:start="227:5" pos:end="227:11">av_free</name><argument_list pos:start="227:12" pos:end="227:25">(<argument pos:start="227:13" pos:end="227:24"><expr pos:start="227:13" pos:end="227:24"><name pos:start="227:13" pos:end="227:24">video_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
