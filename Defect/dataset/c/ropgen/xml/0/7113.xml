<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7113.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">virtio_scsi_do_tmf</name><parameter_list pos:start="1:30" pos:end="1:64">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">VirtIOSCSI</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:58">VirtIOSCSIReq</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="271:1">{<block_content pos:start="5:5" pos:end="269:15">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">d</name> <init pos:start="5:19" pos:end="5:64">= <expr pos:start="5:21" pos:end="5:64"><call pos:start="5:21" pos:end="5:64"><name pos:start="5:21" pos:end="5:43">virtio_scsi_device_find</name><argument_list pos:start="5:44" pos:end="5:64">(<argument pos:start="5:45" pos:end="5:45"><expr pos:start="5:45" pos:end="5:45"><name pos:start="5:45" pos:end="5:45">s</name></expr></argument>, <argument pos:start="5:48" pos:end="5:63"><expr pos:start="5:48" pos:end="5:63"><name pos:start="5:48" pos:end="5:63"><name pos:start="5:48" pos:end="5:50">req</name><operator pos:start="5:51" pos:end="5:52">-&gt;</operator><name pos:start="5:53" pos:end="5:55">req</name><operator pos:start="5:56" pos:end="5:56">.</operator><name pos:start="5:57" pos:end="5:59">tmf</name><operator pos:start="5:60" pos:end="5:60">.</operator><name pos:start="5:61" pos:end="5:63">lun</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIRequest</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">r</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusChild</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">kid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">target</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:75">(<expr pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:28">dataplane_started</name></name> <operator pos:start="17:30" pos:end="17:31">&amp;&amp;</operator> <call pos:start="17:33" pos:end="17:64"><name pos:start="17:33" pos:end="17:52">bdrv_get_aio_context</name><argument_list pos:start="17:53" pos:end="17:64">(<argument pos:start="17:54" pos:end="17:63"><expr pos:start="17:54" pos:end="17:63"><name pos:start="17:54" pos:end="17:63"><name pos:start="17:54" pos:end="17:54">d</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:60">conf</name><operator pos:start="17:61" pos:end="17:61">.</operator><name pos:start="17:62" pos:end="17:63">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:66" pos:end="17:67">!=</operator> <name pos:start="17:69" pos:end="17:74"><name pos:start="17:69" pos:end="17:69">s</name><operator pos:start="17:70" pos:end="17:71">-&gt;</operator><name pos:start="17:72" pos:end="17:74">ctx</name></name></expr>)</condition> <block pos:start="17:77" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:36">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:27">aio_context_acquire</name><argument_list pos:start="19:28" pos:end="19:35">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:34">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><call pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:28">bdrv_set_aio_context</name><argument_list pos:start="21:29" pos:end="21:48">(<argument pos:start="21:30" pos:end="21:39"><expr pos:start="21:30" pos:end="21:39"><name pos:start="21:30" pos:end="21:39"><name pos:start="21:30" pos:end="21:30">d</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:36">conf</name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:39">bs</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:47"><expr pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:42">s</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:47">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><call pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:27">aio_context_release</name><argument_list pos:start="23:28" pos:end="23:35">(<argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><name pos:start="23:29" pos:end="23:34"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:34">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:59">/* Here VIRTIO_SCSI_S_OK means "FUNCTION COMPLETE".  */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:7">req</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">resp</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:17">tmf</name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:26">response</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:45">VIRTIO_SCSI_S_OK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:61"><expr pos:start="33:5" pos:end="33:60"><call pos:start="33:5" pos:end="33:60"><name pos:start="33:5" pos:end="33:19">virtio_tswap32s</name><argument_list pos:start="33:20" pos:end="33:60">(<argument pos:start="33:21" pos:end="33:36"><expr pos:start="33:21" pos:end="33:36"><call pos:start="33:21" pos:end="33:36"><name pos:start="33:21" pos:end="33:33">VIRTIO_DEVICE</name><argument_list pos:start="33:34" pos:end="33:36">(<argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><name pos:start="33:35" pos:end="33:35">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:39" pos:end="33:59"><expr pos:start="33:39" pos:end="33:59"><operator pos:start="33:39" pos:end="33:39">&amp;</operator><name pos:start="33:40" pos:end="33:59"><name pos:start="33:40" pos:end="33:42">req</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:47">req</name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:51">tmf</name><operator pos:start="33:52" pos:end="33:52">.</operator><name pos:start="33:53" pos:end="33:59">subtype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="35:5" pos:end="249:5">switch <condition pos:start="35:12" pos:end="35:33">(<expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:15">req</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:20">req</name><operator pos:start="35:21" pos:end="35:21">.</operator><name pos:start="35:22" pos:end="35:24">tmf</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:32">subtype</name></name></expr>)</condition> <block pos:start="35:35" pos:end="249:5">{<block_content pos:start="37:5" pos:end="247:14">

    <case pos:start="37:5" pos:end="37:38">case <expr pos:start="37:10" pos:end="37:37"><name pos:start="37:10" pos:end="37:37">VIRTIO_SCSI_T_TMF_ABORT_TASK</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:38">case <expr pos:start="39:10" pos:end="39:37"><name pos:start="39:10" pos:end="39:37">VIRTIO_SCSI_T_TMF_QUERY_TASK</name></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:15">(<expr pos:start="41:13" pos:end="41:14"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:14">d</name></expr>)</condition> <block pos:start="41:17" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:22">

            <goto pos:start="43:13" pos:end="43:22">goto <name pos:start="43:18" pos:end="43:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:60">(<expr pos:start="47:13" pos:end="47:59"><name pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:13">d</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">lun</name></name> <operator pos:start="47:20" pos:end="47:21">!=</operator> <call pos:start="47:23" pos:end="47:59"><name pos:start="47:23" pos:end="47:41">virtio_scsi_get_lun</name><argument_list pos:start="47:42" pos:end="47:59">(<argument pos:start="47:43" pos:end="47:58"><expr pos:start="47:43" pos:end="47:58"><name pos:start="47:43" pos:end="47:58"><name pos:start="47:43" pos:end="47:45">req</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:50">req</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:54">tmf</name><operator pos:start="47:55" pos:end="47:55">.</operator><name pos:start="47:56" pos:end="47:58">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:62" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:31">

            <goto pos:start="49:13" pos:end="49:31">goto <name pos:start="49:18" pos:end="49:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="53:9" pos:end="53:56"><name pos:start="53:9" pos:end="53:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="53:28" pos:end="53:56">(<argument pos:start="53:29" pos:end="53:29">r</argument>, <argument pos:start="53:32" pos:end="53:43">&amp;d-&gt;requests</argument>, <argument pos:start="53:46" pos:end="53:49">next</argument>, <argument pos:start="53:52" pos:end="53:55">next</argument>)</argument_list></macro> <block pos:start="53:58" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:13">

            <decl_stmt pos:start="55:13" pos:end="55:52"><decl pos:start="55:13" pos:end="55:51"><type pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:25">VirtIOSCSIReq</name> <modifier pos:start="55:27" pos:end="55:27">*</modifier></type><name pos:start="55:28" pos:end="55:34">cmd_req</name> <init pos:start="55:36" pos:end="55:51">= <expr pos:start="55:38" pos:end="55:51"><name pos:start="55:38" pos:end="55:51"><name pos:start="55:38" pos:end="55:38">r</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:51">hba_private</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="57:13" pos:end="61:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:68">(<expr pos:start="57:17" pos:end="57:67"><name pos:start="57:17" pos:end="57:23">cmd_req</name> <operator pos:start="57:25" pos:end="57:26">&amp;&amp;</operator> <name pos:start="57:28" pos:end="57:47"><name pos:start="57:28" pos:end="57:34">cmd_req</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:39">req</name><operator pos:start="57:40" pos:end="57:40">.</operator><name pos:start="57:41" pos:end="57:43">cmd</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:47">tag</name></name> <operator pos:start="57:49" pos:end="57:50">==</operator> <name pos:start="57:52" pos:end="57:67"><name pos:start="57:52" pos:end="57:54">req</name><operator pos:start="57:55" pos:end="57:56">-&gt;</operator><name pos:start="57:57" pos:end="57:59">req</name><operator pos:start="57:60" pos:end="57:60">.</operator><name pos:start="57:61" pos:end="57:63">tmf</name><operator pos:start="57:64" pos:end="57:64">.</operator><name pos:start="57:65" pos:end="57:67">tag</name></name></expr>)</condition> <block pos:start="57:70" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:22">

                <break pos:start="59:17" pos:end="59:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="65:9" pos:end="107:9"><if pos:start="65:9" pos:end="107:9">if <condition pos:start="65:12" pos:end="65:14">(<expr pos:start="65:13" pos:end="65:13"><name pos:start="65:13" pos:end="65:13">r</name></expr>)</condition> <block pos:start="65:16" pos:end="107:9">{<block_content pos:start="75:13" pos:end="105:13">

            <comment type="block" pos:start="67:13" pos:end="73:15">/*

             * Assert that the request has not been completed yet, we

             * check for it in the loop above.

             */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:35"><expr pos:start="75:13" pos:end="75:34"><call pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:18">assert</name><argument_list pos:start="75:19" pos:end="75:34">(<argument pos:start="75:20" pos:end="75:33"><expr pos:start="75:20" pos:end="75:33"><name pos:start="75:20" pos:end="75:33"><name pos:start="75:20" pos:end="75:20">r</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:33">hba_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="105:13"><if pos:start="77:13" pos:end="87:13">if <condition pos:start="77:16" pos:end="77:69">(<expr pos:start="77:17" pos:end="77:68"><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:19">req</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:24">req</name><operator pos:start="77:25" pos:end="77:25">.</operator><name pos:start="77:26" pos:end="77:28">tmf</name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:36">subtype</name></name> <operator pos:start="77:38" pos:end="77:39">==</operator> <name pos:start="77:41" pos:end="77:68">VIRTIO_SCSI_T_TMF_QUERY_TASK</name></expr>)</condition> <block pos:start="77:71" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:74">

                <comment type="block" pos:start="79:17" pos:end="83:19">/* "If the specified command is present in the task set, then

                 * return a service response set to FUNCTION SUCCEEDED".

                 */</comment>

                <expr_stmt pos:start="85:17" pos:end="85:74"><expr pos:start="85:17" pos:end="85:73"><name pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:19">req</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:25">resp</name><operator pos:start="85:26" pos:end="85:26">.</operator><name pos:start="85:27" pos:end="85:29">tmf</name><operator pos:start="85:30" pos:end="85:30">.</operator><name pos:start="85:31" pos:end="85:38">response</name></name> <operator pos:start="85:40" pos:end="85:40">=</operator> <name pos:start="85:42" pos:end="85:73">VIRTIO_SCSI_S_FUNCTION_SUCCEEDED</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="105:13">else <block pos:start="87:20" pos:end="105:13">{<block_content pos:start="89:17" pos:end="103:35">

                <decl_stmt pos:start="89:17" pos:end="89:51"><decl pos:start="89:17" pos:end="89:50"><type pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:40">VirtIOSCSICancelNotifier</name> <modifier pos:start="89:42" pos:end="89:42">*</modifier></type><name pos:start="89:43" pos:end="89:50">notifier</name></decl>;</decl_stmt>



                <expr_stmt pos:start="93:17" pos:end="93:35"><expr pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:19">req</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:30">remaining</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <literal type="number" pos:start="93:34" pos:end="93:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:65"><expr pos:start="95:17" pos:end="95:64"><name pos:start="95:17" pos:end="95:24">notifier</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:64"><name pos:start="95:28" pos:end="95:38">g_slice_new</name><argument_list pos:start="95:39" pos:end="95:64">(<argument pos:start="95:40" pos:end="95:63"><expr pos:start="95:40" pos:end="95:63"><name pos:start="95:40" pos:end="95:63">VirtIOSCSICancelNotifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:40"><expr pos:start="97:17" pos:end="97:39"><name pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:24">notifier</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:33">tmf_req</name></name> <operator pos:start="97:35" pos:end="97:35">=</operator> <name pos:start="97:37" pos:end="97:39">req</name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:70"><expr pos:start="99:17" pos:end="99:69"><name pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:24">notifier</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:34">notifier</name><operator pos:start="99:35" pos:end="99:35">.</operator><name pos:start="99:36" pos:end="99:41">notify</name></name> <operator pos:start="99:43" pos:end="99:43">=</operator> <name pos:start="99:45" pos:end="99:69">virtio_scsi_cancel_notify</name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:62"><expr pos:start="101:17" pos:end="101:61"><call pos:start="101:17" pos:end="101:61"><name pos:start="101:17" pos:end="101:37">scsi_req_cancel_async</name><argument_list pos:start="101:38" pos:end="101:61">(<argument pos:start="101:39" pos:end="101:39"><expr pos:start="101:39" pos:end="101:39"><name pos:start="101:39" pos:end="101:39">r</name></expr></argument>, <argument pos:start="101:42" pos:end="101:60"><expr pos:start="101:42" pos:end="101:60"><operator pos:start="101:42" pos:end="101:42">&amp;</operator><name pos:start="101:43" pos:end="101:60"><name pos:start="101:43" pos:end="101:50">notifier</name><operator pos:start="101:51" pos:end="101:52">-&gt;</operator><name pos:start="101:53" pos:end="101:60">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:19">ret</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <operator pos:start="103:23" pos:end="103:23">-</operator><name pos:start="103:24" pos:end="103:34">EINPROGRESS</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>



    <case pos:start="113:5" pos:end="113:46">case <expr pos:start="113:10" pos:end="113:45"><name pos:start="113:10" pos:end="113:45">VIRTIO_SCSI_T_TMF_LOGICAL_UNIT_RESET</name></expr>:</case>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:15">(<expr pos:start="115:13" pos:end="115:14"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:14">d</name></expr>)</condition> <block pos:start="115:17" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:22">

            <goto pos:start="117:13" pos:end="117:22">goto <name pos:start="117:18" pos:end="117:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:60">(<expr pos:start="121:13" pos:end="121:59"><name pos:start="121:13" pos:end="121:18"><name pos:start="121:13" pos:end="121:13">d</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:18">lun</name></name> <operator pos:start="121:20" pos:end="121:21">!=</operator> <call pos:start="121:23" pos:end="121:59"><name pos:start="121:23" pos:end="121:41">virtio_scsi_get_lun</name><argument_list pos:start="121:42" pos:end="121:59">(<argument pos:start="121:43" pos:end="121:58"><expr pos:start="121:43" pos:end="121:58"><name pos:start="121:43" pos:end="121:58"><name pos:start="121:43" pos:end="121:45">req</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:50">req</name><operator pos:start="121:51" pos:end="121:51">.</operator><name pos:start="121:52" pos:end="121:54">tmf</name><operator pos:start="121:55" pos:end="121:55">.</operator><name pos:start="121:56" pos:end="121:58">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:62" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:31">

            <goto pos:start="123:13" pos:end="123:31">goto <name pos:start="123:18" pos:end="123:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:20">resetting</name></name><operator pos:start="127:21" pos:end="127:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><call pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:22">qdev_reset_all</name><argument_list pos:start="129:23" pos:end="129:32">(<argument pos:start="129:24" pos:end="129:31"><expr pos:start="129:24" pos:end="129:31"><operator pos:start="129:24" pos:end="129:24">&amp;</operator><name pos:start="129:25" pos:end="129:31"><name pos:start="129:25" pos:end="129:25">d</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:31">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:20">resetting</name></name><operator pos:start="131:21" pos:end="131:22">--</operator></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>



    <case pos:start="137:5" pos:end="137:42">case <expr pos:start="137:10" pos:end="137:41"><name pos:start="137:10" pos:end="137:41">VIRTIO_SCSI_T_TMF_ABORT_TASK_SET</name></expr>:</case>

    <case pos:start="139:5" pos:end="139:42">case <expr pos:start="139:10" pos:end="139:41"><name pos:start="139:10" pos:end="139:41">VIRTIO_SCSI_T_TMF_CLEAR_TASK_SET</name></expr>:</case>

    <case pos:start="141:5" pos:end="141:42">case <expr pos:start="141:10" pos:end="141:41"><name pos:start="141:10" pos:end="141:41">VIRTIO_SCSI_T_TMF_QUERY_TASK_SET</name></expr>:</case>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:15">(<expr pos:start="143:13" pos:end="143:14"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:14">d</name></expr>)</condition> <block pos:start="143:17" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:22">

            <goto pos:start="145:13" pos:end="145:22">goto <name pos:start="145:18" pos:end="145:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="153:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:60">(<expr pos:start="149:13" pos:end="149:59"><name pos:start="149:13" pos:end="149:18"><name pos:start="149:13" pos:end="149:13">d</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:18">lun</name></name> <operator pos:start="149:20" pos:end="149:21">!=</operator> <call pos:start="149:23" pos:end="149:59"><name pos:start="149:23" pos:end="149:41">virtio_scsi_get_lun</name><argument_list pos:start="149:42" pos:end="149:59">(<argument pos:start="149:43" pos:end="149:58"><expr pos:start="149:43" pos:end="149:58"><name pos:start="149:43" pos:end="149:58"><name pos:start="149:43" pos:end="149:45">req</name><operator pos:start="149:46" pos:end="149:47">-&gt;</operator><name pos:start="149:48" pos:end="149:50">req</name><operator pos:start="149:51" pos:end="149:51">.</operator><name pos:start="149:52" pos:end="149:54">tmf</name><operator pos:start="149:55" pos:end="149:55">.</operator><name pos:start="149:56" pos:end="149:58">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:62" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:31">

            <goto pos:start="151:13" pos:end="151:31">goto <name pos:start="151:18" pos:end="151:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="157:9" pos:end="165:11">/* Add 1 to "remaining" until virtio_scsi_do_tmf returns.

         * This way, if the bus starts calling back to the notifiers

         * even before we finish the loop, virtio_scsi_cancel_notify

         * will not complete the TMF too early.

         */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:27"><expr pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:11">req</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:22">remaining</name></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:26">1</literal></expr>;</expr_stmt>

        <macro pos:start="169:9" pos:end="169:56"><name pos:start="169:9" pos:end="169:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="169:28" pos:end="169:56">(<argument pos:start="169:29" pos:end="169:29">r</argument>, <argument pos:start="169:32" pos:end="169:43">&amp;d-&gt;requests</argument>, <argument pos:start="169:46" pos:end="169:49">next</argument>, <argument pos:start="169:52" pos:end="169:55">next</argument>)</argument_list></macro> <block pos:start="169:58" pos:end="205:9">{<block_content pos:start="171:13" pos:end="203:13">

            <if_stmt pos:start="171:13" pos:end="203:13"><if pos:start="171:13" pos:end="203:13">if <condition pos:start="171:16" pos:end="171:31">(<expr pos:start="171:17" pos:end="171:30"><name pos:start="171:17" pos:end="171:30"><name pos:start="171:17" pos:end="171:17">r</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:30">hba_private</name></name></expr>)</condition> <block pos:start="171:33" pos:end="203:13">{<block_content pos:start="173:17" pos:end="201:17">

                <if_stmt pos:start="173:17" pos:end="201:17"><if pos:start="173:17" pos:end="185:17">if <condition pos:start="173:20" pos:end="173:77">(<expr pos:start="173:21" pos:end="173:76"><name pos:start="173:21" pos:end="173:40"><name pos:start="173:21" pos:end="173:23">req</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:28">req</name><operator pos:start="173:29" pos:end="173:29">.</operator><name pos:start="173:30" pos:end="173:32">tmf</name><operator pos:start="173:33" pos:end="173:33">.</operator><name pos:start="173:34" pos:end="173:40">subtype</name></name> <operator pos:start="173:42" pos:end="173:43">==</operator> <name pos:start="173:45" pos:end="173:76">VIRTIO_SCSI_T_TMF_QUERY_TASK_SET</name></expr>)</condition> <block pos:start="173:79" pos:end="185:17">{<block_content pos:start="181:21" pos:end="183:26">

                    <comment type="block" pos:start="175:21" pos:end="179:23">/* "If there is any command present in the task set, then

                     * return a service response set to FUNCTION SUCCEEDED".

                     */</comment>

                    <expr_stmt pos:start="181:21" pos:end="181:78"><expr pos:start="181:21" pos:end="181:77"><name pos:start="181:21" pos:end="181:42"><name pos:start="181:21" pos:end="181:23">req</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:29">resp</name><operator pos:start="181:30" pos:end="181:30">.</operator><name pos:start="181:31" pos:end="181:33">tmf</name><operator pos:start="181:34" pos:end="181:34">.</operator><name pos:start="181:35" pos:end="181:42">response</name></name> <operator pos:start="181:44" pos:end="181:44">=</operator> <name pos:start="181:46" pos:end="181:77">VIRTIO_SCSI_S_FUNCTION_SUCCEEDED</name></expr>;</expr_stmt>

                    <break pos:start="183:21" pos:end="183:26">break;</break>

                </block_content>}</block></if> <else pos:start="185:19" pos:end="201:17">else <block pos:start="185:24" pos:end="201:17">{<block_content pos:start="187:21" pos:end="199:66">

                    <decl_stmt pos:start="187:21" pos:end="187:55"><decl pos:start="187:21" pos:end="187:54"><type pos:start="187:21" pos:end="187:46"><name pos:start="187:21" pos:end="187:44">VirtIOSCSICancelNotifier</name> <modifier pos:start="187:46" pos:end="187:46">*</modifier></type><name pos:start="187:47" pos:end="187:54">notifier</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="191:21" pos:end="191:37"><expr pos:start="191:21" pos:end="191:36"><name pos:start="191:21" pos:end="191:34"><name pos:start="191:21" pos:end="191:23">req</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:34">remaining</name></name><operator pos:start="191:35" pos:end="191:36">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:69"><expr pos:start="193:21" pos:end="193:68"><name pos:start="193:21" pos:end="193:28">notifier</name> <operator pos:start="193:30" pos:end="193:30">=</operator> <call pos:start="193:32" pos:end="193:68"><name pos:start="193:32" pos:end="193:42">g_slice_new</name><argument_list pos:start="193:43" pos:end="193:68">(<argument pos:start="193:44" pos:end="193:67"><expr pos:start="193:44" pos:end="193:67"><name pos:start="193:44" pos:end="193:67">VirtIOSCSICancelNotifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:74"><expr pos:start="195:21" pos:end="195:73"><name pos:start="195:21" pos:end="195:45"><name pos:start="195:21" pos:end="195:28">notifier</name><operator pos:start="195:29" pos:end="195:30">-&gt;</operator><name pos:start="195:31" pos:end="195:38">notifier</name><operator pos:start="195:39" pos:end="195:39">.</operator><name pos:start="195:40" pos:end="195:45">notify</name></name> <operator pos:start="195:47" pos:end="195:47">=</operator> <name pos:start="195:49" pos:end="195:73">virtio_scsi_cancel_notify</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:44"><expr pos:start="197:21" pos:end="197:43"><name pos:start="197:21" pos:end="197:37"><name pos:start="197:21" pos:end="197:28">notifier</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:37">tmf_req</name></name> <operator pos:start="197:39" pos:end="197:39">=</operator> <name pos:start="197:41" pos:end="197:43">req</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:66"><expr pos:start="199:21" pos:end="199:65"><call pos:start="199:21" pos:end="199:65"><name pos:start="199:21" pos:end="199:41">scsi_req_cancel_async</name><argument_list pos:start="199:42" pos:end="199:65">(<argument pos:start="199:43" pos:end="199:43"><expr pos:start="199:43" pos:end="199:43"><name pos:start="199:43" pos:end="199:43">r</name></expr></argument>, <argument pos:start="199:46" pos:end="199:64"><expr pos:start="199:46" pos:end="199:64"><operator pos:start="199:46" pos:end="199:46">&amp;</operator><name pos:start="199:47" pos:end="199:64"><name pos:start="199:47" pos:end="199:54">notifier</name><operator pos:start="199:55" pos:end="199:56">-&gt;</operator><name pos:start="199:57" pos:end="199:64">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if <condition pos:start="207:12" pos:end="207:33">(<expr pos:start="207:13" pos:end="207:32"><operator pos:start="207:13" pos:end="207:14">--</operator><name pos:start="207:15" pos:end="207:28"><name pos:start="207:15" pos:end="207:17">req</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:28">remaining</name></name> <operator pos:start="207:30" pos:end="207:30">&gt;</operator> <literal type="number" pos:start="207:32" pos:end="207:32">0</literal></expr>)</condition> <block pos:start="207:35" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:31">

            <expr_stmt pos:start="209:13" pos:end="209:31"><expr pos:start="209:13" pos:end="209:30"><name pos:start="209:13" pos:end="209:15">ret</name> <operator pos:start="209:17" pos:end="209:17">=</operator> <operator pos:start="209:19" pos:end="209:19">-</operator><name pos:start="209:20" pos:end="209:30">EINPROGRESS</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>



    <case pos:start="217:5" pos:end="217:43">case <expr pos:start="217:10" pos:end="217:42"><name pos:start="217:10" pos:end="217:42">VIRTIO_SCSI_T_TMF_I_T_NEXUS_RESET</name></expr>:</case>

        <expr_stmt pos:start="219:9" pos:end="219:37"><expr pos:start="219:9" pos:end="219:36"><name pos:start="219:9" pos:end="219:14">target</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <name pos:start="219:18" pos:end="219:36"><name pos:start="219:18" pos:end="219:20">req</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:25">req</name><operator pos:start="219:26" pos:end="219:26">.</operator><name pos:start="219:27" pos:end="219:29">tmf</name><operator pos:start="219:30" pos:end="219:30">.</operator><name pos:start="219:31" pos:end="219:33">lun</name><index pos:start="219:34" pos:end="219:36">[<expr pos:start="219:35" pos:end="219:35"><literal type="number" pos:start="219:35" pos:end="219:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:23"><expr pos:start="221:9" pos:end="221:22"><name pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:20">resetting</name></name><operator pos:start="221:21" pos:end="221:22">++</operator></expr>;</expr_stmt>

        <macro pos:start="223:9" pos:end="223:59"><name pos:start="223:9" pos:end="223:22">QTAILQ_FOREACH</name><argument_list pos:start="223:23" pos:end="223:59">(<argument pos:start="223:24" pos:end="223:26">kid</argument>, <argument pos:start="223:29" pos:end="223:49">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="223:52" pos:end="223:58">sibling</argument>)</argument_list></macro> <block pos:start="223:61" pos:end="233:9">{<block_content pos:start="225:14" pos:end="231:14">

             <expr_stmt pos:start="225:14" pos:end="225:57"><expr pos:start="225:14" pos:end="225:56"><name pos:start="225:14" pos:end="225:14">d</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <call pos:start="225:18" pos:end="225:56"><name pos:start="225:18" pos:end="225:26">DO_UPCAST</name><argument_list pos:start="225:27" pos:end="225:56">(<argument pos:start="225:28" pos:end="225:37"><expr pos:start="225:28" pos:end="225:37"><name pos:start="225:28" pos:end="225:37">SCSIDevice</name></expr></argument>, <argument pos:start="225:40" pos:end="225:43"><expr pos:start="225:40" pos:end="225:43"><name pos:start="225:40" pos:end="225:43">qdev</name></expr></argument>, <argument pos:start="225:46" pos:end="225:55"><expr pos:start="225:46" pos:end="225:55"><name pos:start="225:46" pos:end="225:55"><name pos:start="225:46" pos:end="225:48">kid</name><operator pos:start="225:49" pos:end="225:50">-&gt;</operator><name pos:start="225:51" pos:end="225:55">child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <if_stmt pos:start="227:14" pos:end="231:14"><if pos:start="227:14" pos:end="231:14">if <condition pos:start="227:17" pos:end="227:52">(<expr pos:start="227:18" pos:end="227:51"><name pos:start="227:18" pos:end="227:27"><name pos:start="227:18" pos:end="227:18">d</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:27">channel</name></name> <operator pos:start="227:29" pos:end="227:30">==</operator> <literal type="number" pos:start="227:32" pos:end="227:32">0</literal> <operator pos:start="227:34" pos:end="227:35">&amp;&amp;</operator> <name pos:start="227:37" pos:end="227:41"><name pos:start="227:37" pos:end="227:37">d</name><operator pos:start="227:38" pos:end="227:39">-&gt;</operator><name pos:start="227:40" pos:end="227:41">id</name></name> <operator pos:start="227:43" pos:end="227:44">==</operator> <name pos:start="227:46" pos:end="227:51">target</name></expr>)</condition> <block pos:start="227:54" pos:end="231:14">{<block_content pos:start="229:17" pos:end="229:41">

                <expr_stmt pos:start="229:17" pos:end="229:41"><expr pos:start="229:17" pos:end="229:40"><call pos:start="229:17" pos:end="229:40"><name pos:start="229:17" pos:end="229:30">qdev_reset_all</name><argument_list pos:start="229:31" pos:end="229:40">(<argument pos:start="229:32" pos:end="229:39"><expr pos:start="229:32" pos:end="229:39"><operator pos:start="229:32" pos:end="229:32">&amp;</operator><name pos:start="229:33" pos:end="229:39"><name pos:start="229:33" pos:end="229:33">d</name><operator pos:start="229:34" pos:end="229:35">-&gt;</operator><name pos:start="229:36" pos:end="229:39">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="235:9" pos:end="235:23"><expr pos:start="235:9" pos:end="235:22"><name pos:start="235:9" pos:end="235:20"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:20">resetting</name></name><operator pos:start="235:21" pos:end="235:22">--</operator></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>



    <case pos:start="241:5" pos:end="241:37">case <expr pos:start="241:10" pos:end="241:36"><name pos:start="241:10" pos:end="241:36">VIRTIO_SCSI_T_TMF_CLEAR_ACA</name></expr>:</case>

    <default pos:start="243:5" pos:end="243:12">default:</default>

        <expr_stmt pos:start="245:9" pos:end="245:65"><expr pos:start="245:9" pos:end="245:64"><name pos:start="245:9" pos:end="245:30"><name pos:start="245:9" pos:end="245:11">req</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:17">resp</name><operator pos:start="245:18" pos:end="245:18">.</operator><name pos:start="245:19" pos:end="245:21">tmf</name><operator pos:start="245:22" pos:end="245:22">.</operator><name pos:start="245:23" pos:end="245:30">response</name></name> <operator pos:start="245:32" pos:end="245:32">=</operator> <name pos:start="245:34" pos:end="245:64">VIRTIO_SCSI_S_FUNCTION_REJECTED</name></expr>;</expr_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="253:5" pos:end="253:15">return <expr pos:start="253:12" pos:end="253:14"><name pos:start="253:12" pos:end="253:14">ret</name></expr>;</return>



<label pos:start="257:1" pos:end="257:14"><name pos:start="257:1" pos:end="257:13">incorrect_lun</name>:</label>

    <expr_stmt pos:start="259:5" pos:end="259:57"><expr pos:start="259:5" pos:end="259:56"><name pos:start="259:5" pos:end="259:26"><name pos:start="259:5" pos:end="259:7">req</name><operator pos:start="259:8" pos:end="259:9">-&gt;</operator><name pos:start="259:10" pos:end="259:13">resp</name><operator pos:start="259:14" pos:end="259:14">.</operator><name pos:start="259:15" pos:end="259:17">tmf</name><operator pos:start="259:18" pos:end="259:18">.</operator><name pos:start="259:19" pos:end="259:26">response</name></name> <operator pos:start="259:28" pos:end="259:28">=</operator> <name pos:start="259:30" pos:end="259:56">VIRTIO_SCSI_S_INCORRECT_LUN</name></expr>;</expr_stmt>

    <return pos:start="261:5" pos:end="261:15">return <expr pos:start="261:12" pos:end="261:14"><name pos:start="261:12" pos:end="261:14">ret</name></expr>;</return>



<label pos:start="265:1" pos:end="265:5"><name pos:start="265:1" pos:end="265:4">fail</name>:</label>

    <expr_stmt pos:start="267:5" pos:end="267:54"><expr pos:start="267:5" pos:end="267:53"><name pos:start="267:5" pos:end="267:26"><name pos:start="267:5" pos:end="267:7">req</name><operator pos:start="267:8" pos:end="267:9">-&gt;</operator><name pos:start="267:10" pos:end="267:13">resp</name><operator pos:start="267:14" pos:end="267:14">.</operator><name pos:start="267:15" pos:end="267:17">tmf</name><operator pos:start="267:18" pos:end="267:18">.</operator><name pos:start="267:19" pos:end="267:26">response</name></name> <operator pos:start="267:28" pos:end="267:28">=</operator> <name pos:start="267:30" pos:end="267:53">VIRTIO_SCSI_S_BAD_TARGET</name></expr>;</expr_stmt>

    <return pos:start="269:5" pos:end="269:15">return <expr pos:start="269:12" pos:end="269:14"><name pos:start="269:12" pos:end="269:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
