<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20828.c" pos:tabs="8"><function pos:start="1:1" pos:end="329:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">usb_serial_handle_control</name><parameter_list pos:start="1:37" pos:end="3:71">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:46">USBDevice</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:64">request</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:75"><decl pos:start="1:67" pos:end="1:75"><type pos:start="1:67" pos:end="1:75"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:75">value</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">index</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:55"><decl pos:start="3:46" pos:end="3:55"><type pos:start="3:46" pos:end="3:55"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:55">length</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:64">uint8_t</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="329:1">{<block_content pos:start="7:5" pos:end="327:15">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">USBSerialState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:45">= <expr pos:start="7:25" pos:end="7:45"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">USBSerialState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator><name pos:start="7:43" pos:end="7:45">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:57"><expr pos:start="13:5" pos:end="13:56"><call pos:start="13:5" pos:end="13:56"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:56">(<argument pos:start="13:13" pos:end="13:40"><expr pos:start="13:13" pos:end="13:40"><literal type="string" pos:start="13:13" pos:end="13:40">"got control %x, value %x\n"</literal></expr></argument>,<argument pos:start="13:42" pos:end="13:48"><expr pos:start="13:42" pos:end="13:48"><name pos:start="13:42" pos:end="13:48">request</name></expr></argument>, <argument pos:start="13:51" pos:end="13:55"><expr pos:start="13:51" pos:end="13:55"><name pos:start="13:51" pos:end="13:55">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:76"><expr pos:start="15:5" pos:end="15:75"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:75"><name pos:start="15:11" pos:end="15:33">usb_desc_handle_control</name><argument_list pos:start="15:34" pos:end="15:75">(<argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">dev</name></expr></argument>, <argument pos:start="15:40" pos:end="15:46"><expr pos:start="15:40" pos:end="15:46"><name pos:start="15:40" pos:end="15:46">request</name></expr></argument>, <argument pos:start="15:49" pos:end="15:53"><expr pos:start="15:49" pos:end="15:53"><name pos:start="15:49" pos:end="15:53">value</name></expr></argument>, <argument pos:start="15:56" pos:end="15:60"><expr pos:start="15:56" pos:end="15:60"><name pos:start="15:56" pos:end="15:60">index</name></expr></argument>, <argument pos:start="15:63" pos:end="15:68"><expr pos:start="15:63" pos:end="15:68"><name pos:start="15:63" pos:end="15:68">length</name></expr></argument>, <argument pos:start="15:71" pos:end="15:74"><expr pos:start="15:71" pos:end="15:74"><name pos:start="15:71" pos:end="15:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:14">&gt;=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>)</condition> <block pos:start="17:19" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:12"><expr pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="325:5">switch <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:19">request</name></expr>)</condition> <block pos:start="27:22" pos:end="325:5">{<block_content pos:start="29:5" pos:end="323:14">

    <case pos:start="29:5" pos:end="29:44">case <expr pos:start="29:10" pos:end="29:43"><name pos:start="29:10" pos:end="29:22">DeviceRequest</name> <operator pos:start="29:24" pos:end="29:24">|</operator> <name pos:start="29:26" pos:end="29:43">USB_REQ_GET_STATUS</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="33:61"><expr pos:start="31:9" pos:end="33:60"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:12">data</name><index pos:start="31:13" pos:end="31:15">[<expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>]</index></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <operator pos:start="31:19" pos:end="31:19">(</operator><literal type="number" pos:start="31:20" pos:end="31:20">0</literal> <operator pos:start="31:22" pos:end="31:23">&lt;&lt;</operator> <name pos:start="31:25" pos:end="31:47">USB_DEVICE_SELF_POWERED</name><operator pos:start="31:48" pos:end="31:48">)</operator> <operator pos:start="31:50" pos:end="31:50">|</operator>

            <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:16">dev</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:31">remote_wakeup</name></name> <operator pos:start="33:33" pos:end="33:34">&lt;&lt;</operator> <name pos:start="33:36" pos:end="33:59">USB_DEVICE_REMOTE_WAKEUP</name><operator pos:start="33:60" pos:end="33:60">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">data</name><index pos:start="35:13" pos:end="35:15">[<expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr>]</index></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">2</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:50">case <expr pos:start="41:10" pos:end="41:49"><name pos:start="41:10" pos:end="41:25">DeviceOutRequest</name> <operator pos:start="41:27" pos:end="41:27">|</operator> <name pos:start="41:29" pos:end="41:49">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:46">(<expr pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:17">value</name> <operator pos:start="43:19" pos:end="43:20">==</operator> <name pos:start="43:22" pos:end="43:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="43:48" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:35">

            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:15">dev</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:30">remote_wakeup</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:22">

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:16"><expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:48">case <expr pos:start="57:10" pos:end="57:47"><name pos:start="57:10" pos:end="57:25">DeviceOutRequest</name> <operator pos:start="57:27" pos:end="57:27">|</operator> <name pos:start="57:29" pos:end="57:47">USB_REQ_SET_FEATURE</name></expr>:</case>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:46">(<expr pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:17">value</name> <operator pos:start="59:19" pos:end="59:20">==</operator> <name pos:start="59:22" pos:end="59:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="59:48" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:35">

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:15">dev</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:30">remote_wakeup</name></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="67:9">else <block pos:start="63:16" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:22">

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:16"><expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:51">case <expr pos:start="73:10" pos:end="73:50"><name pos:start="73:10" pos:end="73:22">DeviceRequest</name> <operator pos:start="73:24" pos:end="73:24">|</operator> <name pos:start="73:26" pos:end="73:50">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:20"><expr pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:12">data</name><index pos:start="75:13" pos:end="75:15">[<expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>]</index></name> <operator pos:start="75:17" pos:end="75:17">=</operator> <literal type="number" pos:start="75:19" pos:end="75:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:16"><expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <literal type="number" pos:start="77:15" pos:end="77:15">1</literal></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:54">case <expr pos:start="81:10" pos:end="81:53"><name pos:start="81:10" pos:end="81:25">DeviceOutRequest</name> <operator pos:start="81:27" pos:end="81:27">|</operator> <name pos:start="81:29" pos:end="81:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:16"><expr pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <literal type="number" pos:start="83:15" pos:end="83:15">0</literal></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:47">case <expr pos:start="87:10" pos:end="87:46"><name pos:start="87:10" pos:end="87:22">DeviceRequest</name> <operator pos:start="87:24" pos:end="87:24">|</operator> <name pos:start="87:26" pos:end="87:46">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:12">data</name><index pos:start="89:13" pos:end="89:15">[<expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>]</index></name> <operator pos:start="89:17" pos:end="89:17">=</operator> <literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:16"><expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <literal type="number" pos:start="91:15" pos:end="91:15">1</literal></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:53">case <expr pos:start="95:10" pos:end="95:52"><name pos:start="95:10" pos:end="95:28">InterfaceOutRequest</name> <operator pos:start="95:30" pos:end="95:30">|</operator> <name pos:start="95:32" pos:end="95:52">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:16"><expr pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:52">case <expr pos:start="101:10" pos:end="101:51"><name pos:start="101:10" pos:end="101:27">EndpointOutRequest</name> <operator pos:start="101:29" pos:end="101:29">|</operator> <name pos:start="101:31" pos:end="101:51">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:16"><expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <literal type="number" pos:start="103:15" pos:end="103:15">0</literal></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>



        <comment type="block" pos:start="109:9" pos:end="109:39">/* Class specific requests.  */</comment>

    <case pos:start="111:5" pos:end="111:38">case <expr pos:start="111:10" pos:end="111:37"><name pos:start="111:10" pos:end="111:24">DeviceOutVendor</name> <operator pos:start="111:26" pos:end="111:26">|</operator> <name pos:start="111:28" pos:end="111:37">FTDI_RESET</name></expr>:</case>

        <switch pos:start="113:9" pos:end="137:9">switch <condition pos:start="113:16" pos:end="113:22">(<expr pos:start="113:17" pos:end="113:21"><name pos:start="113:17" pos:end="113:21">value</name></expr>)</condition> <block pos:start="113:24" pos:end="137:9">{<block_content pos:start="115:9" pos:end="135:18">

        <case pos:start="115:9" pos:end="115:28">case <expr pos:start="115:14" pos:end="115:27"><name pos:start="115:14" pos:end="115:27">FTDI_RESET_SIO</name></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:32"><expr pos:start="117:13" pos:end="117:31"><call pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:28">usb_serial_reset</name><argument_list pos:start="117:29" pos:end="117:31">(<argument pos:start="117:30" pos:end="117:30"><expr pos:start="117:30" pos:end="117:30"><name pos:start="117:30" pos:end="117:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:27">case <expr pos:start="121:14" pos:end="121:26"><name pos:start="121:14" pos:end="121:26">FTDI_RESET_RX</name></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:28"><expr pos:start="123:13" pos:end="123:27"><name pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:23">recv_ptr</name></name> <operator pos:start="123:25" pos:end="123:25">=</operator> <literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:29"><expr pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:24">recv_used</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <literal type="number" pos:start="125:28" pos:end="125:28">0</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="127:13" pos:end="127:46">/* TODO: purge from char device */</comment>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:27">case <expr pos:start="131:14" pos:end="131:26"><name pos:start="131:14" pos:end="131:26">FTDI_RESET_TX</name></expr>:</case>

            <comment type="block" pos:start="133:13" pos:end="133:46">/* TODO: purge from char device */</comment>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:45">case <expr pos:start="141:10" pos:end="141:44"><name pos:start="141:10" pos:end="141:24">DeviceOutVendor</name> <operator pos:start="141:26" pos:end="141:26">|</operator> <name pos:start="141:28" pos:end="141:44">FTDI_SET_MDM_CTRL</name></expr>:</case>

    <block pos:start="143:5" pos:end="177:5">{<block_content pos:start="145:9" pos:end="175:14">

        <decl_stmt pos:start="145:9" pos:end="145:25"><decl pos:start="145:9" pos:end="145:24"><type pos:start="145:9" pos:end="145:18"><specifier pos:start="145:9" pos:end="145:14">static</specifier> <name pos:start="145:16" pos:end="145:18">int</name></type> <name pos:start="145:20" pos:end="145:24">flags</name></decl>;</decl_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:65"><expr pos:start="147:9" pos:end="147:64"><call pos:start="147:9" pos:end="147:64"><name pos:start="147:9" pos:end="147:22">qemu_chr_ioctl</name><argument_list pos:start="147:23" pos:end="147:64">(<argument pos:start="147:24" pos:end="147:28"><expr pos:start="147:24" pos:end="147:28"><name pos:start="147:24" pos:end="147:28"><name pos:start="147:24" pos:end="147:24">s</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:28">cs</name></name></expr></argument>,<argument pos:start="147:30" pos:end="147:55"><expr pos:start="147:30" pos:end="147:55"><name pos:start="147:30" pos:end="147:55">CHR_IOCTL_SERIAL_GET_TIOCM</name></expr></argument>, <argument pos:start="147:58" pos:end="147:63"><expr pos:start="147:58" pos:end="147:63"><operator pos:start="147:58" pos:end="147:58">&amp;</operator><name pos:start="147:59" pos:end="147:63">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="159:9"><if pos:start="149:9" pos:end="159:9">if <condition pos:start="149:12" pos:end="149:33">(<expr pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:17">value</name> <operator pos:start="149:19" pos:end="149:19">&amp;</operator> <name pos:start="149:21" pos:end="149:32">FTDI_SET_RTS</name></expr>)</condition> <block pos:start="149:35" pos:end="159:9">{<block_content pos:start="151:13" pos:end="157:40">

            <if_stmt pos:start="151:13" pos:end="157:40"><if pos:start="151:13" pos:end="153:39">if <condition pos:start="151:16" pos:end="151:33">(<expr pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:21">value</name> <operator pos:start="151:23" pos:end="151:23">&amp;</operator> <name pos:start="151:25" pos:end="151:32">FTDI_RTS</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:39"><block_content pos:start="153:17" pos:end="153:39">

                <expr_stmt pos:start="153:17" pos:end="153:39"><expr pos:start="153:17" pos:end="153:38"><name pos:start="153:17" pos:end="153:21">flags</name> <operator pos:start="153:23" pos:end="153:24">|=</operator> <name pos:start="153:26" pos:end="153:38">CHR_TIOCM_RTS</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="155:13" pos:end="157:40">else<block type="pseudo" pos:start="157:17" pos:end="157:40"><block_content pos:start="157:17" pos:end="157:40">

                <expr_stmt pos:start="157:17" pos:end="157:40"><expr pos:start="157:17" pos:end="157:39"><name pos:start="157:17" pos:end="157:21">flags</name> <operator pos:start="157:23" pos:end="157:24">&amp;=</operator> <operator pos:start="157:26" pos:end="157:26">~</operator><name pos:start="157:27" pos:end="157:39">CHR_TIOCM_RTS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="171:9"><if pos:start="161:9" pos:end="171:9">if <condition pos:start="161:12" pos:end="161:33">(<expr pos:start="161:13" pos:end="161:32"><name pos:start="161:13" pos:end="161:17">value</name> <operator pos:start="161:19" pos:end="161:19">&amp;</operator> <name pos:start="161:21" pos:end="161:32">FTDI_SET_DTR</name></expr>)</condition> <block pos:start="161:35" pos:end="171:9">{<block_content pos:start="163:13" pos:end="169:40">

            <if_stmt pos:start="163:13" pos:end="169:40"><if pos:start="163:13" pos:end="165:39">if <condition pos:start="163:16" pos:end="163:33">(<expr pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:21">value</name> <operator pos:start="163:23" pos:end="163:23">&amp;</operator> <name pos:start="163:25" pos:end="163:32">FTDI_DTR</name></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:39"><block_content pos:start="165:17" pos:end="165:39">

                <expr_stmt pos:start="165:17" pos:end="165:39"><expr pos:start="165:17" pos:end="165:38"><name pos:start="165:17" pos:end="165:21">flags</name> <operator pos:start="165:23" pos:end="165:24">|=</operator> <name pos:start="165:26" pos:end="165:38">CHR_TIOCM_DTR</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="167:13" pos:end="169:40">else<block type="pseudo" pos:start="169:17" pos:end="169:40"><block_content pos:start="169:17" pos:end="169:40">

                <expr_stmt pos:start="169:17" pos:end="169:40"><expr pos:start="169:17" pos:end="169:39"><name pos:start="169:17" pos:end="169:21">flags</name> <operator pos:start="169:23" pos:end="169:24">&amp;=</operator> <operator pos:start="169:26" pos:end="169:26">~</operator><name pos:start="169:27" pos:end="169:39">CHR_TIOCM_DTR</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:65"><expr pos:start="173:9" pos:end="173:64"><call pos:start="173:9" pos:end="173:64"><name pos:start="173:9" pos:end="173:22">qemu_chr_ioctl</name><argument_list pos:start="173:23" pos:end="173:64">(<argument pos:start="173:24" pos:end="173:28"><expr pos:start="173:24" pos:end="173:28"><name pos:start="173:24" pos:end="173:28"><name pos:start="173:24" pos:end="173:24">s</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:28">cs</name></name></expr></argument>,<argument pos:start="173:30" pos:end="173:55"><expr pos:start="173:30" pos:end="173:55"><name pos:start="173:30" pos:end="173:55">CHR_IOCTL_SERIAL_SET_TIOCM</name></expr></argument>, <argument pos:start="173:58" pos:end="173:63"><expr pos:start="173:58" pos:end="173:63"><operator pos:start="173:58" pos:end="173:58">&amp;</operator><name pos:start="173:59" pos:end="173:63">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    </block_content>}</block>

    <case pos:start="179:5" pos:end="179:46">case <expr pos:start="179:10" pos:end="179:45"><name pos:start="179:10" pos:end="179:24">DeviceOutVendor</name> <operator pos:start="179:26" pos:end="179:26">|</operator> <name pos:start="179:28" pos:end="179:45">FTDI_SET_FLOW_CTRL</name></expr>:</case>

        <comment type="block" pos:start="181:9" pos:end="181:25">/* TODO: ioctl */</comment>

        <break pos:start="183:9" pos:end="183:14">break;</break>

    <case pos:start="185:5" pos:end="185:41">case <expr pos:start="185:10" pos:end="185:40"><name pos:start="185:10" pos:end="185:24">DeviceOutVendor</name> <operator pos:start="185:26" pos:end="185:26">|</operator> <name pos:start="185:28" pos:end="185:40">FTDI_SET_BAUD</name></expr>:</case> <block pos:start="185:43" pos:end="215:5">{<block_content pos:start="187:9" pos:end="213:14">

        <decl_stmt pos:start="187:9" pos:end="187:70"><decl pos:start="187:9" pos:end="187:69"><type pos:start="187:9" pos:end="187:24"><specifier pos:start="187:9" pos:end="187:14">static</specifier> <specifier pos:start="187:16" pos:end="187:20">const</specifier> <name pos:start="187:22" pos:end="187:24">int</name></type> <name pos:start="187:26" pos:end="187:40"><name pos:start="187:26" pos:end="187:37">subdivisors8</name><index pos:start="187:38" pos:end="187:40">[<expr pos:start="187:39" pos:end="187:39"><literal type="number" pos:start="187:39" pos:end="187:39">8</literal></expr>]</index></name> <init pos:start="187:42" pos:end="187:69">= <expr pos:start="187:44" pos:end="187:69"><block pos:start="187:44" pos:end="187:69">{ <expr pos:start="187:46" pos:end="187:46"><literal type="number" pos:start="187:46" pos:end="187:46">0</literal></expr>, <expr pos:start="187:49" pos:end="187:49"><literal type="number" pos:start="187:49" pos:end="187:49">4</literal></expr>, <expr pos:start="187:52" pos:end="187:52"><literal type="number" pos:start="187:52" pos:end="187:52">2</literal></expr>, <expr pos:start="187:55" pos:end="187:55"><literal type="number" pos:start="187:55" pos:end="187:55">1</literal></expr>, <expr pos:start="187:58" pos:end="187:58"><literal type="number" pos:start="187:58" pos:end="187:58">3</literal></expr>, <expr pos:start="187:61" pos:end="187:61"><literal type="number" pos:start="187:61" pos:end="187:61">5</literal></expr>, <expr pos:start="187:64" pos:end="187:64"><literal type="number" pos:start="187:64" pos:end="187:64">6</literal></expr>, <expr pos:start="187:67" pos:end="187:67"><literal type="number" pos:start="187:67" pos:end="187:67">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="191:59"><decl pos:start="189:9" pos:end="191:58"><type pos:start="189:9" pos:end="189:11"><name pos:start="189:9" pos:end="189:11">int</name></type> <name pos:start="189:13" pos:end="189:23">subdivisor8</name> <init pos:start="189:25" pos:end="191:58">= <expr pos:start="189:27" pos:end="191:58"><name pos:start="189:27" pos:end="191:58"><name pos:start="189:27" pos:end="189:38">subdivisors8</name><index pos:start="189:39" pos:end="191:58">[<expr pos:start="189:40" pos:end="191:57"><operator pos:start="189:40" pos:end="189:40">(</operator><operator pos:start="189:41" pos:end="189:41">(</operator><name pos:start="189:42" pos:end="189:46">value</name> <operator pos:start="189:48" pos:end="189:48">&amp;</operator> <literal type="number" pos:start="189:50" pos:end="189:55">0xc000</literal><operator pos:start="189:56" pos:end="189:56">)</operator> <operator pos:start="189:58" pos:end="189:59">&gt;&gt;</operator> <literal type="number" pos:start="189:61" pos:end="189:62">14</literal><operator pos:start="189:63" pos:end="189:63">)</operator>

                                     <operator pos:start="191:38" pos:end="191:38">|</operator> <operator pos:start="191:40" pos:end="191:40">(</operator><operator pos:start="191:41" pos:end="191:41">(</operator><name pos:start="191:42" pos:end="191:46">index</name> <operator pos:start="191:48" pos:end="191:48">&amp;</operator> <literal type="number" pos:start="191:50" pos:end="191:50">1</literal><operator pos:start="191:51" pos:end="191:51">)</operator> <operator pos:start="191:53" pos:end="191:54">&lt;&lt;</operator> <literal type="number" pos:start="191:56" pos:end="191:56">2</literal><operator pos:start="191:57" pos:end="191:57">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:37"><decl pos:start="193:9" pos:end="193:36"><type pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:11">int</name></type> <name pos:start="193:13" pos:end="193:19">divisor</name> <init pos:start="193:21" pos:end="193:36">= <expr pos:start="193:23" pos:end="193:36"><name pos:start="193:23" pos:end="193:27">value</name> <operator pos:start="193:29" pos:end="193:29">&amp;</operator> <literal type="number" pos:start="193:31" pos:end="193:36">0x3fff</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="197:9" pos:end="197:32">/* chip special cases */</comment>

        <if_stmt pos:start="199:9" pos:end="201:28"><if pos:start="199:9" pos:end="201:28">if <condition pos:start="199:12" pos:end="199:45">(<expr pos:start="199:13" pos:end="199:44"><name pos:start="199:13" pos:end="199:19">divisor</name> <operator pos:start="199:21" pos:end="199:22">==</operator> <literal type="number" pos:start="199:24" pos:end="199:24">1</literal> <operator pos:start="199:26" pos:end="199:27">&amp;&amp;</operator> <name pos:start="199:29" pos:end="199:39">subdivisor8</name> <operator pos:start="199:41" pos:end="199:42">==</operator> <literal type="number" pos:start="199:44" pos:end="199:44">0</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:28"><block_content pos:start="201:13" pos:end="201:28">

            <expr_stmt pos:start="201:13" pos:end="201:28"><expr pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:23">subdivisor8</name> <operator pos:start="201:25" pos:end="201:25">=</operator> <literal type="number" pos:start="201:27" pos:end="201:27">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="203:9" pos:end="205:24"><if pos:start="203:9" pos:end="205:24">if <condition pos:start="203:12" pos:end="203:45">(<expr pos:start="203:13" pos:end="203:44"><name pos:start="203:13" pos:end="203:19">divisor</name> <operator pos:start="203:21" pos:end="203:22">==</operator> <literal type="number" pos:start="203:24" pos:end="203:24">0</literal> <operator pos:start="203:26" pos:end="203:27">&amp;&amp;</operator> <name pos:start="203:29" pos:end="203:39">subdivisor8</name> <operator pos:start="203:41" pos:end="203:42">==</operator> <literal type="number" pos:start="203:44" pos:end="203:44">0</literal></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:24"><block_content pos:start="205:13" pos:end="205:24">

            <expr_stmt pos:start="205:13" pos:end="205:24"><expr pos:start="205:13" pos:end="205:23"><name pos:start="205:13" pos:end="205:19">divisor</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <literal type="number" pos:start="205:23" pos:end="205:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:71"><expr pos:start="209:9" pos:end="209:70"><name pos:start="209:9" pos:end="209:23"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:17">params</name><operator pos:start="209:18" pos:end="209:18">.</operator><name pos:start="209:19" pos:end="209:23">speed</name></name> <operator pos:start="209:25" pos:end="209:25">=</operator> <operator pos:start="209:27" pos:end="209:27">(</operator><literal type="number" pos:start="209:28" pos:end="209:35">48000000</literal> <operator pos:start="209:37" pos:end="209:37">/</operator> <literal type="number" pos:start="209:39" pos:end="209:39">2</literal><operator pos:start="209:40" pos:end="209:40">)</operator> <operator pos:start="209:42" pos:end="209:42">/</operator> <operator pos:start="209:44" pos:end="209:44">(</operator><literal type="number" pos:start="209:45" pos:end="209:45">8</literal> <operator pos:start="209:47" pos:end="209:47">*</operator> <name pos:start="209:49" pos:end="209:55">divisor</name> <operator pos:start="209:57" pos:end="209:57">+</operator> <name pos:start="209:59" pos:end="209:69">subdivisor8</name><operator pos:start="209:70" pos:end="209:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:71"><expr pos:start="211:9" pos:end="211:70"><call pos:start="211:9" pos:end="211:70"><name pos:start="211:9" pos:end="211:22">qemu_chr_ioctl</name><argument_list pos:start="211:23" pos:end="211:70">(<argument pos:start="211:24" pos:end="211:28"><expr pos:start="211:24" pos:end="211:28"><name pos:start="211:24" pos:end="211:28"><name pos:start="211:24" pos:end="211:24">s</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:28">cs</name></name></expr></argument>, <argument pos:start="211:31" pos:end="211:57"><expr pos:start="211:31" pos:end="211:57"><name pos:start="211:31" pos:end="211:57">CHR_IOCTL_SERIAL_SET_PARAMS</name></expr></argument>, <argument pos:start="211:60" pos:end="211:69"><expr pos:start="211:60" pos:end="211:69"><operator pos:start="211:60" pos:end="211:60">&amp;</operator><name pos:start="211:61" pos:end="211:69"><name pos:start="211:61" pos:end="211:61">s</name><operator pos:start="211:62" pos:end="211:63">-&gt;</operator><name pos:start="211:64" pos:end="211:69">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>

    </block_content>}</block>

    <case pos:start="217:5" pos:end="217:41">case <expr pos:start="217:10" pos:end="217:40"><name pos:start="217:10" pos:end="217:24">DeviceOutVendor</name> <operator pos:start="217:26" pos:end="217:26">|</operator> <name pos:start="217:28" pos:end="217:40">FTDI_SET_DATA</name></expr>:</case>

        <switch pos:start="219:9" pos:end="245:9">switch <condition pos:start="219:16" pos:end="219:36">(<expr pos:start="219:17" pos:end="219:35"><name pos:start="219:17" pos:end="219:21">value</name> <operator pos:start="219:23" pos:end="219:23">&amp;</operator> <name pos:start="219:25" pos:end="219:35">FTDI_PARITY</name></expr>)</condition> <block pos:start="219:38" pos:end="245:9">{<block_content pos:start="221:13" pos:end="243:26">

            <case pos:start="221:13" pos:end="221:19">case <expr pos:start="221:18" pos:end="221:18"><literal type="number" pos:start="221:18" pos:end="221:18">0</literal></expr>:</case>

                <expr_stmt pos:start="223:17" pos:end="223:39"><expr pos:start="223:17" pos:end="223:38"><name pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:25">params</name><operator pos:start="223:26" pos:end="223:26">.</operator><name pos:start="223:27" pos:end="223:32">parity</name></name> <operator pos:start="223:34" pos:end="223:34">=</operator> <literal type="char" pos:start="223:36" pos:end="223:38">'N'</literal></expr>;</expr_stmt>

                <break pos:start="225:17" pos:end="225:22">break;</break>

            <case pos:start="227:13" pos:end="227:26">case <expr pos:start="227:18" pos:end="227:25"><name pos:start="227:18" pos:end="227:25">FTDI_ODD</name></expr>:</case>

                <expr_stmt pos:start="229:17" pos:end="229:39"><expr pos:start="229:17" pos:end="229:38"><name pos:start="229:17" pos:end="229:32"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:25">params</name><operator pos:start="229:26" pos:end="229:26">.</operator><name pos:start="229:27" pos:end="229:32">parity</name></name> <operator pos:start="229:34" pos:end="229:34">=</operator> <literal type="char" pos:start="229:36" pos:end="229:38">'O'</literal></expr>;</expr_stmt>

                <break pos:start="231:17" pos:end="231:22">break;</break>

            <case pos:start="233:13" pos:end="233:27">case <expr pos:start="233:18" pos:end="233:26"><name pos:start="233:18" pos:end="233:26">FTDI_EVEN</name></expr>:</case>

                <expr_stmt pos:start="235:17" pos:end="235:39"><expr pos:start="235:17" pos:end="235:38"><name pos:start="235:17" pos:end="235:32"><name pos:start="235:17" pos:end="235:17">s</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:25">params</name><operator pos:start="235:26" pos:end="235:26">.</operator><name pos:start="235:27" pos:end="235:32">parity</name></name> <operator pos:start="235:34" pos:end="235:34">=</operator> <literal type="char" pos:start="235:36" pos:end="235:38">'E'</literal></expr>;</expr_stmt>

                <break pos:start="237:17" pos:end="237:22">break;</break>

            <default pos:start="239:13" pos:end="239:20">default:</default>

                <expr_stmt pos:start="241:17" pos:end="241:72"><expr pos:start="241:17" pos:end="241:71"><call pos:start="241:17" pos:end="241:71"><name pos:start="241:17" pos:end="241:23">DPRINTF</name><argument_list pos:start="241:24" pos:end="241:71">(<argument pos:start="241:25" pos:end="241:49"><expr pos:start="241:25" pos:end="241:49"><literal type="string" pos:start="241:25" pos:end="241:49">"unsupported parity %d\n"</literal></expr></argument>, <argument pos:start="241:52" pos:end="241:70"><expr pos:start="241:52" pos:end="241:70"><name pos:start="241:52" pos:end="241:56">value</name> <operator pos:start="241:58" pos:end="241:58">&amp;</operator> <name pos:start="241:60" pos:end="241:70">FTDI_PARITY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="243:17" pos:end="243:26">goto <name pos:start="243:22" pos:end="243:25">fail</name>;</goto>

        </block_content>}</block></switch>

        <switch pos:start="247:9" pos:end="267:9">switch <condition pos:start="247:16" pos:end="247:34">(<expr pos:start="247:17" pos:end="247:33"><name pos:start="247:17" pos:end="247:21">value</name> <operator pos:start="247:23" pos:end="247:23">&amp;</operator> <name pos:start="247:25" pos:end="247:33">FTDI_STOP</name></expr>)</condition> <block pos:start="247:36" pos:end="267:9">{<block_content pos:start="249:13" pos:end="265:26">

            <case pos:start="249:13" pos:end="249:28">case <expr pos:start="249:18" pos:end="249:27"><name pos:start="249:18" pos:end="249:27">FTDI_STOP1</name></expr>:</case>

                <expr_stmt pos:start="251:17" pos:end="251:40"><expr pos:start="251:17" pos:end="251:39"><name pos:start="251:17" pos:end="251:35"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:25">params</name><operator pos:start="251:26" pos:end="251:26">.</operator><name pos:start="251:27" pos:end="251:35">stop_bits</name></name> <operator pos:start="251:37" pos:end="251:37">=</operator> <literal type="number" pos:start="251:39" pos:end="251:39">1</literal></expr>;</expr_stmt>

                <break pos:start="253:17" pos:end="253:22">break;</break>

            <case pos:start="255:13" pos:end="255:28">case <expr pos:start="255:18" pos:end="255:27"><name pos:start="255:18" pos:end="255:27">FTDI_STOP2</name></expr>:</case>

                <expr_stmt pos:start="257:17" pos:end="257:40"><expr pos:start="257:17" pos:end="257:39"><name pos:start="257:17" pos:end="257:35"><name pos:start="257:17" pos:end="257:17">s</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:25">params</name><operator pos:start="257:26" pos:end="257:26">.</operator><name pos:start="257:27" pos:end="257:35">stop_bits</name></name> <operator pos:start="257:37" pos:end="257:37">=</operator> <literal type="number" pos:start="257:39" pos:end="257:39">2</literal></expr>;</expr_stmt>

                <break pos:start="259:17" pos:end="259:22">break;</break>

            <default pos:start="261:13" pos:end="261:20">default:</default>

                <expr_stmt pos:start="263:17" pos:end="263:73"><expr pos:start="263:17" pos:end="263:72"><call pos:start="263:17" pos:end="263:72"><name pos:start="263:17" pos:end="263:23">DPRINTF</name><argument_list pos:start="263:24" pos:end="263:72">(<argument pos:start="263:25" pos:end="263:52"><expr pos:start="263:25" pos:end="263:52"><literal type="string" pos:start="263:25" pos:end="263:52">"unsupported stop bits %d\n"</literal></expr></argument>, <argument pos:start="263:55" pos:end="263:71"><expr pos:start="263:55" pos:end="263:71"><name pos:start="263:55" pos:end="263:59">value</name> <operator pos:start="263:61" pos:end="263:61">&amp;</operator> <name pos:start="263:63" pos:end="263:71">FTDI_STOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="265:17" pos:end="265:26">goto <name pos:start="265:22" pos:end="265:25">fail</name>;</goto>

        </block_content>}</block></switch>

        <expr_stmt pos:start="269:9" pos:end="269:71"><expr pos:start="269:9" pos:end="269:70"><call pos:start="269:9" pos:end="269:70"><name pos:start="269:9" pos:end="269:22">qemu_chr_ioctl</name><argument_list pos:start="269:23" pos:end="269:70">(<argument pos:start="269:24" pos:end="269:28"><expr pos:start="269:24" pos:end="269:28"><name pos:start="269:24" pos:end="269:28"><name pos:start="269:24" pos:end="269:24">s</name><operator pos:start="269:25" pos:end="269:26">-&gt;</operator><name pos:start="269:27" pos:end="269:28">cs</name></name></expr></argument>, <argument pos:start="269:31" pos:end="269:57"><expr pos:start="269:31" pos:end="269:57"><name pos:start="269:31" pos:end="269:57">CHR_IOCTL_SERIAL_SET_PARAMS</name></expr></argument>, <argument pos:start="269:60" pos:end="269:69"><expr pos:start="269:60" pos:end="269:69"><operator pos:start="269:60" pos:end="269:60">&amp;</operator><name pos:start="269:61" pos:end="269:69"><name pos:start="269:61" pos:end="269:61">s</name><operator pos:start="269:62" pos:end="269:63">-&gt;</operator><name pos:start="269:64" pos:end="269:69">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="271:9" pos:end="271:29">/* TODO: TX ON/OFF */</comment>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <case pos:start="275:5" pos:end="275:42">case <expr pos:start="275:10" pos:end="275:41"><name pos:start="275:10" pos:end="275:23">DeviceInVendor</name> <operator pos:start="275:25" pos:end="275:25">|</operator> <name pos:start="275:27" pos:end="275:41">FTDI_GET_MDM_ST</name></expr>:</case>

        <expr_stmt pos:start="277:9" pos:end="277:45"><expr pos:start="277:9" pos:end="277:44"><name pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:12">data</name><index pos:start="277:13" pos:end="277:15">[<expr pos:start="277:14" pos:end="277:14"><literal type="number" pos:start="277:14" pos:end="277:14">0</literal></expr>]</index></name> <operator pos:start="277:17" pos:end="277:17">=</operator> <call pos:start="277:19" pos:end="277:40"><name pos:start="277:19" pos:end="277:37">usb_get_modem_lines</name><argument_list pos:start="277:38" pos:end="277:40">(<argument pos:start="277:39" pos:end="277:39"><expr pos:start="277:39" pos:end="277:39"><name pos:start="277:39" pos:end="277:39">s</name></expr></argument>)</argument_list></call> <operator pos:start="277:42" pos:end="277:42">|</operator> <literal type="number" pos:start="277:44" pos:end="277:44">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:20"><expr pos:start="279:9" pos:end="279:19"><name pos:start="279:9" pos:end="279:15"><name pos:start="279:9" pos:end="279:12">data</name><index pos:start="279:13" pos:end="279:15">[<expr pos:start="279:14" pos:end="279:14"><literal type="number" pos:start="279:14" pos:end="279:14">1</literal></expr>]</index></name> <operator pos:start="279:17" pos:end="279:17">=</operator> <literal type="number" pos:start="279:19" pos:end="279:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:16"><expr pos:start="281:9" pos:end="281:15"><name pos:start="281:9" pos:end="281:11">ret</name> <operator pos:start="281:13" pos:end="281:13">=</operator> <literal type="number" pos:start="281:15" pos:end="281:15">2</literal></expr>;</expr_stmt>

        <break pos:start="283:9" pos:end="283:14">break;</break>

    <case pos:start="285:5" pos:end="285:46">case <expr pos:start="285:10" pos:end="285:45"><name pos:start="285:10" pos:end="285:24">DeviceOutVendor</name> <operator pos:start="285:26" pos:end="285:26">|</operator> <name pos:start="285:28" pos:end="285:45">FTDI_SET_EVENT_CHR</name></expr>:</case>

        <comment type="block" pos:start="287:9" pos:end="287:29">/* TODO: handle it */</comment>

        <expr_stmt pos:start="289:9" pos:end="289:29"><expr pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:20"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:20">event_chr</name></name> <operator pos:start="289:22" pos:end="289:22">=</operator> <name pos:start="289:24" pos:end="289:28">value</name></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>

    <case pos:start="293:5" pos:end="293:46">case <expr pos:start="293:10" pos:end="293:45"><name pos:start="293:10" pos:end="293:24">DeviceOutVendor</name> <operator pos:start="293:26" pos:end="293:26">|</operator> <name pos:start="293:28" pos:end="293:45">FTDI_SET_ERROR_CHR</name></expr>:</case>

        <comment type="block" pos:start="295:9" pos:end="295:29">/* TODO: handle it */</comment>

        <expr_stmt pos:start="297:9" pos:end="297:29"><expr pos:start="297:9" pos:end="297:28"><name pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:9">s</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:20">error_chr</name></name> <operator pos:start="297:22" pos:end="297:22">=</operator> <name pos:start="297:24" pos:end="297:28">value</name></expr>;</expr_stmt>

        <break pos:start="299:9" pos:end="299:14">break;</break>

    <case pos:start="301:5" pos:end="301:44">case <expr pos:start="301:10" pos:end="301:43"><name pos:start="301:10" pos:end="301:24">DeviceOutVendor</name> <operator pos:start="301:26" pos:end="301:26">|</operator> <name pos:start="301:28" pos:end="301:43">FTDI_SET_LATENCY</name></expr>:</case>

        <expr_stmt pos:start="303:9" pos:end="303:27"><expr pos:start="303:9" pos:end="303:26"><name pos:start="303:9" pos:end="303:18"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:18">latency</name></name> <operator pos:start="303:20" pos:end="303:20">=</operator> <name pos:start="303:22" pos:end="303:26">value</name></expr>;</expr_stmt>

        <break pos:start="305:9" pos:end="305:14">break;</break>

    <case pos:start="307:5" pos:end="307:43">case <expr pos:start="307:10" pos:end="307:42"><name pos:start="307:10" pos:end="307:23">DeviceInVendor</name> <operator pos:start="307:25" pos:end="307:25">|</operator> <name pos:start="307:27" pos:end="307:42">FTDI_GET_LATENCY</name></expr>:</case>

        <expr_stmt pos:start="309:9" pos:end="309:29"><expr pos:start="309:9" pos:end="309:28"><name pos:start="309:9" pos:end="309:15"><name pos:start="309:9" pos:end="309:12">data</name><index pos:start="309:13" pos:end="309:15">[<expr pos:start="309:14" pos:end="309:14"><literal type="number" pos:start="309:14" pos:end="309:14">0</literal></expr>]</index></name> <operator pos:start="309:17" pos:end="309:17">=</operator> <name pos:start="309:19" pos:end="309:28"><name pos:start="309:19" pos:end="309:19">s</name><operator pos:start="309:20" pos:end="309:21">-&gt;</operator><name pos:start="309:22" pos:end="309:28">latency</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:16"><expr pos:start="311:9" pos:end="311:15"><name pos:start="311:9" pos:end="311:11">ret</name> <operator pos:start="311:13" pos:end="311:13">=</operator> <literal type="number" pos:start="311:15" pos:end="311:15">1</literal></expr>;</expr_stmt>

        <break pos:start="313:9" pos:end="313:14">break;</break>

    <default pos:start="315:5" pos:end="315:12">default:</default>

    <label pos:start="317:5" pos:end="317:9"><name pos:start="317:5" pos:end="317:8">fail</name>:</label>

        <expr_stmt pos:start="319:9" pos:end="319:80"><expr pos:start="319:9" pos:end="319:79"><call pos:start="319:9" pos:end="319:79"><name pos:start="319:9" pos:end="319:15">DPRINTF</name><argument_list pos:start="319:16" pos:end="319:79">(<argument pos:start="319:17" pos:end="319:62"><expr pos:start="319:17" pos:end="319:62"><literal type="string" pos:start="319:17" pos:end="319:62">"got unsupported/bogus control %x, value %x\n"</literal></expr></argument>, <argument pos:start="319:65" pos:end="319:71"><expr pos:start="319:65" pos:end="319:71"><name pos:start="319:65" pos:end="319:71">request</name></expr></argument>, <argument pos:start="319:74" pos:end="319:78"><expr pos:start="319:74" pos:end="319:78"><name pos:start="319:74" pos:end="319:78">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:28"><expr pos:start="321:9" pos:end="321:27"><name pos:start="321:9" pos:end="321:11">ret</name> <operator pos:start="321:13" pos:end="321:13">=</operator> <name pos:start="321:15" pos:end="321:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="323:9" pos:end="323:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="327:5" pos:end="327:15">return <expr pos:start="327:12" pos:end="327:14"><name pos:start="327:12" pos:end="327:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
