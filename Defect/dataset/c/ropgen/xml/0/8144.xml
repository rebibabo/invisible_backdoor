<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8144.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">colo_compare_connection</name><parameter_list pos:start="1:36" pos:end="1:66">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:65">user_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">CompareState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:31">= <expr pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:31">user_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">Connection</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">conn</name> <init pos:start="7:22" pos:end="7:29">= <expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">Packet</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">pkt</name> <init pos:start="9:17" pos:end="9:22">= <expr pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">GList</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:17">result</name> <init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="75:5">while <condition pos:start="17:11" pos:end="19:52">(<expr pos:start="17:12" pos:end="19:51"><operator pos:start="17:12" pos:end="17:12">!</operator><call pos:start="17:13" pos:end="17:49"><name pos:start="17:13" pos:end="17:28">g_queue_is_empty</name><argument_list pos:start="17:29" pos:end="17:49">(<argument pos:start="17:30" pos:end="17:48"><expr pos:start="17:30" pos:end="17:48"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:48"><name pos:start="17:31" pos:end="17:34">conn</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:48">primary_list</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:51" pos:end="17:52">&amp;&amp;</operator>

           <operator pos:start="19:12" pos:end="19:12">!</operator><call pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:28">g_queue_is_empty</name><argument_list pos:start="19:29" pos:end="19:51">(<argument pos:start="19:30" pos:end="19:50"><expr pos:start="19:30" pos:end="19:50"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:50"><name pos:start="19:31" pos:end="19:34">conn</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:50">secondary_list</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:54" pos:end="75:5">{<block_content pos:start="21:9" pos:end="73:9">

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><call pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:23">qemu_mutex_lock</name><argument_list pos:start="21:24" pos:end="21:45">(<argument pos:start="21:25" pos:end="21:44"><expr pos:start="21:25" pos:end="21:44"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:44"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:44">timer_check_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:11">pkt</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:51"><name pos:start="23:15" pos:end="23:30">g_queue_pop_tail</name><argument_list pos:start="23:31" pos:end="23:51">(<argument pos:start="23:32" pos:end="23:50"><expr pos:start="23:32" pos:end="23:50"><operator pos:start="23:32" pos:end="23:32">&amp;</operator><name pos:start="23:33" pos:end="23:50"><name pos:start="23:33" pos:end="23:36">conn</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:50">primary_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:25">qemu_mutex_unlock</name><argument_list pos:start="25:26" pos:end="25:47">(<argument pos:start="25:27" pos:end="25:46"><expr pos:start="25:27" pos:end="25:46"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:46"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:46">timer_check_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="29:74"><expr pos:start="27:9" pos:end="29:73"><name pos:start="27:9" pos:end="27:14">result</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="29:73"><name pos:start="27:18" pos:end="27:36">g_queue_find_custom</name><argument_list pos:start="27:37" pos:end="29:73">(<argument pos:start="27:38" pos:end="27:58"><expr pos:start="27:38" pos:end="27:58"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:58"><name pos:start="27:39" pos:end="27:42">conn</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:58">secondary_list</name></name></expr></argument>,

                              <argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">pkt</name></expr></argument>, <argument pos:start="29:36" pos:end="29:72"><expr pos:start="29:36" pos:end="29:72"><operator pos:start="29:36" pos:end="29:36">(</operator><name pos:start="29:37" pos:end="29:48">GCompareFunc</name><operator pos:start="29:49" pos:end="29:49">)</operator><name pos:start="29:50" pos:end="29:72">colo_packet_compare_all</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="73:9"><if pos:start="33:9" pos:end="49:9">if <condition pos:start="33:12" pos:end="33:19">(<expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:18">result</name></expr>)</condition> <block pos:start="33:21" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:38">

            <expr_stmt pos:start="35:13" pos:end="35:69"><expr pos:start="35:13" pos:end="35:68"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:68"><name pos:start="35:19" pos:end="35:34">compare_chr_send</name><argument_list pos:start="35:35" pos:end="35:68">(<argument pos:start="35:36" pos:end="35:45"><expr pos:start="35:36" pos:end="35:45"><name pos:start="35:36" pos:end="35:45"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:45">chr_out</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:56"><expr pos:start="35:48" pos:end="35:56"><name pos:start="35:48" pos:end="35:56"><name pos:start="35:48" pos:end="35:50">pkt</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:56">data</name></name></expr></argument>, <argument pos:start="35:59" pos:end="35:67"><expr pos:start="35:59" pos:end="35:67"><name pos:start="35:59" pos:end="35:67"><name pos:start="35:59" pos:end="35:61">pkt</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:67">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:24">(<expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:21">&lt;</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>)</condition> <block pos:start="37:26" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:64">

                <expr_stmt pos:start="39:17" pos:end="39:64"><expr pos:start="39:17" pos:end="39:63"><call pos:start="39:17" pos:end="39:63"><name pos:start="39:17" pos:end="39:28">error_report</name><argument_list pos:start="39:29" pos:end="39:63">(<argument pos:start="39:30" pos:end="39:62"><expr pos:start="39:30" pos:end="39:62"><literal type="string" pos:start="39:30" pos:end="39:62">"colo_send_primary_packet failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:70"><expr pos:start="43:13" pos:end="43:69"><call pos:start="43:13" pos:end="43:69"><name pos:start="43:13" pos:end="43:35">trace_colo_compare_main</name><argument_list pos:start="43:36" pos:end="43:69">(<argument pos:start="43:37" pos:end="43:68"><expr pos:start="43:37" pos:end="43:68"><literal type="string" pos:start="43:37" pos:end="43:68">"packet same and release packet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:64"><expr pos:start="45:13" pos:end="45:63"><call pos:start="45:13" pos:end="45:63"><name pos:start="45:13" pos:end="45:26">g_queue_remove</name><argument_list pos:start="45:27" pos:end="45:63">(<argument pos:start="45:28" pos:end="45:48"><expr pos:start="45:28" pos:end="45:48"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:48"><name pos:start="45:29" pos:end="45:32">conn</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:48">secondary_list</name></name></expr></argument>, <argument pos:start="45:51" pos:end="45:62"><expr pos:start="45:51" pos:end="45:62"><name pos:start="45:51" pos:end="45:62"><name pos:start="45:51" pos:end="45:56">result</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:62">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:38"><expr pos:start="47:13" pos:end="47:37"><call pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:26">packet_destroy</name><argument_list pos:start="47:27" pos:end="47:37">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">pkt</name></expr></argument>, <argument pos:start="47:33" pos:end="47:36"><expr pos:start="47:33" pos:end="47:36"><name pos:start="47:33" pos:end="47:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="73:9">else <block pos:start="49:16" pos:end="73:9">{<block_content pos:start="61:13" pos:end="71:18">

            <comment type="block" pos:start="51:13" pos:end="59:15">/*

             * If one packet arrive late, the secondary_list or

             * primary_list will be empty, so we can't compare it

             * until next comparison.

             */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><call pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:35">trace_colo_compare_main</name><argument_list pos:start="61:36" pos:end="61:55">(<argument pos:start="61:37" pos:end="61:54"><expr pos:start="61:37" pos:end="61:54"><literal type="string" pos:start="61:37" pos:end="61:54">"packet different"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:50"><expr pos:start="63:13" pos:end="63:49"><call pos:start="63:13" pos:end="63:49"><name pos:start="63:13" pos:end="63:27">qemu_mutex_lock</name><argument_list pos:start="63:28" pos:end="63:49">(<argument pos:start="63:29" pos:end="63:48"><expr pos:start="63:29" pos:end="63:48"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:48"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:48">timer_check_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:56"><expr pos:start="65:13" pos:end="65:55"><call pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:29">g_queue_push_tail</name><argument_list pos:start="65:30" pos:end="65:55">(<argument pos:start="65:31" pos:end="65:49"><expr pos:start="65:31" pos:end="65:49"><operator pos:start="65:31" pos:end="65:31">&amp;</operator><name pos:start="65:32" pos:end="65:49"><name pos:start="65:32" pos:end="65:35">conn</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:49">primary_list</name></name></expr></argument>, <argument pos:start="65:52" pos:end="65:54"><expr pos:start="65:52" pos:end="65:54"><name pos:start="65:52" pos:end="65:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:52"><expr pos:start="67:13" pos:end="67:51"><call pos:start="67:13" pos:end="67:51"><name pos:start="67:13" pos:end="67:29">qemu_mutex_unlock</name><argument_list pos:start="67:30" pos:end="67:51">(<argument pos:start="67:31" pos:end="67:50"><expr pos:start="67:31" pos:end="67:50"><operator pos:start="67:31" pos:end="67:31">&amp;</operator><name pos:start="67:32" pos:end="67:50"><name pos:start="67:32" pos:end="67:32">s</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:50">timer_check_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="69:13" pos:end="69:48">/* TODO: colo_notify_checkpoint();*/</comment>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
