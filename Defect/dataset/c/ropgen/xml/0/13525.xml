<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13525.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">parse_playlist</name><parameter_list pos:start="1:26" pos:end="3:63">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:36">HLSContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">c</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">url</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:45"><decl pos:start="3:27" pos:end="3:45"><type pos:start="3:27" pos:end="3:45"><name pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:32">struct</name> <name pos:start="3:34" pos:end="3:40">variant</name></name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">var</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><name pos:start="3:48" pos:end="3:58">AVIOContext</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:62">in</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="257:1">{<block_content pos:start="7:5" pos:end="255:15">

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:27">is_segment</name> <init pos:start="7:29" pos:end="7:31">= <expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr></init></decl>, <decl pos:start="7:34" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:43">is_variant</name> <init pos:start="7:45" pos:end="7:47">= <expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">0</literal></expr></init></decl>, <decl pos:start="7:50" pos:end="7:62"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:50" pos:end="7:58">bandwidth</name> <init pos:start="7:60" pos:end="7:62">= <expr pos:start="7:62" pos:end="7:62"><literal type="number" pos:start="7:62" pos:end="7:62">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20">duration</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:16">KeyType</name></name></type> <name pos:start="11:18" pos:end="11:25">key_type</name> <init pos:start="11:27" pos:end="11:36">= <expr pos:start="11:29" pos:end="11:36"><name pos:start="11:29" pos:end="11:36">KEY_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:14">iv</name><index pos:start="13:15" pos:end="13:18">[<expr pos:start="13:16" pos:end="13:17"><literal type="number" pos:start="13:16" pos:end="13:17">16</literal></expr>]</index></name> <init pos:start="13:20" pos:end="13:23">= <expr pos:start="13:22" pos:end="13:23"><literal type="string" pos:start="13:22" pos:end="13:23">""</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">has_iv</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:12">key</name><index pos:start="17:13" pos:end="17:26">[<expr pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:25">MAX_URL_SIZE</name></expr>]</index></name> <init pos:start="17:28" pos:end="17:31">= <expr pos:start="17:30" pos:end="17:31"><literal type="string" pos:start="17:30" pos:end="17:31">""</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:13">line</name><index pos:start="19:14" pos:end="19:19">[<expr pos:start="19:15" pos:end="19:18"><literal type="number" pos:start="19:15" pos:end="19:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:14">char</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:19">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">close_in</name> <init pos:start="23:18" pos:end="23:20">= <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">uint8_t</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:20">new_url</name> <init pos:start="25:22" pos:end="25:27">= <expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:11">in</name></expr>)</condition> <block pos:start="29:14" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:23">

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:16">close_in</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:23"><if pos:start="33:9" pos:end="37:23">if <condition pos:start="33:12" pos:end="35:64">(<expr pos:start="33:13" pos:end="35:63"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:16">ret</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="35:58"><name pos:start="33:20" pos:end="33:29">avio_open2</name><argument_list pos:start="33:30" pos:end="35:58">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:33">in</name></expr></argument>, <argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:38">url</name></expr></argument>, <argument pos:start="33:41" pos:end="33:54"><expr pos:start="33:41" pos:end="33:54"><name pos:start="33:41" pos:end="33:54">AVIO_FLAG_READ</name></expr></argument>,

                              <argument pos:start="35:31" pos:end="35:51"><expr pos:start="35:31" pos:end="35:51"><name pos:start="35:31" pos:end="35:51"><name pos:start="35:31" pos:end="35:31">c</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:51">interrupt_callback</name></name></expr></argument>, <argument pos:start="35:54" pos:end="35:57"><expr pos:start="35:54" pos:end="35:57"><name pos:start="35:54" pos:end="35:57">NULL</name></expr></argument>)</argument_list></call><operator pos:start="35:59" pos:end="35:59">)</operator> <operator pos:start="35:61" pos:end="35:61">&lt;</operator> <literal type="number" pos:start="35:63" pos:end="35:63">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:23"><block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:22"><if pos:start="43:5" pos:end="45:22">if <condition pos:start="43:8" pos:end="43:74">(<expr pos:start="43:9" pos:end="43:73"><call pos:start="43:9" pos:end="43:68"><name pos:start="43:9" pos:end="43:18">av_opt_get</name><argument_list pos:start="43:19" pos:end="43:68">(<argument pos:start="43:20" pos:end="43:21"><expr pos:start="43:20" pos:end="43:21"><name pos:start="43:20" pos:end="43:21">in</name></expr></argument>, <argument pos:start="43:24" pos:end="43:33"><expr pos:start="43:24" pos:end="43:33"><literal type="string" pos:start="43:24" pos:end="43:33">"location"</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:57"><expr pos:start="43:36" pos:end="43:57"><name pos:start="43:36" pos:end="43:57">AV_OPT_SEARCH_CHILDREN</name></expr></argument>, <argument pos:start="43:60" pos:end="43:67"><expr pos:start="43:60" pos:end="43:67"><operator pos:start="43:60" pos:end="43:60">&amp;</operator><name pos:start="43:61" pos:end="43:67">new_url</name></expr></argument>)</argument_list></call> <operator pos:start="43:70" pos:end="43:71">&gt;=</operator> <literal type="number" pos:start="43:73" pos:end="43:73">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:22"><block_content pos:start="45:9" pos:end="45:22">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">url</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:21">new_url</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:44"><expr pos:start="49:5" pos:end="49:43"><call pos:start="49:5" pos:end="49:43"><name pos:start="49:5" pos:end="49:19">read_chomp_line</name><argument_list pos:start="49:20" pos:end="49:43">(<argument pos:start="49:21" pos:end="49:22"><expr pos:start="49:21" pos:end="49:22"><name pos:start="49:21" pos:end="49:22">in</name></expr></argument>, <argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><name pos:start="49:25" pos:end="49:28">line</name></expr></argument>, <argument pos:start="49:31" pos:end="49:42"><expr pos:start="49:31" pos:end="49:42"><sizeof pos:start="49:31" pos:end="49:42">sizeof<argument_list pos:start="49:37" pos:end="49:42">(<argument pos:start="49:38" pos:end="49:41"><expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:32">(<expr pos:start="51:9" pos:end="51:31"><call pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:14">strcmp</name><argument_list pos:start="51:15" pos:end="51:31">(<argument pos:start="51:16" pos:end="51:19"><expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">line</name></expr></argument>, <argument pos:start="51:22" pos:end="51:30"><expr pos:start="51:22" pos:end="51:30"><literal type="string" pos:start="51:22" pos:end="51:30">"#EXTM3U"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:34" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:12">(<expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">var</name></expr>)</condition> <block pos:start="61:14" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:26">

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><call pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:25">free_segment_list</name><argument_list pos:start="63:26" pos:end="63:30">(<argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">var</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:21">finished</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="69:5" pos:end="239:5">while <condition pos:start="69:11" pos:end="69:28">(<expr pos:start="69:12" pos:end="69:27"><operator pos:start="69:12" pos:end="69:12">!</operator><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:14">in</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:27">eof_reached</name></name></expr>)</condition> <block pos:start="69:30" pos:end="239:5">{<block_content pos:start="71:9" pos:end="237:9">

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><call pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:23">read_chomp_line</name><argument_list pos:start="71:24" pos:end="71:47">(<argument pos:start="71:25" pos:end="71:26"><expr pos:start="71:25" pos:end="71:26"><name pos:start="71:25" pos:end="71:26">in</name></expr></argument>, <argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><name pos:start="71:29" pos:end="71:32">line</name></expr></argument>, <argument pos:start="71:35" pos:end="71:46"><expr pos:start="71:35" pos:end="71:46"><sizeof pos:start="71:35" pos:end="71:46">sizeof<argument_list pos:start="71:41" pos:end="71:46">(<argument pos:start="71:42" pos:end="71:45"><expr pos:start="71:42" pos:end="71:45"><name pos:start="71:42" pos:end="71:45">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="237:9"><if pos:start="73:9" pos:end="85:9">if <condition pos:start="73:12" pos:end="73:58">(<expr pos:start="73:13" pos:end="73:57"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:23">av_strstart</name><argument_list pos:start="73:24" pos:end="73:57">(<argument pos:start="73:25" pos:end="73:28"><expr pos:start="73:25" pos:end="73:28"><name pos:start="73:25" pos:end="73:28">line</name></expr></argument>, <argument pos:start="73:31" pos:end="73:50"><expr pos:start="73:31" pos:end="73:50"><literal type="string" pos:start="73:31" pos:end="73:50">"#EXT-X-STREAM-INF:"</literal></expr></argument>, <argument pos:start="73:53" pos:end="73:56"><expr pos:start="73:53" pos:end="73:56"><operator pos:start="73:53" pos:end="73:53">&amp;</operator><name pos:start="73:54" pos:end="73:56">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:60" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:45">

            <decl_stmt pos:start="75:13" pos:end="75:45"><decl pos:start="75:13" pos:end="75:44"><type pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:18">struct</name> <name pos:start="75:20" pos:end="75:31">variant_info</name></name></type> <name pos:start="75:33" pos:end="75:36">info</name> <init pos:start="75:38" pos:end="75:44">= <expr pos:start="75:40" pos:end="75:44"><block pos:start="75:40" pos:end="75:44">{<expr pos:start="75:41" pos:end="75:43"><block pos:start="75:41" pos:end="75:43">{<expr pos:start="75:42" pos:end="75:42"><literal type="number" pos:start="75:42" pos:end="75:42">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:22">is_variant</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <literal type="number" pos:start="77:26" pos:end="77:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="81:38"><expr pos:start="79:13" pos:end="81:37"><call pos:start="79:13" pos:end="81:37"><name pos:start="79:13" pos:end="79:30">ff_parse_key_value</name><argument_list pos:start="79:31" pos:end="81:37">(<argument pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:34">ptr</name></expr></argument>, <argument pos:start="79:37" pos:end="79:77"><expr pos:start="79:37" pos:end="79:77"><operator pos:start="79:37" pos:end="79:37">(</operator><name pos:start="79:38" pos:end="79:56">ff_parse_key_val_cb</name><operator pos:start="79:57" pos:end="79:57">)</operator> <name pos:start="79:59" pos:end="79:77">handle_variant_args</name></expr></argument>,

                               <argument pos:start="81:32" pos:end="81:36"><expr pos:start="81:32" pos:end="81:36"><operator pos:start="81:32" pos:end="81:32">&amp;</operator><name pos:start="81:33" pos:end="81:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:45"><expr pos:start="83:13" pos:end="83:44"><name pos:start="83:13" pos:end="83:21">bandwidth</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <call pos:start="83:25" pos:end="83:44"><name pos:start="83:25" pos:end="83:28">atoi</name><argument_list pos:start="83:29" pos:end="83:44">(<argument pos:start="83:30" pos:end="83:43"><expr pos:start="83:30" pos:end="83:43"><name pos:start="83:30" pos:end="83:43"><name pos:start="83:30" pos:end="83:33">info</name><operator pos:start="83:34" pos:end="83:34">.</operator><name pos:start="83:35" pos:end="83:43">bandwidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="85:11" pos:end="111:9">else if <condition pos:start="85:19" pos:end="85:58">(<expr pos:start="85:20" pos:end="85:57"><call pos:start="85:20" pos:end="85:57"><name pos:start="85:20" pos:end="85:30">av_strstart</name><argument_list pos:start="85:31" pos:end="85:57">(<argument pos:start="85:32" pos:end="85:35"><expr pos:start="85:32" pos:end="85:35"><name pos:start="85:32" pos:end="85:35">line</name></expr></argument>, <argument pos:start="85:38" pos:end="85:50"><expr pos:start="85:38" pos:end="85:50"><literal type="string" pos:start="85:38" pos:end="85:50">"#EXT-X-KEY:"</literal></expr></argument>, <argument pos:start="85:53" pos:end="85:56"><expr pos:start="85:53" pos:end="85:56"><operator pos:start="85:53" pos:end="85:53">&amp;</operator><name pos:start="85:54" pos:end="85:56">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:60" pos:end="111:9">{<block_content pos:start="87:13" pos:end="109:51">

            <decl_stmt pos:start="87:13" pos:end="87:41"><decl pos:start="87:13" pos:end="87:40"><type pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:18">struct</name> <name pos:start="87:20" pos:end="87:27">key_info</name></name></type> <name pos:start="87:29" pos:end="87:32">info</name> <init pos:start="87:34" pos:end="87:40">= <expr pos:start="87:36" pos:end="87:40"><block pos:start="87:36" pos:end="87:40">{<expr pos:start="87:37" pos:end="87:39"><block pos:start="87:37" pos:end="87:39">{<expr pos:start="87:38" pos:end="87:38"><literal type="number" pos:start="87:38" pos:end="87:38">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="89:13" pos:end="91:38"><expr pos:start="89:13" pos:end="91:37"><call pos:start="89:13" pos:end="91:37"><name pos:start="89:13" pos:end="89:30">ff_parse_key_value</name><argument_list pos:start="89:31" pos:end="91:37">(<argument pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:34">ptr</name></expr></argument>, <argument pos:start="89:37" pos:end="89:73"><expr pos:start="89:37" pos:end="89:73"><operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:56">ff_parse_key_val_cb</name><operator pos:start="89:57" pos:end="89:57">)</operator> <name pos:start="89:59" pos:end="89:73">handle_key_args</name></expr></argument>,

                               <argument pos:start="91:32" pos:end="91:36"><expr pos:start="91:32" pos:end="91:36"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:32"><expr pos:start="93:13" pos:end="93:31"><name pos:start="93:13" pos:end="93:20">key_type</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:31">KEY_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:23"><expr pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:18">has_iv</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:39"><if pos:start="97:13" pos:end="99:39">if <condition pos:start="97:16" pos:end="97:48">(<expr pos:start="97:17" pos:end="97:47"><operator pos:start="97:17" pos:end="97:17">!</operator><call pos:start="97:18" pos:end="97:47"><name pos:start="97:18" pos:end="97:23">strcmp</name><argument_list pos:start="97:24" pos:end="97:47">(<argument pos:start="97:25" pos:end="97:35"><expr pos:start="97:25" pos:end="97:35"><name pos:start="97:25" pos:end="97:35"><name pos:start="97:25" pos:end="97:28">info</name><operator pos:start="97:29" pos:end="97:29">.</operator><name pos:start="97:30" pos:end="97:35">method</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:46"><expr pos:start="97:38" pos:end="97:46"><literal type="string" pos:start="97:38" pos:end="97:46">"AES-128"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:39"><block_content pos:start="99:17" pos:end="99:39">

                <expr_stmt pos:start="99:17" pos:end="99:39"><expr pos:start="99:17" pos:end="99:38"><name pos:start="99:17" pos:end="99:24">key_type</name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:38">KEY_AES_128</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:73">(<expr pos:start="101:17" pos:end="101:72"><operator pos:start="101:17" pos:end="101:17">!</operator><call pos:start="101:18" pos:end="101:42"><name pos:start="101:18" pos:end="101:24">strncmp</name><argument_list pos:start="101:25" pos:end="101:42">(<argument pos:start="101:26" pos:end="101:32"><expr pos:start="101:26" pos:end="101:32"><name pos:start="101:26" pos:end="101:32"><name pos:start="101:26" pos:end="101:29">info</name><operator pos:start="101:30" pos:end="101:30">.</operator><name pos:start="101:31" pos:end="101:32">iv</name></name></expr></argument>, <argument pos:start="101:35" pos:end="101:38"><expr pos:start="101:35" pos:end="101:38"><literal type="string" pos:start="101:35" pos:end="101:38">"0x"</literal></expr></argument>, <argument pos:start="101:41" pos:end="101:41"><expr pos:start="101:41" pos:end="101:41"><literal type="number" pos:start="101:41" pos:end="101:41">2</literal></expr></argument>)</argument_list></call> <operator pos:start="101:44" pos:end="101:45">||</operator> <operator pos:start="101:47" pos:end="101:47">!</operator><call pos:start="101:48" pos:end="101:72"><name pos:start="101:48" pos:end="101:54">strncmp</name><argument_list pos:start="101:55" pos:end="101:72">(<argument pos:start="101:56" pos:end="101:62"><expr pos:start="101:56" pos:end="101:62"><name pos:start="101:56" pos:end="101:62"><name pos:start="101:56" pos:end="101:59">info</name><operator pos:start="101:60" pos:end="101:60">.</operator><name pos:start="101:61" pos:end="101:62">iv</name></name></expr></argument>, <argument pos:start="101:65" pos:end="101:68"><expr pos:start="101:65" pos:end="101:68"><literal type="string" pos:start="101:65" pos:end="101:68">"0X"</literal></expr></argument>, <argument pos:start="101:71" pos:end="101:71"><expr pos:start="101:71" pos:end="101:71"><literal type="number" pos:start="101:71" pos:end="101:71">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:75" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:27">

                <expr_stmt pos:start="103:17" pos:end="103:48"><expr pos:start="103:17" pos:end="103:47"><call pos:start="103:17" pos:end="103:47"><name pos:start="103:17" pos:end="103:30">ff_hex_to_data</name><argument_list pos:start="103:31" pos:end="103:47">(<argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">iv</name></expr></argument>, <argument pos:start="103:36" pos:end="103:46"><expr pos:start="103:36" pos:end="103:46"><name pos:start="103:36" pos:end="103:42"><name pos:start="103:36" pos:end="103:39">info</name><operator pos:start="103:40" pos:end="103:40">.</operator><name pos:start="103:41" pos:end="103:42">iv</name></name> <operator pos:start="103:44" pos:end="103:44">+</operator> <literal type="number" pos:start="103:46" pos:end="103:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:27"><expr pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:22">has_iv</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <literal type="number" pos:start="105:26" pos:end="105:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:51"><expr pos:start="109:13" pos:end="109:50"><call pos:start="109:13" pos:end="109:50"><name pos:start="109:13" pos:end="109:22">av_strlcpy</name><argument_list pos:start="109:23" pos:end="109:50">(<argument pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:26">key</name></expr></argument>, <argument pos:start="109:29" pos:end="109:36"><expr pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:32">info</name><operator pos:start="109:33" pos:end="109:33">.</operator><name pos:start="109:34" pos:end="109:36">uri</name></name></expr></argument>, <argument pos:start="109:39" pos:end="109:49"><expr pos:start="109:39" pos:end="109:49"><sizeof pos:start="109:39" pos:end="109:49">sizeof<argument_list pos:start="109:45" pos:end="109:49">(<argument pos:start="109:46" pos:end="109:48"><expr pos:start="109:46" pos:end="109:48"><name pos:start="109:46" pos:end="109:48">key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="111:11" pos:end="129:9">else if <condition pos:start="111:19" pos:end="111:69">(<expr pos:start="111:20" pos:end="111:68"><call pos:start="111:20" pos:end="111:68"><name pos:start="111:20" pos:end="111:30">av_strstart</name><argument_list pos:start="111:31" pos:end="111:68">(<argument pos:start="111:32" pos:end="111:35"><expr pos:start="111:32" pos:end="111:35"><name pos:start="111:32" pos:end="111:35">line</name></expr></argument>, <argument pos:start="111:38" pos:end="111:61"><expr pos:start="111:38" pos:end="111:61"><literal type="string" pos:start="111:38" pos:end="111:61">"#EXT-X-TARGETDURATION:"</literal></expr></argument>, <argument pos:start="111:64" pos:end="111:67"><expr pos:start="111:64" pos:end="111:67"><operator pos:start="111:64" pos:end="111:64">&amp;</operator><name pos:start="111:65" pos:end="111:67">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:71" pos:end="129:9">{<block_content pos:start="113:13" pos:end="127:60">

            <if_stmt pos:start="113:13" pos:end="125:13"><if pos:start="113:13" pos:end="125:13">if <condition pos:start="113:16" pos:end="113:21">(<expr pos:start="113:17" pos:end="113:20"><operator pos:start="113:17" pos:end="113:17">!</operator><name pos:start="113:18" pos:end="113:20">var</name></expr>)</condition> <block pos:start="113:23" pos:end="125:13">{<block_content pos:start="115:17" pos:end="123:17">

                <expr_stmt pos:start="115:17" pos:end="115:51"><expr pos:start="115:17" pos:end="115:50"><name pos:start="115:17" pos:end="115:19">var</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <call pos:start="115:23" pos:end="115:50"><name pos:start="115:23" pos:end="115:33">new_variant</name><argument_list pos:start="115:34" pos:end="115:50">(<argument pos:start="115:35" pos:end="115:35"><expr pos:start="115:35" pos:end="115:35"><name pos:start="115:35" pos:end="115:35">c</name></expr></argument>, <argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><literal type="number" pos:start="115:38" pos:end="115:38">0</literal></expr></argument>, <argument pos:start="115:41" pos:end="115:43"><expr pos:start="115:41" pos:end="115:43"><name pos:start="115:41" pos:end="115:43">url</name></expr></argument>, <argument pos:start="115:46" pos:end="115:49"><expr pos:start="115:46" pos:end="115:49"><name pos:start="115:46" pos:end="115:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="123:17"><if pos:start="117:17" pos:end="123:17">if <condition pos:start="117:20" pos:end="117:25">(<expr pos:start="117:21" pos:end="117:24"><operator pos:start="117:21" pos:end="117:21">!</operator><name pos:start="117:22" pos:end="117:24">var</name></expr>)</condition> <block pos:start="117:27" pos:end="123:17">{<block_content pos:start="119:21" pos:end="121:30">

                    <expr_stmt pos:start="119:21" pos:end="119:42"><expr pos:start="119:21" pos:end="119:41"><name pos:start="119:21" pos:end="119:23">ret</name> <operator pos:start="119:25" pos:end="119:25">=</operator> <call pos:start="119:27" pos:end="119:41"><name pos:start="119:27" pos:end="119:33">AVERROR</name><argument_list pos:start="119:34" pos:end="119:41">(<argument pos:start="119:35" pos:end="119:40"><expr pos:start="119:35" pos:end="119:40"><name pos:start="119:35" pos:end="119:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="121:21" pos:end="121:30">goto <name pos:start="121:26" pos:end="121:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:60"><expr pos:start="127:13" pos:end="127:59"><name pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:15">var</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:32">target_duration</name></name> <operator pos:start="127:34" pos:end="127:34">=</operator> <call pos:start="127:36" pos:end="127:44"><name pos:start="127:36" pos:end="127:39">atoi</name><argument_list pos:start="127:40" pos:end="127:44">(<argument pos:start="127:41" pos:end="127:43"><expr pos:start="127:41" pos:end="127:43"><name pos:start="127:41" pos:end="127:43">ptr</name></expr></argument>)</argument_list></call> <operator pos:start="127:46" pos:end="127:46">*</operator> <name pos:start="127:48" pos:end="127:59">AV_TIME_BASE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="147:9">else if <condition pos:start="129:19" pos:end="129:69">(<expr pos:start="129:20" pos:end="129:68"><call pos:start="129:20" pos:end="129:68"><name pos:start="129:20" pos:end="129:30">av_strstart</name><argument_list pos:start="129:31" pos:end="129:68">(<argument pos:start="129:32" pos:end="129:35"><expr pos:start="129:32" pos:end="129:35"><name pos:start="129:32" pos:end="129:35">line</name></expr></argument>, <argument pos:start="129:38" pos:end="129:61"><expr pos:start="129:38" pos:end="129:61"><literal type="string" pos:start="129:38" pos:end="129:61">"#EXT-X-MEDIA-SEQUENCE:"</literal></expr></argument>, <argument pos:start="129:64" pos:end="129:67"><expr pos:start="129:64" pos:end="129:67"><operator pos:start="129:64" pos:end="129:64">&amp;</operator><name pos:start="129:65" pos:end="129:67">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:71" pos:end="147:9">{<block_content pos:start="131:13" pos:end="145:42">

            <if_stmt pos:start="131:13" pos:end="143:13"><if pos:start="131:13" pos:end="143:13">if <condition pos:start="131:16" pos:end="131:21">(<expr pos:start="131:17" pos:end="131:20"><operator pos:start="131:17" pos:end="131:17">!</operator><name pos:start="131:18" pos:end="131:20">var</name></expr>)</condition> <block pos:start="131:23" pos:end="143:13">{<block_content pos:start="133:17" pos:end="141:17">

                <expr_stmt pos:start="133:17" pos:end="133:51"><expr pos:start="133:17" pos:end="133:50"><name pos:start="133:17" pos:end="133:19">var</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <call pos:start="133:23" pos:end="133:50"><name pos:start="133:23" pos:end="133:33">new_variant</name><argument_list pos:start="133:34" pos:end="133:50">(<argument pos:start="133:35" pos:end="133:35"><expr pos:start="133:35" pos:end="133:35"><name pos:start="133:35" pos:end="133:35">c</name></expr></argument>, <argument pos:start="133:38" pos:end="133:38"><expr pos:start="133:38" pos:end="133:38"><literal type="number" pos:start="133:38" pos:end="133:38">0</literal></expr></argument>, <argument pos:start="133:41" pos:end="133:43"><expr pos:start="133:41" pos:end="133:43"><name pos:start="133:41" pos:end="133:43">url</name></expr></argument>, <argument pos:start="133:46" pos:end="133:49"><expr pos:start="133:46" pos:end="133:49"><name pos:start="133:46" pos:end="133:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="135:17" pos:end="141:17"><if pos:start="135:17" pos:end="141:17">if <condition pos:start="135:20" pos:end="135:25">(<expr pos:start="135:21" pos:end="135:24"><operator pos:start="135:21" pos:end="135:21">!</operator><name pos:start="135:22" pos:end="135:24">var</name></expr>)</condition> <block pos:start="135:27" pos:end="141:17">{<block_content pos:start="137:21" pos:end="139:30">

                    <expr_stmt pos:start="137:21" pos:end="137:42"><expr pos:start="137:21" pos:end="137:41"><name pos:start="137:21" pos:end="137:23">ret</name> <operator pos:start="137:25" pos:end="137:25">=</operator> <call pos:start="137:27" pos:end="137:41"><name pos:start="137:27" pos:end="137:33">AVERROR</name><argument_list pos:start="137:34" pos:end="137:41">(<argument pos:start="137:35" pos:end="137:40"><expr pos:start="137:35" pos:end="137:40"><name pos:start="137:35" pos:end="137:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="139:21" pos:end="139:30">goto <name pos:start="139:26" pos:end="139:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:42"><expr pos:start="145:13" pos:end="145:41"><name pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:15">var</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:29">start_seq_no</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <call pos:start="145:33" pos:end="145:41"><name pos:start="145:33" pos:end="145:36">atoi</name><argument_list pos:start="145:37" pos:end="145:41">(<argument pos:start="145:38" pos:end="145:40"><expr pos:start="145:38" pos:end="145:40"><name pos:start="145:38" pos:end="145:40">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="153:9">else if <condition pos:start="147:19" pos:end="147:61">(<expr pos:start="147:20" pos:end="147:60"><call pos:start="147:20" pos:end="147:60"><name pos:start="147:20" pos:end="147:30">av_strstart</name><argument_list pos:start="147:31" pos:end="147:60">(<argument pos:start="147:32" pos:end="147:35"><expr pos:start="147:32" pos:end="147:35"><name pos:start="147:32" pos:end="147:35">line</name></expr></argument>, <argument pos:start="147:38" pos:end="147:53"><expr pos:start="147:38" pos:end="147:53"><literal type="string" pos:start="147:38" pos:end="147:53">"#EXT-X-ENDLIST"</literal></expr></argument>, <argument pos:start="147:56" pos:end="147:59"><expr pos:start="147:56" pos:end="147:59"><operator pos:start="147:56" pos:end="147:56">&amp;</operator><name pos:start="147:57" pos:end="147:59">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:63" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:34">

            <if_stmt pos:start="149:13" pos:end="151:34"><if pos:start="149:13" pos:end="151:34">if <condition pos:start="149:16" pos:end="149:20">(<expr pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">var</name></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:34"><block_content pos:start="151:17" pos:end="151:34">

                <expr_stmt pos:start="151:17" pos:end="151:34"><expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:19">var</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:29">finished</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <literal type="number" pos:start="151:33" pos:end="151:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="153:11" pos:end="159:9">else if <condition pos:start="153:19" pos:end="153:55">(<expr pos:start="153:20" pos:end="153:54"><call pos:start="153:20" pos:end="153:54"><name pos:start="153:20" pos:end="153:30">av_strstart</name><argument_list pos:start="153:31" pos:end="153:54">(<argument pos:start="153:32" pos:end="153:35"><expr pos:start="153:32" pos:end="153:35"><name pos:start="153:32" pos:end="153:35">line</name></expr></argument>, <argument pos:start="153:38" pos:end="153:47"><expr pos:start="153:38" pos:end="153:47"><literal type="string" pos:start="153:38" pos:end="153:47">"#EXTINF:"</literal></expr></argument>, <argument pos:start="153:50" pos:end="153:53"><expr pos:start="153:50" pos:end="153:53"><operator pos:start="153:50" pos:end="153:50">&amp;</operator><name pos:start="153:51" pos:end="153:53">ptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:57" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:50">

            <expr_stmt pos:start="155:13" pos:end="155:27"><expr pos:start="155:13" pos:end="155:26"><name pos:start="155:13" pos:end="155:22">is_segment</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:50"><expr pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:20">duration</name>   <operator pos:start="157:24" pos:end="157:24">=</operator> <call pos:start="157:26" pos:end="157:34"><name pos:start="157:26" pos:end="157:29">atof</name><argument_list pos:start="157:30" pos:end="157:34">(<argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">ptr</name></expr></argument>)</argument_list></call> <operator pos:start="157:36" pos:end="157:36">*</operator> <name pos:start="157:38" pos:end="157:49">AV_TIME_BASE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="163:9">else if <condition pos:start="159:19" pos:end="159:48">(<expr pos:start="159:20" pos:end="159:47"><call pos:start="159:20" pos:end="159:47"><name pos:start="159:20" pos:end="159:30">av_strstart</name><argument_list pos:start="159:31" pos:end="159:47">(<argument pos:start="159:32" pos:end="159:35"><expr pos:start="159:32" pos:end="159:35"><name pos:start="159:32" pos:end="159:35">line</name></expr></argument>, <argument pos:start="159:38" pos:end="159:40"><expr pos:start="159:38" pos:end="159:40"><literal type="string" pos:start="159:38" pos:end="159:40">"#"</literal></expr></argument>, <argument pos:start="159:43" pos:end="159:46"><expr pos:start="159:43" pos:end="159:46"><name pos:start="159:43" pos:end="159:46">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:50" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:21">

            <continue pos:start="161:13" pos:end="161:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="163:11" pos:end="237:9">else if <condition pos:start="163:19" pos:end="163:27">(<expr pos:start="163:20" pos:end="163:26"><name pos:start="163:20" pos:end="163:26"><name pos:start="163:20" pos:end="163:23">line</name><index pos:start="163:24" pos:end="163:26">[<expr pos:start="163:25" pos:end="163:25"><literal type="number" pos:start="163:25" pos:end="163:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="163:29" pos:end="237:9">{<block_content pos:start="165:13" pos:end="235:13">

            <if_stmt pos:start="165:13" pos:end="179:13"><if pos:start="165:13" pos:end="179:13">if <condition pos:start="165:16" pos:end="165:27">(<expr pos:start="165:17" pos:end="165:26"><name pos:start="165:17" pos:end="165:26">is_variant</name></expr>)</condition> <block pos:start="165:29" pos:end="179:13">{<block_content pos:start="167:17" pos:end="177:31">

                <if_stmt pos:start="167:17" pos:end="173:17"><if pos:start="167:17" pos:end="173:17">if <condition pos:start="167:20" pos:end="167:58">(<expr pos:start="167:21" pos:end="167:57"><operator pos:start="167:21" pos:end="167:21">!</operator><call pos:start="167:22" pos:end="167:57"><name pos:start="167:22" pos:end="167:32">new_variant</name><argument_list pos:start="167:33" pos:end="167:57">(<argument pos:start="167:34" pos:end="167:34"><expr pos:start="167:34" pos:end="167:34"><name pos:start="167:34" pos:end="167:34">c</name></expr></argument>, <argument pos:start="167:37" pos:end="167:45"><expr pos:start="167:37" pos:end="167:45"><name pos:start="167:37" pos:end="167:45">bandwidth</name></expr></argument>, <argument pos:start="167:48" pos:end="167:51"><expr pos:start="167:48" pos:end="167:51"><name pos:start="167:48" pos:end="167:51">line</name></expr></argument>, <argument pos:start="167:54" pos:end="167:56"><expr pos:start="167:54" pos:end="167:56"><name pos:start="167:54" pos:end="167:56">url</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:60" pos:end="173:17">{<block_content pos:start="169:21" pos:end="171:30">

                    <expr_stmt pos:start="169:21" pos:end="169:42"><expr pos:start="169:21" pos:end="169:41"><name pos:start="169:21" pos:end="169:23">ret</name> <operator pos:start="169:25" pos:end="169:25">=</operator> <call pos:start="169:27" pos:end="169:41"><name pos:start="169:27" pos:end="169:33">AVERROR</name><argument_list pos:start="169:34" pos:end="169:41">(<argument pos:start="169:35" pos:end="169:40"><expr pos:start="169:35" pos:end="169:40"><name pos:start="169:35" pos:end="169:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="171:21" pos:end="171:30">goto <name pos:start="171:26" pos:end="171:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:31"><expr pos:start="175:17" pos:end="175:30"><name pos:start="175:17" pos:end="175:26">is_variant</name> <operator pos:start="175:28" pos:end="175:28">=</operator> <literal type="number" pos:start="175:30" pos:end="175:30">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:31"><expr pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:25">bandwidth</name>  <operator pos:start="177:28" pos:end="177:28">=</operator> <literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="181:13" pos:end="235:13"><if pos:start="181:13" pos:end="235:13">if <condition pos:start="181:16" pos:end="181:27">(<expr pos:start="181:17" pos:end="181:26"><name pos:start="181:17" pos:end="181:26">is_segment</name></expr>)</condition> <block pos:start="181:29" pos:end="235:13">{<block_content pos:start="183:17" pos:end="233:31">

                <decl_stmt pos:start="183:17" pos:end="183:36"><decl pos:start="183:17" pos:end="183:35"><type pos:start="183:17" pos:end="183:32"><name pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:22">struct</name> <name pos:start="183:24" pos:end="183:30">segment</name></name> <modifier pos:start="183:32" pos:end="183:32">*</modifier></type><name pos:start="183:33" pos:end="183:35">seg</name></decl>;</decl_stmt>

                <if_stmt pos:start="185:17" pos:end="197:17"><if pos:start="185:17" pos:end="197:17">if <condition pos:start="185:20" pos:end="185:25">(<expr pos:start="185:21" pos:end="185:24"><operator pos:start="185:21" pos:end="185:21">!</operator><name pos:start="185:22" pos:end="185:24">var</name></expr>)</condition> <block pos:start="185:27" pos:end="197:17">{<block_content pos:start="187:21" pos:end="195:21">

                    <expr_stmt pos:start="187:21" pos:end="187:55"><expr pos:start="187:21" pos:end="187:54"><name pos:start="187:21" pos:end="187:23">var</name> <operator pos:start="187:25" pos:end="187:25">=</operator> <call pos:start="187:27" pos:end="187:54"><name pos:start="187:27" pos:end="187:37">new_variant</name><argument_list pos:start="187:38" pos:end="187:54">(<argument pos:start="187:39" pos:end="187:39"><expr pos:start="187:39" pos:end="187:39"><name pos:start="187:39" pos:end="187:39">c</name></expr></argument>, <argument pos:start="187:42" pos:end="187:42"><expr pos:start="187:42" pos:end="187:42"><literal type="number" pos:start="187:42" pos:end="187:42">0</literal></expr></argument>, <argument pos:start="187:45" pos:end="187:47"><expr pos:start="187:45" pos:end="187:47"><name pos:start="187:45" pos:end="187:47">url</name></expr></argument>, <argument pos:start="187:50" pos:end="187:53"><expr pos:start="187:50" pos:end="187:53"><name pos:start="187:50" pos:end="187:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="189:21" pos:end="195:21"><if pos:start="189:21" pos:end="195:21">if <condition pos:start="189:24" pos:end="189:29">(<expr pos:start="189:25" pos:end="189:28"><operator pos:start="189:25" pos:end="189:25">!</operator><name pos:start="189:26" pos:end="189:28">var</name></expr>)</condition> <block pos:start="189:31" pos:end="195:21">{<block_content pos:start="191:25" pos:end="193:34">

                        <expr_stmt pos:start="191:25" pos:end="191:46"><expr pos:start="191:25" pos:end="191:45"><name pos:start="191:25" pos:end="191:27">ret</name> <operator pos:start="191:29" pos:end="191:29">=</operator> <call pos:start="191:31" pos:end="191:45"><name pos:start="191:31" pos:end="191:37">AVERROR</name><argument_list pos:start="191:38" pos:end="191:45">(<argument pos:start="191:39" pos:end="191:44"><expr pos:start="191:39" pos:end="191:44"><name pos:start="191:39" pos:end="191:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="193:25" pos:end="193:34">goto <name pos:start="193:30" pos:end="193:33">fail</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:56"><expr pos:start="199:17" pos:end="199:55"><name pos:start="199:17" pos:end="199:19">seg</name> <operator pos:start="199:21" pos:end="199:21">=</operator> <call pos:start="199:23" pos:end="199:55"><name pos:start="199:23" pos:end="199:31">av_malloc</name><argument_list pos:start="199:32" pos:end="199:55">(<argument pos:start="199:33" pos:end="199:54"><expr pos:start="199:33" pos:end="199:54"><sizeof pos:start="199:33" pos:end="199:54">sizeof<argument_list pos:start="199:39" pos:end="199:54">(<argument pos:start="199:40" pos:end="199:53"><expr pos:start="199:40" pos:end="199:53">struct <name pos:start="199:47" pos:end="199:53">segment</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="201:17" pos:end="207:17"><if pos:start="201:17" pos:end="207:17">if <condition pos:start="201:20" pos:end="201:25">(<expr pos:start="201:21" pos:end="201:24"><operator pos:start="201:21" pos:end="201:21">!</operator><name pos:start="201:22" pos:end="201:24">seg</name></expr>)</condition> <block pos:start="201:27" pos:end="207:17">{<block_content pos:start="203:21" pos:end="205:30">

                    <expr_stmt pos:start="203:21" pos:end="203:42"><expr pos:start="203:21" pos:end="203:41"><name pos:start="203:21" pos:end="203:23">ret</name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:41"><name pos:start="203:27" pos:end="203:33">AVERROR</name><argument_list pos:start="203:34" pos:end="203:41">(<argument pos:start="203:35" pos:end="203:40"><expr pos:start="203:35" pos:end="203:40"><name pos:start="203:35" pos:end="203:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="205:21" pos:end="205:30">goto <name pos:start="205:26" pos:end="205:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:41"><expr pos:start="209:17" pos:end="209:40"><name pos:start="209:17" pos:end="209:29"><name pos:start="209:17" pos:end="209:19">seg</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:29">duration</name></name> <operator pos:start="209:31" pos:end="209:31">=</operator> <name pos:start="209:33" pos:end="209:40">duration</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:41"><expr pos:start="211:17" pos:end="211:40"><name pos:start="211:17" pos:end="211:29"><name pos:start="211:17" pos:end="211:19">seg</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:29">key_type</name></name> <operator pos:start="211:31" pos:end="211:31">=</operator> <name pos:start="211:33" pos:end="211:40">key_type</name></expr>;</expr_stmt>

                <if_stmt pos:start="213:17" pos:end="225:17"><if pos:start="213:17" pos:end="217:17">if <condition pos:start="213:20" pos:end="213:27">(<expr pos:start="213:21" pos:end="213:26"><name pos:start="213:21" pos:end="213:26">has_iv</name></expr>)</condition> <block pos:start="213:29" pos:end="217:17">{<block_content pos:start="215:21" pos:end="215:52">

                    <expr_stmt pos:start="215:21" pos:end="215:52"><expr pos:start="215:21" pos:end="215:51"><call pos:start="215:21" pos:end="215:51"><name pos:start="215:21" pos:end="215:26">memcpy</name><argument_list pos:start="215:27" pos:end="215:51">(<argument pos:start="215:28" pos:end="215:34"><expr pos:start="215:28" pos:end="215:34"><name pos:start="215:28" pos:end="215:34"><name pos:start="215:28" pos:end="215:30">seg</name><operator pos:start="215:31" pos:end="215:32">-&gt;</operator><name pos:start="215:33" pos:end="215:34">iv</name></name></expr></argument>, <argument pos:start="215:37" pos:end="215:38"><expr pos:start="215:37" pos:end="215:38"><name pos:start="215:37" pos:end="215:38">iv</name></expr></argument>, <argument pos:start="215:41" pos:end="215:50"><expr pos:start="215:41" pos:end="215:50"><sizeof pos:start="215:41" pos:end="215:50">sizeof<argument_list pos:start="215:47" pos:end="215:50">(<argument pos:start="215:48" pos:end="215:49"><expr pos:start="215:48" pos:end="215:49"><name pos:start="215:48" pos:end="215:49">iv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="217:19" pos:end="225:17">else <block pos:start="217:24" pos:end="225:17">{<block_content pos:start="219:21" pos:end="223:47">

                    <decl_stmt pos:start="219:21" pos:end="219:66"><decl pos:start="219:21" pos:end="219:65"><type pos:start="219:21" pos:end="219:23"><name pos:start="219:21" pos:end="219:23">int</name></type> <name pos:start="219:25" pos:end="219:27">seq</name> <init pos:start="219:29" pos:end="219:65">= <expr pos:start="219:31" pos:end="219:65"><name pos:start="219:31" pos:end="219:47"><name pos:start="219:31" pos:end="219:33">var</name><operator pos:start="219:34" pos:end="219:35">-&gt;</operator><name pos:start="219:36" pos:end="219:47">start_seq_no</name></name> <operator pos:start="219:49" pos:end="219:49">+</operator> <name pos:start="219:51" pos:end="219:65"><name pos:start="219:51" pos:end="219:53">var</name><operator pos:start="219:54" pos:end="219:55">-&gt;</operator><name pos:start="219:56" pos:end="219:65">n_segments</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:56"><expr pos:start="221:21" pos:end="221:55"><call pos:start="221:21" pos:end="221:55"><name pos:start="221:21" pos:end="221:26">memset</name><argument_list pos:start="221:27" pos:end="221:55">(<argument pos:start="221:28" pos:end="221:34"><expr pos:start="221:28" pos:end="221:34"><name pos:start="221:28" pos:end="221:34"><name pos:start="221:28" pos:end="221:30">seg</name><operator pos:start="221:31" pos:end="221:32">-&gt;</operator><name pos:start="221:33" pos:end="221:34">iv</name></name></expr></argument>, <argument pos:start="221:37" pos:end="221:37"><expr pos:start="221:37" pos:end="221:37"><literal type="number" pos:start="221:37" pos:end="221:37">0</literal></expr></argument>, <argument pos:start="221:40" pos:end="221:54"><expr pos:start="221:40" pos:end="221:54"><sizeof pos:start="221:40" pos:end="221:54">sizeof<argument_list pos:start="221:46" pos:end="221:54">(<argument pos:start="221:47" pos:end="221:53"><expr pos:start="221:47" pos:end="221:53"><name pos:start="221:47" pos:end="221:53"><name pos:start="221:47" pos:end="221:49">seg</name><operator pos:start="221:50" pos:end="221:51">-&gt;</operator><name pos:start="221:52" pos:end="221:53">iv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:47"><expr pos:start="223:21" pos:end="223:46"><call pos:start="223:21" pos:end="223:46"><name pos:start="223:21" pos:end="223:27">AV_WB32</name><argument_list pos:start="223:28" pos:end="223:46">(<argument pos:start="223:29" pos:end="223:40"><expr pos:start="223:29" pos:end="223:40"><name pos:start="223:29" pos:end="223:35"><name pos:start="223:29" pos:end="223:31">seg</name><operator pos:start="223:32" pos:end="223:33">-&gt;</operator><name pos:start="223:34" pos:end="223:35">iv</name></name> <operator pos:start="223:37" pos:end="223:37">+</operator> <literal type="number" pos:start="223:39" pos:end="223:40">12</literal></expr></argument>, <argument pos:start="223:43" pos:end="223:45"><expr pos:start="223:43" pos:end="223:45"><name pos:start="223:43" pos:end="223:45">seq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:75"><expr pos:start="227:17" pos:end="227:74"><call pos:start="227:17" pos:end="227:74"><name pos:start="227:17" pos:end="227:36">ff_make_absolute_url</name><argument_list pos:start="227:37" pos:end="227:74">(<argument pos:start="227:38" pos:end="227:45"><expr pos:start="227:38" pos:end="227:45"><name pos:start="227:38" pos:end="227:45"><name pos:start="227:38" pos:end="227:40">seg</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:45">key</name></name></expr></argument>, <argument pos:start="227:48" pos:end="227:63"><expr pos:start="227:48" pos:end="227:63"><sizeof pos:start="227:48" pos:end="227:63">sizeof<argument_list pos:start="227:54" pos:end="227:63">(<argument pos:start="227:55" pos:end="227:62"><expr pos:start="227:55" pos:end="227:62"><name pos:start="227:55" pos:end="227:62"><name pos:start="227:55" pos:end="227:57">seg</name><operator pos:start="227:58" pos:end="227:59">-&gt;</operator><name pos:start="227:60" pos:end="227:62">key</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="227:66" pos:end="227:68"><expr pos:start="227:66" pos:end="227:68"><name pos:start="227:66" pos:end="227:68">url</name></expr></argument>, <argument pos:start="227:71" pos:end="227:73"><expr pos:start="227:71" pos:end="227:73"><name pos:start="227:71" pos:end="227:73">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:76"><expr pos:start="229:17" pos:end="229:75"><call pos:start="229:17" pos:end="229:75"><name pos:start="229:17" pos:end="229:36">ff_make_absolute_url</name><argument_list pos:start="229:37" pos:end="229:75">(<argument pos:start="229:38" pos:end="229:45"><expr pos:start="229:38" pos:end="229:45"><name pos:start="229:38" pos:end="229:45"><name pos:start="229:38" pos:end="229:40">seg</name><operator pos:start="229:41" pos:end="229:42">-&gt;</operator><name pos:start="229:43" pos:end="229:45">url</name></name></expr></argument>, <argument pos:start="229:48" pos:end="229:63"><expr pos:start="229:48" pos:end="229:63"><sizeof pos:start="229:48" pos:end="229:63">sizeof<argument_list pos:start="229:54" pos:end="229:63">(<argument pos:start="229:55" pos:end="229:62"><expr pos:start="229:55" pos:end="229:62"><name pos:start="229:55" pos:end="229:62"><name pos:start="229:55" pos:end="229:57">seg</name><operator pos:start="229:58" pos:end="229:59">-&gt;</operator><name pos:start="229:60" pos:end="229:62">url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="229:66" pos:end="229:68"><expr pos:start="229:66" pos:end="229:68"><name pos:start="229:66" pos:end="229:68">url</name></expr></argument>, <argument pos:start="229:71" pos:end="229:74"><expr pos:start="229:71" pos:end="229:74"><name pos:start="229:71" pos:end="229:74">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:68"><expr pos:start="231:17" pos:end="231:67"><call pos:start="231:17" pos:end="231:67"><name pos:start="231:17" pos:end="231:28">dynarray_add</name><argument_list pos:start="231:29" pos:end="231:67">(<argument pos:start="231:30" pos:end="231:43"><expr pos:start="231:30" pos:end="231:43"><operator pos:start="231:30" pos:end="231:30">&amp;</operator><name pos:start="231:31" pos:end="231:43"><name pos:start="231:31" pos:end="231:33">var</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:43">segments</name></name></expr></argument>, <argument pos:start="231:46" pos:end="231:61"><expr pos:start="231:46" pos:end="231:61"><operator pos:start="231:46" pos:end="231:46">&amp;</operator><name pos:start="231:47" pos:end="231:61"><name pos:start="231:47" pos:end="231:49">var</name><operator pos:start="231:50" pos:end="231:51">-&gt;</operator><name pos:start="231:52" pos:end="231:61">n_segments</name></name></expr></argument>, <argument pos:start="231:64" pos:end="231:66"><expr pos:start="231:64" pos:end="231:66"><name pos:start="231:64" pos:end="231:66">seg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:31"><expr pos:start="233:17" pos:end="233:30"><name pos:start="233:17" pos:end="233:26">is_segment</name> <operator pos:start="233:28" pos:end="233:28">=</operator> <literal type="number" pos:start="233:30" pos:end="233:30">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="241:5" pos:end="243:52"><if pos:start="241:5" pos:end="243:52">if <condition pos:start="241:8" pos:end="241:12">(<expr pos:start="241:9" pos:end="241:11"><name pos:start="241:9" pos:end="241:11">var</name></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:52"><block_content pos:start="243:9" pos:end="243:52">

        <expr_stmt pos:start="243:9" pos:end="243:52"><expr pos:start="243:9" pos:end="243:51"><name pos:start="243:9" pos:end="243:27"><name pos:start="243:9" pos:end="243:11">var</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:27">last_load_time</name></name> <operator pos:start="243:29" pos:end="243:29">=</operator> <call pos:start="243:31" pos:end="243:51"><name pos:start="243:31" pos:end="243:49">av_gettime_relative</name><argument_list pos:start="243:50" pos:end="243:51">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="247:1" pos:end="247:5"><name pos:start="247:1" pos:end="247:4">fail</name>:</label>

    <expr_stmt pos:start="249:5" pos:end="249:21"><expr pos:start="249:5" pos:end="249:20"><call pos:start="249:5" pos:end="249:20"><name pos:start="249:5" pos:end="249:11">av_free</name><argument_list pos:start="249:12" pos:end="249:20">(<argument pos:start="249:13" pos:end="249:19"><expr pos:start="249:13" pos:end="249:19"><name pos:start="249:13" pos:end="249:19">new_url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="253:23"><if pos:start="251:5" pos:end="253:23">if <condition pos:start="251:8" pos:end="251:17">(<expr pos:start="251:9" pos:end="251:16"><name pos:start="251:9" pos:end="251:16">close_in</name></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:23"><block_content pos:start="253:9" pos:end="253:23">

        <expr_stmt pos:start="253:9" pos:end="253:23"><expr pos:start="253:9" pos:end="253:22"><call pos:start="253:9" pos:end="253:22"><name pos:start="253:9" pos:end="253:18">avio_close</name><argument_list pos:start="253:19" pos:end="253:22">(<argument pos:start="253:20" pos:end="253:21"><expr pos:start="253:20" pos:end="253:21"><name pos:start="253:20" pos:end="253:21">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="255:5" pos:end="255:15">return <expr pos:start="255:12" pos:end="255:14"><name pos:start="255:12" pos:end="255:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
