<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21208.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">pci_piix3_xen_ide_unplug</name><parameter_list pos:start="1:36" pos:end="1:53">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:47">DeviceState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">pci_dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PCIIDEState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:24">pci_ide</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">DriveInfo</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">di</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name> <init pos:start="11:11" pos:end="11:13">= <expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:11">pci_dev</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:45"><name pos:start="15:15" pos:end="15:23">DO_UPCAST</name><argument_list pos:start="15:24" pos:end="15:45">(<argument pos:start="15:25" pos:end="15:33"><expr pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:33">PCIDevice</name></expr></argument>, <argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">qdev</name></expr></argument>, <argument pos:start="15:42" pos:end="15:44"><expr pos:start="15:42" pos:end="15:44"><name pos:start="15:42" pos:end="15:44">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:11">pci_ide</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:50"><name pos:start="17:15" pos:end="17:23">DO_UPCAST</name><argument_list pos:start="17:24" pos:end="17:50">(<argument pos:start="17:25" pos:end="17:35"><expr pos:start="17:25" pos:end="17:35"><name pos:start="17:25" pos:end="17:35">PCIIDEState</name></expr></argument>, <argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">dev</name></expr></argument>, <argument pos:start="17:43" pos:end="17:49"><expr pos:start="17:43" pos:end="17:49"><name pos:start="17:43" pos:end="17:49">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="43:5">for <control pos:start="21:9" pos:end="21:22">(<init pos:start="21:10" pos:end="21:10">;</init> <condition pos:start="21:12" pos:end="21:17"><expr pos:start="21:12" pos:end="21:16"><name pos:start="21:12" pos:end="21:12">i</name> <operator pos:start="21:14" pos:end="21:14">&lt;</operator> <literal type="number" pos:start="21:16" pos:end="21:16">3</literal></expr>;</condition> <incr pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:19">i</name><operator pos:start="21:20" pos:end="21:21">++</operator></expr></incr>)</control> <block pos:start="21:24" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:9">

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:10">di</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:42"><name pos:start="23:14" pos:end="23:31">drive_get_by_index</name><argument_list pos:start="23:32" pos:end="23:42">(<argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">IF_IDE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:41"><expr pos:start="23:41" pos:end="23:41"><name pos:start="23:41" pos:end="23:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="41:9"><if pos:start="25:9" pos:end="41:9">if <condition pos:start="25:12" pos:end="25:67">(<expr pos:start="25:13" pos:end="25:66"><name pos:start="25:13" pos:end="25:14">di</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <name pos:start="25:19" pos:end="25:22">NULL</name> <operator pos:start="25:24" pos:end="25:25">&amp;&amp;</operator> <name pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:28">di</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">bdrv</name></name> <operator pos:start="25:36" pos:end="25:37">!=</operator> <name pos:start="25:39" pos:end="25:42">NULL</name> <operator pos:start="25:44" pos:end="25:45">&amp;&amp;</operator> <operator pos:start="25:47" pos:end="25:47">!</operator><name pos:start="25:48" pos:end="25:66"><name pos:start="25:48" pos:end="25:49">di</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:55">bdrv</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:66">removable</name></name></expr>)</condition> <block pos:start="25:69" pos:end="41:9">{<block_content pos:start="27:13" pos:end="39:30">

            <decl_stmt pos:start="27:13" pos:end="27:58"><decl pos:start="27:13" pos:end="27:57"><type pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:23">DeviceState</name> <modifier pos:start="27:25" pos:end="27:25">*</modifier></type><name pos:start="27:26" pos:end="27:27">ds</name> <init pos:start="27:29" pos:end="27:57">= <expr pos:start="27:31" pos:end="27:57"><call pos:start="27:31" pos:end="27:57"><name pos:start="27:31" pos:end="27:47">bdrv_get_attached</name><argument_list pos:start="27:48" pos:end="27:57">(<argument pos:start="27:49" pos:end="27:56"><expr pos:start="27:49" pos:end="27:56"><name pos:start="27:49" pos:end="27:56"><name pos:start="27:49" pos:end="27:50">di</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:56">bdrv</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:19">(<expr pos:start="29:17" pos:end="29:18"><name pos:start="29:17" pos:end="29:18">ds</name></expr>)</condition> <block pos:start="29:21" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:42">

                <expr_stmt pos:start="31:17" pos:end="31:42"><expr pos:start="31:17" pos:end="31:41"><call pos:start="31:17" pos:end="31:41"><name pos:start="31:17" pos:end="31:27">bdrv_detach</name><argument_list pos:start="31:28" pos:end="31:41">(<argument pos:start="31:29" pos:end="31:36"><expr pos:start="31:29" pos:end="31:36"><name pos:start="31:29" pos:end="31:36"><name pos:start="31:29" pos:end="31:30">di</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:36">bdrv</name></name></expr></argument>, <argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><call pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:22">bdrv_close</name><argument_list pos:start="35:23" pos:end="35:32">(<argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:25">di</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:31">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:58"><expr pos:start="37:13" pos:end="37:57"><name pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:19">pci_ide</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">bus</name><index pos:start="37:25" pos:end="37:33">[<expr pos:start="37:26" pos:end="37:32"><name pos:start="37:26" pos:end="37:32"><name pos:start="37:26" pos:end="37:27">di</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:32">bus</name></name></expr>]</index></name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:37">ifs</name><index pos:start="37:38" pos:end="37:47">[<expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:40">di</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:46">unit</name></name></expr>]</index></name><operator pos:start="37:48" pos:end="37:48">.</operator><name pos:start="37:49" pos:end="37:50">bs</name> <operator pos:start="37:52" pos:end="37:52">=</operator> <name pos:start="37:54" pos:end="37:57">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><call pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:25">drive_put_ref</name><argument_list pos:start="39:26" pos:end="39:29">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">di</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:18">qdev_reset_all</name><argument_list pos:start="45:19" pos:end="45:40">(<argument pos:start="45:20" pos:end="45:39"><expr pos:start="45:20" pos:end="45:39"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><operator pos:start="45:21" pos:end="45:21">(</operator><name pos:start="45:22" pos:end="45:38"><name pos:start="45:22" pos:end="45:28">pci_ide</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:33">dev</name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:38">qdev</name></name><operator pos:start="45:39" pos:end="45:39">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
