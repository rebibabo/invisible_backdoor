<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2437.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">new_video_stream</name><parameter_list pos:start="1:29" pos:end="1:49">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">oc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="271:1">{<block_content pos:start="5:5" pos:end="269:33">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:29">video_enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:8">enum</name> <name pos:start="9:10" pos:end="9:16">CodecID</name></name></type> <name pos:start="9:18" pos:end="9:25">codec_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:42"><name pos:start="13:10" pos:end="13:22">av_new_stream</name><argument_list pos:start="13:23" pos:end="13:42">(<argument pos:start="13:24" pos:end="13:25"><expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">oc</name></expr></argument>, <argument pos:start="13:28" pos:end="13:41"><expr pos:start="13:28" pos:end="13:41"><name pos:start="13:28" pos:end="13:41"><name pos:start="13:28" pos:end="13:29">oc</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:41">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition> <block pos:start="15:14" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:19">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><call pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:51">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:50"><expr pos:start="17:25" pos:end="17:50"><literal type="string" pos:start="17:25" pos:end="17:50">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><call pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:15">av_exit</name><argument_list pos:start="19:16" pos:end="19:18">(<argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:65"><expr pos:start="23:5" pos:end="23:64"><call pos:start="23:5" pos:end="23:64"><name pos:start="23:5" pos:end="23:33">avcodec_get_context_defaults2</name><argument_list pos:start="23:34" pos:end="23:64">(<argument pos:start="23:35" pos:end="23:43"><expr pos:start="23:35" pos:end="23:43"><name pos:start="23:35" pos:end="23:43"><name pos:start="23:35" pos:end="23:36">st</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:43">codec</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:63"><expr pos:start="23:46" pos:end="23:63"><name pos:start="23:46" pos:end="23:63">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:84"><expr pos:start="25:5" pos:end="25:83"><name pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:21">bitstream_filters</name><index pos:start="25:22" pos:end="25:38">[<expr pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:37">nb_output_files</name></expr>]</index><index pos:start="25:39" pos:end="25:58">[<expr pos:start="25:40" pos:end="25:57"><name pos:start="25:40" pos:end="25:53"><name pos:start="25:40" pos:end="25:41">oc</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:53">nb_streams</name></name> <operator pos:start="25:55" pos:end="25:55">-</operator> <literal type="number" pos:start="25:57" pos:end="25:57">1</literal></expr>]</index></name><operator pos:start="25:59" pos:end="25:59">=</operator> <name pos:start="25:61" pos:end="25:83">video_bitstream_filters</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:27">video_bitstream_filters</name><operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:33">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:49"><expr pos:start="31:5" pos:end="31:48"><call pos:start="31:5" pos:end="31:48"><name pos:start="31:5" pos:end="31:23">avcodec_thread_init</name><argument_list pos:start="31:24" pos:end="31:48">(<argument pos:start="31:25" pos:end="31:33"><expr pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:26">st</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:33">codec</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:47"><expr pos:start="31:36" pos:end="31:47"><name pos:start="31:36" pos:end="31:47">thread_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:13">video_enc</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:18">st</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:25">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="41:46"><if pos:start="39:5" pos:end="41:46">if<condition pos:start="39:7" pos:end="39:23">(<expr pos:start="39:8" pos:end="39:22"><name pos:start="39:8" pos:end="39:22">video_codec_tag</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:46"><block_content pos:start="41:9" pos:end="41:46">

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:17">video_enc</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:28">codec_tag</name></name><operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:45">video_codec_tag</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if<condition pos:start="45:7" pos:end="47:80">(   <expr pos:start="45:11" pos:end="47:79"><operator pos:start="45:11" pos:end="45:11">(</operator><name pos:start="45:12" pos:end="45:30">video_global_header</name><operator pos:start="45:31" pos:end="45:31">&amp;</operator><literal type="number" pos:start="45:32" pos:end="45:32">1</literal><operator pos:start="45:33" pos:end="45:33">)</operator>

       <operator pos:start="47:8" pos:end="47:9">||</operator> <operator pos:start="47:11" pos:end="47:11">(</operator><name pos:start="47:12" pos:end="47:30">video_global_header</name><operator pos:start="47:31" pos:end="47:32">==</operator><literal type="number" pos:start="47:33" pos:end="47:33">0</literal> <operator pos:start="47:35" pos:end="47:36">&amp;&amp;</operator> <operator pos:start="47:38" pos:end="47:38">(</operator><name pos:start="47:39" pos:end="47:56"><name pos:start="47:39" pos:end="47:40">oc</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:49">oformat</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:56">flags</name></name> <operator pos:start="47:58" pos:end="47:58">&amp;</operator> <name pos:start="47:60" pos:end="47:77">AVFMT_GLOBALHEADER</name><operator pos:start="47:78" pos:end="47:78">)</operator><operator pos:start="47:79" pos:end="47:79">)</operator></expr>)</condition><block pos:start="47:81" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:75">

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17">video_enc</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:24">flags</name></name> <operator pos:start="49:26" pos:end="49:27">|=</operator> <name pos:start="49:29" pos:end="49:52">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:75"><expr pos:start="51:9" pos:end="51:74"><name pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:20">avcodec_opts</name><index pos:start="51:21" pos:end="51:40">[<expr pos:start="51:22" pos:end="51:39"><name pos:start="51:22" pos:end="51:39">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:47">flags</name><operator pos:start="51:48" pos:end="51:49">|=</operator> <name pos:start="51:51" pos:end="51:74">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if<condition pos:start="55:7" pos:end="55:29">(<expr pos:start="55:8" pos:end="55:28"><name pos:start="55:8" pos:end="55:26">video_global_header</name><operator pos:start="55:27" pos:end="55:27">&amp;</operator><literal type="number" pos:start="55:28" pos:end="55:28">2</literal></expr>)</condition><block pos:start="55:30" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:76">

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:17">video_enc</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:25">flags2</name></name> <operator pos:start="57:27" pos:end="57:28">|=</operator> <name pos:start="57:30" pos:end="57:53">CODEC_FLAG2_LOCAL_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:76"><expr pos:start="59:9" pos:end="59:75"><name pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:20">avcodec_opts</name><index pos:start="59:21" pos:end="59:40">[<expr pos:start="59:22" pos:end="59:39"><name pos:start="59:22" pos:end="59:39">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:48">flags2</name><operator pos:start="59:49" pos:end="59:50">|=</operator> <name pos:start="59:52" pos:end="59:75">CODEC_FLAG2_LOCAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="247:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:26">(<expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:25">video_stream_copy</name></expr>)</condition> <block pos:start="65:28" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:91">

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:10">st</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:23">stream_copy</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:51"><expr pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:17">video_enc</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:29">codec_type</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="73:91"><expr pos:start="71:9" pos:end="73:90"><name pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:17">video_enc</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:38">sample_aspect_ratio</name></name> <operator pos:start="71:40" pos:end="71:40">=</operator>

        <name pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:10">st</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:31">sample_aspect_ratio</name></name> <operator pos:start="73:33" pos:end="73:33">=</operator> <call pos:start="73:35" pos:end="73:90"><name pos:start="73:35" pos:end="73:40">av_d2q</name><argument_list pos:start="73:41" pos:end="73:90">(<argument pos:start="73:42" pos:end="73:84"><expr pos:start="73:42" pos:end="73:84"><name pos:start="73:42" pos:end="73:59">frame_aspect_ratio</name><operator pos:start="73:60" pos:end="73:60">*</operator><name pos:start="73:61" pos:end="73:72">frame_height</name><operator pos:start="73:73" pos:end="73:73">/</operator><name pos:start="73:74" pos:end="73:84">frame_width</name></expr></argument>, <argument pos:start="73:87" pos:end="73:89"><expr pos:start="73:87" pos:end="73:89"><literal type="number" pos:start="73:87" pos:end="73:89">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="247:5">else <block pos:start="75:12" pos:end="247:5">{<block_content pos:start="77:9" pos:end="245:9">

        <decl_stmt pos:start="77:9" pos:end="77:22"><decl pos:start="77:9" pos:end="77:21"><type pos:start="77:9" pos:end="77:20"><specifier pos:start="77:9" pos:end="77:13">const</specifier> <name pos:start="77:15" pos:end="77:18">char</name> <modifier pos:start="77:20" pos:end="77:20">*</modifier></type><name pos:start="77:21" pos:end="77:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:14"><decl pos:start="79:9" pos:end="79:13"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:23"><decl pos:start="81:9" pos:end="81:22"><type pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:15">AVCodec</name> <modifier pos:start="81:17" pos:end="81:17">*</modifier></type><name pos:start="81:18" pos:end="81:22">codec</name></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:73"><decl pos:start="83:9" pos:end="83:72"><type pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:18">AVRational</name></type> <name pos:start="83:20" pos:end="83:22">fps</name><init pos:start="83:23" pos:end="83:72">= <expr pos:start="83:25" pos:end="83:72"><ternary pos:start="83:25" pos:end="83:72"><condition pos:start="83:25" pos:end="83:40"><expr pos:start="83:25" pos:end="83:38"><name pos:start="83:25" pos:end="83:38"><name pos:start="83:25" pos:end="83:34">frame_rate</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:38">num</name></name></expr> ?</condition><then pos:start="83:42" pos:end="83:51"> <expr pos:start="83:42" pos:end="83:51"><name pos:start="83:42" pos:end="83:51">frame_rate</name></expr> </then><else pos:start="83:53" pos:end="83:72">: <expr pos:start="83:55" pos:end="83:72"><operator pos:start="83:55" pos:end="83:55">(</operator><name pos:start="83:56" pos:end="83:65">AVRational</name><operator pos:start="83:66" pos:end="83:66">)</operator><block pos:start="83:67" pos:end="83:72">{<expr pos:start="83:68" pos:end="83:69"><literal type="number" pos:start="83:68" pos:end="83:69">25</literal></expr>,<expr pos:start="83:71" pos:end="83:71"><literal type="number" pos:start="83:71" pos:end="83:71">1</literal></expr>}</block></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="87:9" pos:end="101:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:29">(<expr pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:28">video_codec_name</name></expr>)</condition> <block pos:start="87:31" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:46">

            <expr_stmt pos:start="89:13" pos:end="89:82"><expr pos:start="89:13" pos:end="89:81"><name pos:start="89:13" pos:end="89:20">codec_id</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:81"><name pos:start="89:24" pos:end="89:40">find_codec_or_die</name><argument_list pos:start="89:41" pos:end="89:81">(<argument pos:start="89:42" pos:end="89:57"><expr pos:start="89:42" pos:end="89:57"><name pos:start="89:42" pos:end="89:57">video_codec_name</name></expr></argument>, <argument pos:start="89:60" pos:end="89:77"><expr pos:start="89:60" pos:end="89:77"><name pos:start="89:60" pos:end="89:77">AVMEDIA_TYPE_VIDEO</name></expr></argument>, <argument pos:start="89:80" pos:end="89:80"><expr pos:start="89:80" pos:end="89:80"><literal type="number" pos:start="89:80" pos:end="89:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:67"><expr pos:start="91:13" pos:end="91:66"><name pos:start="91:13" pos:end="91:17">codec</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:66"><name pos:start="91:21" pos:end="91:48">avcodec_find_encoder_by_name</name><argument_list pos:start="91:49" pos:end="91:66">(<argument pos:start="91:50" pos:end="91:65"><expr pos:start="91:50" pos:end="91:65"><name pos:start="91:50" pos:end="91:65">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:46"><expr pos:start="93:13" pos:end="93:45"><name pos:start="93:13" pos:end="93:37"><name pos:start="93:13" pos:end="93:25">output_codecs</name><index pos:start="93:26" pos:end="93:37">[<expr pos:start="93:27" pos:end="93:36"><name pos:start="93:27" pos:end="93:36">nb_ocodecs</name></expr>]</index></name> <operator pos:start="93:39" pos:end="93:39">=</operator> <name pos:start="93:41" pos:end="93:45">codec</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="101:9">else <block pos:start="95:16" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:51">

            <expr_stmt pos:start="97:13" pos:end="97:97"><expr pos:start="97:13" pos:end="97:96"><name pos:start="97:13" pos:end="97:20">codec_id</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <call pos:start="97:24" pos:end="97:96"><name pos:start="97:24" pos:end="97:37">av_guess_codec</name><argument_list pos:start="97:38" pos:end="97:96">(<argument pos:start="97:39" pos:end="97:49"><expr pos:start="97:39" pos:end="97:49"><name pos:start="97:39" pos:end="97:49"><name pos:start="97:39" pos:end="97:40">oc</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:49">oformat</name></name></expr></argument>, <argument pos:start="97:52" pos:end="97:55"><expr pos:start="97:52" pos:end="97:55"><name pos:start="97:52" pos:end="97:55">NULL</name></expr></argument>, <argument pos:start="97:58" pos:end="97:69"><expr pos:start="97:58" pos:end="97:69"><name pos:start="97:58" pos:end="97:69"><name pos:start="97:58" pos:end="97:59">oc</name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:69">filename</name></name></expr></argument>, <argument pos:start="97:72" pos:end="97:75"><expr pos:start="97:72" pos:end="97:75"><name pos:start="97:72" pos:end="97:75">NULL</name></expr></argument>, <argument pos:start="97:78" pos:end="97:95"><expr pos:start="97:78" pos:end="97:95"><name pos:start="97:78" pos:end="97:95">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:17">codec</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <call pos:start="99:21" pos:end="99:50"><name pos:start="99:21" pos:end="99:40">avcodec_find_encoder</name><argument_list pos:start="99:41" pos:end="99:50">(<argument pos:start="99:42" pos:end="99:49"><expr pos:start="99:42" pos:end="99:49"><name pos:start="99:42" pos:end="99:49">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:17">video_enc</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:27">codec_id</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:38">codec_id</name></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:124"><expr pos:start="109:9" pos:end="109:123"><call pos:start="109:9" pos:end="109:123"><name pos:start="109:9" pos:end="109:24">set_context_opts</name><argument_list pos:start="109:25" pos:end="109:123">(<argument pos:start="109:26" pos:end="109:34"><expr pos:start="109:26" pos:end="109:34"><name pos:start="109:26" pos:end="109:34">video_enc</name></expr></argument>, <argument pos:start="109:37" pos:end="109:68"><expr pos:start="109:37" pos:end="109:68"><name pos:start="109:37" pos:end="109:68"><name pos:start="109:37" pos:end="109:48">avcodec_opts</name><index pos:start="109:49" pos:end="109:68">[<expr pos:start="109:50" pos:end="109:67"><name pos:start="109:50" pos:end="109:67">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>, <argument pos:start="109:71" pos:end="109:122"><expr pos:start="109:71" pos:end="109:122"><name pos:start="109:71" pos:end="109:93">AV_OPT_FLAG_VIDEO_PARAM</name> <operator pos:start="109:95" pos:end="109:95">|</operator> <name pos:start="109:97" pos:end="109:122">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="113:9" pos:end="115:103"><if pos:start="113:9" pos:end="115:103">if <condition pos:start="113:12" pos:end="113:63">(<expr pos:start="113:13" pos:end="113:62"><name pos:start="113:13" pos:end="113:17">codec</name> <operator pos:start="113:19" pos:end="113:20">&amp;&amp;</operator> <name pos:start="113:22" pos:end="113:48"><name pos:start="113:22" pos:end="113:26">codec</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:48">supported_framerates</name></name> <operator pos:start="113:50" pos:end="113:51">&amp;&amp;</operator> <operator pos:start="113:53" pos:end="113:53">!</operator><name pos:start="113:54" pos:end="113:62">force_fps</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:103"><block_content pos:start="115:13" pos:end="115:103">

            <expr_stmt pos:start="115:13" pos:end="115:103"><expr pos:start="115:13" pos:end="115:102"><name pos:start="115:13" pos:end="115:15">fps</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:102"><name pos:start="115:19" pos:end="115:23">codec</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:45">supported_framerates</name><index pos:start="115:46" pos:end="115:102">[<expr pos:start="115:47" pos:end="115:101"><call pos:start="115:47" pos:end="115:101"><name pos:start="115:47" pos:end="115:67">av_find_nearest_q_idx</name><argument_list pos:start="115:68" pos:end="115:101">(<argument pos:start="115:69" pos:end="115:71"><expr pos:start="115:69" pos:end="115:71"><name pos:start="115:69" pos:end="115:71">fps</name></expr></argument>, <argument pos:start="115:74" pos:end="115:100"><expr pos:start="115:74" pos:end="115:100"><name pos:start="115:74" pos:end="115:100"><name pos:start="115:74" pos:end="115:78">codec</name><operator pos:start="115:79" pos:end="115:80">-&gt;</operator><name pos:start="115:81" pos:end="115:100">supported_framerates</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:43"><expr pos:start="117:9" pos:end="117:42"><name pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:17">video_enc</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:28">time_base</name><operator pos:start="117:29" pos:end="117:29">.</operator><name pos:start="117:30" pos:end="117:32">den</name></name> <operator pos:start="117:34" pos:end="117:34">=</operator> <name pos:start="117:36" pos:end="117:42"><name pos:start="117:36" pos:end="117:38">fps</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:42">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:43"><expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:17">video_enc</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:28">time_base</name><operator pos:start="119:29" pos:end="119:29">.</operator><name pos:start="119:30" pos:end="119:32">num</name></name> <operator pos:start="119:34" pos:end="119:34">=</operator> <name pos:start="119:36" pos:end="119:42"><name pos:start="119:36" pos:end="119:38">fps</name><operator pos:start="119:39" pos:end="119:39">.</operator><name pos:start="119:40" pos:end="119:42">den</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:72"><expr pos:start="123:9" pos:end="123:71"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:17">video_enc</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">width</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:38">frame_width</name> <operator pos:start="123:40" pos:end="123:40">+</operator> <name pos:start="123:42" pos:end="123:55">frame_padright</name> <operator pos:start="123:57" pos:end="123:57">+</operator> <name pos:start="123:59" pos:end="123:71">frame_padleft</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:74"><expr pos:start="125:9" pos:end="125:73"><name pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:17">video_enc</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:25">height</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:40">frame_height</name> <operator pos:start="125:42" pos:end="125:42">+</operator> <name pos:start="125:44" pos:end="125:55">frame_padtop</name> <operator pos:start="125:57" pos:end="125:57">+</operator> <name pos:start="125:59" pos:end="125:73">frame_padbottom</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:108"><expr pos:start="127:9" pos:end="127:107"><name pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:17">video_enc</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:38">sample_aspect_ratio</name></name> <operator pos:start="127:40" pos:end="127:40">=</operator> <call pos:start="127:42" pos:end="127:107"><name pos:start="127:42" pos:end="127:47">av_d2q</name><argument_list pos:start="127:48" pos:end="127:107">(<argument pos:start="127:49" pos:end="127:101"><expr pos:start="127:49" pos:end="127:101"><name pos:start="127:49" pos:end="127:66">frame_aspect_ratio</name><operator pos:start="127:67" pos:end="127:67">*</operator><name pos:start="127:68" pos:end="127:84"><name pos:start="127:68" pos:end="127:76">video_enc</name><operator pos:start="127:77" pos:end="127:78">-&gt;</operator><name pos:start="127:79" pos:end="127:84">height</name></name><operator pos:start="127:85" pos:end="127:85">/</operator><name pos:start="127:86" pos:end="127:101"><name pos:start="127:86" pos:end="127:94">video_enc</name><operator pos:start="127:95" pos:end="127:96">-&gt;</operator><name pos:start="127:97" pos:end="127:101">width</name></name></expr></argument>, <argument pos:start="127:104" pos:end="127:106"><expr pos:start="127:104" pos:end="127:106"><literal type="number" pos:start="127:104" pos:end="127:106">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:26"><name pos:start="129:9" pos:end="129:17">video_enc</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:26">pix_fmt</name></name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:42">frame_pix_fmt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:65"><expr pos:start="131:9" pos:end="131:64"><name pos:start="131:9" pos:end="131:31"><name pos:start="131:9" pos:end="131:10">st</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:31">sample_aspect_ratio</name></name> <operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:64"><name pos:start="131:35" pos:end="131:43">video_enc</name><operator pos:start="131:44" pos:end="131:45">-&gt;</operator><name pos:start="131:46" pos:end="131:64">sample_aspect_ratio</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:36"><expr pos:start="135:9" pos:end="135:35"><call pos:start="135:9" pos:end="135:35"><name pos:start="135:9" pos:end="135:24">choose_pixel_fmt</name><argument_list pos:start="135:25" pos:end="135:35">(<argument pos:start="135:26" pos:end="135:27"><expr pos:start="135:26" pos:end="135:27"><name pos:start="135:26" pos:end="135:27">st</name></expr></argument>, <argument pos:start="135:30" pos:end="135:34"><expr pos:start="135:30" pos:end="135:34"><name pos:start="135:30" pos:end="135:34">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="141:36"><if pos:start="139:9" pos:end="141:36">if <condition pos:start="139:12" pos:end="139:23">(<expr pos:start="139:13" pos:end="139:22"><name pos:start="139:13" pos:end="139:22">intra_only</name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:36"><block_content pos:start="141:13" pos:end="141:36">

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:21">video_enc</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:31">gop_size</name></name> <operator pos:start="141:33" pos:end="141:33">=</operator> <literal type="number" pos:start="141:35" pos:end="141:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="143:9" pos:end="151:9"><if pos:start="143:9" pos:end="151:9">if <condition pos:start="143:12" pos:end="143:41">(<expr pos:start="143:13" pos:end="143:40"><name pos:start="143:13" pos:end="143:24">video_qscale</name> <operator pos:start="143:26" pos:end="143:27">||</operator> <name pos:start="143:29" pos:end="143:40">same_quality</name></expr>)</condition> <block pos:start="143:43" pos:end="151:9">{<block_content pos:start="145:13" pos:end="149:58">

            <expr_stmt pos:start="145:13" pos:end="145:50"><expr pos:start="145:13" pos:end="145:49"><name pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:21">video_enc</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:28">flags</name></name> <operator pos:start="145:30" pos:end="145:31">|=</operator> <name pos:start="145:33" pos:end="145:49">CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="149:58"><expr pos:start="147:13" pos:end="149:57"><name pos:start="147:13" pos:end="147:37"><name pos:start="147:13" pos:end="147:21">video_enc</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:37">global_quality</name></name><operator pos:start="147:38" pos:end="147:38">=</operator>

                <name pos:start="149:17" pos:end="149:27"><name pos:start="149:17" pos:end="149:18">st</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:27">quality</name></name> <operator pos:start="149:29" pos:end="149:29">=</operator> <name pos:start="149:31" pos:end="149:42">FF_QP2LAMBDA</name> <operator pos:start="149:44" pos:end="149:44">*</operator> <name pos:start="149:46" pos:end="149:57">video_qscale</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="157:51"><if pos:start="155:9" pos:end="157:51">if<condition pos:start="155:11" pos:end="155:24">(<expr pos:start="155:12" pos:end="155:23"><name pos:start="155:12" pos:end="155:23">intra_matrix</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:51"><block_content pos:start="157:13" pos:end="157:51">

            <expr_stmt pos:start="157:13" pos:end="157:51"><expr pos:start="157:13" pos:end="157:50"><name pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:21">video_enc</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:35">intra_matrix</name></name> <operator pos:start="157:37" pos:end="157:37">=</operator> <name pos:start="157:39" pos:end="157:50">intra_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="161:51"><if pos:start="159:9" pos:end="161:51">if<condition pos:start="159:11" pos:end="159:24">(<expr pos:start="159:12" pos:end="159:23"><name pos:start="159:12" pos:end="159:23">inter_matrix</name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:51"><block_content pos:start="161:13" pos:end="161:51">

            <expr_stmt pos:start="161:13" pos:end="161:51"><expr pos:start="161:13" pos:end="161:50"><name pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:21">video_enc</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:35">inter_matrix</name></name> <operator pos:start="161:37" pos:end="161:37">=</operator> <name pos:start="161:39" pos:end="161:50">inter_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:36"><expr pos:start="165:9" pos:end="165:35"><name pos:start="165:9" pos:end="165:9">p</name><operator pos:start="165:10" pos:end="165:10">=</operator> <name pos:start="165:12" pos:end="165:35">video_rc_override_string</name></expr>;</expr_stmt>

        <for pos:start="167:9" pos:end="211:9">for<control pos:start="167:12" pos:end="167:24">(<init pos:start="167:13" pos:end="167:16"><expr pos:start="167:13" pos:end="167:15"><name pos:start="167:13" pos:end="167:13">i</name><operator pos:start="167:14" pos:end="167:14">=</operator><literal type="number" pos:start="167:15" pos:end="167:15">0</literal></expr>;</init> <condition pos:start="167:18" pos:end="167:19"><expr pos:start="167:18" pos:end="167:18"><name pos:start="167:18" pos:end="167:18">p</name></expr>;</condition> <incr pos:start="167:21" pos:end="167:23"><expr pos:start="167:21" pos:end="167:23"><name pos:start="167:21" pos:end="167:21">i</name><operator pos:start="167:22" pos:end="167:23">++</operator></expr></incr>)</control><block pos:start="167:25" pos:end="211:9">{<block_content pos:start="169:13" pos:end="209:22">

            <decl_stmt pos:start="169:13" pos:end="169:30"><decl pos:start="169:13" pos:end="169:21"><type pos:start="169:13" pos:end="169:15"><name pos:start="169:13" pos:end="169:15">int</name></type> <name pos:start="169:17" pos:end="169:21">start</name></decl>, <decl pos:start="169:24" pos:end="169:26"><type ref="prev" pos:start="169:13" pos:end="169:15"/><name pos:start="169:24" pos:end="169:26">end</name></decl>, <decl pos:start="169:29" pos:end="169:29"><type ref="prev" pos:start="169:13" pos:end="169:15"/><name pos:start="169:29" pos:end="169:29">q</name></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:58"><decl pos:start="171:13" pos:end="171:57"><type pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">int</name></type> <name pos:start="171:17" pos:end="171:17">e</name><init pos:start="171:18" pos:end="171:57">=<expr pos:start="171:19" pos:end="171:57"><call pos:start="171:19" pos:end="171:57"><name pos:start="171:19" pos:end="171:24">sscanf</name><argument_list pos:start="171:25" pos:end="171:57">(<argument pos:start="171:26" pos:end="171:26"><expr pos:start="171:26" pos:end="171:26"><name pos:start="171:26" pos:end="171:26">p</name></expr></argument>, <argument pos:start="171:29" pos:end="171:38"><expr pos:start="171:29" pos:end="171:38"><literal type="string" pos:start="171:29" pos:end="171:38">"%d,%d,%d"</literal></expr></argument>, <argument pos:start="171:41" pos:end="171:46"><expr pos:start="171:41" pos:end="171:46"><operator pos:start="171:41" pos:end="171:41">&amp;</operator><name pos:start="171:42" pos:end="171:46">start</name></expr></argument>, <argument pos:start="171:49" pos:end="171:52"><expr pos:start="171:49" pos:end="171:52"><operator pos:start="171:49" pos:end="171:49">&amp;</operator><name pos:start="171:50" pos:end="171:52">end</name></expr></argument>, <argument pos:start="171:55" pos:end="171:56"><expr pos:start="171:55" pos:end="171:56"><operator pos:start="171:55" pos:end="171:55">&amp;</operator><name pos:start="171:56" pos:end="171:56">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="173:13" pos:end="179:13"><if pos:start="173:13" pos:end="179:13">if<condition pos:start="173:15" pos:end="173:20">(<expr pos:start="173:16" pos:end="173:19"><name pos:start="173:16" pos:end="173:16">e</name><operator pos:start="173:17" pos:end="173:18">!=</operator><literal type="number" pos:start="173:19" pos:end="173:19">3</literal></expr>)</condition><block pos:start="173:21" pos:end="179:13">{<block_content pos:start="175:17" pos:end="177:27">

                <expr_stmt pos:start="175:17" pos:end="175:63"><expr pos:start="175:17" pos:end="175:62"><call pos:start="175:17" pos:end="175:62"><name pos:start="175:17" pos:end="175:23">fprintf</name><argument_list pos:start="175:24" pos:end="175:62">(<argument pos:start="175:25" pos:end="175:30"><expr pos:start="175:25" pos:end="175:30"><name pos:start="175:25" pos:end="175:30">stderr</name></expr></argument>, <argument pos:start="175:33" pos:end="175:61"><expr pos:start="175:33" pos:end="175:61"><literal type="string" pos:start="175:33" pos:end="175:61">"error parsing rc_override\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:27"><expr pos:start="177:17" pos:end="177:26"><call pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:23">av_exit</name><argument_list pos:start="177:24" pos:end="177:26">(<argument pos:start="177:25" pos:end="177:25"><expr pos:start="177:25" pos:end="177:25"><literal type="number" pos:start="177:25" pos:end="177:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="185:53"><expr pos:start="181:13" pos:end="185:52"><name pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:21">video_enc</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:34">rc_override</name></name><operator pos:start="181:35" pos:end="181:35">=</operator>

                <call pos:start="183:17" pos:end="185:52"><name pos:start="183:17" pos:end="183:26">av_realloc</name><argument_list pos:start="183:27" pos:end="185:52">(<argument pos:start="183:28" pos:end="183:49"><expr pos:start="183:28" pos:end="183:49"><name pos:start="183:28" pos:end="183:49"><name pos:start="183:28" pos:end="183:36">video_enc</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:49">rc_override</name></name></expr></argument>,

                           <argument pos:start="185:28" pos:end="185:51"><expr pos:start="185:28" pos:end="185:51"><sizeof pos:start="185:28" pos:end="185:45">sizeof<argument_list pos:start="185:34" pos:end="185:45">(<argument pos:start="185:35" pos:end="185:44"><expr pos:start="185:35" pos:end="185:44"><name pos:start="185:35" pos:end="185:44">RcOverride</name></expr></argument>)</argument_list></sizeof><operator pos:start="185:46" pos:end="185:46">*</operator><operator pos:start="185:47" pos:end="185:47">(</operator><name pos:start="185:48" pos:end="185:48">i</name><operator pos:start="185:49" pos:end="185:49">+</operator><literal type="number" pos:start="185:50" pos:end="185:50">1</literal><operator pos:start="185:51" pos:end="185:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:57"><expr pos:start="187:13" pos:end="187:56"><name pos:start="187:13" pos:end="187:37"><name pos:start="187:13" pos:end="187:21">video_enc</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:34">rc_override</name><index pos:start="187:35" pos:end="187:37">[<expr pos:start="187:36" pos:end="187:36"><name pos:start="187:36" pos:end="187:36">i</name></expr>]</index></name><operator pos:start="187:38" pos:end="187:38">.</operator><name pos:start="187:39" pos:end="187:49">start_frame</name><operator pos:start="187:50" pos:end="187:50">=</operator> <name pos:start="187:52" pos:end="187:56">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:55"><expr pos:start="189:13" pos:end="189:54"><name pos:start="189:13" pos:end="189:37"><name pos:start="189:13" pos:end="189:21">video_enc</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:34">rc_override</name><index pos:start="189:35" pos:end="189:37">[<expr pos:start="189:36" pos:end="189:36"><name pos:start="189:36" pos:end="189:36">i</name></expr>]</index></name><operator pos:start="189:38" pos:end="189:38">.</operator><name pos:start="189:39" pos:end="189:47">end_frame</name>  <operator pos:start="189:50" pos:end="189:50">=</operator> <name pos:start="189:52" pos:end="189:54">end</name></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="205:13"><if pos:start="191:13" pos:end="197:13">if<condition pos:start="191:15" pos:end="191:19">(<expr pos:start="191:16" pos:end="191:18"><name pos:start="191:16" pos:end="191:16">q</name><operator pos:start="191:17" pos:end="191:17">&gt;</operator><literal type="number" pos:start="191:18" pos:end="191:18">0</literal></expr>)</condition><block pos:start="191:20" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:62">

                <expr_stmt pos:start="193:17" pos:end="193:52"><expr pos:start="193:17" pos:end="193:51"><name pos:start="193:17" pos:end="193:41"><name pos:start="193:17" pos:end="193:25">video_enc</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:38">rc_override</name><index pos:start="193:39" pos:end="193:41">[<expr pos:start="193:40" pos:end="193:40"><name pos:start="193:40" pos:end="193:40">i</name></expr>]</index></name><operator pos:start="193:42" pos:end="193:42">.</operator><name pos:start="193:43" pos:end="193:48">qscale</name><operator pos:start="193:49" pos:end="193:49">=</operator> <name pos:start="193:51" pos:end="193:51">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:62"><expr pos:start="195:17" pos:end="195:61"><name pos:start="195:17" pos:end="195:41"><name pos:start="195:17" pos:end="195:25">video_enc</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:38">rc_override</name><index pos:start="195:39" pos:end="195:41">[<expr pos:start="195:40" pos:end="195:40"><name pos:start="195:40" pos:end="195:40">i</name></expr>]</index></name><operator pos:start="195:42" pos:end="195:42">.</operator><name pos:start="195:43" pos:end="195:56">quality_factor</name><operator pos:start="195:57" pos:end="195:57">=</operator> <literal type="number" pos:start="195:59" pos:end="195:61">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="199:13" pos:end="205:13">else<block pos:start="199:17" pos:end="205:13">{<block_content pos:start="201:17" pos:end="203:67">

                <expr_stmt pos:start="201:17" pos:end="201:52"><expr pos:start="201:17" pos:end="201:51"><name pos:start="201:17" pos:end="201:41"><name pos:start="201:17" pos:end="201:25">video_enc</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:38">rc_override</name><index pos:start="201:39" pos:end="201:41">[<expr pos:start="201:40" pos:end="201:40"><name pos:start="201:40" pos:end="201:40">i</name></expr>]</index></name><operator pos:start="201:42" pos:end="201:42">.</operator><name pos:start="201:43" pos:end="201:48">qscale</name><operator pos:start="201:49" pos:end="201:49">=</operator> <literal type="number" pos:start="201:51" pos:end="201:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:67"><expr pos:start="203:17" pos:end="203:66"><name pos:start="203:17" pos:end="203:41"><name pos:start="203:17" pos:end="203:25">video_enc</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:38">rc_override</name><index pos:start="203:39" pos:end="203:41">[<expr pos:start="203:40" pos:end="203:40"><name pos:start="203:40" pos:end="203:40">i</name></expr>]</index></name><operator pos:start="203:42" pos:end="203:42">.</operator><name pos:start="203:43" pos:end="203:56">quality_factor</name><operator pos:start="203:57" pos:end="203:57">=</operator> <operator pos:start="203:59" pos:end="203:59">-</operator><name pos:start="203:60" pos:end="203:60">q</name><operator pos:start="203:61" pos:end="203:61">/</operator><literal type="number" pos:start="203:62" pos:end="203:66">100.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:30"><expr pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:13">p</name><operator pos:start="207:14" pos:end="207:14">=</operator> <call pos:start="207:16" pos:end="207:29"><name pos:start="207:16" pos:end="207:21">strchr</name><argument_list pos:start="207:22" pos:end="207:29">(<argument pos:start="207:23" pos:end="207:23"><expr pos:start="207:23" pos:end="207:23"><name pos:start="207:23" pos:end="207:23">p</name></expr></argument>, <argument pos:start="207:26" pos:end="207:28"><expr pos:start="207:26" pos:end="207:28"><literal type="char" pos:start="207:26" pos:end="207:28">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="209:22"><if pos:start="209:13" pos:end="209:22">if<condition pos:start="209:15" pos:end="209:17">(<expr pos:start="209:16" pos:end="209:16"><name pos:start="209:16" pos:end="209:16">p</name></expr>)</condition><block type="pseudo" pos:start="209:19" pos:end="209:22"><block_content pos:start="209:19" pos:end="209:22"> <expr_stmt pos:start="209:19" pos:end="209:22"><expr pos:start="209:19" pos:end="209:21"><name pos:start="209:19" pos:end="209:19">p</name><operator pos:start="209:20" pos:end="209:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="213:9" pos:end="213:39"><expr pos:start="213:9" pos:end="213:38"><name pos:start="213:9" pos:end="213:36"><name pos:start="213:9" pos:end="213:17">video_enc</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:36">rc_override_count</name></name><operator pos:start="213:37" pos:end="213:37">=</operator><name pos:start="213:38" pos:end="213:38">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="217:83"><if pos:start="215:9" pos:end="217:83">if <condition pos:start="215:12" pos:end="215:52">(<expr pos:start="215:13" pos:end="215:51"><operator pos:start="215:13" pos:end="215:13">!</operator><name pos:start="215:14" pos:end="215:51"><name pos:start="215:14" pos:end="215:22">video_enc</name><operator pos:start="215:23" pos:end="215:24">-&gt;</operator><name pos:start="215:25" pos:end="215:51">rc_initial_buffer_occupancy</name></name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:83"><block_content pos:start="217:13" pos:end="217:83">

            <expr_stmt pos:start="217:13" pos:end="217:83"><expr pos:start="217:13" pos:end="217:82"><name pos:start="217:13" pos:end="217:50"><name pos:start="217:13" pos:end="217:21">video_enc</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:50">rc_initial_buffer_occupancy</name></name> <operator pos:start="217:52" pos:end="217:52">=</operator> <name pos:start="217:54" pos:end="217:78"><name pos:start="217:54" pos:end="217:62">video_enc</name><operator pos:start="217:63" pos:end="217:64">-&gt;</operator><name pos:start="217:65" pos:end="217:78">rc_buffer_size</name></name><operator pos:start="217:79" pos:end="217:79">*</operator><literal type="number" pos:start="217:80" pos:end="217:80">3</literal><operator pos:start="217:81" pos:end="217:81">/</operator><literal type="number" pos:start="217:82" pos:end="217:82">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:46"><expr pos:start="219:9" pos:end="219:45"><name pos:start="219:9" pos:end="219:31"><name pos:start="219:9" pos:end="219:17">video_enc</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:31">me_threshold</name></name><operator pos:start="219:32" pos:end="219:32">=</operator> <name pos:start="219:34" pos:end="219:45">me_threshold</name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:62"><expr pos:start="221:9" pos:end="221:61"><name pos:start="221:9" pos:end="221:37"><name pos:start="221:9" pos:end="221:17">video_enc</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:37">intra_dc_precision</name></name><operator pos:start="221:38" pos:end="221:38">=</operator> <name pos:start="221:40" pos:end="221:57">intra_dc_precision</name> <operator pos:start="221:59" pos:end="221:59">-</operator> <literal type="number" pos:start="221:61" pos:end="221:61">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="225:9" pos:end="227:47"><if pos:start="225:9" pos:end="227:47">if <condition pos:start="225:12" pos:end="225:20">(<expr pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:19">do_psnr</name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:47"><block_content pos:start="227:13" pos:end="227:47">

            <expr_stmt pos:start="227:13" pos:end="227:47"><expr pos:start="227:13" pos:end="227:46"><name pos:start="227:13" pos:end="227:28"><name pos:start="227:13" pos:end="227:21">video_enc</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:28">flags</name></name><operator pos:start="227:29" pos:end="227:30">|=</operator> <name pos:start="227:32" pos:end="227:46">CODEC_FLAG_PSNR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="231:9" pos:end="231:27">/* two pass mode */</comment>

        <if_stmt pos:start="233:9" pos:end="245:9"><if pos:start="233:9" pos:end="245:9">if <condition pos:start="233:12" pos:end="233:20">(<expr pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:19">do_pass</name></expr>)</condition> <block pos:start="233:22" pos:end="245:9">{<block_content pos:start="235:13" pos:end="243:13">

            <if_stmt pos:start="235:13" pos:end="243:13"><if pos:start="235:13" pos:end="239:13">if <condition pos:start="235:16" pos:end="235:29">(<expr pos:start="235:17" pos:end="235:28"><name pos:start="235:17" pos:end="235:23">do_pass</name> <operator pos:start="235:25" pos:end="235:26">==</operator> <literal type="number" pos:start="235:28" pos:end="235:28">1</literal></expr>)</condition> <block pos:start="235:31" pos:end="239:13">{<block_content pos:start="237:17" pos:end="237:53">

                <expr_stmt pos:start="237:17" pos:end="237:53"><expr pos:start="237:17" pos:end="237:52"><name pos:start="237:17" pos:end="237:32"><name pos:start="237:17" pos:end="237:25">video_enc</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:32">flags</name></name> <operator pos:start="237:34" pos:end="237:35">|=</operator> <name pos:start="237:37" pos:end="237:52">CODEC_FLAG_PASS1</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="239:15" pos:end="243:13">else <block pos:start="239:20" pos:end="243:13">{<block_content pos:start="241:17" pos:end="241:53">

                <expr_stmt pos:start="241:17" pos:end="241:53"><expr pos:start="241:17" pos:end="241:52"><name pos:start="241:17" pos:end="241:32"><name pos:start="241:17" pos:end="241:25">video_enc</name><operator pos:start="241:26" pos:end="241:27">-&gt;</operator><name pos:start="241:28" pos:end="241:32">flags</name></name> <operator pos:start="241:34" pos:end="241:35">|=</operator> <name pos:start="241:37" pos:end="241:52">CODEC_FLAG_PASS2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:17"><expr pos:start="249:5" pos:end="249:16"><name pos:start="249:5" pos:end="249:14">nb_ocodecs</name><operator pos:start="249:15" pos:end="249:16">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if <condition pos:start="251:8" pos:end="251:23">(<expr pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:22">video_language</name></expr>)</condition> <block pos:start="251:25" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:34">

        <expr_stmt pos:start="253:9" pos:end="253:71"><expr pos:start="253:9" pos:end="253:70"><call pos:start="253:9" pos:end="253:70"><name pos:start="253:9" pos:end="253:24">av_metadata_set2</name><argument_list pos:start="253:25" pos:end="253:70">(<argument pos:start="253:26" pos:end="253:38"><expr pos:start="253:26" pos:end="253:38"><operator pos:start="253:26" pos:end="253:26">&amp;</operator><name pos:start="253:27" pos:end="253:38"><name pos:start="253:27" pos:end="253:28">st</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:38">metadata</name></name></expr></argument>, <argument pos:start="253:41" pos:end="253:50"><expr pos:start="253:41" pos:end="253:50"><literal type="string" pos:start="253:41" pos:end="253:50">"language"</literal></expr></argument>, <argument pos:start="253:53" pos:end="253:66"><expr pos:start="253:53" pos:end="253:66"><name pos:start="253:53" pos:end="253:66">video_language</name></expr></argument>, <argument pos:start="253:69" pos:end="253:69"><expr pos:start="253:69" pos:end="253:69"><literal type="number" pos:start="253:69" pos:end="253:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:34"><expr pos:start="255:9" pos:end="255:33"><call pos:start="255:9" pos:end="255:33"><name pos:start="255:9" pos:end="255:16">av_freep</name><argument_list pos:start="255:17" pos:end="255:33">(<argument pos:start="255:18" pos:end="255:32"><expr pos:start="255:18" pos:end="255:32"><operator pos:start="255:18" pos:end="255:18">&amp;</operator><name pos:start="255:19" pos:end="255:32">video_language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="261:5" pos:end="261:35">/* reset some key parameters */</comment>

    <expr_stmt pos:start="263:5" pos:end="263:22"><expr pos:start="263:5" pos:end="263:21"><name pos:start="263:5" pos:end="263:17">video_disable</name> <operator pos:start="263:19" pos:end="263:19">=</operator> <literal type="number" pos:start="263:21" pos:end="263:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:32"><expr pos:start="265:5" pos:end="265:31"><call pos:start="265:5" pos:end="265:31"><name pos:start="265:5" pos:end="265:12">av_freep</name><argument_list pos:start="265:13" pos:end="265:31">(<argument pos:start="265:14" pos:end="265:30"><expr pos:start="265:14" pos:end="265:30"><operator pos:start="265:14" pos:end="265:14">&amp;</operator><name pos:start="265:15" pos:end="265:30">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:26"><expr pos:start="267:5" pos:end="267:25"><name pos:start="267:5" pos:end="267:21">video_stream_copy</name> <operator pos:start="267:23" pos:end="267:23">=</operator> <literal type="number" pos:start="267:25" pos:end="267:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:33"><expr pos:start="269:5" pos:end="269:32"><name pos:start="269:5" pos:end="269:17">frame_pix_fmt</name> <operator pos:start="269:19" pos:end="269:19">=</operator> <name pos:start="269:21" pos:end="269:32">PIX_FMT_NONE</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
