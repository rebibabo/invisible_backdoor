<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4939.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">qemu_rdma_block_for_wrid</name><parameter_list pos:start="1:36" pos:end="3:55">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:47">RDMAContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">rdma</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:73">wrid_requested</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><name pos:start="3:37" pos:end="3:44">uint32_t</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:54">byte_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="181:1">{<block_content pos:start="7:5" pos:end="179:15">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">num_cq_events</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>, <decl pos:start="7:28" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:30">ret</name> <init pos:start="7:32" pos:end="7:34">= <expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">ibv_cq</name></name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">cq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">cq_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:18">wr_id</name> <init pos:start="13:20" pos:end="13:35">= <expr pos:start="13:22" pos:end="13:35"><name pos:start="13:22" pos:end="13:35">RDMA_WRID_NONE</name></expr></init></decl>, <decl pos:start="13:38" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:38" pos:end="13:45">wr_id_in</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:39">(<expr pos:start="17:9" pos:end="17:38"><call pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:25">ibv_req_notify_cq</name><argument_list pos:start="17:26" pos:end="17:38">(<argument pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:30">rdma</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:34">cq</name></name></expr></argument>, <argument pos:start="17:37" pos:end="17:37"><expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:41" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:23">/* poll cq first */</comment>

    <while pos:start="25:5" pos:end="55:5">while <condition pos:start="25:11" pos:end="25:35">(<expr pos:start="25:12" pos:end="25:34"><name pos:start="25:12" pos:end="25:16">wr_id</name> <operator pos:start="25:18" pos:end="25:19">!=</operator> <name pos:start="25:21" pos:end="25:34">wrid_requested</name></expr>)</condition> <block pos:start="25:37" pos:end="55:5">{<block_content pos:start="27:9" pos:end="53:9">

        <expr_stmt pos:start="27:9" pos:end="27:56"><expr pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:55"><name pos:start="27:15" pos:end="27:28">qemu_rdma_poll</name><argument_list pos:start="27:29" pos:end="27:55">(<argument pos:start="27:30" pos:end="27:33"><expr pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:33">rdma</name></expr></argument>, <argument pos:start="27:36" pos:end="27:44"><expr pos:start="27:36" pos:end="27:44"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:44">wr_id_in</name></expr></argument>, <argument pos:start="27:47" pos:end="27:54"><expr pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:54">byte_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:13">wr_id</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:24">wr_id_in</name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <name pos:start="37:28" pos:end="37:46">RDMA_WRID_TYPE_MASK</name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:36">(<expr pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:17">wr_id</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <name pos:start="41:22" pos:end="41:35">RDMA_WRID_NONE</name></expr>)</condition> <block pos:start="41:38" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:36">(<expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:17">wr_id</name> <operator pos:start="47:19" pos:end="47:20">!=</operator> <name pos:start="47:22" pos:end="47:35">wrid_requested</name></expr>)</condition> <block pos:start="47:38" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:65">

            <expr_stmt pos:start="49:13" pos:end="51:65"><expr pos:start="49:13" pos:end="51:64"><call pos:start="49:13" pos:end="51:64"><name pos:start="49:13" pos:end="49:47">trace_qemu_rdma_block_for_wrid_miss</name><argument_list pos:start="49:48" pos:end="51:64">(<argument pos:start="49:49" pos:end="49:74"><expr pos:start="49:49" pos:end="49:74"><call pos:start="49:49" pos:end="49:74"><name pos:start="49:49" pos:end="49:58">print_wrid</name><argument_list pos:start="49:59" pos:end="49:74">(<argument pos:start="49:60" pos:end="49:73"><expr pos:start="49:60" pos:end="49:73"><name pos:start="49:60" pos:end="49:73">wrid_requested</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:37"><expr pos:start="51:24" pos:end="51:37"><name pos:start="51:24" pos:end="51:37">wrid_requested</name></expr></argument>, <argument pos:start="51:40" pos:end="51:56"><expr pos:start="51:40" pos:end="51:56"><call pos:start="51:40" pos:end="51:56"><name pos:start="51:40" pos:end="51:49">print_wrid</name><argument_list pos:start="51:50" pos:end="51:56">(<argument pos:start="51:51" pos:end="51:55"><expr pos:start="51:51" pos:end="51:55"><name pos:start="51:51" pos:end="51:55">wr_id</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:59" pos:end="51:63"><expr pos:start="51:59" pos:end="51:63"><name pos:start="51:59" pos:end="51:63">wr_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:32">(<expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:13">wr_id</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <name pos:start="59:18" pos:end="59:31">wrid_requested</name></expr>)</condition> <block pos:start="59:34" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:17">

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="67:5" pos:end="151:5">while <condition pos:start="67:11" pos:end="67:13">(<expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">1</literal></expr>)</condition> <block pos:start="67:15" pos:end="151:5">{<block_content pos:start="77:9" pos:end="149:9">

        <comment type="block" pos:start="69:9" pos:end="75:11">/*

         * Coroutine doesn't start until migration_fd_process_incoming()

         * so don't yield unless we know we're running inside of a coroutine.

         */</comment>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:51">(<expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:16">rdma</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:50">migration_started_on_destination</name></name></expr>)</condition> <block pos:start="77:53" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:60">

            <expr_stmt pos:start="79:13" pos:end="79:60"><expr pos:start="79:13" pos:end="79:59"><call pos:start="79:13" pos:end="79:59"><name pos:start="79:13" pos:end="79:35">yield_until_fd_readable</name><argument_list pos:start="79:36" pos:end="79:59">(<argument pos:start="79:37" pos:end="79:58"><expr pos:start="79:37" pos:end="79:58"><name pos:start="79:37" pos:end="79:58"><name pos:start="79:37" pos:end="79:40">rdma</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:54">comp_channel</name><operator pos:start="79:55" pos:end="79:56">-&gt;</operator><name pos:start="79:57" pos:end="79:58">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:65"><expr pos:start="85:9" pos:end="85:64"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:64"><name pos:start="85:15" pos:end="85:30">ibv_get_cq_event</name><argument_list pos:start="85:31" pos:end="85:64">(<argument pos:start="85:32" pos:end="85:49"><expr pos:start="85:32" pos:end="85:49"><name pos:start="85:32" pos:end="85:49"><name pos:start="85:32" pos:end="85:35">rdma</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:49">comp_channel</name></name></expr></argument>, <argument pos:start="85:52" pos:end="85:54"><expr pos:start="85:52" pos:end="85:54"><operator pos:start="85:52" pos:end="85:52">&amp;</operator><name pos:start="85:53" pos:end="85:54">cq</name></expr></argument>, <argument pos:start="85:57" pos:end="85:63"><expr pos:start="85:57" pos:end="85:63"><operator pos:start="85:57" pos:end="85:57">&amp;</operator><name pos:start="85:58" pos:end="85:63">cq_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:16">(<expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">ret</name></expr>)</condition> <block pos:start="87:18" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:36">

            <expr_stmt pos:start="89:13" pos:end="89:39"><expr pos:start="89:13" pos:end="89:38"><call pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:18">perror</name><argument_list pos:start="89:19" pos:end="89:38">(<argument pos:start="89:20" pos:end="89:37"><expr pos:start="89:20" pos:end="89:37"><literal type="string" pos:start="89:20" pos:end="89:37">"ibv_get_cq_event"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="91:13" pos:end="91:36">goto <name pos:start="91:18" pos:end="91:35">err_block_for_wrid</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:24"><expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:21">num_cq_events</name><operator pos:start="97:22" pos:end="97:23">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:40"><expr pos:start="101:9" pos:end="101:39"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <operator pos:start="101:15" pos:end="101:15">-</operator><call pos:start="101:16" pos:end="101:39"><name pos:start="101:16" pos:end="101:32">ibv_req_notify_cq</name><argument_list pos:start="101:33" pos:end="101:39">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">cq</name></expr></argument>, <argument pos:start="101:38" pos:end="101:38"><expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:16">(<expr pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">ret</name></expr>)</condition> <block pos:start="103:18" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:36">

            <goto pos:start="105:13" pos:end="105:36">goto <name pos:start="105:18" pos:end="105:35">err_block_for_wrid</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <while pos:start="111:9" pos:end="141:9">while <condition pos:start="111:15" pos:end="111:39">(<expr pos:start="111:16" pos:end="111:38"><name pos:start="111:16" pos:end="111:20">wr_id</name> <operator pos:start="111:22" pos:end="111:23">!=</operator> <name pos:start="111:25" pos:end="111:38">wrid_requested</name></expr>)</condition> <block pos:start="111:41" pos:end="141:9">{<block_content pos:start="113:13" pos:end="139:13">

            <expr_stmt pos:start="113:13" pos:end="113:60"><expr pos:start="113:13" pos:end="113:59"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:59"><name pos:start="113:19" pos:end="113:32">qemu_rdma_poll</name><argument_list pos:start="113:33" pos:end="113:59">(<argument pos:start="113:34" pos:end="113:37"><expr pos:start="113:34" pos:end="113:37"><name pos:start="113:34" pos:end="113:37">rdma</name></expr></argument>, <argument pos:start="113:40" pos:end="113:48"><expr pos:start="113:40" pos:end="113:48"><operator pos:start="113:40" pos:end="113:40">&amp;</operator><name pos:start="113:41" pos:end="113:48">wr_id_in</name></expr></argument>, <argument pos:start="113:51" pos:end="113:58"><expr pos:start="113:51" pos:end="113:58"><name pos:start="113:51" pos:end="113:58">byte_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="119:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:24">(<expr pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:21">&lt;</operator> <literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>)</condition> <block pos:start="115:26" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:40">

                <goto pos:start="117:17" pos:end="117:40">goto <name pos:start="117:22" pos:end="117:39">err_block_for_wrid</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="123:13" pos:end="123:51"><expr pos:start="123:13" pos:end="123:50"><name pos:start="123:13" pos:end="123:17">wr_id</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:28">wr_id_in</name> <operator pos:start="123:30" pos:end="123:30">&amp;</operator> <name pos:start="123:32" pos:end="123:50">RDMA_WRID_TYPE_MASK</name></expr>;</expr_stmt>



            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:40">(<expr pos:start="127:17" pos:end="127:39"><name pos:start="127:17" pos:end="127:21">wr_id</name> <operator pos:start="127:23" pos:end="127:24">==</operator> <name pos:start="127:26" pos:end="127:39">RDMA_WRID_NONE</name></expr>)</condition> <block pos:start="127:42" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:22">

                <break pos:start="129:17" pos:end="129:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="133:13" pos:end="139:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:40">(<expr pos:start="133:17" pos:end="133:39"><name pos:start="133:17" pos:end="133:21">wr_id</name> <operator pos:start="133:23" pos:end="133:24">!=</operator> <name pos:start="133:26" pos:end="133:39">wrid_requested</name></expr>)</condition> <block pos:start="133:42" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:77">

                <expr_stmt pos:start="135:17" pos:end="137:77"><expr pos:start="135:17" pos:end="137:76"><call pos:start="135:17" pos:end="137:76"><name pos:start="135:17" pos:end="135:51">trace_qemu_rdma_block_for_wrid_miss</name><argument_list pos:start="135:52" pos:end="137:76">(<argument pos:start="135:53" pos:end="135:78"><expr pos:start="135:53" pos:end="135:78"><call pos:start="135:53" pos:end="135:78"><name pos:start="135:53" pos:end="135:62">print_wrid</name><argument_list pos:start="135:63" pos:end="135:78">(<argument pos:start="135:64" pos:end="135:77"><expr pos:start="135:64" pos:end="135:77"><name pos:start="135:64" pos:end="135:77">wrid_requested</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="137:36" pos:end="137:49"><expr pos:start="137:36" pos:end="137:49"><name pos:start="137:36" pos:end="137:49">wrid_requested</name></expr></argument>, <argument pos:start="137:52" pos:end="137:68"><expr pos:start="137:52" pos:end="137:68"><call pos:start="137:52" pos:end="137:68"><name pos:start="137:52" pos:end="137:61">print_wrid</name><argument_list pos:start="137:62" pos:end="137:68">(<argument pos:start="137:63" pos:end="137:67"><expr pos:start="137:63" pos:end="137:67"><name pos:start="137:63" pos:end="137:67">wr_id</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:71" pos:end="137:75"><expr pos:start="137:71" pos:end="137:75"><name pos:start="137:71" pos:end="137:75">wr_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="145:9" pos:end="149:9"><if pos:start="145:9" pos:end="149:9">if <condition pos:start="145:12" pos:end="145:36">(<expr pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:17">wr_id</name> <operator pos:start="145:19" pos:end="145:20">==</operator> <name pos:start="145:22" pos:end="145:35">wrid_requested</name></expr>)</condition> <block pos:start="145:38" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:40">

            <goto pos:start="147:13" pos:end="147:40">goto <name pos:start="147:18" pos:end="147:39">success_block_for_wrid</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



<label pos:start="155:1" pos:end="155:23"><name pos:start="155:1" pos:end="155:22">success_block_for_wrid</name>:</label>

    <if_stmt pos:start="157:5" pos:end="161:5"><if pos:start="157:5" pos:end="161:5">if <condition pos:start="157:8" pos:end="157:22">(<expr pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:21">num_cq_events</name></expr>)</condition> <block pos:start="157:24" pos:end="161:5">{<block_content pos:start="159:9" pos:end="159:45">

        <expr_stmt pos:start="159:9" pos:end="159:45"><expr pos:start="159:9" pos:end="159:44"><call pos:start="159:9" pos:end="159:44"><name pos:start="159:9" pos:end="159:25">ibv_ack_cq_events</name><argument_list pos:start="159:26" pos:end="159:44">(<argument pos:start="159:27" pos:end="159:28"><expr pos:start="159:27" pos:end="159:28"><name pos:start="159:27" pos:end="159:28">cq</name></expr></argument>, <argument pos:start="159:31" pos:end="159:43"><expr pos:start="159:31" pos:end="159:43"><name pos:start="159:31" pos:end="159:43">num_cq_events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="163:5" pos:end="163:13">return <expr pos:start="163:12" pos:end="163:12"><literal type="number" pos:start="163:12" pos:end="163:12">0</literal></expr>;</return>



<label pos:start="167:1" pos:end="167:19"><name pos:start="167:1" pos:end="167:18">err_block_for_wrid</name>:</label>

    <if_stmt pos:start="169:5" pos:end="173:5"><if pos:start="169:5" pos:end="173:5">if <condition pos:start="169:8" pos:end="169:22">(<expr pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:21">num_cq_events</name></expr>)</condition> <block pos:start="169:24" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:45">

        <expr_stmt pos:start="171:9" pos:end="171:45"><expr pos:start="171:9" pos:end="171:44"><call pos:start="171:9" pos:end="171:44"><name pos:start="171:9" pos:end="171:25">ibv_ack_cq_events</name><argument_list pos:start="171:26" pos:end="171:44">(<argument pos:start="171:27" pos:end="171:28"><expr pos:start="171:27" pos:end="171:28"><name pos:start="171:27" pos:end="171:28">cq</name></expr></argument>, <argument pos:start="171:31" pos:end="171:43"><expr pos:start="171:31" pos:end="171:43"><name pos:start="171:31" pos:end="171:43">num_cq_events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:28"><expr pos:start="177:5" pos:end="177:27"><name pos:start="177:5" pos:end="177:21"><name pos:start="177:5" pos:end="177:8">rdma</name><operator pos:start="177:9" pos:end="177:10">-&gt;</operator><name pos:start="177:11" pos:end="177:21">error_state</name></name> <operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:27">ret</name></expr>;</expr_stmt>

    <return pos:start="179:5" pos:end="179:15">return <expr pos:start="179:12" pos:end="179:14"><name pos:start="179:12" pos:end="179:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
