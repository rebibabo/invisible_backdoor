<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3109.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_write_tkhd_tag</name><parameter_list pos:start="1:30" pos:end="3:60">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:41">AVIOContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">pb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:60">MOVMuxContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">mov</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:38">MOVTrack</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:45">track</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:55">AVStream</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:59">st</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="199:1">{<block_content pos:start="7:5" pos:end="197:16">

    <decl_stmt pos:start="7:5" pos:end="9:69"><decl pos:start="7:5" pos:end="9:68"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:20">duration</name> <init pos:start="7:22" pos:end="9:68">= <expr pos:start="7:24" pos:end="9:68"><call pos:start="7:24" pos:end="9:68"><name pos:start="7:24" pos:end="7:37">av_rescale_rnd</name><argument_list pos:start="7:38" pos:end="9:68">(<argument pos:start="7:39" pos:end="7:59"><expr pos:start="7:39" pos:end="7:59"><name pos:start="7:39" pos:end="7:59"><name pos:start="7:39" pos:end="7:43">track</name><operator pos:start="7:44" pos:end="7:45">-&gt;</operator><name pos:start="7:46" pos:end="7:59">track_duration</name></name></expr></argument>, <argument pos:start="7:62" pos:end="7:74"><expr pos:start="7:62" pos:end="7:74"><name pos:start="7:62" pos:end="7:74">MOV_TIMESCALE</name></expr></argument>,

                                      <argument pos:start="9:39" pos:end="9:54"><expr pos:start="9:39" pos:end="9:54"><name pos:start="9:39" pos:end="9:54"><name pos:start="9:39" pos:end="9:43">track</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:54">timescale</name></name></expr></argument>, <argument pos:start="9:57" pos:end="9:67"><expr pos:start="9:57" pos:end="9:67"><name pos:start="9:57" pos:end="9:67">AV_ROUND_UP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">version</name> <init pos:start="11:17" pos:end="11:46">= <expr pos:start="11:19" pos:end="11:46"><ternary pos:start="11:19" pos:end="11:46"><condition pos:start="11:19" pos:end="11:40"><expr pos:start="11:19" pos:end="11:38"><name pos:start="11:19" pos:end="11:26">duration</name> <operator pos:start="11:28" pos:end="11:28">&lt;</operator> <name pos:start="11:30" pos:end="11:38">INT32_MAX</name></expr> ?</condition><then pos:start="11:42" pos:end="11:42"> <expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">0</literal></expr> </then><else pos:start="11:44" pos:end="11:46">: <expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">flags</name>   <init pos:start="13:17" pos:end="13:40">= <expr pos:start="13:19" pos:end="13:40"><name pos:start="13:19" pos:end="13:40">MOV_TKHD_FLAG_IN_MOVIE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">rotation</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">group</name>   <init pos:start="17:17" pos:end="17:19">= <expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint32_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:28">display_matrix</name> <init pos:start="21:30" pos:end="21:35">= <expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type>      <name pos:start="23:14" pos:end="23:32">display_matrix_size</name></decl>, <decl pos:start="23:35" pos:end="23:35"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:35" pos:end="23:35">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="47:5">if <condition pos:start="27:8" pos:end="27:11">(<expr pos:start="27:9" pos:end="27:10"><name pos:start="27:9" pos:end="27:10">st</name></expr>)</condition> <block pos:start="27:13" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:34">

        <if_stmt pos:start="29:9" pos:end="35:42"><if pos:start="29:9" pos:end="31:30">if <condition pos:start="29:12" pos:end="29:37">(<expr pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:15">mov</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:36">per_stream_grouping</name></name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:30"><block_content pos:start="31:13" pos:end="31:30">

            <expr_stmt pos:start="31:13" pos:end="31:30"><expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:17">group</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:22">st</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:29">index</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:42">else<block type="pseudo" pos:start="35:13" pos:end="35:42"><block_content pos:start="35:13" pos:end="35:42">

            <expr_stmt pos:start="35:13" pos:end="35:42"><expr pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:17">group</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:41"><name pos:start="35:21" pos:end="35:22">st</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:29">codec</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:41">codec_type</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="41:82"><expr pos:start="39:9" pos:end="41:81"><name pos:start="39:9" pos:end="39:22">display_matrix</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <operator pos:start="39:26" pos:end="39:26">(</operator><name pos:start="39:27" pos:end="39:34">uint32_t</name><operator pos:start="39:35" pos:end="39:35">*</operator><operator pos:start="39:36" pos:end="39:36">)</operator><call pos:start="39:37" pos:end="41:81"><name pos:start="39:37" pos:end="39:59">av_stream_get_side_data</name><argument_list pos:start="39:60" pos:end="41:81">(<argument pos:start="39:61" pos:end="39:62"><expr pos:start="39:61" pos:end="39:62"><name pos:start="39:61" pos:end="39:62">st</name></expr></argument>, <argument pos:start="39:65" pos:end="39:89"><expr pos:start="39:65" pos:end="39:89"><name pos:start="39:65" pos:end="39:89">AV_PKT_DATA_DISPLAYMATRIX</name></expr></argument>,

                                                            <argument pos:start="41:61" pos:end="41:80"><expr pos:start="41:61" pos:end="41:80"><operator pos:start="41:61" pos:end="41:61">&amp;</operator><name pos:start="41:62" pos:end="41:80">display_matrix_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:34"><if pos:start="43:9" pos:end="45:34">if <condition pos:start="43:12" pos:end="43:80">(<expr pos:start="43:13" pos:end="43:79"><name pos:start="43:13" pos:end="43:26">display_matrix</name> <operator pos:start="43:28" pos:end="43:29">&amp;&amp;</operator> <name pos:start="43:31" pos:end="43:49">display_matrix_size</name> <operator pos:start="43:51" pos:end="43:51">&lt;</operator> <literal type="number" pos:start="43:53" pos:end="43:53">9</literal> <operator pos:start="43:55" pos:end="43:55">*</operator> <sizeof pos:start="43:57" pos:end="43:79">sizeof<argument_list pos:start="43:63" pos:end="43:79">(<argument pos:start="43:64" pos:end="43:78"><expr pos:start="43:64" pos:end="43:78"><operator pos:start="43:64" pos:end="43:64">*</operator><name pos:start="43:65" pos:end="43:78">display_matrix</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:34"><block_content pos:start="45:13" pos:end="45:34">

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:26">display_matrix</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:33">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:39"><if pos:start="51:5" pos:end="53:39">if <condition pos:start="51:8" pos:end="51:41">(<expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:13">track</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">flags</name></name> <operator pos:start="51:22" pos:end="51:22">&amp;</operator> <name pos:start="51:24" pos:end="51:40">MOV_TRACK_ENABLED</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:39"><block_content pos:start="53:9" pos:end="53:39">

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:13">flags</name> <operator pos:start="53:15" pos:end="53:16">|=</operator> <name pos:start="53:18" pos:end="53:38">MOV_TKHD_FLAG_ENABLED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="59:20"><if pos:start="57:5" pos:end="59:20">if <condition pos:start="57:8" pos:end="57:32">(<expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:13">track</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">mode</name></name> <operator pos:start="57:21" pos:end="57:22">==</operator> <name pos:start="57:24" pos:end="57:31">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:20"><block_content pos:start="59:9" pos:end="59:20">

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:15">version</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:60"><expr pos:start="63:5" pos:end="63:59"><ternary pos:start="63:5" pos:end="63:59"><condition pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:18"><operator pos:start="63:5" pos:end="63:5">(</operator><name pos:start="63:6" pos:end="63:12">version</name> <operator pos:start="63:14" pos:end="63:15">==</operator> <literal type="number" pos:start="63:17" pos:end="63:17">1</literal><operator pos:start="63:18" pos:end="63:18">)</operator></expr> ?</condition><then pos:start="63:22" pos:end="63:39"> <expr pos:start="63:22" pos:end="63:39"><call pos:start="63:22" pos:end="63:39"><name pos:start="63:22" pos:end="63:30">avio_wb32</name><argument_list pos:start="63:31" pos:end="63:39">(<argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">pb</name></expr></argument>, <argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><literal type="number" pos:start="63:36" pos:end="63:38">104</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="63:41" pos:end="63:59">: <expr pos:start="63:43" pos:end="63:59"><call pos:start="63:43" pos:end="63:59"><name pos:start="63:43" pos:end="63:51">avio_wb32</name><argument_list pos:start="63:52" pos:end="63:59">(<argument pos:start="63:53" pos:end="63:54"><expr pos:start="63:53" pos:end="63:54"><name pos:start="63:53" pos:end="63:54">pb</name></expr></argument>, <argument pos:start="63:57" pos:end="63:58"><expr pos:start="63:57" pos:end="63:58"><literal type="number" pos:start="63:57" pos:end="63:58">92</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="63:62" pos:end="63:71">/* size */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><call pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:16">ffio_wfourcc</name><argument_list pos:start="65:17" pos:end="65:28">(<argument pos:start="65:18" pos:end="65:19"><expr pos:start="65:18" pos:end="65:19"><name pos:start="65:18" pos:end="65:19">pb</name></expr></argument>, <argument pos:start="65:22" pos:end="65:27"><expr pos:start="65:22" pos:end="65:27"><literal type="string" pos:start="65:22" pos:end="65:27">"tkhd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:25"><expr pos:start="67:5" pos:end="67:24"><call pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:11">avio_w8</name><argument_list pos:start="67:12" pos:end="67:24">(<argument pos:start="67:13" pos:end="67:14"><expr pos:start="67:13" pos:end="67:14"><name pos:start="67:13" pos:end="67:14">pb</name></expr></argument>, <argument pos:start="67:17" pos:end="67:23"><expr pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:23">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><call pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:13">avio_wb24</name><argument_list pos:start="69:14" pos:end="69:24">(<argument pos:start="69:15" pos:end="69:16"><expr pos:start="69:15" pos:end="69:16"><name pos:start="69:15" pos:end="69:16">pb</name></expr></argument>, <argument pos:start="69:19" pos:end="69:23"><expr pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:23">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="83:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:21">(<expr pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:15">version</name> <operator pos:start="71:17" pos:end="71:18">==</operator> <literal type="number" pos:start="71:20" pos:end="71:20">1</literal></expr>)</condition> <block pos:start="71:23" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:35">

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><call pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:17">avio_wb64</name><argument_list pos:start="73:18" pos:end="73:34">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">pb</name></expr></argument>, <argument pos:start="73:23" pos:end="73:33"><expr pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:27">track</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:33">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:17">avio_wb64</name><argument_list pos:start="75:18" pos:end="75:34">(<argument pos:start="75:19" pos:end="75:20"><expr pos:start="75:19" pos:end="75:20"><name pos:start="75:19" pos:end="75:20">pb</name></expr></argument>, <argument pos:start="75:23" pos:end="75:33"><expr pos:start="75:23" pos:end="75:33"><name pos:start="75:23" pos:end="75:33"><name pos:start="75:23" pos:end="75:27">track</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:33">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="83:5">else <block pos:start="77:12" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:35">

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><call pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:17">avio_wb32</name><argument_list pos:start="79:18" pos:end="79:34">(<argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><name pos:start="79:19" pos:end="79:20">pb</name></expr></argument>, <argument pos:start="79:23" pos:end="79:33"><expr pos:start="79:23" pos:end="79:33"><name pos:start="79:23" pos:end="79:33"><name pos:start="79:23" pos:end="79:27">track</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:33">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:37" pos:end="79:55">/* creation time */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:35"><expr pos:start="81:9" pos:end="81:34"><call pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:17">avio_wb32</name><argument_list pos:start="81:18" pos:end="81:34">(<argument pos:start="81:19" pos:end="81:20"><expr pos:start="81:19" pos:end="81:20"><name pos:start="81:19" pos:end="81:20">pb</name></expr></argument>, <argument pos:start="81:23" pos:end="81:33"><expr pos:start="81:23" pos:end="81:33"><name pos:start="81:23" pos:end="81:33"><name pos:start="81:23" pos:end="81:27">track</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="81:37" pos:end="81:59">/* modification time */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><call pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:13">avio_wb32</name><argument_list pos:start="85:14" pos:end="85:34">(<argument pos:start="85:15" pos:end="85:16"><expr pos:start="85:15" pos:end="85:16"><name pos:start="85:15" pos:end="85:16">pb</name></expr></argument>, <argument pos:start="85:19" pos:end="85:33"><expr pos:start="85:19" pos:end="85:33"><name pos:start="85:19" pos:end="85:33"><name pos:start="85:19" pos:end="85:23">track</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:33">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:37" pos:end="85:50">/* track-id */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:21"><expr pos:start="87:5" pos:end="87:20"><call pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:13">avio_wb32</name><argument_list pos:start="87:14" pos:end="87:20">(<argument pos:start="87:15" pos:end="87:16"><expr pos:start="87:15" pos:end="87:16"><name pos:start="87:15" pos:end="87:16">pb</name></expr></argument>, <argument pos:start="87:19" pos:end="87:19"><expr pos:start="87:19" pos:end="87:19"><literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:23" pos:end="87:36">/* reserved */</comment>

    <if_stmt pos:start="89:5" pos:end="99:75"><if pos:start="89:5" pos:end="91:97">if <condition pos:start="89:8" pos:end="89:47">(<expr pos:start="89:9" pos:end="89:46"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:21"><name pos:start="89:10" pos:end="89:14">track</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:21">entry</name></name> <operator pos:start="89:23" pos:end="89:24">&amp;&amp;</operator> <name pos:start="89:26" pos:end="89:34"><name pos:start="89:26" pos:end="89:28">mov</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:34">mode</name></name> <operator pos:start="89:36" pos:end="89:37">==</operator> <name pos:start="89:39" pos:end="89:46">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:97"><block_content pos:start="91:9" pos:end="91:97">

        <expr_stmt pos:start="91:9" pos:end="91:97"><expr pos:start="91:9" pos:end="91:96"><ternary pos:start="91:9" pos:end="91:96"><condition pos:start="91:9" pos:end="91:24"><expr pos:start="91:9" pos:end="91:22"><operator pos:start="91:9" pos:end="91:9">(</operator><name pos:start="91:10" pos:end="91:16">version</name> <operator pos:start="91:18" pos:end="91:19">==</operator> <literal type="number" pos:start="91:21" pos:end="91:21">1</literal><operator pos:start="91:22" pos:end="91:22">)</operator></expr> ?</condition><then pos:start="91:26" pos:end="91:68"> <expr pos:start="91:26" pos:end="91:68"><call pos:start="91:26" pos:end="91:68"><name pos:start="91:26" pos:end="91:34">avio_wb64</name><argument_list pos:start="91:35" pos:end="91:68">(<argument pos:start="91:36" pos:end="91:37"><expr pos:start="91:36" pos:end="91:37"><name pos:start="91:36" pos:end="91:37">pb</name></expr></argument>, <argument pos:start="91:40" pos:end="91:67"><expr pos:start="91:40" pos:end="91:67"><call pos:start="91:40" pos:end="91:67"><name pos:start="91:40" pos:end="91:47">UINT64_C</name><argument_list pos:start="91:48" pos:end="91:67">(<argument pos:start="91:49" pos:end="91:66"><expr pos:start="91:49" pos:end="91:66"><literal type="number" pos:start="91:49" pos:end="91:66">0xffffffffffffffff</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else pos:start="91:70" pos:end="91:96">: <expr pos:start="91:72" pos:end="91:96"><call pos:start="91:72" pos:end="91:96"><name pos:start="91:72" pos:end="91:80">avio_wb32</name><argument_list pos:start="91:81" pos:end="91:96">(<argument pos:start="91:82" pos:end="91:83"><expr pos:start="91:82" pos:end="91:83"><name pos:start="91:82" pos:end="91:83">pb</name></expr></argument>, <argument pos:start="91:86" pos:end="91:95"><expr pos:start="91:86" pos:end="91:95"><literal type="number" pos:start="91:86" pos:end="91:95">0xffffffff</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="93:5" pos:end="95:61">else if <condition pos:start="93:13" pos:end="93:27">(<expr pos:start="93:14" pos:end="93:26"><operator pos:start="93:14" pos:end="93:14">!</operator><name pos:start="93:15" pos:end="93:26"><name pos:start="93:15" pos:end="93:19">track</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:26">entry</name></name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:61"><block_content pos:start="95:9" pos:end="95:61">

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><ternary pos:start="95:9" pos:end="95:60"><condition pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:22"><operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:16">version</name> <operator pos:start="95:18" pos:end="95:19">==</operator> <literal type="number" pos:start="95:21" pos:end="95:21">1</literal><operator pos:start="95:22" pos:end="95:22">)</operator></expr> ?</condition><then pos:start="95:26" pos:end="95:41"> <expr pos:start="95:26" pos:end="95:41"><call pos:start="95:26" pos:end="95:41"><name pos:start="95:26" pos:end="95:34">avio_wb64</name><argument_list pos:start="95:35" pos:end="95:41">(<argument pos:start="95:36" pos:end="95:37"><expr pos:start="95:36" pos:end="95:37"><name pos:start="95:36" pos:end="95:37">pb</name></expr></argument>, <argument pos:start="95:40" pos:end="95:40"><expr pos:start="95:40" pos:end="95:40"><literal type="number" pos:start="95:40" pos:end="95:40">0</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="95:43" pos:end="95:60">: <expr pos:start="95:45" pos:end="95:60"><call pos:start="95:45" pos:end="95:60"><name pos:start="95:45" pos:end="95:53">avio_wb32</name><argument_list pos:start="95:54" pos:end="95:60">(<argument pos:start="95:55" pos:end="95:56"><expr pos:start="95:55" pos:end="95:56"><name pos:start="95:55" pos:end="95:56">pb</name></expr></argument>, <argument pos:start="95:59" pos:end="95:59"><expr pos:start="95:59" pos:end="95:59"><literal type="number" pos:start="95:59" pos:end="95:59">0</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="97:5" pos:end="99:75">else<block type="pseudo" pos:start="99:9" pos:end="99:75"><block_content pos:start="99:9" pos:end="99:75">

        <expr_stmt pos:start="99:9" pos:end="99:75"><expr pos:start="99:9" pos:end="99:74"><ternary pos:start="99:9" pos:end="99:74"><condition pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:22"><operator pos:start="99:9" pos:end="99:9">(</operator><name pos:start="99:10" pos:end="99:16">version</name> <operator pos:start="99:18" pos:end="99:19">==</operator> <literal type="number" pos:start="99:21" pos:end="99:21">1</literal><operator pos:start="99:22" pos:end="99:22">)</operator></expr> ?</condition><then pos:start="99:26" pos:end="99:48"> <expr pos:start="99:26" pos:end="99:48"><call pos:start="99:26" pos:end="99:48"><name pos:start="99:26" pos:end="99:34">avio_wb64</name><argument_list pos:start="99:35" pos:end="99:48">(<argument pos:start="99:36" pos:end="99:37"><expr pos:start="99:36" pos:end="99:37"><name pos:start="99:36" pos:end="99:37">pb</name></expr></argument>, <argument pos:start="99:40" pos:end="99:47"><expr pos:start="99:40" pos:end="99:47"><name pos:start="99:40" pos:end="99:47">duration</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="99:50" pos:end="99:74">: <expr pos:start="99:52" pos:end="99:74"><call pos:start="99:52" pos:end="99:74"><name pos:start="99:52" pos:end="99:60">avio_wb32</name><argument_list pos:start="99:61" pos:end="99:74">(<argument pos:start="99:62" pos:end="99:63"><expr pos:start="99:62" pos:end="99:63"><name pos:start="99:62" pos:end="99:63">pb</name></expr></argument>, <argument pos:start="99:66" pos:end="99:73"><expr pos:start="99:66" pos:end="99:73"><name pos:start="99:66" pos:end="99:73">duration</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><call pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:13">avio_wb32</name><argument_list pos:start="103:14" pos:end="103:20">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:19"><expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="103:23" pos:end="103:36">/* reserved */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><call pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:13">avio_wb32</name><argument_list pos:start="105:14" pos:end="105:20">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:23" pos:end="105:36">/* reserved */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:13">avio_wb16</name><argument_list pos:start="107:14" pos:end="107:20">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:23" pos:end="107:33">/* layer */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><call pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:13">avio_wb16</name><argument_list pos:start="109:14" pos:end="109:24">(<argument pos:start="109:15" pos:end="109:16"><expr pos:start="109:15" pos:end="109:16"><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>, <argument pos:start="109:19" pos:end="109:23"><expr pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:23">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="109:27" pos:end="109:48">/* alternate group) */</comment>

    <comment type="block" pos:start="111:5" pos:end="111:32">/* Volume, only for audio */</comment>

    <if_stmt pos:start="113:5" pos:end="119:25"><if pos:start="113:5" pos:end="115:30">if <condition pos:start="113:8" pos:end="113:53">(<expr pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:13">track</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:18">enc</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:30">codec_type</name></name> <operator pos:start="113:32" pos:end="113:33">==</operator> <name pos:start="113:35" pos:end="113:52">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:30"><block_content pos:start="115:9" pos:end="115:30">

        <expr_stmt pos:start="115:9" pos:end="115:30"><expr pos:start="115:9" pos:end="115:29"><call pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:17">avio_wb16</name><argument_list pos:start="115:18" pos:end="115:29">(<argument pos:start="115:19" pos:end="115:20"><expr pos:start="115:19" pos:end="115:20"><name pos:start="115:19" pos:end="115:20">pb</name></expr></argument>, <argument pos:start="115:23" pos:end="115:28"><expr pos:start="115:23" pos:end="115:28"><literal type="number" pos:start="115:23" pos:end="115:28">0x0100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="117:5" pos:end="119:25">else<block type="pseudo" pos:start="119:9" pos:end="119:25"><block_content pos:start="119:9" pos:end="119:25">

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><call pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:17">avio_wb16</name><argument_list pos:start="119:18" pos:end="119:24">(<argument pos:start="119:19" pos:end="119:20"><expr pos:start="119:19" pos:end="119:20"><name pos:start="119:19" pos:end="119:20">pb</name></expr></argument>, <argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:21"><expr pos:start="121:5" pos:end="121:20"><call pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:13">avio_wb16</name><argument_list pos:start="121:14" pos:end="121:20">(<argument pos:start="121:15" pos:end="121:16"><expr pos:start="121:15" pos:end="121:16"><name pos:start="121:15" pos:end="121:16">pb</name></expr></argument>, <argument pos:start="121:19" pos:end="121:19"><expr pos:start="121:19" pos:end="121:19"><literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:23" pos:end="121:36">/* reserved */</comment>



    <comment type="block" pos:start="125:5" pos:end="125:26">/* Matrix structure */</comment>

    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:27">(<expr pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:10">st</name> <operator pos:start="127:12" pos:end="127:13">&amp;&amp;</operator> <name pos:start="127:15" pos:end="127:26"><name pos:start="127:15" pos:end="127:16">st</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:26">metadata</name></name></expr>)</condition> <block pos:start="127:29" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:62">

        <decl_stmt pos:start="129:9" pos:end="129:78"><decl pos:start="129:9" pos:end="129:77"><type pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:25">AVDictionaryEntry</name> <modifier pos:start="129:27" pos:end="129:27">*</modifier></type><name pos:start="129:28" pos:end="129:30">rot</name> <init pos:start="129:32" pos:end="129:77">= <expr pos:start="129:34" pos:end="129:77"><call pos:start="129:34" pos:end="129:77"><name pos:start="129:34" pos:end="129:44">av_dict_get</name><argument_list pos:start="129:45" pos:end="129:77">(<argument pos:start="129:46" pos:end="129:57"><expr pos:start="129:46" pos:end="129:57"><name pos:start="129:46" pos:end="129:57"><name pos:start="129:46" pos:end="129:47">st</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:57">metadata</name></name></expr></argument>, <argument pos:start="129:60" pos:end="129:67"><expr pos:start="129:60" pos:end="129:67"><literal type="string" pos:start="129:60" pos:end="129:67">"rotate"</literal></expr></argument>, <argument pos:start="129:70" pos:end="129:73"><expr pos:start="129:70" pos:end="129:73"><name pos:start="129:70" pos:end="129:73">NULL</name></expr></argument>, <argument pos:start="129:76" pos:end="129:76"><expr pos:start="129:76" pos:end="129:76"><literal type="number" pos:start="129:76" pos:end="129:76">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:62"><expr pos:start="131:9" pos:end="131:61"><name pos:start="131:9" pos:end="131:16">rotation</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <ternary pos:start="131:20" pos:end="131:61"><condition pos:start="131:20" pos:end="131:40"><expr pos:start="131:20" pos:end="131:38"><operator pos:start="131:20" pos:end="131:20">(</operator><name pos:start="131:21" pos:end="131:23">rot</name> <operator pos:start="131:25" pos:end="131:26">&amp;&amp;</operator> <name pos:start="131:28" pos:end="131:37"><name pos:start="131:28" pos:end="131:30">rot</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:37">value</name></name><operator pos:start="131:38" pos:end="131:38">)</operator></expr> ?</condition><then pos:start="131:42" pos:end="131:57"> <expr pos:start="131:42" pos:end="131:57"><call pos:start="131:42" pos:end="131:57"><name pos:start="131:42" pos:end="131:45">atoi</name><argument_list pos:start="131:46" pos:end="131:57">(<argument pos:start="131:47" pos:end="131:56"><expr pos:start="131:47" pos:end="131:56"><name pos:start="131:47" pos:end="131:56"><name pos:start="131:47" pos:end="131:49">rot</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:56">value</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="131:59" pos:end="131:61">: <expr pos:start="131:61" pos:end="131:61"><literal type="number" pos:start="131:61" pos:end="131:61">0</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="157:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:23">(<expr pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:22">display_matrix</name></expr>)</condition> <block pos:start="135:25" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:45">

        <for pos:start="137:9" pos:end="139:45">for <control pos:start="137:13" pos:end="137:31">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:26"><expr pos:start="137:21" pos:end="137:25"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <literal type="number" pos:start="137:25" pos:end="137:25">9</literal></expr>;</condition> <incr pos:start="137:28" pos:end="137:30"><expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:28">i</name><operator pos:start="137:29" pos:end="137:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:13" pos:end="139:45"><block_content pos:start="139:13" pos:end="139:45">

            <expr_stmt pos:start="139:13" pos:end="139:45"><expr pos:start="139:13" pos:end="139:44"><call pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:21">avio_wb32</name><argument_list pos:start="139:22" pos:end="139:44">(<argument pos:start="139:23" pos:end="139:24"><expr pos:start="139:23" pos:end="139:24"><name pos:start="139:23" pos:end="139:24">pb</name></expr></argument>, <argument pos:start="139:27" pos:end="139:43"><expr pos:start="139:27" pos:end="139:43"><name pos:start="139:27" pos:end="139:43"><name pos:start="139:27" pos:end="139:40">display_matrix</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><name pos:start="139:42" pos:end="139:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="141:7" pos:end="145:5">else if <condition pos:start="141:15" pos:end="141:30">(<expr pos:start="141:16" pos:end="141:29"><name pos:start="141:16" pos:end="141:23">rotation</name> <operator pos:start="141:25" pos:end="141:26">==</operator> <literal type="number" pos:start="141:28" pos:end="141:29">90</literal></expr>)</condition> <block pos:start="141:32" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:64">

        <expr_stmt pos:start="143:9" pos:end="143:64"><expr pos:start="143:9" pos:end="143:63"><call pos:start="143:9" pos:end="143:63"><name pos:start="143:9" pos:end="143:20">write_matrix</name><argument_list pos:start="143:21" pos:end="143:63">(<argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><name pos:start="143:22" pos:end="143:23">pb</name></expr></argument>,  <argument pos:start="143:27" pos:end="143:27"><expr pos:start="143:27" pos:end="143:27"><literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr></argument>,  <argument pos:start="143:31" pos:end="143:31"><expr pos:start="143:31" pos:end="143:31"><literal type="number" pos:start="143:31" pos:end="143:31">1</literal></expr></argument>, <argument pos:start="143:34" pos:end="143:35"><expr pos:start="143:34" pos:end="143:35"><operator pos:start="143:34" pos:end="143:34">-</operator><literal type="number" pos:start="143:35" pos:end="143:35">1</literal></expr></argument>,  <argument pos:start="143:39" pos:end="143:39"><expr pos:start="143:39" pos:end="143:39"><literal type="number" pos:start="143:39" pos:end="143:39">0</literal></expr></argument>, <argument pos:start="143:42" pos:end="143:59"><expr pos:start="143:42" pos:end="143:59"><name pos:start="143:42" pos:end="143:59"><name pos:start="143:42" pos:end="143:46">track</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:51">enc</name><operator pos:start="143:52" pos:end="143:53">-&gt;</operator><name pos:start="143:54" pos:end="143:59">height</name></name></expr></argument>, <argument pos:start="143:62" pos:end="143:62"><expr pos:start="143:62" pos:end="143:62"><literal type="number" pos:start="143:62" pos:end="143:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="145:7" pos:end="149:5">else if <condition pos:start="145:15" pos:end="145:31">(<expr pos:start="145:16" pos:end="145:30"><name pos:start="145:16" pos:end="145:23">rotation</name> <operator pos:start="145:25" pos:end="145:26">==</operator> <literal type="number" pos:start="145:28" pos:end="145:30">180</literal></expr>)</condition> <block pos:start="145:33" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:80">

        <expr_stmt pos:start="147:9" pos:end="147:80"><expr pos:start="147:9" pos:end="147:79"><call pos:start="147:9" pos:end="147:79"><name pos:start="147:9" pos:end="147:20">write_matrix</name><argument_list pos:start="147:21" pos:end="147:79">(<argument pos:start="147:22" pos:end="147:23"><expr pos:start="147:22" pos:end="147:23"><name pos:start="147:22" pos:end="147:23">pb</name></expr></argument>, <argument pos:start="147:26" pos:end="147:27"><expr pos:start="147:26" pos:end="147:27"><operator pos:start="147:26" pos:end="147:26">-</operator><literal type="number" pos:start="147:27" pos:end="147:27">1</literal></expr></argument>,  <argument pos:start="147:31" pos:end="147:31"><expr pos:start="147:31" pos:end="147:31"><literal type="number" pos:start="147:31" pos:end="147:31">0</literal></expr></argument>,  <argument pos:start="147:35" pos:end="147:35"><expr pos:start="147:35" pos:end="147:35"><literal type="number" pos:start="147:35" pos:end="147:35">0</literal></expr></argument>, <argument pos:start="147:38" pos:end="147:39"><expr pos:start="147:38" pos:end="147:39"><operator pos:start="147:38" pos:end="147:38">-</operator><literal type="number" pos:start="147:39" pos:end="147:39">1</literal></expr></argument>, <argument pos:start="147:42" pos:end="147:58"><expr pos:start="147:42" pos:end="147:58"><name pos:start="147:42" pos:end="147:58"><name pos:start="147:42" pos:end="147:46">track</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:51">enc</name><operator pos:start="147:52" pos:end="147:53">-&gt;</operator><name pos:start="147:54" pos:end="147:58">width</name></name></expr></argument>, <argument pos:start="147:61" pos:end="147:78"><expr pos:start="147:61" pos:end="147:78"><name pos:start="147:61" pos:end="147:78"><name pos:start="147:61" pos:end="147:65">track</name><operator pos:start="147:66" pos:end="147:67">-&gt;</operator><name pos:start="147:68" pos:end="147:70">enc</name><operator pos:start="147:71" pos:end="147:72">-&gt;</operator><name pos:start="147:73" pos:end="147:78">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="153:5">else if <condition pos:start="149:15" pos:end="149:31">(<expr pos:start="149:16" pos:end="149:30"><name pos:start="149:16" pos:end="149:23">rotation</name> <operator pos:start="149:25" pos:end="149:26">==</operator> <literal type="number" pos:start="149:28" pos:end="149:30">270</literal></expr>)</condition> <block pos:start="149:33" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:63">

        <expr_stmt pos:start="151:9" pos:end="151:63"><expr pos:start="151:9" pos:end="151:62"><call pos:start="151:9" pos:end="151:62"><name pos:start="151:9" pos:end="151:20">write_matrix</name><argument_list pos:start="151:21" pos:end="151:62">(<argument pos:start="151:22" pos:end="151:23"><expr pos:start="151:22" pos:end="151:23"><name pos:start="151:22" pos:end="151:23">pb</name></expr></argument>,  <argument pos:start="151:27" pos:end="151:27"><expr pos:start="151:27" pos:end="151:27"><literal type="number" pos:start="151:27" pos:end="151:27">0</literal></expr></argument>, <argument pos:start="151:30" pos:end="151:31"><expr pos:start="151:30" pos:end="151:31"><operator pos:start="151:30" pos:end="151:30">-</operator><literal type="number" pos:start="151:31" pos:end="151:31">1</literal></expr></argument>,  <argument pos:start="151:35" pos:end="151:35"><expr pos:start="151:35" pos:end="151:35"><literal type="number" pos:start="151:35" pos:end="151:35">1</literal></expr></argument>,  <argument pos:start="151:39" pos:end="151:39"><expr pos:start="151:39" pos:end="151:39"><literal type="number" pos:start="151:39" pos:end="151:39">0</literal></expr></argument>, <argument pos:start="151:42" pos:end="151:42"><expr pos:start="151:42" pos:end="151:42"><literal type="number" pos:start="151:42" pos:end="151:42">0</literal></expr></argument>, <argument pos:start="151:45" pos:end="151:61"><expr pos:start="151:45" pos:end="151:61"><name pos:start="151:45" pos:end="151:61"><name pos:start="151:45" pos:end="151:49">track</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:54">enc</name><operator pos:start="151:55" pos:end="151:56">-&gt;</operator><name pos:start="151:57" pos:end="151:61">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="153:7" pos:end="157:5">else <block pos:start="153:12" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:47">

        <expr_stmt pos:start="155:9" pos:end="155:47"><expr pos:start="155:9" pos:end="155:46"><call pos:start="155:9" pos:end="155:46"><name pos:start="155:9" pos:end="155:20">write_matrix</name><argument_list pos:start="155:21" pos:end="155:46">(<argument pos:start="155:22" pos:end="155:23"><expr pos:start="155:22" pos:end="155:23"><name pos:start="155:22" pos:end="155:23">pb</name></expr></argument>,  <argument pos:start="155:27" pos:end="155:27"><expr pos:start="155:27" pos:end="155:27"><literal type="number" pos:start="155:27" pos:end="155:27">1</literal></expr></argument>,  <argument pos:start="155:31" pos:end="155:31"><expr pos:start="155:31" pos:end="155:31"><literal type="number" pos:start="155:31" pos:end="155:31">0</literal></expr></argument>,  <argument pos:start="155:35" pos:end="155:35"><expr pos:start="155:35" pos:end="155:35"><literal type="number" pos:start="155:35" pos:end="155:35">0</literal></expr></argument>,  <argument pos:start="155:39" pos:end="155:39"><expr pos:start="155:39" pos:end="155:39"><literal type="number" pos:start="155:39" pos:end="155:39">1</literal></expr></argument>, <argument pos:start="155:42" pos:end="155:42"><expr pos:start="155:42" pos:end="155:42"><literal type="number" pos:start="155:42" pos:end="155:42">0</literal></expr></argument>, <argument pos:start="155:45" pos:end="155:45"><expr pos:start="155:45" pos:end="155:45"><literal type="number" pos:start="155:45" pos:end="155:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="159:5" pos:end="159:49">/* Track width and height, for visual only */</comment>

    <if_stmt pos:start="161:5" pos:end="195:5"><if pos:start="161:5" pos:end="189:5">if <condition pos:start="161:8" pos:end="163:64">(<expr pos:start="161:9" pos:end="163:63"><name pos:start="161:9" pos:end="161:10">st</name> <operator pos:start="161:12" pos:end="161:13">&amp;&amp;</operator> <operator pos:start="161:15" pos:end="161:15">(</operator><name pos:start="161:16" pos:end="161:37"><name pos:start="161:16" pos:end="161:20">track</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:25">enc</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:37">codec_type</name></name> <operator pos:start="161:39" pos:end="161:40">==</operator> <name pos:start="161:42" pos:end="161:59">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="161:61" pos:end="161:62">||</operator>

               <name pos:start="163:16" pos:end="163:37"><name pos:start="163:16" pos:end="163:20">track</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:25">enc</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:37">codec_type</name></name> <operator pos:start="163:39" pos:end="163:40">==</operator> <name pos:start="163:42" pos:end="163:62">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="163:63" pos:end="163:63">)</operator></expr>)</condition> <block pos:start="163:66" pos:end="189:5">{<block_content pos:start="165:9" pos:end="187:9">

        <if_stmt pos:start="165:9" pos:end="187:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:36">(<expr pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:23"><name pos:start="165:13" pos:end="165:17">track</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:23">mode</name></name> <operator pos:start="165:25" pos:end="165:26">==</operator> <name pos:start="165:28" pos:end="165:35">MODE_MOV</name></expr>)</condition> <block pos:start="165:38" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:47">

            <expr_stmt pos:start="167:13" pos:end="167:51"><expr pos:start="167:13" pos:end="167:50"><call pos:start="167:13" pos:end="167:50"><name pos:start="167:13" pos:end="167:21">avio_wb32</name><argument_list pos:start="167:22" pos:end="167:50">(<argument pos:start="167:23" pos:end="167:24"><expr pos:start="167:23" pos:end="167:24"><name pos:start="167:23" pos:end="167:24">pb</name></expr></argument>, <argument pos:start="167:27" pos:end="167:49"><expr pos:start="167:27" pos:end="167:49"><name pos:start="167:27" pos:end="167:43"><name pos:start="167:27" pos:end="167:31">track</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:36">enc</name><operator pos:start="167:37" pos:end="167:38">-&gt;</operator><name pos:start="167:39" pos:end="167:43">width</name></name> <operator pos:start="167:45" pos:end="167:46">&lt;&lt;</operator> <literal type="number" pos:start="167:48" pos:end="167:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:47"><expr pos:start="169:13" pos:end="169:46"><call pos:start="169:13" pos:end="169:46"><name pos:start="169:13" pos:end="169:21">avio_wb32</name><argument_list pos:start="169:22" pos:end="169:46">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">pb</name></expr></argument>, <argument pos:start="169:27" pos:end="169:45"><expr pos:start="169:27" pos:end="169:45"><name pos:start="169:27" pos:end="169:39"><name pos:start="169:27" pos:end="169:31">track</name><operator pos:start="169:32" pos:end="169:33">-&gt;</operator><name pos:start="169:34" pos:end="169:39">height</name></name> <operator pos:start="169:41" pos:end="169:42">&lt;&lt;</operator> <literal type="number" pos:start="169:44" pos:end="169:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="171:11" pos:end="187:9">else <block pos:start="171:16" pos:end="187:9">{<block_content pos:start="173:13" pos:end="185:51">

            <decl_stmt pos:start="173:13" pos:end="177:79"><decl pos:start="173:13" pos:end="177:78"><type pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:19">int64_t</name></type> <name pos:start="173:21" pos:end="173:36">track_width_1616</name> <init pos:start="173:38" pos:end="177:78">= <expr pos:start="173:40" pos:end="177:78"><call pos:start="173:40" pos:end="177:78"><name pos:start="173:40" pos:end="173:49">av_rescale</name><argument_list pos:start="173:50" pos:end="177:78">(<argument pos:start="173:51" pos:end="173:77"><expr pos:start="173:51" pos:end="173:77"><name pos:start="173:51" pos:end="173:77"><name pos:start="173:51" pos:end="173:52">st</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:73">sample_aspect_ratio</name><operator pos:start="173:74" pos:end="173:74">.</operator><name pos:start="173:75" pos:end="173:77">num</name></name></expr></argument>,

                                                  <argument pos:start="175:51" pos:end="175:79"><expr pos:start="175:51" pos:end="175:79"><name pos:start="175:51" pos:end="175:67"><name pos:start="175:51" pos:end="175:55">track</name><operator pos:start="175:56" pos:end="175:57">-&gt;</operator><name pos:start="175:58" pos:end="175:60">enc</name><operator pos:start="175:61" pos:end="175:62">-&gt;</operator><name pos:start="175:63" pos:end="175:67">width</name></name> <operator pos:start="175:69" pos:end="175:69">*</operator> <literal type="number" pos:start="175:71" pos:end="175:79">0x10000LL</literal></expr></argument>,

                                                  <argument pos:start="177:51" pos:end="177:77"><expr pos:start="177:51" pos:end="177:77"><name pos:start="177:51" pos:end="177:77"><name pos:start="177:51" pos:end="177:52">st</name><operator pos:start="177:53" pos:end="177:54">-&gt;</operator><name pos:start="177:55" pos:end="177:73">sample_aspect_ratio</name><operator pos:start="177:74" pos:end="177:74">.</operator><name pos:start="177:75" pos:end="177:77">den</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="179:13" pos:end="181:63"><if pos:start="179:13" pos:end="181:63">if <condition pos:start="179:16" pos:end="179:73">(<expr pos:start="179:17" pos:end="179:72"><operator pos:start="179:17" pos:end="179:17">!</operator><name pos:start="179:18" pos:end="179:33">track_width_1616</name> <operator pos:start="179:35" pos:end="179:36">||</operator> <name pos:start="179:38" pos:end="179:50"><name pos:start="179:38" pos:end="179:42">track</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:50">height</name></name> <operator pos:start="179:52" pos:end="179:53">!=</operator> <name pos:start="179:55" pos:end="179:72"><name pos:start="179:55" pos:end="179:59">track</name><operator pos:start="179:60" pos:end="179:61">-&gt;</operator><name pos:start="179:62" pos:end="179:64">enc</name><operator pos:start="179:65" pos:end="179:66">-&gt;</operator><name pos:start="179:67" pos:end="179:72">height</name></name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:63"><block_content pos:start="181:17" pos:end="181:63">

                <expr_stmt pos:start="181:17" pos:end="181:63"><expr pos:start="181:17" pos:end="181:62"><name pos:start="181:17" pos:end="181:32">track_width_1616</name> <operator pos:start="181:34" pos:end="181:34">=</operator> <name pos:start="181:36" pos:end="181:52"><name pos:start="181:36" pos:end="181:40">track</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:45">enc</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:52">width</name></name> <operator pos:start="181:54" pos:end="181:54">*</operator> <literal type="number" pos:start="181:56" pos:end="181:62">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:44"><expr pos:start="183:13" pos:end="183:43"><call pos:start="183:13" pos:end="183:43"><name pos:start="183:13" pos:end="183:21">avio_wb32</name><argument_list pos:start="183:22" pos:end="183:43">(<argument pos:start="183:23" pos:end="183:24"><expr pos:start="183:23" pos:end="183:24"><name pos:start="183:23" pos:end="183:24">pb</name></expr></argument>, <argument pos:start="183:27" pos:end="183:42"><expr pos:start="183:27" pos:end="183:42"><name pos:start="183:27" pos:end="183:42">track_width_1616</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:51"><expr pos:start="185:13" pos:end="185:50"><call pos:start="185:13" pos:end="185:50"><name pos:start="185:13" pos:end="185:21">avio_wb32</name><argument_list pos:start="185:22" pos:end="185:50">(<argument pos:start="185:23" pos:end="185:24"><expr pos:start="185:23" pos:end="185:24"><name pos:start="185:23" pos:end="185:24">pb</name></expr></argument>, <argument pos:start="185:27" pos:end="185:49"><expr pos:start="185:27" pos:end="185:49"><name pos:start="185:27" pos:end="185:39"><name pos:start="185:27" pos:end="185:31">track</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:39">height</name></name> <operator pos:start="185:41" pos:end="185:41">*</operator> <literal type="number" pos:start="185:43" pos:end="185:49">0x10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="195:5">else <block pos:start="189:12" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:25">

        <expr_stmt pos:start="191:9" pos:end="191:25"><expr pos:start="191:9" pos:end="191:24"><call pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:17">avio_wb32</name><argument_list pos:start="191:18" pos:end="191:24">(<argument pos:start="191:19" pos:end="191:20"><expr pos:start="191:19" pos:end="191:20"><name pos:start="191:19" pos:end="191:20">pb</name></expr></argument>, <argument pos:start="191:23" pos:end="191:23"><expr pos:start="191:23" pos:end="191:23"><literal type="number" pos:start="191:23" pos:end="191:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:25"><expr pos:start="193:9" pos:end="193:24"><call pos:start="193:9" pos:end="193:24"><name pos:start="193:9" pos:end="193:17">avio_wb32</name><argument_list pos:start="193:18" pos:end="193:24">(<argument pos:start="193:19" pos:end="193:20"><expr pos:start="193:19" pos:end="193:20"><name pos:start="193:19" pos:end="193:20">pb</name></expr></argument>, <argument pos:start="193:23" pos:end="193:23"><expr pos:start="193:23" pos:end="193:23"><literal type="number" pos:start="193:23" pos:end="193:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="197:5" pos:end="197:16">return <expr pos:start="197:12" pos:end="197:15"><literal type="number" pos:start="197:12" pos:end="197:15">0x5c</literal></expr>;</return>

</block_content>}</block></function>
</unit>
