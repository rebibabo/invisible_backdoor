<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23630.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">AVStream</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type> <name pos:start="1:19" pos:end="1:34">parse_media_type</name><parameter_list pos:start="1:35" pos:end="5:68">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:63">AVStream</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">st</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:76"><decl pos:start="1:70" pos:end="1:76"><type pos:start="1:70" pos:end="1:76"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:76">sid</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:46">ff_asf_guid</name></type> <name pos:start="3:48" pos:end="3:56">mediatype</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:77"><decl pos:start="3:59" pos:end="3:77"><type pos:start="3:59" pos:end="3:77"><name pos:start="3:59" pos:end="3:69">ff_asf_guid</name></type> <name pos:start="3:71" pos:end="3:77">subtype</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:57"><decl pos:start="5:36" pos:end="5:57"><type pos:start="5:36" pos:end="5:57"><name pos:start="5:36" pos:end="5:46">ff_asf_guid</name></type> <name pos:start="5:48" pos:end="5:57">formattype</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:67"><decl pos:start="5:60" pos:end="5:67"><type pos:start="5:60" pos:end="5:67"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:67">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="237:1">{<block_content pos:start="9:5" pos:end="235:16">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">WtvContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">wtv</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:29">= <expr pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:25">wtv</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="223:5"><if pos:start="13:5" pos:end="51:5">if <condition pos:start="13:8" pos:end="15:63">(<expr pos:start="13:9" pos:end="15:62"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:65"><name pos:start="13:10" pos:end="13:19">ff_guidcmp</name><argument_list pos:start="13:20" pos:end="13:65">(<argument pos:start="13:21" pos:end="13:27"><expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:27">subtype</name></expr></argument>, <argument pos:start="13:30" pos:end="13:64"><expr pos:start="13:30" pos:end="13:64"><name pos:start="13:30" pos:end="13:64">ff_mediasubtype_cpfilters_processed</name></expr></argument>)</argument_list></call> <operator pos:start="13:67" pos:end="13:68">&amp;&amp;</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:62"><name pos:start="15:10" pos:end="15:19">ff_guidcmp</name><argument_list pos:start="15:20" pos:end="15:62">(<argument pos:start="15:21" pos:end="15:30"><expr pos:start="15:21" pos:end="15:30"><name pos:start="15:21" pos:end="15:30">formattype</name></expr></argument>, <argument pos:start="15:33" pos:end="15:61"><expr pos:start="15:33" pos:end="15:61"><name pos:start="15:33" pos:end="15:61">ff_format_cpfilters_processed</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:65" pos:end="51:5">{<block_content pos:start="17:9" pos:end="49:18">

        <decl_stmt pos:start="17:9" pos:end="17:35"><decl pos:start="17:9" pos:end="17:34"><type pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19">ff_asf_guid</name></type> <name pos:start="17:21" pos:end="17:34">actual_subtype</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:38"><decl pos:start="19:9" pos:end="19:37"><type pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:19">ff_asf_guid</name></type> <name pos:start="19:21" pos:end="19:37">actual_formattype</name></decl>;</decl_stmt>



        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:21">32</literal></expr>)</condition> <block pos:start="23:24" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:24">

            <expr_stmt pos:start="25:13" pos:end="25:72"><expr pos:start="25:13" pos:end="25:71"><call pos:start="25:13" pos:end="25:71"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:71">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="25:39" pos:end="25:70"><expr pos:start="25:39" pos:end="25:70"><literal type="string" pos:start="25:39" pos:end="25:70">"format buffer size underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><call pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:21">avio_skip</name><argument_list pos:start="27:22" pos:end="27:31">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">pb</name></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:24">return <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:17">avio_skip</name><argument_list pos:start="35:18" pos:end="35:32">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:31"><expr pos:start="35:23" pos:end="35:31"><name pos:start="35:23" pos:end="35:26">size</name> <operator pos:start="35:28" pos:end="35:28">-</operator> <literal type="number" pos:start="35:30" pos:end="35:31">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:19">ff_get_guid</name><argument_list pos:start="37:20" pos:end="37:40">(<argument pos:start="37:21" pos:end="37:22"><expr pos:start="37:21" pos:end="37:22"><name pos:start="37:21" pos:end="37:22">pb</name></expr></argument>, <argument pos:start="37:25" pos:end="37:39"><expr pos:start="37:25" pos:end="37:39"><operator pos:start="37:25" pos:end="37:25">&amp;</operator><name pos:start="37:26" pos:end="37:39">actual_subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:19">ff_get_guid</name><argument_list pos:start="39:20" pos:end="39:43">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">pb</name></expr></argument>, <argument pos:start="39:25" pos:end="39:42"><expr pos:start="39:25" pos:end="39:42"><operator pos:start="39:25" pos:end="39:25">&amp;</operator><name pos:start="39:26" pos:end="39:42">actual_formattype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><call pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:17">avio_seek</name><argument_list pos:start="41:18" pos:end="41:38">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">pb</name></expr></argument>, <argument pos:start="41:23" pos:end="41:27"><expr pos:start="41:23" pos:end="41:27"><operator pos:start="41:23" pos:end="41:23">-</operator><name pos:start="41:24" pos:end="41:27">size</name></expr></argument>, <argument pos:start="41:30" pos:end="41:37"><expr pos:start="41:30" pos:end="41:37"><name pos:start="41:30" pos:end="41:37">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:99"><expr pos:start="45:9" pos:end="45:98"><name pos:start="45:9" pos:end="45:10">st</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:98"><name pos:start="45:14" pos:end="45:29">parse_media_type</name><argument_list pos:start="45:30" pos:end="45:98">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">s</name></expr></argument>, <argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">st</name></expr></argument>, <argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">sid</name></expr></argument>, <argument pos:start="45:43" pos:end="45:51"><expr pos:start="45:43" pos:end="45:51"><name pos:start="45:43" pos:end="45:51">mediatype</name></expr></argument>, <argument pos:start="45:54" pos:end="45:67"><expr pos:start="45:54" pos:end="45:67"><name pos:start="45:54" pos:end="45:67">actual_subtype</name></expr></argument>, <argument pos:start="45:70" pos:end="45:86"><expr pos:start="45:70" pos:end="45:86"><name pos:start="45:70" pos:end="45:86">actual_formattype</name></expr></argument>, <argument pos:start="45:89" pos:end="45:97"><expr pos:start="45:89" pos:end="45:97"><name pos:start="45:89" pos:end="45:92">size</name> <operator pos:start="45:94" pos:end="45:94">-</operator> <literal type="number" pos:start="45:96" pos:end="45:97">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:17">avio_skip</name><argument_list pos:start="47:18" pos:end="47:25">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>, <argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><literal type="number" pos:start="47:23" pos:end="47:24">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><name pos:start="49:16" pos:end="49:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="105:5">else if <condition pos:start="51:15" pos:end="51:58">(<expr pos:start="51:16" pos:end="51:57"><operator pos:start="51:16" pos:end="51:16">!</operator><call pos:start="51:17" pos:end="51:57"><name pos:start="51:17" pos:end="51:26">ff_guidcmp</name><argument_list pos:start="51:27" pos:end="51:57">(<argument pos:start="51:28" pos:end="51:36"><expr pos:start="51:28" pos:end="51:36"><name pos:start="51:28" pos:end="51:36">mediatype</name></expr></argument>, <argument pos:start="51:39" pos:end="51:56"><expr pos:start="51:39" pos:end="51:56"><name pos:start="51:39" pos:end="51:56">ff_mediatype_audio</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:60" pos:end="105:5">{<block_content pos:start="53:9" pos:end="103:18">

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:10">st</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:55"><name pos:start="53:14" pos:end="53:23">new_stream</name><argument_list pos:start="53:24" pos:end="53:55">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">s</name></expr></argument>, <argument pos:start="53:28" pos:end="53:29"><expr pos:start="53:28" pos:end="53:29"><name pos:start="53:28" pos:end="53:29">st</name></expr></argument>, <argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">sid</name></expr></argument>, <argument pos:start="53:37" pos:end="53:54"><expr pos:start="53:37" pos:end="53:54"><name pos:start="53:37" pos:end="53:54">AVMEDIA_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:24"><if pos:start="55:9" pos:end="57:24">if <condition pos:start="55:12" pos:end="55:16">(<expr pos:start="55:13" pos:end="55:15"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:15">st</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:24"><block_content pos:start="57:13" pos:end="57:24">

            <return pos:start="57:13" pos:end="57:24">return <expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="75:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:60">(<expr pos:start="59:13" pos:end="59:59"><operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:59"><name pos:start="59:14" pos:end="59:23">ff_guidcmp</name><argument_list pos:start="59:24" pos:end="59:59">(<argument pos:start="59:25" pos:end="59:34"><expr pos:start="59:25" pos:end="59:34"><name pos:start="59:25" pos:end="59:34">formattype</name></expr></argument>, <argument pos:start="59:37" pos:end="59:58"><expr pos:start="59:37" pos:end="59:58"><name pos:start="59:37" pos:end="59:58">ff_format_waveformatex</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:62" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:28">

            <decl_stmt pos:start="61:13" pos:end="61:61"><decl pos:start="61:13" pos:end="61:60"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:19">ret</name> <init pos:start="61:21" pos:end="61:60">= <expr pos:start="61:23" pos:end="61:60"><call pos:start="61:23" pos:end="61:60"><name pos:start="61:23" pos:end="61:39">ff_get_wav_header</name><argument_list pos:start="61:40" pos:end="61:60">(<argument pos:start="61:41" pos:end="61:42"><expr pos:start="61:41" pos:end="61:42"><name pos:start="61:41" pos:end="61:42">pb</name></expr></argument>, <argument pos:start="61:45" pos:end="61:53"><expr pos:start="61:45" pos:end="61:53"><name pos:start="61:45" pos:end="61:53"><name pos:start="61:45" pos:end="61:46">st</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:53">codec</name></name></expr></argument>, <argument pos:start="61:56" pos:end="61:59"><expr pos:start="61:56" pos:end="61:59"><name pos:start="61:56" pos:end="61:59">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="63:13" pos:end="65:28"><if pos:start="63:13" pos:end="65:28">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">ret</name> <operator pos:start="63:21" pos:end="63:21">&lt;</operator> <literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:28"><block_content pos:start="65:17" pos:end="65:28">

                <return pos:start="65:17" pos:end="65:28">return <expr pos:start="65:24" pos:end="65:27"><name pos:start="65:24" pos:end="65:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="75:9">else <block pos:start="67:16" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:32">

            <if_stmt pos:start="69:13" pos:end="71:105"><if pos:start="69:13" pos:end="71:105">if <condition pos:start="69:16" pos:end="69:55">(<expr pos:start="69:17" pos:end="69:54"><call pos:start="69:17" pos:end="69:54"><name pos:start="69:17" pos:end="69:26">ff_guidcmp</name><argument_list pos:start="69:27" pos:end="69:54">(<argument pos:start="69:28" pos:end="69:37"><expr pos:start="69:28" pos:end="69:37"><name pos:start="69:28" pos:end="69:37">formattype</name></expr></argument>, <argument pos:start="69:40" pos:end="69:53"><expr pos:start="69:40" pos:end="69:53"><name pos:start="69:40" pos:end="69:53">ff_format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:105"><block_content pos:start="71:17" pos:end="71:105">

                <expr_stmt pos:start="71:17" pos:end="71:105"><expr pos:start="71:17" pos:end="71:104"><call pos:start="71:17" pos:end="71:104"><name pos:start="71:17" pos:end="71:22">av_log</name><argument_list pos:start="71:23" pos:end="71:104">(<argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">s</name></expr></argument>, <argument pos:start="71:27" pos:end="71:40"><expr pos:start="71:27" pos:end="71:40"><name pos:start="71:27" pos:end="71:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="71:43" pos:end="71:78"><expr pos:start="71:43" pos:end="71:78"><literal type="string" pos:start="71:43" pos:end="71:63">"unknown formattype:"</literal><name pos:start="71:64" pos:end="71:74">FF_PRI_GUID</name><literal type="string" pos:start="71:75" pos:end="71:78">"\n"</literal></expr></argument>, <argument pos:start="71:81" pos:end="71:103"><expr pos:start="71:81" pos:end="71:103"><call pos:start="71:81" pos:end="71:103"><name pos:start="71:81" pos:end="71:91">FF_ARG_GUID</name><argument_list pos:start="71:92" pos:end="71:103">(<argument pos:start="71:93" pos:end="71:102"><expr pos:start="71:93" pos:end="71:102"><name pos:start="71:93" pos:end="71:102">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><call pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:21">avio_skip</name><argument_list pos:start="73:22" pos:end="73:31">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">pb</name></expr></argument>, <argument pos:start="73:27" pos:end="73:30"><expr pos:start="73:27" pos:end="73:30"><name pos:start="73:27" pos:end="73:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="79:9" pos:end="101:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:83">(<expr pos:start="79:13" pos:end="79:82"><operator pos:start="79:13" pos:end="79:13">!</operator><macro pos:start="79:14" pos:end="79:82"><name pos:start="79:14" pos:end="79:19">memcmp</name><argument_list pos:start="79:20" pos:end="79:82">(<argument pos:start="79:21" pos:end="79:31">subtype + <literal type="number" pos:start="79:31" pos:end="79:31">4</literal></argument>, <argument pos:start="79:34" pos:end="79:77">(const uint8_t[]){FF_MEDIASUBTYPE_BASE_GUID}</argument>, <argument pos:start="79:80" pos:end="79:81"><literal type="number" pos:start="79:80" pos:end="79:81">12</literal></argument>)</argument_list></macro></expr>)</condition> <block pos:start="79:85" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:106">

            <expr_stmt pos:start="81:13" pos:end="81:106"><expr pos:start="81:13" pos:end="81:105"><name pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:14">st</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:21">codec</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:31">codec_id</name></name> <operator pos:start="81:33" pos:end="81:33">=</operator> <call pos:start="81:35" pos:end="81:105"><name pos:start="81:35" pos:end="81:53">ff_wav_codec_get_id</name><argument_list pos:start="81:54" pos:end="81:105">(<argument pos:start="81:55" pos:end="81:70"><expr pos:start="81:55" pos:end="81:70"><call pos:start="81:55" pos:end="81:70"><name pos:start="81:55" pos:end="81:61">AV_RL32</name><argument_list pos:start="81:62" pos:end="81:70">(<argument pos:start="81:63" pos:end="81:69"><expr pos:start="81:63" pos:end="81:69"><name pos:start="81:63" pos:end="81:69">subtype</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:73" pos:end="81:104"><expr pos:start="81:73" pos:end="81:104"><name pos:start="81:73" pos:end="81:104"><name pos:start="81:73" pos:end="81:74">st</name><operator pos:start="81:75" pos:end="81:76">-&gt;</operator><name pos:start="81:77" pos:end="81:81">codec</name><operator pos:start="81:82" pos:end="81:83">-&gt;</operator><name pos:start="81:84" pos:end="81:104">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="83:11" pos:end="93:9">else if <condition pos:start="83:19" pos:end="83:67">(<expr pos:start="83:20" pos:end="83:66"><operator pos:start="83:20" pos:end="83:20">!</operator><call pos:start="83:21" pos:end="83:66"><name pos:start="83:21" pos:end="83:30">ff_guidcmp</name><argument_list pos:start="83:31" pos:end="83:66">(<argument pos:start="83:32" pos:end="83:38"><expr pos:start="83:32" pos:end="83:38"><name pos:start="83:32" pos:end="83:38">subtype</name></expr></argument>, <argument pos:start="83:41" pos:end="83:65"><expr pos:start="83:41" pos:end="83:65"><name pos:start="83:41" pos:end="83:65">mediasubtype_mpeg1payload</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:69" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:75">

            <if_stmt pos:start="85:13" pos:end="91:75"><if pos:start="85:13" pos:end="87:44">if <condition pos:start="85:16" pos:end="85:72">(<expr pos:start="85:17" pos:end="85:71"><name pos:start="85:17" pos:end="85:36"><name pos:start="85:17" pos:end="85:18">st</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:25">codec</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:36">extradata</name></name> <operator pos:start="85:38" pos:end="85:39">&amp;&amp;</operator> <name pos:start="85:41" pos:end="85:65"><name pos:start="85:41" pos:end="85:42">st</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:49">codec</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:65">extradata_size</name></name> <operator pos:start="85:67" pos:end="85:68">&gt;=</operator> <literal type="number" pos:start="85:70" pos:end="85:71">22</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:44"><block_content pos:start="87:17" pos:end="87:44">

                <expr_stmt pos:start="87:17" pos:end="87:44"><expr pos:start="87:17" pos:end="87:43"><call pos:start="87:17" pos:end="87:43"><name pos:start="87:17" pos:end="87:39">parse_mpeg1waveformatex</name><argument_list pos:start="87:40" pos:end="87:43">(<argument pos:start="87:41" pos:end="87:42"><expr pos:start="87:41" pos:end="87:42"><name pos:start="87:41" pos:end="87:42">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="89:13" pos:end="91:75">else<block type="pseudo" pos:start="91:17" pos:end="91:75"><block_content pos:start="91:17" pos:end="91:75">

                <expr_stmt pos:start="91:17" pos:end="91:75"><expr pos:start="91:17" pos:end="91:74"><call pos:start="91:17" pos:end="91:74"><name pos:start="91:17" pos:end="91:22">av_log</name><argument_list pos:start="91:23" pos:end="91:74">(<argument pos:start="91:24" pos:end="91:24"><expr pos:start="91:24" pos:end="91:24"><name pos:start="91:24" pos:end="91:24">s</name></expr></argument>, <argument pos:start="91:27" pos:end="91:40"><expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="91:43" pos:end="91:73"><expr pos:start="91:43" pos:end="91:73"><literal type="string" pos:start="91:43" pos:end="91:73">"MPEG1WAVEFORMATEX underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="101:9">else <block pos:start="93:16" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:99">

            <expr_stmt pos:start="95:13" pos:end="95:84"><expr pos:start="95:13" pos:end="95:83"><name pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:14">st</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:21">codec</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:31">codec_id</name></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <call pos:start="95:35" pos:end="95:83"><name pos:start="95:35" pos:end="95:54">ff_codec_guid_get_id</name><argument_list pos:start="95:55" pos:end="95:83">(<argument pos:start="95:56" pos:end="95:73"><expr pos:start="95:56" pos:end="95:73"><name pos:start="95:56" pos:end="95:73">ff_codec_wav_guids</name></expr></argument>, <argument pos:start="95:76" pos:end="95:82"><expr pos:start="95:76" pos:end="95:82"><name pos:start="95:76" pos:end="95:82">subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:99"><if pos:start="97:13" pos:end="99:99">if <condition pos:start="97:16" pos:end="97:56">(<expr pos:start="97:17" pos:end="97:55"><name pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:18">st</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:25">codec</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:35">codec_id</name></name> <operator pos:start="97:37" pos:end="97:38">==</operator> <name pos:start="97:40" pos:end="97:55">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:99"><block_content pos:start="99:17" pos:end="99:99">

                <expr_stmt pos:start="99:17" pos:end="99:99"><expr pos:start="99:17" pos:end="99:98"><call pos:start="99:17" pos:end="99:98"><name pos:start="99:17" pos:end="99:22">av_log</name><argument_list pos:start="99:23" pos:end="99:98">(<argument pos:start="99:24" pos:end="99:24"><expr pos:start="99:24" pos:end="99:24"><name pos:start="99:24" pos:end="99:24">s</name></expr></argument>, <argument pos:start="99:27" pos:end="99:40"><expr pos:start="99:27" pos:end="99:40"><name pos:start="99:27" pos:end="99:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="99:43" pos:end="99:75"><expr pos:start="99:43" pos:end="99:75"><literal type="string" pos:start="99:43" pos:end="99:60">"unknown subtype:"</literal><name pos:start="99:61" pos:end="99:71">FF_PRI_GUID</name><literal type="string" pos:start="99:72" pos:end="99:75">"\n"</literal></expr></argument>, <argument pos:start="99:78" pos:end="99:97"><expr pos:start="99:78" pos:end="99:97"><call pos:start="99:78" pos:end="99:97"><name pos:start="99:78" pos:end="99:88">FF_ARG_GUID</name><argument_list pos:start="99:89" pos:end="99:97">(<argument pos:start="99:90" pos:end="99:96"><expr pos:start="99:90" pos:end="99:96"><name pos:start="99:90" pos:end="99:96">subtype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="103:9" pos:end="103:18">return <expr pos:start="103:16" pos:end="103:17"><name pos:start="103:16" pos:end="103:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="105:7" pos:end="171:5">else if <condition pos:start="105:15" pos:end="105:58">(<expr pos:start="105:16" pos:end="105:57"><operator pos:start="105:16" pos:end="105:16">!</operator><call pos:start="105:17" pos:end="105:57"><name pos:start="105:17" pos:end="105:26">ff_guidcmp</name><argument_list pos:start="105:27" pos:end="105:57">(<argument pos:start="105:28" pos:end="105:36"><expr pos:start="105:28" pos:end="105:36"><name pos:start="105:28" pos:end="105:36">mediatype</name></expr></argument>, <argument pos:start="105:39" pos:end="105:56"><expr pos:start="105:39" pos:end="105:56"><name pos:start="105:39" pos:end="105:56">ff_mediatype_video</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:60" pos:end="171:5">{<block_content pos:start="107:9" pos:end="169:18">

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:10">st</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <call pos:start="107:14" pos:end="107:55"><name pos:start="107:14" pos:end="107:23">new_stream</name><argument_list pos:start="107:24" pos:end="107:55">(<argument pos:start="107:25" pos:end="107:25"><expr pos:start="107:25" pos:end="107:25"><name pos:start="107:25" pos:end="107:25">s</name></expr></argument>, <argument pos:start="107:28" pos:end="107:29"><expr pos:start="107:28" pos:end="107:29"><name pos:start="107:28" pos:end="107:29">st</name></expr></argument>, <argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">sid</name></expr></argument>, <argument pos:start="107:37" pos:end="107:54"><expr pos:start="107:37" pos:end="107:54"><name pos:start="107:37" pos:end="107:54">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="111:24"><if pos:start="109:9" pos:end="111:24">if <condition pos:start="109:12" pos:end="109:16">(<expr pos:start="109:13" pos:end="109:15"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:15">st</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:24"><block_content pos:start="111:13" pos:end="111:24">

            <return pos:start="111:13" pos:end="111:24">return <expr pos:start="111:20" pos:end="111:23"><name pos:start="111:20" pos:end="111:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="151:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:58">(<expr pos:start="113:13" pos:end="113:57"><operator pos:start="113:13" pos:end="113:13">!</operator><call pos:start="113:14" pos:end="113:57"><name pos:start="113:14" pos:end="113:23">ff_guidcmp</name><argument_list pos:start="113:24" pos:end="113:57">(<argument pos:start="113:25" pos:end="113:34"><expr pos:start="113:25" pos:end="113:34"><name pos:start="113:25" pos:end="113:34">formattype</name></expr></argument>, <argument pos:start="113:37" pos:end="113:56"><expr pos:start="113:37" pos:end="113:56"><name pos:start="113:37" pos:end="113:56">ff_format_videoinfo2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:60" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:53">

            <decl_stmt pos:start="115:13" pos:end="115:57"><decl pos:start="115:13" pos:end="115:56"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:24">consumed</name> <init pos:start="115:26" pos:end="115:56">= <expr pos:start="115:28" pos:end="115:56"><call pos:start="115:28" pos:end="115:56"><name pos:start="115:28" pos:end="115:49">parse_videoinfoheader2</name><argument_list pos:start="115:50" pos:end="115:56">(<argument pos:start="115:51" pos:end="115:51"><expr pos:start="115:51" pos:end="115:51"><name pos:start="115:51" pos:end="115:51">s</name></expr></argument>, <argument pos:start="115:54" pos:end="115:55"><expr pos:start="115:54" pos:end="115:55"><name pos:start="115:54" pos:end="115:55">st</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:53"><expr pos:start="117:13" pos:end="117:52"><call pos:start="117:13" pos:end="117:52"><name pos:start="117:13" pos:end="117:21">avio_skip</name><argument_list pos:start="117:22" pos:end="117:52">(<argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">pb</name></expr></argument>, <argument pos:start="117:27" pos:end="117:51"><expr pos:start="117:27" pos:end="117:51"><call pos:start="117:27" pos:end="117:51"><name pos:start="117:27" pos:end="117:31">FFMAX</name><argument_list pos:start="117:32" pos:end="117:51">(<argument pos:start="117:33" pos:end="117:47"><expr pos:start="117:33" pos:end="117:47"><name pos:start="117:33" pos:end="117:36">size</name> <operator pos:start="117:38" pos:end="117:38">-</operator> <name pos:start="117:40" pos:end="117:47">consumed</name></expr></argument>, <argument pos:start="117:50" pos:end="117:50"><expr pos:start="117:50" pos:end="117:50"><literal type="number" pos:start="117:50" pos:end="117:50">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="119:11" pos:end="143:9">else if <condition pos:start="119:19" pos:end="119:66">(<expr pos:start="119:20" pos:end="119:65"><operator pos:start="119:20" pos:end="119:20">!</operator><call pos:start="119:21" pos:end="119:65"><name pos:start="119:21" pos:end="119:30">ff_guidcmp</name><argument_list pos:start="119:31" pos:end="119:65">(<argument pos:start="119:32" pos:end="119:41"><expr pos:start="119:32" pos:end="119:41"><name pos:start="119:32" pos:end="119:41">formattype</name></expr></argument>, <argument pos:start="119:44" pos:end="119:64"><expr pos:start="119:44" pos:end="119:64"><name pos:start="119:44" pos:end="119:64">ff_format_mpeg2_video</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:68" pos:end="143:9">{<block_content pos:start="121:13" pos:end="141:53">

            <decl_stmt pos:start="121:13" pos:end="121:57"><decl pos:start="121:13" pos:end="121:56"><type pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">int</name></type> <name pos:start="121:17" pos:end="121:24">consumed</name> <init pos:start="121:26" pos:end="121:56">= <expr pos:start="121:28" pos:end="121:56"><call pos:start="121:28" pos:end="121:56"><name pos:start="121:28" pos:end="121:49">parse_videoinfoheader2</name><argument_list pos:start="121:50" pos:end="121:56">(<argument pos:start="121:51" pos:end="121:51"><expr pos:start="121:51" pos:end="121:51"><name pos:start="121:51" pos:end="121:51">s</name></expr></argument>, <argument pos:start="121:54" pos:end="121:55"><expr pos:start="121:54" pos:end="121:55"><name pos:start="121:54" pos:end="121:55">st</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:22"><decl pos:start="123:13" pos:end="123:21"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:21">count</name></decl>;</decl_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:29"><expr pos:start="125:13" pos:end="125:28"><call pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:21">avio_skip</name><argument_list pos:start="125:22" pos:end="125:28">(<argument pos:start="125:23" pos:end="125:24"><expr pos:start="125:23" pos:end="125:24"><name pos:start="125:23" pos:end="125:24">pb</name></expr></argument>, <argument pos:start="125:27" pos:end="125:27"><expr pos:start="125:27" pos:end="125:27"><literal type="number" pos:start="125:27" pos:end="125:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:17">count</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <call pos:start="127:21" pos:end="127:33"><name pos:start="127:21" pos:end="127:29">avio_rl32</name><argument_list pos:start="127:30" pos:end="127:33">(<argument pos:start="127:31" pos:end="127:32"><expr pos:start="127:31" pos:end="127:32"><name pos:start="127:31" pos:end="127:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:30"><expr pos:start="129:13" pos:end="129:29"><call pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:21">avio_skip</name><argument_list pos:start="129:22" pos:end="129:29">(<argument pos:start="129:23" pos:end="129:24"><expr pos:start="129:23" pos:end="129:24"><name pos:start="129:23" pos:end="129:24">pb</name></expr></argument>, <argument pos:start="129:27" pos:end="129:28"><expr pos:start="129:27" pos:end="129:28"><literal type="number" pos:start="129:27" pos:end="129:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:68">(<expr pos:start="131:17" pos:end="131:67"><name pos:start="131:17" pos:end="131:21">count</name> <operator pos:start="131:23" pos:end="131:24">&amp;&amp;</operator> <call pos:start="131:26" pos:end="131:63"><name pos:start="131:26" pos:end="131:41">ff_get_extradata</name><argument_list pos:start="131:42" pos:end="131:63">(<argument pos:start="131:43" pos:end="131:51"><expr pos:start="131:43" pos:end="131:51"><name pos:start="131:43" pos:end="131:51"><name pos:start="131:43" pos:end="131:44">st</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:51">codec</name></name></expr></argument>, <argument pos:start="131:54" pos:end="131:55"><expr pos:start="131:54" pos:end="131:55"><name pos:start="131:54" pos:end="131:55">pb</name></expr></argument>, <argument pos:start="131:58" pos:end="131:62"><expr pos:start="131:58" pos:end="131:62"><name pos:start="131:58" pos:end="131:62">count</name></expr></argument>)</argument_list></call> <operator pos:start="131:65" pos:end="131:65">&lt;</operator> <literal type="number" pos:start="131:67" pos:end="131:67">0</literal></expr>)</condition> <block pos:start="131:70" pos:end="137:13">{<block_content pos:start="133:16" pos:end="135:27">

               <expr_stmt pos:start="133:16" pos:end="133:37"><expr pos:start="133:16" pos:end="133:36"><call pos:start="133:16" pos:end="133:36"><name pos:start="133:16" pos:end="133:29">ff_free_stream</name><argument_list pos:start="133:30" pos:end="133:36">(<argument pos:start="133:31" pos:end="133:31"><expr pos:start="133:31" pos:end="133:31"><name pos:start="133:31" pos:end="133:31">s</name></expr></argument>, <argument pos:start="133:34" pos:end="133:35"><expr pos:start="133:34" pos:end="133:35"><name pos:start="133:34" pos:end="133:35">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

               <return pos:start="135:16" pos:end="135:27">return <expr pos:start="135:23" pos:end="135:26"><name pos:start="135:23" pos:end="135:26">NULL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:20">consumed</name> <operator pos:start="139:22" pos:end="139:23">+=</operator> <literal type="number" pos:start="139:25" pos:end="139:28">20</literal> <operator pos:start="139:28" pos:end="139:28">+</operator> <name pos:start="139:30" pos:end="139:34">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:53"><expr pos:start="141:13" pos:end="141:52"><call pos:start="141:13" pos:end="141:52"><name pos:start="141:13" pos:end="141:21">avio_skip</name><argument_list pos:start="141:22" pos:end="141:52">(<argument pos:start="141:23" pos:end="141:24"><expr pos:start="141:23" pos:end="141:24"><name pos:start="141:23" pos:end="141:24">pb</name></expr></argument>, <argument pos:start="141:27" pos:end="141:51"><expr pos:start="141:27" pos:end="141:51"><call pos:start="141:27" pos:end="141:51"><name pos:start="141:27" pos:end="141:31">FFMAX</name><argument_list pos:start="141:32" pos:end="141:51">(<argument pos:start="141:33" pos:end="141:47"><expr pos:start="141:33" pos:end="141:47"><name pos:start="141:33" pos:end="141:36">size</name> <operator pos:start="141:38" pos:end="141:38">-</operator> <name pos:start="141:40" pos:end="141:47">consumed</name></expr></argument>, <argument pos:start="141:50" pos:end="141:50"><expr pos:start="141:50" pos:end="141:50"><literal type="number" pos:start="141:50" pos:end="141:50">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="143:11" pos:end="151:9">else <block pos:start="143:16" pos:end="151:9">{<block_content pos:start="145:13" pos:end="149:32">

            <if_stmt pos:start="145:13" pos:end="147:105"><if pos:start="145:13" pos:end="147:105">if <condition pos:start="145:16" pos:end="145:55">(<expr pos:start="145:17" pos:end="145:54"><call pos:start="145:17" pos:end="145:54"><name pos:start="145:17" pos:end="145:26">ff_guidcmp</name><argument_list pos:start="145:27" pos:end="145:54">(<argument pos:start="145:28" pos:end="145:37"><expr pos:start="145:28" pos:end="145:37"><name pos:start="145:28" pos:end="145:37">formattype</name></expr></argument>, <argument pos:start="145:40" pos:end="145:53"><expr pos:start="145:40" pos:end="145:53"><name pos:start="145:40" pos:end="145:53">ff_format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:105"><block_content pos:start="147:17" pos:end="147:105">

                <expr_stmt pos:start="147:17" pos:end="147:105"><expr pos:start="147:17" pos:end="147:104"><call pos:start="147:17" pos:end="147:104"><name pos:start="147:17" pos:end="147:22">av_log</name><argument_list pos:start="147:23" pos:end="147:104">(<argument pos:start="147:24" pos:end="147:24"><expr pos:start="147:24" pos:end="147:24"><name pos:start="147:24" pos:end="147:24">s</name></expr></argument>, <argument pos:start="147:27" pos:end="147:40"><expr pos:start="147:27" pos:end="147:40"><name pos:start="147:27" pos:end="147:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="147:43" pos:end="147:78"><expr pos:start="147:43" pos:end="147:78"><literal type="string" pos:start="147:43" pos:end="147:63">"unknown formattype:"</literal><name pos:start="147:64" pos:end="147:74">FF_PRI_GUID</name><literal type="string" pos:start="147:75" pos:end="147:78">"\n"</literal></expr></argument>, <argument pos:start="147:81" pos:end="147:103"><expr pos:start="147:81" pos:end="147:103"><call pos:start="147:81" pos:end="147:103"><name pos:start="147:81" pos:end="147:91">FF_ARG_GUID</name><argument_list pos:start="147:92" pos:end="147:103">(<argument pos:start="147:93" pos:end="147:102"><expr pos:start="147:93" pos:end="147:102"><name pos:start="147:93" pos:end="147:102">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:32"><expr pos:start="149:13" pos:end="149:31"><call pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:21">avio_skip</name><argument_list pos:start="149:22" pos:end="149:31">(<argument pos:start="149:23" pos:end="149:24"><expr pos:start="149:23" pos:end="149:24"><name pos:start="149:23" pos:end="149:24">pb</name></expr></argument>, <argument pos:start="149:27" pos:end="149:30"><expr pos:start="149:27" pos:end="149:30"><name pos:start="149:27" pos:end="149:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="155:9" pos:end="163:9"><if pos:start="155:9" pos:end="159:9">if <condition pos:start="155:12" pos:end="155:83">(<expr pos:start="155:13" pos:end="155:82"><operator pos:start="155:13" pos:end="155:13">!</operator><macro pos:start="155:14" pos:end="155:82"><name pos:start="155:14" pos:end="155:19">memcmp</name><argument_list pos:start="155:20" pos:end="155:82">(<argument pos:start="155:21" pos:end="155:31">subtype + <literal type="number" pos:start="155:31" pos:end="155:31">4</literal></argument>, <argument pos:start="155:34" pos:end="155:77">(const uint8_t[]){FF_MEDIASUBTYPE_BASE_GUID}</argument>, <argument pos:start="155:80" pos:end="155:81"><literal type="number" pos:start="155:80" pos:end="155:81">12</literal></argument>)</argument_list></macro></expr>)</condition> <block pos:start="155:85" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:87">

            <expr_stmt pos:start="157:13" pos:end="157:87"><expr pos:start="157:13" pos:end="157:86"><name pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:14">st</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:21">codec</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:31">codec_id</name></name> <operator pos:start="157:33" pos:end="157:33">=</operator> <call pos:start="157:35" pos:end="157:86"><name pos:start="157:35" pos:end="157:49">ff_codec_get_id</name><argument_list pos:start="157:50" pos:end="157:86">(<argument pos:start="157:51" pos:end="157:67"><expr pos:start="157:51" pos:end="157:67"><name pos:start="157:51" pos:end="157:67">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="157:70" pos:end="157:85"><expr pos:start="157:70" pos:end="157:85"><call pos:start="157:70" pos:end="157:85"><name pos:start="157:70" pos:end="157:76">AV_RL32</name><argument_list pos:start="157:77" pos:end="157:85">(<argument pos:start="157:78" pos:end="157:84"><expr pos:start="157:78" pos:end="157:84"><name pos:start="157:78" pos:end="157:84">subtype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="163:9">else <block pos:start="159:16" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:80">

            <expr_stmt pos:start="161:13" pos:end="161:80"><expr pos:start="161:13" pos:end="161:79"><name pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:14">st</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:21">codec</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:31">codec_id</name></name> <operator pos:start="161:33" pos:end="161:33">=</operator> <call pos:start="161:35" pos:end="161:79"><name pos:start="161:35" pos:end="161:54">ff_codec_guid_get_id</name><argument_list pos:start="161:55" pos:end="161:79">(<argument pos:start="161:56" pos:end="161:69"><expr pos:start="161:56" pos:end="161:69"><name pos:start="161:56" pos:end="161:69">ff_video_guids</name></expr></argument>, <argument pos:start="161:72" pos:end="161:78"><expr pos:start="161:72" pos:end="161:78"><name pos:start="161:72" pos:end="161:78">subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="165:9" pos:end="167:95"><if pos:start="165:9" pos:end="167:95">if <condition pos:start="165:12" pos:end="165:52">(<expr pos:start="165:13" pos:end="165:51"><name pos:start="165:13" pos:end="165:31"><name pos:start="165:13" pos:end="165:14">st</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:21">codec</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:31">codec_id</name></name> <operator pos:start="165:33" pos:end="165:34">==</operator> <name pos:start="165:36" pos:end="165:51">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:95"><block_content pos:start="167:13" pos:end="167:95">

            <expr_stmt pos:start="167:13" pos:end="167:95"><expr pos:start="167:13" pos:end="167:94"><call pos:start="167:13" pos:end="167:94"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="167:94">(<argument pos:start="167:20" pos:end="167:20"><expr pos:start="167:20" pos:end="167:20"><name pos:start="167:20" pos:end="167:20">s</name></expr></argument>, <argument pos:start="167:23" pos:end="167:36"><expr pos:start="167:23" pos:end="167:36"><name pos:start="167:23" pos:end="167:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="167:39" pos:end="167:71"><expr pos:start="167:39" pos:end="167:71"><literal type="string" pos:start="167:39" pos:end="167:56">"unknown subtype:"</literal><name pos:start="167:57" pos:end="167:67">FF_PRI_GUID</name><literal type="string" pos:start="167:68" pos:end="167:71">"\n"</literal></expr></argument>, <argument pos:start="167:74" pos:end="167:93"><expr pos:start="167:74" pos:end="167:93"><call pos:start="167:74" pos:end="167:93"><name pos:start="167:74" pos:end="167:84">FF_ARG_GUID</name><argument_list pos:start="167:85" pos:end="167:93">(<argument pos:start="167:86" pos:end="167:92"><expr pos:start="167:86" pos:end="167:92"><name pos:start="167:86" pos:end="167:92">subtype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="169:9" pos:end="169:18">return <expr pos:start="169:16" pos:end="169:17"><name pos:start="169:16" pos:end="169:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="171:7" pos:end="191:5">else if <condition pos:start="171:15" pos:end="173:63">(<expr pos:start="171:16" pos:end="173:62"><operator pos:start="171:16" pos:end="171:16">!</operator><call pos:start="171:17" pos:end="171:58"><name pos:start="171:17" pos:end="171:26">ff_guidcmp</name><argument_list pos:start="171:27" pos:end="171:58">(<argument pos:start="171:28" pos:end="171:36"><expr pos:start="171:28" pos:end="171:36"><name pos:start="171:28" pos:end="171:36">mediatype</name></expr></argument>, <argument pos:start="171:39" pos:end="171:57"><expr pos:start="171:39" pos:end="171:57"><name pos:start="171:39" pos:end="171:57">mediatype_mpeg2_pes</name></expr></argument>)</argument_list></call> <operator pos:start="171:60" pos:end="171:61">&amp;&amp;</operator>

               <operator pos:start="173:16" pos:end="173:16">!</operator><call pos:start="173:17" pos:end="173:62"><name pos:start="173:17" pos:end="173:26">ff_guidcmp</name><argument_list pos:start="173:27" pos:end="173:62">(<argument pos:start="173:28" pos:end="173:34"><expr pos:start="173:28" pos:end="173:34"><name pos:start="173:28" pos:end="173:34">subtype</name></expr></argument>, <argument pos:start="173:37" pos:end="173:61"><expr pos:start="173:37" pos:end="173:61"><name pos:start="173:37" pos:end="173:61">mediasubtype_dvb_subtitle</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:65" pos:end="191:5">{<block_content pos:start="175:9" pos:end="189:18">

        <expr_stmt pos:start="175:9" pos:end="175:59"><expr pos:start="175:9" pos:end="175:58"><name pos:start="175:9" pos:end="175:10">st</name> <operator pos:start="175:12" pos:end="175:12">=</operator> <call pos:start="175:14" pos:end="175:58"><name pos:start="175:14" pos:end="175:23">new_stream</name><argument_list pos:start="175:24" pos:end="175:58">(<argument pos:start="175:25" pos:end="175:25"><expr pos:start="175:25" pos:end="175:25"><name pos:start="175:25" pos:end="175:25">s</name></expr></argument>, <argument pos:start="175:28" pos:end="175:29"><expr pos:start="175:28" pos:end="175:29"><name pos:start="175:28" pos:end="175:29">st</name></expr></argument>, <argument pos:start="175:32" pos:end="175:34"><expr pos:start="175:32" pos:end="175:34"><name pos:start="175:32" pos:end="175:34">sid</name></expr></argument>, <argument pos:start="175:37" pos:end="175:57"><expr pos:start="175:37" pos:end="175:57"><name pos:start="175:37" pos:end="175:57">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="179:24"><if pos:start="177:9" pos:end="179:24">if <condition pos:start="177:12" pos:end="177:16">(<expr pos:start="177:13" pos:end="177:15"><operator pos:start="177:13" pos:end="177:13">!</operator><name pos:start="177:14" pos:end="177:15">st</name></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:24"><block_content pos:start="179:13" pos:end="179:24">

            <return pos:start="179:13" pos:end="179:24">return <expr pos:start="179:20" pos:end="179:23"><name pos:start="179:20" pos:end="179:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="181:9" pos:end="183:101"><if pos:start="181:9" pos:end="183:101">if <condition pos:start="181:12" pos:end="181:51">(<expr pos:start="181:13" pos:end="181:50"><call pos:start="181:13" pos:end="181:50"><name pos:start="181:13" pos:end="181:22">ff_guidcmp</name><argument_list pos:start="181:23" pos:end="181:50">(<argument pos:start="181:24" pos:end="181:33"><expr pos:start="181:24" pos:end="181:33"><name pos:start="181:24" pos:end="181:33">formattype</name></expr></argument>, <argument pos:start="181:36" pos:end="181:49"><expr pos:start="181:36" pos:end="181:49"><name pos:start="181:36" pos:end="181:49">ff_format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:101"><block_content pos:start="183:13" pos:end="183:101">

            <expr_stmt pos:start="183:13" pos:end="183:101"><expr pos:start="183:13" pos:end="183:100"><call pos:start="183:13" pos:end="183:100"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:100">(<argument pos:start="183:20" pos:end="183:20"><expr pos:start="183:20" pos:end="183:20"><name pos:start="183:20" pos:end="183:20">s</name></expr></argument>, <argument pos:start="183:23" pos:end="183:36"><expr pos:start="183:23" pos:end="183:36"><name pos:start="183:23" pos:end="183:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="183:39" pos:end="183:74"><expr pos:start="183:39" pos:end="183:74"><literal type="string" pos:start="183:39" pos:end="183:59">"unknown formattype:"</literal><name pos:start="183:60" pos:end="183:70">FF_PRI_GUID</name><literal type="string" pos:start="183:71" pos:end="183:74">"\n"</literal></expr></argument>, <argument pos:start="183:77" pos:end="183:99"><expr pos:start="183:77" pos:end="183:99"><call pos:start="183:77" pos:end="183:99"><name pos:start="183:77" pos:end="183:87">FF_ARG_GUID</name><argument_list pos:start="183:88" pos:end="183:99">(<argument pos:start="183:89" pos:end="183:98"><expr pos:start="183:89" pos:end="183:98"><name pos:start="183:89" pos:end="183:98">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><call pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:17">avio_skip</name><argument_list pos:start="185:18" pos:end="185:27">(<argument pos:start="185:19" pos:end="185:20"><expr pos:start="185:19" pos:end="185:20"><name pos:start="185:19" pos:end="185:20">pb</name></expr></argument>, <argument pos:start="185:23" pos:end="185:26"><expr pos:start="185:23" pos:end="185:26"><name pos:start="185:23" pos:end="185:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:55"><expr pos:start="187:9" pos:end="187:54"><name pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:10">st</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:17">codec</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:27">codec_id</name></name> <operator pos:start="187:29" pos:end="187:29">=</operator> <name pos:start="187:31" pos:end="187:54">AV_CODEC_ID_DVB_SUBTITLE</name></expr>;</expr_stmt>

        <return pos:start="189:9" pos:end="189:18">return <expr pos:start="189:16" pos:end="189:17"><name pos:start="189:16" pos:end="189:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="191:7" pos:end="211:5">else if <condition pos:start="191:15" pos:end="193:109">(<expr pos:start="191:16" pos:end="193:108"><operator pos:start="191:16" pos:end="191:16">!</operator><call pos:start="191:17" pos:end="191:60"><name pos:start="191:17" pos:end="191:26">ff_guidcmp</name><argument_list pos:start="191:27" pos:end="191:60">(<argument pos:start="191:28" pos:end="191:36"><expr pos:start="191:28" pos:end="191:36"><name pos:start="191:28" pos:end="191:36">mediatype</name></expr></argument>, <argument pos:start="191:39" pos:end="191:59"><expr pos:start="191:39" pos:end="191:59"><name pos:start="191:39" pos:end="191:59">mediatype_mstvcaption</name></expr></argument>)</argument_list></call> <operator pos:start="191:62" pos:end="191:63">&amp;&amp;</operator>

               <operator pos:start="193:16" pos:end="193:16">(</operator><operator pos:start="193:17" pos:end="193:17">!</operator><call pos:start="193:18" pos:end="193:59"><name pos:start="193:18" pos:end="193:27">ff_guidcmp</name><argument_list pos:start="193:28" pos:end="193:59">(<argument pos:start="193:29" pos:end="193:35"><expr pos:start="193:29" pos:end="193:35"><name pos:start="193:29" pos:end="193:35">subtype</name></expr></argument>, <argument pos:start="193:38" pos:end="193:58"><expr pos:start="193:38" pos:end="193:58"><name pos:start="193:38" pos:end="193:58">mediasubtype_teletext</name></expr></argument>)</argument_list></call> <operator pos:start="193:61" pos:end="193:62">||</operator> <operator pos:start="193:64" pos:end="193:64">!</operator><call pos:start="193:65" pos:end="193:107"><name pos:start="193:65" pos:end="193:74">ff_guidcmp</name><argument_list pos:start="193:75" pos:end="193:107">(<argument pos:start="193:76" pos:end="193:82"><expr pos:start="193:76" pos:end="193:82"><name pos:start="193:76" pos:end="193:82">subtype</name></expr></argument>, <argument pos:start="193:85" pos:end="193:106"><expr pos:start="193:85" pos:end="193:106"><name pos:start="193:85" pos:end="193:106">mediasubtype_dtvccdata</name></expr></argument>)</argument_list></call><operator pos:start="193:108" pos:end="193:108">)</operator></expr>)</condition> <block pos:start="193:111" pos:end="211:5">{<block_content pos:start="195:9" pos:end="209:18">

        <expr_stmt pos:start="195:9" pos:end="195:59"><expr pos:start="195:9" pos:end="195:58"><name pos:start="195:9" pos:end="195:10">st</name> <operator pos:start="195:12" pos:end="195:12">=</operator> <call pos:start="195:14" pos:end="195:58"><name pos:start="195:14" pos:end="195:23">new_stream</name><argument_list pos:start="195:24" pos:end="195:58">(<argument pos:start="195:25" pos:end="195:25"><expr pos:start="195:25" pos:end="195:25"><name pos:start="195:25" pos:end="195:25">s</name></expr></argument>, <argument pos:start="195:28" pos:end="195:29"><expr pos:start="195:28" pos:end="195:29"><name pos:start="195:28" pos:end="195:29">st</name></expr></argument>, <argument pos:start="195:32" pos:end="195:34"><expr pos:start="195:32" pos:end="195:34"><name pos:start="195:32" pos:end="195:34">sid</name></expr></argument>, <argument pos:start="195:37" pos:end="195:57"><expr pos:start="195:37" pos:end="195:57"><name pos:start="195:37" pos:end="195:57">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="199:24"><if pos:start="197:9" pos:end="199:24">if <condition pos:start="197:12" pos:end="197:16">(<expr pos:start="197:13" pos:end="197:15"><operator pos:start="197:13" pos:end="197:13">!</operator><name pos:start="197:14" pos:end="197:15">st</name></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:24"><block_content pos:start="199:13" pos:end="199:24">

            <return pos:start="199:13" pos:end="199:24">return <expr pos:start="199:20" pos:end="199:23"><name pos:start="199:20" pos:end="199:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="201:9" pos:end="203:101"><if pos:start="201:9" pos:end="203:101">if <condition pos:start="201:12" pos:end="201:51">(<expr pos:start="201:13" pos:end="201:50"><call pos:start="201:13" pos:end="201:50"><name pos:start="201:13" pos:end="201:22">ff_guidcmp</name><argument_list pos:start="201:23" pos:end="201:50">(<argument pos:start="201:24" pos:end="201:33"><expr pos:start="201:24" pos:end="201:33"><name pos:start="201:24" pos:end="201:33">formattype</name></expr></argument>, <argument pos:start="201:36" pos:end="201:49"><expr pos:start="201:36" pos:end="201:49"><name pos:start="201:36" pos:end="201:49">ff_format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:101"><block_content pos:start="203:13" pos:end="203:101">

            <expr_stmt pos:start="203:13" pos:end="203:101"><expr pos:start="203:13" pos:end="203:100"><call pos:start="203:13" pos:end="203:100"><name pos:start="203:13" pos:end="203:18">av_log</name><argument_list pos:start="203:19" pos:end="203:100">(<argument pos:start="203:20" pos:end="203:20"><expr pos:start="203:20" pos:end="203:20"><name pos:start="203:20" pos:end="203:20">s</name></expr></argument>, <argument pos:start="203:23" pos:end="203:36"><expr pos:start="203:23" pos:end="203:36"><name pos:start="203:23" pos:end="203:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="203:39" pos:end="203:74"><expr pos:start="203:39" pos:end="203:74"><literal type="string" pos:start="203:39" pos:end="203:59">"unknown formattype:"</literal><name pos:start="203:60" pos:end="203:70">FF_PRI_GUID</name><literal type="string" pos:start="203:71" pos:end="203:74">"\n"</literal></expr></argument>, <argument pos:start="203:77" pos:end="203:99"><expr pos:start="203:77" pos:end="203:99"><call pos:start="203:77" pos:end="203:99"><name pos:start="203:77" pos:end="203:87">FF_ARG_GUID</name><argument_list pos:start="203:88" pos:end="203:99">(<argument pos:start="203:89" pos:end="203:98"><expr pos:start="203:89" pos:end="203:98"><name pos:start="203:89" pos:end="203:98">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:28"><expr pos:start="205:9" pos:end="205:27"><call pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:17">avio_skip</name><argument_list pos:start="205:18" pos:end="205:27">(<argument pos:start="205:19" pos:end="205:20"><expr pos:start="205:19" pos:end="205:20"><name pos:start="205:19" pos:end="205:20">pb</name></expr></argument>, <argument pos:start="205:23" pos:end="205:26"><expr pos:start="205:23" pos:end="205:26"><name pos:start="205:23" pos:end="205:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:123"><expr pos:start="207:9" pos:end="207:122"><name pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:10">st</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:17">codec</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:27">codec_id</name></name> <operator pos:start="207:29" pos:end="207:29">=</operator> <ternary pos:start="207:31" pos:end="207:122"><condition pos:start="207:31" pos:end="207:75"><expr pos:start="207:31" pos:end="207:73"><operator pos:start="207:31" pos:end="207:31">!</operator><call pos:start="207:32" pos:end="207:73"><name pos:start="207:32" pos:end="207:41">ff_guidcmp</name><argument_list pos:start="207:42" pos:end="207:73">(<argument pos:start="207:43" pos:end="207:49"><expr pos:start="207:43" pos:end="207:49"><name pos:start="207:43" pos:end="207:49">subtype</name></expr></argument>, <argument pos:start="207:52" pos:end="207:72"><expr pos:start="207:52" pos:end="207:72"><name pos:start="207:52" pos:end="207:72">mediasubtype_teletext</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="207:77" pos:end="207:100"> <expr pos:start="207:77" pos:end="207:100"><name pos:start="207:77" pos:end="207:100">AV_CODEC_ID_DVB_TELETEXT</name></expr> </then><else pos:start="207:102" pos:end="207:122">: <expr pos:start="207:104" pos:end="207:122"><name pos:start="207:104" pos:end="207:122">AV_CODEC_ID_EIA_608</name></expr></else></ternary></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:18">return <expr pos:start="209:16" pos:end="209:17"><name pos:start="209:16" pos:end="209:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="211:7" pos:end="223:5">else if <condition pos:start="211:15" pos:end="213:65">(<expr pos:start="211:16" pos:end="213:64"><operator pos:start="211:16" pos:end="211:16">!</operator><call pos:start="211:17" pos:end="211:63"><name pos:start="211:17" pos:end="211:26">ff_guidcmp</name><argument_list pos:start="211:27" pos:end="211:63">(<argument pos:start="211:28" pos:end="211:36"><expr pos:start="211:28" pos:end="211:36"><name pos:start="211:28" pos:end="211:36">mediatype</name></expr></argument>, <argument pos:start="211:39" pos:end="211:62"><expr pos:start="211:39" pos:end="211:62"><name pos:start="211:39" pos:end="211:62">mediatype_mpeg2_sections</name></expr></argument>)</argument_list></call> <operator pos:start="211:65" pos:end="211:66">&amp;&amp;</operator>

               <operator pos:start="213:16" pos:end="213:16">!</operator><call pos:start="213:17" pos:end="213:64"><name pos:start="213:17" pos:end="213:26">ff_guidcmp</name><argument_list pos:start="213:27" pos:end="213:64">(<argument pos:start="213:28" pos:end="213:34"><expr pos:start="213:28" pos:end="213:34"><name pos:start="213:28" pos:end="213:34">subtype</name></expr></argument>, <argument pos:start="213:37" pos:end="213:63"><expr pos:start="213:37" pos:end="213:63"><name pos:start="213:37" pos:end="213:63">mediasubtype_mpeg2_sections</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="213:67" pos:end="223:5">{<block_content pos:start="215:9" pos:end="221:20">

        <if_stmt pos:start="215:9" pos:end="217:101"><if pos:start="215:9" pos:end="217:101">if <condition pos:start="215:12" pos:end="215:51">(<expr pos:start="215:13" pos:end="215:50"><call pos:start="215:13" pos:end="215:50"><name pos:start="215:13" pos:end="215:22">ff_guidcmp</name><argument_list pos:start="215:23" pos:end="215:50">(<argument pos:start="215:24" pos:end="215:33"><expr pos:start="215:24" pos:end="215:33"><name pos:start="215:24" pos:end="215:33">formattype</name></expr></argument>, <argument pos:start="215:36" pos:end="215:49"><expr pos:start="215:36" pos:end="215:49"><name pos:start="215:36" pos:end="215:49">ff_format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:101"><block_content pos:start="217:13" pos:end="217:101">

            <expr_stmt pos:start="217:13" pos:end="217:101"><expr pos:start="217:13" pos:end="217:100"><call pos:start="217:13" pos:end="217:100"><name pos:start="217:13" pos:end="217:18">av_log</name><argument_list pos:start="217:19" pos:end="217:100">(<argument pos:start="217:20" pos:end="217:20"><expr pos:start="217:20" pos:end="217:20"><name pos:start="217:20" pos:end="217:20">s</name></expr></argument>, <argument pos:start="217:23" pos:end="217:36"><expr pos:start="217:23" pos:end="217:36"><name pos:start="217:23" pos:end="217:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="217:39" pos:end="217:74"><expr pos:start="217:39" pos:end="217:74"><literal type="string" pos:start="217:39" pos:end="217:59">"unknown formattype:"</literal><name pos:start="217:60" pos:end="217:70">FF_PRI_GUID</name><literal type="string" pos:start="217:71" pos:end="217:74">"\n"</literal></expr></argument>, <argument pos:start="217:77" pos:end="217:99"><expr pos:start="217:77" pos:end="217:99"><call pos:start="217:77" pos:end="217:99"><name pos:start="217:77" pos:end="217:87">FF_ARG_GUID</name><argument_list pos:start="217:88" pos:end="217:99">(<argument pos:start="217:89" pos:end="217:98"><expr pos:start="217:89" pos:end="217:98"><name pos:start="217:89" pos:end="217:98">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:28"><expr pos:start="219:9" pos:end="219:27"><call pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:17">avio_skip</name><argument_list pos:start="219:18" pos:end="219:27">(<argument pos:start="219:19" pos:end="219:20"><expr pos:start="219:19" pos:end="219:20"><name pos:start="219:19" pos:end="219:20">pb</name></expr></argument>, <argument pos:start="219:23" pos:end="219:26"><expr pos:start="219:23" pos:end="219:26"><name pos:start="219:23" pos:end="219:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="221:9" pos:end="221:20">return <expr pos:start="221:16" pos:end="221:19"><name pos:start="221:16" pos:end="221:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="231:101"><expr pos:start="227:5" pos:end="231:100"><call pos:start="227:5" pos:end="231:100"><name pos:start="227:5" pos:end="227:10">av_log</name><argument_list pos:start="227:11" pos:end="231:100">(<argument pos:start="227:12" pos:end="227:12"><expr pos:start="227:12" pos:end="227:12"><name pos:start="227:12" pos:end="227:12">s</name></expr></argument>, <argument pos:start="227:15" pos:end="227:28"><expr pos:start="227:15" pos:end="227:28"><name pos:start="227:15" pos:end="227:28">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="227:31" pos:end="229:83"><expr pos:start="227:31" pos:end="229:83"><literal type="string" pos:start="227:31" pos:end="227:62">"unknown media type, mediatype:"</literal><name pos:start="227:63" pos:end="227:73">FF_PRI_GUID</name>

                              <literal type="string" pos:start="229:31" pos:end="229:42">", subtype:"</literal><name pos:start="229:43" pos:end="229:53">FF_PRI_GUID</name><literal type="string" pos:start="229:54" pos:end="229:68">", formattype:"</literal><name pos:start="229:69" pos:end="229:79">FF_PRI_GUID</name><literal type="string" pos:start="229:80" pos:end="229:83">"\n"</literal></expr></argument>,

                              <argument pos:start="231:31" pos:end="231:52"><expr pos:start="231:31" pos:end="231:52"><call pos:start="231:31" pos:end="231:52"><name pos:start="231:31" pos:end="231:41">FF_ARG_GUID</name><argument_list pos:start="231:42" pos:end="231:52">(<argument pos:start="231:43" pos:end="231:51"><expr pos:start="231:43" pos:end="231:51"><name pos:start="231:43" pos:end="231:51">mediatype</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="231:55" pos:end="231:74"><expr pos:start="231:55" pos:end="231:74"><call pos:start="231:55" pos:end="231:74"><name pos:start="231:55" pos:end="231:65">FF_ARG_GUID</name><argument_list pos:start="231:66" pos:end="231:74">(<argument pos:start="231:67" pos:end="231:73"><expr pos:start="231:67" pos:end="231:73"><name pos:start="231:67" pos:end="231:73">subtype</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="231:77" pos:end="231:99"><expr pos:start="231:77" pos:end="231:99"><call pos:start="231:77" pos:end="231:99"><name pos:start="231:77" pos:end="231:87">FF_ARG_GUID</name><argument_list pos:start="231:88" pos:end="231:99">(<argument pos:start="231:89" pos:end="231:98"><expr pos:start="231:89" pos:end="231:98"><name pos:start="231:89" pos:end="231:98">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:24"><expr pos:start="233:5" pos:end="233:23"><call pos:start="233:5" pos:end="233:23"><name pos:start="233:5" pos:end="233:13">avio_skip</name><argument_list pos:start="233:14" pos:end="233:23">(<argument pos:start="233:15" pos:end="233:16"><expr pos:start="233:15" pos:end="233:16"><name pos:start="233:15" pos:end="233:16">pb</name></expr></argument>, <argument pos:start="233:19" pos:end="233:22"><expr pos:start="233:19" pos:end="233:22"><name pos:start="233:19" pos:end="233:22">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="235:5" pos:end="235:16">return <expr pos:start="235:12" pos:end="235:15"><name pos:start="235:12" pos:end="235:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
