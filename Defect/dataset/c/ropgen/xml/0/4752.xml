<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4752.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">print_final_stats</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:37"><name pos:start="1:31" pos:end="1:37">int64_t</name></type> <name pos:start="1:39" pos:end="1:48">total_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:5">

    <decl_stmt pos:start="5:5" pos:end="5:76"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:23">video_size</name> <init pos:start="5:25" pos:end="5:27">= <expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">0</literal></expr></init></decl>, <decl pos:start="5:30" pos:end="5:43"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:30" pos:end="5:39">audio_size</name> <init pos:start="5:41" pos:end="5:43">= <expr pos:start="5:43" pos:end="5:43"><literal type="number" pos:start="5:43" pos:end="5:43">0</literal></expr></init></decl>, <decl pos:start="5:46" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:46" pos:end="5:55">extra_size</name> <init pos:start="5:57" pos:end="5:59">= <expr pos:start="5:59" pos:end="5:59"><literal type="number" pos:start="5:59" pos:end="5:59">0</literal></expr></init></decl>, <decl pos:start="5:62" pos:end="5:75"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:62" pos:end="5:71">other_size</name> <init pos:start="5:73" pos:end="5:75">= <expr pos:start="5:75" pos:end="5:75"><literal type="number" pos:start="5:75" pos:end="5:75">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:26">subtitle_size</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:22">data_size</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:17">percent</name> <init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><operator pos:start="11:21" pos:end="11:21">-</operator><literal type="number" pos:start="11:22" pos:end="11:24">1.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="37:5">for <control pos:start="17:9" pos:end="17:43">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:38"><expr pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:37">nb_output_streams</name></expr>;</condition> <incr pos:start="17:40" pos:end="17:42"><expr pos:start="17:40" pos:end="17:42"><name pos:start="17:40" pos:end="17:40">i</name><operator pos:start="17:41" pos:end="17:42">++</operator></expr></incr>)</control> <block pos:start="17:45" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:37">

        <decl_stmt pos:start="19:9" pos:end="19:46"><decl pos:start="19:9" pos:end="19:45"><type pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:20">OutputStream</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:25">ost</name> <init pos:start="19:27" pos:end="19:45">= <expr pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:42">output_streams</name><index pos:start="19:43" pos:end="19:45">[<expr pos:start="19:44" pos:end="19:44"><name pos:start="19:44" pos:end="19:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <switch pos:start="21:9" pos:end="31:9">switch <condition pos:start="21:16" pos:end="21:43">(<expr pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:19">ost</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:23">st</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:30">codec</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:42">codec_type</name></name></expr>)</condition> <block pos:start="21:45" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:73">

            <case pos:start="23:13" pos:end="23:36">case <expr pos:start="23:18" pos:end="23:35"><name pos:start="23:18" pos:end="23:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case> <expr_stmt pos:start="23:38" pos:end="23:66"><expr pos:start="23:38" pos:end="23:65"><name pos:start="23:38" pos:end="23:47">video_size</name> <operator pos:start="23:49" pos:end="23:50">+=</operator> <name pos:start="23:52" pos:end="23:65"><name pos:start="23:52" pos:end="23:54">ost</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:65">data_size</name></name></expr>;</expr_stmt> <break pos:start="23:68" pos:end="23:73">break;</break>

            <case pos:start="25:13" pos:end="25:36">case <expr pos:start="25:18" pos:end="25:35"><name pos:start="25:18" pos:end="25:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case> <expr_stmt pos:start="25:38" pos:end="25:66"><expr pos:start="25:38" pos:end="25:65"><name pos:start="25:38" pos:end="25:47">audio_size</name> <operator pos:start="25:49" pos:end="25:50">+=</operator> <name pos:start="25:52" pos:end="25:65"><name pos:start="25:52" pos:end="25:54">ost</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:65">data_size</name></name></expr>;</expr_stmt> <break pos:start="25:68" pos:end="25:73">break;</break>

            <case pos:start="27:13" pos:end="27:39">case <expr pos:start="27:18" pos:end="27:38"><name pos:start="27:18" pos:end="27:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case> <expr_stmt pos:start="27:41" pos:end="27:72"><expr pos:start="27:41" pos:end="27:71"><name pos:start="27:41" pos:end="27:53">subtitle_size</name> <operator pos:start="27:55" pos:end="27:56">+=</operator> <name pos:start="27:58" pos:end="27:71"><name pos:start="27:58" pos:end="27:60">ost</name><operator pos:start="27:61" pos:end="27:62">-&gt;</operator><name pos:start="27:63" pos:end="27:71">data_size</name></name></expr>;</expr_stmt> <break pos:start="27:74" pos:end="27:79">break;</break>

            <default pos:start="29:13" pos:end="29:20">default:</default>                 <expr_stmt pos:start="29:38" pos:end="29:66"><expr pos:start="29:38" pos:end="29:65"><name pos:start="29:38" pos:end="29:47">other_size</name> <operator pos:start="29:49" pos:end="29:50">+=</operator> <name pos:start="29:52" pos:end="29:65"><name pos:start="29:52" pos:end="29:54">ost</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:65">data_size</name></name></expr>;</expr_stmt> <break pos:start="29:68" pos:end="29:73">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="33:9" pos:end="33:53"><expr pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:18">extra_size</name> <operator pos:start="33:20" pos:end="33:21">+=</operator> <name pos:start="33:23" pos:end="33:52"><name pos:start="33:23" pos:end="33:25">ost</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:29">st</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:36">codec</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:52">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:17">data_size</name>  <operator pos:start="35:20" pos:end="35:21">+=</operator> <name pos:start="35:23" pos:end="35:36"><name pos:start="35:23" pos:end="35:25">ost</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:36">data_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="41:5" pos:end="43:63"><if pos:start="41:5" pos:end="43:63">if <condition pos:start="41:8" pos:end="41:45">(<expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:17">data_size</name> <operator pos:start="41:19" pos:end="41:20">&amp;&amp;</operator> <name pos:start="41:22" pos:end="41:31">total_size</name> <operator pos:start="41:33" pos:end="41:34">&gt;=</operator> <name pos:start="41:36" pos:end="41:44">data_size</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:63"><block_content pos:start="43:9" pos:end="43:63">

        <expr_stmt pos:start="43:9" pos:end="43:63"><expr pos:start="43:9" pos:end="43:62"><name pos:start="43:9" pos:end="43:15">percent</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:23">100.0</literal> <operator pos:start="43:25" pos:end="43:25">*</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:37">total_size</name> <operator pos:start="43:39" pos:end="43:39">-</operator> <name pos:start="43:41" pos:end="43:49">data_size</name><operator pos:start="43:50" pos:end="43:50">)</operator> <operator pos:start="43:52" pos:end="43:52">/</operator> <name pos:start="43:54" pos:end="43:62">data_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><call pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:35">(<argument pos:start="47:12" pos:end="47:15"><expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">NULL</name></expr></argument>, <argument pos:start="47:18" pos:end="47:28"><expr pos:start="47:18" pos:end="47:28"><name pos:start="47:18" pos:end="47:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><literal type="string" pos:start="47:31" pos:end="47:34">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="59:32"><expr pos:start="49:5" pos:end="59:31"><call pos:start="49:5" pos:end="59:31"><name pos:start="49:5" pos:end="49:10">av_log</name><argument_list pos:start="49:11" pos:end="59:31">(<argument pos:start="49:12" pos:end="49:15"><expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">NULL</name></expr></argument>, <argument pos:start="49:18" pos:end="49:28"><expr pos:start="49:18" pos:end="49:28"><name pos:start="49:18" pos:end="49:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="49:31" pos:end="49:139"><expr pos:start="49:31" pos:end="49:139"><literal type="string" pos:start="49:31" pos:end="49:139">"video:%1.0fkB audio:%1.0fkB subtitle:%1.0fkB other streams:%1.0fkB global headers:%1.0fkB muxing overhead: "</literal></expr></argument>,

           <argument pos:start="51:12" pos:end="51:30"><expr pos:start="51:12" pos:end="51:30"><name pos:start="51:12" pos:end="51:21">video_size</name> <operator pos:start="51:23" pos:end="51:23">/</operator> <literal type="number" pos:start="51:25" pos:end="51:30">1024.0</literal></expr></argument>,

           <argument pos:start="53:12" pos:end="53:30"><expr pos:start="53:12" pos:end="53:30"><name pos:start="53:12" pos:end="53:21">audio_size</name> <operator pos:start="53:23" pos:end="53:23">/</operator> <literal type="number" pos:start="53:25" pos:end="53:30">1024.0</literal></expr></argument>,

           <argument pos:start="55:12" pos:end="55:33"><expr pos:start="55:12" pos:end="55:33"><name pos:start="55:12" pos:end="55:24">subtitle_size</name> <operator pos:start="55:26" pos:end="55:26">/</operator> <literal type="number" pos:start="55:28" pos:end="55:33">1024.0</literal></expr></argument>,

           <argument pos:start="57:12" pos:end="57:30"><expr pos:start="57:12" pos:end="57:30"><name pos:start="57:12" pos:end="57:21">other_size</name> <operator pos:start="57:23" pos:end="57:23">/</operator> <literal type="number" pos:start="57:25" pos:end="57:30">1024.0</literal></expr></argument>,

           <argument pos:start="59:12" pos:end="59:30"><expr pos:start="59:12" pos:end="59:30"><name pos:start="59:12" pos:end="59:21">extra_size</name> <operator pos:start="59:23" pos:end="59:23">/</operator> <literal type="number" pos:start="59:25" pos:end="59:30">1024.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:45"><if pos:start="61:5" pos:end="63:51">if <condition pos:start="61:8" pos:end="61:23">(<expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:15">percent</name> <operator pos:start="61:17" pos:end="61:18">&gt;=</operator> <literal type="number" pos:start="61:20" pos:end="61:22">0.0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:51"><block_content pos:start="63:9" pos:end="63:51">

        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><call pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:50">(<argument pos:start="63:16" pos:end="63:19"><expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr></argument>, <argument pos:start="63:22" pos:end="63:32"><expr pos:start="63:22" pos:end="63:32"><name pos:start="63:22" pos:end="63:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="63:35" pos:end="63:40"><expr pos:start="63:35" pos:end="63:40"><literal type="string" pos:start="63:35" pos:end="63:40">"%f%%"</literal></expr></argument>, <argument pos:start="63:43" pos:end="63:49"><expr pos:start="63:43" pos:end="63:49"><name pos:start="63:43" pos:end="63:49">percent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="65:5" pos:end="67:45">else<block type="pseudo" pos:start="67:9" pos:end="67:45"><block_content pos:start="67:9" pos:end="67:45">

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><call pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:44">(<argument pos:start="67:16" pos:end="67:19"><expr pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:19">NULL</name></expr></argument>, <argument pos:start="67:22" pos:end="67:32"><expr pos:start="67:22" pos:end="67:32"><name pos:start="67:22" pos:end="67:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="67:35" pos:end="67:43"><expr pos:start="67:35" pos:end="67:43"><literal type="string" pos:start="67:35" pos:end="67:43">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><call pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:10">av_log</name><argument_list pos:start="69:11" pos:end="69:35">(<argument pos:start="69:12" pos:end="69:15"><expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">NULL</name></expr></argument>, <argument pos:start="69:18" pos:end="69:28"><expr pos:start="69:18" pos:end="69:28"><name pos:start="69:18" pos:end="69:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="69:31" pos:end="69:34"><expr pos:start="69:31" pos:end="69:34"><literal type="string" pos:start="69:31" pos:end="69:34">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:40">/* print verbose per-stream stats */</comment>

    <for pos:start="75:5" pos:end="139:5">for <control pos:start="75:9" pos:end="75:40">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <name pos:start="75:21" pos:end="75:34">nb_input_files</name></expr>;</condition> <incr pos:start="75:37" pos:end="75:39"><expr pos:start="75:37" pos:end="75:39"><name pos:start="75:37" pos:end="75:37">i</name><operator pos:start="75:38" pos:end="75:39">++</operator></expr></incr>)</control> <block pos:start="75:42" pos:end="139:5">{<block_content pos:start="77:9" pos:end="137:42">

        <decl_stmt pos:start="77:9" pos:end="77:38"><decl pos:start="77:9" pos:end="77:37"><type pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:17">InputFile</name> <modifier pos:start="77:19" pos:end="77:19">*</modifier></type><name pos:start="77:20" pos:end="77:20">f</name> <init pos:start="77:22" pos:end="77:37">= <expr pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:34">input_files</name><index pos:start="77:35" pos:end="77:37">[<expr pos:start="77:36" pos:end="77:36"><name pos:start="77:36" pos:end="77:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:51"><decl pos:start="79:9" pos:end="79:34"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">uint64_t</name></type> <name pos:start="79:18" pos:end="79:30">total_packets</name> <init pos:start="79:32" pos:end="79:34">= <expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">0</literal></expr></init></decl>, <decl pos:start="79:37" pos:end="79:50"><type ref="prev" pos:start="79:9" pos:end="79:16"/><name pos:start="79:37" pos:end="79:46">total_size</name> <init pos:start="79:48" pos:end="79:50">= <expr pos:start="79:50" pos:end="79:50"><literal type="number" pos:start="79:50" pos:end="79:50">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="83:9" pos:end="85:36"><expr pos:start="83:9" pos:end="85:35"><call pos:start="83:9" pos:end="85:35"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="85:35">(<argument pos:start="83:16" pos:end="83:19"><expr pos:start="83:16" pos:end="83:19"><name pos:start="83:16" pos:end="83:19">NULL</name></expr></argument>, <argument pos:start="83:22" pos:end="83:35"><expr pos:start="83:22" pos:end="83:35"><name pos:start="83:22" pos:end="83:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="83:38" pos:end="83:61"><expr pos:start="83:38" pos:end="83:61"><literal type="string" pos:start="83:38" pos:end="83:61">"Input file #%d (%s):\n"</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:16"><expr pos:start="85:16" pos:end="85:16"><name pos:start="85:16" pos:end="85:16">i</name></expr></argument>, <argument pos:start="85:19" pos:end="85:34"><expr pos:start="85:19" pos:end="85:34"><name pos:start="85:19" pos:end="85:34"><name pos:start="85:19" pos:end="85:19">f</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:24">ctx</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:34">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="89:9" pos:end="131:9">for <control pos:start="89:13" pos:end="89:43">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">j</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:38"><expr pos:start="89:21" pos:end="89:37"><name pos:start="89:21" pos:end="89:21">j</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:37"><name pos:start="89:25" pos:end="89:25">f</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:37">nb_streams</name></name></expr>;</condition> <incr pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">j</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr>)</control> <block pos:start="89:45" pos:end="131:9">{<block_content pos:start="91:13" pos:end="129:47">

            <decl_stmt pos:start="91:13" pos:end="91:63"><decl pos:start="91:13" pos:end="91:62"><type pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:23">InputStream</name> <modifier pos:start="91:25" pos:end="91:25">*</modifier></type><name pos:start="91:26" pos:end="91:28">ist</name> <init pos:start="91:30" pos:end="91:62">= <expr pos:start="91:32" pos:end="91:62"><name pos:start="91:32" pos:end="91:62"><name pos:start="91:32" pos:end="91:44">input_streams</name><index pos:start="91:45" pos:end="91:62">[<expr pos:start="91:46" pos:end="91:61"><name pos:start="91:46" pos:end="91:57"><name pos:start="91:46" pos:end="91:46">f</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:57">ist_index</name></name> <operator pos:start="91:59" pos:end="91:59">+</operator> <name pos:start="91:61" pos:end="91:61">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:63"><decl pos:start="93:13" pos:end="93:62"><type pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:16">enum</name> <name pos:start="93:18" pos:end="93:28">AVMediaType</name></name></type> <name pos:start="93:30" pos:end="93:33">type</name> <init pos:start="93:35" pos:end="93:62">= <expr pos:start="93:37" pos:end="93:62"><name pos:start="93:37" pos:end="93:62"><name pos:start="93:37" pos:end="93:39">ist</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:43">st</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:50">codec</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:62">codec_type</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><name pos:start="97:13" pos:end="97:22">total_size</name>    <operator pos:start="97:27" pos:end="97:28">+=</operator> <name pos:start="97:30" pos:end="97:43"><name pos:start="97:30" pos:end="97:32">ist</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:43">data_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:45"><expr pos:start="99:13" pos:end="99:44"><name pos:start="99:13" pos:end="99:25">total_packets</name> <operator pos:start="99:27" pos:end="99:28">+=</operator> <name pos:start="99:30" pos:end="99:44"><name pos:start="99:30" pos:end="99:32">ist</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:44">nb_packets</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="103:13" pos:end="105:50"><expr pos:start="103:13" pos:end="105:49"><call pos:start="103:13" pos:end="105:49"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="105:49">(<argument pos:start="103:20" pos:end="103:23"><expr pos:start="103:20" pos:end="103:23"><name pos:start="103:20" pos:end="103:23">NULL</name></expr></argument>, <argument pos:start="103:26" pos:end="103:39"><expr pos:start="103:26" pos:end="103:39"><name pos:start="103:26" pos:end="103:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="103:42" pos:end="103:71"><expr pos:start="103:42" pos:end="103:71"><literal type="string" pos:start="103:42" pos:end="103:71">"  Input stream #%d:%d (%s): "</literal></expr></argument>,

                   <argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">i</name></expr></argument>, <argument pos:start="105:23" pos:end="105:23"><expr pos:start="105:23" pos:end="105:23"><name pos:start="105:23" pos:end="105:23">j</name></expr></argument>, <argument pos:start="105:26" pos:end="105:48"><expr pos:start="105:26" pos:end="105:48"><call pos:start="105:26" pos:end="105:48"><name pos:start="105:26" pos:end="105:42">media_type_string</name><argument_list pos:start="105:43" pos:end="105:48">(<argument pos:start="105:44" pos:end="105:47"><expr pos:start="105:44" pos:end="105:47"><name pos:start="105:44" pos:end="105:47">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="109:52"><expr pos:start="107:13" pos:end="109:51"><call pos:start="107:13" pos:end="109:51"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="109:51">(<argument pos:start="107:20" pos:end="107:23"><expr pos:start="107:20" pos:end="107:23"><name pos:start="107:20" pos:end="107:23">NULL</name></expr></argument>, <argument pos:start="107:26" pos:end="107:39"><expr pos:start="107:26" pos:end="107:39"><name pos:start="107:26" pos:end="107:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="107:42" pos:end="107:85"><expr pos:start="107:42" pos:end="107:85"><literal type="string" pos:start="107:42" pos:end="107:44">"%"</literal><name pos:start="107:45" pos:end="107:50">PRIu64</name><literal type="string" pos:start="107:51" pos:end="107:68">" packets read (%"</literal><name pos:start="107:69" pos:end="107:74">PRIu64</name><literal type="string" pos:start="107:75" pos:end="107:85">" bytes); "</literal></expr></argument>,

                   <argument pos:start="109:20" pos:end="109:34"><expr pos:start="109:20" pos:end="109:34"><name pos:start="109:20" pos:end="109:34"><name pos:start="109:20" pos:end="109:22">ist</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:34">nb_packets</name></name></expr></argument>, <argument pos:start="109:37" pos:end="109:50"><expr pos:start="109:37" pos:end="109:50"><name pos:start="109:37" pos:end="109:50"><name pos:start="109:37" pos:end="109:39">ist</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:50">data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="113:13" pos:end="125:13"><if pos:start="113:13" pos:end="125:13">if <condition pos:start="113:16" pos:end="113:37">(<expr pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:19">ist</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:36">decoding_needed</name></name></expr>)</condition> <block pos:start="113:39" pos:end="125:13">{<block_content pos:start="115:17" pos:end="123:51">

                <expr_stmt pos:start="115:17" pos:end="117:44"><expr pos:start="115:17" pos:end="117:43"><call pos:start="115:17" pos:end="117:43"><name pos:start="115:17" pos:end="115:22">av_log</name><argument_list pos:start="115:23" pos:end="117:43">(<argument pos:start="115:24" pos:end="115:27"><expr pos:start="115:24" pos:end="115:27"><name pos:start="115:24" pos:end="115:27">NULL</name></expr></argument>, <argument pos:start="115:30" pos:end="115:43"><expr pos:start="115:30" pos:end="115:43"><name pos:start="115:30" pos:end="115:43">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="115:46" pos:end="115:71"><expr pos:start="115:46" pos:end="115:71"><literal type="string" pos:start="115:46" pos:end="115:48">"%"</literal><name pos:start="115:49" pos:end="115:54">PRIu64</name><literal type="string" pos:start="115:55" pos:end="115:71">" frames decoded"</literal></expr></argument>,

                       <argument pos:start="117:24" pos:end="117:42"><expr pos:start="117:24" pos:end="117:42"><name pos:start="117:24" pos:end="117:42"><name pos:start="117:24" pos:end="117:26">ist</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:42">frames_decoded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="121:95"><if pos:start="119:17" pos:end="121:95">if <condition pos:start="119:20" pos:end="119:47">(<expr pos:start="119:21" pos:end="119:46"><name pos:start="119:21" pos:end="119:24">type</name> <operator pos:start="119:26" pos:end="119:27">==</operator> <name pos:start="119:29" pos:end="119:46">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="121:21" pos:end="121:95"><block_content pos:start="121:21" pos:end="121:95">

                    <expr_stmt pos:start="121:21" pos:end="121:95"><expr pos:start="121:21" pos:end="121:94"><call pos:start="121:21" pos:end="121:94"><name pos:start="121:21" pos:end="121:26">av_log</name><argument_list pos:start="121:27" pos:end="121:94">(<argument pos:start="121:28" pos:end="121:31"><expr pos:start="121:28" pos:end="121:31"><name pos:start="121:28" pos:end="121:31">NULL</name></expr></argument>, <argument pos:start="121:34" pos:end="121:47"><expr pos:start="121:34" pos:end="121:47"><name pos:start="121:34" pos:end="121:47">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="121:50" pos:end="121:71"><expr pos:start="121:50" pos:end="121:71"><literal type="string" pos:start="121:50" pos:end="121:54">" (%"</literal><name pos:start="121:55" pos:end="121:60">PRIu64</name><literal type="string" pos:start="121:61" pos:end="121:71">" samples)"</literal></expr></argument>, <argument pos:start="121:74" pos:end="121:93"><expr pos:start="121:74" pos:end="121:93"><name pos:start="121:74" pos:end="121:93"><name pos:start="121:74" pos:end="121:76">ist</name><operator pos:start="121:77" pos:end="121:78">-&gt;</operator><name pos:start="121:79" pos:end="121:93">samples_decoded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:51"><expr pos:start="123:17" pos:end="123:50"><call pos:start="123:17" pos:end="123:50"><name pos:start="123:17" pos:end="123:22">av_log</name><argument_list pos:start="123:23" pos:end="123:50">(<argument pos:start="123:24" pos:end="123:27"><expr pos:start="123:24" pos:end="123:27"><name pos:start="123:24" pos:end="123:27">NULL</name></expr></argument>, <argument pos:start="123:30" pos:end="123:43"><expr pos:start="123:30" pos:end="123:43"><name pos:start="123:30" pos:end="123:43">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="123:46" pos:end="123:49"><expr pos:start="123:46" pos:end="123:49"><literal type="string" pos:start="123:46" pos:end="123:49">"; "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="129:13" pos:end="129:47"><expr pos:start="129:13" pos:end="129:46"><call pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="129:46">(<argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">NULL</name></expr></argument>, <argument pos:start="129:26" pos:end="129:39"><expr pos:start="129:26" pos:end="129:39"><name pos:start="129:26" pos:end="129:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="129:42" pos:end="129:45"><expr pos:start="129:42" pos:end="129:45"><literal type="string" pos:start="129:42" pos:end="129:45">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="135:9" pos:end="137:42"><expr pos:start="135:9" pos:end="137:41"><call pos:start="135:9" pos:end="137:41"><name pos:start="135:9" pos:end="135:14">av_log</name><argument_list pos:start="135:15" pos:end="137:41">(<argument pos:start="135:16" pos:end="135:19"><expr pos:start="135:16" pos:end="135:19"><name pos:start="135:16" pos:end="135:19">NULL</name></expr></argument>, <argument pos:start="135:22" pos:end="135:35"><expr pos:start="135:22" pos:end="135:35"><name pos:start="135:22" pos:end="135:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="135:38" pos:end="135:93"><expr pos:start="135:38" pos:end="135:93"><literal type="string" pos:start="135:38" pos:end="135:49">"  Total: %"</literal><name pos:start="135:50" pos:end="135:55">PRIu64</name><literal type="string" pos:start="135:56" pos:end="135:68">" packets (%"</literal><name pos:start="135:69" pos:end="135:74">PRIu64</name><literal type="string" pos:start="135:75" pos:end="135:93">" bytes) demuxed\n"</literal></expr></argument>,

               <argument pos:start="137:16" pos:end="137:28"><expr pos:start="137:16" pos:end="137:28"><name pos:start="137:16" pos:end="137:28">total_packets</name></expr></argument>, <argument pos:start="137:31" pos:end="137:40"><expr pos:start="137:31" pos:end="137:40"><name pos:start="137:31" pos:end="137:40">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="143:5" pos:end="207:5">for <control pos:start="143:9" pos:end="143:41">(<init pos:start="143:10" pos:end="143:15"><expr pos:start="143:10" pos:end="143:14"><name pos:start="143:10" pos:end="143:10">i</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>;</init> <condition pos:start="143:17" pos:end="143:36"><expr pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:17">i</name> <operator pos:start="143:19" pos:end="143:19">&lt;</operator> <name pos:start="143:21" pos:end="143:35">nb_output_files</name></expr>;</condition> <incr pos:start="143:38" pos:end="143:40"><expr pos:start="143:38" pos:end="143:40"><name pos:start="143:38" pos:end="143:38">i</name><operator pos:start="143:39" pos:end="143:40">++</operator></expr></incr>)</control> <block pos:start="143:43" pos:end="207:5">{<block_content pos:start="145:9" pos:end="205:42">

        <decl_stmt pos:start="145:9" pos:end="145:41"><decl pos:start="145:9" pos:end="145:40"><type pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:18">OutputFile</name> <modifier pos:start="145:20" pos:end="145:20">*</modifier></type><name pos:start="145:21" pos:end="145:22">of</name> <init pos:start="145:24" pos:end="145:40">= <expr pos:start="145:26" pos:end="145:40"><name pos:start="145:26" pos:end="145:40"><name pos:start="145:26" pos:end="145:37">output_files</name><index pos:start="145:38" pos:end="145:40">[<expr pos:start="145:39" pos:end="145:39"><name pos:start="145:39" pos:end="145:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="147:9" pos:end="147:51"><decl pos:start="147:9" pos:end="147:34"><type pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:16">uint64_t</name></type> <name pos:start="147:18" pos:end="147:30">total_packets</name> <init pos:start="147:32" pos:end="147:34">= <expr pos:start="147:34" pos:end="147:34"><literal type="number" pos:start="147:34" pos:end="147:34">0</literal></expr></init></decl>, <decl pos:start="147:37" pos:end="147:50"><type ref="prev" pos:start="147:9" pos:end="147:16"/><name pos:start="147:37" pos:end="147:46">total_size</name> <init pos:start="147:48" pos:end="147:50">= <expr pos:start="147:50" pos:end="147:50"><literal type="number" pos:start="147:50" pos:end="147:50">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="151:9" pos:end="153:37"><expr pos:start="151:9" pos:end="153:36"><call pos:start="151:9" pos:end="153:36"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="153:36">(<argument pos:start="151:16" pos:end="151:19"><expr pos:start="151:16" pos:end="151:19"><name pos:start="151:16" pos:end="151:19">NULL</name></expr></argument>, <argument pos:start="151:22" pos:end="151:35"><expr pos:start="151:22" pos:end="151:35"><name pos:start="151:22" pos:end="151:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="151:38" pos:end="151:62"><expr pos:start="151:38" pos:end="151:62"><literal type="string" pos:start="151:38" pos:end="151:62">"Output file #%d (%s):\n"</literal></expr></argument>,

               <argument pos:start="153:16" pos:end="153:16"><expr pos:start="153:16" pos:end="153:16"><name pos:start="153:16" pos:end="153:16">i</name></expr></argument>, <argument pos:start="153:19" pos:end="153:35"><expr pos:start="153:19" pos:end="153:35"><name pos:start="153:19" pos:end="153:35"><name pos:start="153:19" pos:end="153:20">of</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:25">ctx</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:35">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="157:9" pos:end="199:9">for <control pos:start="157:13" pos:end="157:49">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">j</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:44"><expr pos:start="157:21" pos:end="157:43"><name pos:start="157:21" pos:end="157:21">j</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:43"><name pos:start="157:25" pos:end="157:26">of</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:31">ctx</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:43">nb_streams</name></name></expr>;</condition> <incr pos:start="157:46" pos:end="157:48"><expr pos:start="157:46" pos:end="157:48"><name pos:start="157:46" pos:end="157:46">j</name><operator pos:start="157:47" pos:end="157:48">++</operator></expr></incr>)</control> <block pos:start="157:51" pos:end="199:9">{<block_content pos:start="159:13" pos:end="197:47">

            <decl_stmt pos:start="159:13" pos:end="159:66"><decl pos:start="159:13" pos:end="159:65"><type pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:24">OutputStream</name> <modifier pos:start="159:26" pos:end="159:26">*</modifier></type><name pos:start="159:27" pos:end="159:29">ost</name> <init pos:start="159:31" pos:end="159:65">= <expr pos:start="159:33" pos:end="159:65"><name pos:start="159:33" pos:end="159:65"><name pos:start="159:33" pos:end="159:46">output_streams</name><index pos:start="159:47" pos:end="159:65">[<expr pos:start="159:48" pos:end="159:64"><name pos:start="159:48" pos:end="159:60"><name pos:start="159:48" pos:end="159:49">of</name><operator pos:start="159:50" pos:end="159:51">-&gt;</operator><name pos:start="159:52" pos:end="159:60">ost_index</name></name> <operator pos:start="159:62" pos:end="159:62">+</operator> <name pos:start="159:64" pos:end="159:64">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="161:13" pos:end="161:63"><decl pos:start="161:13" pos:end="161:62"><type pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:16">enum</name> <name pos:start="161:18" pos:end="161:28">AVMediaType</name></name></type> <name pos:start="161:30" pos:end="161:33">type</name> <init pos:start="161:35" pos:end="161:62">= <expr pos:start="161:37" pos:end="161:62"><name pos:start="161:37" pos:end="161:62"><name pos:start="161:37" pos:end="161:39">ost</name><operator pos:start="161:40" pos:end="161:41">-&gt;</operator><name pos:start="161:42" pos:end="161:43">st</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:50">codec</name><operator pos:start="161:51" pos:end="161:52">-&gt;</operator><name pos:start="161:53" pos:end="161:62">codec_type</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="165:13" pos:end="165:44"><expr pos:start="165:13" pos:end="165:43"><name pos:start="165:13" pos:end="165:22">total_size</name>    <operator pos:start="165:27" pos:end="165:28">+=</operator> <name pos:start="165:30" pos:end="165:43"><name pos:start="165:30" pos:end="165:32">ost</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator><name pos:start="165:35" pos:end="165:43">data_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:50"><expr pos:start="167:13" pos:end="167:49"><name pos:start="167:13" pos:end="167:25">total_packets</name> <operator pos:start="167:27" pos:end="167:28">+=</operator> <name pos:start="167:30" pos:end="167:49"><name pos:start="167:30" pos:end="167:32">ost</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:49">packets_written</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="171:13" pos:end="173:50"><expr pos:start="171:13" pos:end="173:49"><call pos:start="171:13" pos:end="173:49"><name pos:start="171:13" pos:end="171:18">av_log</name><argument_list pos:start="171:19" pos:end="173:49">(<argument pos:start="171:20" pos:end="171:23"><expr pos:start="171:20" pos:end="171:23"><name pos:start="171:20" pos:end="171:23">NULL</name></expr></argument>, <argument pos:start="171:26" pos:end="171:39"><expr pos:start="171:26" pos:end="171:39"><name pos:start="171:26" pos:end="171:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="171:42" pos:end="171:72"><expr pos:start="171:42" pos:end="171:72"><literal type="string" pos:start="171:42" pos:end="171:72">"  Output stream #%d:%d (%s): "</literal></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><name pos:start="173:20" pos:end="173:20">i</name></expr></argument>, <argument pos:start="173:23" pos:end="173:23"><expr pos:start="173:23" pos:end="173:23"><name pos:start="173:23" pos:end="173:23">j</name></expr></argument>, <argument pos:start="173:26" pos:end="173:48"><expr pos:start="173:26" pos:end="173:48"><call pos:start="173:26" pos:end="173:48"><name pos:start="173:26" pos:end="173:42">media_type_string</name><argument_list pos:start="173:43" pos:end="173:48">(<argument pos:start="173:44" pos:end="173:47"><expr pos:start="173:44" pos:end="173:47"><name pos:start="173:44" pos:end="173:47">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="187:13"><if pos:start="175:13" pos:end="187:13">if <condition pos:start="175:16" pos:end="175:37">(<expr pos:start="175:17" pos:end="175:36"><name pos:start="175:17" pos:end="175:36"><name pos:start="175:17" pos:end="175:19">ost</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:36">encoding_needed</name></name></expr>)</condition> <block pos:start="175:39" pos:end="187:13">{<block_content pos:start="177:17" pos:end="185:51">

                <expr_stmt pos:start="177:17" pos:end="179:44"><expr pos:start="177:17" pos:end="179:43"><call pos:start="177:17" pos:end="179:43"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="179:43">(<argument pos:start="177:24" pos:end="177:27"><expr pos:start="177:24" pos:end="177:27"><name pos:start="177:24" pos:end="177:27">NULL</name></expr></argument>, <argument pos:start="177:30" pos:end="177:43"><expr pos:start="177:30" pos:end="177:43"><name pos:start="177:30" pos:end="177:43">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="177:46" pos:end="177:71"><expr pos:start="177:46" pos:end="177:71"><literal type="string" pos:start="177:46" pos:end="177:48">"%"</literal><name pos:start="177:49" pos:end="177:54">PRIu64</name><literal type="string" pos:start="177:55" pos:end="177:71">" frames encoded"</literal></expr></argument>,

                       <argument pos:start="179:24" pos:end="179:42"><expr pos:start="179:24" pos:end="179:42"><name pos:start="179:24" pos:end="179:42"><name pos:start="179:24" pos:end="179:26">ost</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:42">frames_encoded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="181:17" pos:end="183:95"><if pos:start="181:17" pos:end="183:95">if <condition pos:start="181:20" pos:end="181:47">(<expr pos:start="181:21" pos:end="181:46"><name pos:start="181:21" pos:end="181:24">type</name> <operator pos:start="181:26" pos:end="181:27">==</operator> <name pos:start="181:29" pos:end="181:46">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:95"><block_content pos:start="183:21" pos:end="183:95">

                    <expr_stmt pos:start="183:21" pos:end="183:95"><expr pos:start="183:21" pos:end="183:94"><call pos:start="183:21" pos:end="183:94"><name pos:start="183:21" pos:end="183:26">av_log</name><argument_list pos:start="183:27" pos:end="183:94">(<argument pos:start="183:28" pos:end="183:31"><expr pos:start="183:28" pos:end="183:31"><name pos:start="183:28" pos:end="183:31">NULL</name></expr></argument>, <argument pos:start="183:34" pos:end="183:47"><expr pos:start="183:34" pos:end="183:47"><name pos:start="183:34" pos:end="183:47">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="183:50" pos:end="183:71"><expr pos:start="183:50" pos:end="183:71"><literal type="string" pos:start="183:50" pos:end="183:54">" (%"</literal><name pos:start="183:55" pos:end="183:60">PRIu64</name><literal type="string" pos:start="183:61" pos:end="183:71">" samples)"</literal></expr></argument>, <argument pos:start="183:74" pos:end="183:93"><expr pos:start="183:74" pos:end="183:93"><name pos:start="183:74" pos:end="183:93"><name pos:start="183:74" pos:end="183:76">ost</name><operator pos:start="183:77" pos:end="183:78">-&gt;</operator><name pos:start="183:79" pos:end="183:93">samples_encoded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:51"><expr pos:start="185:17" pos:end="185:50"><call pos:start="185:17" pos:end="185:50"><name pos:start="185:17" pos:end="185:22">av_log</name><argument_list pos:start="185:23" pos:end="185:50">(<argument pos:start="185:24" pos:end="185:27"><expr pos:start="185:24" pos:end="185:27"><name pos:start="185:24" pos:end="185:27">NULL</name></expr></argument>, <argument pos:start="185:30" pos:end="185:43"><expr pos:start="185:30" pos:end="185:43"><name pos:start="185:30" pos:end="185:43">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="185:46" pos:end="185:49"><expr pos:start="185:46" pos:end="185:49"><literal type="string" pos:start="185:46" pos:end="185:49">"; "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="191:13" pos:end="193:57"><expr pos:start="191:13" pos:end="193:56"><call pos:start="191:13" pos:end="193:56"><name pos:start="191:13" pos:end="191:18">av_log</name><argument_list pos:start="191:19" pos:end="193:56">(<argument pos:start="191:20" pos:end="191:23"><expr pos:start="191:20" pos:end="191:23"><name pos:start="191:20" pos:end="191:23">NULL</name></expr></argument>, <argument pos:start="191:26" pos:end="191:39"><expr pos:start="191:26" pos:end="191:39"><name pos:start="191:26" pos:end="191:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="191:42" pos:end="191:86"><expr pos:start="191:42" pos:end="191:86"><literal type="string" pos:start="191:42" pos:end="191:44">"%"</literal><name pos:start="191:45" pos:end="191:50">PRIu64</name><literal type="string" pos:start="191:51" pos:end="191:69">" packets muxed (%"</literal><name pos:start="191:70" pos:end="191:75">PRIu64</name><literal type="string" pos:start="191:76" pos:end="191:86">" bytes); "</literal></expr></argument>,

                   <argument pos:start="193:20" pos:end="193:39"><expr pos:start="193:20" pos:end="193:39"><name pos:start="193:20" pos:end="193:39"><name pos:start="193:20" pos:end="193:22">ost</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:39">packets_written</name></name></expr></argument>, <argument pos:start="193:42" pos:end="193:55"><expr pos:start="193:42" pos:end="193:55"><name pos:start="193:42" pos:end="193:55"><name pos:start="193:42" pos:end="193:44">ost</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:55">data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:47"><expr pos:start="197:13" pos:end="197:46"><call pos:start="197:13" pos:end="197:46"><name pos:start="197:13" pos:end="197:18">av_log</name><argument_list pos:start="197:19" pos:end="197:46">(<argument pos:start="197:20" pos:end="197:23"><expr pos:start="197:20" pos:end="197:23"><name pos:start="197:20" pos:end="197:23">NULL</name></expr></argument>, <argument pos:start="197:26" pos:end="197:39"><expr pos:start="197:26" pos:end="197:39"><name pos:start="197:26" pos:end="197:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="197:42" pos:end="197:45"><expr pos:start="197:42" pos:end="197:45"><literal type="string" pos:start="197:42" pos:end="197:45">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="203:9" pos:end="205:42"><expr pos:start="203:9" pos:end="205:41"><call pos:start="203:9" pos:end="205:41"><name pos:start="203:9" pos:end="203:14">av_log</name><argument_list pos:start="203:15" pos:end="205:41">(<argument pos:start="203:16" pos:end="203:19"><expr pos:start="203:16" pos:end="203:19"><name pos:start="203:16" pos:end="203:19">NULL</name></expr></argument>, <argument pos:start="203:22" pos:end="203:35"><expr pos:start="203:22" pos:end="203:35"><name pos:start="203:22" pos:end="203:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="203:38" pos:end="203:91"><expr pos:start="203:38" pos:end="203:91"><literal type="string" pos:start="203:38" pos:end="203:49">"  Total: %"</literal><name pos:start="203:50" pos:end="203:55">PRIu64</name><literal type="string" pos:start="203:56" pos:end="203:68">" packets (%"</literal><name pos:start="203:69" pos:end="203:74">PRIu64</name><literal type="string" pos:start="203:75" pos:end="203:91">" bytes) muxed\n"</literal></expr></argument>,

               <argument pos:start="205:16" pos:end="205:28"><expr pos:start="205:16" pos:end="205:28"><name pos:start="205:16" pos:end="205:28">total_packets</name></expr></argument>, <argument pos:start="205:31" pos:end="205:40"><expr pos:start="205:31" pos:end="205:40"><name pos:start="205:31" pos:end="205:40">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="209:5" pos:end="213:5"><if pos:start="209:5" pos:end="213:5">if<condition pos:start="209:7" pos:end="209:77">(<expr pos:start="209:8" pos:end="209:76"><name pos:start="209:8" pos:end="209:17">video_size</name> <operator pos:start="209:19" pos:end="209:19">+</operator> <name pos:start="209:21" pos:end="209:29">data_size</name> <operator pos:start="209:31" pos:end="209:31">+</operator> <name pos:start="209:33" pos:end="209:42">audio_size</name> <operator pos:start="209:44" pos:end="209:44">+</operator> <name pos:start="209:46" pos:end="209:58">subtitle_size</name> <operator pos:start="209:60" pos:end="209:60">+</operator> <name pos:start="209:62" pos:end="209:71">extra_size</name> <operator pos:start="209:73" pos:end="209:74">==</operator> <literal type="number" pos:start="209:76" pos:end="209:76">0</literal></expr>)</condition><block pos:start="209:78" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:130">

        <expr_stmt pos:start="211:9" pos:end="211:130"><expr pos:start="211:9" pos:end="211:129"><call pos:start="211:9" pos:end="211:129"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="211:129">(<argument pos:start="211:16" pos:end="211:19"><expr pos:start="211:16" pos:end="211:19"><name pos:start="211:16" pos:end="211:19">NULL</name></expr></argument>, <argument pos:start="211:22" pos:end="211:35"><expr pos:start="211:22" pos:end="211:35"><name pos:start="211:22" pos:end="211:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="211:38" pos:end="211:128"><expr pos:start="211:38" pos:end="211:128"><literal type="string" pos:start="211:38" pos:end="211:128">"Output file is empty, nothing was encoded (check -ss / -t / -frames parameters if used)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
