<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24302.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">dash_flush</name><parameter_list pos:start="1:22" pos:end="1:64">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:51"><decl pos:start="1:43" pos:end="1:51"><type pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:51">final</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:63">stream</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DASHContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:60"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:21">proto</name> <init pos:start="11:23" pos:end="11:60">= <expr pos:start="11:25" pos:end="11:60"><call pos:start="11:25" pos:end="11:60"><name pos:start="11:25" pos:end="11:47">avio_find_protocol_name</name><argument_list pos:start="11:48" pos:end="11:60">(<argument pos:start="11:49" pos:end="11:59"><expr pos:start="11:49" pos:end="11:59"><name pos:start="11:49" pos:end="11:59"><name pos:start="11:49" pos:end="11:49">s</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:59">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:52"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">use_rename</name> <init pos:start="13:20" pos:end="13:52">= <expr pos:start="13:22" pos:end="13:52"><name pos:start="13:22" pos:end="13:26">proto</name> <operator pos:start="13:28" pos:end="13:29">&amp;&amp;</operator> <operator pos:start="13:31" pos:end="13:31">!</operator><call pos:start="13:32" pos:end="13:52"><name pos:start="13:32" pos:end="13:37">strcmp</name><argument_list pos:start="13:38" pos:end="13:52">(<argument pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">proto</name></expr></argument>, <argument pos:start="13:46" pos:end="13:51"><expr pos:start="13:46" pos:end="13:51"><literal type="string" pos:start="13:46" pos:end="13:51">"file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:31">cur_flush_segment_index</name> <init pos:start="17:33" pos:end="17:35">= <expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="19:5" pos:end="21:67"><if pos:start="19:5" pos:end="21:67">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:14">stream</name> <operator pos:start="19:16" pos:end="19:17">&gt;=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:67"><block_content pos:start="21:9" pos:end="21:67">

        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:31">cur_flush_segment_index</name> <operator pos:start="21:33" pos:end="21:33">=</operator> <name pos:start="21:35" pos:end="21:52"><name pos:start="21:35" pos:end="21:35">c</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:44">streams</name><index pos:start="21:45" pos:end="21:52">[<expr pos:start="21:46" pos:end="21:51"><name pos:start="21:46" pos:end="21:51">stream</name></expr>]</index></name><operator pos:start="21:53" pos:end="21:53">.</operator><name pos:start="21:54" pos:end="21:66">segment_index</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="25:5" pos:end="165:5">for <control pos:start="25:9" pos:end="25:39">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:34"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:33">nb_streams</name></name></expr>;</condition> <incr pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:36">i</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control> <block pos:start="25:41" pos:end="165:5">{<block_content pos:start="27:9" pos:end="163:32">

        <decl_stmt pos:start="27:9" pos:end="27:42"><decl pos:start="27:9" pos:end="27:41"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:20">OutputStream</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:24">os</name> <init pos:start="27:26" pos:end="27:41">= <expr pos:start="27:28" pos:end="27:41"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:41"><name pos:start="27:29" pos:end="27:29">c</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:38">streams</name><index pos:start="27:39" pos:end="27:41">[<expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:37"><decl pos:start="29:9" pos:end="29:36"><type pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:16">AVStream</name> <modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:20">st</name> <init pos:start="29:22" pos:end="29:36">= <expr pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:33">streams</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:67"><decl pos:start="31:9" pos:end="31:32"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">char</name></type> <name pos:start="31:14" pos:end="31:27"><name pos:start="31:14" pos:end="31:21">filename</name><index pos:start="31:22" pos:end="31:27">[<expr pos:start="31:23" pos:end="31:26"><literal type="number" pos:start="31:23" pos:end="31:26">1024</literal></expr>]</index></name> <init pos:start="31:29" pos:end="31:32">= <expr pos:start="31:31" pos:end="31:32"><literal type="string" pos:start="31:31" pos:end="31:32">""</literal></expr></init></decl>, <decl pos:start="31:35" pos:end="31:49"><type ref="prev" pos:start="31:9" pos:end="31:12"/><name pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:43">full_path</name><index pos:start="31:44" pos:end="31:49">[<expr pos:start="31:45" pos:end="31:48"><literal type="number" pos:start="31:45" pos:end="31:48">1024</literal></expr>]</index></name></decl>, <decl pos:start="31:52" pos:end="31:66"><type ref="prev" pos:start="31:9" pos:end="31:12"/><name pos:start="31:52" pos:end="31:66"><name pos:start="31:52" pos:end="31:60">temp_path</name><index pos:start="31:61" pos:end="31:66">[<expr pos:start="31:62" pos:end="31:65"><literal type="number" pos:start="31:62" pos:end="31:65">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:43"><decl pos:start="33:9" pos:end="33:24"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:24">range_length</name></decl>, <decl pos:start="33:27" pos:end="33:42"><type ref="prev" pos:start="33:9" pos:end="33:11"/><name pos:start="33:27" pos:end="33:38">index_length</name> <init pos:start="33:40" pos:end="33:42">= <expr pos:start="33:42" pos:end="33:42"><literal type="number" pos:start="33:42" pos:end="33:42">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if <condition pos:start="37:12" pos:end="37:33">(<expr pos:start="37:13" pos:end="37:32"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:32"><name pos:start="37:14" pos:end="37:15">os</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:32">packets_written</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <continue pos:start="39:13" pos:end="39:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="line" pos:start="43:9" pos:end="43:65">// Flush the single stream that got a keyframe right now.</comment>

        <comment type="line" pos:start="45:9" pos:end="45:73">// Flush all audio streams as well, in sync with video keyframes,</comment>

        <comment type="line" pos:start="47:9" pos:end="47:43">// but not the other video streams.</comment>

        <if_stmt pos:start="49:9" pos:end="63:9"><if pos:start="49:9" pos:end="63:9">if <condition pos:start="49:12" pos:end="49:39">(<expr pos:start="49:13" pos:end="49:38"><name pos:start="49:13" pos:end="49:18">stream</name> <operator pos:start="49:20" pos:end="49:21">&gt;=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">0</literal> <operator pos:start="49:25" pos:end="49:26">&amp;&amp;</operator> <name pos:start="49:28" pos:end="49:28">i</name> <operator pos:start="49:30" pos:end="49:31">!=</operator> <name pos:start="49:33" pos:end="49:38">stream</name></expr>)</condition> <block pos:start="49:41" pos:end="63:9">{<block_content pos:start="51:13" pos:end="61:25">

            <if_stmt pos:start="51:13" pos:end="53:25"><if pos:start="51:13" pos:end="53:25">if <condition pos:start="51:16" pos:end="51:74">(<expr pos:start="51:17" pos:end="51:73"><name pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:26">streams</name><index pos:start="51:27" pos:end="51:29">[<expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">i</name></expr>]</index></name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:51"><name pos:start="51:32" pos:end="51:39">codecpar</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:51">codec_type</name></name> <operator pos:start="51:53" pos:end="51:54">!=</operator> <name pos:start="51:56" pos:end="51:73">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:25"><block_content pos:start="53:17" pos:end="53:25">

                <continue pos:start="53:17" pos:end="53:25">continue;</continue></block_content></block></if></if_stmt>

            <comment type="line" pos:start="55:13" pos:end="55:74">// Make sure we don't flush audio streams multiple times, when</comment>

            <comment type="line" pos:start="57:13" pos:end="57:59">// all video streams are flushed one at a time.</comment>

            <if_stmt pos:start="59:13" pos:end="61:25"><if pos:start="59:13" pos:end="61:25">if <condition pos:start="59:16" pos:end="59:76">(<expr pos:start="59:17" pos:end="59:75"><name pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:17">c</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:28">has_video</name></name> <operator pos:start="59:30" pos:end="59:31">&amp;&amp;</operator> <name pos:start="59:33" pos:end="59:49"><name pos:start="59:33" pos:end="59:34">os</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:49">segment_index</name></name> <operator pos:start="59:51" pos:end="59:51">&gt;</operator> <name pos:start="59:53" pos:end="59:75">cur_flush_segment_index</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:25"><block_content pos:start="61:17" pos:end="61:25">

                <continue pos:start="61:17" pos:end="61:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:35">(<expr pos:start="67:13" pos:end="67:34"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:34"><name pos:start="67:14" pos:end="67:15">os</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:34">init_range_length</name></name></expr>)</condition> <block pos:start="67:37" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:38">

            <expr_stmt pos:start="69:13" pos:end="69:38"><expr pos:start="69:13" pos:end="69:37"><call pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:30">flush_init_segment</name><argument_list pos:start="69:31" pos:end="69:37">(<argument pos:start="69:32" pos:end="69:32"><expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">s</name></expr></argument>, <argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="75:9" pos:end="97:9"><if pos:start="75:9" pos:end="93:9">if <condition pos:start="75:12" pos:end="75:28">(<expr pos:start="75:13" pos:end="75:27"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:27"><name pos:start="75:14" pos:end="75:14">c</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:27">single_file</name></name></expr>)</condition> <block pos:start="75:30" pos:end="93:9">{<block_content pos:start="77:13" pos:end="91:40">

            <expr_stmt pos:start="77:13" pos:end="77:135"><expr pos:start="77:13" pos:end="77:134"><call pos:start="77:13" pos:end="77:134"><name pos:start="77:13" pos:end="77:36">ff_dash_fill_tmpl_params</name><argument_list pos:start="77:37" pos:end="77:134">(<argument pos:start="77:38" pos:end="77:45"><expr pos:start="77:38" pos:end="77:45"><name pos:start="77:38" pos:end="77:45">filename</name></expr></argument>, <argument pos:start="77:48" pos:end="77:63"><expr pos:start="77:48" pos:end="77:63"><sizeof pos:start="77:48" pos:end="77:63">sizeof<argument_list pos:start="77:54" pos:end="77:63">(<argument pos:start="77:55" pos:end="77:62"><expr pos:start="77:55" pos:end="77:62"><name pos:start="77:55" pos:end="77:62">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:66" pos:end="77:82"><expr pos:start="77:66" pos:end="77:82"><name pos:start="77:66" pos:end="77:82"><name pos:start="77:66" pos:end="77:66">c</name><operator pos:start="77:67" pos:end="77:68">-&gt;</operator><name pos:start="77:69" pos:end="77:82">media_seg_name</name></name></expr></argument>, <argument pos:start="77:85" pos:end="77:85"><expr pos:start="77:85" pos:end="77:85"><name pos:start="77:85" pos:end="77:85">i</name></expr></argument>, <argument pos:start="77:88" pos:end="77:104"><expr pos:start="77:88" pos:end="77:104"><name pos:start="77:88" pos:end="77:104"><name pos:start="77:88" pos:end="77:89">os</name><operator pos:start="77:90" pos:end="77:91">-&gt;</operator><name pos:start="77:92" pos:end="77:104">segment_index</name></name></expr></argument>, <argument pos:start="77:107" pos:end="77:118"><expr pos:start="77:107" pos:end="77:118"><name pos:start="77:107" pos:end="77:118"><name pos:start="77:107" pos:end="77:108">os</name><operator pos:start="77:109" pos:end="77:110">-&gt;</operator><name pos:start="77:111" pos:end="77:118">bit_rate</name></name></expr></argument>, <argument pos:start="77:121" pos:end="77:133"><expr pos:start="77:121" pos:end="77:133"><name pos:start="77:121" pos:end="77:133"><name pos:start="77:121" pos:end="77:122">os</name><operator pos:start="77:123" pos:end="77:124">-&gt;</operator><name pos:start="77:125" pos:end="77:133">start_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:81"><expr pos:start="79:13" pos:end="79:80"><call pos:start="79:13" pos:end="79:80"><name pos:start="79:13" pos:end="79:20">snprintf</name><argument_list pos:start="79:21" pos:end="79:80">(<argument pos:start="79:22" pos:end="79:30"><expr pos:start="79:22" pos:end="79:30"><name pos:start="79:22" pos:end="79:30">full_path</name></expr></argument>, <argument pos:start="79:33" pos:end="79:49"><expr pos:start="79:33" pos:end="79:49"><sizeof pos:start="79:33" pos:end="79:49">sizeof<argument_list pos:start="79:39" pos:end="79:49">(<argument pos:start="79:40" pos:end="79:48"><expr pos:start="79:40" pos:end="79:48"><name pos:start="79:40" pos:end="79:48">full_path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:52" pos:end="79:57"><expr pos:start="79:52" pos:end="79:57"><literal type="string" pos:start="79:52" pos:end="79:57">"%s%s"</literal></expr></argument>, <argument pos:start="79:60" pos:end="79:69"><expr pos:start="79:60" pos:end="79:69"><name pos:start="79:60" pos:end="79:69"><name pos:start="79:60" pos:end="79:60">c</name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:69">dirname</name></name></expr></argument>, <argument pos:start="79:72" pos:end="79:79"><expr pos:start="79:72" pos:end="79:79"><name pos:start="79:72" pos:end="79:79">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:92"><expr pos:start="81:13" pos:end="81:91"><call pos:start="81:13" pos:end="81:91"><name pos:start="81:13" pos:end="81:20">snprintf</name><argument_list pos:start="81:21" pos:end="81:91">(<argument pos:start="81:22" pos:end="81:30"><expr pos:start="81:22" pos:end="81:30"><name pos:start="81:22" pos:end="81:30">temp_path</name></expr></argument>, <argument pos:start="81:33" pos:end="81:49"><expr pos:start="81:33" pos:end="81:49"><sizeof pos:start="81:33" pos:end="81:49">sizeof<argument_list pos:start="81:39" pos:end="81:49">(<argument pos:start="81:40" pos:end="81:48"><expr pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:48">temp_path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:52" pos:end="81:79"><expr pos:start="81:52" pos:end="81:79"><ternary pos:start="81:52" pos:end="81:79"><condition pos:start="81:52" pos:end="81:63"><expr pos:start="81:52" pos:end="81:61"><name pos:start="81:52" pos:end="81:61">use_rename</name></expr> ?</condition><then pos:start="81:65" pos:end="81:72"> <expr pos:start="81:65" pos:end="81:72"><literal type="string" pos:start="81:65" pos:end="81:72">"%s.tmp"</literal></expr> </then><else pos:start="81:74" pos:end="81:79">: <expr pos:start="81:76" pos:end="81:79"><literal type="string" pos:start="81:76" pos:end="81:79">"%s"</literal></expr></else></ternary></expr></argument>, <argument pos:start="81:82" pos:end="81:90"><expr pos:start="81:82" pos:end="81:90"><name pos:start="81:82" pos:end="81:90">full_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:76"><expr pos:start="83:13" pos:end="83:75"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:75"><name pos:start="83:19" pos:end="83:28"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:28">io_open</name></name><argument_list pos:start="83:29" pos:end="83:75">(<argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">s</name></expr></argument>, <argument pos:start="83:33" pos:end="83:40"><expr pos:start="83:33" pos:end="83:40"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:40"><name pos:start="83:34" pos:end="83:35">os</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:40">out</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:51"><expr pos:start="83:43" pos:end="83:51"><name pos:start="83:43" pos:end="83:51">temp_path</name></expr></argument>, <argument pos:start="83:54" pos:end="83:68"><expr pos:start="83:54" pos:end="83:68"><name pos:start="83:54" pos:end="83:68">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="83:71" pos:end="83:74"><expr pos:start="83:71" pos:end="83:74"><name pos:start="83:71" pos:end="83:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="87:22"><if pos:start="85:13" pos:end="87:22">if <condition pos:start="85:16" pos:end="85:24">(<expr pos:start="85:17" pos:end="85:23"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">&lt;</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:22"><block_content pos:start="87:17" pos:end="87:22">

                <break pos:start="87:17" pos:end="87:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="89:13" pos:end="91:40"><if pos:start="89:13" pos:end="91:40">if <condition pos:start="89:16" pos:end="89:48">(<expr pos:start="89:17" pos:end="89:47"><operator pos:start="89:17" pos:end="89:17">!</operator><call pos:start="89:18" pos:end="89:47"><name pos:start="89:18" pos:end="89:23">strcmp</name><argument_list pos:start="89:24" pos:end="89:47">(<argument pos:start="89:25" pos:end="89:39"><expr pos:start="89:25" pos:end="89:39"><name pos:start="89:25" pos:end="89:39"><name pos:start="89:25" pos:end="89:26">os</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:39">format_name</name></name></expr></argument>, <argument pos:start="89:42" pos:end="89:46"><expr pos:start="89:42" pos:end="89:46"><literal type="string" pos:start="89:42" pos:end="89:46">"mp4"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:40"><block_content pos:start="91:17" pos:end="91:40">

                <expr_stmt pos:start="91:17" pos:end="91:40"><expr pos:start="91:17" pos:end="91:39"><call pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:26">write_styp</name><argument_list pos:start="91:27" pos:end="91:39">(<argument pos:start="91:28" pos:end="91:38"><expr pos:start="91:28" pos:end="91:38"><name pos:start="91:28" pos:end="91:38"><name pos:start="91:28" pos:end="91:29">os</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:34">ctx</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="97:9">else <block pos:start="93:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:85">

            <expr_stmt pos:start="95:13" pos:end="95:85"><expr pos:start="95:13" pos:end="95:84"><call pos:start="95:13" pos:end="95:84"><name pos:start="95:13" pos:end="95:20">snprintf</name><argument_list pos:start="95:21" pos:end="95:84">(<argument pos:start="95:22" pos:end="95:30"><expr pos:start="95:22" pos:end="95:30"><name pos:start="95:22" pos:end="95:30">full_path</name></expr></argument>, <argument pos:start="95:33" pos:end="95:49"><expr pos:start="95:33" pos:end="95:49"><sizeof pos:start="95:33" pos:end="95:49">sizeof<argument_list pos:start="95:39" pos:end="95:49">(<argument pos:start="95:40" pos:end="95:48"><expr pos:start="95:40" pos:end="95:48"><name pos:start="95:40" pos:end="95:48">full_path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="95:52" pos:end="95:57"><expr pos:start="95:52" pos:end="95:57"><literal type="string" pos:start="95:52" pos:end="95:57">"%s%s"</literal></expr></argument>, <argument pos:start="95:60" pos:end="95:69"><expr pos:start="95:60" pos:end="95:69"><name pos:start="95:60" pos:end="95:69"><name pos:start="95:60" pos:end="95:60">c</name><operator pos:start="95:61" pos:end="95:62">-&gt;</operator><name pos:start="95:63" pos:end="95:69">dirname</name></name></expr></argument>, <argument pos:start="95:72" pos:end="95:83"><expr pos:start="95:72" pos:end="95:83"><name pos:start="95:72" pos:end="95:83"><name pos:start="95:72" pos:end="95:73">os</name><operator pos:start="95:74" pos:end="95:75">-&gt;</operator><name pos:start="95:76" pos:end="95:83">initfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:46"><expr pos:start="101:9" pos:end="101:45"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:45"><name pos:start="101:15" pos:end="101:26">flush_dynbuf</name><argument_list pos:start="101:27" pos:end="101:45">(<argument pos:start="101:28" pos:end="101:29"><expr pos:start="101:28" pos:end="101:29"><name pos:start="101:28" pos:end="101:29">os</name></expr></argument>, <argument pos:start="101:32" pos:end="101:44"><expr pos:start="101:32" pos:end="101:44"><operator pos:start="101:32" pos:end="101:32">&amp;</operator><name pos:start="101:33" pos:end="101:44">range_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:18"><if pos:start="103:9" pos:end="105:18">if <condition pos:start="103:12" pos:end="103:20">(<expr pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">&lt;</operator> <literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:18"><block_content pos:start="105:13" pos:end="105:18">

            <break pos:start="105:13" pos:end="105:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:32"><expr pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:10">os</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:27">packets_written</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <literal type="number" pos:start="107:31" pos:end="107:31">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="111:9" pos:end="131:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:27">(<expr pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:13">c</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:26">single_file</name></name></expr>)</condition> <block pos:start="111:29" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:67">

            <expr_stmt pos:start="113:13" pos:end="113:67"><expr pos:start="113:13" pos:end="113:66"><call pos:start="113:13" pos:end="113:66"><name pos:start="113:13" pos:end="113:28">find_index_range</name><argument_list pos:start="113:29" pos:end="113:66">(<argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">s</name></expr></argument>, <argument pos:start="113:33" pos:end="113:41"><expr pos:start="113:33" pos:end="113:41"><name pos:start="113:33" pos:end="113:41">full_path</name></expr></argument>, <argument pos:start="113:44" pos:end="113:50"><expr pos:start="113:44" pos:end="113:50"><name pos:start="113:44" pos:end="113:50"><name pos:start="113:44" pos:end="113:45">os</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:50">pos</name></name></expr></argument>, <argument pos:start="113:53" pos:end="113:65"><expr pos:start="113:53" pos:end="113:65"><operator pos:start="113:53" pos:end="113:53">&amp;</operator><name pos:start="113:54" pos:end="113:65">index_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="131:9">else <block pos:start="115:16" pos:end="131:9">{<block_content pos:start="117:13" pos:end="129:13">

            <expr_stmt pos:start="117:13" pos:end="117:44"><expr pos:start="117:13" pos:end="117:43"><call pos:start="117:13" pos:end="117:43"><name pos:start="117:13" pos:end="117:30">ff_format_io_close</name><argument_list pos:start="117:31" pos:end="117:43">(<argument pos:start="117:32" pos:end="117:32"><expr pos:start="117:32" pos:end="117:32"><name pos:start="117:32" pos:end="117:32">s</name></expr></argument>, <argument pos:start="117:35" pos:end="117:42"><expr pos:start="117:35" pos:end="117:42"><operator pos:start="117:35" pos:end="117:35">&amp;</operator><name pos:start="117:36" pos:end="117:42"><name pos:start="117:36" pos:end="117:37">os</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:42">out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="121:13" pos:end="129:13"><if pos:start="121:13" pos:end="129:13">if <condition pos:start="121:16" pos:end="121:27">(<expr pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:26">use_rename</name></expr>)</condition> <block pos:start="121:29" pos:end="129:13">{<block_content pos:start="123:17" pos:end="127:26">

                <expr_stmt pos:start="123:17" pos:end="123:59"><expr pos:start="123:17" pos:end="123:58"><name pos:start="123:17" pos:end="123:19">ret</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:58"><name pos:start="123:23" pos:end="123:36">avpriv_io_move</name><argument_list pos:start="123:37" pos:end="123:58">(<argument pos:start="123:38" pos:end="123:46"><expr pos:start="123:38" pos:end="123:46"><name pos:start="123:38" pos:end="123:46">temp_path</name></expr></argument>, <argument pos:start="123:49" pos:end="123:57"><expr pos:start="123:49" pos:end="123:57"><name pos:start="123:49" pos:end="123:57">full_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="125:17" pos:end="127:26"><if pos:start="125:17" pos:end="127:26">if <condition pos:start="125:20" pos:end="125:28">(<expr pos:start="125:21" pos:end="125:27"><name pos:start="125:21" pos:end="125:23">ret</name> <operator pos:start="125:25" pos:end="125:25">&lt;</operator> <literal type="number" pos:start="125:27" pos:end="125:27">0</literal></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:26"><block_content pos:start="127:21" pos:end="127:26">

                    <break pos:start="127:21" pos:end="127:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="135:9" pos:end="155:9"><if pos:start="135:9" pos:end="155:9">if <condition pos:start="135:12" pos:end="135:26">(<expr pos:start="135:13" pos:end="135:25"><operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:25"><name pos:start="135:14" pos:end="135:15">os</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:25">bit_rate</name></name></expr>)</condition> <block pos:start="135:28" pos:end="155:9">{<block_content pos:start="139:13" pos:end="153:13">

            <comment type="line" pos:start="137:13" pos:end="137:57">// calculate average bitrate of first segment</comment>

            <decl_stmt pos:start="139:13" pos:end="143:103"><decl pos:start="139:13" pos:end="143:102"><type pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:19">int64_t</name></type> <name pos:start="139:21" pos:end="139:27">bitrate</name> <init pos:start="139:29" pos:end="143:102">= <expr pos:start="139:31" pos:end="143:102"><operator pos:start="139:31" pos:end="139:31">(</operator><name pos:start="139:32" pos:end="139:38">int64_t</name><operator pos:start="139:39" pos:end="139:39">)</operator> <name pos:start="139:41" pos:end="139:52">range_length</name> <operator pos:start="139:54" pos:end="139:54">*</operator> <literal type="number" pos:start="139:56" pos:end="139:56">8</literal> <operator pos:start="139:58" pos:end="139:58">*</operator> <name pos:start="139:60" pos:end="139:71">AV_TIME_BASE</name> <operator pos:start="139:73" pos:end="139:73">/</operator> <call pos:start="139:75" pos:end="143:102"><name pos:start="139:75" pos:end="139:86">av_rescale_q</name><argument_list pos:start="139:87" pos:end="143:102">(<argument pos:start="139:88" pos:end="139:114"><expr pos:start="139:88" pos:end="139:114"><name pos:start="139:88" pos:end="139:98"><name pos:start="139:88" pos:end="139:89">os</name><operator pos:start="139:90" pos:end="139:91">-&gt;</operator><name pos:start="139:92" pos:end="139:98">max_pts</name></name> <operator pos:start="139:100" pos:end="139:100">-</operator> <name pos:start="139:102" pos:end="139:114"><name pos:start="139:102" pos:end="139:103">os</name><operator pos:start="139:104" pos:end="139:105">-&gt;</operator><name pos:start="139:106" pos:end="139:114">start_pts</name></name></expr></argument>,

                                                                                       <argument pos:start="141:88" pos:end="141:100"><expr pos:start="141:88" pos:end="141:100"><name pos:start="141:88" pos:end="141:100"><name pos:start="141:88" pos:end="141:89">st</name><operator pos:start="141:90" pos:end="141:91">-&gt;</operator><name pos:start="141:92" pos:end="141:100">time_base</name></name></expr></argument>,

                                                                                       <argument pos:start="143:88" pos:end="143:101"><expr pos:start="143:88" pos:end="143:101"><name pos:start="143:88" pos:end="143:101">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="145:13" pos:end="153:13"><if pos:start="145:13" pos:end="153:13">if <condition pos:start="145:16" pos:end="145:29">(<expr pos:start="145:17" pos:end="145:28"><name pos:start="145:17" pos:end="145:23">bitrate</name> <operator pos:start="145:25" pos:end="145:26">&gt;=</operator> <literal type="number" pos:start="145:28" pos:end="145:28">0</literal></expr>)</condition> <block pos:start="145:31" pos:end="153:13">{<block_content pos:start="147:17" pos:end="151:56">

                <expr_stmt pos:start="147:17" pos:end="147:39"><expr pos:start="147:17" pos:end="147:38"><name pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:18">os</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:28">bit_rate</name></name> <operator pos:start="147:30" pos:end="147:30">=</operator> <name pos:start="147:32" pos:end="147:38">bitrate</name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="151:56"><expr pos:start="149:17" pos:end="151:55"><call pos:start="149:17" pos:end="151:55"><name pos:start="149:17" pos:end="149:24">snprintf</name><argument_list pos:start="149:25" pos:end="151:55">(<argument pos:start="149:26" pos:end="149:42"><expr pos:start="149:26" pos:end="149:42"><name pos:start="149:26" pos:end="149:42"><name pos:start="149:26" pos:end="149:27">os</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:42">bandwidth_str</name></name></expr></argument>, <argument pos:start="149:45" pos:end="149:69"><expr pos:start="149:45" pos:end="149:69"><sizeof pos:start="149:45" pos:end="149:69">sizeof<argument_list pos:start="149:51" pos:end="149:69">(<argument pos:start="149:52" pos:end="149:68"><expr pos:start="149:52" pos:end="149:68"><name pos:start="149:52" pos:end="149:68"><name pos:start="149:52" pos:end="149:53">os</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:68">bandwidth_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="151:22" pos:end="151:40"><expr pos:start="151:22" pos:end="151:40"><literal type="string" pos:start="151:22" pos:end="151:40">" bandwidth=\"%d\""</literal></expr></argument>, <argument pos:start="151:43" pos:end="151:54"><expr pos:start="151:43" pos:end="151:54"><name pos:start="151:43" pos:end="151:54"><name pos:start="151:43" pos:end="151:44">os</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:54">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:115"><expr pos:start="157:9" pos:end="157:114"><call pos:start="157:9" pos:end="157:114"><name pos:start="157:9" pos:end="157:19">add_segment</name><argument_list pos:start="157:20" pos:end="157:114">(<argument pos:start="157:21" pos:end="157:22"><expr pos:start="157:21" pos:end="157:22"><name pos:start="157:21" pos:end="157:22">os</name></expr></argument>, <argument pos:start="157:25" pos:end="157:32"><expr pos:start="157:25" pos:end="157:32"><name pos:start="157:25" pos:end="157:32">filename</name></expr></argument>, <argument pos:start="157:35" pos:end="157:47"><expr pos:start="157:35" pos:end="157:47"><name pos:start="157:35" pos:end="157:47"><name pos:start="157:35" pos:end="157:36">os</name><operator pos:start="157:37" pos:end="157:38">-&gt;</operator><name pos:start="157:39" pos:end="157:47">start_pts</name></name></expr></argument>, <argument pos:start="157:50" pos:end="157:76"><expr pos:start="157:50" pos:end="157:76"><name pos:start="157:50" pos:end="157:60"><name pos:start="157:50" pos:end="157:51">os</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:60">max_pts</name></name> <operator pos:start="157:62" pos:end="157:62">-</operator> <name pos:start="157:64" pos:end="157:76"><name pos:start="157:64" pos:end="157:65">os</name><operator pos:start="157:66" pos:end="157:67">-&gt;</operator><name pos:start="157:68" pos:end="157:76">start_pts</name></name></expr></argument>, <argument pos:start="157:79" pos:end="157:85"><expr pos:start="157:79" pos:end="157:85"><name pos:start="157:79" pos:end="157:85"><name pos:start="157:79" pos:end="157:80">os</name><operator pos:start="157:81" pos:end="157:82">-&gt;</operator><name pos:start="157:83" pos:end="157:85">pos</name></name></expr></argument>, <argument pos:start="157:88" pos:end="157:99"><expr pos:start="157:88" pos:end="157:99"><name pos:start="157:88" pos:end="157:99">range_length</name></expr></argument>, <argument pos:start="157:102" pos:end="157:113"><expr pos:start="157:102" pos:end="157:113"><name pos:start="157:102" pos:end="157:113">index_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:122"><expr pos:start="159:9" pos:end="159:121"><call pos:start="159:9" pos:end="159:121"><name pos:start="159:9" pos:end="159:14">av_log</name><argument_list pos:start="159:15" pos:end="159:121">(<argument pos:start="159:16" pos:end="159:16"><expr pos:start="159:16" pos:end="159:16"><name pos:start="159:16" pos:end="159:16">s</name></expr></argument>, <argument pos:start="159:19" pos:end="159:32"><expr pos:start="159:19" pos:end="159:32"><name pos:start="159:19" pos:end="159:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="159:35" pos:end="159:87"><expr pos:start="159:35" pos:end="159:87"><literal type="string" pos:start="159:35" pos:end="159:87">"Representation %d media segment %d written to: %s\n"</literal></expr></argument>, <argument pos:start="159:90" pos:end="159:90"><expr pos:start="159:90" pos:end="159:90"><name pos:start="159:90" pos:end="159:90">i</name></expr></argument>, <argument pos:start="159:93" pos:end="159:109"><expr pos:start="159:93" pos:end="159:109"><name pos:start="159:93" pos:end="159:109"><name pos:start="159:93" pos:end="159:94">os</name><operator pos:start="159:95" pos:end="159:96">-&gt;</operator><name pos:start="159:97" pos:end="159:109">segment_index</name></name></expr></argument>, <argument pos:start="159:112" pos:end="159:120"><expr pos:start="159:112" pos:end="159:120"><name pos:start="159:112" pos:end="159:120">full_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:32"><expr pos:start="163:9" pos:end="163:31"><name pos:start="163:9" pos:end="163:15"><name pos:start="163:9" pos:end="163:10">os</name><operator pos:start="163:11" pos:end="163:12">-&gt;</operator><name pos:start="163:13" pos:end="163:15">pos</name></name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <name pos:start="163:20" pos:end="163:31">range_length</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="169:5" pos:end="205:5"><if pos:start="169:5" pos:end="205:5">if <condition pos:start="169:8" pos:end="169:55">(<expr pos:start="169:9" pos:end="169:54"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:9">c</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:22">window_size</name></name> <operator pos:start="169:24" pos:end="169:25">||</operator> <operator pos:start="169:27" pos:end="169:27">(</operator><name pos:start="169:28" pos:end="169:32">final</name> <operator pos:start="169:34" pos:end="169:35">&amp;&amp;</operator> <name pos:start="169:37" pos:end="169:53"><name pos:start="169:37" pos:end="169:37">c</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:53">remove_at_exit</name></name><operator pos:start="169:54" pos:end="169:54">)</operator></expr>)</condition> <block pos:start="169:57" pos:end="205:5">{<block_content pos:start="171:9" pos:end="203:9">

        <for pos:start="171:9" pos:end="203:9">for <control pos:start="171:13" pos:end="171:43">(<init pos:start="171:14" pos:end="171:19"><expr pos:start="171:14" pos:end="171:18"><name pos:start="171:14" pos:end="171:14">i</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>;</init> <condition pos:start="171:21" pos:end="171:38"><expr pos:start="171:21" pos:end="171:37"><name pos:start="171:21" pos:end="171:21">i</name> <operator pos:start="171:23" pos:end="171:23">&lt;</operator> <name pos:start="171:25" pos:end="171:37"><name pos:start="171:25" pos:end="171:25">s</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:37">nb_streams</name></name></expr>;</condition> <incr pos:start="171:40" pos:end="171:42"><expr pos:start="171:40" pos:end="171:42"><name pos:start="171:40" pos:end="171:40">i</name><operator pos:start="171:41" pos:end="171:42">++</operator></expr></incr>)</control> <block pos:start="171:45" pos:end="203:9">{<block_content pos:start="173:13" pos:end="201:13">

            <decl_stmt pos:start="173:13" pos:end="173:46"><decl pos:start="173:13" pos:end="173:45"><type pos:start="173:13" pos:end="173:26"><name pos:start="173:13" pos:end="173:24">OutputStream</name> <modifier pos:start="173:26" pos:end="173:26">*</modifier></type><name pos:start="173:27" pos:end="173:28">os</name> <init pos:start="173:30" pos:end="173:45">= <expr pos:start="173:32" pos:end="173:45"><operator pos:start="173:32" pos:end="173:32">&amp;</operator><name pos:start="173:33" pos:end="173:45"><name pos:start="173:33" pos:end="173:33">c</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:42">streams</name><index pos:start="173:43" pos:end="173:45">[<expr pos:start="173:44" pos:end="173:44"><name pos:start="173:44" pos:end="173:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:18"><decl pos:start="175:13" pos:end="175:17"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="177:13" pos:end="177:81"><decl pos:start="177:13" pos:end="177:80"><type pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:15">int</name></type> <name pos:start="177:17" pos:end="177:22">remove</name> <init pos:start="177:24" pos:end="177:80">= <expr pos:start="177:26" pos:end="177:80"><name pos:start="177:26" pos:end="177:40"><name pos:start="177:26" pos:end="177:27">os</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:40">nb_segments</name></name> <operator pos:start="177:42" pos:end="177:42">-</operator> <name pos:start="177:44" pos:end="177:57"><name pos:start="177:44" pos:end="177:44">c</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:57">window_size</name></name> <operator pos:start="177:59" pos:end="177:59">-</operator> <name pos:start="177:61" pos:end="177:80"><name pos:start="177:61" pos:end="177:61">c</name><operator pos:start="177:62" pos:end="177:63">-&gt;</operator><name pos:start="177:64" pos:end="177:80">extra_window_size</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="179:13" pos:end="181:41"><if pos:start="179:13" pos:end="181:41">if <condition pos:start="179:16" pos:end="179:43">(<expr pos:start="179:17" pos:end="179:42"><name pos:start="179:17" pos:end="179:21">final</name> <operator pos:start="179:23" pos:end="179:24">&amp;&amp;</operator> <name pos:start="179:26" pos:end="179:42"><name pos:start="179:26" pos:end="179:26">c</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:42">remove_at_exit</name></name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:41"><block_content pos:start="181:17" pos:end="181:41">

                <expr_stmt pos:start="181:17" pos:end="181:41"><expr pos:start="181:17" pos:end="181:40"><name pos:start="181:17" pos:end="181:22">remove</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <name pos:start="181:26" pos:end="181:40"><name pos:start="181:26" pos:end="181:27">os</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:40">nb_segments</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="201:13"><if pos:start="183:13" pos:end="201:13">if <condition pos:start="183:16" pos:end="183:27">(<expr pos:start="183:17" pos:end="183:26"><name pos:start="183:17" pos:end="183:22">remove</name> <operator pos:start="183:24" pos:end="183:24">&gt;</operator> <literal type="number" pos:start="183:26" pos:end="183:26">0</literal></expr>)</condition> <block pos:start="183:29" pos:end="201:13">{<block_content pos:start="185:17" pos:end="199:102">

                <for pos:start="185:17" pos:end="195:17">for <control pos:start="185:21" pos:end="185:44">(<init pos:start="185:22" pos:end="185:27"><expr pos:start="185:22" pos:end="185:26"><name pos:start="185:22" pos:end="185:22">j</name> <operator pos:start="185:24" pos:end="185:24">=</operator> <literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>;</init> <condition pos:start="185:29" pos:end="185:39"><expr pos:start="185:29" pos:end="185:38"><name pos:start="185:29" pos:end="185:29">j</name> <operator pos:start="185:31" pos:end="185:31">&lt;</operator> <name pos:start="185:33" pos:end="185:38">remove</name></expr>;</condition> <incr pos:start="185:41" pos:end="185:43"><expr pos:start="185:41" pos:end="185:43"><name pos:start="185:41" pos:end="185:41">j</name><operator pos:start="185:42" pos:end="185:43">++</operator></expr></incr>)</control> <block pos:start="185:46" pos:end="195:17">{<block_content pos:start="187:21" pos:end="193:45">

                    <decl_stmt pos:start="187:21" pos:end="187:40"><decl pos:start="187:21" pos:end="187:39"><type pos:start="187:21" pos:end="187:24"><name pos:start="187:21" pos:end="187:24">char</name></type> <name pos:start="187:26" pos:end="187:39"><name pos:start="187:26" pos:end="187:33">filename</name><index pos:start="187:34" pos:end="187:39">[<expr pos:start="187:35" pos:end="187:38"><literal type="number" pos:start="187:35" pos:end="187:38">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:100"><expr pos:start="189:21" pos:end="189:99"><call pos:start="189:21" pos:end="189:99"><name pos:start="189:21" pos:end="189:28">snprintf</name><argument_list pos:start="189:29" pos:end="189:99">(<argument pos:start="189:30" pos:end="189:37"><expr pos:start="189:30" pos:end="189:37"><name pos:start="189:30" pos:end="189:37">filename</name></expr></argument>, <argument pos:start="189:40" pos:end="189:55"><expr pos:start="189:40" pos:end="189:55"><sizeof pos:start="189:40" pos:end="189:55">sizeof<argument_list pos:start="189:46" pos:end="189:55">(<argument pos:start="189:47" pos:end="189:54"><expr pos:start="189:47" pos:end="189:54"><name pos:start="189:47" pos:end="189:54">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="189:58" pos:end="189:63"><expr pos:start="189:58" pos:end="189:63"><literal type="string" pos:start="189:58" pos:end="189:63">"%s%s"</literal></expr></argument>, <argument pos:start="189:66" pos:end="189:75"><expr pos:start="189:66" pos:end="189:75"><name pos:start="189:66" pos:end="189:75"><name pos:start="189:66" pos:end="189:66">c</name><operator pos:start="189:67" pos:end="189:68">-&gt;</operator><name pos:start="189:69" pos:end="189:75">dirname</name></name></expr></argument>, <argument pos:start="189:78" pos:end="189:98"><expr pos:start="189:78" pos:end="189:98"><name pos:start="189:78" pos:end="189:92"><name pos:start="189:78" pos:end="189:79">os</name><operator pos:start="189:80" pos:end="189:81">-&gt;</operator><name pos:start="189:82" pos:end="189:89">segments</name><index pos:start="189:90" pos:end="189:92">[<expr pos:start="189:91" pos:end="189:91"><name pos:start="189:91" pos:end="189:91">j</name></expr>]</index></name><operator pos:start="189:93" pos:end="189:94">-&gt;</operator><name pos:start="189:95" pos:end="189:98">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:37"><expr pos:start="191:21" pos:end="191:36"><call pos:start="191:21" pos:end="191:36"><name pos:start="191:21" pos:end="191:26">unlink</name><argument_list pos:start="191:27" pos:end="191:36">(<argument pos:start="191:28" pos:end="191:35"><expr pos:start="191:28" pos:end="191:35"><name pos:start="191:28" pos:end="191:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:45"><expr pos:start="193:21" pos:end="193:44"><call pos:start="193:21" pos:end="193:44"><name pos:start="193:21" pos:end="193:27">av_free</name><argument_list pos:start="193:28" pos:end="193:44">(<argument pos:start="193:29" pos:end="193:43"><expr pos:start="193:29" pos:end="193:43"><name pos:start="193:29" pos:end="193:43"><name pos:start="193:29" pos:end="193:30">os</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:40">segments</name><index pos:start="193:41" pos:end="193:43">[<expr pos:start="193:42" pos:end="193:42"><name pos:start="193:42" pos:end="193:42">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="197:17" pos:end="197:42"><expr pos:start="197:17" pos:end="197:41"><name pos:start="197:17" pos:end="197:31"><name pos:start="197:17" pos:end="197:18">os</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:31">nb_segments</name></name> <operator pos:start="197:33" pos:end="197:34">-=</operator> <name pos:start="197:36" pos:end="197:41">remove</name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:102"><expr pos:start="199:17" pos:end="199:101"><call pos:start="199:17" pos:end="199:101"><name pos:start="199:17" pos:end="199:23">memmove</name><argument_list pos:start="199:24" pos:end="199:101">(<argument pos:start="199:25" pos:end="199:36"><expr pos:start="199:25" pos:end="199:36"><name pos:start="199:25" pos:end="199:36"><name pos:start="199:25" pos:end="199:26">os</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:36">segments</name></name></expr></argument>, <argument pos:start="199:39" pos:end="199:59"><expr pos:start="199:39" pos:end="199:59"><name pos:start="199:39" pos:end="199:50"><name pos:start="199:39" pos:end="199:40">os</name><operator pos:start="199:41" pos:end="199:42">-&gt;</operator><name pos:start="199:43" pos:end="199:50">segments</name></name> <operator pos:start="199:52" pos:end="199:52">+</operator> <name pos:start="199:54" pos:end="199:59">remove</name></expr></argument>, <argument pos:start="199:62" pos:end="199:100"><expr pos:start="199:62" pos:end="199:100"><name pos:start="199:62" pos:end="199:76"><name pos:start="199:62" pos:end="199:63">os</name><operator pos:start="199:64" pos:end="199:65">-&gt;</operator><name pos:start="199:66" pos:end="199:76">nb_segments</name></name> <operator pos:start="199:78" pos:end="199:78">*</operator> <sizeof pos:start="199:80" pos:end="199:100">sizeof<argument_list pos:start="199:86" pos:end="199:100">(<argument pos:start="199:87" pos:end="199:99"><expr pos:start="199:87" pos:end="199:99"><operator pos:start="199:87" pos:end="199:87">*</operator><name pos:start="199:88" pos:end="199:99"><name pos:start="199:88" pos:end="199:89">os</name><operator pos:start="199:90" pos:end="199:91">-&gt;</operator><name pos:start="199:92" pos:end="199:99">segments</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="209:5" pos:end="211:39"><if pos:start="209:5" pos:end="211:39">if <condition pos:start="209:8" pos:end="209:17">(<expr pos:start="209:9" pos:end="209:16"><name pos:start="209:9" pos:end="209:11">ret</name> <operator pos:start="209:13" pos:end="209:14">&gt;=</operator> <literal type="number" pos:start="209:16" pos:end="209:16">0</literal></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:39"><block_content pos:start="211:9" pos:end="211:39">

        <expr_stmt pos:start="211:9" pos:end="211:39"><expr pos:start="211:9" pos:end="211:38"><name pos:start="211:9" pos:end="211:11">ret</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:38"><name pos:start="211:15" pos:end="211:28">write_manifest</name><argument_list pos:start="211:29" pos:end="211:38">(<argument pos:start="211:30" pos:end="211:30"><expr pos:start="211:30" pos:end="211:30"><name pos:start="211:30" pos:end="211:30">s</name></expr></argument>, <argument pos:start="211:33" pos:end="211:37"><expr pos:start="211:33" pos:end="211:37"><name pos:start="211:33" pos:end="211:37">final</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="213:5" pos:end="213:15">return <expr pos:start="213:12" pos:end="213:14"><name pos:start="213:12" pos:end="213:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
