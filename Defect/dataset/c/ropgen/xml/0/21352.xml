<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21352.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name></type> <name pos:start="1:16" pos:end="1:37">virtio_scsi_do_command</name><parameter_list pos:start="1:38" pos:end="7:77">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:49">QVirtIOSCSI</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">vs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:68">uint8_t</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">cdb</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:60"><decl pos:start="3:39" pos:end="3:60"><type pos:start="3:39" pos:end="3:60"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:51">uint8_t</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:60">data_in</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:56"><decl pos:start="5:39" pos:end="5:56"><type pos:start="5:39" pos:end="5:56"><name pos:start="5:39" pos:end="5:44">size_t</name></type> <name pos:start="5:46" pos:end="5:56">data_in_len</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:55"><decl pos:start="7:39" pos:end="7:55"><type pos:start="7:39" pos:end="7:55"><name pos:start="7:39" pos:end="7:45">uint8_t</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:55">data_out</name></decl></parameter>, <parameter pos:start="7:58" pos:end="7:76"><decl pos:start="7:58" pos:end="7:76"><type pos:start="7:58" pos:end="7:76"><name pos:start="7:58" pos:end="7:63">size_t</name></type> <name pos:start="7:65" pos:end="7:76">data_out_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="97:1">{<block_content pos:start="11:5" pos:end="95:20">

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">QVirtQueue</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">vq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:21">QVirtIOSCSICmdReq</name></type> <name pos:start="13:23" pos:end="13:25">req</name> <init pos:start="13:27" pos:end="13:37">= <expr pos:start="13:29" pos:end="13:37"><block pos:start="13:29" pos:end="13:37">{ <expr pos:start="13:31" pos:end="13:35"><block pos:start="13:31" pos:end="13:35">{ <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:67"><decl pos:start="15:5" pos:end="15:66"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22">QVirtIOSCSICmdResp</name></type> <name pos:start="15:24" pos:end="15:27">resp</name> <init pos:start="15:29" pos:end="15:66">= <expr pos:start="15:31" pos:end="15:66"><block pos:start="15:31" pos:end="15:66">{ <expr pos:start="15:33" pos:end="15:48"><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:41">response</name> <operator pos:start="15:43" pos:end="15:43">=</operator> <literal type="number" pos:start="15:45" pos:end="15:48">0xff</literal></expr>, <expr pos:start="15:51" pos:end="15:64"><operator pos:start="15:51" pos:end="15:51">.</operator><name pos:start="15:52" pos:end="15:57">status</name> <operator pos:start="15:59" pos:end="15:59">=</operator> <literal type="number" pos:start="15:61" pos:end="15:64">0xff</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:70"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:21">req_addr</name></decl>, <decl pos:start="17:24" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:24" pos:end="17:32">resp_addr</name></decl>, <decl pos:start="17:35" pos:end="17:50"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:35" pos:end="17:46">data_in_addr</name> <init pos:start="17:48" pos:end="17:50">= <expr pos:start="17:50" pos:end="17:50"><literal type="number" pos:start="17:50" pos:end="17:50">0</literal></expr></init></decl>, <decl pos:start="17:53" pos:end="17:69"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:53" pos:end="17:65">data_out_addr</name> <init pos:start="17:67" pos:end="17:69">= <expr pos:start="17:69" pos:end="17:69"><literal type="number" pos:start="17:69" pos:end="17:69">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:20">response</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:22">free_head</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">vq</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:11">vs</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:15">vq</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">2</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:7">req</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:11">lun</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr>]</index></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="29:21" pos:end="29:36">/* Select LUN */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:7">req</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:11">lun</name><index pos:start="31:12" pos:end="31:14">[<expr pos:start="31:13" pos:end="31:13"><literal type="number" pos:start="31:13" pos:end="31:13">1</literal></expr>]</index></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="31:21" pos:end="31:41">/* Select target 1 */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:10">memcpy</name><argument_list pos:start="33:11" pos:end="33:34">(<argument pos:start="33:12" pos:end="33:18"><expr pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:14">req</name><operator pos:start="33:15" pos:end="33:15">.</operator><name pos:start="33:16" pos:end="33:18">cdb</name></name></expr></argument>, <argument pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">cdb</name></expr></argument>, <argument pos:start="33:26" pos:end="33:33"><expr pos:start="33:26" pos:end="33:33"><name pos:start="33:26" pos:end="33:33">CDB_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:69">/* XXX: Fix endian if any multi-byte field in req/resp is used */</comment>



    <comment type="block" pos:start="41:5" pos:end="41:28">/* Add request header */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:12">req_addr</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:56"><name pos:start="43:16" pos:end="43:33">qvirtio_scsi_alloc</name><argument_list pos:start="43:34" pos:end="43:56">(<argument pos:start="43:35" pos:end="43:36"><expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">vs</name></expr></argument>, <argument pos:start="43:39" pos:end="43:49"><expr pos:start="43:39" pos:end="43:49"><sizeof pos:start="43:39" pos:end="43:49">sizeof<argument_list pos:start="43:45" pos:end="43:49">(<argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><name pos:start="43:46" pos:end="43:48">req</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><operator pos:start="43:52" pos:end="43:52">&amp;</operator><name pos:start="43:53" pos:end="43:55">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:71"><expr pos:start="45:5" pos:end="45:70"><name pos:start="45:5" pos:end="45:13">free_head</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:70"><name pos:start="45:17" pos:end="45:30">qvirtqueue_add</name><argument_list pos:start="45:31" pos:end="45:70">(<argument pos:start="45:32" pos:end="45:33"><expr pos:start="45:32" pos:end="45:33"><name pos:start="45:32" pos:end="45:33">vq</name></expr></argument>, <argument pos:start="45:36" pos:end="45:43"><expr pos:start="45:36" pos:end="45:43"><name pos:start="45:36" pos:end="45:43">req_addr</name></expr></argument>, <argument pos:start="45:46" pos:end="45:56"><expr pos:start="45:46" pos:end="45:56"><sizeof pos:start="45:46" pos:end="45:56">sizeof<argument_list pos:start="45:52" pos:end="45:56">(<argument pos:start="45:53" pos:end="45:55"><expr pos:start="45:53" pos:end="45:55"><name pos:start="45:53" pos:end="45:55">req</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:59" pos:end="45:63"><expr pos:start="45:59" pos:end="45:63"><name pos:start="45:59" pos:end="45:63">false</name></expr></argument>, <argument pos:start="45:66" pos:end="45:69"><expr pos:start="45:66" pos:end="45:69"><name pos:start="45:66" pos:end="45:69">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:20">data_out_len</name></expr>)</condition> <block pos:start="49:23" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:69">

        <expr_stmt pos:start="51:9" pos:end="51:71"><expr pos:start="51:9" pos:end="51:70"><name pos:start="51:9" pos:end="51:21">data_out_addr</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:70"><name pos:start="51:25" pos:end="51:42">qvirtio_scsi_alloc</name><argument_list pos:start="51:43" pos:end="51:70">(<argument pos:start="51:44" pos:end="51:45"><expr pos:start="51:44" pos:end="51:45"><name pos:start="51:44" pos:end="51:45">vs</name></expr></argument>, <argument pos:start="51:48" pos:end="51:59"><expr pos:start="51:48" pos:end="51:59"><name pos:start="51:48" pos:end="51:59">data_out_len</name></expr></argument>, <argument pos:start="51:62" pos:end="51:69"><expr pos:start="51:62" pos:end="51:69"><name pos:start="51:62" pos:end="51:69">data_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:69"><expr pos:start="53:9" pos:end="53:68"><call pos:start="53:9" pos:end="53:68"><name pos:start="53:9" pos:end="53:22">qvirtqueue_add</name><argument_list pos:start="53:23" pos:end="53:68">(<argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><name pos:start="53:24" pos:end="53:25">vq</name></expr></argument>, <argument pos:start="53:28" pos:end="53:40"><expr pos:start="53:28" pos:end="53:40"><name pos:start="53:28" pos:end="53:40">data_out_addr</name></expr></argument>, <argument pos:start="53:43" pos:end="53:54"><expr pos:start="53:43" pos:end="53:54"><name pos:start="53:43" pos:end="53:54">data_out_len</name></expr></argument>, <argument pos:start="53:57" pos:end="53:61"><expr pos:start="53:57" pos:end="53:61"><name pos:start="53:57" pos:end="53:61">false</name></expr></argument>, <argument pos:start="53:64" pos:end="53:67"><expr pos:start="53:64" pos:end="53:67"><name pos:start="53:64" pos:end="53:67">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:29">/* Add response header */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:60"><expr pos:start="61:5" pos:end="61:59"><name pos:start="61:5" pos:end="61:13">resp_addr</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="61:59"><name pos:start="61:17" pos:end="61:34">qvirtio_scsi_alloc</name><argument_list pos:start="61:35" pos:end="61:59">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">vs</name></expr></argument>, <argument pos:start="61:40" pos:end="61:51"><expr pos:start="61:40" pos:end="61:51"><sizeof pos:start="61:40" pos:end="61:51">sizeof<argument_list pos:start="61:46" pos:end="61:51">(<argument pos:start="61:47" pos:end="61:50"><expr pos:start="61:47" pos:end="61:50"><name pos:start="61:47" pos:end="61:50">resp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:54" pos:end="61:58"><expr pos:start="61:54" pos:end="61:58"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:58">resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:69"><expr pos:start="63:5" pos:end="63:68"><call pos:start="63:5" pos:end="63:68"><name pos:start="63:5" pos:end="63:18">qvirtqueue_add</name><argument_list pos:start="63:19" pos:end="63:68">(<argument pos:start="63:20" pos:end="63:21"><expr pos:start="63:20" pos:end="63:21"><name pos:start="63:20" pos:end="63:21">vq</name></expr></argument>, <argument pos:start="63:24" pos:end="63:32"><expr pos:start="63:24" pos:end="63:32"><name pos:start="63:24" pos:end="63:32">resp_addr</name></expr></argument>, <argument pos:start="63:35" pos:end="63:46"><expr pos:start="63:35" pos:end="63:46"><sizeof pos:start="63:35" pos:end="63:46">sizeof<argument_list pos:start="63:41" pos:end="63:46">(<argument pos:start="63:42" pos:end="63:45"><expr pos:start="63:42" pos:end="63:45"><name pos:start="63:42" pos:end="63:45">resp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:49" pos:end="63:52"><expr pos:start="63:49" pos:end="63:52"><name pos:start="63:49" pos:end="63:52">true</name></expr></argument>, <argument pos:start="63:55" pos:end="63:67"><expr pos:start="63:55" pos:end="63:67"><operator pos:start="63:55" pos:end="63:55">!</operator><operator pos:start="63:56" pos:end="63:56">!</operator><name pos:start="63:57" pos:end="63:67">data_in_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:20">(<expr pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:19">data_in_len</name></expr>)</condition> <block pos:start="67:22" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:67">

        <expr_stmt pos:start="69:9" pos:end="69:68"><expr pos:start="69:9" pos:end="69:67"><name pos:start="69:9" pos:end="69:20">data_in_addr</name> <operator pos:start="69:22" pos:end="69:22">=</operator> <call pos:start="69:24" pos:end="69:67"><name pos:start="69:24" pos:end="69:41">qvirtio_scsi_alloc</name><argument_list pos:start="69:42" pos:end="69:67">(<argument pos:start="69:43" pos:end="69:44"><expr pos:start="69:43" pos:end="69:44"><name pos:start="69:43" pos:end="69:44">vs</name></expr></argument>, <argument pos:start="69:47" pos:end="69:57"><expr pos:start="69:47" pos:end="69:57"><name pos:start="69:47" pos:end="69:57">data_in_len</name></expr></argument>, <argument pos:start="69:60" pos:end="69:66"><expr pos:start="69:60" pos:end="69:66"><name pos:start="69:60" pos:end="69:66">data_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:67"><expr pos:start="71:9" pos:end="71:66"><call pos:start="71:9" pos:end="71:66"><name pos:start="71:9" pos:end="71:22">qvirtqueue_add</name><argument_list pos:start="71:23" pos:end="71:66">(<argument pos:start="71:24" pos:end="71:25"><expr pos:start="71:24" pos:end="71:25"><name pos:start="71:24" pos:end="71:25">vq</name></expr></argument>, <argument pos:start="71:28" pos:end="71:39"><expr pos:start="71:28" pos:end="71:39"><name pos:start="71:28" pos:end="71:39">data_in_addr</name></expr></argument>, <argument pos:start="71:42" pos:end="71:52"><expr pos:start="71:42" pos:end="71:52"><name pos:start="71:42" pos:end="71:52">data_in_len</name></expr></argument>, <argument pos:start="71:55" pos:end="71:58"><expr pos:start="71:55" pos:end="71:58"><name pos:start="71:55" pos:end="71:58">true</name></expr></argument>, <argument pos:start="71:61" pos:end="71:65"><expr pos:start="71:61" pos:end="71:65"><name pos:start="71:61" pos:end="71:65">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:58"><expr pos:start="77:5" pos:end="77:57"><call pos:start="77:5" pos:end="77:57"><name pos:start="77:5" pos:end="77:19">qvirtqueue_kick</name><argument_list pos:start="77:20" pos:end="77:57">(<argument pos:start="77:21" pos:end="77:32"><expr pos:start="77:21" pos:end="77:32"><operator pos:start="77:21" pos:end="77:21">&amp;</operator><name pos:start="77:22" pos:end="77:32">qvirtio_pci</name></expr></argument>, <argument pos:start="77:35" pos:end="77:41"><expr pos:start="77:35" pos:end="77:41"><name pos:start="77:35" pos:end="77:41"><name pos:start="77:35" pos:end="77:36">vs</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:41">dev</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:45"><expr pos:start="77:44" pos:end="77:45"><name pos:start="77:44" pos:end="77:45">vq</name></expr></argument>, <argument pos:start="77:48" pos:end="77:56"><expr pos:start="77:48" pos:end="77:56"><name pos:start="77:48" pos:end="77:56">free_head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:79"><expr pos:start="79:5" pos:end="79:78"><call pos:start="79:5" pos:end="79:78"><name pos:start="79:5" pos:end="79:26">qvirtio_wait_queue_isr</name><argument_list pos:start="79:27" pos:end="79:78">(<argument pos:start="79:28" pos:end="79:39"><expr pos:start="79:28" pos:end="79:39"><operator pos:start="79:28" pos:end="79:28">&amp;</operator><name pos:start="79:29" pos:end="79:39">qvirtio_pci</name></expr></argument>, <argument pos:start="79:42" pos:end="79:48"><expr pos:start="79:42" pos:end="79:48"><name pos:start="79:42" pos:end="79:48"><name pos:start="79:42" pos:end="79:43">vs</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:48">dev</name></name></expr></argument>, <argument pos:start="79:51" pos:end="79:52"><expr pos:start="79:51" pos:end="79:52"><name pos:start="79:51" pos:end="79:52">vq</name></expr></argument>, <argument pos:start="79:55" pos:end="79:77"><expr pos:start="79:55" pos:end="79:77"><name pos:start="79:55" pos:end="79:77">QVIRTIO_SCSI_TIMEOUT_US</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:73"><expr pos:start="83:5" pos:end="83:72"><name pos:start="83:5" pos:end="83:12">response</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:72"><name pos:start="83:16" pos:end="83:20">readb</name><argument_list pos:start="83:21" pos:end="83:72">(<argument pos:start="83:22" pos:end="83:71"><expr pos:start="83:22" pos:end="83:71"><name pos:start="83:22" pos:end="83:30">resp_addr</name> <operator pos:start="83:32" pos:end="83:32">+</operator> <call pos:start="83:34" pos:end="83:71"><name pos:start="83:34" pos:end="83:41">offsetof</name><argument_list pos:start="83:42" pos:end="83:71">(<argument pos:start="83:43" pos:end="83:60"><expr pos:start="83:43" pos:end="83:60"><name pos:start="83:43" pos:end="83:60">QVirtIOSCSICmdResp</name></expr></argument>, <argument pos:start="83:63" pos:end="83:70"><expr pos:start="83:63" pos:end="83:70"><name pos:start="83:63" pos:end="83:70">response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:36"><expr pos:start="87:5" pos:end="87:35"><call pos:start="87:5" pos:end="87:35"><name pos:start="87:5" pos:end="87:14">guest_free</name><argument_list pos:start="87:15" pos:end="87:35">(<argument pos:start="87:16" pos:end="87:24"><expr pos:start="87:16" pos:end="87:24"><name pos:start="87:16" pos:end="87:24"><name pos:start="87:16" pos:end="87:17">vs</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:24">alloc</name></name></expr></argument>, <argument pos:start="87:27" pos:end="87:34"><expr pos:start="87:27" pos:end="87:34"><name pos:start="87:27" pos:end="87:34">req_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:37"><expr pos:start="89:5" pos:end="89:36"><call pos:start="89:5" pos:end="89:36"><name pos:start="89:5" pos:end="89:14">guest_free</name><argument_list pos:start="89:15" pos:end="89:36">(<argument pos:start="89:16" pos:end="89:24"><expr pos:start="89:16" pos:end="89:24"><name pos:start="89:16" pos:end="89:24"><name pos:start="89:16" pos:end="89:17">vs</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:24">alloc</name></name></expr></argument>, <argument pos:start="89:27" pos:end="89:35"><expr pos:start="89:27" pos:end="89:35"><name pos:start="89:27" pos:end="89:35">resp_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><call pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:14">guest_free</name><argument_list pos:start="91:15" pos:end="91:39">(<argument pos:start="91:16" pos:end="91:24"><expr pos:start="91:16" pos:end="91:24"><name pos:start="91:16" pos:end="91:24"><name pos:start="91:16" pos:end="91:17">vs</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">alloc</name></name></expr></argument>, <argument pos:start="91:27" pos:end="91:38"><expr pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:38">data_in_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:41"><expr pos:start="93:5" pos:end="93:40"><call pos:start="93:5" pos:end="93:40"><name pos:start="93:5" pos:end="93:14">guest_free</name><argument_list pos:start="93:15" pos:end="93:40">(<argument pos:start="93:16" pos:end="93:24"><expr pos:start="93:16" pos:end="93:24"><name pos:start="93:16" pos:end="93:24"><name pos:start="93:16" pos:end="93:17">vs</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:24">alloc</name></name></expr></argument>, <argument pos:start="93:27" pos:end="93:39"><expr pos:start="93:27" pos:end="93:39"><name pos:start="93:27" pos:end="93:39">data_out_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:20">return <expr pos:start="95:12" pos:end="95:19"><name pos:start="95:12" pos:end="95:19">response</name></expr>;</return>

</block_content>}</block></function>
</unit>
