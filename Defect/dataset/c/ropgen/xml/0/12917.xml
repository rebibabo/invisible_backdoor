<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12917.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mpegps_read_seek</name><parameter_list pos:start="1:28" pos:end="3:64">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, 

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:44">stream_index</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:53">int64_t</name></type> <name pos:start="3:55" pos:end="3:63">timestamp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="185:1">{<block_content pos:start="7:5" pos:end="183:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:19">pos_min</name></decl>, <decl pos:start="7:22" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:22" pos:end="7:28">pos_max</name></decl>, <decl pos:start="7:31" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:31" pos:end="7:33">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">dts_min</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:22" pos:end="9:28">dts_max</name></decl>, <decl pos:start="9:31" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:31" pos:end="9:33">dts</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="18:0"><expr pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:13">timestamp</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <operator pos:start="13:17" pos:end="13:17">(</operator><name pos:start="13:18" pos:end="13:26">timestamp</name> <operator pos:start="13:28" pos:end="13:28">*</operator> <literal type="number" pos:start="13:30" pos:end="13:34">90000</literal><operator pos:start="13:35" pos:end="13:35">)</operator> <operator pos:start="13:37" pos:end="13:37">/</operator> <name pos:start="13:39" pos:end="13:50">AV_TIME_BASE</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="17:1" pos:end="17:17">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:17">DEBUG_SEEK</name></cpp:ifdef>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:70"><call pos:start="19:5" pos:end="19:70"><name pos:start="19:5" pos:end="19:10">printf</name><argument_list pos:start="19:11" pos:end="19:70">(<argument pos:start="19:12" pos:end="19:34"><expr pos:start="19:12" pos:end="19:34"><literal type="string" pos:start="19:12" pos:end="19:34">"read_seek: %d %0.3f\n"</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:48"><expr pos:start="19:37" pos:end="19:48"><name pos:start="19:37" pos:end="19:48">stream_index</name></expr></argument>, <argument pos:start="19:51" pos:end="19:69"><expr pos:start="19:51" pos:end="19:69"><name pos:start="19:51" pos:end="19:59">timestamp</name> <operator pos:start="19:61" pos:end="19:61">/</operator> <literal type="number" pos:start="19:63" pos:end="19:69">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="25:5" pos:end="25:73">/* XXX: find stream_index by looking at the first PES packet found */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:20">stream_index</name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>)</condition> <block pos:start="27:27" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:22">

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:20">stream_index</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:43"><name pos:start="29:24" pos:end="29:40">find_stream_index</name><argument_list pos:start="29:41" pos:end="29:43">(<argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><name pos:start="29:42" pos:end="29:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:29">(<expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:24">stream_index</name> <operator pos:start="31:26" pos:end="31:26">&lt;</operator> <literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:16"><expr pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:11">pos_min</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:60"><expr pos:start="39:5" pos:end="39:59"><name pos:start="39:5" pos:end="39:11">dts_min</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:59"><name pos:start="39:15" pos:end="39:29">mpegps_read_dts</name><argument_list pos:start="39:30" pos:end="39:59">(<argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">s</name></expr></argument>, <argument pos:start="39:34" pos:end="39:45"><expr pos:start="39:34" pos:end="39:45"><name pos:start="39:34" pos:end="39:45">stream_index</name></expr></argument>, <argument pos:start="39:48" pos:end="39:55"><expr pos:start="39:48" pos:end="39:55"><operator pos:start="39:48" pos:end="39:48">&amp;</operator><name pos:start="39:49" pos:end="39:55">pos_min</name></expr></argument>, <argument pos:start="39:58" pos:end="39:58"><expr pos:start="39:58" pos:end="39:58"><literal type="number" pos:start="39:58" pos:end="39:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:15">dts_min</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <name pos:start="41:20" pos:end="41:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="41:36" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:18">

        <comment type="block" pos:start="43:9" pos:end="45:30">/* we can reach this case only if no PTS are present in

           the whole stream */</comment>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:11">pos_max</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:46"><name pos:start="51:15" pos:end="51:26">url_filesize</name><argument_list pos:start="51:27" pos:end="51:46">(<argument pos:start="51:28" pos:end="51:45"><expr pos:start="51:28" pos:end="51:45"><call pos:start="51:28" pos:end="51:45"><name pos:start="51:28" pos:end="51:37">url_fileno</name><argument_list pos:start="51:38" pos:end="51:45">(<argument pos:start="51:39" pos:end="51:44"><expr pos:start="51:39" pos:end="51:44"><operator pos:start="51:39" pos:end="51:39">&amp;</operator><name pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:40">s</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="51:48" pos:end="51:48">-</operator> <literal type="number" pos:start="51:50" pos:end="51:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:60"><expr pos:start="53:5" pos:end="53:59"><name pos:start="53:5" pos:end="53:11">dts_max</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:59"><name pos:start="53:15" pos:end="53:29">mpegps_read_dts</name><argument_list pos:start="53:30" pos:end="53:59">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">s</name></expr></argument>, <argument pos:start="53:34" pos:end="53:45"><expr pos:start="53:34" pos:end="53:45"><name pos:start="53:34" pos:end="53:45">stream_index</name></expr></argument>, <argument pos:start="53:48" pos:end="53:55"><expr pos:start="53:48" pos:end="53:55"><operator pos:start="53:48" pos:end="53:48">&amp;</operator><name pos:start="53:49" pos:end="53:55">pos_max</name></expr></argument>, <argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><literal type="number" pos:start="53:58" pos:end="53:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <while pos:start="57:5" pos:end="157:5">while <condition pos:start="57:11" pos:end="57:30">(<expr pos:start="57:12" pos:end="57:29"><name pos:start="57:12" pos:end="57:18">pos_min</name> <operator pos:start="57:20" pos:end="57:21">&lt;=</operator> <name pos:start="57:23" pos:end="57:29">pos_max</name></expr>)</condition> <block pos:start="57:32" pos:end="157:5">{<block_content pos:start="61:9" pos:end="155:9">

<cpp:ifdef pos:start="59:1" pos:end="59:17">#<cpp:directive pos:start="59:2" pos:end="59:6">ifdef</cpp:directive> <name pos:start="59:8" pos:end="59:17">DEBUG_SEEK</name></cpp:ifdef>

        <expr_stmt pos:start="61:9" pos:end="68:0"><expr pos:start="61:9" pos:end="65:52"><call pos:start="61:9" pos:end="65:52"><name pos:start="61:9" pos:end="61:14">printf</name><argument_list pos:start="61:15" pos:end="65:52">(<argument pos:start="61:16" pos:end="61:76"><expr pos:start="61:16" pos:end="61:76"><literal type="string" pos:start="61:16" pos:end="61:76">"pos_min=0x%llx pos_max=0x%llx dts_min=%0.3f dts_max=%0.3f\n"</literal></expr></argument>, 

               <argument pos:start="63:16" pos:end="63:22"><expr pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:22">pos_min</name></expr></argument>, <argument pos:start="63:25" pos:end="63:31"><expr pos:start="63:25" pos:end="63:31"><name pos:start="63:25" pos:end="63:31">pos_max</name></expr></argument>,

               <argument pos:start="65:16" pos:end="65:32"><expr pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:22">dts_min</name> <operator pos:start="65:24" pos:end="65:24">/</operator> <literal type="number" pos:start="65:26" pos:end="65:32">90000.0</literal></expr></argument>, <argument pos:start="65:35" pos:end="65:51"><expr pos:start="65:35" pos:end="65:51"><name pos:start="65:35" pos:end="65:41">dts_max</name> <operator pos:start="65:43" pos:end="65:43">/</operator> <literal type="number" pos:start="65:45" pos:end="65:51">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="69:9" pos:end="94:0"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:33">(<expr pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:21">timestamp</name> <operator pos:start="69:23" pos:end="69:24">&lt;=</operator> <name pos:start="69:26" pos:end="69:32">dts_min</name></expr>)</condition> <block pos:start="69:35" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:23">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:15">pos</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:25">pos_min</name></expr>;</expr_stmt>

            <goto pos:start="73:13" pos:end="73:23">goto <name pos:start="73:18" pos:end="73:22">found</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="75:11" pos:end="81:9">else if <condition pos:start="75:19" pos:end="75:40">(<expr pos:start="75:20" pos:end="75:39"><name pos:start="75:20" pos:end="75:28">timestamp</name> <operator pos:start="75:30" pos:end="75:31">&gt;=</operator> <name pos:start="75:33" pos:end="75:39">dts_max</name></expr>)</condition> <block pos:start="75:42" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:23">

            <expr_stmt pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:15">pos</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:25">pos_max</name></expr>;</expr_stmt>

            <goto pos:start="79:13" pos:end="79:23">goto <name pos:start="79:18" pos:end="79:22">found</name>;</goto>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="94:0">else <block pos:start="81:16" pos:end="94:0">{<block_content pos:start="85:13" pos:end="89:67">

            <comment type="block" pos:start="83:13" pos:end="83:62">/* interpolate position (better than dichotomy) */</comment>

            <expr_stmt pos:start="85:13" pos:end="89:67"><expr pos:start="85:13" pos:end="89:66"><name pos:start="85:13" pos:end="85:15">pos</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">(</operator><name pos:start="85:20" pos:end="85:26">int64_t</name><operator pos:start="85:27" pos:end="85:27">)</operator><operator pos:start="85:28" pos:end="85:28">(</operator><operator pos:start="85:29" pos:end="85:29">(</operator><name pos:start="85:30" pos:end="85:35">double</name><operator pos:start="85:36" pos:end="85:36">)</operator><operator pos:start="85:37" pos:end="85:37">(</operator><name pos:start="85:38" pos:end="85:44">pos_max</name> <operator pos:start="85:46" pos:end="85:46">-</operator> <name pos:start="85:48" pos:end="85:54">pos_min</name><operator pos:start="85:55" pos:end="85:55">)</operator> <operator pos:start="85:57" pos:end="85:57">*</operator> 

                            <operator pos:start="87:29" pos:end="87:29">(</operator><name pos:start="87:30" pos:end="87:35">double</name><operator pos:start="87:36" pos:end="87:36">)</operator><operator pos:start="87:37" pos:end="87:37">(</operator><name pos:start="87:38" pos:end="87:46">timestamp</name> <operator pos:start="87:48" pos:end="87:48">-</operator> <name pos:start="87:50" pos:end="87:56">dts_min</name><operator pos:start="87:57" pos:end="87:57">)</operator> <operator pos:start="87:59" pos:end="87:59">/</operator>

                            <operator pos:start="89:29" pos:end="89:29">(</operator><name pos:start="89:30" pos:end="89:35">double</name><operator pos:start="89:36" pos:end="89:36">)</operator><operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:44">dts_max</name> <operator pos:start="89:46" pos:end="89:46">-</operator> <name pos:start="89:48" pos:end="89:54">dts_min</name><operator pos:start="89:55" pos:end="89:55">)</operator><operator pos:start="89:56" pos:end="89:56">)</operator> <operator pos:start="89:58" pos:end="89:58">+</operator> <name pos:start="89:60" pos:end="89:66">pos_min</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="93:1" pos:end="93:17">#<cpp:directive pos:start="93:2" pos:end="93:6">ifdef</cpp:directive> <name pos:start="93:8" pos:end="93:17">DEBUG_SEEK</name></cpp:ifdef>

        <expr_stmt pos:start="95:9" pos:end="98:0"><expr pos:start="95:9" pos:end="95:35"><call pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:14">printf</name><argument_list pos:start="95:15" pos:end="95:35">(<argument pos:start="95:16" pos:end="95:29"><expr pos:start="95:16" pos:end="95:29"><literal type="string" pos:start="95:16" pos:end="95:29">"pos=0x%llx\n"</literal></expr></argument>, <argument pos:start="95:32" pos:end="95:34"><expr pos:start="95:32" pos:end="95:34"><name pos:start="95:32" pos:end="95:34">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="99:9" pos:end="99:37">/* read the next timestamp */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:11">dts</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:55"><name pos:start="101:15" pos:end="101:29">mpegps_read_dts</name><argument_list pos:start="101:30" pos:end="101:55">(<argument pos:start="101:31" pos:end="101:31"><expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">s</name></expr></argument>, <argument pos:start="101:34" pos:end="101:45"><expr pos:start="101:34" pos:end="101:45"><name pos:start="101:34" pos:end="101:45">stream_index</name></expr></argument>, <argument pos:start="101:48" pos:end="101:51"><expr pos:start="101:48" pos:end="101:51"><operator pos:start="101:48" pos:end="101:48">&amp;</operator><name pos:start="101:49" pos:end="101:51">pos</name></expr></argument>, <argument pos:start="101:54" pos:end="101:54"><expr pos:start="101:54" pos:end="101:54"><literal type="number" pos:start="101:54" pos:end="101:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="103:9" pos:end="103:35">/* check if we are lucky */</comment>

        <if_stmt pos:start="105:9" pos:end="155:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:34">(<expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:15">dts</name> <operator pos:start="105:17" pos:end="105:18">==</operator> <name pos:start="105:20" pos:end="105:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="105:36" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:23">

            <comment type="block" pos:start="107:13" pos:end="107:37">/* should never happen */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:26"><expr pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:15">pos</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:25">pos_min</name></expr>;</expr_stmt>

            <goto pos:start="111:13" pos:end="111:23">goto <name pos:start="111:18" pos:end="111:22">found</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="113:11" pos:end="117:9">else if <condition pos:start="113:19" pos:end="113:36">(<expr pos:start="113:20" pos:end="113:35"><name pos:start="113:20" pos:end="113:28">timestamp</name> <operator pos:start="113:30" pos:end="113:31">==</operator> <name pos:start="113:33" pos:end="113:35">dts</name></expr>)</condition> <block pos:start="113:38" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:23">

            <goto pos:start="115:13" pos:end="115:23">goto <name pos:start="115:18" pos:end="115:22">found</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="137:9">else if <condition pos:start="117:19" pos:end="117:35">(<expr pos:start="117:20" pos:end="117:34"><name pos:start="117:20" pos:end="117:28">timestamp</name> <operator pos:start="117:30" pos:end="117:30">&lt;</operator> <name pos:start="117:32" pos:end="117:34">dts</name></expr>)</condition> <block pos:start="117:37" pos:end="137:9">{<block_content pos:start="119:13" pos:end="135:13">

            <expr_stmt pos:start="119:13" pos:end="119:26"><expr pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:19">pos_max</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:25">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:68"><expr pos:start="121:13" pos:end="121:67"><name pos:start="121:13" pos:end="121:19">dts_max</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="121:67"><name pos:start="121:23" pos:end="121:37">mpegps_read_dts</name><argument_list pos:start="121:38" pos:end="121:67">(<argument pos:start="121:39" pos:end="121:39"><expr pos:start="121:39" pos:end="121:39"><name pos:start="121:39" pos:end="121:39">s</name></expr></argument>, <argument pos:start="121:42" pos:end="121:53"><expr pos:start="121:42" pos:end="121:53"><name pos:start="121:42" pos:end="121:53">stream_index</name></expr></argument>, <argument pos:start="121:56" pos:end="121:63"><expr pos:start="121:56" pos:end="121:63"><operator pos:start="121:56" pos:end="121:56">&amp;</operator><name pos:start="121:57" pos:end="121:63">pos_max</name></expr></argument>, <argument pos:start="121:66" pos:end="121:66"><expr pos:start="121:66" pos:end="121:66"><literal type="number" pos:start="121:66" pos:end="121:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="135:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:42">(<expr pos:start="123:17" pos:end="123:41"><name pos:start="123:17" pos:end="123:23">dts_max</name> <operator pos:start="123:25" pos:end="123:26">==</operator> <name pos:start="123:28" pos:end="123:41">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="123:44" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:22">

                <comment type="block" pos:start="125:17" pos:end="125:41">/* should never happen */</comment>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="129:15" pos:end="135:13">else if <condition pos:start="129:23" pos:end="129:44">(<expr pos:start="129:24" pos:end="129:43"><name pos:start="129:24" pos:end="129:32">timestamp</name> <operator pos:start="129:34" pos:end="129:35">&gt;=</operator> <name pos:start="129:37" pos:end="129:43">dts_max</name></expr>)</condition> <block pos:start="129:46" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:27">

                <expr_stmt pos:start="131:17" pos:end="131:30"><expr pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:19">pos</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:29">pos_max</name></expr>;</expr_stmt>

                <goto pos:start="133:17" pos:end="133:27">goto <name pos:start="133:22" pos:end="133:26">found</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="155:9">else <block pos:start="137:16" pos:end="155:9">{<block_content pos:start="139:13" pos:end="153:13">

            <expr_stmt pos:start="139:13" pos:end="139:30"><expr pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:19">pos_min</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:25">pos</name> <operator pos:start="139:27" pos:end="139:27">+</operator> <literal type="number" pos:start="139:29" pos:end="139:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:68"><expr pos:start="141:13" pos:end="141:67"><name pos:start="141:13" pos:end="141:19">dts_min</name> <operator pos:start="141:21" pos:end="141:21">=</operator> <call pos:start="141:23" pos:end="141:67"><name pos:start="141:23" pos:end="141:37">mpegps_read_dts</name><argument_list pos:start="141:38" pos:end="141:67">(<argument pos:start="141:39" pos:end="141:39"><expr pos:start="141:39" pos:end="141:39"><name pos:start="141:39" pos:end="141:39">s</name></expr></argument>, <argument pos:start="141:42" pos:end="141:53"><expr pos:start="141:42" pos:end="141:53"><name pos:start="141:42" pos:end="141:53">stream_index</name></expr></argument>, <argument pos:start="141:56" pos:end="141:63"><expr pos:start="141:56" pos:end="141:63"><operator pos:start="141:56" pos:end="141:56">&amp;</operator><name pos:start="141:57" pos:end="141:63">pos_min</name></expr></argument>, <argument pos:start="141:66" pos:end="141:66"><expr pos:start="141:66" pos:end="141:66"><literal type="number" pos:start="141:66" pos:end="141:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="153:13"><if pos:start="143:13" pos:end="149:13">if <condition pos:start="143:16" pos:end="143:42">(<expr pos:start="143:17" pos:end="143:41"><name pos:start="143:17" pos:end="143:23">dts_min</name> <operator pos:start="143:25" pos:end="143:26">==</operator> <name pos:start="143:28" pos:end="143:41">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="143:44" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:27">

                <comment type="block" pos:start="145:17" pos:end="145:41">/* should never happen */</comment>

                <goto pos:start="147:17" pos:end="147:27">goto <name pos:start="147:22" pos:end="147:26">found</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="149:15" pos:end="153:13">else if <condition pos:start="149:23" pos:end="149:44">(<expr pos:start="149:24" pos:end="149:43"><name pos:start="149:24" pos:end="149:32">timestamp</name> <operator pos:start="149:34" pos:end="149:35">&lt;=</operator> <name pos:start="149:37" pos:end="149:43">dts_min</name></expr>)</condition> <block pos:start="149:46" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:27">

                <goto pos:start="151:17" pos:end="151:27">goto <name pos:start="151:22" pos:end="151:26">found</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="159:5" pos:end="159:18"><expr pos:start="159:5" pos:end="159:17"><name pos:start="159:5" pos:end="159:7">pos</name> <operator pos:start="159:9" pos:end="159:9">=</operator> <name pos:start="159:11" pos:end="159:17">pos_min</name></expr>;</expr_stmt>

 <label pos:start="161:2" pos:end="164:0"><name pos:start="161:2" pos:end="161:6">found</name>:</label>

<cpp:ifdef pos:start="163:1" pos:end="163:17">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:17">DEBUG_SEEK</name></cpp:ifdef>

    <expr_stmt pos:start="165:5" pos:end="165:18"><expr pos:start="165:5" pos:end="165:17"><name pos:start="165:5" pos:end="165:11">pos_min</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <name pos:start="165:15" pos:end="165:17">pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:60"><expr pos:start="167:5" pos:end="167:59"><name pos:start="167:5" pos:end="167:11">dts_min</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <call pos:start="167:15" pos:end="167:59"><name pos:start="167:15" pos:end="167:29">mpegps_read_dts</name><argument_list pos:start="167:30" pos:end="167:59">(<argument pos:start="167:31" pos:end="167:31"><expr pos:start="167:31" pos:end="167:31"><name pos:start="167:31" pos:end="167:31">s</name></expr></argument>, <argument pos:start="167:34" pos:end="167:45"><expr pos:start="167:34" pos:end="167:45"><name pos:start="167:34" pos:end="167:45">stream_index</name></expr></argument>, <argument pos:start="167:48" pos:end="167:55"><expr pos:start="167:48" pos:end="167:55"><operator pos:start="167:48" pos:end="167:48">&amp;</operator><name pos:start="167:49" pos:end="167:55">pos_min</name></expr></argument>, <argument pos:start="167:58" pos:end="167:58"><expr pos:start="167:58" pos:end="167:58"><literal type="number" pos:start="167:58" pos:end="167:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:14"><expr pos:start="169:5" pos:end="169:13"><name pos:start="169:5" pos:end="169:11">pos_min</name><operator pos:start="169:12" pos:end="169:13">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:60"><expr pos:start="171:5" pos:end="171:59"><name pos:start="171:5" pos:end="171:11">dts_max</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:59"><name pos:start="171:15" pos:end="171:29">mpegps_read_dts</name><argument_list pos:start="171:30" pos:end="171:59">(<argument pos:start="171:31" pos:end="171:31"><expr pos:start="171:31" pos:end="171:31"><name pos:start="171:31" pos:end="171:31">s</name></expr></argument>, <argument pos:start="171:34" pos:end="171:45"><expr pos:start="171:34" pos:end="171:45"><name pos:start="171:34" pos:end="171:45">stream_index</name></expr></argument>, <argument pos:start="171:48" pos:end="171:55"><expr pos:start="171:48" pos:end="171:55"><operator pos:start="171:48" pos:end="171:48">&amp;</operator><name pos:start="171:49" pos:end="171:55">pos_min</name></expr></argument>, <argument pos:start="171:58" pos:end="171:58"><expr pos:start="171:58" pos:end="171:58"><literal type="number" pos:start="171:58" pos:end="171:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="178:0"><expr pos:start="173:5" pos:end="175:74"><call pos:start="173:5" pos:end="175:74"><name pos:start="173:5" pos:end="173:10">printf</name><argument_list pos:start="173:11" pos:end="175:74">(<argument pos:start="173:12" pos:end="173:45"><expr pos:start="173:12" pos:end="173:45"><literal type="string" pos:start="173:12" pos:end="173:45">"pos=0x%llx %0.3f&lt;=%0.3f&lt;=%0.3f\n"</literal></expr></argument>, 

           <argument pos:start="175:12" pos:end="175:14"><expr pos:start="175:12" pos:end="175:14"><name pos:start="175:12" pos:end="175:14">pos</name></expr></argument>, <argument pos:start="175:17" pos:end="175:33"><expr pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:23">dts_min</name> <operator pos:start="175:25" pos:end="175:25">/</operator> <literal type="number" pos:start="175:27" pos:end="175:33">90000.0</literal></expr></argument>, <argument pos:start="175:36" pos:end="175:54"><expr pos:start="175:36" pos:end="175:54"><name pos:start="175:36" pos:end="175:44">timestamp</name> <operator pos:start="175:46" pos:end="175:46">/</operator> <literal type="number" pos:start="175:48" pos:end="175:54">90000.0</literal></expr></argument>, <argument pos:start="175:57" pos:end="175:73"><expr pos:start="175:57" pos:end="175:73"><name pos:start="175:57" pos:end="175:63">dts_max</name> <operator pos:start="175:65" pos:end="175:65">/</operator> <literal type="number" pos:start="175:67" pos:end="175:73">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="177:1" pos:end="177:6">#<cpp:directive pos:start="177:2" pos:end="177:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="179:5" pos:end="179:21">/* do the seek */</comment>

    <expr_stmt pos:start="181:5" pos:end="181:37"><expr pos:start="181:5" pos:end="181:36"><call pos:start="181:5" pos:end="181:36"><name pos:start="181:5" pos:end="181:13">url_fseek</name><argument_list pos:start="181:14" pos:end="181:36">(<argument pos:start="181:15" pos:end="181:20"><expr pos:start="181:15" pos:end="181:20"><operator pos:start="181:15" pos:end="181:15">&amp;</operator><name pos:start="181:16" pos:end="181:20"><name pos:start="181:16" pos:end="181:16">s</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:20">pb</name></name></expr></argument>, <argument pos:start="181:23" pos:end="181:25"><expr pos:start="181:23" pos:end="181:25"><name pos:start="181:23" pos:end="181:25">pos</name></expr></argument>, <argument pos:start="181:28" pos:end="181:35"><expr pos:start="181:28" pos:end="181:35"><name pos:start="181:28" pos:end="181:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
