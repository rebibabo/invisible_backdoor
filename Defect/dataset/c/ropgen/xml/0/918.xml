<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/918.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:42">ff_h264_decode_ref_pic_list_reordering</name><parameter_list pos:start="1:43" pos:end="1:80">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:79"><decl pos:start="1:60" pos:end="1:79"><type pos:start="1:60" pos:end="1:79"><name pos:start="1:60" pos:end="1:75">H264SliceContext</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:79">sl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="259:1">{<block_content pos:start="5:5" pos:end="257:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">list</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">index</name></decl>, <decl pos:start="5:22" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:34">pic_structure</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">print_short_term</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">print_long_term</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="219:5">for <control pos:start="15:9" pos:end="15:49">(<init pos:start="15:10" pos:end="15:18"><expr pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:13">list</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>;</init> <condition pos:start="15:20" pos:end="15:41"><expr pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:23">list</name> <operator pos:start="15:25" pos:end="15:25">&lt;</operator> <name pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:28">sl</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:40">list_count</name></name></expr>;</condition> <incr pos:start="15:43" pos:end="15:48"><expr pos:start="15:43" pos:end="15:48"><name pos:start="15:43" pos:end="15:46">list</name><operator pos:start="15:47" pos:end="15:48">++</operator></expr></incr>)</control> <block pos:start="15:51" pos:end="219:5">{<block_content pos:start="17:9" pos:end="217:9">

        <expr_stmt pos:start="17:9" pos:end="17:112"><expr pos:start="17:9" pos:end="17:111"><call pos:start="17:9" pos:end="17:111"><name pos:start="17:9" pos:end="17:14">memcpy</name><argument_list pos:start="17:15" pos:end="17:111">(<argument pos:start="17:16" pos:end="17:33"><expr pos:start="17:16" pos:end="17:33"><name pos:start="17:16" pos:end="17:33"><name pos:start="17:16" pos:end="17:17">sl</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">ref_list</name><index pos:start="17:28" pos:end="17:33">[<expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">list</name></expr>]</index></name></expr></argument>, <argument pos:start="17:36" pos:end="17:60"><expr pos:start="17:36" pos:end="17:60"><name pos:start="17:36" pos:end="17:60"><name pos:start="17:36" pos:end="17:36">h</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:54">default_ref_list</name><index pos:start="17:55" pos:end="17:60">[<expr pos:start="17:56" pos:end="17:59"><name pos:start="17:56" pos:end="17:59">list</name></expr>]</index></name></expr></argument>, <argument pos:start="17:63" pos:end="17:110"><expr pos:start="17:63" pos:end="17:110"><name pos:start="17:63" pos:end="17:81"><name pos:start="17:63" pos:end="17:64">sl</name><operator pos:start="17:65" pos:end="17:66">-&gt;</operator><name pos:start="17:67" pos:end="17:75">ref_count</name><index pos:start="17:76" pos:end="17:81">[<expr pos:start="17:77" pos:end="17:80"><name pos:start="17:77" pos:end="17:80">list</name></expr>]</index></name> <operator pos:start="17:83" pos:end="17:83">*</operator> <sizeof pos:start="17:85" pos:end="17:110">sizeof<argument_list pos:start="17:91" pos:end="17:110">(<argument pos:start="17:92" pos:end="17:109"><expr pos:start="17:92" pos:end="17:109"><name pos:start="17:92" pos:end="17:109"><name pos:start="17:92" pos:end="17:93">sl</name><operator pos:start="17:94" pos:end="17:95">-&gt;</operator><name pos:start="17:96" pos:end="17:103">ref_list</name><index pos:start="17:104" pos:end="17:106">[<expr pos:start="17:105" pos:end="17:105"><literal type="number" pos:start="17:105" pos:end="17:105">0</literal></expr>]</index><index pos:start="17:107" pos:end="17:109">[<expr pos:start="17:108" pos:end="17:108"><literal type="number" pos:start="17:108" pos:end="17:108">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="21:9" pos:end="217:9"><if pos:start="21:9" pos:end="217:9">if <condition pos:start="21:12" pos:end="21:31">(<expr pos:start="21:13" pos:end="21:30"><call pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:21">get_bits1</name><argument_list pos:start="21:22" pos:end="21:30">(<argument pos:start="21:23" pos:end="21:29"><expr pos:start="21:23" pos:end="21:29"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:25">sl</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:33" pos:end="217:9">{<block_content pos:start="23:13" pos:end="215:13">    <comment type="line" pos:start="21:38" pos:end="21:76">// ref_pic_list_modification_flag_l[01]</comment>

            <decl_stmt pos:start="23:13" pos:end="23:39"><decl pos:start="23:13" pos:end="23:38"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:20">pred</name> <init pos:start="23:22" pos:end="23:38">= <expr pos:start="23:24" pos:end="23:38"><name pos:start="23:24" pos:end="23:38"><name pos:start="23:24" pos:end="23:24">h</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:38">curr_pic_num</name></name></expr></init></decl>;</decl_stmt>



            <for pos:start="27:13" pos:end="215:13">for <control pos:start="27:17" pos:end="27:38">(<init pos:start="27:18" pos:end="27:27"><expr pos:start="27:18" pos:end="27:26"><name pos:start="27:18" pos:end="27:22">index</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>;</init> <condition pos:start="27:29" pos:end="27:29">;</condition> <incr pos:start="27:31" pos:end="27:37"><expr pos:start="27:31" pos:end="27:37"><name pos:start="27:31" pos:end="27:35">index</name><operator pos:start="27:36" pos:end="27:37">++</operator></expr></incr>)</control> <block pos:start="27:40" pos:end="215:13">{<block_content pos:start="29:17" pos:end="213:17">

                <decl_stmt pos:start="29:17" pos:end="29:86"><decl pos:start="29:17" pos:end="29:85"><type pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:24">unsigned</name> <name pos:start="29:26" pos:end="29:28">int</name></type> <name pos:start="29:30" pos:end="29:57">modification_of_pic_nums_idc</name> <init pos:start="29:59" pos:end="29:85">= <expr pos:start="29:61" pos:end="29:85"><call pos:start="29:61" pos:end="29:85"><name pos:start="29:61" pos:end="29:76">get_ue_golomb_31</name><argument_list pos:start="29:77" pos:end="29:85">(<argument pos:start="29:78" pos:end="29:84"><expr pos:start="29:78" pos:end="29:84"><operator pos:start="29:78" pos:end="29:78">&amp;</operator><name pos:start="29:79" pos:end="29:84"><name pos:start="29:79" pos:end="29:80">sl</name><operator pos:start="29:81" pos:end="29:82">-&gt;</operator><name pos:start="29:83" pos:end="29:84">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="31:17" pos:end="31:36"><decl pos:start="31:17" pos:end="31:35"><type pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:24">unsigned</name> <name pos:start="31:26" pos:end="31:28">int</name></type> <name pos:start="31:30" pos:end="31:35">pic_id</name></decl>;</decl_stmt>

                <decl_stmt pos:start="33:17" pos:end="33:22"><decl pos:start="33:17" pos:end="33:21"><type pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">int</name></type> <name pos:start="33:21" pos:end="33:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:40"><decl pos:start="35:17" pos:end="35:39"><type pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:27">H264Picture</name> <modifier pos:start="35:29" pos:end="35:29">*</modifier></type><name pos:start="35:30" pos:end="35:32">ref</name> <init pos:start="35:34" pos:end="35:39">= <expr pos:start="35:36" pos:end="35:39"><name pos:start="35:36" pos:end="35:39">NULL</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="39:17" pos:end="41:26"><if pos:start="39:17" pos:end="41:26">if <condition pos:start="39:20" pos:end="39:54">(<expr pos:start="39:21" pos:end="39:53"><name pos:start="39:21" pos:end="39:48">modification_of_pic_nums_idc</name> <operator pos:start="39:50" pos:end="39:51">==</operator> <literal type="number" pos:start="39:53" pos:end="39:53">3</literal></expr>)</condition><block type="pseudo" pos:start="41:21" pos:end="41:26"><block_content pos:start="41:21" pos:end="41:26">

                    <break pos:start="41:21" pos:end="41:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="45:17" pos:end="51:17"><if pos:start="45:17" pos:end="51:17">if <condition pos:start="45:20" pos:end="45:49">(<expr pos:start="45:21" pos:end="45:48"><name pos:start="45:21" pos:end="45:25">index</name> <operator pos:start="45:27" pos:end="45:28">&gt;=</operator> <name pos:start="45:30" pos:end="45:48"><name pos:start="45:30" pos:end="45:31">sl</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:42">ref_count</name><index pos:start="45:43" pos:end="45:48">[<expr pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">list</name></expr>]</index></name></expr>)</condition> <block pos:start="45:51" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:30">

                    <expr_stmt pos:start="47:21" pos:end="47:81"><expr pos:start="47:21" pos:end="47:80"><call pos:start="47:21" pos:end="47:80"><name pos:start="47:21" pos:end="47:26">av_log</name><argument_list pos:start="47:27" pos:end="47:80">(<argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:28">h</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:35">avctx</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><name pos:start="47:38" pos:end="47:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:52" pos:end="47:79"><expr pos:start="47:52" pos:end="47:79"><literal type="string" pos:start="47:52" pos:end="47:79">"reference count overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="49:21" pos:end="49:30">return <expr pos:start="49:28" pos:end="49:29"><operator pos:start="49:28" pos:end="49:28">-</operator><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <switch pos:start="55:17" pos:end="173:17">switch <condition pos:start="55:24" pos:end="55:53">(<expr pos:start="55:25" pos:end="55:52"><name pos:start="55:25" pos:end="55:52">modification_of_pic_nums_idc</name></expr>)</condition> <block pos:start="55:55" pos:end="173:17">{<block_content pos:start="57:17" pos:end="171:47">

                <case pos:start="57:17" pos:end="57:23">case <expr pos:start="57:22" pos:end="57:22"><literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>:</case>

                <case pos:start="59:17" pos:end="59:23">case <expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr>:</case> <block pos:start="59:25" pos:end="117:17">{<block_content pos:start="61:21" pos:end="115:26">

                    <decl_stmt pos:start="61:21" pos:end="61:85"><decl pos:start="61:21" pos:end="61:84"><type pos:start="61:21" pos:end="61:38"><specifier pos:start="61:21" pos:end="61:25">const</specifier> <name pos:start="61:27" pos:end="61:34">unsigned</name> <name pos:start="61:36" pos:end="61:38">int</name></type> <name pos:start="61:40" pos:end="61:55">abs_diff_pic_num</name> <init pos:start="61:57" pos:end="61:84">= <expr pos:start="61:59" pos:end="61:84"><call pos:start="61:59" pos:end="61:80"><name pos:start="61:59" pos:end="61:71">get_ue_golomb</name><argument_list pos:start="61:72" pos:end="61:80">(<argument pos:start="61:73" pos:end="61:79"><expr pos:start="61:73" pos:end="61:79"><operator pos:start="61:73" pos:end="61:73">&amp;</operator><name pos:start="61:74" pos:end="61:79"><name pos:start="61:74" pos:end="61:75">sl</name><operator pos:start="61:76" pos:end="61:77">-&gt;</operator><name pos:start="61:78" pos:end="61:79">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:82" pos:end="61:82">+</operator> <literal type="number" pos:start="61:84" pos:end="61:84">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="63:21" pos:end="63:34"><decl pos:start="63:21" pos:end="63:33"><type pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">int</name></type> <name pos:start="63:25" pos:end="63:33">frame_num</name></decl>;</decl_stmt>



                    <if_stmt pos:start="67:21" pos:end="75:21"><if pos:start="67:21" pos:end="75:21">if <condition pos:start="67:24" pos:end="67:58">(<expr pos:start="67:25" pos:end="67:57"><name pos:start="67:25" pos:end="67:40">abs_diff_pic_num</name> <operator pos:start="67:42" pos:end="67:42">&gt;</operator> <name pos:start="67:44" pos:end="67:57"><name pos:start="67:44" pos:end="67:44">h</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:57">max_pic_num</name></name></expr>)</condition> <block pos:start="67:60" pos:end="75:21">{<block_content pos:start="69:25" pos:end="73:51">

                        <expr_stmt pos:start="69:25" pos:end="71:62"><expr pos:start="69:25" pos:end="71:61"><call pos:start="69:25" pos:end="71:61"><name pos:start="69:25" pos:end="69:30">av_log</name><argument_list pos:start="69:31" pos:end="71:61">(<argument pos:start="69:32" pos:end="69:39"><expr pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:32">h</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:39">avctx</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:53"><expr pos:start="69:42" pos:end="69:53"><name pos:start="69:42" pos:end="69:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="71:32" pos:end="71:60"><expr pos:start="71:32" pos:end="71:60"><literal type="string" pos:start="71:32" pos:end="71:60">"abs_diff_pic_num overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="73:25" pos:end="73:51">return <expr pos:start="73:32" pos:end="73:50"><name pos:start="73:32" pos:end="73:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="79:21" pos:end="85:49"><if pos:start="79:21" pos:end="81:49">if <condition pos:start="79:24" pos:end="79:58">(<expr pos:start="79:25" pos:end="79:57"><name pos:start="79:25" pos:end="79:52">modification_of_pic_nums_idc</name> <operator pos:start="79:54" pos:end="79:55">==</operator> <literal type="number" pos:start="79:57" pos:end="79:57">0</literal></expr>)</condition><block type="pseudo" pos:start="81:25" pos:end="81:49"><block_content pos:start="81:25" pos:end="81:49">

                        <expr_stmt pos:start="81:25" pos:end="81:49"><expr pos:start="81:25" pos:end="81:48"><name pos:start="81:25" pos:end="81:28">pred</name> <operator pos:start="81:30" pos:end="81:31">-=</operator> <name pos:start="81:33" pos:end="81:48">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="83:21" pos:end="85:49">else<block type="pseudo" pos:start="85:25" pos:end="85:49"><block_content pos:start="85:25" pos:end="85:49">

                        <expr_stmt pos:start="85:25" pos:end="85:49"><expr pos:start="85:25" pos:end="85:48"><name pos:start="85:25" pos:end="85:28">pred</name> <operator pos:start="85:30" pos:end="85:31">+=</operator> <name pos:start="85:33" pos:end="85:48">abs_diff_pic_num</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:47"><expr pos:start="87:21" pos:end="87:46"><name pos:start="87:21" pos:end="87:24">pred</name> <operator pos:start="87:26" pos:end="87:27">&amp;=</operator> <name pos:start="87:29" pos:end="87:42"><name pos:start="87:29" pos:end="87:29">h</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:42">max_pic_num</name></name> <operator pos:start="87:44" pos:end="87:44">-</operator> <literal type="number" pos:start="87:46" pos:end="87:46">1</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="91:21" pos:end="91:73"><expr pos:start="91:21" pos:end="91:72"><name pos:start="91:21" pos:end="91:29">frame_num</name> <operator pos:start="91:31" pos:end="91:31">=</operator> <call pos:start="91:33" pos:end="91:72"><name pos:start="91:33" pos:end="91:47">pic_num_extract</name><argument_list pos:start="91:48" pos:end="91:72">(<argument pos:start="91:49" pos:end="91:49"><expr pos:start="91:49" pos:end="91:49"><name pos:start="91:49" pos:end="91:49">h</name></expr></argument>, <argument pos:start="91:52" pos:end="91:55"><expr pos:start="91:52" pos:end="91:55"><name pos:start="91:52" pos:end="91:55">pred</name></expr></argument>, <argument pos:start="91:58" pos:end="91:71"><expr pos:start="91:58" pos:end="91:71"><operator pos:start="91:58" pos:end="91:58">&amp;</operator><name pos:start="91:59" pos:end="91:71">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <for pos:start="95:21" pos:end="109:21">for <control pos:start="95:25" pos:end="95:65">(<init pos:start="95:26" pos:end="95:52"><expr pos:start="95:26" pos:end="95:51"><name pos:start="95:26" pos:end="95:26">i</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:47"><name pos:start="95:30" pos:end="95:30">h</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:47">short_ref_count</name></name> <operator pos:start="95:49" pos:end="95:49">-</operator> <literal type="number" pos:start="95:51" pos:end="95:51">1</literal></expr>;</init> <condition pos:start="95:54" pos:end="95:60"><expr pos:start="95:54" pos:end="95:59"><name pos:start="95:54" pos:end="95:54">i</name> <operator pos:start="95:56" pos:end="95:57">&gt;=</operator> <literal type="number" pos:start="95:59" pos:end="95:59">0</literal></expr>;</condition> <incr pos:start="95:62" pos:end="95:64"><expr pos:start="95:62" pos:end="95:64"><name pos:start="95:62" pos:end="95:62">i</name><operator pos:start="95:63" pos:end="95:64">--</operator></expr></incr>)</control> <block pos:start="95:67" pos:end="109:21">{<block_content pos:start="97:25" pos:end="107:34">

                        <expr_stmt pos:start="97:25" pos:end="97:46"><expr pos:start="97:25" pos:end="97:45"><name pos:start="97:25" pos:end="97:27">ref</name> <operator pos:start="97:29" pos:end="97:29">=</operator> <name pos:start="97:31" pos:end="97:45"><name pos:start="97:31" pos:end="97:31">h</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:42">short_ref</name><index pos:start="97:43" pos:end="97:45">[<expr pos:start="97:44" pos:end="97:44"><name pos:start="97:44" pos:end="97:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:47"><expr pos:start="99:25" pos:end="99:46"><call pos:start="99:25" pos:end="99:46"><name pos:start="99:25" pos:end="99:30">assert</name><argument_list pos:start="99:31" pos:end="99:46">(<argument pos:start="99:32" pos:end="99:45"><expr pos:start="99:32" pos:end="99:45"><name pos:start="99:32" pos:end="99:45"><name pos:start="99:32" pos:end="99:34">ref</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:45">reference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:47"><expr pos:start="101:25" pos:end="101:46"><call pos:start="101:25" pos:end="101:46"><name pos:start="101:25" pos:end="101:30">assert</name><argument_list pos:start="101:31" pos:end="101:46">(<argument pos:start="101:32" pos:end="101:45"><expr pos:start="101:32" pos:end="101:45"><operator pos:start="101:32" pos:end="101:32">!</operator><name pos:start="101:33" pos:end="101:45"><name pos:start="101:33" pos:end="101:35">ref</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:45">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="103:25" pos:end="107:34"><if pos:start="103:25" pos:end="107:34">if <condition pos:start="103:28" pos:end="105:61">(<expr pos:start="103:29" pos:end="105:60"><name pos:start="103:29" pos:end="103:42"><name pos:start="103:29" pos:end="103:31">ref</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:42">frame_num</name></name> <operator pos:start="103:44" pos:end="103:45">==</operator> <name pos:start="103:47" pos:end="103:55">frame_num</name> <operator pos:start="103:57" pos:end="103:58">&amp;&amp;</operator>

                            <operator pos:start="105:29" pos:end="105:29">(</operator><name pos:start="105:30" pos:end="105:43"><name pos:start="105:30" pos:end="105:32">ref</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:43">reference</name></name> <operator pos:start="105:45" pos:end="105:45">&amp;</operator> <name pos:start="105:47" pos:end="105:59">pic_structure</name><operator pos:start="105:60" pos:end="105:60">)</operator></expr>)</condition><block type="pseudo" pos:start="107:29" pos:end="107:34"><block_content pos:start="107:29" pos:end="107:34">

                            <break pos:start="107:29" pos:end="107:34">break;</break></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                    <if_stmt pos:start="111:21" pos:end="113:43"><if pos:start="111:21" pos:end="113:43">if <condition pos:start="111:24" pos:end="111:31">(<expr pos:start="111:25" pos:end="111:30"><name pos:start="111:25" pos:end="111:25">i</name> <operator pos:start="111:27" pos:end="111:28">&gt;=</operator> <literal type="number" pos:start="111:30" pos:end="111:30">0</literal></expr>)</condition><block type="pseudo" pos:start="113:25" pos:end="113:43"><block_content pos:start="113:25" pos:end="113:43">

                        <expr_stmt pos:start="113:25" pos:end="113:43"><expr pos:start="113:25" pos:end="113:42"><name pos:start="113:25" pos:end="113:35"><name pos:start="113:25" pos:end="113:27">ref</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:35">pic_id</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:42">pred</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <break pos:start="115:21" pos:end="115:26">break;</break>

                </block_content>}</block>

                <case pos:start="119:17" pos:end="119:23">case <expr pos:start="119:22" pos:end="119:22"><literal type="number" pos:start="119:22" pos:end="119:22">2</literal></expr>:</case> <block pos:start="119:25" pos:end="161:17">{<block_content pos:start="121:21" pos:end="159:26">

                    <decl_stmt pos:start="121:21" pos:end="121:33"><decl pos:start="121:21" pos:end="121:32"><type pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:23">int</name></type> <name pos:start="121:25" pos:end="121:32">long_idx</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:52"><expr pos:start="123:21" pos:end="123:51"><name pos:start="123:21" pos:end="123:26">pic_id</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <call pos:start="123:30" pos:end="123:51"><name pos:start="123:30" pos:end="123:42">get_ue_golomb</name><argument_list pos:start="123:43" pos:end="123:51">(<argument pos:start="123:44" pos:end="123:50"><expr pos:start="123:44" pos:end="123:50"><operator pos:start="123:44" pos:end="123:44">&amp;</operator><name pos:start="123:45" pos:end="123:50"><name pos:start="123:45" pos:end="123:46">sl</name><operator pos:start="123:47" pos:end="123:48">-&gt;</operator><name pos:start="123:49" pos:end="123:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="123:54" pos:end="123:73">// long_term_pic_idx</comment>



                    <expr_stmt pos:start="127:21" pos:end="127:74"><expr pos:start="127:21" pos:end="127:73"><name pos:start="127:21" pos:end="127:28">long_idx</name> <operator pos:start="127:30" pos:end="127:30">=</operator> <call pos:start="127:32" pos:end="127:73"><name pos:start="127:32" pos:end="127:46">pic_num_extract</name><argument_list pos:start="127:47" pos:end="127:73">(<argument pos:start="127:48" pos:end="127:48"><expr pos:start="127:48" pos:end="127:48"><name pos:start="127:48" pos:end="127:48">h</name></expr></argument>, <argument pos:start="127:51" pos:end="127:56"><expr pos:start="127:51" pos:end="127:56"><name pos:start="127:51" pos:end="127:56">pic_id</name></expr></argument>, <argument pos:start="127:59" pos:end="127:72"><expr pos:start="127:59" pos:end="127:72"><operator pos:start="127:59" pos:end="127:59">&amp;</operator><name pos:start="127:60" pos:end="127:72">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="131:21" pos:end="139:21"><if pos:start="131:21" pos:end="139:21">if <condition pos:start="131:24" pos:end="131:38">(<expr pos:start="131:25" pos:end="131:37"><name pos:start="131:25" pos:end="131:32">long_idx</name> <operator pos:start="131:34" pos:end="131:34">&gt;</operator> <literal type="number" pos:start="131:36" pos:end="131:37">31</literal></expr>)</condition> <block pos:start="131:40" pos:end="139:21">{<block_content pos:start="133:25" pos:end="137:51">

                        <expr_stmt pos:start="133:25" pos:end="135:63"><expr pos:start="133:25" pos:end="135:62"><call pos:start="133:25" pos:end="135:62"><name pos:start="133:25" pos:end="133:30">av_log</name><argument_list pos:start="133:31" pos:end="135:62">(<argument pos:start="133:32" pos:end="133:39"><expr pos:start="133:32" pos:end="133:39"><name pos:start="133:32" pos:end="133:39"><name pos:start="133:32" pos:end="133:32">h</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:39">avctx</name></name></expr></argument>, <argument pos:start="133:42" pos:end="133:53"><expr pos:start="133:42" pos:end="133:53"><name pos:start="133:42" pos:end="133:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="135:32" pos:end="135:61"><expr pos:start="135:32" pos:end="135:61"><literal type="string" pos:start="135:32" pos:end="135:61">"long_term_pic_idx overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="137:25" pos:end="137:51">return <expr pos:start="137:32" pos:end="137:50"><name pos:start="137:32" pos:end="137:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:48"><expr pos:start="141:21" pos:end="141:47"><name pos:start="141:21" pos:end="141:23">ref</name> <operator pos:start="141:25" pos:end="141:25">=</operator> <name pos:start="141:27" pos:end="141:47"><name pos:start="141:27" pos:end="141:27">h</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:37">long_ref</name><index pos:start="141:38" pos:end="141:47">[<expr pos:start="141:39" pos:end="141:46"><name pos:start="141:39" pos:end="141:46">long_idx</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:54"><expr pos:start="143:21" pos:end="143:53"><call pos:start="143:21" pos:end="143:53"><name pos:start="143:21" pos:end="143:26">assert</name><argument_list pos:start="143:27" pos:end="143:53">(<argument pos:start="143:28" pos:end="143:52"><expr pos:start="143:28" pos:end="143:52"><operator pos:start="143:28" pos:end="143:28">!</operator><operator pos:start="143:29" pos:end="143:29">(</operator><name pos:start="143:30" pos:end="143:32">ref</name> <operator pos:start="143:34" pos:end="143:35">&amp;&amp;</operator> <operator pos:start="143:37" pos:end="143:37">!</operator><name pos:start="143:38" pos:end="143:51"><name pos:start="143:38" pos:end="143:40">ref</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:51">reference</name></name><operator pos:start="143:52" pos:end="143:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="145:21" pos:end="157:21"><if pos:start="145:21" pos:end="153:21">if <condition pos:start="145:24" pos:end="145:64">(<expr pos:start="145:25" pos:end="145:63"><name pos:start="145:25" pos:end="145:27">ref</name> <operator pos:start="145:29" pos:end="145:30">&amp;&amp;</operator> <operator pos:start="145:32" pos:end="145:32">(</operator><name pos:start="145:33" pos:end="145:46"><name pos:start="145:33" pos:end="145:35">ref</name><operator pos:start="145:36" pos:end="145:37">-&gt;</operator><name pos:start="145:38" pos:end="145:46">reference</name></name> <operator pos:start="145:48" pos:end="145:48">&amp;</operator> <name pos:start="145:50" pos:end="145:62">pic_structure</name><operator pos:start="145:63" pos:end="145:63">)</operator></expr>)</condition> <block pos:start="145:66" pos:end="153:21">{<block_content pos:start="147:25" pos:end="151:30">

                        <expr_stmt pos:start="147:25" pos:end="147:45"><expr pos:start="147:25" pos:end="147:44"><name pos:start="147:25" pos:end="147:35"><name pos:start="147:25" pos:end="147:27">ref</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:35">pic_id</name></name> <operator pos:start="147:37" pos:end="147:37">=</operator> <name pos:start="147:39" pos:end="147:44">pic_id</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:46"><expr pos:start="149:25" pos:end="149:45"><call pos:start="149:25" pos:end="149:45"><name pos:start="149:25" pos:end="149:30">assert</name><argument_list pos:start="149:31" pos:end="149:45">(<argument pos:start="149:32" pos:end="149:44"><expr pos:start="149:32" pos:end="149:44"><name pos:start="149:32" pos:end="149:44"><name pos:start="149:32" pos:end="149:34">ref</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:44">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="151:25" pos:end="151:30"><expr pos:start="151:25" pos:end="151:29"><name pos:start="151:25" pos:end="151:25">i</name> <operator pos:start="151:27" pos:end="151:27">=</operator> <literal type="number" pos:start="151:29" pos:end="151:29">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="153:23" pos:end="157:21">else <block pos:start="153:28" pos:end="157:21">{<block_content pos:start="155:25" pos:end="155:31">

                        <expr_stmt pos:start="155:25" pos:end="155:31"><expr pos:start="155:25" pos:end="155:30"><name pos:start="155:25" pos:end="155:25">i</name> <operator pos:start="155:27" pos:end="155:27">=</operator> <operator pos:start="155:29" pos:end="155:29">-</operator><literal type="number" pos:start="155:30" pos:end="155:30">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="159:21" pos:end="159:26">break;</break>

                </block_content>}</block>

                <default pos:start="163:17" pos:end="163:24">default:</default>

                    <expr_stmt pos:start="165:21" pos:end="169:57"><expr pos:start="165:21" pos:end="169:56"><call pos:start="165:21" pos:end="169:56"><name pos:start="165:21" pos:end="165:26">av_log</name><argument_list pos:start="165:27" pos:end="169:56">(<argument pos:start="165:28" pos:end="165:35"><expr pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:28">h</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:35">avctx</name></name></expr></argument>, <argument pos:start="165:38" pos:end="165:49"><expr pos:start="165:38" pos:end="165:49"><name pos:start="165:38" pos:end="165:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="167:28" pos:end="167:70"><expr pos:start="167:28" pos:end="167:70"><literal type="string" pos:start="167:28" pos:end="167:70">"illegal modification_of_pic_nums_idc %u\n"</literal></expr></argument>,

                           <argument pos:start="169:28" pos:end="169:55"><expr pos:start="169:28" pos:end="169:55"><name pos:start="169:28" pos:end="169:55">modification_of_pic_nums_idc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="171:21" pos:end="171:47">return <expr pos:start="171:28" pos:end="171:46"><name pos:start="171:28" pos:end="171:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></switch>



                <if_stmt pos:start="177:17" pos:end="213:17"><if pos:start="177:17" pos:end="185:17">if <condition pos:start="177:20" pos:end="177:26">(<expr pos:start="177:21" pos:end="177:25"><name pos:start="177:21" pos:end="177:21">i</name> <operator pos:start="177:23" pos:end="177:23">&lt;</operator> <literal type="number" pos:start="177:25" pos:end="177:25">0</literal></expr>)</condition> <block pos:start="177:28" pos:end="185:17">{<block_content pos:start="179:21" pos:end="183:86">

                    <expr_stmt pos:start="179:21" pos:end="181:73"><expr pos:start="179:21" pos:end="181:72"><call pos:start="179:21" pos:end="181:72"><name pos:start="179:21" pos:end="179:26">av_log</name><argument_list pos:start="179:27" pos:end="181:72">(<argument pos:start="179:28" pos:end="179:35"><expr pos:start="179:28" pos:end="179:35"><name pos:start="179:28" pos:end="179:35"><name pos:start="179:28" pos:end="179:28">h</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:35">avctx</name></name></expr></argument>, <argument pos:start="179:38" pos:end="179:49"><expr pos:start="179:38" pos:end="179:49"><name pos:start="179:38" pos:end="179:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="181:28" pos:end="181:71"><expr pos:start="181:28" pos:end="181:71"><literal type="string" pos:start="181:28" pos:end="181:71">"reference picture missing during reorder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:86"><expr pos:start="183:21" pos:end="183:85"><call pos:start="183:21" pos:end="183:85"><name pos:start="183:21" pos:end="183:26">memset</name><argument_list pos:start="183:27" pos:end="183:85">(<argument pos:start="183:28" pos:end="183:53"><expr pos:start="183:28" pos:end="183:53"><operator pos:start="183:28" pos:end="183:28">&amp;</operator><name pos:start="183:29" pos:end="183:53"><name pos:start="183:29" pos:end="183:30">sl</name><operator pos:start="183:31" pos:end="183:32">-&gt;</operator><name pos:start="183:33" pos:end="183:40">ref_list</name><index pos:start="183:41" pos:end="183:46">[<expr pos:start="183:42" pos:end="183:45"><name pos:start="183:42" pos:end="183:45">list</name></expr>]</index><index pos:start="183:47" pos:end="183:53">[<expr pos:start="183:48" pos:end="183:52"><name pos:start="183:48" pos:end="183:52">index</name></expr>]</index></name></expr></argument>, <argument pos:start="183:56" pos:end="183:56"><expr pos:start="183:56" pos:end="183:56"><literal type="number" pos:start="183:56" pos:end="183:56">0</literal></expr></argument>, <argument pos:start="183:59" pos:end="183:84"><expr pos:start="183:59" pos:end="183:84"><sizeof pos:start="183:59" pos:end="183:84">sizeof<argument_list pos:start="183:65" pos:end="183:84">(<argument pos:start="183:66" pos:end="183:83"><expr pos:start="183:66" pos:end="183:83"><name pos:start="183:66" pos:end="183:83"><name pos:start="183:66" pos:end="183:67">sl</name><operator pos:start="183:68" pos:end="183:69">-&gt;</operator><name pos:start="183:70" pos:end="183:77">ref_list</name><index pos:start="183:78" pos:end="183:80">[<expr pos:start="183:79" pos:end="183:79"><literal type="number" pos:start="183:79" pos:end="183:79">0</literal></expr>]</index><index pos:start="183:81" pos:end="183:83">[<expr pos:start="183:82" pos:end="183:82"><literal type="number" pos:start="183:82" pos:end="183:82">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="183:88" pos:end="183:95">// FIXME</comment>

                </block_content>}</block></if> <else pos:start="185:19" pos:end="213:17">else <block pos:start="185:24" pos:end="213:17">{<block_content pos:start="187:21" pos:end="211:21">

                    <for pos:start="187:21" pos:end="197:21">for <control pos:start="187:25" pos:end="187:69">(<init pos:start="187:26" pos:end="187:35"><expr pos:start="187:26" pos:end="187:34"><name pos:start="187:26" pos:end="187:26">i</name> <operator pos:start="187:28" pos:end="187:28">=</operator> <name pos:start="187:30" pos:end="187:34">index</name></expr>;</init> <condition pos:start="187:37" pos:end="187:64"><expr pos:start="187:37" pos:end="187:63"><name pos:start="187:37" pos:end="187:37">i</name> <operator pos:start="187:39" pos:end="187:39">+</operator> <literal type="number" pos:start="187:41" pos:end="187:41">1</literal> <operator pos:start="187:43" pos:end="187:43">&lt;</operator> <name pos:start="187:45" pos:end="187:63"><name pos:start="187:45" pos:end="187:46">sl</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:57">ref_count</name><index pos:start="187:58" pos:end="187:63">[<expr pos:start="187:59" pos:end="187:62"><name pos:start="187:59" pos:end="187:62">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="187:66" pos:end="187:68"><expr pos:start="187:66" pos:end="187:68"><name pos:start="187:66" pos:end="187:66">i</name><operator pos:start="187:67" pos:end="187:68">++</operator></expr></incr>)</control> <block pos:start="187:71" pos:end="197:21">{<block_content pos:start="189:25" pos:end="195:34">

                        <if_stmt pos:start="189:25" pos:end="195:34"><if pos:start="189:25" pos:end="195:34">if <condition pos:start="189:28" pos:end="193:74">(<expr pos:start="189:29" pos:end="193:73"><name pos:start="189:29" pos:end="189:49"><name pos:start="189:29" pos:end="189:30">sl</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:40">ref_list</name><index pos:start="189:41" pos:end="189:46">[<expr pos:start="189:42" pos:end="189:45"><name pos:start="189:42" pos:end="189:45">list</name></expr>]</index><index pos:start="189:47" pos:end="189:49">[<expr pos:start="189:48" pos:end="189:48"><name pos:start="189:48" pos:end="189:48">i</name></expr>]</index></name><operator pos:start="189:50" pos:end="189:50">.</operator><name pos:start="189:51" pos:end="189:56">parent</name> <operator pos:start="189:58" pos:end="189:59">&amp;&amp;</operator>

                            <name pos:start="191:29" pos:end="191:41"><name pos:start="191:29" pos:end="191:31">ref</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:41">long_ref</name></name> <operator pos:start="191:43" pos:end="191:44">==</operator> <name pos:start="191:46" pos:end="191:66"><name pos:start="191:46" pos:end="191:47">sl</name><operator pos:start="191:48" pos:end="191:49">-&gt;</operator><name pos:start="191:50" pos:end="191:57">ref_list</name><index pos:start="191:58" pos:end="191:63">[<expr pos:start="191:59" pos:end="191:62"><name pos:start="191:59" pos:end="191:62">list</name></expr>]</index><index pos:start="191:64" pos:end="191:66">[<expr pos:start="191:65" pos:end="191:65"><name pos:start="191:65" pos:end="191:65">i</name></expr>]</index></name><operator pos:start="191:67" pos:end="191:67">.</operator><name pos:start="191:68" pos:end="191:83"><name pos:start="191:68" pos:end="191:73">parent</name><operator pos:start="191:74" pos:end="191:75">-&gt;</operator><name pos:start="191:76" pos:end="191:83">long_ref</name></name> <operator pos:start="191:85" pos:end="191:86">&amp;&amp;</operator>

                            <name pos:start="193:29" pos:end="193:39"><name pos:start="193:29" pos:end="193:31">ref</name><operator pos:start="193:32" pos:end="193:33">-&gt;</operator><name pos:start="193:34" pos:end="193:39">pic_id</name></name>   <operator pos:start="193:43" pos:end="193:44">==</operator> <name pos:start="193:46" pos:end="193:66"><name pos:start="193:46" pos:end="193:47">sl</name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:57">ref_list</name><index pos:start="193:58" pos:end="193:63">[<expr pos:start="193:59" pos:end="193:62"><name pos:start="193:59" pos:end="193:62">list</name></expr>]</index><index pos:start="193:64" pos:end="193:66">[<expr pos:start="193:65" pos:end="193:65"><name pos:start="193:65" pos:end="193:65">i</name></expr>]</index></name><operator pos:start="193:67" pos:end="193:67">.</operator><name pos:start="193:68" pos:end="193:73">pic_id</name></expr>)</condition><block type="pseudo" pos:start="195:29" pos:end="195:34"><block_content pos:start="195:29" pos:end="195:34">

                            <break pos:start="195:29" pos:end="195:34">break;</break></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                    <for pos:start="199:21" pos:end="203:21">for <control pos:start="199:25" pos:end="199:42">(<init pos:start="199:26" pos:end="199:26">;</init> <condition pos:start="199:28" pos:end="199:37"><expr pos:start="199:28" pos:end="199:36"><name pos:start="199:28" pos:end="199:28">i</name> <operator pos:start="199:30" pos:end="199:30">&gt;</operator> <name pos:start="199:32" pos:end="199:36">index</name></expr>;</condition> <incr pos:start="199:39" pos:end="199:41"><expr pos:start="199:39" pos:end="199:41"><name pos:start="199:39" pos:end="199:39">i</name><operator pos:start="199:40" pos:end="199:41">--</operator></expr></incr>)</control> <block pos:start="199:44" pos:end="203:21">{<block_content pos:start="201:25" pos:end="201:74">

                        <expr_stmt pos:start="201:25" pos:end="201:74"><expr pos:start="201:25" pos:end="201:73"><name pos:start="201:25" pos:end="201:45"><name pos:start="201:25" pos:end="201:26">sl</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:36">ref_list</name><index pos:start="201:37" pos:end="201:42">[<expr pos:start="201:38" pos:end="201:41"><name pos:start="201:38" pos:end="201:41">list</name></expr>]</index><index pos:start="201:43" pos:end="201:45">[<expr pos:start="201:44" pos:end="201:44"><name pos:start="201:44" pos:end="201:44">i</name></expr>]</index></name> <operator pos:start="201:47" pos:end="201:47">=</operator> <name pos:start="201:49" pos:end="201:73"><name pos:start="201:49" pos:end="201:50">sl</name><operator pos:start="201:51" pos:end="201:52">-&gt;</operator><name pos:start="201:53" pos:end="201:60">ref_list</name><index pos:start="201:61" pos:end="201:66">[<expr pos:start="201:62" pos:end="201:65"><name pos:start="201:62" pos:end="201:65">list</name></expr>]</index><index pos:start="201:67" pos:end="201:73">[<expr pos:start="201:68" pos:end="201:72"><name pos:start="201:68" pos:end="201:68">i</name> <operator pos:start="201:70" pos:end="201:70">-</operator> <literal type="number" pos:start="201:72" pos:end="201:72">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="205:21" pos:end="205:70"><expr pos:start="205:21" pos:end="205:69"><call pos:start="205:21" pos:end="205:69"><name pos:start="205:21" pos:end="205:36">ref_from_h264pic</name><argument_list pos:start="205:37" pos:end="205:69">(<argument pos:start="205:38" pos:end="205:63"><expr pos:start="205:38" pos:end="205:63"><operator pos:start="205:38" pos:end="205:38">&amp;</operator><name pos:start="205:39" pos:end="205:63"><name pos:start="205:39" pos:end="205:40">sl</name><operator pos:start="205:41" pos:end="205:42">-&gt;</operator><name pos:start="205:43" pos:end="205:50">ref_list</name><index pos:start="205:51" pos:end="205:56">[<expr pos:start="205:52" pos:end="205:55"><name pos:start="205:52" pos:end="205:55">list</name></expr>]</index><index pos:start="205:57" pos:end="205:63">[<expr pos:start="205:58" pos:end="205:62"><name pos:start="205:58" pos:end="205:62">index</name></expr>]</index></name></expr></argument>, <argument pos:start="205:66" pos:end="205:68"><expr pos:start="205:66" pos:end="205:68"><name pos:start="205:66" pos:end="205:68">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="207:21" pos:end="211:21"><if pos:start="207:21" pos:end="211:21">if <condition pos:start="207:24" pos:end="207:41">(<expr pos:start="207:25" pos:end="207:40"><call pos:start="207:25" pos:end="207:40"><name pos:start="207:25" pos:end="207:37">FIELD_PICTURE</name><argument_list pos:start="207:38" pos:end="207:40">(<argument pos:start="207:39" pos:end="207:39"><expr pos:start="207:39" pos:end="207:39"><name pos:start="207:39" pos:end="207:39">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:43" pos:end="211:21">{<block_content pos:start="209:25" pos:end="209:80">

                        <expr_stmt pos:start="209:25" pos:end="209:80"><expr pos:start="209:25" pos:end="209:79"><call pos:start="209:25" pos:end="209:79"><name pos:start="209:25" pos:end="209:36">pic_as_field</name><argument_list pos:start="209:37" pos:end="209:79">(<argument pos:start="209:38" pos:end="209:63"><expr pos:start="209:38" pos:end="209:63"><operator pos:start="209:38" pos:end="209:38">&amp;</operator><name pos:start="209:39" pos:end="209:63"><name pos:start="209:39" pos:end="209:40">sl</name><operator pos:start="209:41" pos:end="209:42">-&gt;</operator><name pos:start="209:43" pos:end="209:50">ref_list</name><index pos:start="209:51" pos:end="209:56">[<expr pos:start="209:52" pos:end="209:55"><name pos:start="209:52" pos:end="209:55">list</name></expr>]</index><index pos:start="209:57" pos:end="209:63">[<expr pos:start="209:58" pos:end="209:62"><name pos:start="209:58" pos:end="209:62">index</name></expr>]</index></name></expr></argument>, <argument pos:start="209:66" pos:end="209:78"><expr pos:start="209:66" pos:end="209:78"><name pos:start="209:66" pos:end="209:78">pic_structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="221:5" pos:end="253:5">for <control pos:start="221:9" pos:end="221:49">(<init pos:start="221:10" pos:end="221:18"><expr pos:start="221:10" pos:end="221:17"><name pos:start="221:10" pos:end="221:13">list</name> <operator pos:start="221:15" pos:end="221:15">=</operator> <literal type="number" pos:start="221:17" pos:end="221:17">0</literal></expr>;</init> <condition pos:start="221:20" pos:end="221:41"><expr pos:start="221:20" pos:end="221:40"><name pos:start="221:20" pos:end="221:23">list</name> <operator pos:start="221:25" pos:end="221:25">&lt;</operator> <name pos:start="221:27" pos:end="221:40"><name pos:start="221:27" pos:end="221:28">sl</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:40">list_count</name></name></expr>;</condition> <incr pos:start="221:43" pos:end="221:48"><expr pos:start="221:43" pos:end="221:48"><name pos:start="221:43" pos:end="221:46">list</name><operator pos:start="221:47" pos:end="221:48">++</operator></expr></incr>)</control> <block pos:start="221:51" pos:end="253:5">{<block_content pos:start="223:9" pos:end="251:9">

        <for pos:start="223:9" pos:end="251:9">for <control pos:start="223:13" pos:end="223:61">(<init pos:start="223:14" pos:end="223:23"><expr pos:start="223:14" pos:end="223:22"><name pos:start="223:14" pos:end="223:18">index</name> <operator pos:start="223:20" pos:end="223:20">=</operator> <literal type="number" pos:start="223:22" pos:end="223:22">0</literal></expr>;</init> <condition pos:start="223:25" pos:end="223:52"><expr pos:start="223:25" pos:end="223:51"><name pos:start="223:25" pos:end="223:29">index</name> <operator pos:start="223:31" pos:end="223:31">&lt;</operator> <name pos:start="223:33" pos:end="223:51"><name pos:start="223:33" pos:end="223:34">sl</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:45">ref_count</name><index pos:start="223:46" pos:end="223:51">[<expr pos:start="223:47" pos:end="223:50"><name pos:start="223:47" pos:end="223:50">list</name></expr>]</index></name></expr>;</condition> <incr pos:start="223:54" pos:end="223:60"><expr pos:start="223:54" pos:end="223:60"><name pos:start="223:54" pos:end="223:58">index</name><operator pos:start="223:59" pos:end="223:60">++</operator></expr></incr>)</control> <block pos:start="223:63" pos:end="251:9">{<block_content pos:start="225:13" pos:end="249:97">

            <if_stmt pos:start="225:13" pos:end="247:13"><if pos:start="225:13" pos:end="247:13">if <condition pos:start="225:16" pos:end="227:87">(   <expr pos:start="225:20" pos:end="227:86"><operator pos:start="225:20" pos:end="225:20">!</operator><name pos:start="225:21" pos:end="225:45"><name pos:start="225:21" pos:end="225:22">sl</name><operator pos:start="225:23" pos:end="225:24">-&gt;</operator><name pos:start="225:25" pos:end="225:32">ref_list</name><index pos:start="225:33" pos:end="225:38">[<expr pos:start="225:34" pos:end="225:37"><name pos:start="225:34" pos:end="225:37">list</name></expr>]</index><index pos:start="225:39" pos:end="225:45">[<expr pos:start="225:40" pos:end="225:44"><name pos:start="225:40" pos:end="225:44">index</name></expr>]</index></name><operator pos:start="225:46" pos:end="225:46">.</operator><name pos:start="225:47" pos:end="225:52">parent</name>

                <operator pos:start="227:17" pos:end="227:18">||</operator> <operator pos:start="227:20" pos:end="227:20">(</operator><operator pos:start="227:21" pos:end="227:21">!</operator><call pos:start="227:22" pos:end="227:37"><name pos:start="227:22" pos:end="227:34">FIELD_PICTURE</name><argument_list pos:start="227:35" pos:end="227:37">(<argument pos:start="227:36" pos:end="227:36"><expr pos:start="227:36" pos:end="227:36"><name pos:start="227:36" pos:end="227:36">h</name></expr></argument>)</argument_list></call> <operator pos:start="227:39" pos:end="227:40">&amp;&amp;</operator> <operator pos:start="227:42" pos:end="227:42">(</operator><name pos:start="227:43" pos:end="227:67"><name pos:start="227:43" pos:end="227:44">sl</name><operator pos:start="227:45" pos:end="227:46">-&gt;</operator><name pos:start="227:47" pos:end="227:54">ref_list</name><index pos:start="227:55" pos:end="227:60">[<expr pos:start="227:56" pos:end="227:59"><name pos:start="227:56" pos:end="227:59">list</name></expr>]</index><index pos:start="227:61" pos:end="227:67">[<expr pos:start="227:62" pos:end="227:66"><name pos:start="227:62" pos:end="227:66">index</name></expr>]</index></name><operator pos:start="227:68" pos:end="227:68">.</operator><name pos:start="227:69" pos:end="227:77">reference</name><operator pos:start="227:78" pos:end="227:78">&amp;</operator><literal type="number" pos:start="227:79" pos:end="227:79">3</literal><operator pos:start="227:80" pos:end="227:80">)</operator> <operator pos:start="227:82" pos:end="227:83">!=</operator> <literal type="number" pos:start="227:85" pos:end="227:85">3</literal><operator pos:start="227:86" pos:end="227:86">)</operator></expr>)</condition> <block pos:start="227:89" pos:end="247:13">{<block_content pos:start="229:17" pos:end="245:30">

                <decl_stmt pos:start="229:17" pos:end="229:22"><decl pos:start="229:17" pos:end="229:21"><type pos:start="229:17" pos:end="229:19"><name pos:start="229:17" pos:end="229:19">int</name></type> <name pos:start="229:21" pos:end="229:21">i</name></decl>;</decl_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:127"><expr pos:start="231:17" pos:end="231:126"><call pos:start="231:17" pos:end="231:126"><name pos:start="231:17" pos:end="231:22">av_log</name><argument_list pos:start="231:23" pos:end="231:126">(<argument pos:start="231:24" pos:end="231:31"><expr pos:start="231:24" pos:end="231:31"><name pos:start="231:24" pos:end="231:31"><name pos:start="231:24" pos:end="231:24">h</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:31">avctx</name></name></expr></argument>, <argument pos:start="231:34" pos:end="231:45"><expr pos:start="231:34" pos:end="231:45"><name pos:start="231:34" pos:end="231:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="231:48" pos:end="231:91"><expr pos:start="231:48" pos:end="231:91"><literal type="string" pos:start="231:48" pos:end="231:91">"Missing reference picture, default is %d\n"</literal></expr></argument>, <argument pos:start="231:94" pos:end="231:125"><expr pos:start="231:94" pos:end="231:125"><name pos:start="231:94" pos:end="231:121"><name pos:start="231:94" pos:end="231:94">h</name><operator pos:start="231:95" pos:end="231:96">-&gt;</operator><name pos:start="231:97" pos:end="231:112">default_ref_list</name><index pos:start="231:113" pos:end="231:118">[<expr pos:start="231:114" pos:end="231:117"><name pos:start="231:114" pos:end="231:117">list</name></expr>]</index><index pos:start="231:119" pos:end="231:121">[<expr pos:start="231:120" pos:end="231:120"><literal type="number" pos:start="231:120" pos:end="231:120">0</literal></expr>]</index></name><operator pos:start="231:122" pos:end="231:122">.</operator><name pos:start="231:123" pos:end="231:125">poc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="233:17" pos:end="235:46">for <control pos:start="233:21" pos:end="233:66">(<init pos:start="233:22" pos:end="233:27"><expr pos:start="233:22" pos:end="233:26"><name pos:start="233:22" pos:end="233:22">i</name> <operator pos:start="233:24" pos:end="233:24">=</operator> <literal type="number" pos:start="233:26" pos:end="233:26">0</literal></expr>;</init> <condition pos:start="233:29" pos:end="233:61"><expr pos:start="233:29" pos:end="233:60"><name pos:start="233:29" pos:end="233:29">i</name> <operator pos:start="233:31" pos:end="233:31">&lt;</operator> <call pos:start="233:33" pos:end="233:60"><name pos:start="233:33" pos:end="233:46">FF_ARRAY_ELEMS</name><argument_list pos:start="233:47" pos:end="233:60">(<argument pos:start="233:48" pos:end="233:59"><expr pos:start="233:48" pos:end="233:59"><name pos:start="233:48" pos:end="233:59"><name pos:start="233:48" pos:end="233:48">h</name><operator pos:start="233:49" pos:end="233:50">-&gt;</operator><name pos:start="233:51" pos:end="233:59">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="233:63" pos:end="233:65"><expr pos:start="233:63" pos:end="233:65"><name pos:start="233:63" pos:end="233:63">i</name><operator pos:start="233:64" pos:end="233:65">++</operator></expr></incr>)</control><block type="pseudo" pos:start="235:21" pos:end="235:46"><block_content pos:start="235:21" pos:end="235:46">

                    <expr_stmt pos:start="235:21" pos:end="235:46"><expr pos:start="235:21" pos:end="235:45"><name pos:start="235:21" pos:end="235:35"><name pos:start="235:21" pos:end="235:21">h</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:32">last_pocs</name><index pos:start="235:33" pos:end="235:35">[<expr pos:start="235:34" pos:end="235:34"><name pos:start="235:34" pos:end="235:34">i</name></expr>]</index></name> <operator pos:start="235:37" pos:end="235:37">=</operator> <name pos:start="235:39" pos:end="235:45">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="237:17" pos:end="245:30"><if pos:start="237:17" pos:end="241:77">if <condition pos:start="237:20" pos:end="239:95">(<expr pos:start="237:21" pos:end="239:94"><name pos:start="237:21" pos:end="237:48"><name pos:start="237:21" pos:end="237:21">h</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:39">default_ref_list</name><index pos:start="237:40" pos:end="237:45">[<expr pos:start="237:41" pos:end="237:44"><name pos:start="237:41" pos:end="237:44">list</name></expr>]</index><index pos:start="237:46" pos:end="237:48">[<expr pos:start="237:47" pos:end="237:47"><literal type="number" pos:start="237:47" pos:end="237:47">0</literal></expr>]</index></name><operator pos:start="237:49" pos:end="237:49">.</operator><name pos:start="237:50" pos:end="237:55">parent</name>

                    <operator pos:start="239:21" pos:end="239:22">&amp;&amp;</operator> <operator pos:start="239:24" pos:end="239:24">!</operator><operator pos:start="239:25" pos:end="239:25">(</operator><operator pos:start="239:26" pos:end="239:26">!</operator><call pos:start="239:27" pos:end="239:42"><name pos:start="239:27" pos:end="239:39">FIELD_PICTURE</name><argument_list pos:start="239:40" pos:end="239:42">(<argument pos:start="239:41" pos:end="239:41"><expr pos:start="239:41" pos:end="239:41"><name pos:start="239:41" pos:end="239:41">h</name></expr></argument>)</argument_list></call> <operator pos:start="239:44" pos:end="239:45">&amp;&amp;</operator> <operator pos:start="239:47" pos:end="239:47">(</operator><name pos:start="239:48" pos:end="239:75"><name pos:start="239:48" pos:end="239:48">h</name><operator pos:start="239:49" pos:end="239:50">-&gt;</operator><name pos:start="239:51" pos:end="239:66">default_ref_list</name><index pos:start="239:67" pos:end="239:72">[<expr pos:start="239:68" pos:end="239:71"><name pos:start="239:68" pos:end="239:71">list</name></expr>]</index><index pos:start="239:73" pos:end="239:75">[<expr pos:start="239:74" pos:end="239:74"><literal type="number" pos:start="239:74" pos:end="239:74">0</literal></expr>]</index></name><operator pos:start="239:76" pos:end="239:76">.</operator><name pos:start="239:77" pos:end="239:85">reference</name><operator pos:start="239:86" pos:end="239:86">&amp;</operator><literal type="number" pos:start="239:87" pos:end="239:87">3</literal><operator pos:start="239:88" pos:end="239:88">)</operator> <operator pos:start="239:90" pos:end="239:91">!=</operator> <literal type="number" pos:start="239:93" pos:end="239:93">3</literal><operator pos:start="239:94" pos:end="239:94">)</operator></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:77"><block_content pos:start="241:21" pos:end="241:77">

                    <expr_stmt pos:start="241:21" pos:end="241:77"><expr pos:start="241:21" pos:end="241:76"><name pos:start="241:21" pos:end="241:45"><name pos:start="241:21" pos:end="241:22">sl</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:32">ref_list</name><index pos:start="241:33" pos:end="241:38">[<expr pos:start="241:34" pos:end="241:37"><name pos:start="241:34" pos:end="241:37">list</name></expr>]</index><index pos:start="241:39" pos:end="241:45">[<expr pos:start="241:40" pos:end="241:44"><name pos:start="241:40" pos:end="241:44">index</name></expr>]</index></name> <operator pos:start="241:47" pos:end="241:47">=</operator> <name pos:start="241:49" pos:end="241:76"><name pos:start="241:49" pos:end="241:49">h</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:67">default_ref_list</name><index pos:start="241:68" pos:end="241:73">[<expr pos:start="241:69" pos:end="241:72"><name pos:start="241:69" pos:end="241:72">list</name></expr>]</index><index pos:start="241:74" pos:end="241:76">[<expr pos:start="241:75" pos:end="241:75"><literal type="number" pos:start="241:75" pos:end="241:75">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="243:17" pos:end="245:30">else<block type="pseudo" pos:start="245:21" pos:end="245:30"><block_content pos:start="245:21" pos:end="245:30">

                    <return pos:start="245:21" pos:end="245:30">return <expr pos:start="245:28" pos:end="245:29"><operator pos:start="245:28" pos:end="245:28">-</operator><literal type="number" pos:start="245:29" pos:end="245:29">1</literal></expr>;</return></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:97"><expr pos:start="249:13" pos:end="249:96"><call pos:start="249:13" pos:end="249:96"><name pos:start="249:13" pos:end="249:22">av_assert0</name><argument_list pos:start="249:23" pos:end="249:96">(<argument pos:start="249:24" pos:end="249:95"><expr pos:start="249:24" pos:end="249:95"><call pos:start="249:24" pos:end="249:91"><name pos:start="249:24" pos:end="249:46">av_buffer_get_ref_count</name><argument_list pos:start="249:47" pos:end="249:91">(<argument pos:start="249:48" pos:end="249:90"><expr pos:start="249:48" pos:end="249:90"><name pos:start="249:48" pos:end="249:72"><name pos:start="249:48" pos:end="249:49">sl</name><operator pos:start="249:50" pos:end="249:51">-&gt;</operator><name pos:start="249:52" pos:end="249:59">ref_list</name><index pos:start="249:60" pos:end="249:65">[<expr pos:start="249:61" pos:end="249:64"><name pos:start="249:61" pos:end="249:64">list</name></expr>]</index><index pos:start="249:66" pos:end="249:72">[<expr pos:start="249:67" pos:end="249:71"><name pos:start="249:67" pos:end="249:71">index</name></expr>]</index></name><operator pos:start="249:73" pos:end="249:73">.</operator><name pos:start="249:74" pos:end="249:90"><name pos:start="249:74" pos:end="249:79">parent</name><operator pos:start="249:80" pos:end="249:81">-&gt;</operator><name pos:start="249:82" pos:end="249:82">f</name><operator pos:start="249:83" pos:end="249:84">-&gt;</operator><name pos:start="249:85" pos:end="249:87">buf</name><index pos:start="249:88" pos:end="249:90">[<expr pos:start="249:89" pos:end="249:89"><literal type="number" pos:start="249:89" pos:end="249:89">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="249:93" pos:end="249:93">&gt;</operator> <literal type="number" pos:start="249:95" pos:end="249:95">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="257:5" pos:end="257:13">return <expr pos:start="257:12" pos:end="257:12"><literal type="number" pos:start="257:12" pos:end="257:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
