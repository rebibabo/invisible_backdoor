<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15641.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">qemu_rbd_set_keypairs</name><parameter_list pos:start="1:33" pos:end="3:46">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:40">rados_t</name></type> <name pos:start="1:42" pos:end="1:48">cluster</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:70">keypairs</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:38">Error</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:15">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name></decl>, <decl pos:start="7:14" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:15">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:7">buf</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:28"><name pos:start="19:11" pos:end="19:18">g_strdup</name><argument_list pos:start="19:19" pos:end="19:28">(<argument pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:27">keypairs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:12"><expr pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:11">buf</name></expr>;</expr_stmt>



    <while pos:start="25:5" pos:end="75:5">while <condition pos:start="25:11" pos:end="25:13">(<expr pos:start="25:12" pos:end="25:12"><name pos:start="25:12" pos:end="25:12">p</name></expr>)</condition> <block pos:start="25:15" pos:end="75:5">{<block_content pos:start="27:9" pos:end="73:9">

        <expr_stmt pos:start="27:9" pos:end="29:74"><expr pos:start="27:9" pos:end="29:73"><name pos:start="27:9" pos:end="27:12">name</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="29:73"><name pos:start="27:16" pos:end="27:32">qemu_rbd_next_tok</name><argument_list pos:start="27:33" pos:end="29:73">(<argument pos:start="27:34" pos:end="27:55"><expr pos:start="27:34" pos:end="27:55"><name pos:start="27:34" pos:end="27:55">RBD_MAX_CONF_NAME_SIZE</name></expr></argument>, <argument pos:start="27:58" pos:end="27:58"><expr pos:start="27:58" pos:end="27:58"><name pos:start="27:58" pos:end="27:58">p</name></expr></argument>,

                                 <argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><literal type="char" pos:start="29:34" pos:end="29:36">'='</literal></expr></argument>, <argument pos:start="29:39" pos:end="29:56"><expr pos:start="29:39" pos:end="29:56"><literal type="string" pos:start="29:39" pos:end="29:56">"conf option name"</literal></expr></argument>, <argument pos:start="29:59" pos:end="29:60"><expr pos:start="29:59" pos:end="29:60"><operator pos:start="29:59" pos:end="29:59">&amp;</operator><name pos:start="29:60" pos:end="29:60">p</name></expr></argument>, <argument pos:start="29:63" pos:end="29:72"><expr pos:start="29:63" pos:end="29:72"><operator pos:start="29:63" pos:end="29:63">&amp;</operator><name pos:start="29:64" pos:end="29:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:21">local_err</name></expr>)</condition> <block pos:start="31:24" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:18">

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:15">(<expr pos:start="39:13" pos:end="39:14"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:14">p</name></expr>)</condition> <block pos:start="39:17" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:18">

            <expr_stmt pos:start="41:13" pos:end="41:66"><expr pos:start="41:13" pos:end="41:65"><call pos:start="41:13" pos:end="41:65"><name pos:start="41:13" pos:end="41:22">error_setg</name><argument_list pos:start="41:23" pos:end="41:65">(<argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">errp</name></expr></argument>, <argument pos:start="41:30" pos:end="41:58"><expr pos:start="41:30" pos:end="41:58"><literal type="string" pos:start="41:30" pos:end="41:58">"conf option %s has no value"</literal></expr></argument>, <argument pos:start="41:61" pos:end="41:64"><expr pos:start="41:61" pos:end="41:64"><name pos:start="41:61" pos:end="41:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <operator pos:start="43:19" pos:end="43:19">-</operator><name pos:start="43:20" pos:end="43:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="53:76"><expr pos:start="51:9" pos:end="53:75"><name pos:start="51:9" pos:end="51:13">value</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="53:75"><name pos:start="51:17" pos:end="51:33">qemu_rbd_next_tok</name><argument_list pos:start="51:34" pos:end="53:75">(<argument pos:start="51:35" pos:end="51:55"><expr pos:start="51:35" pos:end="51:55"><name pos:start="51:35" pos:end="51:55">RBD_MAX_CONF_VAL_SIZE</name></expr></argument>, <argument pos:start="51:58" pos:end="51:58"><expr pos:start="51:58" pos:end="51:58"><name pos:start="51:58" pos:end="51:58">p</name></expr></argument>,

                                  <argument pos:start="53:35" pos:end="53:37"><expr pos:start="53:35" pos:end="53:37"><literal type="char" pos:start="53:35" pos:end="53:37">':'</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:58"><expr pos:start="53:40" pos:end="53:58"><literal type="string" pos:start="53:40" pos:end="53:58">"conf option value"</literal></expr></argument>, <argument pos:start="53:61" pos:end="53:62"><expr pos:start="53:61" pos:end="53:62"><operator pos:start="53:61" pos:end="53:61">&amp;</operator><name pos:start="53:62" pos:end="53:62">p</name></expr></argument>, <argument pos:start="53:65" pos:end="53:74"><expr pos:start="53:65" pos:end="53:74"><operator pos:start="53:65" pos:end="53:65">&amp;</operator><name pos:start="53:66" pos:end="53:74">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:21">local_err</name></expr>)</condition> <block pos:start="55:24" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:18">

            <break pos:start="57:13" pos:end="57:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:50"><name pos:start="63:15" pos:end="63:28">rados_conf_set</name><argument_list pos:start="63:29" pos:end="63:50">(<argument pos:start="63:30" pos:end="63:36"><expr pos:start="63:30" pos:end="63:36"><name pos:start="63:30" pos:end="63:36">cluster</name></expr></argument>, <argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><name pos:start="63:39" pos:end="63:42">name</name></expr></argument>, <argument pos:start="63:45" pos:end="63:49"><expr pos:start="63:45" pos:end="63:49"><name pos:start="63:45" pos:end="63:49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="73:9"><if pos:start="65:9" pos:end="73:9">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition> <block pos:start="65:22" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:18">

            <expr_stmt pos:start="67:13" pos:end="67:73"><expr pos:start="67:13" pos:end="67:72"><call pos:start="67:13" pos:end="67:72"><name pos:start="67:13" pos:end="67:28">error_setg_errno</name><argument_list pos:start="67:29" pos:end="67:72">(<argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><name pos:start="67:30" pos:end="67:33">errp</name></expr></argument>, <argument pos:start="67:36" pos:end="67:39"><expr pos:start="67:36" pos:end="67:39"><operator pos:start="67:36" pos:end="67:36">-</operator><name pos:start="67:37" pos:end="67:39">ret</name></expr></argument>, <argument pos:start="67:42" pos:end="67:65"><expr pos:start="67:42" pos:end="67:65"><literal type="string" pos:start="67:42" pos:end="67:65">"invalid conf option %s"</literal></expr></argument>, <argument pos:start="67:68" pos:end="67:71"><expr pos:start="67:68" pos:end="67:71"><name pos:start="67:68" pos:end="67:71">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <operator pos:start="69:19" pos:end="69:19">-</operator><name pos:start="69:20" pos:end="69:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:18">(<expr pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:17">local_err</name></expr>)</condition> <block pos:start="79:20" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:22">

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><call pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:23">error_propagate</name><argument_list pos:start="81:24" pos:end="81:40">(<argument pos:start="81:25" pos:end="81:28"><expr pos:start="81:25" pos:end="81:28"><name pos:start="81:25" pos:end="81:28">errp</name></expr></argument>, <argument pos:start="81:31" pos:end="81:39"><expr pos:start="81:31" pos:end="81:39"><name pos:start="81:31" pos:end="81:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <operator pos:start="83:15" pos:end="83:15">-</operator><name pos:start="83:16" pos:end="83:21">EINVAL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:16"><expr pos:start="87:5" pos:end="87:15"><call pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:10">g_free</name><argument_list pos:start="87:11" pos:end="87:15">(<argument pos:start="87:12" pos:end="87:14"><expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:15">return <expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
