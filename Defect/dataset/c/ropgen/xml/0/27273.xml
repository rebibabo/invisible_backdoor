<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27273.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">qmp_memsave</name><parameter_list pos:start="1:17" pos:end="3:63">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:29"><name pos:start="1:18" pos:end="1:24">int64_t</name></type> <name pos:start="1:26" pos:end="1:29">addr</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:38">int64_t</name></type> <name pos:start="1:40" pos:end="1:43">size</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">filename</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:29"><decl pos:start="3:18" pos:end="3:29"><type pos:start="3:18" pos:end="3:29"><name pos:start="3:18" pos:end="3:21">bool</name></type> <name pos:start="3:23" pos:end="3:29">has_cpu</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:38">int64_t</name></type> <name pos:start="3:40" pos:end="3:48">cpu_index</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:55">Error</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier><modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:14">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">CPUState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:15">buf</name><index pos:start="13:16" pos:end="13:21">[<expr pos:start="13:17" pos:end="13:20"><literal type="number" pos:start="13:17" pos:end="13:20">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:16">has_cpu</name></expr>)</condition> <block pos:start="17:19" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:22">

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17">cpu_index</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:7">cpu</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:33"><name pos:start="25:11" pos:end="25:22">qemu_get_cpu</name><argument_list pos:start="25:23" pos:end="25:33">(<argument pos:start="25:24" pos:end="25:32"><expr pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:32">cpu_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:11">cpu</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <name pos:start="27:16" pos:end="27:19">NULL</name></expr>)</condition> <block pos:start="27:22" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:15">

        <expr_stmt pos:start="29:9" pos:end="31:34"><expr pos:start="29:9" pos:end="31:33"><call pos:start="29:9" pos:end="31:33"><name pos:start="29:9" pos:end="29:17">error_set</name><argument_list pos:start="29:18" pos:end="31:33">(<argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">errp</name></expr></argument>, <argument pos:start="29:25" pos:end="29:52"><expr pos:start="29:25" pos:end="29:52"><name pos:start="29:25" pos:end="29:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="29:55" pos:end="29:65"><expr pos:start="29:55" pos:end="29:65"><literal type="string" pos:start="29:55" pos:end="29:65">"cpu-index"</literal></expr></argument>,

                  <argument pos:start="31:19" pos:end="31:32"><expr pos:start="31:19" pos:end="31:32"><literal type="string" pos:start="31:19" pos:end="31:32">"a CPU number"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:5">f</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:13">fopen</name><argument_list pos:start="39:14" pos:end="39:29">(<argument pos:start="39:15" pos:end="39:22"><expr pos:start="39:15" pos:end="39:22"><name pos:start="39:15" pos:end="39:22">filename</name></expr></argument>, <argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><literal type="string" pos:start="39:25" pos:end="39:28">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:11">(<expr pos:start="41:9" pos:end="41:10"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:10">f</name></expr>)</condition> <block pos:start="41:13" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:51"><name pos:start="43:9" pos:end="43:28">error_setg_file_open</name><argument_list pos:start="43:29" pos:end="43:51">(<argument pos:start="43:30" pos:end="43:33"><expr pos:start="43:30" pos:end="43:33"><name pos:start="43:30" pos:end="43:33">errp</name></expr></argument>, <argument pos:start="43:36" pos:end="43:40"><expr pos:start="43:36" pos:end="43:40"><name pos:start="43:36" pos:end="43:40">errno</name></expr></argument>, <argument pos:start="43:43" pos:end="43:50"><expr pos:start="43:43" pos:end="43:50"><name pos:start="43:43" pos:end="43:50">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="51:5" pos:end="73:5">while <condition pos:start="51:11" pos:end="51:21">(<expr pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:15">size</name> <operator pos:start="51:17" pos:end="51:18">!=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>)</condition> <block pos:start="51:23" pos:end="73:5">{<block_content pos:start="53:9" pos:end="71:18">

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">l</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <sizeof pos:start="53:13" pos:end="53:23">sizeof<argument_list pos:start="53:19" pos:end="53:23">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:21">(<expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:13">l</name> <operator pos:start="55:15" pos:end="55:15">&gt;</operator> <name pos:start="55:17" pos:end="55:20">size</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

            <expr_stmt pos:start="57:13" pos:end="57:21"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:13">l</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:20">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><call pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:27">cpu_memory_rw_debug</name><argument_list pos:start="59:28" pos:end="59:49">(<argument pos:start="59:29" pos:end="59:31"><expr pos:start="59:29" pos:end="59:31"><name pos:start="59:29" pos:end="59:31">cpu</name></expr></argument>, <argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">addr</name></expr></argument>, <argument pos:start="59:40" pos:end="59:42"><expr pos:start="59:40" pos:end="59:42"><name pos:start="59:40" pos:end="59:42">buf</name></expr></argument>, <argument pos:start="59:45" pos:end="59:45"><expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">l</name></expr></argument>, <argument pos:start="59:48" pos:end="59:48"><expr pos:start="59:48" pos:end="59:48"><literal type="number" pos:start="59:48" pos:end="59:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:38">(<expr pos:start="61:13" pos:end="61:37"><call pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:18">fwrite</name><argument_list pos:start="61:19" pos:end="61:32">(<argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">buf</name></expr></argument>, <argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr></argument>, <argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">l</name></expr></argument>, <argument pos:start="61:31" pos:end="61:31"><expr pos:start="61:31" pos:end="61:31"><name pos:start="61:31" pos:end="61:31">f</name></expr></argument>)</argument_list></call> <operator pos:start="61:34" pos:end="61:35">!=</operator> <name pos:start="61:37" pos:end="61:37">l</name></expr>)</condition> <block pos:start="61:40" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:43"><expr pos:start="63:13" pos:end="63:42"><call pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:21">error_set</name><argument_list pos:start="63:22" pos:end="63:42">(<argument pos:start="63:23" pos:end="63:26"><expr pos:start="63:23" pos:end="63:26"><name pos:start="63:23" pos:end="63:26">errp</name></expr></argument>, <argument pos:start="63:29" pos:end="63:41"><expr pos:start="63:29" pos:end="63:41"><name pos:start="63:29" pos:end="63:41">QERR_IO_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:18"><expr pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:12">addr</name> <operator pos:start="69:14" pos:end="69:15">+=</operator> <name pos:start="69:17" pos:end="69:17">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:18"><expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:12">size</name> <operator pos:start="71:14" pos:end="71:15">-=</operator> <name pos:start="71:17" pos:end="71:17">l</name></expr>;</expr_stmt>

    </block_content>}</block></while>



<label pos:start="77:1" pos:end="77:5"><name pos:start="77:1" pos:end="77:4">exit</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:14"><expr pos:start="79:5" pos:end="79:13"><call pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:10">fclose</name><argument_list pos:start="79:11" pos:end="79:13">(<argument pos:start="79:12" pos:end="79:12"><expr pos:start="79:12" pos:end="79:12"><name pos:start="79:12" pos:end="79:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
