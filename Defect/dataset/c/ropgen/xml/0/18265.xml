<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18265.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:33">qcow2_get_cluster_offset</name><parameter_list pos:start="1:34" pos:end="3:13">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:50">BlockDriverState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">bs</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:64">uint64_t</name></type> <name pos:start="1:66" pos:end="1:71">offset</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:12"><decl pos:start="3:5" pos:end="3:12"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:7">int</name> <modifier pos:start="3:9" pos:end="3:9">*</modifier></type><name pos:start="3:10" pos:end="3:12">num</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:47">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:25">l1_index</name></decl>, <decl pos:start="9:28" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:28" pos:end="9:35">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:22">l2_offset</name></decl>, <decl pos:start="11:25" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:12"><modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:33">l2_table</name></decl>, <decl pos:start="11:36" pos:end="11:49"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:36" pos:end="11:49">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">l1_bits</name></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:33">index_in_cluster</name></decl>, <decl pos:start="15:36" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:36" pos:end="15:46">nb_clusters</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:25">nb_available</name></decl>, <decl pos:start="17:28" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:28" pos:end="17:36">nb_needed</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:64"><expr pos:start="21:5" pos:end="21:63"><name pos:start="21:5" pos:end="21:20">index_in_cluster</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><name pos:start="21:25" pos:end="21:30">offset</name> <operator pos:start="21:32" pos:end="21:33">&gt;&gt;</operator> <literal type="number" pos:start="21:35" pos:end="21:35">9</literal><operator pos:start="21:36" pos:end="21:36">)</operator> <operator pos:start="21:38" pos:end="21:38">&amp;</operator> <operator pos:start="21:40" pos:end="21:40">(</operator><name pos:start="21:41" pos:end="21:58"><name pos:start="21:41" pos:end="21:41">s</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:58">cluster_sectors</name></name> <operator pos:start="21:60" pos:end="21:60">-</operator> <literal type="number" pos:start="21:62" pos:end="21:62">1</literal><operator pos:start="21:63" pos:end="21:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:13">nb_needed</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">*</operator><name pos:start="23:18" pos:end="23:20">num</name> <operator pos:start="23:22" pos:end="23:22">+</operator> <name pos:start="23:24" pos:end="23:39">index_in_cluster</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:11">l1_bits</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:24"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:24">l2_bits</name></name> <operator pos:start="27:26" pos:end="27:26">+</operator> <name pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:42">cluster_bits</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="35:7">/* compute how many bytes there are between the offset and

     * the end of the l1 entry

     */</comment>



    <expr_stmt pos:start="39:5" pos:end="39:74"><expr pos:start="39:5" pos:end="39:73"><name pos:start="39:5" pos:end="39:16">nb_available</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <operator pos:start="39:20" pos:end="39:20">(</operator><literal type="number" pos:start="39:21" pos:end="39:24">1ULL</literal> <operator pos:start="39:26" pos:end="39:27">&lt;&lt;</operator> <name pos:start="39:29" pos:end="39:35">l1_bits</name><operator pos:start="39:36" pos:end="39:36">)</operator> <operator pos:start="39:38" pos:end="39:38">-</operator> <operator pos:start="39:40" pos:end="39:40">(</operator><name pos:start="39:41" pos:end="39:46">offset</name> <operator pos:start="39:48" pos:end="39:48">&amp;</operator> <operator pos:start="39:50" pos:end="39:50">(</operator><operator pos:start="39:51" pos:end="39:51">(</operator><literal type="number" pos:start="39:52" pos:end="39:55">1ULL</literal> <operator pos:start="39:57" pos:end="39:58">&lt;&lt;</operator> <name pos:start="39:60" pos:end="39:66">l1_bits</name><operator pos:start="39:67" pos:end="39:67">)</operator> <operator pos:start="39:69" pos:end="39:69">-</operator> <literal type="number" pos:start="39:71" pos:end="39:71">1</literal><operator pos:start="39:72" pos:end="39:72">)</operator><operator pos:start="39:73" pos:end="39:73">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:49">/* compute the number of available sectors */</comment>



    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:16">nb_available</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:32">nb_available</name> <operator pos:start="47:34" pos:end="47:35">&gt;&gt;</operator> <literal type="number" pos:start="47:37" pos:end="47:37">9</literal><operator pos:start="47:38" pos:end="47:38">)</operator> <operator pos:start="47:40" pos:end="47:40">+</operator> <name pos:start="47:42" pos:end="47:57">index_in_cluster</name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:33">(<expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:17">nb_needed</name> <operator pos:start="51:19" pos:end="51:19">&gt;</operator> <name pos:start="51:21" pos:end="51:32">nb_available</name></expr>)</condition> <block pos:start="51:35" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:33">

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:17">nb_needed</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:32">nb_available</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:18">cluster_offset</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:48">/* seek the the l2 offset in the l1 table */</comment>



    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:12">l1_index</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:21">offset</name> <operator pos:start="67:23" pos:end="67:24">&gt;&gt;</operator> <name pos:start="67:26" pos:end="67:32">l1_bits</name></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:17"><if pos:start="69:5" pos:end="71:17">if <condition pos:start="69:8" pos:end="69:31">(<expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:16">l1_index</name> <operator pos:start="69:18" pos:end="69:19">&gt;=</operator> <name pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:30">l1_size</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:17"><block_content pos:start="71:9" pos:end="71:17">

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">out</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:13">l2_offset</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:27">l1_table</name><index pos:start="75:28" pos:end="75:37">[<expr pos:start="75:29" pos:end="75:36"><name pos:start="75:29" pos:end="75:36">l1_index</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:50">/* seek the l2 table of the given l2 offset */</comment>



    <if_stmt pos:start="83:5" pos:end="85:17"><if pos:start="83:5" pos:end="85:17">if <condition pos:start="83:8" pos:end="83:19">(<expr pos:start="83:9" pos:end="83:18"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:18">l2_offset</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:17"><block_content pos:start="85:9" pos:end="85:17">

        <goto pos:start="85:9" pos:end="85:17">goto <name pos:start="85:14" pos:end="85:16">out</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:37">/* load the l2 table in memory */</comment>



    <expr_stmt pos:start="93:5" pos:end="93:36"><expr pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:13">l2_offset</name> <operator pos:start="93:15" pos:end="93:16">&amp;=</operator> <operator pos:start="93:18" pos:end="93:18">~</operator><name pos:start="93:19" pos:end="93:35">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:12">l2_table</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <call pos:start="95:16" pos:end="95:37"><name pos:start="95:16" pos:end="95:22">l2_load</name><argument_list pos:start="95:23" pos:end="95:37">(<argument pos:start="95:24" pos:end="95:25"><expr pos:start="95:24" pos:end="95:25"><name pos:start="95:24" pos:end="95:25">bs</name></expr></argument>, <argument pos:start="95:28" pos:end="95:36"><expr pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:36">l2_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:17"><if pos:start="97:5" pos:end="99:17">if <condition pos:start="97:8" pos:end="97:25">(<expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:16">l2_table</name> <operator pos:start="97:18" pos:end="97:19">==</operator> <name pos:start="97:21" pos:end="97:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:17"><block_content pos:start="99:9" pos:end="99:17">

        <return pos:start="99:9" pos:end="99:17">return <expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:59">/* find the cluster offset for the given disk offset */</comment>



    <expr_stmt pos:start="107:5" pos:end="107:62"><expr pos:start="107:5" pos:end="107:61"><name pos:start="107:5" pos:end="107:12">l2_index</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:22">offset</name> <operator pos:start="107:24" pos:end="107:25">&gt;&gt;</operator> <name pos:start="107:27" pos:end="107:41"><name pos:start="107:27" pos:end="107:27">s</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:41">cluster_bits</name></name><operator pos:start="107:42" pos:end="107:42">)</operator> <operator pos:start="107:44" pos:end="107:44">&amp;</operator> <operator pos:start="107:46" pos:end="107:46">(</operator><name pos:start="107:47" pos:end="107:56"><name pos:start="107:47" pos:end="107:47">s</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:56">l2_size</name></name> <operator pos:start="107:58" pos:end="107:58">-</operator> <literal type="number" pos:start="107:60" pos:end="107:60">1</literal><operator pos:start="107:61" pos:end="107:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:53"><expr pos:start="109:5" pos:end="109:52"><name pos:start="109:5" pos:end="109:18">cluster_offset</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:52"><name pos:start="109:22" pos:end="109:32">be64_to_cpu</name><argument_list pos:start="109:33" pos:end="109:52">(<argument pos:start="109:34" pos:end="109:51"><expr pos:start="109:34" pos:end="109:51"><name pos:start="109:34" pos:end="109:51"><name pos:start="109:34" pos:end="109:41">l2_table</name><index pos:start="109:42" pos:end="109:51">[<expr pos:start="109:43" pos:end="109:50"><name pos:start="109:43" pos:end="109:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:54"><expr pos:start="111:5" pos:end="111:53"><name pos:start="111:5" pos:end="111:15">nb_clusters</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="111:53"><name pos:start="111:19" pos:end="111:34">size_to_clusters</name><argument_list pos:start="111:35" pos:end="111:53">(<argument pos:start="111:36" pos:end="111:36"><expr pos:start="111:36" pos:end="111:36"><name pos:start="111:36" pos:end="111:36">s</name></expr></argument>, <argument pos:start="111:39" pos:end="111:52"><expr pos:start="111:39" pos:end="111:52"><name pos:start="111:39" pos:end="111:47">nb_needed</name> <operator pos:start="111:49" pos:end="111:50">&lt;&lt;</operator> <literal type="number" pos:start="111:52" pos:end="111:52">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="129:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:24">(<expr pos:start="115:9" pos:end="115:23"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:23">cluster_offset</name></expr>)</condition> <block pos:start="115:26" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:77">

        <comment type="block" pos:start="117:9" pos:end="117:39">/* how many empty clusters ? */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:77"><expr pos:start="119:9" pos:end="119:76"><name pos:start="119:9" pos:end="119:9">c</name> <operator pos:start="119:11" pos:end="119:11">=</operator> <call pos:start="119:13" pos:end="119:76"><name pos:start="119:13" pos:end="119:42">count_contiguous_free_clusters</name><argument_list pos:start="119:43" pos:end="119:76">(<argument pos:start="119:44" pos:end="119:54"><expr pos:start="119:44" pos:end="119:54"><name pos:start="119:44" pos:end="119:54">nb_clusters</name></expr></argument>, <argument pos:start="119:57" pos:end="119:75"><expr pos:start="119:57" pos:end="119:75"><operator pos:start="119:57" pos:end="119:57">&amp;</operator><name pos:start="119:58" pos:end="119:75"><name pos:start="119:58" pos:end="119:65">l2_table</name><index pos:start="119:66" pos:end="119:75">[<expr pos:start="119:67" pos:end="119:74"><name pos:start="119:67" pos:end="119:74">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="129:5">else <block pos:start="121:12" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:59">

        <comment type="block" pos:start="123:9" pos:end="123:43">/* how many allocated clusters ? */</comment>

        <expr_stmt pos:start="125:9" pos:end="127:59"><expr pos:start="125:9" pos:end="127:58"><name pos:start="125:9" pos:end="125:9">c</name> <operator pos:start="125:11" pos:end="125:11">=</operator> <call pos:start="125:13" pos:end="127:58"><name pos:start="125:13" pos:end="125:37">count_contiguous_clusters</name><argument_list pos:start="125:38" pos:end="127:58">(<argument pos:start="125:39" pos:end="125:49"><expr pos:start="125:39" pos:end="125:49"><name pos:start="125:39" pos:end="125:49">nb_clusters</name></expr></argument>, <argument pos:start="125:52" pos:end="125:66"><expr pos:start="125:52" pos:end="125:66"><name pos:start="125:52" pos:end="125:66"><name pos:start="125:52" pos:end="125:52">s</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:66">cluster_size</name></name></expr></argument>,

                <argument pos:start="127:17" pos:end="127:35"><expr pos:start="127:17" pos:end="127:35"><operator pos:start="127:17" pos:end="127:17">&amp;</operator><name pos:start="127:18" pos:end="127:35"><name pos:start="127:18" pos:end="127:25">l2_table</name><index pos:start="127:26" pos:end="127:35">[<expr pos:start="127:27" pos:end="127:34"><name pos:start="127:27" pos:end="127:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="127:38" pos:end="127:38"><expr pos:start="127:38" pos:end="127:38"><literal type="number" pos:start="127:38" pos:end="127:38">0</literal></expr></argument>, <argument pos:start="127:41" pos:end="127:57"><expr pos:start="127:41" pos:end="127:57"><name pos:start="127:41" pos:end="127:57">QCOW_OFLAG_COPIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



   <expr_stmt pos:start="133:4" pos:end="133:43"><expr pos:start="133:4" pos:end="133:42"><name pos:start="133:4" pos:end="133:15">nb_available</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <operator pos:start="133:19" pos:end="133:19">(</operator><name pos:start="133:20" pos:end="133:20">c</name> <operator pos:start="133:22" pos:end="133:22">*</operator> <name pos:start="133:24" pos:end="133:41"><name pos:start="133:24" pos:end="133:24">s</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:41">cluster_sectors</name></name><operator pos:start="133:42" pos:end="133:42">)</operator></expr>;</expr_stmt>

<label pos:start="135:1" pos:end="135:4"><name pos:start="135:1" pos:end="135:3">out</name>:</label>

    <if_stmt pos:start="137:5" pos:end="139:33"><if pos:start="137:5" pos:end="139:33">if <condition pos:start="137:8" pos:end="137:33">(<expr pos:start="137:9" pos:end="137:32"><name pos:start="137:9" pos:end="137:20">nb_available</name> <operator pos:start="137:22" pos:end="137:22">&gt;</operator> <name pos:start="137:24" pos:end="137:32">nb_needed</name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:33"><block_content pos:start="139:9" pos:end="139:33">

        <expr_stmt pos:start="139:9" pos:end="139:33"><expr pos:start="139:9" pos:end="139:32"><name pos:start="139:9" pos:end="139:20">nb_available</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <name pos:start="139:24" pos:end="139:32">nb_needed</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:43"><expr pos:start="143:5" pos:end="143:42"><operator pos:start="143:5" pos:end="143:5">*</operator><name pos:start="143:6" pos:end="143:8">num</name> <operator pos:start="143:10" pos:end="143:10">=</operator> <name pos:start="143:12" pos:end="143:23">nb_available</name> <operator pos:start="143:25" pos:end="143:25">-</operator> <name pos:start="143:27" pos:end="143:42">index_in_cluster</name></expr>;</expr_stmt>



    <return pos:start="147:5" pos:end="147:47">return <expr pos:start="147:12" pos:end="147:46"><name pos:start="147:12" pos:end="147:25">cluster_offset</name> <operator pos:start="147:27" pos:end="147:27">&amp;</operator> <operator pos:start="147:29" pos:end="147:29">~</operator><name pos:start="147:30" pos:end="147:46">QCOW_OFLAG_COPIED</name></expr>;</return>

</block_content>}</block></function>
</unit>
