<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9989.c" pos:tabs="8"><function pos:start="1:1" pos:end="341:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">pmt_cb</name><parameter_list pos:start="1:19" pos:end="1:81">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:39"><name pos:start="1:20" pos:end="1:31">MpegTSFilter</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">filter</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">uint8_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:63">section</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:80"><decl pos:start="1:66" pos:end="1:80"><type pos:start="1:66" pos:end="1:80"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:80">section_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="341:1">{<block_content pos:start="5:5" pos:end="339:47">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MpegTSContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ts</name> <init pos:start="5:23" pos:end="5:55">= <expr pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:30">filter</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:33">u</name><operator pos:start="5:34" pos:end="5:34">.</operator><name pos:start="5:35" pos:end="5:48">section_filter</name><operator pos:start="5:49" pos:end="5:49">.</operator><name pos:start="5:50" pos:end="5:55">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">MpegTSSectionFilter</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">tssf</name> <init pos:start="7:31" pos:end="7:57">= <expr pos:start="7:33" pos:end="7:57"><operator pos:start="7:33" pos:end="7:33">&amp;</operator><name pos:start="7:34" pos:end="7:57"><name pos:start="7:34" pos:end="7:39">filter</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:42">u</name><operator pos:start="7:43" pos:end="7:43">.</operator><name pos:start="7:44" pos:end="7:57">section_filter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">SectionHeader</name></type> <name pos:start="9:19" pos:end="9:20">h1</name></decl>, <decl pos:start="9:23" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">h</name> <init pos:start="9:26" pos:end="9:30">= <expr pos:start="9:28" pos:end="9:30"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:30">h1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">PESContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">pes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:20">p</name></decl>, <decl pos:start="15:23" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:28">p_end</name></decl>, <decl pos:start="15:31" pos:end="15:44"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:31" pos:end="15:31">*</modifier></type><name pos:start="15:32" pos:end="15:44">desc_list_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:27">program_info_length</name></decl>, <decl pos:start="17:30" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:30" pos:end="17:36">pcr_pid</name></decl>, <decl pos:start="17:39" pos:end="17:41"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:39" pos:end="17:41">pid</name></decl>, <decl pos:start="17:44" pos:end="17:54"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:44" pos:end="17:54">stream_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">desc_list_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:26">prog_reg_desc</name> <init pos:start="21:28" pos:end="21:30">= <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="21:33" pos:end="21:61">/* registration descriptor */</comment>



    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:23">mp4_descr_count</name> <init pos:start="25:25" pos:end="25:27">= <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:56"><decl pos:start="27:5" pos:end="27:55"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">Mp4Descr</name></type> <name pos:start="27:14" pos:end="27:43"><name pos:start="27:14" pos:end="27:22">mp4_descr</name><index pos:start="27:23" pos:end="27:43">[<expr pos:start="27:24" pos:end="27:42"><name pos:start="27:24" pos:end="27:42">MAX_MP4_DESCR_COUNT</name></expr>]</index></name> <init pos:start="27:45" pos:end="27:55">= <expr pos:start="27:47" pos:end="27:55"><block pos:start="27:47" pos:end="27:55">{ <expr pos:start="27:49" pos:end="27:53"><block pos:start="27:49" pos:end="27:53">{ <expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:67"><expr pos:start="33:5" pos:end="33:66"><call pos:start="33:5" pos:end="33:66"><name pos:start="33:5" pos:end="33:10">av_log</name><argument_list pos:start="33:11" pos:end="33:66">(<argument pos:start="33:12" pos:end="33:21"><expr pos:start="33:12" pos:end="33:21"><name pos:start="33:12" pos:end="33:21"><name pos:start="33:12" pos:end="33:13">ts</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">stream</name></name></expr></argument>, <argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="33:38" pos:end="33:52"><expr pos:start="33:38" pos:end="33:52"><literal type="string" pos:start="33:38" pos:end="33:52">"PMT: len %i\n"</literal></expr></argument>, <argument pos:start="33:55" pos:end="33:65"><expr pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:65">section_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:18">hex_dump_debug</name><argument_list pos:start="35:19" pos:end="35:52">(<argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:21">ts</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:29">stream</name></name></expr></argument>, <argument pos:start="35:32" pos:end="35:38"><expr pos:start="35:32" pos:end="35:38"><name pos:start="35:32" pos:end="35:38">section</name></expr></argument>, <argument pos:start="35:41" pos:end="35:51"><expr pos:start="35:41" pos:end="35:51"><name pos:start="35:41" pos:end="35:51">section_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:9">p_end</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:19">section</name> <operator pos:start="39:21" pos:end="39:21">+</operator> <name pos:start="39:23" pos:end="39:33">section_len</name> <operator pos:start="39:35" pos:end="39:35">-</operator> <literal type="number" pos:start="39:37" pos:end="39:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">p</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <name pos:start="41:9" pos:end="41:15">section</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:15"><if pos:start="43:5" pos:end="45:15">if <condition pos:start="43:8" pos:end="43:47">(<expr pos:start="43:9" pos:end="43:46"><call pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:28">parse_section_header</name><argument_list pos:start="43:29" pos:end="43:42">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">h</name></expr></argument>, <argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><operator pos:start="43:33" pos:end="43:33">&amp;</operator><name pos:start="43:34" pos:end="43:34">p</name></expr></argument>, <argument pos:start="43:37" pos:end="43:41"><expr pos:start="43:37" pos:end="43:41"><name pos:start="43:37" pos:end="43:41">p_end</name></expr></argument>)</argument_list></call> <operator pos:start="43:44" pos:end="43:44">&lt;</operator> <literal type="number" pos:start="43:46" pos:end="43:46">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:15"><block_content pos:start="45:9" pos:end="45:15">

        <return pos:start="45:9" pos:end="45:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="49:15"><if pos:start="47:5" pos:end="49:15">if <condition pos:start="47:8" pos:end="47:37">(<expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:9">h</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">version</name></name> <operator pos:start="47:20" pos:end="47:21">==</operator> <name pos:start="47:23" pos:end="47:36"><name pos:start="47:23" pos:end="47:26">tssf</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:36">last_ver</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:15"><block_content pos:start="49:9" pos:end="49:15">

        <return pos:start="49:9" pos:end="49:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:8">tssf</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:18">last_ver</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:31"><name pos:start="51:22" pos:end="51:22">h</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:31">version</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:60"><expr pos:start="55:5" pos:end="57:59"><call pos:start="55:5" pos:end="57:59"><name pos:start="55:5" pos:end="55:10">av_log</name><argument_list pos:start="55:11" pos:end="57:59">(<argument pos:start="55:12" pos:end="55:21"><expr pos:start="55:12" pos:end="55:21"><name pos:start="55:12" pos:end="55:21"><name pos:start="55:12" pos:end="55:13">ts</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:21">stream</name></name></expr></argument>, <argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><name pos:start="55:24" pos:end="55:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="55:38" pos:end="55:74"><expr pos:start="55:38" pos:end="55:74"><literal type="string" pos:start="55:38" pos:end="55:74">"sid=0x%x sec_num=%d/%d version=%d\n"</literal></expr></argument>,

            <argument pos:start="57:13" pos:end="57:17"><expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">h</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:17">id</name></name></expr></argument>, <argument pos:start="57:20" pos:end="57:29"><expr pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:20">h</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:29">sec_num</name></name></expr></argument>, <argument pos:start="57:32" pos:end="57:46"><expr pos:start="57:32" pos:end="57:46"><name pos:start="57:32" pos:end="57:46"><name pos:start="57:32" pos:end="57:32">h</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:46">last_sec_num</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:58"><expr pos:start="57:49" pos:end="57:58"><name pos:start="57:49" pos:end="57:58"><name pos:start="57:49" pos:end="57:49">h</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:58">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="63:15"><if pos:start="61:5" pos:end="63:15">if <condition pos:start="61:8" pos:end="61:26">(<expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:9">h</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:14">tid</name></name> <operator pos:start="61:16" pos:end="61:17">!=</operator> <name pos:start="61:19" pos:end="61:25">PMT_TID</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:15"><block_content pos:start="63:9" pos:end="63:15">

        <return pos:start="63:9" pos:end="63:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="67:15"><if pos:start="65:5" pos:end="67:15">if <condition pos:start="65:8" pos:end="65:47">(<expr pos:start="65:9" pos:end="65:46"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:26"><name pos:start="65:10" pos:end="65:11">ts</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:26">scan_all_pmts</name></name> <operator pos:start="65:28" pos:end="65:29">&amp;&amp;</operator> <name pos:start="65:31" pos:end="65:46"><name pos:start="65:31" pos:end="65:32">ts</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:46">skip_changes</name></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:15"><block_content pos:start="67:9" pos:end="67:15">

        <return pos:start="67:9" pos:end="67:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="73:33"><if pos:start="71:5" pos:end="73:33">if <condition pos:start="71:8" pos:end="71:24">(<expr pos:start="71:9" pos:end="71:23"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:11">ts</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:23">skip_clear</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:33"><block_content pos:start="73:9" pos:end="73:33">

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><call pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:21">clear_program</name><argument_list pos:start="73:22" pos:end="73:32">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">ts</name></expr></argument>, <argument pos:start="73:27" pos:end="73:31"><expr pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:27">h</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:31">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:31"><expr pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:11">pcr_pid</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:30"><name pos:start="77:15" pos:end="77:19">get16</name><argument_list pos:start="77:20" pos:end="77:30">(<argument pos:start="77:21" pos:end="77:22"><expr pos:start="77:21" pos:end="77:22"><operator pos:start="77:21" pos:end="77:21">&amp;</operator><name pos:start="77:22" pos:end="77:22">p</name></expr></argument>, <argument pos:start="77:25" pos:end="77:29"><expr pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:29">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:15"><if pos:start="79:5" pos:end="81:15">if <condition pos:start="79:8" pos:end="79:20">(<expr pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:15">pcr_pid</name> <operator pos:start="79:17" pos:end="79:17">&lt;</operator> <literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:15"><block_content pos:start="81:9" pos:end="81:15">

        <return pos:start="81:9" pos:end="81:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:22"><expr pos:start="83:5" pos:end="83:21"><name pos:start="83:5" pos:end="83:11">pcr_pid</name> <operator pos:start="83:13" pos:end="83:14">&amp;=</operator> <literal type="number" pos:start="83:16" pos:end="83:21">0x1fff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><call pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:18">add_pid_to_pmt</name><argument_list pos:start="85:19" pos:end="85:38">(<argument pos:start="85:20" pos:end="85:21"><expr pos:start="85:20" pos:end="85:21"><name pos:start="85:20" pos:end="85:21">ts</name></expr></argument>, <argument pos:start="85:24" pos:end="85:28"><expr pos:start="85:24" pos:end="85:28"><name pos:start="85:24" pos:end="85:28"><name pos:start="85:24" pos:end="85:24">h</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:28">id</name></name></expr></argument>, <argument pos:start="85:31" pos:end="85:37"><expr pos:start="85:31" pos:end="85:37"><name pos:start="85:31" pos:end="85:37">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:44"><expr pos:start="87:5" pos:end="87:43"><call pos:start="87:5" pos:end="87:43"><name pos:start="87:5" pos:end="87:15">set_pcr_pid</name><argument_list pos:start="87:16" pos:end="87:43">(<argument pos:start="87:17" pos:end="87:26"><expr pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:18">ts</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:26">stream</name></name></expr></argument>, <argument pos:start="87:29" pos:end="87:33"><expr pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:29">h</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:33">id</name></name></expr></argument>, <argument pos:start="87:36" pos:end="87:42"><expr pos:start="87:36" pos:end="87:42"><name pos:start="87:36" pos:end="87:42">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:64"><expr pos:start="91:5" pos:end="91:63"><call pos:start="91:5" pos:end="91:63"><name pos:start="91:5" pos:end="91:10">av_log</name><argument_list pos:start="91:11" pos:end="91:63">(<argument pos:start="91:12" pos:end="91:21"><expr pos:start="91:12" pos:end="91:21"><name pos:start="91:12" pos:end="91:21"><name pos:start="91:12" pos:end="91:13">ts</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">stream</name></name></expr></argument>, <argument pos:start="91:24" pos:end="91:35"><expr pos:start="91:24" pos:end="91:35"><name pos:start="91:24" pos:end="91:35">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="91:38" pos:end="91:53"><expr pos:start="91:38" pos:end="91:53"><literal type="string" pos:start="91:38" pos:end="91:53">"pcr_pid=0x%x\n"</literal></expr></argument>, <argument pos:start="91:56" pos:end="91:62"><expr pos:start="91:56" pos:end="91:62"><name pos:start="91:56" pos:end="91:62">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:43"><expr pos:start="95:5" pos:end="95:42"><name pos:start="95:5" pos:end="95:23">program_info_length</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="95:42"><name pos:start="95:27" pos:end="95:31">get16</name><argument_list pos:start="95:32" pos:end="95:42">(<argument pos:start="95:33" pos:end="95:34"><expr pos:start="95:33" pos:end="95:34"><operator pos:start="95:33" pos:end="95:33">&amp;</operator><name pos:start="95:34" pos:end="95:34">p</name></expr></argument>, <argument pos:start="95:37" pos:end="95:41"><expr pos:start="95:37" pos:end="95:41"><name pos:start="95:37" pos:end="95:41">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:15"><if pos:start="97:5" pos:end="99:15">if <condition pos:start="97:8" pos:end="97:32">(<expr pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:27">program_info_length</name> <operator pos:start="97:29" pos:end="97:29">&lt;</operator> <literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:15"><block_content pos:start="99:9" pos:end="99:15">

        <return pos:start="99:9" pos:end="99:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:33"><expr pos:start="101:5" pos:end="101:32"><name pos:start="101:5" pos:end="101:23">program_info_length</name> <operator pos:start="101:25" pos:end="101:26">&amp;=</operator> <literal type="number" pos:start="101:28" pos:end="101:32">0xfff</literal></expr>;</expr_stmt>

    <while pos:start="103:5" pos:end="147:5">while <condition pos:start="103:11" pos:end="103:36">(<expr pos:start="103:12" pos:end="103:35"><name pos:start="103:12" pos:end="103:30">program_info_length</name> <operator pos:start="103:32" pos:end="103:33">&gt;=</operator> <literal type="number" pos:start="103:35" pos:end="103:35">2</literal></expr>)</condition> <block pos:start="103:38" pos:end="147:5">{<block_content pos:start="105:9" pos:end="145:17">

        <decl_stmt pos:start="105:9" pos:end="105:25"><decl pos:start="105:9" pos:end="105:19"><type pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:15">uint8_t</name></type> <name pos:start="105:17" pos:end="105:19">tag</name></decl>, <decl pos:start="105:22" pos:end="105:24"><type ref="prev" pos:start="105:9" pos:end="105:15"/><name pos:start="105:22" pos:end="105:24">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:11">tag</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:29"><name pos:start="107:15" pos:end="107:18">get8</name><argument_list pos:start="107:19" pos:end="107:29">(<argument pos:start="107:20" pos:end="107:21"><expr pos:start="107:20" pos:end="107:21"><operator pos:start="107:20" pos:end="107:20">&amp;</operator><name pos:start="107:21" pos:end="107:21">p</name></expr></argument>, <argument pos:start="107:24" pos:end="107:28"><expr pos:start="107:24" pos:end="107:28"><name pos:start="107:24" pos:end="107:28">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:11">len</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:29"><name pos:start="109:15" pos:end="109:18">get8</name><argument_list pos:start="109:19" pos:end="109:29">(<argument pos:start="109:20" pos:end="109:21"><expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">&amp;</operator><name pos:start="109:21" pos:end="109:21">p</name></expr></argument>, <argument pos:start="109:24" pos:end="109:28"><expr pos:start="109:24" pos:end="109:28"><name pos:start="109:24" pos:end="109:28">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:83"><expr pos:start="113:9" pos:end="113:82"><call pos:start="113:9" pos:end="113:82"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="113:82">(<argument pos:start="113:16" pos:end="113:25"><expr pos:start="113:16" pos:end="113:25"><name pos:start="113:16" pos:end="113:25"><name pos:start="113:16" pos:end="113:17">ts</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:25">stream</name></name></expr></argument>, <argument pos:start="113:28" pos:end="113:39"><expr pos:start="113:28" pos:end="113:39"><name pos:start="113:28" pos:end="113:39">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="113:42" pos:end="113:71"><expr pos:start="113:42" pos:end="113:71"><literal type="string" pos:start="113:42" pos:end="113:71">"program tag: 0x%02x len=%d\n"</literal></expr></argument>, <argument pos:start="113:74" pos:end="113:76"><expr pos:start="113:74" pos:end="113:76"><name pos:start="113:74" pos:end="113:76">tag</name></expr></argument>, <argument pos:start="113:79" pos:end="113:81"><expr pos:start="113:79" pos:end="113:81"><name pos:start="113:79" pos:end="113:81">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="117:9" pos:end="121:18"><if pos:start="117:9" pos:end="121:18">if <condition pos:start="117:12" pos:end="117:42">(<expr pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:15">len</name> <operator pos:start="117:17" pos:end="117:17">&gt;</operator> <name pos:start="117:19" pos:end="117:37">program_info_length</name> <operator pos:start="117:39" pos:end="117:39">-</operator> <literal type="number" pos:start="117:41" pos:end="117:41">2</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:18"><block_content pos:start="121:13" pos:end="121:18">

            <comment type="line" pos:start="119:13" pos:end="119:74">// something else is broken, exit the program_descriptors_loop</comment>

            <break pos:start="121:13" pos:end="121:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:27">program_info_length</name> <operator pos:start="123:29" pos:end="123:30">-=</operator> <name pos:start="123:32" pos:end="123:34">len</name> <operator pos:start="123:36" pos:end="123:36">+</operator> <literal type="number" pos:start="123:38" pos:end="123:38">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="143:9"><if pos:start="125:9" pos:end="137:9">if <condition pos:start="125:12" pos:end="125:24">(<expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:15">tag</name> <operator pos:start="125:17" pos:end="125:18">==</operator> <literal type="number" pos:start="125:20" pos:end="125:23">0x1d</literal></expr>)</condition> <block pos:start="125:26" pos:end="137:9">{<block_content pos:start="127:13" pos:end="135:65"> <comment type="line" pos:start="125:28" pos:end="125:44">// IOD descriptor</comment>

            <expr_stmt pos:start="127:13" pos:end="127:28"><expr pos:start="127:13" pos:end="127:27"><call pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:16">get8</name><argument_list pos:start="127:17" pos:end="127:27">(<argument pos:start="127:18" pos:end="127:19"><expr pos:start="127:18" pos:end="127:19"><operator pos:start="127:18" pos:end="127:18">&amp;</operator><name pos:start="127:19" pos:end="127:19">p</name></expr></argument>, <argument pos:start="127:22" pos:end="127:26"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:26">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="127:30" pos:end="127:37">// scope</comment>

            <expr_stmt pos:start="129:13" pos:end="129:28"><expr pos:start="129:13" pos:end="129:27"><call pos:start="129:13" pos:end="129:27"><name pos:start="129:13" pos:end="129:16">get8</name><argument_list pos:start="129:17" pos:end="129:27">(<argument pos:start="129:18" pos:end="129:19"><expr pos:start="129:18" pos:end="129:19"><operator pos:start="129:18" pos:end="129:18">&amp;</operator><name pos:start="129:19" pos:end="129:19">p</name></expr></argument>, <argument pos:start="129:22" pos:end="129:26"><expr pos:start="129:22" pos:end="129:26"><name pos:start="129:22" pos:end="129:26">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="129:30" pos:end="129:37">// label</comment>

            <expr_stmt pos:start="131:13" pos:end="131:21"><expr pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:15">len</name> <operator pos:start="131:17" pos:end="131:18">-=</operator> <literal type="number" pos:start="131:20" pos:end="131:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="135:65"><expr pos:start="133:13" pos:end="135:64"><call pos:start="133:13" pos:end="135:64"><name pos:start="133:13" pos:end="133:25">mp4_read_iods</name><argument_list pos:start="133:26" pos:end="135:64">(<argument pos:start="133:27" pos:end="133:36"><expr pos:start="133:27" pos:end="133:36"><name pos:start="133:27" pos:end="133:36"><name pos:start="133:27" pos:end="133:28">ts</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:36">stream</name></name></expr></argument>, <argument pos:start="133:39" pos:end="133:39"><expr pos:start="133:39" pos:end="133:39"><name pos:start="133:39" pos:end="133:39">p</name></expr></argument>, <argument pos:start="133:42" pos:end="133:44"><expr pos:start="133:42" pos:end="133:44"><name pos:start="133:42" pos:end="133:44">len</name></expr></argument>, <argument pos:start="133:47" pos:end="133:73"><expr pos:start="133:47" pos:end="133:73"><name pos:start="133:47" pos:end="133:55">mp4_descr</name> <operator pos:start="133:57" pos:end="133:57">+</operator> <name pos:start="133:59" pos:end="133:73">mp4_descr_count</name></expr></argument>,

                          <argument pos:start="135:27" pos:end="135:42"><expr pos:start="135:27" pos:end="135:42"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:42">mp4_descr_count</name></expr></argument>, <argument pos:start="135:45" pos:end="135:63"><expr pos:start="135:45" pos:end="135:63"><name pos:start="135:45" pos:end="135:63">MAX_MP4_DESCR_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="137:11" pos:end="143:9">else if <condition pos:start="137:19" pos:end="137:43">(<expr pos:start="137:20" pos:end="137:42"><name pos:start="137:20" pos:end="137:22">tag</name> <operator pos:start="137:24" pos:end="137:25">==</operator> <literal type="number" pos:start="137:27" pos:end="137:30">0x05</literal> <operator pos:start="137:32" pos:end="137:33">&amp;&amp;</operator> <name pos:start="137:35" pos:end="137:37">len</name> <operator pos:start="137:39" pos:end="137:40">&gt;=</operator> <literal type="number" pos:start="137:42" pos:end="137:42">4</literal></expr>)</condition> <block pos:start="137:45" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:21"> <comment type="line" pos:start="137:47" pos:end="137:72">// registration descriptor</comment>

            <expr_stmt pos:start="139:13" pos:end="139:52"><expr pos:start="139:13" pos:end="139:51"><name pos:start="139:13" pos:end="139:25">prog_reg_desc</name> <operator pos:start="139:27" pos:end="139:27">=</operator> <call pos:start="139:29" pos:end="139:51"><name pos:start="139:29" pos:end="139:47">bytestream_get_le32</name><argument_list pos:start="139:48" pos:end="139:51">(<argument pos:start="139:49" pos:end="139:50"><expr pos:start="139:49" pos:end="139:50"><operator pos:start="139:49" pos:end="139:49">&amp;</operator><name pos:start="139:50" pos:end="139:50">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:21"><expr pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:15">len</name> <operator pos:start="141:17" pos:end="141:18">-=</operator> <literal type="number" pos:start="141:20" pos:end="141:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:17"><expr pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:9">p</name> <operator pos:start="145:11" pos:end="145:12">+=</operator> <name pos:start="145:14" pos:end="145:16">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:5">p</name> <operator pos:start="149:7" pos:end="149:8">+=</operator> <name pos:start="149:10" pos:end="149:28">program_info_length</name></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="153:17"><if pos:start="151:5" pos:end="153:17">if <condition pos:start="151:8" pos:end="151:19">(<expr pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:9">p</name> <operator pos:start="151:11" pos:end="151:12">&gt;=</operator> <name pos:start="151:14" pos:end="151:18">p_end</name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:17"><block_content pos:start="153:9" pos:end="153:17">

        <goto pos:start="153:9" pos:end="153:17">goto <name pos:start="153:14" pos:end="153:16">out</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="157:5" pos:end="157:46">// stop parsing after pmt, we found header</comment>

    <if_stmt pos:start="159:5" pos:end="161:27"><if pos:start="159:5" pos:end="161:27">if <condition pos:start="159:8" pos:end="159:32">(<expr pos:start="159:9" pos:end="159:31"><operator pos:start="159:9" pos:end="159:9">!</operator><name pos:start="159:10" pos:end="159:31"><name pos:start="159:10" pos:end="159:11">ts</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:19">stream</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:31">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:27"><block_content pos:start="161:9" pos:end="161:27">

        <expr_stmt pos:start="161:9" pos:end="161:27"><expr pos:start="161:9" pos:end="161:26"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:10">ts</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:22">stop_parse</name></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:29"><expr pos:start="165:5" pos:end="165:28"><call pos:start="165:5" pos:end="165:28"><name pos:start="165:5" pos:end="165:17">set_pmt_found</name><argument_list pos:start="165:18" pos:end="165:28">(<argument pos:start="165:19" pos:end="165:20"><expr pos:start="165:19" pos:end="165:20"><name pos:start="165:19" pos:end="165:20">ts</name></expr></argument>, <argument pos:start="165:23" pos:end="165:27"><expr pos:start="165:23" pos:end="165:27"><name pos:start="165:23" pos:end="165:27"><name pos:start="165:23" pos:end="165:23">h</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:27">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <for pos:start="171:5" pos:end="325:5">for <control pos:start="171:9" pos:end="171:12">(<init pos:start="171:10" pos:end="171:10">;</init><condition pos:start="171:11" pos:end="171:11">;</condition><incr/>)</control> <block pos:start="171:14" pos:end="325:5">{<block_content pos:start="173:9" pos:end="323:26">

        <expr_stmt pos:start="173:9" pos:end="173:15"><expr pos:start="173:9" pos:end="173:14"><name pos:start="173:9" pos:end="173:10">st</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:19"><expr pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:11">pes</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <name pos:start="175:15" pos:end="175:18">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:38"><expr pos:start="177:9" pos:end="177:37"><name pos:start="177:9" pos:end="177:19">stream_type</name> <operator pos:start="177:21" pos:end="177:21">=</operator> <call pos:start="177:23" pos:end="177:37"><name pos:start="177:23" pos:end="177:26">get8</name><argument_list pos:start="177:27" pos:end="177:37">(<argument pos:start="177:28" pos:end="177:29"><expr pos:start="177:28" pos:end="177:29"><operator pos:start="177:28" pos:end="177:28">&amp;</operator><name pos:start="177:29" pos:end="177:29">p</name></expr></argument>, <argument pos:start="177:32" pos:end="177:36"><expr pos:start="177:32" pos:end="177:36"><name pos:start="177:32" pos:end="177:36">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="181:18"><if pos:start="179:9" pos:end="181:18">if <condition pos:start="179:12" pos:end="179:28">(<expr pos:start="179:13" pos:end="179:27"><name pos:start="179:13" pos:end="179:23">stream_type</name> <operator pos:start="179:25" pos:end="179:25">&lt;</operator> <literal type="number" pos:start="179:27" pos:end="179:27">0</literal></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:18"><block_content pos:start="181:13" pos:end="181:18">

            <break pos:start="181:13" pos:end="181:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:31"><expr pos:start="183:9" pos:end="183:30"><name pos:start="183:9" pos:end="183:11">pid</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:30"><name pos:start="183:15" pos:end="183:19">get16</name><argument_list pos:start="183:20" pos:end="183:30">(<argument pos:start="183:21" pos:end="183:22"><expr pos:start="183:21" pos:end="183:22"><operator pos:start="183:21" pos:end="183:21">&amp;</operator><name pos:start="183:22" pos:end="183:22">p</name></expr></argument>, <argument pos:start="183:25" pos:end="183:29"><expr pos:start="183:25" pos:end="183:29"><name pos:start="183:25" pos:end="183:29">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="187:21"><if pos:start="185:9" pos:end="187:21">if <condition pos:start="185:12" pos:end="185:20">(<expr pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:15">pid</name> <operator pos:start="185:17" pos:end="185:17">&lt;</operator> <literal type="number" pos:start="185:19" pos:end="185:19">0</literal></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:21"><block_content pos:start="187:13" pos:end="187:21">

            <goto pos:start="187:13" pos:end="187:21">goto <name pos:start="187:18" pos:end="187:20">out</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:22"><expr pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:11">pid</name> <operator pos:start="189:13" pos:end="189:14">&amp;=</operator> <literal type="number" pos:start="189:16" pos:end="189:21">0x1fff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="193:21"><if pos:start="191:9" pos:end="193:21">if <condition pos:start="191:12" pos:end="191:35">(<expr pos:start="191:13" pos:end="191:34"><name pos:start="191:13" pos:end="191:15">pid</name> <operator pos:start="191:17" pos:end="191:18">==</operator> <name pos:start="191:20" pos:end="191:34"><name pos:start="191:20" pos:end="191:21">ts</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:34">current_pid</name></name></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:21"><block_content pos:start="193:13" pos:end="193:21">

            <goto pos:start="193:13" pos:end="193:21">goto <name pos:start="193:18" pos:end="193:20">out</name>;</goto></block_content></block></if></if_stmt>



        <comment type="block" pos:start="197:9" pos:end="197:31">/* now create stream */</comment>

        <if_stmt pos:start="199:9" pos:end="259:9"><if pos:start="199:9" pos:end="217:9">if <condition pos:start="199:12" pos:end="199:63">(<expr pos:start="199:13" pos:end="199:62"><name pos:start="199:13" pos:end="199:25"><name pos:start="199:13" pos:end="199:14">ts</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:20">pids</name><index pos:start="199:21" pos:end="199:25">[<expr pos:start="199:22" pos:end="199:24"><name pos:start="199:22" pos:end="199:24">pid</name></expr>]</index></name> <operator pos:start="199:27" pos:end="199:28">&amp;&amp;</operator> <name pos:start="199:30" pos:end="199:42"><name pos:start="199:30" pos:end="199:31">ts</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:37">pids</name><index pos:start="199:38" pos:end="199:42">[<expr pos:start="199:39" pos:end="199:41"><name pos:start="199:39" pos:end="199:41">pid</name></expr>]</index></name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:48">type</name> <operator pos:start="199:50" pos:end="199:51">==</operator> <name pos:start="199:53" pos:end="199:62">MPEGTS_PES</name></expr>)</condition> <block pos:start="199:65" pos:end="217:9">{<block_content pos:start="201:13" pos:end="215:25">

            <expr_stmt pos:start="201:13" pos:end="201:53"><expr pos:start="201:13" pos:end="201:52"><name pos:start="201:13" pos:end="201:15">pes</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <name pos:start="201:19" pos:end="201:31"><name pos:start="201:19" pos:end="201:20">ts</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:26">pids</name><index pos:start="201:27" pos:end="201:31">[<expr pos:start="201:28" pos:end="201:30"><name pos:start="201:28" pos:end="201:30">pid</name></expr>]</index></name><operator pos:start="201:32" pos:end="201:33">-&gt;</operator><name pos:start="201:34" pos:end="201:52"><name pos:start="201:34" pos:end="201:34">u</name><operator pos:start="201:35" pos:end="201:35">.</operator><name pos:start="201:36" pos:end="201:45">pes_filter</name><operator pos:start="201:46" pos:end="201:46">.</operator><name pos:start="201:47" pos:end="201:52">opaque</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="213:13"><if pos:start="203:13" pos:end="213:13">if <condition pos:start="203:16" pos:end="203:25">(<expr pos:start="203:17" pos:end="203:24"><operator pos:start="203:17" pos:end="203:17">!</operator><name pos:start="203:18" pos:end="203:24"><name pos:start="203:18" pos:end="203:20">pes</name><operator pos:start="203:21" pos:end="203:22">-&gt;</operator><name pos:start="203:23" pos:end="203:24">st</name></name></expr>)</condition> <block pos:start="203:27" pos:end="213:13">{<block_content pos:start="205:17" pos:end="211:39">

                <expr_stmt pos:start="205:17" pos:end="205:69"><expr pos:start="205:17" pos:end="205:68"><name pos:start="205:17" pos:end="205:23"><name pos:start="205:17" pos:end="205:19">pes</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:23">st</name></name>     <operator pos:start="205:29" pos:end="205:29">=</operator> <call pos:start="205:31" pos:end="205:68"><name pos:start="205:31" pos:end="205:49">avformat_new_stream</name><argument_list pos:start="205:50" pos:end="205:68">(<argument pos:start="205:51" pos:end="205:61"><expr pos:start="205:51" pos:end="205:61"><name pos:start="205:51" pos:end="205:61"><name pos:start="205:51" pos:end="205:53">pes</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:61">stream</name></name></expr></argument>, <argument pos:start="205:64" pos:end="205:67"><expr pos:start="205:64" pos:end="205:67"><name pos:start="205:64" pos:end="205:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="207:17" pos:end="209:29"><if pos:start="207:17" pos:end="209:29">if <condition pos:start="207:20" pos:end="207:29">(<expr pos:start="207:21" pos:end="207:28"><operator pos:start="207:21" pos:end="207:21">!</operator><name pos:start="207:22" pos:end="207:28"><name pos:start="207:22" pos:end="207:24">pes</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:28">st</name></name></expr>)</condition><block type="pseudo" pos:start="209:21" pos:end="209:29"><block_content pos:start="209:21" pos:end="209:29">

                    <goto pos:start="209:21" pos:end="209:29">goto <name pos:start="209:26" pos:end="209:28">out</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:39"><expr pos:start="211:17" pos:end="211:38"><name pos:start="211:17" pos:end="211:27"><name pos:start="211:17" pos:end="211:19">pes</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:23">st</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:27">id</name></name> <operator pos:start="211:29" pos:end="211:29">=</operator> <name pos:start="211:31" pos:end="211:38"><name pos:start="211:31" pos:end="211:33">pes</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:38">pid</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:25"><expr pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:14">st</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <name pos:start="215:18" pos:end="215:24"><name pos:start="215:18" pos:end="215:20">pes</name><operator pos:start="215:21" pos:end="215:22">-&gt;</operator><name pos:start="215:23" pos:end="215:24">st</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="217:11" pos:end="237:9">else if <condition pos:start="217:19" pos:end="217:39">(<expr pos:start="217:20" pos:end="217:38"><name pos:start="217:20" pos:end="217:30">stream_type</name> <operator pos:start="217:32" pos:end="217:33">!=</operator> <literal type="number" pos:start="217:35" pos:end="217:38">0x13</literal></expr>)</condition> <block pos:start="217:41" pos:end="237:9">{<block_content pos:start="219:13" pos:end="235:13">

            <if_stmt pos:start="219:13" pos:end="221:55"><if pos:start="219:13" pos:end="221:55">if <condition pos:start="219:16" pos:end="219:30">(<expr pos:start="219:17" pos:end="219:29"><name pos:start="219:17" pos:end="219:29"><name pos:start="219:17" pos:end="219:18">ts</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:24">pids</name><index pos:start="219:25" pos:end="219:29">[<expr pos:start="219:26" pos:end="219:28"><name pos:start="219:26" pos:end="219:28">pid</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:55"><block_content pos:start="221:17" pos:end="221:55">

                <expr_stmt pos:start="221:17" pos:end="221:55"><expr pos:start="221:17" pos:end="221:54"><call pos:start="221:17" pos:end="221:54"><name pos:start="221:17" pos:end="221:35">mpegts_close_filter</name><argument_list pos:start="221:36" pos:end="221:54">(<argument pos:start="221:37" pos:end="221:38"><expr pos:start="221:37" pos:end="221:38"><name pos:start="221:37" pos:end="221:38">ts</name></expr></argument>, <argument pos:start="221:41" pos:end="221:53"><expr pos:start="221:41" pos:end="221:53"><name pos:start="221:41" pos:end="221:53"><name pos:start="221:41" pos:end="221:42">ts</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:48">pids</name><index pos:start="221:49" pos:end="221:53">[<expr pos:start="221:50" pos:end="221:52"><name pos:start="221:50" pos:end="221:52">pid</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="221:57" pos:end="221:92">// wrongly added sdt filter probably</comment>

            <expr_stmt pos:start="223:13" pos:end="223:51"><expr pos:start="223:13" pos:end="223:50"><name pos:start="223:13" pos:end="223:15">pes</name> <operator pos:start="223:17" pos:end="223:17">=</operator> <call pos:start="223:19" pos:end="223:50"><name pos:start="223:19" pos:end="223:32">add_pes_stream</name><argument_list pos:start="223:33" pos:end="223:50">(<argument pos:start="223:34" pos:end="223:35"><expr pos:start="223:34" pos:end="223:35"><name pos:start="223:34" pos:end="223:35">ts</name></expr></argument>, <argument pos:start="223:38" pos:end="223:40"><expr pos:start="223:38" pos:end="223:40"><name pos:start="223:38" pos:end="223:40">pid</name></expr></argument>, <argument pos:start="223:43" pos:end="223:49"><expr pos:start="223:43" pos:end="223:49"><name pos:start="223:43" pos:end="223:49">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="235:13"><if pos:start="225:13" pos:end="235:13">if <condition pos:start="225:16" pos:end="225:20">(<expr pos:start="225:17" pos:end="225:19"><name pos:start="225:17" pos:end="225:19">pes</name></expr>)</condition> <block pos:start="225:22" pos:end="235:13">{<block_content pos:start="227:17" pos:end="233:34">

                <expr_stmt pos:start="227:17" pos:end="227:60"><expr pos:start="227:17" pos:end="227:59"><name pos:start="227:17" pos:end="227:18">st</name> <operator pos:start="227:20" pos:end="227:20">=</operator> <call pos:start="227:22" pos:end="227:59"><name pos:start="227:22" pos:end="227:40">avformat_new_stream</name><argument_list pos:start="227:41" pos:end="227:59">(<argument pos:start="227:42" pos:end="227:52"><expr pos:start="227:42" pos:end="227:52"><name pos:start="227:42" pos:end="227:52"><name pos:start="227:42" pos:end="227:44">pes</name><operator pos:start="227:45" pos:end="227:46">-&gt;</operator><name pos:start="227:47" pos:end="227:52">stream</name></name></expr></argument>, <argument pos:start="227:55" pos:end="227:58"><expr pos:start="227:55" pos:end="227:58"><name pos:start="227:55" pos:end="227:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="229:17" pos:end="231:29"><if pos:start="229:17" pos:end="231:29">if <condition pos:start="229:20" pos:end="229:24">(<expr pos:start="229:21" pos:end="229:23"><operator pos:start="229:21" pos:end="229:21">!</operator><name pos:start="229:22" pos:end="229:23">st</name></expr>)</condition><block type="pseudo" pos:start="231:21" pos:end="231:29"><block_content pos:start="231:21" pos:end="231:29">

                    <goto pos:start="231:21" pos:end="231:29">goto <name pos:start="231:26" pos:end="231:28">out</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:34"><expr pos:start="233:17" pos:end="233:33"><name pos:start="233:17" pos:end="233:22"><name pos:start="233:17" pos:end="233:18">st</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:22">id</name></name> <operator pos:start="233:24" pos:end="233:24">=</operator> <name pos:start="233:26" pos:end="233:33"><name pos:start="233:26" pos:end="233:28">pes</name><operator pos:start="233:29" pos:end="233:30">-&gt;</operator><name pos:start="233:31" pos:end="233:33">pid</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="237:11" pos:end="259:9">else <block pos:start="237:16" pos:end="259:9">{<block_content pos:start="239:13" pos:end="257:13">

            <decl_stmt pos:start="239:13" pos:end="239:60"><decl pos:start="239:13" pos:end="239:59"><type pos:start="239:13" pos:end="239:15"><name pos:start="239:13" pos:end="239:15">int</name></type> <name pos:start="239:17" pos:end="239:19">idx</name> <init pos:start="239:21" pos:end="239:59">= <expr pos:start="239:23" pos:end="239:59"><call pos:start="239:23" pos:end="239:59"><name pos:start="239:23" pos:end="239:42">ff_find_stream_index</name><argument_list pos:start="239:43" pos:end="239:59">(<argument pos:start="239:44" pos:end="239:53"><expr pos:start="239:44" pos:end="239:53"><name pos:start="239:44" pos:end="239:53"><name pos:start="239:44" pos:end="239:45">ts</name><operator pos:start="239:46" pos:end="239:47">-&gt;</operator><name pos:start="239:48" pos:end="239:53">stream</name></name></expr></argument>, <argument pos:start="239:56" pos:end="239:58"><expr pos:start="239:56" pos:end="239:58"><name pos:start="239:56" pos:end="239:58">pid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="241:13" pos:end="257:13"><if pos:start="241:13" pos:end="245:13">if <condition pos:start="241:16" pos:end="241:25">(<expr pos:start="241:17" pos:end="241:24"><name pos:start="241:17" pos:end="241:19">idx</name> <operator pos:start="241:21" pos:end="241:22">&gt;=</operator> <literal type="number" pos:start="241:24" pos:end="241:24">0</literal></expr>)</condition> <block pos:start="241:27" pos:end="245:13">{<block_content pos:start="243:17" pos:end="243:46">

                <expr_stmt pos:start="243:17" pos:end="243:46"><expr pos:start="243:17" pos:end="243:45"><name pos:start="243:17" pos:end="243:18">st</name> <operator pos:start="243:20" pos:end="243:20">=</operator> <name pos:start="243:22" pos:end="243:45"><name pos:start="243:22" pos:end="243:23">ts</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:31">stream</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:40">streams</name><index pos:start="243:41" pos:end="243:45">[<expr pos:start="243:42" pos:end="243:44"><name pos:start="243:42" pos:end="243:44">idx</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="245:15" pos:end="257:13">else <block pos:start="245:20" pos:end="257:13">{<block_content pos:start="247:17" pos:end="255:58">

                <expr_stmt pos:start="247:17" pos:end="247:59"><expr pos:start="247:17" pos:end="247:58"><name pos:start="247:17" pos:end="247:18">st</name> <operator pos:start="247:20" pos:end="247:20">=</operator> <call pos:start="247:22" pos:end="247:58"><name pos:start="247:22" pos:end="247:40">avformat_new_stream</name><argument_list pos:start="247:41" pos:end="247:58">(<argument pos:start="247:42" pos:end="247:51"><expr pos:start="247:42" pos:end="247:51"><name pos:start="247:42" pos:end="247:51"><name pos:start="247:42" pos:end="247:43">ts</name><operator pos:start="247:44" pos:end="247:45">-&gt;</operator><name pos:start="247:46" pos:end="247:51">stream</name></name></expr></argument>, <argument pos:start="247:54" pos:end="247:57"><expr pos:start="247:54" pos:end="247:57"><name pos:start="247:54" pos:end="247:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="249:17" pos:end="251:29"><if pos:start="249:17" pos:end="251:29">if <condition pos:start="249:20" pos:end="249:24">(<expr pos:start="249:21" pos:end="249:23"><operator pos:start="249:21" pos:end="249:21">!</operator><name pos:start="249:22" pos:end="249:23">st</name></expr>)</condition><block type="pseudo" pos:start="251:21" pos:end="251:29"><block_content pos:start="251:21" pos:end="251:29">

                    <goto pos:start="251:21" pos:end="251:29">goto <name pos:start="251:26" pos:end="251:28">out</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:29"><expr pos:start="253:17" pos:end="253:28"><name pos:start="253:17" pos:end="253:22"><name pos:start="253:17" pos:end="253:18">st</name><operator pos:start="253:19" pos:end="253:20">-&gt;</operator><name pos:start="253:21" pos:end="253:22">id</name></name> <operator pos:start="253:24" pos:end="253:24">=</operator> <name pos:start="253:26" pos:end="253:28">pid</name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:58"><expr pos:start="255:17" pos:end="255:57"><name pos:start="255:17" pos:end="255:37"><name pos:start="255:17" pos:end="255:18">st</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:25">codec</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:37">codec_type</name></name> <operator pos:start="255:39" pos:end="255:39">=</operator> <name pos:start="255:41" pos:end="255:57">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="263:9" pos:end="265:21"><if pos:start="263:9" pos:end="265:21">if <condition pos:start="263:12" pos:end="263:16">(<expr pos:start="263:13" pos:end="263:15"><operator pos:start="263:13" pos:end="263:13">!</operator><name pos:start="263:14" pos:end="263:15">st</name></expr>)</condition><block type="pseudo" pos:start="265:13" pos:end="265:21"><block_content pos:start="265:13" pos:end="265:21">

            <goto pos:start="265:13" pos:end="265:21">goto <name pos:start="265:18" pos:end="265:20">out</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="269:9" pos:end="271:72"><if pos:start="269:9" pos:end="271:72">if <condition pos:start="269:12" pos:end="269:37">(<expr pos:start="269:13" pos:end="269:36"><name pos:start="269:13" pos:end="269:15">pes</name> <operator pos:start="269:17" pos:end="269:18">&amp;&amp;</operator> <operator pos:start="269:20" pos:end="269:20">!</operator><name pos:start="269:21" pos:end="269:36"><name pos:start="269:21" pos:end="269:23">pes</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:36">stream_type</name></name></expr>)</condition><block type="pseudo" pos:start="271:13" pos:end="271:72"><block_content pos:start="271:13" pos:end="271:72">

            <expr_stmt pos:start="271:13" pos:end="271:72"><expr pos:start="271:13" pos:end="271:71"><call pos:start="271:13" pos:end="271:71"><name pos:start="271:13" pos:end="271:34">mpegts_set_stream_info</name><argument_list pos:start="271:35" pos:end="271:71">(<argument pos:start="271:36" pos:end="271:37"><expr pos:start="271:36" pos:end="271:37"><name pos:start="271:36" pos:end="271:37">st</name></expr></argument>, <argument pos:start="271:40" pos:end="271:42"><expr pos:start="271:40" pos:end="271:42"><name pos:start="271:40" pos:end="271:42">pes</name></expr></argument>, <argument pos:start="271:45" pos:end="271:55"><expr pos:start="271:45" pos:end="271:55"><name pos:start="271:45" pos:end="271:55">stream_type</name></expr></argument>, <argument pos:start="271:58" pos:end="271:70"><expr pos:start="271:58" pos:end="271:70"><name pos:start="271:58" pos:end="271:70">prog_reg_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="275:9" pos:end="275:39"><expr pos:start="275:9" pos:end="275:38"><call pos:start="275:9" pos:end="275:38"><name pos:start="275:9" pos:end="275:22">add_pid_to_pmt</name><argument_list pos:start="275:23" pos:end="275:38">(<argument pos:start="275:24" pos:end="275:25"><expr pos:start="275:24" pos:end="275:25"><name pos:start="275:24" pos:end="275:25">ts</name></expr></argument>, <argument pos:start="275:28" pos:end="275:32"><expr pos:start="275:28" pos:end="275:32"><name pos:start="275:28" pos:end="275:32"><name pos:start="275:28" pos:end="275:28">h</name><operator pos:start="275:29" pos:end="275:30">-&gt;</operator><name pos:start="275:31" pos:end="275:32">id</name></name></expr></argument>, <argument pos:start="275:35" pos:end="275:37"><expr pos:start="275:35" pos:end="275:37"><name pos:start="275:35" pos:end="275:37">pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="279:9" pos:end="279:66"><expr pos:start="279:9" pos:end="279:65"><call pos:start="279:9" pos:end="279:65"><name pos:start="279:9" pos:end="279:35">ff_program_add_stream_index</name><argument_list pos:start="279:36" pos:end="279:65">(<argument pos:start="279:37" pos:end="279:46"><expr pos:start="279:37" pos:end="279:46"><name pos:start="279:37" pos:end="279:46"><name pos:start="279:37" pos:end="279:38">ts</name><operator pos:start="279:39" pos:end="279:40">-&gt;</operator><name pos:start="279:41" pos:end="279:46">stream</name></name></expr></argument>, <argument pos:start="279:49" pos:end="279:53"><expr pos:start="279:49" pos:end="279:53"><name pos:start="279:49" pos:end="279:53"><name pos:start="279:49" pos:end="279:49">h</name><operator pos:start="279:50" pos:end="279:51">-&gt;</operator><name pos:start="279:52" pos:end="279:53">id</name></name></expr></argument>, <argument pos:start="279:56" pos:end="279:64"><expr pos:start="279:56" pos:end="279:64"><name pos:start="279:56" pos:end="279:64"><name pos:start="279:56" pos:end="279:57">st</name><operator pos:start="279:58" pos:end="279:59">-&gt;</operator><name pos:start="279:60" pos:end="279:64">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="283:9" pos:end="283:41"><expr pos:start="283:9" pos:end="283:40"><name pos:start="283:9" pos:end="283:21">desc_list_len</name> <operator pos:start="283:23" pos:end="283:23">=</operator> <call pos:start="283:25" pos:end="283:40"><name pos:start="283:25" pos:end="283:29">get16</name><argument_list pos:start="283:30" pos:end="283:40">(<argument pos:start="283:31" pos:end="283:32"><expr pos:start="283:31" pos:end="283:32"><operator pos:start="283:31" pos:end="283:31">&amp;</operator><name pos:start="283:32" pos:end="283:32">p</name></expr></argument>, <argument pos:start="283:35" pos:end="283:39"><expr pos:start="283:35" pos:end="283:39"><name pos:start="283:35" pos:end="283:39">p_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="287:21"><if pos:start="285:9" pos:end="287:21">if <condition pos:start="285:12" pos:end="285:30">(<expr pos:start="285:13" pos:end="285:29"><name pos:start="285:13" pos:end="285:25">desc_list_len</name> <operator pos:start="285:27" pos:end="285:27">&lt;</operator> <literal type="number" pos:start="285:29" pos:end="285:29">0</literal></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:21"><block_content pos:start="287:13" pos:end="287:21">

            <goto pos:start="287:13" pos:end="287:21">goto <name pos:start="287:18" pos:end="287:20">out</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:31"><expr pos:start="289:9" pos:end="289:30"><name pos:start="289:9" pos:end="289:21">desc_list_len</name> <operator pos:start="289:23" pos:end="289:24">&amp;=</operator> <literal type="number" pos:start="289:26" pos:end="289:30">0xfff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:43"><expr pos:start="291:9" pos:end="291:42"><name pos:start="291:9" pos:end="291:21">desc_list_end</name>  <operator pos:start="291:24" pos:end="291:24">=</operator> <name pos:start="291:26" pos:end="291:26">p</name> <operator pos:start="291:28" pos:end="291:28">+</operator> <name pos:start="291:30" pos:end="291:42">desc_list_len</name></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="295:21"><if pos:start="293:9" pos:end="295:21">if <condition pos:start="293:12" pos:end="293:34">(<expr pos:start="293:13" pos:end="293:33"><name pos:start="293:13" pos:end="293:25">desc_list_end</name> <operator pos:start="293:27" pos:end="293:27">&gt;</operator> <name pos:start="293:29" pos:end="293:33">p_end</name></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:21"><block_content pos:start="295:13" pos:end="295:21">

            <goto pos:start="295:13" pos:end="295:21">goto <name pos:start="295:18" pos:end="295:20">out</name>;</goto></block_content></block></if></if_stmt>

        <for pos:start="297:9" pos:end="321:9">for <control pos:start="297:13" pos:end="297:16">(<init pos:start="297:14" pos:end="297:14">;</init><condition pos:start="297:15" pos:end="297:15">;</condition><incr/>)</control> <block pos:start="297:18" pos:end="321:9">{<block_content pos:start="299:13" pos:end="319:13">

            <if_stmt pos:start="299:13" pos:end="305:22"><if pos:start="299:13" pos:end="305:22">if <condition pos:start="299:16" pos:end="303:72">(<expr pos:start="299:17" pos:end="303:71"><call pos:start="299:17" pos:end="303:67"><name pos:start="299:17" pos:end="299:41">ff_parse_mpeg2_descriptor</name><argument_list pos:start="299:42" pos:end="303:67">(<argument pos:start="299:43" pos:end="299:52"><expr pos:start="299:43" pos:end="299:52"><name pos:start="299:43" pos:end="299:52"><name pos:start="299:43" pos:end="299:44">ts</name><operator pos:start="299:45" pos:end="299:46">-&gt;</operator><name pos:start="299:47" pos:end="299:52">stream</name></name></expr></argument>, <argument pos:start="299:55" pos:end="299:56"><expr pos:start="299:55" pos:end="299:56"><name pos:start="299:55" pos:end="299:56">st</name></expr></argument>, <argument pos:start="299:59" pos:end="299:69"><expr pos:start="299:59" pos:end="299:69"><name pos:start="299:59" pos:end="299:69">stream_type</name></expr></argument>, <argument pos:start="299:72" pos:end="299:73"><expr pos:start="299:72" pos:end="299:73"><operator pos:start="299:72" pos:end="299:72">&amp;</operator><name pos:start="299:73" pos:end="299:73">p</name></expr></argument>,

                                          <argument pos:start="301:43" pos:end="301:55"><expr pos:start="301:43" pos:end="301:55"><name pos:start="301:43" pos:end="301:55">desc_list_end</name></expr></argument>, <argument pos:start="301:58" pos:end="301:66"><expr pos:start="301:58" pos:end="301:66"><name pos:start="301:58" pos:end="301:66">mp4_descr</name></expr></argument>,

                                          <argument pos:start="303:43" pos:end="303:57"><expr pos:start="303:43" pos:end="303:57"><name pos:start="303:43" pos:end="303:57">mp4_descr_count</name></expr></argument>, <argument pos:start="303:60" pos:end="303:62"><expr pos:start="303:60" pos:end="303:62"><name pos:start="303:60" pos:end="303:62">pid</name></expr></argument>, <argument pos:start="303:65" pos:end="303:66"><expr pos:start="303:65" pos:end="303:66"><name pos:start="303:65" pos:end="303:66">ts</name></expr></argument>)</argument_list></call> <operator pos:start="303:69" pos:end="303:69">&lt;</operator> <literal type="number" pos:start="303:71" pos:end="303:71">0</literal></expr>)</condition><block type="pseudo" pos:start="305:17" pos:end="305:22"><block_content pos:start="305:17" pos:end="305:22">

                <break pos:start="305:17" pos:end="305:22">break;</break></block_content></block></if></if_stmt>



            <if_stmt pos:start="309:13" pos:end="319:13"><if pos:start="309:13" pos:end="319:13">if <condition pos:start="309:16" pos:end="311:51">(<expr pos:start="309:17" pos:end="311:50"><name pos:start="309:17" pos:end="309:19">pes</name> <operator pos:start="309:21" pos:end="309:22">&amp;&amp;</operator> <name pos:start="309:24" pos:end="309:36">prog_reg_desc</name> <operator pos:start="309:38" pos:end="309:39">==</operator> <call pos:start="309:41" pos:end="309:55"><name pos:start="309:41" pos:end="309:47">AV_RL32</name><argument_list pos:start="309:48" pos:end="309:55">(<argument pos:start="309:49" pos:end="309:54"><expr pos:start="309:49" pos:end="309:54"><literal type="string" pos:start="309:49" pos:end="309:54">"HDMV"</literal></expr></argument>)</argument_list></call> <operator pos:start="309:57" pos:end="309:58">&amp;&amp;</operator>

                <name pos:start="311:17" pos:end="311:27">stream_type</name> <operator pos:start="311:29" pos:end="311:30">==</operator> <literal type="number" pos:start="311:32" pos:end="311:35">0x83</literal> <operator pos:start="311:37" pos:end="311:38">&amp;&amp;</operator> <name pos:start="311:40" pos:end="311:50"><name pos:start="311:40" pos:end="311:42">pes</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:50">sub_st</name></name></expr>)</condition> <block pos:start="311:53" pos:end="319:13">{<block_content pos:start="313:17" pos:end="317:69">

                <expr_stmt pos:start="313:17" pos:end="315:64"><expr pos:start="313:17" pos:end="315:63"><call pos:start="313:17" pos:end="315:63"><name pos:start="313:17" pos:end="313:43">ff_program_add_stream_index</name><argument_list pos:start="313:44" pos:end="315:63">(<argument pos:start="313:45" pos:end="313:54"><expr pos:start="313:45" pos:end="313:54"><name pos:start="313:45" pos:end="313:54"><name pos:start="313:45" pos:end="313:46">ts</name><operator pos:start="313:47" pos:end="313:48">-&gt;</operator><name pos:start="313:49" pos:end="313:54">stream</name></name></expr></argument>, <argument pos:start="313:57" pos:end="313:61"><expr pos:start="313:57" pos:end="313:61"><name pos:start="313:57" pos:end="313:61"><name pos:start="313:57" pos:end="313:57">h</name><operator pos:start="313:58" pos:end="313:59">-&gt;</operator><name pos:start="313:60" pos:end="313:61">id</name></name></expr></argument>,

                                            <argument pos:start="315:45" pos:end="315:62"><expr pos:start="315:45" pos:end="315:62"><name pos:start="315:45" pos:end="315:62"><name pos:start="315:45" pos:end="315:47">pes</name><operator pos:start="315:48" pos:end="315:49">-&gt;</operator><name pos:start="315:50" pos:end="315:55">sub_st</name><operator pos:start="315:56" pos:end="315:57">-&gt;</operator><name pos:start="315:58" pos:end="315:62">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:69"><expr pos:start="317:17" pos:end="317:68"><name pos:start="317:17" pos:end="317:45"><name pos:start="317:17" pos:end="317:19">pes</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:27">sub_st</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:34">codec</name><operator pos:start="317:35" pos:end="317:36">-&gt;</operator><name pos:start="317:37" pos:end="317:45">codec_tag</name></name> <operator pos:start="317:47" pos:end="317:47">=</operator> <name pos:start="317:49" pos:end="317:68"><name pos:start="317:49" pos:end="317:50">st</name><operator pos:start="317:51" pos:end="317:52">-&gt;</operator><name pos:start="317:53" pos:end="317:57">codec</name><operator pos:start="317:58" pos:end="317:59">-&gt;</operator><name pos:start="317:60" pos:end="317:68">codec_tag</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="323:9" pos:end="323:26"><expr pos:start="323:9" pos:end="323:25"><name pos:start="323:9" pos:end="323:9">p</name> <operator pos:start="323:11" pos:end="323:11">=</operator> <name pos:start="323:13" pos:end="323:25">desc_list_end</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="329:5" pos:end="331:44"><if pos:start="329:5" pos:end="331:44">if <condition pos:start="329:8" pos:end="329:27">(<expr pos:start="329:9" pos:end="329:26"><operator pos:start="329:9" pos:end="329:9">!</operator><name pos:start="329:10" pos:end="329:26"><name pos:start="329:10" pos:end="329:11">ts</name><operator pos:start="329:12" pos:end="329:13">-&gt;</operator><name pos:start="329:14" pos:end="329:17">pids</name><index pos:start="329:18" pos:end="329:26">[<expr pos:start="329:19" pos:end="329:25"><name pos:start="329:19" pos:end="329:25">pcr_pid</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="331:9" pos:end="331:44"><block_content pos:start="331:9" pos:end="331:44">

        <expr_stmt pos:start="331:9" pos:end="331:44"><expr pos:start="331:9" pos:end="331:43"><call pos:start="331:9" pos:end="331:43"><name pos:start="331:9" pos:end="331:30">mpegts_open_pcr_filter</name><argument_list pos:start="331:31" pos:end="331:43">(<argument pos:start="331:32" pos:end="331:33"><expr pos:start="331:32" pos:end="331:33"><name pos:start="331:32" pos:end="331:33">ts</name></expr></argument>, <argument pos:start="331:36" pos:end="331:42"><expr pos:start="331:36" pos:end="331:42"><name pos:start="331:36" pos:end="331:42">pcr_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="335:1" pos:end="335:4"><name pos:start="335:1" pos:end="335:3">out</name>:</label>

    <for pos:start="337:5" pos:end="339:47">for <control pos:start="337:9" pos:end="337:41">(<init pos:start="337:10" pos:end="337:15"><expr pos:start="337:10" pos:end="337:14"><name pos:start="337:10" pos:end="337:10">i</name> <operator pos:start="337:12" pos:end="337:12">=</operator> <literal type="number" pos:start="337:14" pos:end="337:14">0</literal></expr>;</init> <condition pos:start="337:17" pos:end="337:36"><expr pos:start="337:17" pos:end="337:35"><name pos:start="337:17" pos:end="337:17">i</name> <operator pos:start="337:19" pos:end="337:19">&lt;</operator> <name pos:start="337:21" pos:end="337:35">mp4_descr_count</name></expr>;</condition> <incr pos:start="337:38" pos:end="337:40"><expr pos:start="337:38" pos:end="337:40"><name pos:start="337:38" pos:end="337:38">i</name><operator pos:start="337:39" pos:end="337:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="339:9" pos:end="339:47"><block_content pos:start="339:9" pos:end="339:47">

        <expr_stmt pos:start="339:9" pos:end="339:47"><expr pos:start="339:9" pos:end="339:46"><call pos:start="339:9" pos:end="339:46"><name pos:start="339:9" pos:end="339:15">av_free</name><argument_list pos:start="339:16" pos:end="339:46">(<argument pos:start="339:17" pos:end="339:45"><expr pos:start="339:17" pos:end="339:45"><name pos:start="339:17" pos:end="339:28"><name pos:start="339:17" pos:end="339:25">mp4_descr</name><index pos:start="339:26" pos:end="339:28">[<expr pos:start="339:27" pos:end="339:27"><name pos:start="339:27" pos:end="339:27">i</name></expr>]</index></name><operator pos:start="339:29" pos:end="339:29">.</operator><name pos:start="339:30" pos:end="339:45">dec_config_descr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
