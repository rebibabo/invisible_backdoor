<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14218.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">update_frame_pool</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:59">AVFrame</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:15">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">FramePool</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pool</name> <init pos:start="5:21" pos:end="5:43">= <expr pos:start="5:23" pos:end="5:43"><name pos:start="5:23" pos:end="5:43"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:37">internal</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:43">pool</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="179:5">switch <condition pos:start="11:12" pos:end="11:30">(<expr pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:17">avctx</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:29">codec_type</name></name></expr>)</condition> <block pos:start="11:32" pos:end="179:5">{<block_content pos:start="13:5" pos:end="177:27">

    <case pos:start="13:5" pos:end="13:28">case <expr pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case> <block pos:start="13:30" pos:end="121:9">{<block_content pos:start="15:9" pos:end="119:14">

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:15">uint8_t</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:21">data</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:24"><decl pos:start="17:9" pos:end="17:23"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:20">linesize</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:28"><decl pos:start="19:9" pos:end="19:27"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:16">size</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">4</literal></expr>]</index></name> <init pos:start="19:21" pos:end="19:27">= <expr pos:start="19:23" pos:end="19:27"><block pos:start="19:23" pos:end="19:27">{ <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:29"><decl pos:start="21:9" pos:end="21:28"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">w</name> <init pos:start="21:15" pos:end="21:28">= <expr pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:21">frame</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:28">width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:30"><decl pos:start="23:9" pos:end="23:29"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">h</name> <init pos:start="23:15" pos:end="23:29">= <expr pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:21">frame</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:29">height</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:31"><decl pos:start="25:9" pos:end="25:19"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:19">tmpsize</name></decl>, <decl pos:start="25:22" pos:end="25:30"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:22" pos:end="25:30">unaligned</name></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="33:21"><if pos:start="29:9" pos:end="33:21">if <condition pos:start="29:12" pos:end="31:73">(<expr pos:start="29:13" pos:end="31:72"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:16">pool</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:24">format</name></name> <operator pos:start="29:26" pos:end="29:27">==</operator> <name pos:start="29:29" pos:end="29:41"><name pos:start="29:29" pos:end="29:33">frame</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:41">format</name></name> <operator pos:start="29:43" pos:end="29:44">&amp;&amp;</operator>

            <name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:16">pool</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">width</name></name> <operator pos:start="31:25" pos:end="31:26">==</operator> <name pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:32">frame</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:39">width</name></name> <operator pos:start="31:41" pos:end="31:42">&amp;&amp;</operator> <name pos:start="31:44" pos:end="31:55"><name pos:start="31:44" pos:end="31:47">pool</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:55">height</name></name> <operator pos:start="31:57" pos:end="31:58">==</operator> <name pos:start="31:60" pos:end="31:72"><name pos:start="31:60" pos:end="31:64">frame</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:72">height</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:33">avcodec_align_dimensions2</name><argument_list pos:start="37:34" pos:end="37:68">(<argument pos:start="37:35" pos:end="37:39"><expr pos:start="37:35" pos:end="37:39"><name pos:start="37:35" pos:end="37:39">avctx</name></expr></argument>, <argument pos:start="37:42" pos:end="37:43"><expr pos:start="37:42" pos:end="37:43"><operator pos:start="37:42" pos:end="37:42">&amp;</operator><name pos:start="37:43" pos:end="37:43">w</name></expr></argument>, <argument pos:start="37:46" pos:end="37:47"><expr pos:start="37:46" pos:end="37:47"><operator pos:start="37:46" pos:end="37:46">&amp;</operator><name pos:start="37:47" pos:end="37:47">h</name></expr></argument>, <argument pos:start="37:50" pos:end="37:67"><expr pos:start="37:50" pos:end="37:67"><name pos:start="37:50" pos:end="37:67"><name pos:start="37:50" pos:end="37:53">pool</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:67">stride_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <do pos:start="41:9" pos:end="61:28">do <block pos:start="41:12" pos:end="61:9">{<block_content pos:start="47:13" pos:end="59:65">

            <comment type="line" pos:start="43:13" pos:end="43:86">// NOTE: do not align linesizes individually, this breaks e.g. assumptions</comment>

            <comment type="line" pos:start="45:13" pos:end="45:78">// that linesize[0] == 2*linesize[1] in the MPEG-encoder for 4:2:2</comment>

            <expr_stmt pos:start="47:13" pos:end="47:65"><expr pos:start="47:13" pos:end="47:64"><call pos:start="47:13" pos:end="47:64"><name pos:start="47:13" pos:end="47:35">av_image_fill_linesizes</name><argument_list pos:start="47:36" pos:end="47:64">(<argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><name pos:start="47:37" pos:end="47:44">linesize</name></expr></argument>, <argument pos:start="47:47" pos:end="47:60"><expr pos:start="47:47" pos:end="47:60"><name pos:start="47:47" pos:end="47:60"><name pos:start="47:47" pos:end="47:51">avctx</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:60">pix_fmt</name></name></expr></argument>, <argument pos:start="47:63" pos:end="47:63"><expr pos:start="47:63" pos:end="47:63"><name pos:start="47:63" pos:end="47:63">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="49:13" pos:end="49:87">// increase alignment of w for next try (rhs gives the lowest bit set in w)</comment>

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:13">w</name> <operator pos:start="51:15" pos:end="51:16">+=</operator> <name pos:start="51:18" pos:end="51:18">w</name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <operator pos:start="51:22" pos:end="51:22">~</operator><operator pos:start="51:23" pos:end="51:23">(</operator><name pos:start="51:24" pos:end="51:24">w</name> <operator pos:start="51:26" pos:end="51:26">-</operator> <literal type="number" pos:start="51:28" pos:end="51:28">1</literal><operator pos:start="51:29" pos:end="51:29">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:21">unaligned</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>;</expr_stmt>

            <for pos:start="57:13" pos:end="59:65">for <control pos:start="57:17" pos:end="57:35">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">i</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:30"><expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:25">i</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <literal type="number" pos:start="57:29" pos:end="57:29">4</literal></expr>;</condition> <incr pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><name pos:start="57:32" pos:end="57:32">i</name><operator pos:start="57:33" pos:end="57:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:17" pos:end="59:65"><block_content pos:start="59:17" pos:end="59:65">

                <expr_stmt pos:start="59:17" pos:end="59:65"><expr pos:start="59:17" pos:end="59:64"><name pos:start="59:17" pos:end="59:25">unaligned</name> <operator pos:start="59:27" pos:end="59:28">|=</operator> <name pos:start="59:30" pos:end="59:40"><name pos:start="59:30" pos:end="59:37">linesize</name><index pos:start="59:38" pos:end="59:40">[<expr pos:start="59:39" pos:end="59:39"><name pos:start="59:39" pos:end="59:39">i</name></expr>]</index></name> <operator pos:start="59:42" pos:end="59:42">%</operator> <name pos:start="59:44" pos:end="59:64"><name pos:start="59:44" pos:end="59:47">pool</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:61">stride_align</name><index pos:start="59:62" pos:end="59:64">[<expr pos:start="59:63" pos:end="59:63"><name pos:start="59:63" pos:end="59:63">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block> while <condition pos:start="61:17" pos:end="61:27">(<expr pos:start="61:18" pos:end="61:26"><name pos:start="61:18" pos:end="61:26">unaligned</name></expr>)</condition>;</do>



        <expr_stmt pos:start="65:9" pos:end="67:57"><expr pos:start="65:9" pos:end="67:56"><name pos:start="65:9" pos:end="65:15">tmpsize</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="67:56"><name pos:start="65:19" pos:end="65:40">av_image_fill_pointers</name><argument_list pos:start="65:41" pos:end="67:56">(<argument pos:start="65:42" pos:end="65:45"><expr pos:start="65:42" pos:end="65:45"><name pos:start="65:42" pos:end="65:45">data</name></expr></argument>, <argument pos:start="65:48" pos:end="65:61"><expr pos:start="65:48" pos:end="65:61"><name pos:start="65:48" pos:end="65:61"><name pos:start="65:48" pos:end="65:52">avctx</name><operator pos:start="65:53" pos:end="65:54">-&gt;</operator><name pos:start="65:55" pos:end="65:61">pix_fmt</name></name></expr></argument>, <argument pos:start="65:64" pos:end="65:64"><expr pos:start="65:64" pos:end="65:64"><name pos:start="65:64" pos:end="65:64">h</name></expr></argument>,

                                         <argument pos:start="67:42" pos:end="67:45"><expr pos:start="67:42" pos:end="67:45"><name pos:start="67:42" pos:end="67:45">NULL</name></expr></argument>, <argument pos:start="67:48" pos:end="67:55"><expr pos:start="67:48" pos:end="67:55"><name pos:start="67:48" pos:end="67:55">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:22"><if pos:start="69:9" pos:end="71:22">if <condition pos:start="69:12" pos:end="69:24">(<expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:19">tmpsize</name> <operator pos:start="69:21" pos:end="69:21">&lt;</operator> <literal type="number" pos:start="69:23" pos:end="69:23">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:22"><block_content pos:start="71:13" pos:end="71:22">

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="75:9" pos:end="77:44">for <control pos:start="75:13" pos:end="75:46">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:41"><expr pos:start="75:21" pos:end="75:40"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <literal type="number" pos:start="75:25" pos:end="75:25">3</literal> <operator pos:start="75:27" pos:end="75:28">&amp;&amp;</operator> <name pos:start="75:30" pos:end="75:40"><name pos:start="75:30" pos:end="75:33">data</name><index pos:start="75:34" pos:end="75:40">[<expr pos:start="75:35" pos:end="75:39"><name pos:start="75:35" pos:end="75:35">i</name> <operator pos:start="75:37" pos:end="75:37">+</operator> <literal type="number" pos:start="75:39" pos:end="75:39">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><name pos:start="75:43" pos:end="75:43">i</name><operator pos:start="75:44" pos:end="75:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:13" pos:end="77:44"><block_content pos:start="77:13" pos:end="77:44">

            <expr_stmt pos:start="77:13" pos:end="77:44"><expr pos:start="77:13" pos:end="77:43"><name pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:16">size</name><index pos:start="77:17" pos:end="77:19">[<expr pos:start="77:18" pos:end="77:18"><name pos:start="77:18" pos:end="77:18">i</name></expr>]</index></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:26">data</name><index pos:start="77:27" pos:end="77:33">[<expr pos:start="77:28" pos:end="77:32"><name pos:start="77:28" pos:end="77:28">i</name> <operator pos:start="77:30" pos:end="77:30">+</operator> <literal type="number" pos:start="77:32" pos:end="77:32">1</literal></expr>]</index></name> <operator pos:start="77:35" pos:end="77:35">-</operator> <name pos:start="77:37" pos:end="77:43"><name pos:start="77:37" pos:end="77:40">data</name><index pos:start="77:41" pos:end="77:43">[<expr pos:start="77:42" pos:end="77:42"><name pos:start="77:42" pos:end="77:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:12">size</name><index pos:start="79:13" pos:end="79:15">[<expr pos:start="79:14" pos:end="79:14"><name pos:start="79:14" pos:end="79:14">i</name></expr>]</index></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:25">tmpsize</name> <operator pos:start="79:27" pos:end="79:27">-</operator> <operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:36"><name pos:start="79:30" pos:end="79:33">data</name><index pos:start="79:34" pos:end="79:36">[<expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">i</name></expr>]</index></name> <operator pos:start="79:38" pos:end="79:38">-</operator> <name pos:start="79:40" pos:end="79:46"><name pos:start="79:40" pos:end="79:43">data</name><index pos:start="79:44" pos:end="79:46">[<expr pos:start="79:45" pos:end="79:45"><literal type="number" pos:start="79:45" pos:end="79:45">0</literal></expr>]</index></name><operator pos:start="79:47" pos:end="79:47">)</operator></expr>;</expr_stmt>



        <for pos:start="83:9" pos:end="109:9">for <control pos:start="83:13" pos:end="83:31">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:26"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">i</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <literal type="number" pos:start="83:25" pos:end="83:25">4</literal></expr>;</condition> <incr pos:start="83:28" pos:end="83:30"><expr pos:start="83:28" pos:end="83:30"><name pos:start="83:28" pos:end="83:28">i</name><operator pos:start="83:29" pos:end="83:30">++</operator></expr></incr>)</control> <block pos:start="83:33" pos:end="109:9">{<block_content pos:start="85:13" pos:end="107:13">

            <expr_stmt pos:start="85:13" pos:end="85:51"><expr pos:start="85:13" pos:end="85:50"><call pos:start="85:13" pos:end="85:50"><name pos:start="85:13" pos:end="85:33">av_buffer_pool_uninit</name><argument_list pos:start="85:34" pos:end="85:50">(<argument pos:start="85:35" pos:end="85:49"><expr pos:start="85:35" pos:end="85:49"><operator pos:start="85:35" pos:end="85:35">&amp;</operator><name pos:start="85:36" pos:end="85:49"><name pos:start="85:36" pos:end="85:39">pool</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:46">pools</name><index pos:start="85:47" pos:end="85:49">[<expr pos:start="85:48" pos:end="85:48"><name pos:start="85:48" pos:end="85:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:44"><expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:16">pool</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:26">linesize</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><name pos:start="87:28" pos:end="87:28">i</name></expr>]</index></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:43"><name pos:start="87:33" pos:end="87:40">linesize</name><index pos:start="87:41" pos:end="87:43">[<expr pos:start="87:42" pos:end="87:42"><name pos:start="87:42" pos:end="87:42">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="107:13"><if pos:start="89:13" pos:end="107:13">if <condition pos:start="89:16" pos:end="89:24">(<expr pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:20">size</name><index pos:start="89:21" pos:end="89:23">[<expr pos:start="89:22" pos:end="89:22"><name pos:start="89:22" pos:end="89:22">i</name></expr>]</index></name></expr>)</condition> <block pos:start="89:26" pos:end="107:13">{<block_content pos:start="91:17" pos:end="105:17">

                <expr_stmt pos:start="91:17" pos:end="97:74"><expr pos:start="91:17" pos:end="97:73"><name pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:20">pool</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">pools</name><index pos:start="91:28" pos:end="91:30">[<expr pos:start="91:29" pos:end="91:29"><name pos:start="91:29" pos:end="91:29">i</name></expr>]</index></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <call pos:start="91:34" pos:end="97:73"><name pos:start="91:34" pos:end="91:52">av_buffer_pool_init</name><argument_list pos:start="91:53" pos:end="97:73">(<argument pos:start="91:54" pos:end="91:84"><expr pos:start="91:54" pos:end="91:84"><name pos:start="91:54" pos:end="91:60"><name pos:start="91:54" pos:end="91:57">size</name><index pos:start="91:58" pos:end="91:60">[<expr pos:start="91:59" pos:end="91:59"><name pos:start="91:59" pos:end="91:59">i</name></expr>]</index></name> <operator pos:start="91:62" pos:end="91:62">+</operator> <literal type="number" pos:start="91:64" pos:end="91:67">16</literal> <operator pos:start="91:67" pos:end="91:67">+</operator> <name pos:start="91:69" pos:end="91:80">STRIDE_ALIGN</name> <operator pos:start="91:82" pos:end="91:82">-</operator> <literal type="number" pos:start="91:84" pos:end="91:84">1</literal></expr></argument>,

                                                     <argument pos:start="93:54" pos:end="97:72"><expr pos:start="93:54" pos:end="97:72"><ternary pos:start="93:54" pos:end="97:72"><condition pos:start="93:54" pos:end="93:78"><expr pos:start="93:54" pos:end="93:76"><name pos:start="93:54" pos:end="93:76">CONFIG_MEMORY_POISONING</name></expr> ?</condition><then pos:start="95:57" pos:end="95:60">

                                                        <expr pos:start="95:57" pos:end="95:60"><name pos:start="95:57" pos:end="95:60">NULL</name></expr> </then><else pos:start="95:62" pos:end="97:72">:

                                                        <expr pos:start="97:57" pos:end="97:72"><name pos:start="97:57" pos:end="97:72">av_buffer_allocz</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="99:17" pos:end="105:17"><if pos:start="99:17" pos:end="105:17">if <condition pos:start="99:20" pos:end="99:36">(<expr pos:start="99:21" pos:end="99:35"><operator pos:start="99:21" pos:end="99:21">!</operator><name pos:start="99:22" pos:end="99:35"><name pos:start="99:22" pos:end="99:25">pool</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:32">pools</name><index pos:start="99:33" pos:end="99:35">[<expr pos:start="99:34" pos:end="99:34"><name pos:start="99:34" pos:end="99:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="99:38" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:30">

                    <expr_stmt pos:start="101:21" pos:end="101:42"><expr pos:start="101:21" pos:end="101:41"><name pos:start="101:21" pos:end="101:23">ret</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <call pos:start="101:27" pos:end="101:41"><name pos:start="101:27" pos:end="101:33">AVERROR</name><argument_list pos:start="101:34" pos:end="101:41">(<argument pos:start="101:35" pos:end="101:40"><expr pos:start="101:35" pos:end="101:40"><name pos:start="101:35" pos:end="101:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="103:21" pos:end="103:30">goto <name pos:start="103:26" pos:end="103:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:12">pool</name><operator pos:start="111:13" pos:end="111:14">-&gt;</operator><name pos:start="111:15" pos:end="111:20">format</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:28">frame</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:36">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:36"><expr pos:start="113:9" pos:end="113:35"><name pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:12">pool</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:19">width</name></name>  <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:35"><name pos:start="113:24" pos:end="113:28">frame</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:35">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:12">pool</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:20">height</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:28">frame</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:36">height</name></name></expr>;</expr_stmt>



        <break pos:start="119:9" pos:end="119:14">break;</break>

        </block_content>}</block>

    <case pos:start="123:5" pos:end="123:28">case <expr pos:start="123:10" pos:end="123:27"><name pos:start="123:10" pos:end="123:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case> <block pos:start="123:30" pos:end="175:9">{<block_content pos:start="125:9" pos:end="173:14">

        <decl_stmt pos:start="125:9" pos:end="125:50"><decl pos:start="125:9" pos:end="125:49"><type pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:11">int</name></type> <name pos:start="125:13" pos:end="125:14">ch</name>     <init pos:start="125:20" pos:end="125:49">= <expr pos:start="125:22" pos:end="125:49"><call pos:start="125:22" pos:end="125:49"><name pos:start="125:22" pos:end="125:42">av_frame_get_channels</name><argument_list pos:start="125:43" pos:end="125:49">(<argument pos:start="125:44" pos:end="125:48"><expr pos:start="125:44" pos:end="125:48"><name pos:start="125:44" pos:end="125:48">frame</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="125:52" pos:end="125:110">//av_get_channel_layout_nb_channels(frame-&gt;channel_layout);</comment>

        <decl_stmt pos:start="127:9" pos:end="127:60"><decl pos:start="127:9" pos:end="127:59"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:18">planar</name> <init pos:start="127:20" pos:end="127:59">= <expr pos:start="127:22" pos:end="127:59"><call pos:start="127:22" pos:end="127:59"><name pos:start="127:22" pos:end="127:44">av_sample_fmt_is_planar</name><argument_list pos:start="127:45" pos:end="127:59">(<argument pos:start="127:46" pos:end="127:58"><expr pos:start="127:46" pos:end="127:58"><name pos:start="127:46" pos:end="127:58"><name pos:start="127:46" pos:end="127:50">frame</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:58">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:37"><decl pos:start="129:9" pos:end="129:36"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:18">planes</name> <init pos:start="129:20" pos:end="129:36">= <expr pos:start="129:22" pos:end="129:36"><ternary pos:start="129:22" pos:end="129:36"><condition pos:start="129:22" pos:end="129:29"><expr pos:start="129:22" pos:end="129:27"><name pos:start="129:22" pos:end="129:27">planar</name></expr> ?</condition><then pos:start="129:31" pos:end="129:32"> <expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">ch</name></expr> </then><else pos:start="129:34" pos:end="129:36">: <expr pos:start="129:36" pos:end="129:36"><literal type="number" pos:start="129:36" pos:end="129:36">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="133:9" pos:end="137:21"><if pos:start="133:9" pos:end="137:21">if <condition pos:start="133:12" pos:end="135:71">(<expr pos:start="133:13" pos:end="135:70"><name pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:16">pool</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:24">format</name></name> <operator pos:start="133:26" pos:end="133:27">==</operator> <name pos:start="133:29" pos:end="133:41"><name pos:start="133:29" pos:end="133:33">frame</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:41">format</name></name> <operator pos:start="133:43" pos:end="133:44">&amp;&amp;</operator> <name pos:start="133:46" pos:end="133:57"><name pos:start="133:46" pos:end="133:49">pool</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:57">planes</name></name> <operator pos:start="133:59" pos:end="133:60">==</operator> <name pos:start="133:62" pos:end="133:67">planes</name> <operator pos:start="133:69" pos:end="133:70">&amp;&amp;</operator>

            <name pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:16">pool</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:26">channels</name></name> <operator pos:start="135:28" pos:end="135:29">==</operator> <name pos:start="135:31" pos:end="135:32">ch</name> <operator pos:start="135:34" pos:end="135:35">&amp;&amp;</operator> <name pos:start="135:37" pos:end="135:53"><name pos:start="135:37" pos:end="135:41">frame</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:53">nb_samples</name></name> <operator pos:start="135:55" pos:end="135:56">==</operator> <name pos:start="135:58" pos:end="135:70"><name pos:start="135:58" pos:end="135:61">pool</name><operator pos:start="135:62" pos:end="135:63">-&gt;</operator><name pos:start="135:64" pos:end="135:70">samples</name></name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:21"><block_content pos:start="137:13" pos:end="137:21">

            <return pos:start="137:13" pos:end="137:21">return <expr pos:start="137:20" pos:end="137:20"><literal type="number" pos:start="137:20" pos:end="137:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:47"><expr pos:start="141:9" pos:end="141:46"><call pos:start="141:9" pos:end="141:46"><name pos:start="141:9" pos:end="141:29">av_buffer_pool_uninit</name><argument_list pos:start="141:30" pos:end="141:46">(<argument pos:start="141:31" pos:end="141:45"><expr pos:start="141:31" pos:end="141:45"><operator pos:start="141:31" pos:end="141:31">&amp;</operator><name pos:start="141:32" pos:end="141:45"><name pos:start="141:32" pos:end="141:35">pool</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:42">pools</name><index pos:start="141:43" pos:end="141:45">[<expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="145:78"><expr pos:start="143:9" pos:end="145:77"><name pos:start="143:9" pos:end="143:11">ret</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <call pos:start="143:15" pos:end="145:77"><name pos:start="143:15" pos:end="143:40">av_samples_get_buffer_size</name><argument_list pos:start="143:41" pos:end="145:77">(<argument pos:start="143:42" pos:end="143:59"><expr pos:start="143:42" pos:end="143:59"><operator pos:start="143:42" pos:end="143:42">&amp;</operator><name pos:start="143:43" pos:end="143:59"><name pos:start="143:43" pos:end="143:46">pool</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:56">linesize</name><index pos:start="143:57" pos:end="143:59">[<expr pos:start="143:58" pos:end="143:58"><literal type="number" pos:start="143:58" pos:end="143:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:62" pos:end="143:63"><expr pos:start="143:62" pos:end="143:63"><name pos:start="143:62" pos:end="143:63">ch</name></expr></argument>,

                                         <argument pos:start="145:42" pos:end="145:58"><expr pos:start="145:42" pos:end="145:58"><name pos:start="145:42" pos:end="145:58"><name pos:start="145:42" pos:end="145:46">frame</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:58">nb_samples</name></name></expr></argument>, <argument pos:start="145:61" pos:end="145:73"><expr pos:start="145:61" pos:end="145:73"><name pos:start="145:61" pos:end="145:73"><name pos:start="145:61" pos:end="145:65">frame</name><operator pos:start="145:66" pos:end="145:67">-&gt;</operator><name pos:start="145:68" pos:end="145:73">format</name></name></expr></argument>, <argument pos:start="145:76" pos:end="145:76"><expr pos:start="145:76" pos:end="145:76"><literal type="number" pos:start="145:76" pos:end="145:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:22"><if pos:start="147:9" pos:end="149:22">if <condition pos:start="147:12" pos:end="147:20">(<expr pos:start="147:13" pos:end="147:19"><name pos:start="147:13" pos:end="147:15">ret</name> <operator pos:start="147:17" pos:end="147:17">&lt;</operator> <literal type="number" pos:start="147:19" pos:end="147:19">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:22"><block_content pos:start="149:13" pos:end="149:22">

            <goto pos:start="149:13" pos:end="149:22">goto <name pos:start="149:18" pos:end="149:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:70"><expr pos:start="153:9" pos:end="153:69"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:12">pool</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:19">pools</name><index pos:start="153:20" pos:end="153:22">[<expr pos:start="153:21" pos:end="153:21"><literal type="number" pos:start="153:21" pos:end="153:21">0</literal></expr>]</index></name> <operator pos:start="153:24" pos:end="153:24">=</operator> <call pos:start="153:26" pos:end="153:69"><name pos:start="153:26" pos:end="153:44">av_buffer_pool_init</name><argument_list pos:start="153:45" pos:end="153:69">(<argument pos:start="153:46" pos:end="153:62"><expr pos:start="153:46" pos:end="153:62"><name pos:start="153:46" pos:end="153:62"><name pos:start="153:46" pos:end="153:49">pool</name><operator pos:start="153:50" pos:end="153:51">-&gt;</operator><name pos:start="153:52" pos:end="153:59">linesize</name><index pos:start="153:60" pos:end="153:62">[<expr pos:start="153:61" pos:end="153:61"><literal type="number" pos:start="153:61" pos:end="153:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:65" pos:end="153:68"><expr pos:start="153:65" pos:end="153:68"><name pos:start="153:65" pos:end="153:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:28">(<expr pos:start="155:13" pos:end="155:27"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:27"><name pos:start="155:14" pos:end="155:17">pool</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:24">pools</name><index pos:start="155:25" pos:end="155:27">[<expr pos:start="155:26" pos:end="155:26"><literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="155:30" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:22">

            <expr_stmt pos:start="157:13" pos:end="157:34"><expr pos:start="157:13" pos:end="157:33"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:33"><name pos:start="157:19" pos:end="157:25">AVERROR</name><argument_list pos:start="157:26" pos:end="157:33">(<argument pos:start="157:27" pos:end="157:32"><expr pos:start="157:27" pos:end="157:32"><name pos:start="157:27" pos:end="157:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="159:13" pos:end="159:22">goto <name pos:start="159:18" pos:end="159:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:41"><expr pos:start="165:9" pos:end="165:40"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:12">pool</name><operator pos:start="165:13" pos:end="165:14">-&gt;</operator><name pos:start="165:15" pos:end="165:20">format</name></name>     <operator pos:start="165:26" pos:end="165:26">=</operator> <name pos:start="165:28" pos:end="165:40"><name pos:start="165:28" pos:end="165:32">frame</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator><name pos:start="165:35" pos:end="165:40">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:34"><expr pos:start="167:9" pos:end="167:33"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:12">pool</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:20">planes</name></name>     <operator pos:start="167:26" pos:end="167:26">=</operator> <name pos:start="167:28" pos:end="167:33">planes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:12">pool</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:22">channels</name></name>   <operator pos:start="169:26" pos:end="169:26">=</operator> <name pos:start="169:28" pos:end="169:29">ch</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:42"><expr pos:start="171:9" pos:end="171:41"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:12">pool</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:21">samples</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:41"><name pos:start="171:25" pos:end="171:29">frame</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:41">nb_samples</name></name></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

        </block_content>}</block>

    <default pos:start="177:5" pos:end="177:12">default:</default> <expr_stmt pos:start="177:14" pos:end="177:27"><expr pos:start="177:14" pos:end="177:26"><call pos:start="177:14" pos:end="177:26"><name pos:start="177:14" pos:end="177:23">av_assert0</name><argument_list pos:start="177:24" pos:end="177:26">(<argument pos:start="177:25" pos:end="177:25"><expr pos:start="177:25" pos:end="177:25"><literal type="number" pos:start="177:25" pos:end="177:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

<label pos:start="183:1" pos:end="183:5"><name pos:start="183:1" pos:end="183:4">fail</name>:</label>

    <for pos:start="185:5" pos:end="187:47">for <control pos:start="185:9" pos:end="185:27">(<init pos:start="185:10" pos:end="185:15"><expr pos:start="185:10" pos:end="185:14"><name pos:start="185:10" pos:end="185:10">i</name> <operator pos:start="185:12" pos:end="185:12">=</operator> <literal type="number" pos:start="185:14" pos:end="185:14">0</literal></expr>;</init> <condition pos:start="185:17" pos:end="185:22"><expr pos:start="185:17" pos:end="185:21"><name pos:start="185:17" pos:end="185:17">i</name> <operator pos:start="185:19" pos:end="185:19">&lt;</operator> <literal type="number" pos:start="185:21" pos:end="185:21">4</literal></expr>;</condition> <incr pos:start="185:24" pos:end="185:26"><expr pos:start="185:24" pos:end="185:26"><name pos:start="185:24" pos:end="185:24">i</name><operator pos:start="185:25" pos:end="185:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:9" pos:end="187:47"><block_content pos:start="187:9" pos:end="187:47">

        <expr_stmt pos:start="187:9" pos:end="187:47"><expr pos:start="187:9" pos:end="187:46"><call pos:start="187:9" pos:end="187:46"><name pos:start="187:9" pos:end="187:29">av_buffer_pool_uninit</name><argument_list pos:start="187:30" pos:end="187:46">(<argument pos:start="187:31" pos:end="187:45"><expr pos:start="187:31" pos:end="187:45"><operator pos:start="187:31" pos:end="187:31">&amp;</operator><name pos:start="187:32" pos:end="187:45"><name pos:start="187:32" pos:end="187:35">pool</name><operator pos:start="187:36" pos:end="187:37">-&gt;</operator><name pos:start="187:38" pos:end="187:42">pools</name><index pos:start="187:43" pos:end="187:45">[<expr pos:start="187:44" pos:end="187:44"><name pos:start="187:44" pos:end="187:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="189:5" pos:end="189:22"><expr pos:start="189:5" pos:end="189:21"><name pos:start="189:5" pos:end="189:16"><name pos:start="189:5" pos:end="189:8">pool</name><operator pos:start="189:9" pos:end="189:10">-&gt;</operator><name pos:start="189:11" pos:end="189:16">format</name></name> <operator pos:start="189:18" pos:end="189:18">=</operator> <operator pos:start="189:20" pos:end="189:20">-</operator><literal type="number" pos:start="189:21" pos:end="189:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:54"><expr pos:start="191:5" pos:end="191:53"><name pos:start="191:5" pos:end="191:16"><name pos:start="191:5" pos:end="191:8">pool</name><operator pos:start="191:9" pos:end="191:10">-&gt;</operator><name pos:start="191:11" pos:end="191:16">planes</name></name> <operator pos:start="191:18" pos:end="191:18">=</operator> <name pos:start="191:20" pos:end="191:33"><name pos:start="191:20" pos:end="191:23">pool</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:33">channels</name></name> <operator pos:start="191:35" pos:end="191:35">=</operator> <name pos:start="191:37" pos:end="191:49"><name pos:start="191:37" pos:end="191:40">pool</name><operator pos:start="191:41" pos:end="191:42">-&gt;</operator><name pos:start="191:43" pos:end="191:49">samples</name></name> <operator pos:start="191:51" pos:end="191:51">=</operator> <literal type="number" pos:start="191:53" pos:end="191:53">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:36"><expr pos:start="193:5" pos:end="193:35"><name pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:8">pool</name><operator pos:start="193:9" pos:end="193:10">-&gt;</operator><name pos:start="193:11" pos:end="193:15">width</name></name>  <operator pos:start="193:18" pos:end="193:18">=</operator> <name pos:start="193:20" pos:end="193:31"><name pos:start="193:20" pos:end="193:23">pool</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:31">height</name></name> <operator pos:start="193:33" pos:end="193:33">=</operator> <literal type="number" pos:start="193:35" pos:end="193:35">0</literal></expr>;</expr_stmt>

    <return pos:start="195:5" pos:end="195:15">return <expr pos:start="195:12" pos:end="195:14"><name pos:start="195:12" pos:end="195:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
