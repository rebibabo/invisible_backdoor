<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17533.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">sws_freeContext</name><parameter_list pos:start="1:21" pos:end="1:35">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:31">SwsContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="7:19"><if pos:start="7:5" pos:end="7:19">if <condition pos:start="7:8" pos:end="7:11">(<expr pos:start="7:9" pos:end="7:10"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:10">c</name></expr>)</condition><block type="pseudo" pos:start="7:13" pos:end="7:19"><block_content pos:start="7:13" pos:end="7:19"> <return pos:start="7:13" pos:end="7:19">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">lumPixBuf</name></name></expr>)</condition> <block pos:start="11:23" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:32">

        <for pos:start="13:9" pos:end="15:39">for <control pos:start="13:13" pos:end="13:40">(<init pos:start="13:14" pos:end="13:17"><expr pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:14">i</name><operator pos:start="13:15" pos:end="13:15">=</operator><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</init> <condition pos:start="13:19" pos:end="13:35"><expr pos:start="13:19" pos:end="13:34"><name pos:start="13:19" pos:end="13:19">i</name><operator pos:start="13:20" pos:end="13:20">&lt;</operator><name pos:start="13:21" pos:end="13:34"><name pos:start="13:21" pos:end="13:21">c</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:37">i</name><operator pos:start="13:38" pos:end="13:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:13" pos:end="15:39"><block_content pos:start="15:13" pos:end="15:39">

            <expr_stmt pos:start="15:13" pos:end="15:39"><expr pos:start="15:13" pos:end="15:38"><call pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:20">av_freep</name><argument_list pos:start="15:21" pos:end="15:38">(<argument pos:start="15:22" pos:end="15:37"><expr pos:start="15:22" pos:end="15:37"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:23">c</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:34">lumPixBuf</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:16">av_freep</name><argument_list pos:start="17:17" pos:end="17:31">(<argument pos:start="17:18" pos:end="17:30"><expr pos:start="17:18" pos:end="17:30"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:19">c</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:30">lumPixBuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">chrPixBuf</name></name></expr>)</condition> <block pos:start="23:23" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:32">

        <for pos:start="25:9" pos:end="27:39">for <control pos:start="25:13" pos:end="25:40">(<init pos:start="25:14" pos:end="25:17"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:14">i</name><operator pos:start="25:15" pos:end="25:15">=</operator><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</init> <condition pos:start="25:19" pos:end="25:35"><expr pos:start="25:19" pos:end="25:34"><name pos:start="25:19" pos:end="25:19">i</name><operator pos:start="25:20" pos:end="25:20">&lt;</operator><name pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:21">c</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:34">vChrBufSize</name></name></expr>;</condition> <incr pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:37">i</name><operator pos:start="25:38" pos:end="25:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><call pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:20">av_freep</name><argument_list pos:start="27:21" pos:end="27:38">(<argument pos:start="27:22" pos:end="27:37"><expr pos:start="27:22" pos:end="27:37"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:23">c</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:34">chrPixBuf</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:16">av_freep</name><argument_list pos:start="29:17" pos:end="29:31">(<argument pos:start="29:18" pos:end="29:30"><expr pos:start="29:18" pos:end="29:30"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:19">c</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:30">chrPixBuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:45">(<expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="35:30" pos:end="35:31">&amp;&amp;</operator> <name pos:start="35:33" pos:end="35:44"><name pos:start="35:33" pos:end="35:33">c</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:44">alpPixBuf</name></name></expr>)</condition> <block pos:start="35:47" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:32">

        <for pos:start="37:9" pos:end="39:39">for <control pos:start="37:13" pos:end="37:40">(<init pos:start="37:14" pos:end="37:17"><expr pos:start="37:14" pos:end="37:16"><name pos:start="37:14" pos:end="37:14">i</name><operator pos:start="37:15" pos:end="37:15">=</operator><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</init> <condition pos:start="37:19" pos:end="37:35"><expr pos:start="37:19" pos:end="37:34"><name pos:start="37:19" pos:end="37:19">i</name><operator pos:start="37:20" pos:end="37:20">&lt;</operator><name pos:start="37:21" pos:end="37:34"><name pos:start="37:21" pos:end="37:21">c</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="37:37" pos:end="37:39"><expr pos:start="37:37" pos:end="37:39"><name pos:start="37:37" pos:end="37:37">i</name><operator pos:start="37:38" pos:end="37:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:39"><block_content pos:start="39:13" pos:end="39:39">

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><call pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:20">av_freep</name><argument_list pos:start="39:21" pos:end="39:38">(<argument pos:start="39:22" pos:end="39:37"><expr pos:start="39:22" pos:end="39:37"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:37"><name pos:start="39:23" pos:end="39:23">c</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:34">alpPixBuf</name><index pos:start="39:35" pos:end="39:37">[<expr pos:start="39:36" pos:end="39:36"><name pos:start="39:36" pos:end="39:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><call pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:16">av_freep</name><argument_list pos:start="41:17" pos:end="41:31">(<argument pos:start="41:18" pos:end="41:30"><expr pos:start="41:18" pos:end="41:30"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:19">c</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:30">alpPixBuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><call pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:12">av_freep</name><argument_list pos:start="47:13" pos:end="47:28">(<argument pos:start="47:14" pos:end="47:27"><expr pos:start="47:14" pos:end="47:27"><operator pos:start="47:14" pos:end="47:14">&amp;</operator><name pos:start="47:15" pos:end="47:27"><name pos:start="47:15" pos:end="47:15">c</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:27">vLumFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><call pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:12">av_freep</name><argument_list pos:start="49:13" pos:end="49:28">(<argument pos:start="49:14" pos:end="49:27"><expr pos:start="49:14" pos:end="49:27"><operator pos:start="49:14" pos:end="49:14">&amp;</operator><name pos:start="49:15" pos:end="49:27"><name pos:start="49:15" pos:end="49:15">c</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">vChrFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><call pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:12">av_freep</name><argument_list pos:start="51:13" pos:end="51:28">(<argument pos:start="51:14" pos:end="51:27"><expr pos:start="51:14" pos:end="51:27"><operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:15">c</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:27">hLumFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="56:0"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:12">av_freep</name><argument_list pos:start="53:13" pos:end="53:28">(<argument pos:start="53:14" pos:end="53:27"><expr pos:start="53:14" pos:end="53:27"><operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:27"><name pos:start="53:15" pos:end="53:15">c</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:27">hChrFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="55:1" pos:end="55:28">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:12">ARCH_PPC</name> <operator pos:start="55:14" pos:end="55:15">&amp;&amp;</operator> <name pos:start="55:17" pos:end="55:28">HAVE_ALTIVEC</name></expr></cpp:if>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><call pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:12">av_freep</name><argument_list pos:start="57:13" pos:end="57:30">(<argument pos:start="57:14" pos:end="57:29"><expr pos:start="57:14" pos:end="57:29"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:29"><name pos:start="57:15" pos:end="57:15">c</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:29">vYCoeffsBank</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="62:0"><expr pos:start="59:5" pos:end="59:30"><call pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:12">av_freep</name><argument_list pos:start="59:13" pos:end="59:30">(<argument pos:start="59:14" pos:end="59:29"><expr pos:start="59:14" pos:end="59:29"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:29"><name pos:start="59:15" pos:end="59:15">c</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:29">vCCoeffsBank</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><call pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:12">av_freep</name><argument_list pos:start="65:13" pos:end="65:31">(<argument pos:start="65:14" pos:end="65:30"><expr pos:start="65:14" pos:end="65:30"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:30"><name pos:start="65:15" pos:end="65:15">c</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:30">vLumFilterPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:32"><expr pos:start="67:5" pos:end="67:31"><call pos:start="67:5" pos:end="67:31"><name pos:start="67:5" pos:end="67:12">av_freep</name><argument_list pos:start="67:13" pos:end="67:31">(<argument pos:start="67:14" pos:end="67:30"><expr pos:start="67:14" pos:end="67:30"><operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:30"><name pos:start="67:15" pos:end="67:15">c</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:30">vChrFilterPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><call pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:12">av_freep</name><argument_list pos:start="69:13" pos:end="69:31">(<argument pos:start="69:14" pos:end="69:30"><expr pos:start="69:14" pos:end="69:30"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:30"><name pos:start="69:15" pos:end="69:15">c</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:30">hLumFilterPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="78:0"><expr pos:start="71:5" pos:end="71:31"><call pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:31">(<argument pos:start="71:14" pos:end="71:30"><expr pos:start="71:14" pos:end="71:30"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:30"><name pos:start="71:15" pos:end="71:15">c</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:30">hChrFilterPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="75:1" pos:end="75:26">#<cpp:directive pos:start="75:2" pos:end="75:3">if</cpp:directive> <expr pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:12">ARCH_X86</name> <operator pos:start="75:14" pos:end="75:15">&amp;&amp;</operator> <name pos:start="75:17" pos:end="75:26">CONFIG_GPL</name></expr></cpp:if>

<cpp:ifdef pos:start="77:1" pos:end="77:20">#<cpp:directive pos:start="77:2" pos:end="77:6">ifdef</cpp:directive> <name pos:start="77:8" pos:end="77:20">MAP_ANONYMOUS</name></cpp:ifdef>

    <if_stmt pos:start="79:5" pos:end="79:85"><if pos:start="79:5" pos:end="79:85">if <condition pos:start="79:8" pos:end="79:29">(<expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:9">c</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:28">lumMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="79:31" pos:end="79:85"><block_content pos:start="79:31" pos:end="79:85"> <expr_stmt pos:start="79:31" pos:end="79:85"><expr pos:start="79:31" pos:end="79:84"><call pos:start="79:31" pos:end="79:84"><name pos:start="79:31" pos:end="79:36">munmap</name><argument_list pos:start="79:37" pos:end="79:84">(<argument pos:start="79:38" pos:end="79:57"><expr pos:start="79:38" pos:end="79:57"><name pos:start="79:38" pos:end="79:57"><name pos:start="79:38" pos:end="79:38">c</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:57">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="79:60" pos:end="79:83"><expr pos:start="79:60" pos:end="79:83"><name pos:start="79:60" pos:end="79:83"><name pos:start="79:60" pos:end="79:60">c</name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:83">lumMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="84:0"><if pos:start="81:5" pos:end="84:0">if <condition pos:start="81:8" pos:end="81:29">(<expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:9">c</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:28">chrMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="81:31" pos:end="84:0"><block_content pos:start="81:31" pos:end="84:0"> <expr_stmt pos:start="81:31" pos:end="84:0"><expr pos:start="81:31" pos:end="81:84"><call pos:start="81:31" pos:end="81:84"><name pos:start="81:31" pos:end="81:36">munmap</name><argument_list pos:start="81:37" pos:end="81:84">(<argument pos:start="81:38" pos:end="81:57"><expr pos:start="81:38" pos:end="81:57"><name pos:start="81:38" pos:end="81:57"><name pos:start="81:38" pos:end="81:38">c</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:57">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="81:60" pos:end="81:83"><expr pos:start="81:60" pos:end="81:83"><name pos:start="81:60" pos:end="81:83"><name pos:start="81:60" pos:end="81:60">c</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:83">chrMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:elif pos:start="83:1" pos:end="83:23">#<cpp:directive pos:start="83:2" pos:end="83:5">elif</cpp:directive> <expr pos:start="83:7" pos:end="83:23"><name pos:start="83:7" pos:end="83:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

    <if_stmt pos:start="85:5" pos:end="85:80"><if pos:start="85:5" pos:end="85:80">if <condition pos:start="85:8" pos:end="85:29">(<expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:9">c</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:28">lumMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="85:31" pos:end="85:80"><block_content pos:start="85:31" pos:end="85:80"> <expr_stmt pos:start="85:31" pos:end="85:80"><expr pos:start="85:31" pos:end="85:79"><call pos:start="85:31" pos:end="85:79"><name pos:start="85:31" pos:end="85:41">VirtualFree</name><argument_list pos:start="85:42" pos:end="85:79">(<argument pos:start="85:43" pos:end="85:62"><expr pos:start="85:43" pos:end="85:62"><name pos:start="85:43" pos:end="85:62"><name pos:start="85:43" pos:end="85:43">c</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:62">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="85:65" pos:end="85:65"><expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr></argument>, <argument pos:start="85:68" pos:end="85:78"><expr pos:start="85:68" pos:end="85:78"><name pos:start="85:68" pos:end="85:78">MEM_RELEASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="90:0"><if pos:start="87:5" pos:end="90:0">if <condition pos:start="87:8" pos:end="87:29">(<expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:9">c</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:28">chrMmx2FilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="87:31" pos:end="90:0"><block_content pos:start="87:31" pos:end="90:0"> <expr_stmt pos:start="87:31" pos:end="90:0"><expr pos:start="87:31" pos:end="87:79"><call pos:start="87:31" pos:end="87:79"><name pos:start="87:31" pos:end="87:41">VirtualFree</name><argument_list pos:start="87:42" pos:end="87:79">(<argument pos:start="87:43" pos:end="87:62"><expr pos:start="87:43" pos:end="87:62"><name pos:start="87:43" pos:end="87:62"><name pos:start="87:43" pos:end="87:43">c</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:62">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="87:65" pos:end="87:65"><expr pos:start="87:65" pos:end="87:65"><literal type="number" pos:start="87:65" pos:end="87:65">0</literal></expr></argument>, <argument pos:start="87:68" pos:end="87:78"><expr pos:start="87:68" pos:end="87:78"><name pos:start="87:68" pos:end="87:78">MEM_RELEASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="89:1" pos:end="89:5">#<cpp:directive pos:start="89:2" pos:end="89:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><call pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:11">av_free</name><argument_list pos:start="91:12" pos:end="91:33">(<argument pos:start="91:13" pos:end="91:32"><expr pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:13">c</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:32">lumMmx2FilterCode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="96:0"><expr pos:start="93:5" pos:end="93:33"><call pos:start="93:5" pos:end="93:33"><name pos:start="93:5" pos:end="93:11">av_free</name><argument_list pos:start="93:12" pos:end="93:33">(<argument pos:start="93:13" pos:end="93:32"><expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:13">c</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:32">chrMmx2FilterCode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:5">c</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:24">lumMmx2FilterCode</name></name><operator pos:start="97:25" pos:end="97:25">=</operator><name pos:start="97:26" pos:end="97:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="102:0"><expr pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:5">c</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:24">chrMmx2FilterCode</name></name><operator pos:start="99:25" pos:end="99:25">=</operator><name pos:start="99:26" pos:end="99:29">NULL</name></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="101:8" pos:end="101:35">/* ARCH_X86 &amp;&amp; CONFIG_GPL */</comment>



    <expr_stmt pos:start="105:5" pos:end="105:27"><expr pos:start="105:5" pos:end="105:26"><call pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:12">av_freep</name><argument_list pos:start="105:13" pos:end="105:26">(<argument pos:start="105:14" pos:end="105:25"><expr pos:start="105:14" pos:end="105:25"><operator pos:start="105:14" pos:end="105:14">&amp;</operator><name pos:start="105:15" pos:end="105:25"><name pos:start="105:15" pos:end="105:15">c</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:25">yuvTable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:15"><expr pos:start="109:5" pos:end="109:14"><call pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:11">av_free</name><argument_list pos:start="109:12" pos:end="109:14">(<argument pos:start="109:13" pos:end="109:13"><expr pos:start="109:13" pos:end="109:13"><name pos:start="109:13" pos:end="109:13">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
