<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13351.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:44"><name pos:start="1:1" pos:end="1:13">vpc_co_preadv</name><argument_list pos:start="1:14" pos:end="3:44">(<argument pos:start="1:15" pos:end="1:34">BlockDriverState *bs</argument>, <argument pos:start="1:37" pos:end="1:51">uint64_t offset</argument>, <argument pos:start="1:54" pos:end="1:67">uint64_t bytes</argument>,

              <argument pos:start="3:15" pos:end="3:32">QEMUIOVector *qiov</argument>, <argument pos:start="3:35" pos:end="3:43">int flags</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:24">image_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:19">n_bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:22">bytes_done</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">VHDFooter</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:21">footer</name> <init pos:start="17:23" pos:end="17:51">= <expr pos:start="17:25" pos:end="17:51"><operator pos:start="17:25" pos:end="17:25">(</operator><name pos:start="17:26" pos:end="17:34">VHDFooter</name> <operator pos:start="17:36" pos:end="17:36">*</operator><operator pos:start="17:37" pos:end="17:37">)</operator> <name pos:start="17:39" pos:end="17:51"><name pos:start="17:39" pos:end="17:39">s</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:51">footer_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">QEMUIOVector</name></type> <name pos:start="19:18" pos:end="19:27">local_qiov</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:47">(<expr pos:start="23:9" pos:end="23:46"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:19">be32_to_cpu</name><argument_list pos:start="23:20" pos:end="23:33">(<argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:26">footer</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:32">type</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:35" pos:end="23:36">==</operator> <name pos:start="23:38" pos:end="23:46">VHD_FIXED</name></expr>)</condition> <block pos:start="23:49" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:68">

        <return pos:start="25:9" pos:end="25:68">return <expr pos:start="25:16" pos:end="25:67"><call pos:start="25:16" pos:end="25:67"><name pos:start="25:16" pos:end="25:29">bdrv_co_preadv</name><argument_list pos:start="25:30" pos:end="25:67">(<argument pos:start="25:31" pos:end="25:42"><expr pos:start="25:31" pos:end="25:42"><name pos:start="25:31" pos:end="25:42"><name pos:start="25:31" pos:end="25:32">bs</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:38">file</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:42">bs</name></name></expr></argument>, <argument pos:start="25:45" pos:end="25:50"><expr pos:start="25:45" pos:end="25:50"><name pos:start="25:45" pos:end="25:50">offset</name></expr></argument>, <argument pos:start="25:53" pos:end="25:57"><expr pos:start="25:53" pos:end="25:57"><name pos:start="25:53" pos:end="25:57">bytes</name></expr></argument>, <argument pos:start="25:60" pos:end="25:63"><expr pos:start="25:60" pos:end="25:63"><name pos:start="25:60" pos:end="25:63">qiov</name></expr></argument>, <argument pos:start="25:66" pos:end="25:66"><expr pos:start="25:66" pos:end="25:66"><literal type="number" pos:start="25:66" pos:end="25:66">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:22">qemu_co_mutex_lock</name><argument_list pos:start="31:23" pos:end="31:32">(<argument pos:start="31:24" pos:end="31:31"><expr pos:start="31:24" pos:end="31:31"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:19">qemu_iovec_init</name><argument_list pos:start="33:20" pos:end="33:44">(<argument pos:start="33:21" pos:end="33:31"><expr pos:start="33:21" pos:end="33:31"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:31">local_qiov</name></expr></argument>, <argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:37">qiov</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="37:5" pos:end="77:5">while <condition pos:start="37:11" pos:end="37:21">(<expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:16">bytes</name> <operator pos:start="37:18" pos:end="37:18">&gt;</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>)</condition> <block pos:start="37:23" pos:end="77:5">{<block_content pos:start="39:9" pos:end="75:30">

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:20">image_offset</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <call pos:start="39:24" pos:end="39:58"><name pos:start="39:24" pos:end="39:39">get_image_offset</name><argument_list pos:start="39:40" pos:end="39:58">(<argument pos:start="39:41" pos:end="39:42"><expr pos:start="39:41" pos:end="39:42"><name pos:start="39:41" pos:end="39:42">bs</name></expr></argument>, <argument pos:start="39:45" pos:end="39:50"><expr pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:50">offset</name></expr></argument>, <argument pos:start="39:53" pos:end="39:57"><expr pos:start="39:53" pos:end="39:57"><name pos:start="39:53" pos:end="39:57">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:71"><expr pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:15">n_bytes</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:70"><name pos:start="41:19" pos:end="41:21">MIN</name><argument_list pos:start="41:22" pos:end="41:70">(<argument pos:start="41:23" pos:end="41:27"><expr pos:start="41:23" pos:end="41:27"><name pos:start="41:23" pos:end="41:27">bytes</name></expr></argument>, <argument pos:start="41:30" pos:end="41:69"><expr pos:start="41:30" pos:end="41:69"><name pos:start="41:30" pos:end="41:42"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:42">block_size</name></name> <operator pos:start="41:44" pos:end="41:44">-</operator> <operator pos:start="41:46" pos:end="41:46">(</operator><name pos:start="41:47" pos:end="41:52">offset</name> <operator pos:start="41:54" pos:end="41:54">%</operator> <name pos:start="41:56" pos:end="41:68"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:68">block_size</name></name><operator pos:start="41:69" pos:end="41:69">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="67:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:31">(<expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:24">image_offset</name> <operator pos:start="45:26" pos:end="45:27">==</operator> <operator pos:start="45:29" pos:end="45:29">-</operator><literal type="number" pos:start="45:30" pos:end="45:30">1</literal></expr>)</condition> <block pos:start="45:33" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:60">

            <expr_stmt pos:start="47:13" pos:end="47:60"><expr pos:start="47:13" pos:end="47:59"><call pos:start="47:13" pos:end="47:59"><name pos:start="47:13" pos:end="47:29">qemu_iovec_memset</name><argument_list pos:start="47:30" pos:end="47:59">(<argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">qiov</name></expr></argument>, <argument pos:start="47:37" pos:end="47:46"><expr pos:start="47:37" pos:end="47:46"><name pos:start="47:37" pos:end="47:46">bytes_done</name></expr></argument>, <argument pos:start="47:49" pos:end="47:49"><expr pos:start="47:49" pos:end="47:49"><literal type="number" pos:start="47:49" pos:end="47:49">0</literal></expr></argument>, <argument pos:start="47:52" pos:end="47:58"><expr pos:start="47:52" pos:end="47:58"><name pos:start="47:52" pos:end="47:58">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="67:9">else <block pos:start="49:16" pos:end="67:9">{<block_content pos:start="51:13" pos:end="65:13">

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><call pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:28">qemu_iovec_reset</name><argument_list pos:start="51:29" pos:end="51:41">(<argument pos:start="51:30" pos:end="51:40"><expr pos:start="51:30" pos:end="51:40"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:40">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:70"><expr pos:start="53:13" pos:end="53:69"><call pos:start="53:13" pos:end="53:69"><name pos:start="53:13" pos:end="53:29">qemu_iovec_concat</name><argument_list pos:start="53:30" pos:end="53:69">(<argument pos:start="53:31" pos:end="53:41"><expr pos:start="53:31" pos:end="53:41"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:41">local_qiov</name></expr></argument>, <argument pos:start="53:44" pos:end="53:47"><expr pos:start="53:44" pos:end="53:47"><name pos:start="53:44" pos:end="53:47">qiov</name></expr></argument>, <argument pos:start="53:50" pos:end="53:59"><expr pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:59">bytes_done</name></expr></argument>, <argument pos:start="53:62" pos:end="53:68"><expr pos:start="53:62" pos:end="53:68"><name pos:start="53:62" pos:end="53:68">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="57:13" pos:end="59:49"><expr pos:start="57:13" pos:end="59:48"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="59:48"><name pos:start="57:19" pos:end="57:32">bdrv_co_preadv</name><argument_list pos:start="57:33" pos:end="59:48">(<argument pos:start="57:34" pos:end="57:45"><expr pos:start="57:34" pos:end="57:45"><name pos:start="57:34" pos:end="57:45"><name pos:start="57:34" pos:end="57:35">bs</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:41">file</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:45">bs</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:59"><expr pos:start="57:48" pos:end="57:59"><name pos:start="57:48" pos:end="57:59">image_offset</name></expr></argument>, <argument pos:start="57:62" pos:end="57:68"><expr pos:start="57:62" pos:end="57:68"><name pos:start="57:62" pos:end="57:68">n_bytes</name></expr></argument>,

                                 <argument pos:start="59:34" pos:end="59:44"><expr pos:start="59:34" pos:end="59:44"><operator pos:start="59:34" pos:end="59:34">&amp;</operator><name pos:start="59:35" pos:end="59:44">local_qiov</name></expr></argument>, <argument pos:start="59:47" pos:end="59:47"><expr pos:start="59:47" pos:end="59:47"><literal type="number" pos:start="59:47" pos:end="59:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:24">(<expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:19">ret</name> <operator pos:start="61:21" pos:end="61:21">&lt;</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>)</condition> <block pos:start="61:26" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:26">

                <goto pos:start="63:17" pos:end="63:26">goto <name pos:start="63:22" pos:end="63:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:13">bytes</name> <operator pos:start="71:15" pos:end="71:16">-=</operator> <name pos:start="71:18" pos:end="71:24">n_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:14">offset</name> <operator pos:start="73:16" pos:end="73:17">+=</operator> <name pos:start="73:19" pos:end="73:25">n_bytes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:18">bytes_done</name> <operator pos:start="75:20" pos:end="75:21">+=</operator> <name pos:start="75:23" pos:end="75:29">n_bytes</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="81:5" pos:end="81:12"><expr pos:start="81:5" pos:end="81:11"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <literal type="number" pos:start="81:11" pos:end="81:11">0</literal></expr>;</expr_stmt>

<label pos:start="83:1" pos:end="83:5"><name pos:start="83:1" pos:end="83:4">fail</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><call pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:22">qemu_iovec_destroy</name><argument_list pos:start="85:23" pos:end="85:35">(<argument pos:start="85:24" pos:end="85:34"><expr pos:start="85:24" pos:end="85:34"><operator pos:start="85:24" pos:end="85:24">&amp;</operator><name pos:start="85:25" pos:end="85:34">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><call pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:24">qemu_co_mutex_unlock</name><argument_list pos:start="87:25" pos:end="87:34">(<argument pos:start="87:26" pos:end="87:33"><expr pos:start="87:26" pos:end="87:33"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:33"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
