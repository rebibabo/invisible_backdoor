<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10400.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">ff_free_parser_state</name><parameter_list pos:start="1:26" pos:end="1:67">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:59">AVParserState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">state</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:19">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">AVParserStreamState</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:27">ss</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14">state</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="17:5" pos:end="27:5">for <control pos:start="17:9" pos:end="17:43">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:38"><expr pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:37"><name pos:start="17:21" pos:end="17:25">state</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:37">nb_streams</name></name></expr>;</condition> <incr pos:start="17:40" pos:end="17:42"><expr pos:start="17:40" pos:end="17:42"><name pos:start="17:40" pos:end="17:40">i</name><operator pos:start="17:41" pos:end="17:42">++</operator></expr></incr>)</control> <block pos:start="17:45" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:37">

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:10">ss</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:37"><name pos:start="19:15" pos:end="19:19">state</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:34">stream_states</name><index pos:start="19:35" pos:end="19:37">[<expr pos:start="19:36" pos:end="19:36"><name pos:start="19:36" pos:end="19:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:40"><if pos:start="21:9" pos:end="23:40">if <condition pos:start="21:12" pos:end="21:23">(<expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:14">ss</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:22">parser</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:40"><block_content pos:start="23:13" pos:end="23:40">

            <expr_stmt pos:start="23:13" pos:end="23:40"><expr pos:start="23:13" pos:end="23:39"><call pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:27">av_parser_close</name><argument_list pos:start="23:28" pos:end="23:39">(<argument pos:start="23:29" pos:end="23:38"><expr pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:38"><name pos:start="23:29" pos:end="23:30">ss</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:38">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><call pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:22">av_free_packet</name><argument_list pos:start="25:23" pos:end="25:36">(<argument pos:start="25:24" pos:end="25:35"><expr pos:start="25:24" pos:end="25:35"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:35"><name pos:start="25:25" pos:end="25:26">ss</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:35">cur_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><call pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:20">free_packet_list</name><argument_list pos:start="31:21" pos:end="31:42">(<argument pos:start="31:22" pos:end="31:41"><expr pos:start="31:22" pos:end="31:41"><name pos:start="31:22" pos:end="31:41"><name pos:start="31:22" pos:end="31:26">state</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:41">packet_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><call pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:20">free_packet_list</name><argument_list pos:start="33:21" pos:end="33:46">(<argument pos:start="33:22" pos:end="33:45"><expr pos:start="33:22" pos:end="33:45"><name pos:start="33:22" pos:end="33:45"><name pos:start="33:22" pos:end="33:26">state</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:45">raw_packet_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><call pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:11">av_free</name><argument_list pos:start="37:12" pos:end="37:33">(<argument pos:start="37:13" pos:end="37:32"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:17">state</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:32">stream_states</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><call pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:11">av_free</name><argument_list pos:start="39:12" pos:end="39:18">(<argument pos:start="39:13" pos:end="39:17"><expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:17">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
