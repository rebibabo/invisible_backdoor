<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18780.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:19">void</name></type> <name pos:start="1:21" pos:end="1:36">dsputil_init_mmx</name><parameter_list pos:start="1:37" pos:end="3:50">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:47">DSPContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">c</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:66">AVCodecContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">avctx</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:49">mm_flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="104:0">

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:61"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:28">high_bit_depth</name> <init pos:start="7:30" pos:end="7:61">= <expr pos:start="7:32" pos:end="7:61"><name pos:start="7:32" pos:end="7:57"><name pos:start="7:32" pos:end="7:36">avctx</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:57">bits_per_raw_sample</name></name> <operator pos:start="7:59" pos:end="7:59">&gt;</operator> <literal type="number" pos:start="7:61" pos:end="7:61">8</literal></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="11:1" pos:end="11:19">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">HAVE_INLINE_ASM</name></expr></cpp:if>

    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:5">c</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:25">put_pixels_clamped</name></name>        <operator pos:start="13:34" pos:end="13:34">=</operator> <name pos:start="13:36" pos:end="13:60">ff_put_pixels_clamped_mmx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:68"><expr pos:start="15:5" pos:end="15:67"><name pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:5">c</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:32">put_signed_pixels_clamped</name></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <name pos:start="15:36" pos:end="15:67">ff_put_signed_pixels_clamped_mmx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:25">add_pixels_clamped</name></name>        <operator pos:start="17:34" pos:end="17:34">=</operator> <name pos:start="17:36" pos:end="17:60">ff_add_pixels_clamped_mmx</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="75:5"><if pos:start="21:5" pos:end="75:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:23">high_bit_depth</name></expr>)</condition> <block pos:start="21:26" pos:end="75:5">{<block_content pos:start="23:9" pos:end="73:9">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:22">clear_block</name></name>  <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:41">clear_block_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:23">clear_blocks</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:42">clear_blocks_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:9">c</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:21">draw_edges</name></name>   <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:40">draw_edges_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:49"><expr pos:start="31:9" pos:end="31:48"><call pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:22">SET_HPEL_FUNCS</name><argument_list pos:start="31:23" pos:end="31:48">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">put</name></expr></argument>,        <argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">0</literal></expr>]</index></expr></argument>, <argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><literal type="number" pos:start="31:41" pos:end="31:42">16</literal></expr></argument>, <argument pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:22">SET_HPEL_FUNCS</name><argument_list pos:start="33:23" pos:end="33:48">(<argument pos:start="33:24" pos:end="33:33"><expr pos:start="33:24" pos:end="33:33"><name pos:start="33:24" pos:end="33:33">put_no_rnd</name></expr></argument>, <argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><literal type="number" pos:start="33:37" pos:end="33:37">0</literal></expr>]</index></expr></argument>, <argument pos:start="33:41" pos:end="33:42"><expr pos:start="33:41" pos:end="33:42"><literal type="number" pos:start="33:41" pos:end="33:42">16</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><call pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:22">SET_HPEL_FUNCS</name><argument_list pos:start="35:23" pos:end="35:48">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">avg</name></expr></argument>,        <argument pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><index pos:start="35:36" pos:end="35:38">[<expr pos:start="35:37" pos:end="35:37"><literal type="number" pos:start="35:37" pos:end="35:37">0</literal></expr>]</index></expr></argument>, <argument pos:start="35:41" pos:end="35:42"><expr pos:start="35:41" pos:end="35:42"><literal type="number" pos:start="35:41" pos:end="35:42">16</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:22">SET_HPEL_FUNCS</name><argument_list pos:start="37:23" pos:end="37:48">(<argument pos:start="37:24" pos:end="37:33"><expr pos:start="37:24" pos:end="37:33"><name pos:start="37:24" pos:end="37:33">avg_no_rnd</name></expr></argument>,    , <argument pos:start="37:41" pos:end="37:42"><expr pos:start="37:41" pos:end="37:42"><literal type="number" pos:start="37:41" pos:end="37:42">16</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:47"><expr pos:start="37:45" pos:end="37:47"><name pos:start="37:45" pos:end="37:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><call pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:22">SET_HPEL_FUNCS</name><argument_list pos:start="39:23" pos:end="39:48">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">put</name></expr></argument>,        <argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><index pos:start="39:36" pos:end="39:38">[<expr pos:start="39:37" pos:end="39:37"><literal type="number" pos:start="39:37" pos:end="39:37">1</literal></expr>]</index></expr></argument>,  <argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">8</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:22">SET_HPEL_FUNCS</name><argument_list pos:start="41:23" pos:end="41:48">(<argument pos:start="41:24" pos:end="41:33"><expr pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:33">put_no_rnd</name></expr></argument>, <argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><index pos:start="41:36" pos:end="41:38">[<expr pos:start="41:37" pos:end="41:37"><literal type="number" pos:start="41:37" pos:end="41:37">1</literal></expr>]</index></expr></argument>,  <argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><literal type="number" pos:start="41:42" pos:end="41:42">8</literal></expr></argument>, <argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:22">SET_HPEL_FUNCS</name><argument_list pos:start="43:23" pos:end="43:48">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">avg</name></expr></argument>,        <argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><index pos:start="43:36" pos:end="43:38">[<expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">1</literal></expr>]</index></expr></argument>,  <argument pos:start="43:42" pos:end="43:42"><expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">8</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:47">mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="47:9" pos:end="73:9">switch <condition pos:start="47:16" pos:end="47:33">(<expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:21">avctx</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:32">idct_algo</name></name></expr>)</condition> <block pos:start="47:35" pos:end="73:9">{<block_content pos:start="49:9" pos:end="71:18">

        <case pos:start="49:9" pos:end="49:26">case <expr pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:25">FF_IDCT_AUTO</name></expr>:</case>

        <case pos:start="51:9" pos:end="51:31">case <expr pos:start="51:14" pos:end="51:30"><name pos:start="51:14" pos:end="51:30">FF_IDCT_SIMPLEMMX</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:62"><expr pos:start="53:13" pos:end="53:61"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:13">c</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:23">idct_put</name></name>              <operator pos:start="53:38" pos:end="53:38">=</operator> <name pos:start="53:40" pos:end="53:61">ff_simple_idct_put_mmx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:62"><expr pos:start="55:13" pos:end="55:61"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">idct_add</name></name>              <operator pos:start="55:38" pos:end="55:38">=</operator> <name pos:start="55:40" pos:end="55:61">ff_simple_idct_add_mmx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:58"><expr pos:start="57:13" pos:end="57:57"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:13">c</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">idct</name></name>                  <operator pos:start="57:38" pos:end="57:38">=</operator> <name pos:start="57:40" pos:end="57:57">ff_simple_idct_mmx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:59"><expr pos:start="59:13" pos:end="59:58"><name pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:13">c</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:36">idct_permutation_type</name></name> <operator pos:start="59:38" pos:end="59:38">=</operator> <name pos:start="59:40" pos:end="59:58">FF_SIMPLE_IDCT_PERM</name></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:29">case <expr pos:start="63:14" pos:end="63:28"><name pos:start="63:14" pos:end="63:28">FF_IDCT_XVIDMMX</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:60"><expr pos:start="65:13" pos:end="65:59"><name pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:13">c</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:23">idct_put</name></name>              <operator pos:start="65:38" pos:end="65:38">=</operator> <name pos:start="65:40" pos:end="65:59">ff_idct_xvid_mmx_put</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:60"><expr pos:start="67:13" pos:end="67:59"><name pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:13">c</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:23">idct_add</name></name>              <operator pos:start="67:38" pos:end="67:38">=</operator> <name pos:start="67:40" pos:end="67:59">ff_idct_xvid_mmx_add</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:56"><expr pos:start="69:13" pos:end="69:55"><name pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:13">c</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:19">idct</name></name>                  <operator pos:start="69:38" pos:end="69:38">=</operator> <name pos:start="69:40" pos:end="69:55">ff_idct_xvid_mmx</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:21"><expr pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:10"><name pos:start="79:5" pos:end="79:5">c</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:10">gmc</name></name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:20">gmc_mmx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:5">c</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:16">add_bytes</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:32">add_bytes_mmx</name></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="100:0"><if pos:start="87:5" pos:end="100:0">if <condition pos:start="87:8" pos:end="87:51">(<expr pos:start="87:9" pos:end="87:50"><name pos:start="87:9" pos:end="87:27">CONFIG_H263_DECODER</name> <operator pos:start="87:29" pos:end="87:30">||</operator> <name pos:start="87:32" pos:end="87:50">CONFIG_H263_ENCODER</name></expr>)</condition> <block pos:start="87:53" pos:end="100:0">{<block_content pos:start="89:9" pos:end="91:55">

        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:9">c</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:29">h263_v_loop_filter</name></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:54">h263_v_loop_filter_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:55"><expr pos:start="91:9" pos:end="91:54"><name pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:9">c</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:29">h263_h_loop_filter</name></name> <operator pos:start="91:31" pos:end="91:31">=</operator> <name pos:start="91:33" pos:end="91:54">h263_h_loop_filter_mmx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="95:8" pos:end="95:28">/* HAVE_INLINE_ASM */</comment>



<cpp:if pos:start="99:1" pos:end="99:13">#<cpp:directive pos:start="99:2" pos:end="99:3">if</cpp:directive> <expr pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:13">HAVE_YASM</name></expr></cpp:if>

    <expr_stmt pos:start="101:5" pos:end="104:0"><expr pos:start="101:5" pos:end="101:51"><name pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:5">c</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:24">vector_clip_int32</name></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:51">ff_vector_clip_int32_mmx</name></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>



</block_content>}</block></function>
</unit>
