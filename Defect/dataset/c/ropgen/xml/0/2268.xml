<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2268.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">BlockBackend</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:29">blk_new_with_bs</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:38"><name pos:start="1:31" pos:end="1:35">Error</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BlockBackend</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:7">blk</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:23"><name pos:start="11:11" pos:end="11:17">blk_new</name><argument_list pos:start="11:18" pos:end="11:23">(<argument pos:start="11:19" pos:end="11:22"><expr pos:start="11:19" pos:end="11:22"><name pos:start="11:19" pos:end="11:22">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">blk</name></expr>)</condition> <block pos:start="13:15" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:6">bs</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:24"><name pos:start="21:10" pos:end="21:22">bdrv_new_root</name><argument_list pos:start="21:23" pos:end="21:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:64"><expr pos:start="23:5" pos:end="23:63"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:7">blk</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">root</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:63"><name pos:start="23:17" pos:end="23:38">bdrv_root_attach_child</name><argument_list pos:start="23:39" pos:end="23:63">(<argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><name pos:start="23:40" pos:end="23:41">bs</name></expr></argument>, <argument pos:start="23:44" pos:end="23:49"><expr pos:start="23:44" pos:end="23:49"><literal type="string" pos:start="23:44" pos:end="23:49">"root"</literal></expr></argument>, <argument pos:start="23:52" pos:end="23:62"><expr pos:start="23:52" pos:end="23:62"><operator pos:start="23:52" pos:end="23:52">&amp;</operator><name pos:start="23:53" pos:end="23:62">child_root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:7">blk</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">root</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">opaque</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:27">blk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:6">bs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:11">blk</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:17">blk</name></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">blk</name></expr>;</return>

</block_content>}</block></function>
</unit>
