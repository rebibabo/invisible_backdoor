<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17788.c" pos:tabs="8"><function pos:start="1:1" pos:end="499:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">ff_h264_decode_seq_parameter_set</name><parameter_list pos:start="1:37" pos:end="1:52">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:48">H264Context</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="499:1">{<block_content pos:start="5:5" pos:end="497:31">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">profile_idc</name></decl>, <decl pos:start="5:22" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:30">level_idc</name></decl>, <decl pos:start="5:33" pos:end="5:56"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:52">constraint_set_flags</name> <init pos:start="5:54" pos:end="5:56">= <expr pos:start="5:56" pos:end="5:56"><literal type="number" pos:start="5:56" pos:end="5:56">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">sps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:36">log2_max_frame_num_minus4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">SPS</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">sps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:15">profile_idc</name>           <operator pos:start="15:27" pos:end="15:27">=</operator> <call pos:start="15:29" pos:end="15:47"><name pos:start="15:29" pos:end="15:36">get_bits</name><argument_list pos:start="15:37" pos:end="15:47">(<argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><operator pos:start="15:38" pos:end="15:38">&amp;</operator><name pos:start="15:39" pos:end="15:43"><name pos:start="15:39" pos:end="15:39">h</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:43">gb</name></name></expr></argument>, <argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><literal type="number" pos:start="15:46" pos:end="15:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:24">constraint_set_flags</name> <operator pos:start="17:26" pos:end="17:27">|=</operator> <call pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:37">get_bits1</name><argument_list pos:start="17:38" pos:end="17:45">(<argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><operator pos:start="17:39" pos:end="17:39">&amp;</operator><name pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:40">h</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:47" pos:end="17:48">&lt;&lt;</operator> <literal type="number" pos:start="17:50" pos:end="17:50">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="17:55" pos:end="17:77">// constraint_set0_flag</comment>

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:24">constraint_set_flags</name> <operator pos:start="19:26" pos:end="19:27">|=</operator> <call pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:37">get_bits1</name><argument_list pos:start="19:38" pos:end="19:45">(<argument pos:start="19:39" pos:end="19:44"><expr pos:start="19:39" pos:end="19:44"><operator pos:start="19:39" pos:end="19:39">&amp;</operator><name pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:40">h</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:47" pos:end="19:48">&lt;&lt;</operator> <literal type="number" pos:start="19:50" pos:end="19:50">1</literal></expr>;</expr_stmt>   <comment type="line" pos:start="19:55" pos:end="19:77">// constraint_set1_flag</comment>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:24">constraint_set_flags</name> <operator pos:start="21:26" pos:end="21:27">|=</operator> <call pos:start="21:29" pos:end="21:45"><name pos:start="21:29" pos:end="21:37">get_bits1</name><argument_list pos:start="21:38" pos:end="21:45">(<argument pos:start="21:39" pos:end="21:44"><expr pos:start="21:39" pos:end="21:44"><operator pos:start="21:39" pos:end="21:39">&amp;</operator><name pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:40">h</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:47" pos:end="21:48">&lt;&lt;</operator> <literal type="number" pos:start="21:50" pos:end="21:50">2</literal></expr>;</expr_stmt>   <comment type="line" pos:start="21:55" pos:end="21:77">// constraint_set2_flag</comment>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:24">constraint_set_flags</name> <operator pos:start="23:26" pos:end="23:27">|=</operator> <call pos:start="23:29" pos:end="23:45"><name pos:start="23:29" pos:end="23:37">get_bits1</name><argument_list pos:start="23:38" pos:end="23:45">(<argument pos:start="23:39" pos:end="23:44"><expr pos:start="23:39" pos:end="23:44"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:44"><name pos:start="23:40" pos:end="23:40">h</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:47" pos:end="23:48">&lt;&lt;</operator> <literal type="number" pos:start="23:50" pos:end="23:50">3</literal></expr>;</expr_stmt>   <comment type="line" pos:start="23:55" pos:end="23:77">// constraint_set3_flag</comment>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:24">constraint_set_flags</name> <operator pos:start="25:26" pos:end="25:27">|=</operator> <call pos:start="25:29" pos:end="25:45"><name pos:start="25:29" pos:end="25:37">get_bits1</name><argument_list pos:start="25:38" pos:end="25:45">(<argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:40">h</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:47" pos:end="25:48">&lt;&lt;</operator> <literal type="number" pos:start="25:50" pos:end="25:50">4</literal></expr>;</expr_stmt>   <comment type="line" pos:start="25:55" pos:end="25:77">// constraint_set4_flag</comment>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:24">constraint_set_flags</name> <operator pos:start="27:26" pos:end="27:27">|=</operator> <call pos:start="27:29" pos:end="27:45"><name pos:start="27:29" pos:end="27:37">get_bits1</name><argument_list pos:start="27:38" pos:end="27:45">(<argument pos:start="27:39" pos:end="27:44"><expr pos:start="27:39" pos:end="27:44"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:40">h</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:44">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:47" pos:end="27:48">&lt;&lt;</operator> <literal type="number" pos:start="27:50" pos:end="27:50">5</literal></expr>;</expr_stmt>   <comment type="line" pos:start="27:55" pos:end="27:77">// constraint_set5_flag</comment>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><call pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:13">skip_bits</name><argument_list pos:start="29:14" pos:end="29:24">(<argument pos:start="29:15" pos:end="29:20"><expr pos:start="29:15" pos:end="29:20"><operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:16">h</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:20">gb</name></name></expr></argument>, <argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="line" pos:start="29:55" pos:end="29:76">// reserved_zero_2bits</comment>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:13">level_idc</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:24">get_bits</name><argument_list pos:start="31:25" pos:end="31:35">(<argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:27">h</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:31">gb</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:10">sps_id</name>    <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:40"><name pos:start="33:17" pos:end="33:32">get_ue_golomb_31</name><argument_list pos:start="33:33" pos:end="33:40">(<argument pos:start="33:34" pos:end="33:39"><expr pos:start="33:34" pos:end="33:39"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:39"><name pos:start="33:35" pos:end="33:35">h</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:14">sps_id</name> <operator pos:start="37:16" pos:end="37:17">&gt;=</operator> <name pos:start="37:19" pos:end="37:31">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="37:34" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:35">

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:74">(<argument pos:start="39:16" pos:end="39:23"><expr pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:16">h</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:23">avctx</name></name></expr></argument>, <argument pos:start="39:26" pos:end="39:37"><expr pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:40" pos:end="39:65"><expr pos:start="39:40" pos:end="39:65"><literal type="string" pos:start="39:40" pos:end="39:65">"sps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="39:68" pos:end="39:73"><expr pos:start="39:68" pos:end="39:73"><name pos:start="39:68" pos:end="39:73">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:7">sps</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:33"><name pos:start="45:11" pos:end="45:20">av_mallocz</name><argument_list pos:start="45:21" pos:end="45:33">(<argument pos:start="45:22" pos:end="45:32"><expr pos:start="45:22" pos:end="45:32"><sizeof pos:start="45:22" pos:end="45:32">sizeof<argument_list pos:start="45:28" pos:end="45:32">(<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:13">(<expr pos:start="47:9" pos:end="47:12"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:12">sps</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:7">sps</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:15">sps_id</name></name>               <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:38">sps_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:7">sps</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:27">time_offset_length</name></name>   <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:34">24</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:44"><expr pos:start="57:5" pos:end="57:43"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:7">sps</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:20">profile_idc</name></name>          <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:43">profile_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:7">sps</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:29">constraint_set_flags</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:52">constraint_set_flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:7">sps</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:18">level_idc</name></name>            <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:41">level_idc</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:67"><expr pos:start="65:5" pos:end="65:66"><call pos:start="65:5" pos:end="65:66"><name pos:start="65:5" pos:end="65:10">memset</name><argument_list pos:start="65:11" pos:end="65:66">(<argument pos:start="65:12" pos:end="65:31"><expr pos:start="65:12" pos:end="65:31"><name pos:start="65:12" pos:end="65:31"><name pos:start="65:12" pos:end="65:14">sps</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:31">scaling_matrix4</name></name></expr></argument>, <argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><literal type="number" pos:start="65:34" pos:end="65:35">16</literal></expr></argument>, <argument pos:start="65:38" pos:end="65:65"><expr pos:start="65:38" pos:end="65:65"><sizeof pos:start="65:38" pos:end="65:65">sizeof<argument_list pos:start="65:44" pos:end="65:65">(<argument pos:start="65:45" pos:end="65:64"><expr pos:start="65:45" pos:end="65:64"><name pos:start="65:45" pos:end="65:64"><name pos:start="65:45" pos:end="65:47">sps</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:64">scaling_matrix4</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:67"><expr pos:start="67:5" pos:end="67:66"><call pos:start="67:5" pos:end="67:66"><name pos:start="67:5" pos:end="67:10">memset</name><argument_list pos:start="67:11" pos:end="67:66">(<argument pos:start="67:12" pos:end="67:31"><expr pos:start="67:12" pos:end="67:31"><name pos:start="67:12" pos:end="67:31"><name pos:start="67:12" pos:end="67:14">sps</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:31">scaling_matrix8</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:35"><expr pos:start="67:34" pos:end="67:35"><literal type="number" pos:start="67:34" pos:end="67:35">16</literal></expr></argument>, <argument pos:start="67:38" pos:end="67:65"><expr pos:start="67:38" pos:end="67:65"><sizeof pos:start="67:38" pos:end="67:65">sizeof<argument_list pos:start="67:44" pos:end="67:65">(<argument pos:start="67:45" pos:end="67:64"><expr pos:start="67:45" pos:end="67:64"><name pos:start="67:45" pos:end="67:64"><name pos:start="67:45" pos:end="67:47">sps</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:64">scaling_matrix8</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:7">sps</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:31">scaling_matrix_present</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <literal type="number" pos:start="69:35" pos:end="69:35">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="139:5"><if pos:start="73:5" pos:end="131:5">if <condition pos:start="73:8" pos:end="93:32">(<expr pos:start="73:9" pos:end="93:31"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:11">sps</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:24">profile_idc</name></name> <operator pos:start="73:26" pos:end="73:27">==</operator> <literal type="number" pos:start="73:29" pos:end="73:31">100</literal> <operator pos:start="73:33" pos:end="73:34">||</operator>  <comment type="line" pos:start="73:37" pos:end="73:51">// High profile</comment>

        <name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">sps</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:24">profile_idc</name></name> <operator pos:start="75:26" pos:end="75:27">==</operator> <literal type="number" pos:start="75:29" pos:end="75:31">110</literal> <operator pos:start="75:33" pos:end="75:34">||</operator>  <comment type="line" pos:start="75:37" pos:end="75:53">// High10 profile</comment>

        <name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:11">sps</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:24">profile_idc</name></name> <operator pos:start="77:26" pos:end="77:27">==</operator> <literal type="number" pos:start="77:29" pos:end="77:31">122</literal> <operator pos:start="77:33" pos:end="77:34">||</operator>  <comment type="line" pos:start="77:37" pos:end="77:54">// High422 profile</comment>

        <name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">sps</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:24">profile_idc</name></name> <operator pos:start="79:26" pos:end="79:27">==</operator> <literal type="number" pos:start="79:29" pos:end="79:31">244</literal> <operator pos:start="79:33" pos:end="79:34">||</operator>  <comment type="line" pos:start="79:37" pos:end="79:65">// High444 Predictive profile</comment>

        <name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:11">sps</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:24">profile_idc</name></name> <operator pos:start="81:26" pos:end="81:27">==</operator>  <literal type="number" pos:start="81:30" pos:end="81:31">44</literal> <operator pos:start="81:33" pos:end="81:34">||</operator>  <comment type="line" pos:start="81:37" pos:end="81:55">// Cavlc444 profile</comment>

        <name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:11">sps</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:24">profile_idc</name></name> <operator pos:start="83:26" pos:end="83:27">==</operator>  <literal type="number" pos:start="83:30" pos:end="83:31">83</literal> <operator pos:start="83:33" pos:end="83:34">||</operator>  <comment type="line" pos:start="83:37" pos:end="83:78">// Scalable Constrained High profile (SVC)</comment>

        <name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:11">sps</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:24">profile_idc</name></name> <operator pos:start="85:26" pos:end="85:27">==</operator>  <literal type="number" pos:start="85:30" pos:end="85:31">86</literal> <operator pos:start="85:33" pos:end="85:34">||</operator>  <comment type="line" pos:start="85:37" pos:end="85:72">// Scalable High Intra profile (SVC)</comment>

        <name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:11">sps</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:24">profile_idc</name></name> <operator pos:start="87:26" pos:end="87:27">==</operator> <literal type="number" pos:start="87:29" pos:end="87:31">118</literal> <operator pos:start="87:33" pos:end="87:34">||</operator>  <comment type="line" pos:start="87:37" pos:end="87:64">// Stereo High profile (MVC)</comment>

        <name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:11">sps</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:24">profile_idc</name></name> <operator pos:start="89:26" pos:end="89:27">==</operator> <literal type="number" pos:start="89:29" pos:end="89:31">128</literal> <operator pos:start="89:33" pos:end="89:34">||</operator>  <comment type="line" pos:start="89:37" pos:end="89:67">// Multiview High profile (MVC)</comment>

        <name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:11">sps</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:24">profile_idc</name></name> <operator pos:start="91:26" pos:end="91:27">==</operator> <literal type="number" pos:start="91:29" pos:end="91:31">138</literal> <operator pos:start="91:33" pos:end="91:34">||</operator>  <comment type="line" pos:start="91:37" pos:end="91:74">// Multiview Depth High profile (MVCD)</comment>

        <name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:11">sps</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:24">profile_idc</name></name> <operator pos:start="93:26" pos:end="93:27">==</operator> <literal type="number" pos:start="93:29" pos:end="93:31">144</literal></expr>)</condition> <block pos:start="93:34" pos:end="131:5">{<block_content pos:start="95:9" pos:end="129:76">  <comment type="line" pos:start="93:37" pos:end="93:58">// old High444 profile</comment>

        <expr_stmt pos:start="95:9" pos:end="95:58"><expr pos:start="95:9" pos:end="95:57"><name pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:11">sps</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:30">chroma_format_idc</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <call pos:start="95:34" pos:end="95:57"><name pos:start="95:34" pos:end="95:49">get_ue_golomb_31</name><argument_list pos:start="95:50" pos:end="95:57">(<argument pos:start="95:51" pos:end="95:56"><expr pos:start="95:51" pos:end="95:56"><operator pos:start="95:51" pos:end="95:51">&amp;</operator><name pos:start="95:52" pos:end="95:56"><name pos:start="95:52" pos:end="95:52">h</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:56">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="109:9"><if pos:start="97:9" pos:end="105:9">if <condition pos:start="97:12" pos:end="97:39">(<expr pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:15">sps</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:34">chroma_format_idc</name></name> <operator pos:start="97:36" pos:end="97:36">&gt;</operator> <literal type="number" pos:start="97:38" pos:end="97:38">3</literal></expr>)</condition> <block pos:start="97:41" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:22">

            <expr_stmt pos:start="99:13" pos:end="101:58"><expr pos:start="99:13" pos:end="101:57"><call pos:start="99:13" pos:end="101:57"><name pos:start="99:13" pos:end="99:33">avpriv_request_sample</name><argument_list pos:start="99:34" pos:end="101:57">(<argument pos:start="99:35" pos:end="99:42"><expr pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:35">h</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:42">avctx</name></name></expr></argument>, <argument pos:start="99:45" pos:end="99:66"><expr pos:start="99:45" pos:end="99:66"><literal type="string" pos:start="99:45" pos:end="99:66">"chroma_format_idc %u"</literal></expr></argument>,

                                  <argument pos:start="101:35" pos:end="101:56"><expr pos:start="101:35" pos:end="101:56"><name pos:start="101:35" pos:end="101:56"><name pos:start="101:35" pos:end="101:37">sps</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:56">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:22">goto <name pos:start="103:18" pos:end="103:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="105:11" pos:end="109:9">else if <condition pos:start="105:19" pos:end="105:47">(<expr pos:start="105:20" pos:end="105:46"><name pos:start="105:20" pos:end="105:41"><name pos:start="105:20" pos:end="105:22">sps</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:41">chroma_format_idc</name></name> <operator pos:start="105:43" pos:end="105:44">==</operator> <literal type="number" pos:start="105:46" pos:end="105:46">3</literal></expr>)</condition> <block pos:start="105:49" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:67">

            <expr_stmt pos:start="107:13" pos:end="107:67"><expr pos:start="107:13" pos:end="107:66"><name pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:15">sps</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:46">residual_color_transform_flag</name></name> <operator pos:start="107:48" pos:end="107:48">=</operator> <call pos:start="107:50" pos:end="107:66"><name pos:start="107:50" pos:end="107:58">get_bits1</name><argument_list pos:start="107:59" pos:end="107:66">(<argument pos:start="107:60" pos:end="107:65"><expr pos:start="107:60" pos:end="107:65"><operator pos:start="107:60" pos:end="107:60">&amp;</operator><name pos:start="107:61" pos:end="107:65"><name pos:start="107:61" pos:end="107:61">h</name><operator pos:start="107:62" pos:end="107:63">-&gt;</operator><name pos:start="107:64" pos:end="107:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:58"><expr pos:start="111:9" pos:end="111:57"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:11">sps</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:27">bit_depth_luma</name></name>   <operator pos:start="111:31" pos:end="111:31">=</operator> <call pos:start="111:33" pos:end="111:53"><name pos:start="111:33" pos:end="111:45">get_ue_golomb</name><argument_list pos:start="111:46" pos:end="111:53">(<argument pos:start="111:47" pos:end="111:52"><expr pos:start="111:47" pos:end="111:52"><operator pos:start="111:47" pos:end="111:47">&amp;</operator><name pos:start="111:48" pos:end="111:52"><name pos:start="111:48" pos:end="111:48">h</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:52">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:55" pos:end="111:55">+</operator> <literal type="number" pos:start="111:57" pos:end="111:57">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:58"><expr pos:start="113:9" pos:end="113:57"><name pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:11">sps</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:29">bit_depth_chroma</name></name> <operator pos:start="113:31" pos:end="113:31">=</operator> <call pos:start="113:33" pos:end="113:53"><name pos:start="113:33" pos:end="113:45">get_ue_golomb</name><argument_list pos:start="113:46" pos:end="113:53">(<argument pos:start="113:47" pos:end="113:52"><expr pos:start="113:47" pos:end="113:52"><operator pos:start="113:47" pos:end="113:47">&amp;</operator><name pos:start="113:48" pos:end="113:52"><name pos:start="113:48" pos:end="113:48">h</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:52">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="113:55" pos:end="113:55">+</operator> <literal type="number" pos:start="113:57" pos:end="113:57">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="123:9"><if pos:start="115:9" pos:end="123:9">if <condition pos:start="115:12" pos:end="115:57">(<expr pos:start="115:13" pos:end="115:56"><name pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:15">sps</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:33">bit_depth_chroma</name></name> <operator pos:start="115:35" pos:end="115:36">!=</operator> <name pos:start="115:38" pos:end="115:56"><name pos:start="115:38" pos:end="115:40">sps</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:56">bit_depth_luma</name></name></expr>)</condition> <block pos:start="115:59" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:22">

            <expr_stmt pos:start="117:13" pos:end="119:73"><expr pos:start="117:13" pos:end="119:72"><call pos:start="117:13" pos:end="119:72"><name pos:start="117:13" pos:end="117:33">avpriv_request_sample</name><argument_list pos:start="117:34" pos:end="119:72">(<argument pos:start="117:35" pos:end="117:42"><expr pos:start="117:35" pos:end="117:42"><name pos:start="117:35" pos:end="117:42"><name pos:start="117:35" pos:end="117:35">h</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:42">avctx</name></name></expr></argument>,

                                  <argument pos:start="119:35" pos:end="119:71"><expr pos:start="119:35" pos:end="119:71"><literal type="string" pos:start="119:35" pos:end="119:71">"Different chroma and luma bit depth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="121:13" pos:end="121:22">goto <name pos:start="121:18" pos:end="121:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:50"><expr pos:start="125:9" pos:end="125:49"><name pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:11">sps</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:29">transform_bypass</name></name> <operator pos:start="125:31" pos:end="125:31">=</operator> <call pos:start="125:33" pos:end="125:49"><name pos:start="125:33" pos:end="125:41">get_bits1</name><argument_list pos:start="125:42" pos:end="125:49">(<argument pos:start="125:43" pos:end="125:48"><expr pos:start="125:43" pos:end="125:48"><operator pos:start="125:43" pos:end="125:43">&amp;</operator><name pos:start="125:44" pos:end="125:48"><name pos:start="125:44" pos:end="125:44">h</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="129:76"><expr pos:start="127:9" pos:end="129:75"><call pos:start="127:9" pos:end="129:75"><name pos:start="127:9" pos:end="127:31">decode_scaling_matrices</name><argument_list pos:start="127:32" pos:end="129:75">(<argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><name pos:start="127:33" pos:end="127:33">h</name></expr></argument>, <argument pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:38">sps</name></expr></argument>, <argument pos:start="127:41" pos:end="127:44"><expr pos:start="127:41" pos:end="127:44"><name pos:start="127:41" pos:end="127:44">NULL</name></expr></argument>, <argument pos:start="127:47" pos:end="127:47"><expr pos:start="127:47" pos:end="127:47"><literal type="number" pos:start="127:47" pos:end="127:47">1</literal></expr></argument>,

                                <argument pos:start="129:33" pos:end="129:52"><expr pos:start="129:33" pos:end="129:52"><name pos:start="129:33" pos:end="129:52"><name pos:start="129:33" pos:end="129:35">sps</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:52">scaling_matrix4</name></name></expr></argument>, <argument pos:start="129:55" pos:end="129:74"><expr pos:start="129:55" pos:end="129:74"><name pos:start="129:55" pos:end="129:74"><name pos:start="129:55" pos:end="129:57">sps</name><operator pos:start="129:58" pos:end="129:59">-&gt;</operator><name pos:start="129:60" pos:end="129:74">scaling_matrix8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="139:5">else <block pos:start="131:12" pos:end="139:5">{<block_content pos:start="133:9" pos:end="137:35">

        <expr_stmt pos:start="133:9" pos:end="133:35"><expr pos:start="133:9" pos:end="133:34"><name pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:11">sps</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:30">chroma_format_idc</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <literal type="number" pos:start="133:34" pos:end="133:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:35"><expr pos:start="135:9" pos:end="135:34"><name pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:11">sps</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:27">bit_depth_luma</name></name>    <operator pos:start="135:32" pos:end="135:32">=</operator> <literal type="number" pos:start="135:34" pos:end="135:34">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:35"><expr pos:start="137:9" pos:end="137:34"><name pos:start="137:9" pos:end="137:29"><name pos:start="137:9" pos:end="137:11">sps</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:29">bit_depth_chroma</name></name>  <operator pos:start="137:32" pos:end="137:32">=</operator> <literal type="number" pos:start="137:34" pos:end="137:34">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:54"><expr pos:start="143:5" pos:end="143:53"><name pos:start="143:5" pos:end="143:29">log2_max_frame_num_minus4</name> <operator pos:start="143:31" pos:end="143:31">=</operator> <call pos:start="143:33" pos:end="143:53"><name pos:start="143:33" pos:end="143:45">get_ue_golomb</name><argument_list pos:start="143:46" pos:end="143:53">(<argument pos:start="143:47" pos:end="143:52"><expr pos:start="143:47" pos:end="143:52"><operator pos:start="143:47" pos:end="143:47">&amp;</operator><name pos:start="143:48" pos:end="143:52"><name pos:start="143:48" pos:end="143:48">h</name><operator pos:start="143:49" pos:end="143:50">-&gt;</operator><name pos:start="143:51" pos:end="143:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="157:5"><if pos:start="145:5" pos:end="157:5">if <condition pos:start="145:8" pos:end="147:63">(<expr pos:start="145:9" pos:end="147:62"><name pos:start="145:9" pos:end="147:35"><name pos:start="145:9" pos:end="145:33">log2_max_frame_num_minus4</name> <argument_list type="generic" pos:start="145:35" pos:end="147:35">&lt; <argument pos:start="145:37" pos:end="147:33"><expr pos:start="145:37" pos:end="147:33"><name pos:start="145:37" pos:end="145:58">MIN_LOG2_MAX_FRAME_NUM</name> <operator pos:start="145:60" pos:end="145:60">-</operator> <literal type="number" pos:start="145:62" pos:end="145:62">4</literal> <operator pos:start="145:64" pos:end="145:65">||</operator>

        <name pos:start="147:9" pos:end="147:33">log2_max_frame_num_minus4</name></expr></argument> &gt;</argument_list></name> <name pos:start="147:37" pos:end="147:58">MAX_LOG2_MAX_FRAME_NUM</name> <operator pos:start="147:60" pos:end="147:60">-</operator> <literal type="number" pos:start="147:62" pos:end="147:62">4</literal></expr>)</condition> <block pos:start="147:65" pos:end="157:5">{<block_content pos:start="149:9" pos:end="155:18">

        <expr_stmt pos:start="149:9" pos:end="153:42"><expr pos:start="149:9" pos:end="153:41"><call pos:start="149:9" pos:end="153:41"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="153:41">(<argument pos:start="149:16" pos:end="149:23"><expr pos:start="149:16" pos:end="149:23"><name pos:start="149:16" pos:end="149:23"><name pos:start="149:16" pos:end="149:16">h</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:23">avctx</name></name></expr></argument>, <argument pos:start="149:26" pos:end="149:37"><expr pos:start="149:26" pos:end="149:37"><name pos:start="149:26" pos:end="149:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="151:16" pos:end="151:68"><expr pos:start="151:16" pos:end="151:68"><literal type="string" pos:start="151:16" pos:end="151:68">"log2_max_frame_num_minus4 out of range (0-12): %d\n"</literal></expr></argument>,

               <argument pos:start="153:16" pos:end="153:40"><expr pos:start="153:16" pos:end="153:40"><name pos:start="153:16" pos:end="153:40">log2_max_frame_num_minus4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="155:9" pos:end="155:18">goto <name pos:start="155:14" pos:end="155:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:60"><expr pos:start="159:5" pos:end="159:59"><name pos:start="159:5" pos:end="159:27"><name pos:start="159:5" pos:end="159:7">sps</name><operator pos:start="159:8" pos:end="159:9">-&gt;</operator><name pos:start="159:10" pos:end="159:27">log2_max_frame_num</name></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <name pos:start="159:31" pos:end="159:55">log2_max_frame_num_minus4</name> <operator pos:start="159:57" pos:end="159:57">+</operator> <literal type="number" pos:start="159:59" pos:end="159:59">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:45"><expr pos:start="163:5" pos:end="163:44"><name pos:start="163:5" pos:end="163:17"><name pos:start="163:5" pos:end="163:7">sps</name><operator pos:start="163:8" pos:end="163:9">-&gt;</operator><name pos:start="163:10" pos:end="163:17">poc_type</name></name> <operator pos:start="163:19" pos:end="163:19">=</operator> <call pos:start="163:21" pos:end="163:44"><name pos:start="163:21" pos:end="163:36">get_ue_golomb_31</name><argument_list pos:start="163:37" pos:end="163:44">(<argument pos:start="163:38" pos:end="163:43"><expr pos:start="163:38" pos:end="163:43"><operator pos:start="163:38" pos:end="163:38">&amp;</operator><name pos:start="163:39" pos:end="163:43"><name pos:start="163:39" pos:end="163:39">h</name><operator pos:start="163:40" pos:end="163:41">-&gt;</operator><name pos:start="163:42" pos:end="163:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="167:5" pos:end="207:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:27">(<expr pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:11">sps</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:21">poc_type</name></name> <operator pos:start="167:23" pos:end="167:24">==</operator> <literal type="number" pos:start="167:26" pos:end="167:26">0</literal></expr>)</condition> <block pos:start="167:29" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:58"> <comment type="line" pos:start="167:31" pos:end="167:46">// FIXME #define</comment>

        <expr_stmt pos:start="169:9" pos:end="169:58"><expr pos:start="169:9" pos:end="169:57"><name pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:11">sps</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:29">log2_max_poc_lsb</name></name> <operator pos:start="169:31" pos:end="169:31">=</operator> <call pos:start="169:33" pos:end="169:53"><name pos:start="169:33" pos:end="169:45">get_ue_golomb</name><argument_list pos:start="169:46" pos:end="169:53">(<argument pos:start="169:47" pos:end="169:52"><expr pos:start="169:47" pos:end="169:52"><operator pos:start="169:47" pos:end="169:47">&amp;</operator><name pos:start="169:48" pos:end="169:52"><name pos:start="169:48" pos:end="169:48">h</name><operator pos:start="169:49" pos:end="169:50">-&gt;</operator><name pos:start="169:51" pos:end="169:52">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="169:55" pos:end="169:55">+</operator> <literal type="number" pos:start="169:57" pos:end="169:57">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="171:7" pos:end="201:5">else if <condition pos:start="171:15" pos:end="171:34">(<expr pos:start="171:16" pos:end="171:33"><name pos:start="171:16" pos:end="171:28"><name pos:start="171:16" pos:end="171:18">sps</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:28">poc_type</name></name> <operator pos:start="171:30" pos:end="171:31">==</operator> <literal type="number" pos:start="171:33" pos:end="171:33">1</literal></expr>)</condition> <block pos:start="171:36" pos:end="201:5">{<block_content pos:start="173:9" pos:end="199:65"> <comment type="line" pos:start="171:38" pos:end="171:53">// FIXME #define</comment>

        <expr_stmt pos:start="173:9" pos:end="173:66"><expr pos:start="173:9" pos:end="173:65"><name pos:start="173:9" pos:end="173:45"><name pos:start="173:9" pos:end="173:11">sps</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:45">delta_pic_order_always_zero_flag</name></name> <operator pos:start="173:47" pos:end="173:47">=</operator> <call pos:start="173:49" pos:end="173:65"><name pos:start="173:49" pos:end="173:57">get_bits1</name><argument_list pos:start="173:58" pos:end="173:65">(<argument pos:start="173:59" pos:end="173:64"><expr pos:start="173:59" pos:end="173:64"><operator pos:start="173:59" pos:end="173:59">&amp;</operator><name pos:start="173:60" pos:end="173:64"><name pos:start="173:60" pos:end="173:60">h</name><operator pos:start="173:61" pos:end="173:62">-&gt;</operator><name pos:start="173:63" pos:end="173:64">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:70"><expr pos:start="175:9" pos:end="175:69"><name pos:start="175:9" pos:end="175:35"><name pos:start="175:9" pos:end="175:11">sps</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:35">offset_for_non_ref_pic</name></name>           <operator pos:start="175:47" pos:end="175:47">=</operator> <call pos:start="175:49" pos:end="175:69"><name pos:start="175:49" pos:end="175:61">get_se_golomb</name><argument_list pos:start="175:62" pos:end="175:69">(<argument pos:start="175:63" pos:end="175:68"><expr pos:start="175:63" pos:end="175:68"><operator pos:start="175:63" pos:end="175:63">&amp;</operator><name pos:start="175:64" pos:end="175:68"><name pos:start="175:64" pos:end="175:64">h</name><operator pos:start="175:65" pos:end="175:66">-&gt;</operator><name pos:start="175:67" pos:end="175:68">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:70"><expr pos:start="177:9" pos:end="177:69"><name pos:start="177:9" pos:end="177:43"><name pos:start="177:9" pos:end="177:11">sps</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:43">offset_for_top_to_bottom_field</name></name>   <operator pos:start="177:47" pos:end="177:47">=</operator> <call pos:start="177:49" pos:end="177:69"><name pos:start="177:49" pos:end="177:61">get_se_golomb</name><argument_list pos:start="177:62" pos:end="177:69">(<argument pos:start="177:63" pos:end="177:68"><expr pos:start="177:63" pos:end="177:68"><operator pos:start="177:63" pos:end="177:63">&amp;</operator><name pos:start="177:64" pos:end="177:68"><name pos:start="177:64" pos:end="177:64">h</name><operator pos:start="177:65" pos:end="177:66">-&gt;</operator><name pos:start="177:67" pos:end="177:68">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:70"><expr pos:start="179:9" pos:end="179:69"><name pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:11">sps</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:29">poc_cycle_length</name></name>                 <operator pos:start="179:47" pos:end="179:47">=</operator> <call pos:start="179:49" pos:end="179:69"><name pos:start="179:49" pos:end="179:61">get_ue_golomb</name><argument_list pos:start="179:62" pos:end="179:69">(<argument pos:start="179:63" pos:end="179:68"><expr pos:start="179:63" pos:end="179:68"><operator pos:start="179:63" pos:end="179:63">&amp;</operator><name pos:start="179:64" pos:end="179:68"><name pos:start="179:64" pos:end="179:64">h</name><operator pos:start="179:65" pos:end="179:66">-&gt;</operator><name pos:start="179:67" pos:end="179:68">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="183:9" pos:end="193:9"><if pos:start="183:9" pos:end="193:9">if <condition pos:start="183:12" pos:end="185:54">(<expr pos:start="183:13" pos:end="185:53"><operator pos:start="183:13" pos:end="183:13">(</operator><name pos:start="183:14" pos:end="183:21">unsigned</name><operator pos:start="183:22" pos:end="183:22">)</operator><name pos:start="183:23" pos:end="183:43"><name pos:start="183:23" pos:end="183:25">sps</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:43">poc_cycle_length</name></name> <operator pos:start="183:45" pos:end="183:46">&gt;=</operator>

            <call pos:start="185:13" pos:end="185:53"><name pos:start="185:13" pos:end="185:26">FF_ARRAY_ELEMS</name><argument_list pos:start="185:27" pos:end="185:53">(<argument pos:start="185:28" pos:end="185:52"><expr pos:start="185:28" pos:end="185:52"><name pos:start="185:28" pos:end="185:52"><name pos:start="185:28" pos:end="185:30">sps</name><operator pos:start="185:31" pos:end="185:32">-&gt;</operator><name pos:start="185:33" pos:end="185:52">offset_for_ref_frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:56" pos:end="193:9">{<block_content pos:start="187:13" pos:end="191:22">

            <expr_stmt pos:start="187:13" pos:end="189:76"><expr pos:start="187:13" pos:end="189:75"><call pos:start="187:13" pos:end="189:75"><name pos:start="187:13" pos:end="187:18">av_log</name><argument_list pos:start="187:19" pos:end="189:75">(<argument pos:start="187:20" pos:end="187:27"><expr pos:start="187:20" pos:end="187:27"><name pos:start="187:20" pos:end="187:27"><name pos:start="187:20" pos:end="187:20">h</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:27">avctx</name></name></expr></argument>, <argument pos:start="187:30" pos:end="187:41"><expr pos:start="187:30" pos:end="187:41"><name pos:start="187:30" pos:end="187:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="189:20" pos:end="189:51"><expr pos:start="189:20" pos:end="189:51"><literal type="string" pos:start="189:20" pos:end="189:51">"poc_cycle_length overflow %d\n"</literal></expr></argument>, <argument pos:start="189:54" pos:end="189:74"><expr pos:start="189:54" pos:end="189:74"><name pos:start="189:54" pos:end="189:74"><name pos:start="189:54" pos:end="189:56">sps</name><operator pos:start="189:57" pos:end="189:58">-&gt;</operator><name pos:start="189:59" pos:end="189:74">poc_cycle_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="191:13" pos:end="191:22">goto <name pos:start="191:18" pos:end="191:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="197:9" pos:end="199:65">for <control pos:start="197:13" pos:end="197:51">(<init pos:start="197:14" pos:end="197:19"><expr pos:start="197:14" pos:end="197:18"><name pos:start="197:14" pos:end="197:14">i</name> <operator pos:start="197:16" pos:end="197:16">=</operator> <literal type="number" pos:start="197:18" pos:end="197:18">0</literal></expr>;</init> <condition pos:start="197:21" pos:end="197:46"><expr pos:start="197:21" pos:end="197:45"><name pos:start="197:21" pos:end="197:21">i</name> <operator pos:start="197:23" pos:end="197:23">&lt;</operator> <name pos:start="197:25" pos:end="197:45"><name pos:start="197:25" pos:end="197:27">sps</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:45">poc_cycle_length</name></name></expr>;</condition> <incr pos:start="197:48" pos:end="197:50"><expr pos:start="197:48" pos:end="197:50"><name pos:start="197:48" pos:end="197:48">i</name><operator pos:start="197:49" pos:end="197:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:13" pos:end="199:65"><block_content pos:start="199:13" pos:end="199:65">

            <expr_stmt pos:start="199:13" pos:end="199:65"><expr pos:start="199:13" pos:end="199:64"><name pos:start="199:13" pos:end="199:40"><name pos:start="199:13" pos:end="199:15">sps</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:37">offset_for_ref_frame</name><index pos:start="199:38" pos:end="199:40">[<expr pos:start="199:39" pos:end="199:39"><name pos:start="199:39" pos:end="199:39">i</name></expr>]</index></name> <operator pos:start="199:42" pos:end="199:42">=</operator> <call pos:start="199:44" pos:end="199:64"><name pos:start="199:44" pos:end="199:56">get_se_golomb</name><argument_list pos:start="199:57" pos:end="199:64">(<argument pos:start="199:58" pos:end="199:63"><expr pos:start="199:58" pos:end="199:63"><operator pos:start="199:58" pos:end="199:58">&amp;</operator><name pos:start="199:59" pos:end="199:63"><name pos:start="199:59" pos:end="199:59">h</name><operator pos:start="199:60" pos:end="199:61">-&gt;</operator><name pos:start="199:62" pos:end="199:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="201:7" pos:end="207:5">else if <condition pos:start="201:15" pos:end="201:34">(<expr pos:start="201:16" pos:end="201:33"><name pos:start="201:16" pos:end="201:28"><name pos:start="201:16" pos:end="201:18">sps</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:28">poc_type</name></name> <operator pos:start="201:30" pos:end="201:31">!=</operator> <literal type="number" pos:start="201:33" pos:end="201:33">2</literal></expr>)</condition> <block pos:start="201:36" pos:end="207:5">{<block_content pos:start="203:9" pos:end="205:18">

        <expr_stmt pos:start="203:9" pos:end="203:79"><expr pos:start="203:9" pos:end="203:78"><call pos:start="203:9" pos:end="203:78"><name pos:start="203:9" pos:end="203:14">av_log</name><argument_list pos:start="203:15" pos:end="203:78">(<argument pos:start="203:16" pos:end="203:23"><expr pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:16">h</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:23">avctx</name></name></expr></argument>, <argument pos:start="203:26" pos:end="203:37"><expr pos:start="203:26" pos:end="203:37"><name pos:start="203:26" pos:end="203:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="203:40" pos:end="203:62"><expr pos:start="203:40" pos:end="203:62"><literal type="string" pos:start="203:40" pos:end="203:62">"illegal POC type %d\n"</literal></expr></argument>, <argument pos:start="203:65" pos:end="203:77"><expr pos:start="203:65" pos:end="203:77"><name pos:start="203:65" pos:end="203:77"><name pos:start="203:65" pos:end="203:67">sps</name><operator pos:start="203:68" pos:end="203:69">-&gt;</operator><name pos:start="203:70" pos:end="203:77">poc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="205:9" pos:end="205:18">goto <name pos:start="205:14" pos:end="205:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:52"><expr pos:start="211:5" pos:end="211:51"><name pos:start="211:5" pos:end="211:24"><name pos:start="211:5" pos:end="211:7">sps</name><operator pos:start="211:8" pos:end="211:9">-&gt;</operator><name pos:start="211:10" pos:end="211:24">ref_frame_count</name></name> <operator pos:start="211:26" pos:end="211:26">=</operator> <call pos:start="211:28" pos:end="211:51"><name pos:start="211:28" pos:end="211:43">get_ue_golomb_31</name><argument_list pos:start="211:44" pos:end="211:51">(<argument pos:start="211:45" pos:end="211:50"><expr pos:start="211:45" pos:end="211:50"><operator pos:start="211:45" pos:end="211:45">&amp;</operator><name pos:start="211:46" pos:end="211:50"><name pos:start="211:46" pos:end="211:46">h</name><operator pos:start="211:47" pos:end="211:48">-&gt;</operator><name pos:start="211:49" pos:end="211:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="213:5" pos:end="223:5"><if pos:start="213:5" pos:end="223:5">if <condition pos:start="213:8" pos:end="215:36">(<expr pos:start="213:9" pos:end="215:35"><name pos:start="213:9" pos:end="213:28"><name pos:start="213:9" pos:end="213:11">sps</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:28">ref_frame_count</name></name> <operator pos:start="213:30" pos:end="213:30">&gt;</operator> <name pos:start="213:32" pos:end="213:53">H264_MAX_PICTURE_COUNT</name> <operator pos:start="213:55" pos:end="213:55">-</operator> <literal type="number" pos:start="213:57" pos:end="213:57">2</literal> <operator pos:start="213:59" pos:end="213:60">||</operator>

        <name pos:start="215:9" pos:end="215:28"><name pos:start="215:9" pos:end="215:11">sps</name><operator pos:start="215:12" pos:end="215:13">-&gt;</operator><name pos:start="215:14" pos:end="215:28">ref_frame_count</name></name> <operator pos:start="215:30" pos:end="215:31">&gt;=</operator> <literal type="number" pos:start="215:33" pos:end="215:35">32U</literal></expr>)</condition> <block pos:start="215:38" pos:end="223:5">{<block_content pos:start="217:9" pos:end="221:18">

        <expr_stmt pos:start="217:9" pos:end="219:71"><expr pos:start="217:9" pos:end="219:70"><call pos:start="217:9" pos:end="219:70"><name pos:start="217:9" pos:end="217:14">av_log</name><argument_list pos:start="217:15" pos:end="219:70">(<argument pos:start="217:16" pos:end="217:23"><expr pos:start="217:16" pos:end="217:23"><name pos:start="217:16" pos:end="217:23"><name pos:start="217:16" pos:end="217:16">h</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:23">avctx</name></name></expr></argument>, <argument pos:start="217:26" pos:end="217:37"><expr pos:start="217:26" pos:end="217:37"><name pos:start="217:26" pos:end="217:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="219:16" pos:end="219:47"><expr pos:start="219:16" pos:end="219:47"><literal type="string" pos:start="219:16" pos:end="219:47">"too many reference frames %d\n"</literal></expr></argument>, <argument pos:start="219:50" pos:end="219:69"><expr pos:start="219:50" pos:end="219:69"><name pos:start="219:50" pos:end="219:69"><name pos:start="219:50" pos:end="219:52">sps</name><operator pos:start="219:53" pos:end="219:54">-&gt;</operator><name pos:start="219:55" pos:end="219:69">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="221:9" pos:end="221:18">goto <name pos:start="221:14" pos:end="221:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:60"><expr pos:start="225:5" pos:end="225:59"><name pos:start="225:5" pos:end="225:39"><name pos:start="225:5" pos:end="225:7">sps</name><operator pos:start="225:8" pos:end="225:9">-&gt;</operator><name pos:start="225:10" pos:end="225:39">gaps_in_frame_num_allowed_flag</name></name> <operator pos:start="225:41" pos:end="225:41">=</operator> <call pos:start="225:43" pos:end="225:59"><name pos:start="225:43" pos:end="225:51">get_bits1</name><argument_list pos:start="225:52" pos:end="225:59">(<argument pos:start="225:53" pos:end="225:58"><expr pos:start="225:53" pos:end="225:58"><operator pos:start="225:53" pos:end="225:53">&amp;</operator><name pos:start="225:54" pos:end="225:58"><name pos:start="225:54" pos:end="225:54">h</name><operator pos:start="225:55" pos:end="225:56">-&gt;</operator><name pos:start="225:57" pos:end="225:58">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:68"><expr pos:start="227:5" pos:end="227:67"><name pos:start="227:5" pos:end="227:17"><name pos:start="227:5" pos:end="227:7">sps</name><operator pos:start="227:8" pos:end="227:9">-&gt;</operator><name pos:start="227:10" pos:end="227:17">mb_width</name></name>                       <operator pos:start="227:41" pos:end="227:41">=</operator> <call pos:start="227:43" pos:end="227:63"><name pos:start="227:43" pos:end="227:55">get_ue_golomb</name><argument_list pos:start="227:56" pos:end="227:63">(<argument pos:start="227:57" pos:end="227:62"><expr pos:start="227:57" pos:end="227:62"><operator pos:start="227:57" pos:end="227:57">&amp;</operator><name pos:start="227:58" pos:end="227:62"><name pos:start="227:58" pos:end="227:58">h</name><operator pos:start="227:59" pos:end="227:60">-&gt;</operator><name pos:start="227:61" pos:end="227:62">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="227:65" pos:end="227:65">+</operator> <literal type="number" pos:start="227:67" pos:end="227:67">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:68"><expr pos:start="229:5" pos:end="229:67"><name pos:start="229:5" pos:end="229:18"><name pos:start="229:5" pos:end="229:7">sps</name><operator pos:start="229:8" pos:end="229:9">-&gt;</operator><name pos:start="229:10" pos:end="229:18">mb_height</name></name>                      <operator pos:start="229:41" pos:end="229:41">=</operator> <call pos:start="229:43" pos:end="229:63"><name pos:start="229:43" pos:end="229:55">get_ue_golomb</name><argument_list pos:start="229:56" pos:end="229:63">(<argument pos:start="229:57" pos:end="229:62"><expr pos:start="229:57" pos:end="229:62"><operator pos:start="229:57" pos:end="229:57">&amp;</operator><name pos:start="229:58" pos:end="229:62"><name pos:start="229:58" pos:end="229:58">h</name><operator pos:start="229:59" pos:end="229:60">-&gt;</operator><name pos:start="229:61" pos:end="229:62">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="229:65" pos:end="229:65">+</operator> <literal type="number" pos:start="229:67" pos:end="229:67">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="243:5"><if pos:start="231:5" pos:end="243:5">if <condition pos:start="231:8" pos:end="237:62">(<expr pos:start="231:9" pos:end="237:61"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:17">unsigned</name><operator pos:start="231:18" pos:end="231:18">)</operator><name pos:start="231:19" pos:end="231:31"><name pos:start="231:19" pos:end="231:21">sps</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:31">mb_width</name></name>  <operator pos:start="231:34" pos:end="231:35">&gt;=</operator> <name pos:start="231:37" pos:end="231:43">INT_MAX</name> <operator pos:start="231:45" pos:end="231:45">/</operator> <literal type="number" pos:start="231:47" pos:end="231:48">16</literal> <operator pos:start="231:50" pos:end="231:51">||</operator>

        <operator pos:start="233:9" pos:end="233:9">(</operator><name pos:start="233:10" pos:end="233:17">unsigned</name><operator pos:start="233:18" pos:end="233:18">)</operator><name pos:start="233:19" pos:end="233:32"><name pos:start="233:19" pos:end="233:21">sps</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:32">mb_height</name></name> <operator pos:start="233:34" pos:end="233:35">&gt;=</operator> <name pos:start="233:37" pos:end="233:43">INT_MAX</name> <operator pos:start="233:45" pos:end="233:45">/</operator> <literal type="number" pos:start="233:47" pos:end="233:48">16</literal> <operator pos:start="233:50" pos:end="233:51">||</operator>

        <call pos:start="235:9" pos:end="237:61"><name pos:start="235:9" pos:end="235:27">av_image_check_size</name><argument_list pos:start="235:28" pos:end="237:61">(<argument pos:start="235:29" pos:end="235:46"><expr pos:start="235:29" pos:end="235:46"><literal type="number" pos:start="235:29" pos:end="235:30">16</literal> <operator pos:start="235:32" pos:end="235:32">*</operator> <name pos:start="235:34" pos:end="235:46"><name pos:start="235:34" pos:end="235:36">sps</name><operator pos:start="235:37" pos:end="235:38">-&gt;</operator><name pos:start="235:39" pos:end="235:46">mb_width</name></name></expr></argument>,

                            <argument pos:start="237:29" pos:end="237:47"><expr pos:start="237:29" pos:end="237:47"><literal type="number" pos:start="237:29" pos:end="237:30">16</literal> <operator pos:start="237:32" pos:end="237:32">*</operator> <name pos:start="237:34" pos:end="237:47"><name pos:start="237:34" pos:end="237:36">sps</name><operator pos:start="237:37" pos:end="237:38">-&gt;</operator><name pos:start="237:39" pos:end="237:47">mb_height</name></name></expr></argument>, <argument pos:start="237:50" pos:end="237:50"><expr pos:start="237:50" pos:end="237:50"><literal type="number" pos:start="237:50" pos:end="237:50">0</literal></expr></argument>, <argument pos:start="237:53" pos:end="237:60"><expr pos:start="237:53" pos:end="237:60"><name pos:start="237:53" pos:end="237:60"><name pos:start="237:53" pos:end="237:53">h</name><operator pos:start="237:54" pos:end="237:55">-&gt;</operator><name pos:start="237:56" pos:end="237:60">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="237:64" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:18">

        <expr_stmt pos:start="239:9" pos:end="239:69"><expr pos:start="239:9" pos:end="239:68"><call pos:start="239:9" pos:end="239:68"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="239:68">(<argument pos:start="239:16" pos:end="239:23"><expr pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:16">h</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:23">avctx</name></name></expr></argument>, <argument pos:start="239:26" pos:end="239:37"><expr pos:start="239:26" pos:end="239:37"><name pos:start="239:26" pos:end="239:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:40" pos:end="239:67"><expr pos:start="239:40" pos:end="239:67"><literal type="string" pos:start="239:40" pos:end="239:67">"mb_width/height overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="241:9" pos:end="241:18">goto <name pos:start="241:14" pos:end="241:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:49"><expr pos:start="247:5" pos:end="247:48"><name pos:start="247:5" pos:end="247:28"><name pos:start="247:5" pos:end="247:7">sps</name><operator pos:start="247:8" pos:end="247:9">-&gt;</operator><name pos:start="247:10" pos:end="247:28">frame_mbs_only_flag</name></name> <operator pos:start="247:30" pos:end="247:30">=</operator> <call pos:start="247:32" pos:end="247:48"><name pos:start="247:32" pos:end="247:40">get_bits1</name><argument_list pos:start="247:41" pos:end="247:48">(<argument pos:start="247:42" pos:end="247:47"><expr pos:start="247:42" pos:end="247:47"><operator pos:start="247:42" pos:end="247:42">&amp;</operator><name pos:start="247:43" pos:end="247:47"><name pos:start="247:43" pos:end="247:43">h</name><operator pos:start="247:44" pos:end="247:45">-&gt;</operator><name pos:start="247:46" pos:end="247:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="249:5" pos:end="255:24"><if pos:start="249:5" pos:end="251:40">if <condition pos:start="249:8" pos:end="249:34">(<expr pos:start="249:9" pos:end="249:33"><operator pos:start="249:9" pos:end="249:9">!</operator><name pos:start="249:10" pos:end="249:33"><name pos:start="249:10" pos:end="249:12">sps</name><operator pos:start="249:13" pos:end="249:14">-&gt;</operator><name pos:start="249:15" pos:end="249:33">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:40"><block_content pos:start="251:9" pos:end="251:40">

        <expr_stmt pos:start="251:9" pos:end="251:40"><expr pos:start="251:9" pos:end="251:39"><name pos:start="251:9" pos:end="251:19"><name pos:start="251:9" pos:end="251:11">sps</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:19">mb_aff</name></name> <operator pos:start="251:21" pos:end="251:21">=</operator> <call pos:start="251:23" pos:end="251:39"><name pos:start="251:23" pos:end="251:31">get_bits1</name><argument_list pos:start="251:32" pos:end="251:39">(<argument pos:start="251:33" pos:end="251:38"><expr pos:start="251:33" pos:end="251:38"><operator pos:start="251:33" pos:end="251:33">&amp;</operator><name pos:start="251:34" pos:end="251:38"><name pos:start="251:34" pos:end="251:34">h</name><operator pos:start="251:35" pos:end="251:36">-&gt;</operator><name pos:start="251:37" pos:end="251:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="253:5" pos:end="255:24">else<block type="pseudo" pos:start="255:9" pos:end="255:24"><block_content pos:start="255:9" pos:end="255:24">

        <expr_stmt pos:start="255:9" pos:end="255:24"><expr pos:start="255:9" pos:end="255:23"><name pos:start="255:9" pos:end="255:19"><name pos:start="255:9" pos:end="255:11">sps</name><operator pos:start="255:12" pos:end="255:13">-&gt;</operator><name pos:start="255:14" pos:end="255:19">mb_aff</name></name> <operator pos:start="255:21" pos:end="255:21">=</operator> <literal type="number" pos:start="255:23" pos:end="255:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:55"><expr pos:start="259:5" pos:end="259:54"><name pos:start="259:5" pos:end="259:34"><name pos:start="259:5" pos:end="259:7">sps</name><operator pos:start="259:8" pos:end="259:9">-&gt;</operator><name pos:start="259:10" pos:end="259:34">direct_8x8_inference_flag</name></name> <operator pos:start="259:36" pos:end="259:36">=</operator> <call pos:start="259:38" pos:end="259:54"><name pos:start="259:38" pos:end="259:46">get_bits1</name><argument_list pos:start="259:47" pos:end="259:54">(<argument pos:start="259:48" pos:end="259:53"><expr pos:start="259:48" pos:end="259:53"><operator pos:start="259:48" pos:end="259:48">&amp;</operator><name pos:start="259:49" pos:end="259:53"><name pos:start="259:49" pos:end="259:49">h</name><operator pos:start="259:50" pos:end="259:51">-&gt;</operator><name pos:start="259:52" pos:end="259:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="274:0"><if pos:start="261:5" pos:end="274:0">if <condition pos:start="261:8" pos:end="261:69">(<expr pos:start="261:9" pos:end="261:68"><operator pos:start="261:9" pos:end="261:9">!</operator><name pos:start="261:10" pos:end="261:33"><name pos:start="261:10" pos:end="261:12">sps</name><operator pos:start="261:13" pos:end="261:14">-&gt;</operator><name pos:start="261:15" pos:end="261:33">frame_mbs_only_flag</name></name> <operator pos:start="261:35" pos:end="261:36">&amp;&amp;</operator> <operator pos:start="261:38" pos:end="261:38">!</operator><name pos:start="261:39" pos:end="261:68"><name pos:start="261:39" pos:end="261:41">sps</name><operator pos:start="261:42" pos:end="261:43">-&gt;</operator><name pos:start="261:44" pos:end="261:68">direct_8x8_inference_flag</name></name></expr>)</condition> <block pos:start="261:71" pos:end="274:0">{<block_content pos:start="263:9" pos:end="267:18">

        <expr_stmt pos:start="263:9" pos:end="265:89"><expr pos:start="263:9" pos:end="265:88"><call pos:start="263:9" pos:end="265:88"><name pos:start="263:9" pos:end="263:14">av_log</name><argument_list pos:start="263:15" pos:end="265:88">(<argument pos:start="263:16" pos:end="263:23"><expr pos:start="263:16" pos:end="263:23"><name pos:start="263:16" pos:end="263:23"><name pos:start="263:16" pos:end="263:16">h</name><operator pos:start="263:17" pos:end="263:18">-&gt;</operator><name pos:start="263:19" pos:end="263:23">avctx</name></name></expr></argument>, <argument pos:start="263:26" pos:end="263:37"><expr pos:start="263:26" pos:end="263:37"><name pos:start="263:26" pos:end="263:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="265:16" pos:end="265:87"><expr pos:start="265:16" pos:end="265:87"><literal type="string" pos:start="265:16" pos:end="265:87">"This stream was generated by a broken encoder, invalid 8x8 inference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="267:9" pos:end="267:18">goto <name pos:start="267:14" pos:end="267:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="273:1" pos:end="273:23">#<cpp:directive pos:start="273:2" pos:end="273:7">ifndef</cpp:directive> <name pos:start="273:9" pos:end="273:23">ALLOW_INTERLACE</name></cpp:ifndef>

    <if_stmt pos:start="275:5" pos:end="282:0"><if pos:start="275:5" pos:end="282:0">if <condition pos:start="275:8" pos:end="275:20">(<expr pos:start="275:9" pos:end="275:19"><name pos:start="275:9" pos:end="275:19"><name pos:start="275:9" pos:end="275:11">sps</name><operator pos:start="275:12" pos:end="275:13">-&gt;</operator><name pos:start="275:14" pos:end="275:19">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="282:0"><block_content pos:start="277:9" pos:end="282:0">

        <expr_stmt pos:start="277:9" pos:end="282:0"><expr pos:start="277:9" pos:end="279:74"><call pos:start="277:9" pos:end="279:74"><name pos:start="277:9" pos:end="277:14">av_log</name><argument_list pos:start="277:15" pos:end="279:74">(<argument pos:start="277:16" pos:end="277:23"><expr pos:start="277:16" pos:end="277:23"><name pos:start="277:16" pos:end="277:23"><name pos:start="277:16" pos:end="277:16">h</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:23">avctx</name></name></expr></argument>, <argument pos:start="277:26" pos:end="277:37"><expr pos:start="277:26" pos:end="277:37"><name pos:start="277:26" pos:end="277:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="279:16" pos:end="279:73"><expr pos:start="279:16" pos:end="279:73"><literal type="string" pos:start="279:16" pos:end="279:73">"MBAFF support not included; enable it at compile-time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="281:1" pos:end="281:6">#<cpp:directive pos:start="281:2" pos:end="281:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="283:5" pos:end="283:34"><expr pos:start="283:5" pos:end="283:33"><name pos:start="283:5" pos:end="283:13"><name pos:start="283:5" pos:end="283:7">sps</name><operator pos:start="283:8" pos:end="283:9">-&gt;</operator><name pos:start="283:10" pos:end="283:13">crop</name></name> <operator pos:start="283:15" pos:end="283:15">=</operator> <call pos:start="283:17" pos:end="283:33"><name pos:start="283:17" pos:end="283:25">get_bits1</name><argument_list pos:start="283:26" pos:end="283:33">(<argument pos:start="283:27" pos:end="283:32"><expr pos:start="283:27" pos:end="283:32"><operator pos:start="283:27" pos:end="283:27">&amp;</operator><name pos:start="283:28" pos:end="283:32"><name pos:start="283:28" pos:end="283:28">h</name><operator pos:start="283:29" pos:end="283:30">-&gt;</operator><name pos:start="283:31" pos:end="283:32">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="285:5" pos:end="393:5"><if pos:start="285:5" pos:end="381:5">if <condition pos:start="285:8" pos:end="285:18">(<expr pos:start="285:9" pos:end="285:17"><name pos:start="285:9" pos:end="285:17"><name pos:start="285:9" pos:end="285:11">sps</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:17">crop</name></name></expr>)</condition> <block pos:start="285:20" pos:end="381:5">{<block_content pos:start="287:9" pos:end="379:9">

        <decl_stmt pos:start="287:9" pos:end="287:57"><decl pos:start="287:9" pos:end="287:56"><type pos:start="287:9" pos:end="287:20"><name pos:start="287:9" pos:end="287:16">unsigned</name> <name pos:start="287:18" pos:end="287:20">int</name></type> <name pos:start="287:22" pos:end="287:30">crop_left</name>   <init pos:start="287:34" pos:end="287:56">= <expr pos:start="287:36" pos:end="287:56"><call pos:start="287:36" pos:end="287:56"><name pos:start="287:36" pos:end="287:48">get_ue_golomb</name><argument_list pos:start="287:49" pos:end="287:56">(<argument pos:start="287:50" pos:end="287:55"><expr pos:start="287:50" pos:end="287:55"><operator pos:start="287:50" pos:end="287:50">&amp;</operator><name pos:start="287:51" pos:end="287:55"><name pos:start="287:51" pos:end="287:51">h</name><operator pos:start="287:52" pos:end="287:53">-&gt;</operator><name pos:start="287:54" pos:end="287:55">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="289:9" pos:end="289:57"><decl pos:start="289:9" pos:end="289:56"><type pos:start="289:9" pos:end="289:20"><name pos:start="289:9" pos:end="289:16">unsigned</name> <name pos:start="289:18" pos:end="289:20">int</name></type> <name pos:start="289:22" pos:end="289:31">crop_right</name>  <init pos:start="289:34" pos:end="289:56">= <expr pos:start="289:36" pos:end="289:56"><call pos:start="289:36" pos:end="289:56"><name pos:start="289:36" pos:end="289:48">get_ue_golomb</name><argument_list pos:start="289:49" pos:end="289:56">(<argument pos:start="289:50" pos:end="289:55"><expr pos:start="289:50" pos:end="289:55"><operator pos:start="289:50" pos:end="289:50">&amp;</operator><name pos:start="289:51" pos:end="289:55"><name pos:start="289:51" pos:end="289:51">h</name><operator pos:start="289:52" pos:end="289:53">-&gt;</operator><name pos:start="289:54" pos:end="289:55">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="291:9" pos:end="291:57"><decl pos:start="291:9" pos:end="291:56"><type pos:start="291:9" pos:end="291:20"><name pos:start="291:9" pos:end="291:16">unsigned</name> <name pos:start="291:18" pos:end="291:20">int</name></type> <name pos:start="291:22" pos:end="291:29">crop_top</name>    <init pos:start="291:34" pos:end="291:56">= <expr pos:start="291:36" pos:end="291:56"><call pos:start="291:36" pos:end="291:56"><name pos:start="291:36" pos:end="291:48">get_ue_golomb</name><argument_list pos:start="291:49" pos:end="291:56">(<argument pos:start="291:50" pos:end="291:55"><expr pos:start="291:50" pos:end="291:55"><operator pos:start="291:50" pos:end="291:50">&amp;</operator><name pos:start="291:51" pos:end="291:55"><name pos:start="291:51" pos:end="291:51">h</name><operator pos:start="291:52" pos:end="291:53">-&gt;</operator><name pos:start="291:54" pos:end="291:55">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="293:9" pos:end="293:57"><decl pos:start="293:9" pos:end="293:56"><type pos:start="293:9" pos:end="293:20"><name pos:start="293:9" pos:end="293:16">unsigned</name> <name pos:start="293:18" pos:end="293:20">int</name></type> <name pos:start="293:22" pos:end="293:32">crop_bottom</name> <init pos:start="293:34" pos:end="293:56">= <expr pos:start="293:36" pos:end="293:56"><call pos:start="293:36" pos:end="293:56"><name pos:start="293:36" pos:end="293:48">get_ue_golomb</name><argument_list pos:start="293:49" pos:end="293:56">(<argument pos:start="293:50" pos:end="293:55"><expr pos:start="293:50" pos:end="293:55"><operator pos:start="293:50" pos:end="293:50">&amp;</operator><name pos:start="293:51" pos:end="293:55"><name pos:start="293:51" pos:end="293:51">h</name><operator pos:start="293:52" pos:end="293:53">-&gt;</operator><name pos:start="293:54" pos:end="293:55">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="297:9" pos:end="379:9"><if pos:start="297:9" pos:end="315:9">if <condition pos:start="297:12" pos:end="297:58">(<expr pos:start="297:13" pos:end="297:57"><name pos:start="297:13" pos:end="297:28"><name pos:start="297:13" pos:end="297:13">h</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:20">avctx</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:28">flags2</name></name> <operator pos:start="297:30" pos:end="297:30">&amp;</operator> <name pos:start="297:32" pos:end="297:57">AV_CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="297:60" pos:end="315:9">{<block_content pos:start="299:13" pos:end="313:33">

            <expr_stmt pos:start="299:13" pos:end="303:65"><expr pos:start="299:13" pos:end="303:64"><call pos:start="299:13" pos:end="303:64"><name pos:start="299:13" pos:end="299:18">av_log</name><argument_list pos:start="299:19" pos:end="303:64">(<argument pos:start="299:20" pos:end="299:27"><expr pos:start="299:20" pos:end="299:27"><name pos:start="299:20" pos:end="299:27"><name pos:start="299:20" pos:end="299:20">h</name><operator pos:start="299:21" pos:end="299:22">-&gt;</operator><name pos:start="299:23" pos:end="299:27">avctx</name></name></expr></argument>, <argument pos:start="299:30" pos:end="299:41"><expr pos:start="299:30" pos:end="299:41"><name pos:start="299:30" pos:end="299:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="299:44" pos:end="301:77"><expr pos:start="299:44" pos:end="301:77"><literal type="string" pos:start="299:44" pos:end="299:79">"discarding sps cropping, original "</literal>

                                           <literal type="string" pos:start="301:44" pos:end="301:77">"values are l:%d r:%d t:%d b:%d\n"</literal></expr></argument>,

                   <argument pos:start="303:20" pos:end="303:28"><expr pos:start="303:20" pos:end="303:28"><name pos:start="303:20" pos:end="303:28">crop_left</name></expr></argument>, <argument pos:start="303:31" pos:end="303:40"><expr pos:start="303:31" pos:end="303:40"><name pos:start="303:31" pos:end="303:40">crop_right</name></expr></argument>, <argument pos:start="303:43" pos:end="303:50"><expr pos:start="303:43" pos:end="303:50"><name pos:start="303:43" pos:end="303:50">crop_top</name></expr></argument>, <argument pos:start="303:53" pos:end="303:63"><expr pos:start="303:53" pos:end="303:63"><name pos:start="303:53" pos:end="303:63">crop_bottom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="307:13" pos:end="313:33"><expr pos:start="307:13" pos:end="313:32"><name pos:start="307:13" pos:end="307:26"><name pos:start="307:13" pos:end="307:15">sps</name><operator pos:start="307:16" pos:end="307:17">-&gt;</operator><name pos:start="307:18" pos:end="307:26">crop_left</name></name>   <operator pos:start="307:30" pos:end="307:30">=</operator>

            <name pos:start="309:13" pos:end="309:27"><name pos:start="309:13" pos:end="309:15">sps</name><operator pos:start="309:16" pos:end="309:17">-&gt;</operator><name pos:start="309:18" pos:end="309:27">crop_right</name></name>  <operator pos:start="309:30" pos:end="309:30">=</operator>

            <name pos:start="311:13" pos:end="311:25"><name pos:start="311:13" pos:end="311:15">sps</name><operator pos:start="311:16" pos:end="311:17">-&gt;</operator><name pos:start="311:18" pos:end="311:25">crop_top</name></name>    <operator pos:start="311:30" pos:end="311:30">=</operator>

            <name pos:start="313:13" pos:end="313:28"><name pos:start="313:13" pos:end="313:15">sps</name><operator pos:start="313:16" pos:end="313:17">-&gt;</operator><name pos:start="313:18" pos:end="313:28">crop_bottom</name></name> <operator pos:start="313:30" pos:end="313:30">=</operator> <literal type="number" pos:start="313:32" pos:end="313:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="315:11" pos:end="379:9">else <block pos:start="315:16" pos:end="379:9">{<block_content pos:start="317:13" pos:end="377:52">

            <decl_stmt pos:start="317:13" pos:end="317:63"><decl pos:start="317:13" pos:end="317:62"><type pos:start="317:13" pos:end="317:15"><name pos:start="317:13" pos:end="317:15">int</name></type> <name pos:start="317:17" pos:end="317:20">vsub</name>   <init pos:start="317:24" pos:end="317:62">= <expr pos:start="317:26" pos:end="317:62"><ternary pos:start="317:26" pos:end="317:62"><condition pos:start="317:26" pos:end="317:56"><expr pos:start="317:26" pos:end="317:54"><operator pos:start="317:26" pos:end="317:26">(</operator><name pos:start="317:27" pos:end="317:48"><name pos:start="317:27" pos:end="317:29">sps</name><operator pos:start="317:30" pos:end="317:31">-&gt;</operator><name pos:start="317:32" pos:end="317:48">chroma_format_idc</name></name> <operator pos:start="317:50" pos:end="317:51">==</operator> <literal type="number" pos:start="317:53" pos:end="317:53">1</literal><operator pos:start="317:54" pos:end="317:54">)</operator></expr> ?</condition><then pos:start="317:58" pos:end="317:58"> <expr pos:start="317:58" pos:end="317:58"><literal type="number" pos:start="317:58" pos:end="317:58">1</literal></expr> </then><else pos:start="317:60" pos:end="317:62">: <expr pos:start="317:62" pos:end="317:62"><literal type="number" pos:start="317:62" pos:end="317:62">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="319:13" pos:end="321:63"><decl pos:start="319:13" pos:end="321:62"><type pos:start="319:13" pos:end="319:15"><name pos:start="319:13" pos:end="319:15">int</name></type> <name pos:start="319:17" pos:end="319:20">hsub</name>   <init pos:start="319:24" pos:end="321:62">= <expr pos:start="319:26" pos:end="321:62"><ternary pos:start="319:26" pos:end="321:62"><condition pos:start="319:26" pos:end="321:56"><expr pos:start="319:26" pos:end="321:54"><operator pos:start="319:26" pos:end="319:26">(</operator><name pos:start="319:27" pos:end="319:48"><name pos:start="319:27" pos:end="319:29">sps</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:48">chroma_format_idc</name></name> <operator pos:start="319:50" pos:end="319:51">==</operator> <literal type="number" pos:start="319:53" pos:end="319:53">1</literal> <operator pos:start="319:55" pos:end="319:56">||</operator>

                          <name pos:start="321:27" pos:end="321:48"><name pos:start="321:27" pos:end="321:29">sps</name><operator pos:start="321:30" pos:end="321:31">-&gt;</operator><name pos:start="321:32" pos:end="321:48">chroma_format_idc</name></name> <operator pos:start="321:50" pos:end="321:51">==</operator> <literal type="number" pos:start="321:53" pos:end="321:53">2</literal><operator pos:start="321:54" pos:end="321:54">)</operator></expr> ?</condition><then pos:start="321:58" pos:end="321:58"> <expr pos:start="321:58" pos:end="321:58"><literal type="number" pos:start="321:58" pos:end="321:58">1</literal></expr> </then><else pos:start="321:60" pos:end="321:62">: <expr pos:start="321:62" pos:end="321:62"><literal type="number" pos:start="321:62" pos:end="321:62">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="323:13" pos:end="323:35"><decl pos:start="323:13" pos:end="323:34"><type pos:start="323:13" pos:end="323:15"><name pos:start="323:13" pos:end="323:15">int</name></type> <name pos:start="323:17" pos:end="323:22">step_x</name> <init pos:start="323:24" pos:end="323:34">= <expr pos:start="323:26" pos:end="323:34"><literal type="number" pos:start="323:26" pos:end="323:26">1</literal> <operator pos:start="323:28" pos:end="323:29">&lt;&lt;</operator> <name pos:start="323:31" pos:end="323:34">hsub</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="325:13" pos:end="325:64"><decl pos:start="325:13" pos:end="325:63"><type pos:start="325:13" pos:end="325:15"><name pos:start="325:13" pos:end="325:15">int</name></type> <name pos:start="325:17" pos:end="325:22">step_y</name> <init pos:start="325:24" pos:end="325:63">= <expr pos:start="325:26" pos:end="325:63"><operator pos:start="325:26" pos:end="325:26">(</operator><literal type="number" pos:start="325:27" pos:end="325:29">2</literal> <operator pos:start="325:29" pos:end="325:29">-</operator> <name pos:start="325:31" pos:end="325:54"><name pos:start="325:31" pos:end="325:33">sps</name><operator pos:start="325:34" pos:end="325:35">-&gt;</operator><name pos:start="325:36" pos:end="325:54">frame_mbs_only_flag</name></name><operator pos:start="325:55" pos:end="325:55">)</operator> <operator pos:start="325:57" pos:end="325:58">&lt;&lt;</operator> <name pos:start="325:60" pos:end="325:63">vsub</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="329:13" pos:end="343:13"><if pos:start="329:13" pos:end="343:13">if <condition pos:start="329:16" pos:end="331:61">(<expr pos:start="329:17" pos:end="331:60"><name pos:start="329:17" pos:end="329:25">crop_left</name> <operator pos:start="329:27" pos:end="329:27">&amp;</operator> <operator pos:start="329:29" pos:end="329:29">(</operator><literal type="number" pos:start="329:30" pos:end="329:33">0x1F</literal> <operator pos:start="329:35" pos:end="329:36">&gt;&gt;</operator> <operator pos:start="329:38" pos:end="329:38">(</operator><name pos:start="329:39" pos:end="329:57"><name pos:start="329:39" pos:end="329:41">sps</name><operator pos:start="329:42" pos:end="329:43">-&gt;</operator><name pos:start="329:44" pos:end="329:57">bit_depth_luma</name></name> <operator pos:start="329:59" pos:end="329:59">&gt;</operator> <literal type="number" pos:start="329:61" pos:end="329:61">8</literal><operator pos:start="329:62" pos:end="329:62">)</operator><operator pos:start="329:63" pos:end="329:63">)</operator> <operator pos:start="329:65" pos:end="329:66">&amp;&amp;</operator>

                <operator pos:start="331:17" pos:end="331:17">!</operator><operator pos:start="331:18" pos:end="331:18">(</operator><name pos:start="331:19" pos:end="331:33"><name pos:start="331:19" pos:end="331:19">h</name><operator pos:start="331:20" pos:end="331:21">-&gt;</operator><name pos:start="331:22" pos:end="331:26">avctx</name><operator pos:start="331:27" pos:end="331:28">-&gt;</operator><name pos:start="331:29" pos:end="331:33">flags</name></name> <operator pos:start="331:35" pos:end="331:35">&amp;</operator> <name pos:start="331:37" pos:end="331:59">AV_CODEC_FLAG_UNALIGNED</name><operator pos:start="331:60" pos:end="331:60">)</operator></expr>)</condition> <block pos:start="331:63" pos:end="343:13">{<block_content pos:start="333:17" pos:end="341:34">

                <expr_stmt pos:start="333:17" pos:end="333:66"><expr pos:start="333:17" pos:end="333:65"><name pos:start="333:17" pos:end="333:25">crop_left</name> <operator pos:start="333:27" pos:end="333:28">&amp;=</operator> <operator pos:start="333:30" pos:end="333:30">~</operator><operator pos:start="333:31" pos:end="333:31">(</operator><literal type="number" pos:start="333:32" pos:end="333:35">0x1F</literal> <operator pos:start="333:37" pos:end="333:38">&gt;&gt;</operator> <operator pos:start="333:40" pos:end="333:40">(</operator><name pos:start="333:41" pos:end="333:59"><name pos:start="333:41" pos:end="333:43">sps</name><operator pos:start="333:44" pos:end="333:45">-&gt;</operator><name pos:start="333:46" pos:end="333:59">bit_depth_luma</name></name> <operator pos:start="333:61" pos:end="333:61">&gt;</operator> <literal type="number" pos:start="333:63" pos:end="333:63">8</literal><operator pos:start="333:64" pos:end="333:64">)</operator><operator pos:start="333:65" pos:end="333:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="341:34"><expr pos:start="335:17" pos:end="341:33"><call pos:start="335:17" pos:end="341:33"><name pos:start="335:17" pos:end="335:22">av_log</name><argument_list pos:start="335:23" pos:end="341:33">(<argument pos:start="335:24" pos:end="335:31"><expr pos:start="335:24" pos:end="335:31"><name pos:start="335:24" pos:end="335:31"><name pos:start="335:24" pos:end="335:24">h</name><operator pos:start="335:25" pos:end="335:26">-&gt;</operator><name pos:start="335:27" pos:end="335:31">avctx</name></name></expr></argument>, <argument pos:start="335:34" pos:end="335:47"><expr pos:start="335:34" pos:end="335:47"><name pos:start="335:34" pos:end="335:47">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="337:24" pos:end="339:64"><expr pos:start="337:24" pos:end="339:64"><literal type="string" pos:start="337:24" pos:end="337:54">"Reducing left cropping to %d "</literal>

                       <literal type="string" pos:start="339:24" pos:end="339:64">"chroma samples to preserve alignment.\n"</literal></expr></argument>,

                       <argument pos:start="341:24" pos:end="341:32"><expr pos:start="341:24" pos:end="341:32"><name pos:start="341:24" pos:end="341:32">crop_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="347:13" pos:end="367:13"><if pos:start="347:13" pos:end="367:13">if <condition pos:start="347:16" pos:end="357:73">(<expr pos:start="347:17" pos:end="357:72"><name pos:start="347:17" pos:end="347:23">INT_MAX</name> <operator pos:start="347:25" pos:end="347:25">/</operator> <name pos:start="347:27" pos:end="347:32">step_x</name>             <operator pos:start="347:46" pos:end="347:47">&lt;=</operator> <name pos:start="347:49" pos:end="347:57">crop_left</name>               <operator pos:start="347:73" pos:end="347:74">||</operator>

                <name pos:start="349:17" pos:end="349:23">INT_MAX</name> <operator pos:start="349:25" pos:end="349:25">/</operator> <name pos:start="349:27" pos:end="349:32">step_x</name> <operator pos:start="349:34" pos:end="349:34">-</operator> <name pos:start="349:36" pos:end="349:44">crop_left</name> <operator pos:start="349:46" pos:end="349:47">&lt;=</operator> <name pos:start="349:49" pos:end="349:58">crop_right</name>              <operator pos:start="349:73" pos:end="349:74">||</operator>

                <literal type="number" pos:start="351:17" pos:end="351:18">16</literal> <operator pos:start="351:20" pos:end="351:20">*</operator> <name pos:start="351:22" pos:end="351:34"><name pos:start="351:22" pos:end="351:24">sps</name><operator pos:start="351:25" pos:end="351:26">-&gt;</operator><name pos:start="351:27" pos:end="351:34">mb_width</name></name> <operator pos:start="351:36" pos:end="351:37">&lt;=</operator> <name pos:start="351:39" pos:end="351:44">step_x</name> <operator pos:start="351:46" pos:end="351:46">*</operator> <operator pos:start="351:48" pos:end="351:48">(</operator><name pos:start="351:49" pos:end="351:57">crop_left</name> <operator pos:start="351:59" pos:end="351:59">+</operator> <name pos:start="351:61" pos:end="351:70">crop_right</name><operator pos:start="351:71" pos:end="351:71">)</operator> <operator pos:start="351:73" pos:end="351:74">||</operator>

                <name pos:start="353:17" pos:end="353:23">INT_MAX</name> <operator pos:start="353:25" pos:end="353:25">/</operator> <name pos:start="353:27" pos:end="353:32">step_y</name>             <operator pos:start="353:46" pos:end="353:47">&lt;=</operator> <name pos:start="353:49" pos:end="353:56">crop_top</name>                <operator pos:start="353:73" pos:end="353:74">||</operator>

                <name pos:start="355:17" pos:end="355:23">INT_MAX</name> <operator pos:start="355:25" pos:end="355:25">/</operator> <name pos:start="355:27" pos:end="355:32">step_y</name> <operator pos:start="355:34" pos:end="355:34">-</operator> <name pos:start="355:36" pos:end="355:43">crop_top</name>  <operator pos:start="355:46" pos:end="355:47">&lt;=</operator> <name pos:start="355:49" pos:end="355:59">crop_bottom</name>             <operator pos:start="355:73" pos:end="355:74">||</operator>

                <literal type="number" pos:start="357:17" pos:end="357:18">16</literal> <operator pos:start="357:20" pos:end="357:20">*</operator> <name pos:start="357:22" pos:end="357:35"><name pos:start="357:22" pos:end="357:24">sps</name><operator pos:start="357:25" pos:end="357:26">-&gt;</operator><name pos:start="357:27" pos:end="357:35">mb_height</name></name> <operator pos:start="357:37" pos:end="357:38">&lt;=</operator> <name pos:start="357:40" pos:end="357:45">step_y</name> <operator pos:start="357:47" pos:end="357:47">*</operator> <operator pos:start="357:49" pos:end="357:49">(</operator><name pos:start="357:50" pos:end="357:57">crop_top</name> <operator pos:start="357:59" pos:end="357:59">+</operator> <name pos:start="357:61" pos:end="357:71">crop_bottom</name><operator pos:start="357:72" pos:end="357:72">)</operator></expr>)</condition> <block pos:start="357:75" pos:end="367:13">{<block_content pos:start="359:17" pos:end="365:68">

                <expr_stmt pos:start="359:17" pos:end="359:78"><expr pos:start="359:17" pos:end="359:77"><call pos:start="359:17" pos:end="359:77"><name pos:start="359:17" pos:end="359:22">av_log</name><argument_list pos:start="359:23" pos:end="359:77">(<argument pos:start="359:24" pos:end="359:31"><expr pos:start="359:24" pos:end="359:31"><name pos:start="359:24" pos:end="359:31"><name pos:start="359:24" pos:end="359:24">h</name><operator pos:start="359:25" pos:end="359:26">-&gt;</operator><name pos:start="359:27" pos:end="359:31">avctx</name></name></expr></argument>, <argument pos:start="359:34" pos:end="359:47"><expr pos:start="359:34" pos:end="359:47"><name pos:start="359:34" pos:end="359:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="359:50" pos:end="359:76"><expr pos:start="359:50" pos:end="359:76"><literal type="string" pos:start="359:50" pos:end="359:76">"Invalid crop parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="361:17" pos:end="363:30"><if pos:start="361:17" pos:end="363:30">if <condition pos:start="361:20" pos:end="361:62">(<expr pos:start="361:21" pos:end="361:61"><name pos:start="361:21" pos:end="361:45"><name pos:start="361:21" pos:end="361:21">h</name><operator pos:start="361:22" pos:end="361:23">-&gt;</operator><name pos:start="361:24" pos:end="361:28">avctx</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:45">err_recognition</name></name> <operator pos:start="361:47" pos:end="361:47">&amp;</operator> <name pos:start="361:49" pos:end="361:61">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="363:21" pos:end="363:30"><block_content pos:start="363:21" pos:end="363:30">

                    <goto pos:start="363:21" pos:end="363:30">goto <name pos:start="363:26" pos:end="363:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:68"><expr pos:start="365:17" pos:end="365:67"><name pos:start="365:17" pos:end="365:25">crop_left</name> <operator pos:start="365:27" pos:end="365:27">=</operator> <name pos:start="365:29" pos:end="365:38">crop_right</name> <operator pos:start="365:40" pos:end="365:40">=</operator> <name pos:start="365:42" pos:end="365:49">crop_top</name> <operator pos:start="365:51" pos:end="365:51">=</operator> <name pos:start="365:53" pos:end="365:63">crop_bottom</name> <operator pos:start="365:65" pos:end="365:65">=</operator> <literal type="number" pos:start="365:67" pos:end="365:67">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="371:13" pos:end="371:52"><expr pos:start="371:13" pos:end="371:51"><name pos:start="371:13" pos:end="371:26"><name pos:start="371:13" pos:end="371:15">sps</name><operator pos:start="371:16" pos:end="371:17">-&gt;</operator><name pos:start="371:18" pos:end="371:26">crop_left</name></name>   <operator pos:start="371:30" pos:end="371:30">=</operator> <name pos:start="371:32" pos:end="371:40">crop_left</name>   <operator pos:start="371:44" pos:end="371:44">*</operator> <name pos:start="371:46" pos:end="371:51">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:52"><expr pos:start="373:13" pos:end="373:51"><name pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:15">sps</name><operator pos:start="373:16" pos:end="373:17">-&gt;</operator><name pos:start="373:18" pos:end="373:27">crop_right</name></name>  <operator pos:start="373:30" pos:end="373:30">=</operator> <name pos:start="373:32" pos:end="373:41">crop_right</name>  <operator pos:start="373:44" pos:end="373:44">*</operator> <name pos:start="373:46" pos:end="373:51">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:52"><expr pos:start="375:13" pos:end="375:51"><name pos:start="375:13" pos:end="375:25"><name pos:start="375:13" pos:end="375:15">sps</name><operator pos:start="375:16" pos:end="375:17">-&gt;</operator><name pos:start="375:18" pos:end="375:25">crop_top</name></name>    <operator pos:start="375:30" pos:end="375:30">=</operator> <name pos:start="375:32" pos:end="375:39">crop_top</name>    <operator pos:start="375:44" pos:end="375:44">*</operator> <name pos:start="375:46" pos:end="375:51">step_y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:52"><expr pos:start="377:13" pos:end="377:51"><name pos:start="377:13" pos:end="377:28"><name pos:start="377:13" pos:end="377:15">sps</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:28">crop_bottom</name></name> <operator pos:start="377:30" pos:end="377:30">=</operator> <name pos:start="377:32" pos:end="377:42">crop_bottom</name> <operator pos:start="377:44" pos:end="377:44">*</operator> <name pos:start="377:46" pos:end="377:51">step_y</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="381:7" pos:end="393:5">else <block pos:start="381:12" pos:end="393:5">{<block_content pos:start="383:9" pos:end="391:29">

        <expr_stmt pos:start="383:9" pos:end="391:29"><expr pos:start="383:9" pos:end="391:28"><name pos:start="383:9" pos:end="383:22"><name pos:start="383:9" pos:end="383:11">sps</name><operator pos:start="383:12" pos:end="383:13">-&gt;</operator><name pos:start="383:14" pos:end="383:22">crop_left</name></name>   <operator pos:start="383:26" pos:end="383:26">=</operator>

        <name pos:start="385:9" pos:end="385:23"><name pos:start="385:9" pos:end="385:11">sps</name><operator pos:start="385:12" pos:end="385:13">-&gt;</operator><name pos:start="385:14" pos:end="385:23">crop_right</name></name>  <operator pos:start="385:26" pos:end="385:26">=</operator>

        <name pos:start="387:9" pos:end="387:21"><name pos:start="387:9" pos:end="387:11">sps</name><operator pos:start="387:12" pos:end="387:13">-&gt;</operator><name pos:start="387:14" pos:end="387:21">crop_top</name></name>    <operator pos:start="387:26" pos:end="387:26">=</operator>

        <name pos:start="389:9" pos:end="389:24"><name pos:start="389:9" pos:end="389:11">sps</name><operator pos:start="389:12" pos:end="389:13">-&gt;</operator><name pos:start="389:14" pos:end="389:24">crop_bottom</name></name> <operator pos:start="389:26" pos:end="389:26">=</operator>

        <name pos:start="391:9" pos:end="391:17"><name pos:start="391:9" pos:end="391:11">sps</name><operator pos:start="391:12" pos:end="391:13">-&gt;</operator><name pos:start="391:14" pos:end="391:17">crop</name></name>        <operator pos:start="391:26" pos:end="391:26">=</operator> <literal type="number" pos:start="391:28" pos:end="391:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="397:5" pos:end="397:57"><expr pos:start="397:5" pos:end="397:56"><name pos:start="397:5" pos:end="397:36"><name pos:start="397:5" pos:end="397:7">sps</name><operator pos:start="397:8" pos:end="397:9">-&gt;</operator><name pos:start="397:10" pos:end="397:36">vui_parameters_present_flag</name></name> <operator pos:start="397:38" pos:end="397:38">=</operator> <call pos:start="397:40" pos:end="397:56"><name pos:start="397:40" pos:end="397:48">get_bits1</name><argument_list pos:start="397:49" pos:end="397:56">(<argument pos:start="397:50" pos:end="397:55"><expr pos:start="397:50" pos:end="397:55"><operator pos:start="397:50" pos:end="397:50">&amp;</operator><name pos:start="397:51" pos:end="397:55"><name pos:start="397:51" pos:end="397:51">h</name><operator pos:start="397:52" pos:end="397:53">-&gt;</operator><name pos:start="397:54" pos:end="397:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="399:5" pos:end="407:5"><if pos:start="399:5" pos:end="407:5">if <condition pos:start="399:8" pos:end="399:41">(<expr pos:start="399:9" pos:end="399:40"><name pos:start="399:9" pos:end="399:40"><name pos:start="399:9" pos:end="399:11">sps</name><operator pos:start="399:12" pos:end="399:13">-&gt;</operator><name pos:start="399:14" pos:end="399:40">vui_parameters_present_flag</name></name></expr>)</condition> <block pos:start="399:43" pos:end="407:5">{<block_content pos:start="401:9" pos:end="405:22">

        <decl_stmt pos:start="401:9" pos:end="401:48"><decl pos:start="401:9" pos:end="401:47"><type pos:start="401:9" pos:end="401:11"><name pos:start="401:9" pos:end="401:11">int</name></type> <name pos:start="401:13" pos:end="401:15">ret</name> <init pos:start="401:17" pos:end="401:47">= <expr pos:start="401:19" pos:end="401:47"><call pos:start="401:19" pos:end="401:47"><name pos:start="401:19" pos:end="401:39">decode_vui_parameters</name><argument_list pos:start="401:40" pos:end="401:47">(<argument pos:start="401:41" pos:end="401:41"><expr pos:start="401:41" pos:end="401:41"><name pos:start="401:41" pos:end="401:41">h</name></expr></argument>, <argument pos:start="401:44" pos:end="401:46"><expr pos:start="401:44" pos:end="401:46"><name pos:start="401:44" pos:end="401:46">sps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="403:9" pos:end="405:22"><if pos:start="403:9" pos:end="405:22">if <condition pos:start="403:12" pos:end="403:65">(<expr pos:start="403:13" pos:end="403:64"><name pos:start="403:13" pos:end="403:15">ret</name> <operator pos:start="403:17" pos:end="403:17">&lt;</operator> <literal type="number" pos:start="403:19" pos:end="403:19">0</literal> <operator pos:start="403:21" pos:end="403:22">&amp;&amp;</operator> <name pos:start="403:24" pos:end="403:48"><name pos:start="403:24" pos:end="403:24">h</name><operator pos:start="403:25" pos:end="403:26">-&gt;</operator><name pos:start="403:27" pos:end="403:31">avctx</name><operator pos:start="403:32" pos:end="403:33">-&gt;</operator><name pos:start="403:34" pos:end="403:48">err_recognition</name></name> <operator pos:start="403:50" pos:end="403:50">&amp;</operator> <name pos:start="403:52" pos:end="403:64">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="405:13" pos:end="405:22"><block_content pos:start="405:13" pos:end="405:22">

            <goto pos:start="405:13" pos:end="405:22">goto <name pos:start="405:18" pos:end="405:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="411:5" pos:end="413:15">/* if the maximum delay is not stored in the SPS, derive it based on the

     * level */</comment>

    <if_stmt pos:start="415:5" pos:end="433:5"><if pos:start="415:5" pos:end="433:5">if <condition pos:start="415:8" pos:end="415:41">(<expr pos:start="415:9" pos:end="415:40"><operator pos:start="415:9" pos:end="415:9">!</operator><name pos:start="415:10" pos:end="415:40"><name pos:start="415:10" pos:end="415:12">sps</name><operator pos:start="415:13" pos:end="415:14">-&gt;</operator><name pos:start="415:15" pos:end="415:40">bitstream_restriction_flag</name></name></expr>)</condition> <block pos:start="415:43" pos:end="433:5">{<block_content pos:start="417:9" pos:end="431:9">

        <expr_stmt pos:start="417:9" pos:end="417:60"><expr pos:start="417:9" pos:end="417:59"><name pos:start="417:9" pos:end="417:31"><name pos:start="417:9" pos:end="417:11">sps</name><operator pos:start="417:12" pos:end="417:13">-&gt;</operator><name pos:start="417:14" pos:end="417:31">num_reorder_frames</name></name> <operator pos:start="417:33" pos:end="417:33">=</operator> <name pos:start="417:35" pos:end="417:55">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="417:57" pos:end="417:57">-</operator> <literal type="number" pos:start="417:59" pos:end="417:59">1</literal></expr>;</expr_stmt>

        <for pos:start="419:9" pos:end="431:9">for <control pos:start="419:13" pos:end="419:63">(<init pos:start="419:14" pos:end="419:19"><expr pos:start="419:14" pos:end="419:18"><name pos:start="419:14" pos:end="419:14">i</name> <operator pos:start="419:16" pos:end="419:16">=</operator> <literal type="number" pos:start="419:18" pos:end="419:18">0</literal></expr>;</init> <condition pos:start="419:21" pos:end="419:58"><expr pos:start="419:21" pos:end="419:57"><name pos:start="419:21" pos:end="419:21">i</name> <operator pos:start="419:23" pos:end="419:23">&lt;</operator> <call pos:start="419:25" pos:end="419:57"><name pos:start="419:25" pos:end="419:38">FF_ARRAY_ELEMS</name><argument_list pos:start="419:39" pos:end="419:57">(<argument pos:start="419:40" pos:end="419:56"><expr pos:start="419:40" pos:end="419:56"><name pos:start="419:40" pos:end="419:56">level_max_dpb_mbs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="419:60" pos:end="419:62"><expr pos:start="419:60" pos:end="419:62"><name pos:start="419:60" pos:end="419:60">i</name><operator pos:start="419:61" pos:end="419:62">++</operator></expr></incr>)</control> <block pos:start="419:65" pos:end="431:9">{<block_content pos:start="421:13" pos:end="429:13">

            <if_stmt pos:start="421:13" pos:end="429:13"><if pos:start="421:13" pos:end="429:13">if <condition pos:start="421:16" pos:end="421:58">(<expr pos:start="421:17" pos:end="421:57"><name pos:start="421:17" pos:end="421:39"><name pos:start="421:17" pos:end="421:33">level_max_dpb_mbs</name><index pos:start="421:34" pos:end="421:36">[<expr pos:start="421:35" pos:end="421:35"><name pos:start="421:35" pos:end="421:35">i</name></expr>]</index><index pos:start="421:37" pos:end="421:39">[<expr pos:start="421:38" pos:end="421:38"><literal type="number" pos:start="421:38" pos:end="421:38">0</literal></expr>]</index></name> <operator pos:start="421:41" pos:end="421:42">==</operator> <name pos:start="421:44" pos:end="421:57"><name pos:start="421:44" pos:end="421:46">sps</name><operator pos:start="421:47" pos:end="421:48">-&gt;</operator><name pos:start="421:49" pos:end="421:57">level_idc</name></name></expr>)</condition> <block pos:start="421:60" pos:end="429:13">{<block_content pos:start="423:17" pos:end="427:22">

                <expr_stmt pos:start="423:17" pos:end="425:73"><expr pos:start="423:17" pos:end="425:72"><name pos:start="423:17" pos:end="423:39"><name pos:start="423:17" pos:end="423:19">sps</name><operator pos:start="423:20" pos:end="423:21">-&gt;</operator><name pos:start="423:22" pos:end="423:39">num_reorder_frames</name></name> <operator pos:start="423:41" pos:end="423:41">=</operator> <call pos:start="423:43" pos:end="425:72"><name pos:start="423:43" pos:end="423:47">FFMIN</name><argument_list pos:start="423:48" pos:end="425:72">(<argument pos:start="423:49" pos:end="423:106"><expr pos:start="423:49" pos:end="423:106"><name pos:start="423:49" pos:end="423:71"><name pos:start="423:49" pos:end="423:65">level_max_dpb_mbs</name><index pos:start="423:66" pos:end="423:68">[<expr pos:start="423:67" pos:end="423:67"><name pos:start="423:67" pos:end="423:67">i</name></expr>]</index><index pos:start="423:69" pos:end="423:71">[<expr pos:start="423:70" pos:end="423:70"><literal type="number" pos:start="423:70" pos:end="423:70">1</literal></expr>]</index></name> <operator pos:start="423:73" pos:end="423:73">/</operator> <operator pos:start="423:75" pos:end="423:75">(</operator><name pos:start="423:76" pos:end="423:88"><name pos:start="423:76" pos:end="423:78">sps</name><operator pos:start="423:79" pos:end="423:80">-&gt;</operator><name pos:start="423:81" pos:end="423:88">mb_width</name></name> <operator pos:start="423:90" pos:end="423:90">*</operator> <name pos:start="423:92" pos:end="423:105"><name pos:start="423:92" pos:end="423:94">sps</name><operator pos:start="423:95" pos:end="423:96">-&gt;</operator><name pos:start="423:97" pos:end="423:105">mb_height</name></name><operator pos:start="423:106" pos:end="423:106">)</operator></expr></argument>,

                                                <argument pos:start="425:49" pos:end="425:71"><expr pos:start="425:49" pos:end="425:71"><name pos:start="425:49" pos:end="425:71"><name pos:start="425:49" pos:end="425:51">sps</name><operator pos:start="425:52" pos:end="425:53">-&gt;</operator><name pos:start="425:54" pos:end="425:71">num_reorder_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="427:17" pos:end="427:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="437:5" pos:end="439:25"><if pos:start="437:5" pos:end="439:25">if <condition pos:start="437:8" pos:end="437:22">(<expr pos:start="437:9" pos:end="437:21"><operator pos:start="437:9" pos:end="437:9">!</operator><name pos:start="437:10" pos:end="437:21"><name pos:start="437:10" pos:end="437:12">sps</name><operator pos:start="437:13" pos:end="437:14">-&gt;</operator><name pos:start="437:15" pos:end="437:17">sar</name><operator pos:start="437:18" pos:end="437:18">.</operator><name pos:start="437:19" pos:end="437:21">den</name></name></expr>)</condition><block type="pseudo" pos:start="439:9" pos:end="439:25"><block_content pos:start="439:9" pos:end="439:25">

        <expr_stmt pos:start="439:9" pos:end="439:25"><expr pos:start="439:9" pos:end="439:24"><name pos:start="439:9" pos:end="439:20"><name pos:start="439:9" pos:end="439:11">sps</name><operator pos:start="439:12" pos:end="439:13">-&gt;</operator><name pos:start="439:14" pos:end="439:16">sar</name><operator pos:start="439:17" pos:end="439:17">.</operator><name pos:start="439:18" pos:end="439:20">den</name></name> <operator pos:start="439:22" pos:end="439:22">=</operator> <literal type="number" pos:start="439:24" pos:end="439:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="443:5" pos:end="475:5"><if pos:start="443:5" pos:end="475:5">if <condition pos:start="443:8" pos:end="443:45">(<expr pos:start="443:9" pos:end="443:44"><name pos:start="443:9" pos:end="443:23"><name pos:start="443:9" pos:end="443:9">h</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:16">avctx</name><operator pos:start="443:17" pos:end="443:18">-&gt;</operator><name pos:start="443:19" pos:end="443:23">debug</name></name> <operator pos:start="443:25" pos:end="443:25">&amp;</operator> <name pos:start="443:27" pos:end="443:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="443:47" pos:end="475:5">{<block_content pos:start="445:9" pos:end="473:68">

        <decl_stmt pos:start="445:9" pos:end="445:70"><decl pos:start="445:9" pos:end="445:69"><type pos:start="445:9" pos:end="445:25"><specifier pos:start="445:9" pos:end="445:14">static</specifier> <specifier pos:start="445:16" pos:end="445:20">const</specifier> <name pos:start="445:22" pos:end="445:25">char</name></type> <name pos:start="445:27" pos:end="445:35"><name pos:start="445:27" pos:end="445:29">csp</name><index pos:start="445:30" pos:end="445:32">[<expr pos:start="445:31" pos:end="445:31"><literal type="number" pos:start="445:31" pos:end="445:31">4</literal></expr>]</index><index pos:start="445:33" pos:end="445:35">[<expr pos:start="445:34" pos:end="445:34"><literal type="number" pos:start="445:34" pos:end="445:34">5</literal></expr>]</index></name> <init pos:start="445:37" pos:end="445:69">= <expr pos:start="445:39" pos:end="445:69"><block pos:start="445:39" pos:end="445:69">{ <expr pos:start="445:41" pos:end="445:46"><literal type="string" pos:start="445:41" pos:end="445:46">"Gray"</literal></expr>, <expr pos:start="445:49" pos:end="445:53"><literal type="string" pos:start="445:49" pos:end="445:53">"420"</literal></expr>, <expr pos:start="445:56" pos:end="445:60"><literal type="string" pos:start="445:56" pos:end="445:60">"422"</literal></expr>, <expr pos:start="445:63" pos:end="445:67"><literal type="string" pos:start="445:63" pos:end="445:67">"444"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="447:9" pos:end="473:68"><expr pos:start="447:9" pos:end="473:67"><call pos:start="447:9" pos:end="473:67"><name pos:start="447:9" pos:end="447:14">av_log</name><argument_list pos:start="447:15" pos:end="473:67">(<argument pos:start="447:16" pos:end="447:23"><expr pos:start="447:16" pos:end="447:23"><name pos:start="447:16" pos:end="447:23"><name pos:start="447:16" pos:end="447:16">h</name><operator pos:start="447:17" pos:end="447:18">-&gt;</operator><name pos:start="447:19" pos:end="447:23">avctx</name></name></expr></argument>, <argument pos:start="447:26" pos:end="447:37"><expr pos:start="447:26" pos:end="447:37"><name pos:start="447:26" pos:end="447:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="449:16" pos:end="449:108"><expr pos:start="449:16" pos:end="449:108"><literal type="string" pos:start="449:16" pos:end="449:88">"sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %"</literal><name pos:start="449:89" pos:end="449:94">PRId32</name><literal type="string" pos:start="449:95" pos:end="449:98">"/%"</literal><name pos:start="449:99" pos:end="449:104">PRId32</name><literal type="string" pos:start="449:105" pos:end="449:108">"\n"</literal></expr></argument>,

               <argument pos:start="451:16" pos:end="451:21"><expr pos:start="451:16" pos:end="451:21"><name pos:start="451:16" pos:end="451:21">sps_id</name></expr></argument>, <argument pos:start="451:24" pos:end="451:39"><expr pos:start="451:24" pos:end="451:39"><name pos:start="451:24" pos:end="451:39"><name pos:start="451:24" pos:end="451:26">sps</name><operator pos:start="451:27" pos:end="451:28">-&gt;</operator><name pos:start="451:29" pos:end="451:39">profile_idc</name></name></expr></argument>, <argument pos:start="451:42" pos:end="451:55"><expr pos:start="451:42" pos:end="451:55"><name pos:start="451:42" pos:end="451:55"><name pos:start="451:42" pos:end="451:44">sps</name><operator pos:start="451:45" pos:end="451:46">-&gt;</operator><name pos:start="451:47" pos:end="451:55">level_idc</name></name></expr></argument>,

               <argument pos:start="453:16" pos:end="453:28"><expr pos:start="453:16" pos:end="453:28"><name pos:start="453:16" pos:end="453:28"><name pos:start="453:16" pos:end="453:18">sps</name><operator pos:start="453:19" pos:end="453:20">-&gt;</operator><name pos:start="453:21" pos:end="453:28">poc_type</name></name></expr></argument>,

               <argument pos:start="455:16" pos:end="455:35"><expr pos:start="455:16" pos:end="455:35"><name pos:start="455:16" pos:end="455:35"><name pos:start="455:16" pos:end="455:18">sps</name><operator pos:start="455:19" pos:end="455:20">-&gt;</operator><name pos:start="455:21" pos:end="455:35">ref_frame_count</name></name></expr></argument>,

               <argument pos:start="457:16" pos:end="457:28"><expr pos:start="457:16" pos:end="457:28"><name pos:start="457:16" pos:end="457:28"><name pos:start="457:16" pos:end="457:18">sps</name><operator pos:start="457:19" pos:end="457:20">-&gt;</operator><name pos:start="457:21" pos:end="457:28">mb_width</name></name></expr></argument>, <argument pos:start="457:31" pos:end="457:44"><expr pos:start="457:31" pos:end="457:44"><name pos:start="457:31" pos:end="457:44"><name pos:start="457:31" pos:end="457:33">sps</name><operator pos:start="457:34" pos:end="457:35">-&gt;</operator><name pos:start="457:36" pos:end="457:44">mb_height</name></name></expr></argument>,

               <argument pos:start="459:16" pos:end="459:86"><expr pos:start="459:16" pos:end="459:86"><ternary pos:start="459:16" pos:end="459:86"><condition pos:start="459:16" pos:end="459:41"><expr pos:start="459:16" pos:end="459:39"><name pos:start="459:16" pos:end="459:39"><name pos:start="459:16" pos:end="459:18">sps</name><operator pos:start="459:19" pos:end="459:20">-&gt;</operator><name pos:start="459:21" pos:end="459:39">frame_mbs_only_flag</name></name></expr> ?</condition><then pos:start="459:43" pos:end="459:47"> <expr pos:start="459:43" pos:end="459:47"><literal type="string" pos:start="459:43" pos:end="459:47">"FRM"</literal></expr> </then><else pos:start="459:49" pos:end="459:86">: <expr pos:start="459:51" pos:end="459:86"><operator pos:start="459:51" pos:end="459:51">(</operator><ternary pos:start="459:52" pos:end="459:85"><condition pos:start="459:52" pos:end="459:64"><expr pos:start="459:52" pos:end="459:62"><name pos:start="459:52" pos:end="459:62"><name pos:start="459:52" pos:end="459:54">sps</name><operator pos:start="459:55" pos:end="459:56">-&gt;</operator><name pos:start="459:57" pos:end="459:62">mb_aff</name></name></expr> ?</condition><then pos:start="459:66" pos:end="459:73"> <expr pos:start="459:66" pos:end="459:73"><literal type="string" pos:start="459:66" pos:end="459:73">"MB-AFF"</literal></expr> </then><else pos:start="459:75" pos:end="459:85">: <expr pos:start="459:77" pos:end="459:85"><literal type="string" pos:start="459:77" pos:end="459:85">"PIC-AFF"</literal></expr></else></ternary><operator pos:start="459:86" pos:end="459:86">)</operator></expr></else></ternary></expr></argument>,

               <argument pos:start="461:16" pos:end="461:58"><expr pos:start="461:16" pos:end="461:58"><ternary pos:start="461:16" pos:end="461:58"><condition pos:start="461:16" pos:end="461:47"><expr pos:start="461:16" pos:end="461:45"><name pos:start="461:16" pos:end="461:45"><name pos:start="461:16" pos:end="461:18">sps</name><operator pos:start="461:19" pos:end="461:20">-&gt;</operator><name pos:start="461:21" pos:end="461:45">direct_8x8_inference_flag</name></name></expr> ?</condition><then pos:start="461:49" pos:end="461:53"> <expr pos:start="461:49" pos:end="461:53"><literal type="string" pos:start="461:49" pos:end="461:53">"8B8"</literal></expr> </then><else pos:start="461:55" pos:end="461:58">: <expr pos:start="461:57" pos:end="461:58"><literal type="string" pos:start="461:57" pos:end="461:58">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="463:16" pos:end="463:29"><expr pos:start="463:16" pos:end="463:29"><name pos:start="463:16" pos:end="463:29"><name pos:start="463:16" pos:end="463:18">sps</name><operator pos:start="463:19" pos:end="463:20">-&gt;</operator><name pos:start="463:21" pos:end="463:29">crop_left</name></name></expr></argument>, <argument pos:start="463:32" pos:end="463:46"><expr pos:start="463:32" pos:end="463:46"><name pos:start="463:32" pos:end="463:46"><name pos:start="463:32" pos:end="463:34">sps</name><operator pos:start="463:35" pos:end="463:36">-&gt;</operator><name pos:start="463:37" pos:end="463:46">crop_right</name></name></expr></argument>,

               <argument pos:start="465:16" pos:end="465:28"><expr pos:start="465:16" pos:end="465:28"><name pos:start="465:16" pos:end="465:28"><name pos:start="465:16" pos:end="465:18">sps</name><operator pos:start="465:19" pos:end="465:20">-&gt;</operator><name pos:start="465:21" pos:end="465:28">crop_top</name></name></expr></argument>, <argument pos:start="465:31" pos:end="465:46"><expr pos:start="465:31" pos:end="465:46"><name pos:start="465:31" pos:end="465:46"><name pos:start="465:31" pos:end="465:33">sps</name><operator pos:start="465:34" pos:end="465:35">-&gt;</operator><name pos:start="465:36" pos:end="465:46">crop_bottom</name></name></expr></argument>,

               <argument pos:start="467:16" pos:end="467:60"><expr pos:start="467:16" pos:end="467:60"><ternary pos:start="467:16" pos:end="467:60"><condition pos:start="467:16" pos:end="467:49"><expr pos:start="467:16" pos:end="467:47"><name pos:start="467:16" pos:end="467:47"><name pos:start="467:16" pos:end="467:18">sps</name><operator pos:start="467:19" pos:end="467:20">-&gt;</operator><name pos:start="467:21" pos:end="467:47">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="467:51" pos:end="467:55"> <expr pos:start="467:51" pos:end="467:55"><literal type="string" pos:start="467:51" pos:end="467:55">"VUI"</literal></expr> </then><else pos:start="467:57" pos:end="467:60">: <expr pos:start="467:59" pos:end="467:60"><literal type="string" pos:start="467:59" pos:end="467:60">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="469:16" pos:end="469:42"><expr pos:start="469:16" pos:end="469:42"><name pos:start="469:16" pos:end="469:42"><name pos:start="469:16" pos:end="469:18">csp</name><index pos:start="469:19" pos:end="469:42">[<expr pos:start="469:20" pos:end="469:41"><name pos:start="469:20" pos:end="469:41"><name pos:start="469:20" pos:end="469:22">sps</name><operator pos:start="469:23" pos:end="469:24">-&gt;</operator><name pos:start="469:25" pos:end="469:41">chroma_format_idc</name></name></expr>]</index></name></expr></argument>,

               <argument pos:start="471:16" pos:end="471:73"><expr pos:start="471:16" pos:end="471:73"><ternary pos:start="471:16" pos:end="471:73"><condition pos:start="471:16" pos:end="471:46"><expr pos:start="471:16" pos:end="471:44"><name pos:start="471:16" pos:end="471:44"><name pos:start="471:16" pos:end="471:18">sps</name><operator pos:start="471:19" pos:end="471:20">-&gt;</operator><name pos:start="471:21" pos:end="471:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="471:48" pos:end="471:69"> <expr pos:start="471:48" pos:end="471:69"><name pos:start="471:48" pos:end="471:69"><name pos:start="471:48" pos:end="471:50">sps</name><operator pos:start="471:51" pos:end="471:52">-&gt;</operator><name pos:start="471:53" pos:end="471:69">num_units_in_tick</name></name></expr> </then><else pos:start="471:71" pos:end="471:73">: <expr pos:start="471:73" pos:end="471:73"><literal type="number" pos:start="471:73" pos:end="471:73">0</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="473:16" pos:end="473:66"><expr pos:start="473:16" pos:end="473:66"><ternary pos:start="473:16" pos:end="473:66"><condition pos:start="473:16" pos:end="473:46"><expr pos:start="473:16" pos:end="473:44"><name pos:start="473:16" pos:end="473:44"><name pos:start="473:16" pos:end="473:18">sps</name><operator pos:start="473:19" pos:end="473:20">-&gt;</operator><name pos:start="473:21" pos:end="473:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="473:48" pos:end="473:62"> <expr pos:start="473:48" pos:end="473:62"><name pos:start="473:48" pos:end="473:62"><name pos:start="473:48" pos:end="473:50">sps</name><operator pos:start="473:51" pos:end="473:52">-&gt;</operator><name pos:start="473:53" pos:end="473:62">time_scale</name></name></expr> </then><else pos:start="473:64" pos:end="473:66">: <expr pos:start="473:66" pos:end="473:66"><literal type="number" pos:start="473:66" pos:end="473:66">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:17"><expr pos:start="477:5" pos:end="477:16"><name pos:start="477:5" pos:end="477:12"><name pos:start="477:5" pos:end="477:7">sps</name><operator pos:start="477:8" pos:end="477:9">-&gt;</operator><name pos:start="477:10" pos:end="477:12">new</name></name> <operator pos:start="477:14" pos:end="477:14">=</operator> <literal type="number" pos:start="477:16" pos:end="477:16">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="481:5" pos:end="481:36"><expr pos:start="481:5" pos:end="481:35"><call pos:start="481:5" pos:end="481:35"><name pos:start="481:5" pos:end="481:11">av_free</name><argument_list pos:start="481:12" pos:end="481:35">(<argument pos:start="481:13" pos:end="481:34"><expr pos:start="481:13" pos:end="481:34"><name pos:start="481:13" pos:end="481:34"><name pos:start="481:13" pos:end="481:13">h</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:26">sps_buffers</name><index pos:start="481:27" pos:end="481:34">[<expr pos:start="481:28" pos:end="481:33"><name pos:start="481:28" pos:end="481:33">sps_id</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="483:5" pos:end="483:33"><expr pos:start="483:5" pos:end="483:32"><name pos:start="483:5" pos:end="483:26"><name pos:start="483:5" pos:end="483:5">h</name><operator pos:start="483:6" pos:end="483:7">-&gt;</operator><name pos:start="483:8" pos:end="483:18">sps_buffers</name><index pos:start="483:19" pos:end="483:26">[<expr pos:start="483:20" pos:end="483:25"><name pos:start="483:20" pos:end="483:25">sps_id</name></expr>]</index></name> <operator pos:start="483:28" pos:end="483:28">=</operator> <name pos:start="483:30" pos:end="483:32">sps</name></expr>;</expr_stmt>

    <expr_stmt pos:start="485:5" pos:end="485:34"><expr pos:start="485:5" pos:end="485:33"><name pos:start="485:5" pos:end="485:10"><name pos:start="485:5" pos:end="485:5">h</name><operator pos:start="485:6" pos:end="485:7">-&gt;</operator><name pos:start="485:8" pos:end="485:10">sps</name></name>                 <operator pos:start="485:28" pos:end="485:28">=</operator> <operator pos:start="485:30" pos:end="485:30">*</operator><name pos:start="485:31" pos:end="485:33">sps</name></expr>;</expr_stmt>



    <return pos:start="489:5" pos:end="489:13">return <expr pos:start="489:12" pos:end="489:12"><literal type="number" pos:start="489:12" pos:end="489:12">0</literal></expr>;</return>



<label pos:start="493:1" pos:end="493:5"><name pos:start="493:1" pos:end="493:4">fail</name>:</label>

    <expr_stmt pos:start="495:5" pos:end="495:17"><expr pos:start="495:5" pos:end="495:16"><call pos:start="495:5" pos:end="495:16"><name pos:start="495:5" pos:end="495:11">av_free</name><argument_list pos:start="495:12" pos:end="495:16">(<argument pos:start="495:13" pos:end="495:15"><expr pos:start="495:13" pos:end="495:15"><name pos:start="495:13" pos:end="495:15">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="497:5" pos:end="497:31">return <expr pos:start="497:12" pos:end="497:30"><name pos:start="497:12" pos:end="497:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
