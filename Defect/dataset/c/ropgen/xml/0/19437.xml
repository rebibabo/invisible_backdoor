<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19437.c" pos:tabs="8"><function pos:start="1:1" pos:end="621:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">wma_decode_init</name><parameter_list pos:start="1:27" pos:end="1:50">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="621:1">{<block_content pos:start="5:5" pos:end="619:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">WMADecodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:17">flags1</name></decl>, <decl pos:start="7:20" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:25">flags2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:17">window</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">extradata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:14">bps1</name></decl>, <decl pos:start="13:17" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:9"/><name pos:start="13:17" pos:end="13:25">high_freq</name></decl>, <decl pos:start="13:28" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:9"/><name pos:start="13:28" pos:end="13:30">bps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">sample_rate1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">coef_vlc_table</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:18">sample_rate</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:39"><name pos:start="21:22" pos:end="21:26">avctx</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:39">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:18">nb_channels</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:36"><name pos:start="23:22" pos:end="23:26">avctx</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:36">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">bit_rate</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:33"><name pos:start="25:19" pos:end="25:23">avctx</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:18">block_align</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:39"><name pos:start="27:22" pos:end="27:26">avctx</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:39">block_align</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:42">(<expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:23">codec_id</name></name> <operator pos:start="31:25" pos:end="31:26">==</operator> <name pos:start="31:28" pos:end="31:41">CODEC_ID_WMAV1</name></expr>)</condition> <block pos:start="31:44" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:23">

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">version</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:23">

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">version</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    

    <comment type="block" pos:start="43:5" pos:end="43:28">/* extract flag infos */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:15"><expr pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:10">flags1</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:10">flags2</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:13">extradata</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:21">avctx</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:32">extradata</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:54">(<expr pos:start="51:9" pos:end="51:53"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">version</name></name> <operator pos:start="51:20" pos:end="51:21">==</operator> <literal type="number" pos:start="51:23" pos:end="51:23">1</literal> <operator pos:start="51:25" pos:end="51:26">&amp;&amp;</operator> <name pos:start="51:28" pos:end="51:48"><name pos:start="51:28" pos:end="51:32">avctx</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:48">extradata_size</name></name> <operator pos:start="51:50" pos:end="51:51">&gt;=</operator> <literal type="number" pos:start="51:53" pos:end="51:53">4</literal></expr>)</condition> <block pos:start="51:56" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:52">

        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:14">flags1</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:26">extradata</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr>]</index></name> <operator pos:start="53:31" pos:end="53:31">|</operator> <operator pos:start="53:33" pos:end="53:33">(</operator><name pos:start="53:34" pos:end="53:45"><name pos:start="53:34" pos:end="53:42">extradata</name><index pos:start="53:43" pos:end="53:45">[<expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">1</literal></expr>]</index></name> <operator pos:start="53:47" pos:end="53:48">&lt;&lt;</operator> <literal type="number" pos:start="53:50" pos:end="53:50">8</literal><operator pos:start="53:51" pos:end="53:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:14">flags2</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:29"><name pos:start="55:18" pos:end="55:26">extradata</name><index pos:start="55:27" pos:end="55:29">[<expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">2</literal></expr>]</index></name> <operator pos:start="55:31" pos:end="55:31">|</operator> <operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:45"><name pos:start="55:34" pos:end="55:42">extradata</name><index pos:start="55:43" pos:end="55:45">[<expr pos:start="55:44" pos:end="55:44"><literal type="number" pos:start="55:44" pos:end="55:44">3</literal></expr>]</index></name> <operator pos:start="55:47" pos:end="55:48">&lt;&lt;</operator> <literal type="number" pos:start="55:50" pos:end="55:50">8</literal><operator pos:start="55:51" pos:end="55:51">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="65:5">else if <condition pos:start="57:15" pos:end="57:61">(<expr pos:start="57:16" pos:end="57:60"><name pos:start="57:16" pos:end="57:25"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:25">version</name></name> <operator pos:start="57:27" pos:end="57:28">==</operator> <literal type="number" pos:start="57:30" pos:end="57:30">2</literal> <operator pos:start="57:32" pos:end="57:33">&amp;&amp;</operator> <name pos:start="57:35" pos:end="57:55"><name pos:start="57:35" pos:end="57:39">avctx</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:55">extradata_size</name></name> <operator pos:start="57:57" pos:end="57:58">&gt;=</operator> <literal type="number" pos:start="57:60" pos:end="57:60">6</literal></expr>)</condition> <block pos:start="57:63" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:52">

        <expr_stmt pos:start="59:9" pos:end="61:56"><expr pos:start="59:9" pos:end="61:55"><name pos:start="59:9" pos:end="59:14">flags1</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:29"><name pos:start="59:18" pos:end="59:26">extradata</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><literal type="number" pos:start="59:28" pos:end="59:28">0</literal></expr>]</index></name> <operator pos:start="59:31" pos:end="59:31">|</operator> <operator pos:start="59:33" pos:end="59:33">(</operator><name pos:start="59:34" pos:end="59:45"><name pos:start="59:34" pos:end="59:42">extradata</name><index pos:start="59:43" pos:end="59:45">[<expr pos:start="59:44" pos:end="59:44"><literal type="number" pos:start="59:44" pos:end="59:44">1</literal></expr>]</index></name> <operator pos:start="59:47" pos:end="59:48">&lt;&lt;</operator> <literal type="number" pos:start="59:50" pos:end="59:50">8</literal><operator pos:start="59:51" pos:end="59:51">)</operator> <operator pos:start="59:53" pos:end="59:53">|</operator> 

            <operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:25"><name pos:start="61:14" pos:end="61:22">extradata</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">2</literal></expr>]</index></name> <operator pos:start="61:27" pos:end="61:28">&lt;&lt;</operator> <literal type="number" pos:start="61:30" pos:end="61:31">16</literal><operator pos:start="61:32" pos:end="61:32">)</operator> <operator pos:start="61:34" pos:end="61:34">|</operator> <operator pos:start="61:36" pos:end="61:36">(</operator><name pos:start="61:37" pos:end="61:48"><name pos:start="61:37" pos:end="61:45">extradata</name><index pos:start="61:46" pos:end="61:48">[<expr pos:start="61:47" pos:end="61:47"><literal type="number" pos:start="61:47" pos:end="61:47">3</literal></expr>]</index></name> <operator pos:start="61:50" pos:end="61:51">&lt;&lt;</operator> <literal type="number" pos:start="61:53" pos:end="61:54">24</literal><operator pos:start="61:55" pos:end="61:55">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:14">flags2</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:26">extradata</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">4</literal></expr>]</index></name> <operator pos:start="63:31" pos:end="63:31">|</operator> <operator pos:start="63:33" pos:end="63:33">(</operator><name pos:start="63:34" pos:end="63:45"><name pos:start="63:34" pos:end="63:42">extradata</name><index pos:start="63:43" pos:end="63:45">[<expr pos:start="63:44" pos:end="63:44"><literal type="number" pos:start="63:44" pos:end="63:44">5</literal></expr>]</index></name> <operator pos:start="63:47" pos:end="63:48">&lt;&lt;</operator> <literal type="number" pos:start="63:50" pos:end="63:50">8</literal><operator pos:start="63:51" pos:end="63:51">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:18">use_exp_vlc</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:27">flags2</name> <operator pos:start="67:29" pos:end="67:29">&amp;</operator> <literal type="number" pos:start="67:31" pos:end="67:36">0x0001</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:24">use_bit_reservoir</name></name> <operator pos:start="69:26" pos:end="69:26">=</operator> <name pos:start="69:28" pos:end="69:33">flags2</name> <operator pos:start="69:35" pos:end="69:35">&amp;</operator> <literal type="number" pos:start="69:37" pos:end="69:42">0x0002</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:29">use_variable_block_len</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <name pos:start="71:33" pos:end="71:38">flags2</name> <operator pos:start="71:40" pos:end="71:40">&amp;</operator> <literal type="number" pos:start="71:42" pos:end="71:47">0x0004</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:33">/* compute MDCT block size */</comment>

    <if_stmt pos:start="77:5" pos:end="91:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:32">(<expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:22">sample_rate</name></name> <operator pos:start="77:24" pos:end="77:25">&lt;=</operator> <literal type="number" pos:start="77:27" pos:end="77:31">16000</literal></expr>)</condition> <block pos:start="77:34" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:30">

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:25">frame_len_bits</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <literal type="number" pos:start="79:29" pos:end="79:29">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="87:5">else if <condition pos:start="81:15" pos:end="83:60">(<expr pos:start="81:16" pos:end="83:59"><name pos:start="81:16" pos:end="81:29"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:29">sample_rate</name></name> <operator pos:start="81:31" pos:end="81:32">&lt;=</operator> <literal type="number" pos:start="81:34" pos:end="81:38">22050</literal> <operator pos:start="81:40" pos:end="81:41">||</operator> 

               <operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:30">sample_rate</name></name> <operator pos:start="83:32" pos:end="83:33">&lt;=</operator> <literal type="number" pos:start="83:35" pos:end="83:39">32000</literal> <operator pos:start="83:41" pos:end="83:42">&amp;&amp;</operator> <name pos:start="83:44" pos:end="83:53"><name pos:start="83:44" pos:end="83:44">s</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:53">version</name></name> <operator pos:start="83:55" pos:end="83:56">==</operator> <literal type="number" pos:start="83:58" pos:end="83:58">1</literal><operator pos:start="83:59" pos:end="83:59">)</operator></expr>)</condition> <block pos:start="83:62" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:31">

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:25">frame_len_bits</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <literal type="number" pos:start="85:29" pos:end="85:30">10</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="91:5">else <block pos:start="87:12" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:31">

        <expr_stmt pos:start="89:9" pos:end="89:31"><expr pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:25">frame_len_bits</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <literal type="number" pos:start="89:29" pos:end="89:30">11</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:42"><expr pos:start="93:5" pos:end="93:41"><name pos:start="93:5" pos:end="93:16"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:16">frame_len</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <literal type="number" pos:start="93:20" pos:end="93:20">1</literal> <operator pos:start="93:22" pos:end="93:23">&lt;&lt;</operator> <name pos:start="93:25" pos:end="93:41"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:41">frame_len_bits</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:34">(<expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:33">use_variable_block_len</name></name></expr>)</condition> <block pos:start="95:36" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:67">

        <expr_stmt pos:start="97:9" pos:end="97:67"><expr pos:start="97:9" pos:end="97:66"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:25">nb_block_sizes</name></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:45"><name pos:start="97:29" pos:end="97:29">s</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:45">frame_len_bits</name></name> <operator pos:start="97:47" pos:end="97:47">-</operator> <name pos:start="97:49" pos:end="97:62">BLOCK_MIN_BITS</name> <operator pos:start="97:64" pos:end="97:64">+</operator> <literal type="number" pos:start="97:66" pos:end="97:66">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="103:5">else <block pos:start="99:12" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:30">

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:25">nb_block_sizes</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:40">/* init rate dependant parameters */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:28"><expr pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:23">use_noise_coding</name></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <literal type="number" pos:start="109:27" pos:end="109:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:37"><expr pos:start="111:5" pos:end="111:36"><name pos:start="111:5" pos:end="111:13">high_freq</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:30"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:30">sample_rate</name></name> <operator pos:start="111:32" pos:end="111:32">*</operator> <literal type="number" pos:start="111:34" pos:end="111:36">0.5</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:53">/* if version 2, then the rates are normalized */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:16">sample_rate1</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:33"><name pos:start="117:20" pos:end="117:20">s</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:33">sample_rate</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="141:5"><if pos:start="119:5" pos:end="141:5">if <condition pos:start="119:8" pos:end="119:24">(<expr pos:start="119:9" pos:end="119:23"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:18">version</name></name> <operator pos:start="119:20" pos:end="119:21">==</operator> <literal type="number" pos:start="119:23" pos:end="119:23">2</literal></expr>)</condition> <block pos:start="119:26" pos:end="141:5">{<block_content pos:start="121:9" pos:end="139:32">

        <if_stmt pos:start="121:9" pos:end="139:32"><if pos:start="121:9" pos:end="123:33">if <condition pos:start="121:12" pos:end="121:34">(<expr pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:24">sample_rate1</name> <operator pos:start="121:26" pos:end="121:27">&gt;=</operator> <literal type="number" pos:start="121:29" pos:end="121:33">44100</literal></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:33"><block_content pos:start="123:13" pos:end="123:33"> 

            <expr_stmt pos:start="123:13" pos:end="123:33"><expr pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:24">sample_rate1</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <literal type="number" pos:start="123:28" pos:end="123:32">44100</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="125:9" pos:end="127:33">else if <condition pos:start="125:17" pos:end="125:39">(<expr pos:start="125:18" pos:end="125:38"><name pos:start="125:18" pos:end="125:29">sample_rate1</name> <operator pos:start="125:31" pos:end="125:32">&gt;=</operator> <literal type="number" pos:start="125:34" pos:end="125:38">22050</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:33"><block_content pos:start="127:13" pos:end="127:33"> 

            <expr_stmt pos:start="127:13" pos:end="127:33"><expr pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:24">sample_rate1</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <literal type="number" pos:start="127:28" pos:end="127:32">22050</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="129:9" pos:end="131:33">else if <condition pos:start="129:17" pos:end="129:39">(<expr pos:start="129:18" pos:end="129:38"><name pos:start="129:18" pos:end="129:29">sample_rate1</name> <operator pos:start="129:31" pos:end="129:32">&gt;=</operator> <literal type="number" pos:start="129:34" pos:end="129:38">16000</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:33"><block_content pos:start="131:13" pos:end="131:33"> 

            <expr_stmt pos:start="131:13" pos:end="131:33"><expr pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:24">sample_rate1</name> <operator pos:start="131:26" pos:end="131:26">=</operator> <literal type="number" pos:start="131:28" pos:end="131:32">16000</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="133:9" pos:end="135:33">else if <condition pos:start="133:17" pos:end="133:39">(<expr pos:start="133:18" pos:end="133:38"><name pos:start="133:18" pos:end="133:29">sample_rate1</name> <operator pos:start="133:31" pos:end="133:32">&gt;=</operator> <literal type="number" pos:start="133:34" pos:end="133:38">11025</literal></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:33"><block_content pos:start="135:13" pos:end="135:33"> 

            <expr_stmt pos:start="135:13" pos:end="135:33"><expr pos:start="135:13" pos:end="135:32"><name pos:start="135:13" pos:end="135:24">sample_rate1</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <literal type="number" pos:start="135:28" pos:end="135:32">11025</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="137:9" pos:end="139:32">else if <condition pos:start="137:17" pos:end="137:38">(<expr pos:start="137:18" pos:end="137:37"><name pos:start="137:18" pos:end="137:29">sample_rate1</name> <operator pos:start="137:31" pos:end="137:32">&gt;=</operator> <literal type="number" pos:start="137:34" pos:end="137:37">8000</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:32"><block_content pos:start="139:13" pos:end="139:32"> 

            <expr_stmt pos:start="139:13" pos:end="139:32"><expr pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:24">sample_rate1</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <literal type="number" pos:start="139:28" pos:end="139:31">8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:72"><expr pos:start="145:5" pos:end="145:71"><name pos:start="145:5" pos:end="145:7">bps</name> <operator pos:start="145:9" pos:end="145:9">=</operator> <operator pos:start="145:11" pos:end="145:11">(</operator><name pos:start="145:12" pos:end="145:16">float</name><operator pos:start="145:17" pos:end="145:17">)</operator><name pos:start="145:18" pos:end="145:28"><name pos:start="145:18" pos:end="145:18">s</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:28">bit_rate</name></name> <operator pos:start="145:30" pos:end="145:30">/</operator> <operator pos:start="145:32" pos:end="145:32">(</operator><name pos:start="145:33" pos:end="145:37">float</name><operator pos:start="145:38" pos:end="145:38">)</operator><operator pos:start="145:39" pos:end="145:39">(</operator><name pos:start="145:40" pos:end="145:53"><name pos:start="145:40" pos:end="145:40">s</name><operator pos:start="145:41" pos:end="145:42">-&gt;</operator><name pos:start="145:43" pos:end="145:53">nb_channels</name></name> <operator pos:start="145:55" pos:end="145:55">*</operator> <name pos:start="145:57" pos:end="145:70"><name pos:start="145:57" pos:end="145:57">s</name><operator pos:start="145:58" pos:end="145:59">-&gt;</operator><name pos:start="145:60" pos:end="145:70">sample_rate</name></name><operator pos:start="145:71" pos:end="145:71">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:71"><expr pos:start="147:5" pos:end="147:70"><name pos:start="147:5" pos:end="147:23"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:23">byte_offset_bits</name></name> <operator pos:start="147:25" pos:end="147:25">=</operator> <call pos:start="147:27" pos:end="147:66"><name pos:start="147:27" pos:end="147:33">av_log2</name><argument_list pos:start="147:34" pos:end="147:66">(<argument pos:start="147:35" pos:end="147:65"><expr pos:start="147:35" pos:end="147:65"><operator pos:start="147:35" pos:end="147:35">(</operator><name pos:start="147:36" pos:end="147:38">int</name><operator pos:start="147:39" pos:end="147:39">)</operator><operator pos:start="147:40" pos:end="147:40">(</operator><name pos:start="147:41" pos:end="147:43">bps</name> <operator pos:start="147:45" pos:end="147:45">*</operator> <name pos:start="147:47" pos:end="147:58"><name pos:start="147:47" pos:end="147:47">s</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:58">frame_len</name></name> <operator pos:start="147:60" pos:end="147:60">/</operator> <literal type="number" pos:start="147:62" pos:end="147:64">8.0</literal><operator pos:start="147:65" pos:end="147:65">)</operator></expr></argument>)</argument_list></call> <operator pos:start="147:68" pos:end="147:68">+</operator> <literal type="number" pos:start="147:70" pos:end="147:70">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="151:5" pos:end="153:22">/* compute high frequency value and choose if noise coding should

       be activated */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:15"><expr pos:start="155:5" pos:end="155:14"><name pos:start="155:5" pos:end="155:8">bps1</name> <operator pos:start="155:10" pos:end="155:10">=</operator> <name pos:start="155:12" pos:end="155:14">bps</name></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="159:25"><if pos:start="157:5" pos:end="159:25">if <condition pos:start="157:8" pos:end="157:28">(<expr pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:22"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:22">nb_channels</name></name> <operator pos:start="157:24" pos:end="157:25">==</operator> <literal type="number" pos:start="157:27" pos:end="157:27">2</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:25"><block_content pos:start="159:9" pos:end="159:25">

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:12">bps1</name> <operator pos:start="159:14" pos:end="159:14">=</operator> <name pos:start="159:16" pos:end="159:18">bps</name> <operator pos:start="159:20" pos:end="159:20">*</operator> <literal type="number" pos:start="159:22" pos:end="159:24">1.6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="234:0"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="161:30">(<expr pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:20">sample_rate1</name> <operator pos:start="161:22" pos:end="161:23">==</operator> <literal type="number" pos:start="161:25" pos:end="161:29">44100</literal></expr>)</condition> <block pos:start="161:32" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:40">

        <if_stmt pos:start="163:9" pos:end="169:40"><if pos:start="163:9" pos:end="165:36">if <condition pos:start="163:12" pos:end="163:25">(<expr pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:16">bps1</name> <operator pos:start="163:18" pos:end="163:19">&gt;=</operator> <literal type="number" pos:start="163:21" pos:end="163:24">0.61</literal></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:36"><block_content pos:start="165:13" pos:end="165:36">

            <expr_stmt pos:start="165:13" pos:end="165:36"><expr pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:31"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:31">use_noise_coding</name></name> <operator pos:start="165:33" pos:end="165:33">=</operator> <literal type="number" pos:start="165:35" pos:end="165:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="167:9" pos:end="169:40">else<block type="pseudo" pos:start="169:13" pos:end="169:40"><block_content pos:start="169:13" pos:end="169:40">

            <expr_stmt pos:start="169:13" pos:end="169:40"><expr pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:21">high_freq</name> <operator pos:start="169:23" pos:end="169:23">=</operator> <name pos:start="169:25" pos:end="169:33">high_freq</name> <operator pos:start="169:35" pos:end="169:35">*</operator> <literal type="number" pos:start="169:37" pos:end="169:39">0.4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="171:7" pos:end="185:5">else if <condition pos:start="171:15" pos:end="171:37">(<expr pos:start="171:16" pos:end="171:36"><name pos:start="171:16" pos:end="171:27">sample_rate1</name> <operator pos:start="171:29" pos:end="171:30">==</operator> <literal type="number" pos:start="171:32" pos:end="171:36">22050</literal></expr>)</condition> <block pos:start="171:39" pos:end="185:5">{<block_content pos:start="173:9" pos:end="183:40">

        <if_stmt pos:start="173:9" pos:end="183:40"><if pos:start="173:9" pos:end="175:36">if <condition pos:start="173:12" pos:end="173:25">(<expr pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:16">bps1</name> <operator pos:start="173:18" pos:end="173:19">&gt;=</operator> <literal type="number" pos:start="173:21" pos:end="173:24">1.16</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:36"><block_content pos:start="175:13" pos:end="175:36">

            <expr_stmt pos:start="175:13" pos:end="175:36"><expr pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:31"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:31">use_noise_coding</name></name> <operator pos:start="175:33" pos:end="175:33">=</operator> <literal type="number" pos:start="175:35" pos:end="175:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="177:9" pos:end="179:40">else if <condition pos:start="177:17" pos:end="177:30">(<expr pos:start="177:18" pos:end="177:29"><name pos:start="177:18" pos:end="177:21">bps1</name> <operator pos:start="177:23" pos:end="177:24">&gt;=</operator> <literal type="number" pos:start="177:26" pos:end="177:29">0.72</literal></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:40"><block_content pos:start="179:13" pos:end="179:40"> 

            <expr_stmt pos:start="179:13" pos:end="179:40"><expr pos:start="179:13" pos:end="179:39"><name pos:start="179:13" pos:end="179:21">high_freq</name> <operator pos:start="179:23" pos:end="179:23">=</operator> <name pos:start="179:25" pos:end="179:33">high_freq</name> <operator pos:start="179:35" pos:end="179:35">*</operator> <literal type="number" pos:start="179:37" pos:end="179:39">0.7</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="181:9" pos:end="183:40">else<block type="pseudo" pos:start="183:13" pos:end="183:40"><block_content pos:start="183:13" pos:end="183:40">

            <expr_stmt pos:start="183:13" pos:end="183:40"><expr pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:21">high_freq</name> <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:33">high_freq</name> <operator pos:start="183:35" pos:end="183:35">*</operator> <literal type="number" pos:start="183:37" pos:end="183:39">0.6</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="185:7" pos:end="195:5">else if <condition pos:start="185:15" pos:end="185:37">(<expr pos:start="185:16" pos:end="185:36"><name pos:start="185:16" pos:end="185:27">sample_rate1</name> <operator pos:start="185:29" pos:end="185:30">==</operator> <literal type="number" pos:start="185:32" pos:end="185:36">16000</literal></expr>)</condition> <block pos:start="185:39" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:40">

        <if_stmt pos:start="187:9" pos:end="193:40"><if pos:start="187:9" pos:end="189:40">if <condition pos:start="187:12" pos:end="187:22">(<expr pos:start="187:13" pos:end="187:21"><name pos:start="187:13" pos:end="187:15">bps</name> <operator pos:start="187:17" pos:end="187:17">&gt;</operator> <literal type="number" pos:start="187:19" pos:end="187:21">0.5</literal></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="189:40"><block_content pos:start="189:13" pos:end="189:40">

            <expr_stmt pos:start="189:13" pos:end="189:40"><expr pos:start="189:13" pos:end="189:39"><name pos:start="189:13" pos:end="189:21">high_freq</name> <operator pos:start="189:23" pos:end="189:23">=</operator> <name pos:start="189:25" pos:end="189:33">high_freq</name> <operator pos:start="189:35" pos:end="189:35">*</operator> <literal type="number" pos:start="189:37" pos:end="189:39">0.5</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="191:9" pos:end="193:40">else<block type="pseudo" pos:start="193:13" pos:end="193:40"><block_content pos:start="193:13" pos:end="193:40">

            <expr_stmt pos:start="193:13" pos:end="193:40"><expr pos:start="193:13" pos:end="193:39"><name pos:start="193:13" pos:end="193:21">high_freq</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:33">high_freq</name> <operator pos:start="193:35" pos:end="193:35">*</operator> <literal type="number" pos:start="193:37" pos:end="193:39">0.3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="195:7" pos:end="199:5">else if <condition pos:start="195:15" pos:end="195:37">(<expr pos:start="195:16" pos:end="195:36"><name pos:start="195:16" pos:end="195:27">sample_rate1</name> <operator pos:start="195:29" pos:end="195:30">==</operator> <literal type="number" pos:start="195:32" pos:end="195:36">11025</literal></expr>)</condition> <block pos:start="195:39" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:36">

        <expr_stmt pos:start="197:9" pos:end="197:36"><expr pos:start="197:9" pos:end="197:35"><name pos:start="197:9" pos:end="197:17">high_freq</name> <operator pos:start="197:19" pos:end="197:19">=</operator> <name pos:start="197:21" pos:end="197:29">high_freq</name> <operator pos:start="197:31" pos:end="197:31">*</operator> <literal type="number" pos:start="197:33" pos:end="197:35">0.7</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="199:7" pos:end="215:5">else if <condition pos:start="199:15" pos:end="199:36">(<expr pos:start="199:16" pos:end="199:35"><name pos:start="199:16" pos:end="199:27">sample_rate1</name> <operator pos:start="199:29" pos:end="199:30">==</operator> <literal type="number" pos:start="199:32" pos:end="199:35">8000</literal></expr>)</condition> <block pos:start="199:38" pos:end="215:5">{<block_content pos:start="201:9" pos:end="213:9">

        <if_stmt pos:start="201:9" pos:end="213:9"><if pos:start="201:9" pos:end="205:9">if <condition pos:start="201:12" pos:end="201:25">(<expr pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:15">bps</name> <operator pos:start="201:17" pos:end="201:18">&lt;=</operator> <literal type="number" pos:start="201:20" pos:end="201:24">0.625</literal></expr>)</condition> <block pos:start="201:27" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:40">

            <expr_stmt pos:start="203:13" pos:end="203:40"><expr pos:start="203:13" pos:end="203:39"><name pos:start="203:13" pos:end="203:21">high_freq</name> <operator pos:start="203:23" pos:end="203:23">=</operator> <name pos:start="203:25" pos:end="203:33">high_freq</name> <operator pos:start="203:35" pos:end="203:35">*</operator> <literal type="number" pos:start="203:37" pos:end="203:39">0.5</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="205:11" pos:end="209:9">else if <condition pos:start="205:19" pos:end="205:30">(<expr pos:start="205:20" pos:end="205:29"><name pos:start="205:20" pos:end="205:22">bps</name> <operator pos:start="205:24" pos:end="205:24">&gt;</operator> <literal type="number" pos:start="205:26" pos:end="205:29">0.75</literal></expr>)</condition> <block pos:start="205:32" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:36">

            <expr_stmt pos:start="207:13" pos:end="207:36"><expr pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:31">use_noise_coding</name></name> <operator pos:start="207:33" pos:end="207:33">=</operator> <literal type="number" pos:start="207:35" pos:end="207:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="213:9">else <block pos:start="209:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:41">

            <expr_stmt pos:start="211:13" pos:end="211:41"><expr pos:start="211:13" pos:end="211:40"><name pos:start="211:13" pos:end="211:21">high_freq</name> <operator pos:start="211:23" pos:end="211:23">=</operator> <name pos:start="211:25" pos:end="211:33">high_freq</name> <operator pos:start="211:35" pos:end="211:35">*</operator> <literal type="number" pos:start="211:37" pos:end="211:40">0.65</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="215:7" pos:end="234:0">else <block pos:start="215:12" pos:end="234:0">{<block_content pos:start="217:9" pos:end="229:9">

        <if_stmt pos:start="217:9" pos:end="229:9"><if pos:start="217:9" pos:end="221:9">if <condition pos:start="217:12" pos:end="217:23">(<expr pos:start="217:13" pos:end="217:22"><name pos:start="217:13" pos:end="217:15">bps</name> <operator pos:start="217:17" pos:end="217:18">&gt;=</operator> <literal type="number" pos:start="217:20" pos:end="217:22">0.8</literal></expr>)</condition> <block pos:start="217:25" pos:end="221:9">{<block_content pos:start="219:13" pos:end="219:41">

            <expr_stmt pos:start="219:13" pos:end="219:41"><expr pos:start="219:13" pos:end="219:40"><name pos:start="219:13" pos:end="219:21">high_freq</name> <operator pos:start="219:23" pos:end="219:23">=</operator> <name pos:start="219:25" pos:end="219:33">high_freq</name> <operator pos:start="219:35" pos:end="219:35">*</operator> <literal type="number" pos:start="219:37" pos:end="219:40">0.75</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="221:11" pos:end="225:9">else if <condition pos:start="221:19" pos:end="221:30">(<expr pos:start="221:20" pos:end="221:29"><name pos:start="221:20" pos:end="221:22">bps</name> <operator pos:start="221:24" pos:end="221:25">&gt;=</operator> <literal type="number" pos:start="221:27" pos:end="221:29">0.6</literal></expr>)</condition> <block pos:start="221:32" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:40">

            <expr_stmt pos:start="223:13" pos:end="223:40"><expr pos:start="223:13" pos:end="223:39"><name pos:start="223:13" pos:end="223:21">high_freq</name> <operator pos:start="223:23" pos:end="223:23">=</operator> <name pos:start="223:25" pos:end="223:33">high_freq</name> <operator pos:start="223:35" pos:end="223:35">*</operator> <literal type="number" pos:start="223:37" pos:end="223:39">0.6</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="225:11" pos:end="229:9">else <block pos:start="225:16" pos:end="229:9">{<block_content pos:start="227:13" pos:end="227:40">

            <expr_stmt pos:start="227:13" pos:end="227:40"><expr pos:start="227:13" pos:end="227:39"><name pos:start="227:13" pos:end="227:21">high_freq</name> <operator pos:start="227:23" pos:end="227:23">=</operator> <name pos:start="227:25" pos:end="227:33">high_freq</name> <operator pos:start="227:35" pos:end="227:35">*</operator> <literal type="number" pos:start="227:37" pos:end="227:39">0.5</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="233:1" pos:end="233:19">#<cpp:directive pos:start="233:2" pos:end="233:6">ifdef</cpp:directive> <name pos:start="233:8" pos:end="233:19">DEBUG_PARAMS</name></cpp:ifdef>

    <expr_stmt pos:start="235:5" pos:end="235:56"><expr pos:start="235:5" pos:end="235:55"><call pos:start="235:5" pos:end="235:55"><name pos:start="235:5" pos:end="235:10">printf</name><argument_list pos:start="235:11" pos:end="235:55">(<argument pos:start="235:12" pos:end="235:38"><expr pos:start="235:12" pos:end="235:38"><literal type="string" pos:start="235:12" pos:end="235:38">"flags1=0x%x flags2=0x%x\n"</literal></expr></argument>, <argument pos:start="235:41" pos:end="235:46"><expr pos:start="235:41" pos:end="235:46"><name pos:start="235:41" pos:end="235:46">flags1</name></expr></argument>, <argument pos:start="235:49" pos:end="235:54"><expr pos:start="235:49" pos:end="235:54"><name pos:start="235:49" pos:end="235:54">flags2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="241:27"><expr pos:start="237:5" pos:end="241:26"><call pos:start="237:5" pos:end="241:26"><name pos:start="237:5" pos:end="237:10">printf</name><argument_list pos:start="237:11" pos:end="241:26">(<argument pos:start="237:12" pos:end="237:78"><expr pos:start="237:12" pos:end="237:78"><literal type="string" pos:start="237:12" pos:end="237:78">"version=%d channels=%d sample_rate=%d bitrate=%d block_align=%d\n"</literal></expr></argument>,

           <argument pos:start="239:12" pos:end="239:21"><expr pos:start="239:12" pos:end="239:21"><name pos:start="239:12" pos:end="239:21"><name pos:start="239:12" pos:end="239:12">s</name><operator pos:start="239:13" pos:end="239:14">-&gt;</operator><name pos:start="239:15" pos:end="239:21">version</name></name></expr></argument>, <argument pos:start="239:24" pos:end="239:37"><expr pos:start="239:24" pos:end="239:37"><name pos:start="239:24" pos:end="239:37"><name pos:start="239:24" pos:end="239:24">s</name><operator pos:start="239:25" pos:end="239:26">-&gt;</operator><name pos:start="239:27" pos:end="239:37">nb_channels</name></name></expr></argument>, <argument pos:start="239:40" pos:end="239:53"><expr pos:start="239:40" pos:end="239:53"><name pos:start="239:40" pos:end="239:53"><name pos:start="239:40" pos:end="239:40">s</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:53">sample_rate</name></name></expr></argument>, <argument pos:start="239:56" pos:end="239:66"><expr pos:start="239:56" pos:end="239:66"><name pos:start="239:56" pos:end="239:66"><name pos:start="239:56" pos:end="239:56">s</name><operator pos:start="239:57" pos:end="239:58">-&gt;</operator><name pos:start="239:59" pos:end="239:66">bit_rate</name></name></expr></argument>, 

           <argument pos:start="241:12" pos:end="241:25"><expr pos:start="241:12" pos:end="241:25"><name pos:start="241:12" pos:end="241:25"><name pos:start="241:12" pos:end="241:12">s</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:25">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="245:54"><expr pos:start="243:5" pos:end="245:53"><call pos:start="243:5" pos:end="245:53"><name pos:start="243:5" pos:end="243:10">printf</name><argument_list pos:start="243:11" pos:end="245:53">(<argument pos:start="243:12" pos:end="243:55"><expr pos:start="243:12" pos:end="243:55"><literal type="string" pos:start="243:12" pos:end="243:55">"bps=%f bps1=%f high_freq=%f bitoffset=%d\n"</literal></expr></argument>, 

           <argument pos:start="245:12" pos:end="245:14"><expr pos:start="245:12" pos:end="245:14"><name pos:start="245:12" pos:end="245:14">bps</name></expr></argument>, <argument pos:start="245:17" pos:end="245:20"><expr pos:start="245:17" pos:end="245:20"><name pos:start="245:17" pos:end="245:20">bps1</name></expr></argument>, <argument pos:start="245:23" pos:end="245:31"><expr pos:start="245:23" pos:end="245:31"><name pos:start="245:23" pos:end="245:31">high_freq</name></expr></argument>, <argument pos:start="245:34" pos:end="245:52"><expr pos:start="245:34" pos:end="245:52"><name pos:start="245:34" pos:end="245:52"><name pos:start="245:34" pos:end="245:34">s</name><operator pos:start="245:35" pos:end="245:36">-&gt;</operator><name pos:start="245:37" pos:end="245:52">byte_offset_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="252:0"><expr pos:start="247:5" pos:end="249:47"><call pos:start="247:5" pos:end="249:47"><name pos:start="247:5" pos:end="247:10">printf</name><argument_list pos:start="247:11" pos:end="249:47">(<argument pos:start="247:12" pos:end="247:49"><expr pos:start="247:12" pos:end="247:49"><literal type="string" pos:start="247:12" pos:end="247:49">"use_noise_coding=%d use_exp_vlc=%d\n"</literal></expr></argument>,

           <argument pos:start="249:12" pos:end="249:30"><expr pos:start="249:12" pos:end="249:30"><name pos:start="249:12" pos:end="249:30"><name pos:start="249:12" pos:end="249:12">s</name><operator pos:start="249:13" pos:end="249:14">-&gt;</operator><name pos:start="249:15" pos:end="249:30">use_noise_coding</name></name></expr></argument>, <argument pos:start="249:33" pos:end="249:46"><expr pos:start="249:33" pos:end="249:46"><name pos:start="249:33" pos:end="249:46"><name pos:start="249:33" pos:end="249:33">s</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:46">use_exp_vlc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="251:1" pos:end="251:6">#<cpp:directive pos:start="251:2" pos:end="251:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="255:5" pos:end="255:70">/* compute the scale factor band sizes for each MDCT block size */</comment>

    <block pos:start="257:5" pos:end="456:0">{<block_content pos:start="259:9" pos:end="449:9">

        <decl_stmt pos:start="259:9" pos:end="259:51"><decl pos:start="259:9" pos:end="259:13"><type pos:start="259:9" pos:end="259:11"><name pos:start="259:9" pos:end="259:11">int</name></type> <name pos:start="259:13" pos:end="259:13">a</name></decl>, <decl pos:start="259:16" pos:end="259:16"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:16" pos:end="259:16">b</name></decl>, <decl pos:start="259:19" pos:end="259:21"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:19" pos:end="259:21">pos</name></decl>, <decl pos:start="259:24" pos:end="259:27"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:24" pos:end="259:27">lpos</name></decl>, <decl pos:start="259:30" pos:end="259:30"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:30" pos:end="259:30">k</name></decl>, <decl pos:start="259:33" pos:end="259:41"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:33" pos:end="259:41">block_len</name></decl>, <decl pos:start="259:44" pos:end="259:44"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:44" pos:end="259:44">i</name></decl>, <decl pos:start="259:47" pos:end="259:47"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:47" pos:end="259:47">j</name></decl>, <decl pos:start="259:50" pos:end="259:50"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:50" pos:end="259:50">n</name></decl>;</decl_stmt>

        <decl_stmt pos:start="261:9" pos:end="261:29"><decl pos:start="261:9" pos:end="261:28"><type pos:start="261:9" pos:end="261:23"><specifier pos:start="261:9" pos:end="261:13">const</specifier> <name pos:start="261:15" pos:end="261:21">uint8_t</name> <modifier pos:start="261:23" pos:end="261:23">*</modifier></type><name pos:start="261:24" pos:end="261:28">table</name></decl>;</decl_stmt>

        

        <if_stmt pos:start="265:9" pos:end="273:9"><if pos:start="265:9" pos:end="269:9">if <condition pos:start="265:12" pos:end="265:28">(<expr pos:start="265:13" pos:end="265:27"><name pos:start="265:13" pos:end="265:22"><name pos:start="265:13" pos:end="265:13">s</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:22">version</name></name> <operator pos:start="265:24" pos:end="265:25">==</operator> <literal type="number" pos:start="265:27" pos:end="265:27">1</literal></expr>)</condition> <block pos:start="265:30" pos:end="269:9">{<block_content pos:start="267:13" pos:end="267:31">

            <expr_stmt pos:start="267:13" pos:end="267:31"><expr pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:26"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:26">coefs_start</name></name> <operator pos:start="267:28" pos:end="267:28">=</operator> <literal type="number" pos:start="267:30" pos:end="267:30">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="269:11" pos:end="273:9">else <block pos:start="269:16" pos:end="273:9">{<block_content pos:start="271:13" pos:end="271:31">

            <expr_stmt pos:start="271:13" pos:end="271:31"><expr pos:start="271:13" pos:end="271:30"><name pos:start="271:13" pos:end="271:26"><name pos:start="271:13" pos:end="271:13">s</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:26">coefs_start</name></name> <operator pos:start="271:28" pos:end="271:28">=</operator> <literal type="number" pos:start="271:30" pos:end="271:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="275:9" pos:end="449:9">for<control pos:start="275:12" pos:end="275:46">(<init pos:start="275:13" pos:end="275:18"><expr pos:start="275:13" pos:end="275:17"><name pos:start="275:13" pos:end="275:13">k</name> <operator pos:start="275:15" pos:end="275:15">=</operator> <literal type="number" pos:start="275:17" pos:end="275:17">0</literal></expr>;</init> <condition pos:start="275:20" pos:end="275:41"><expr pos:start="275:20" pos:end="275:40"><name pos:start="275:20" pos:end="275:20">k</name> <operator pos:start="275:22" pos:end="275:22">&lt;</operator> <name pos:start="275:24" pos:end="275:40"><name pos:start="275:24" pos:end="275:24">s</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:40">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="275:43" pos:end="275:45"><expr pos:start="275:43" pos:end="275:45"><name pos:start="275:43" pos:end="275:43">k</name><operator pos:start="275:44" pos:end="275:45">++</operator></expr></incr>)</control> <block pos:start="275:48" pos:end="449:9">{<block_content pos:start="277:13" pos:end="448:0">

            <expr_stmt pos:start="277:13" pos:end="277:42"><expr pos:start="277:13" pos:end="277:41"><name pos:start="277:13" pos:end="277:21">block_len</name> <operator pos:start="277:23" pos:end="277:23">=</operator> <name pos:start="277:25" pos:end="277:36"><name pos:start="277:25" pos:end="277:25">s</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:36">frame_len</name></name> <operator pos:start="277:38" pos:end="277:39">&gt;&gt;</operator> <name pos:start="277:41" pos:end="277:41">k</name></expr>;</expr_stmt>



            <if_stmt pos:start="281:13" pos:end="383:13"><if pos:start="281:13" pos:end="313:13">if <condition pos:start="281:16" pos:end="281:32">(<expr pos:start="281:17" pos:end="281:31"><name pos:start="281:17" pos:end="281:26"><name pos:start="281:17" pos:end="281:17">s</name><operator pos:start="281:18" pos:end="281:19">-&gt;</operator><name pos:start="281:20" pos:end="281:26">version</name></name> <operator pos:start="281:28" pos:end="281:29">==</operator> <literal type="number" pos:start="281:31" pos:end="281:31">1</literal></expr>)</condition> <block pos:start="281:34" pos:end="313:13">{<block_content pos:start="283:17" pos:end="311:41">

                <expr_stmt pos:start="283:17" pos:end="283:25"><expr pos:start="283:17" pos:end="283:24"><name pos:start="283:17" pos:end="283:20">lpos</name> <operator pos:start="283:22" pos:end="283:22">=</operator> <literal type="number" pos:start="283:24" pos:end="283:24">0</literal></expr>;</expr_stmt>

                <for pos:start="285:17" pos:end="309:17">for<control pos:start="285:20" pos:end="285:33">(<init pos:start="285:21" pos:end="285:24"><expr pos:start="285:21" pos:end="285:23"><name pos:start="285:21" pos:end="285:21">i</name><operator pos:start="285:22" pos:end="285:22">=</operator><literal type="number" pos:start="285:23" pos:end="285:23">0</literal></expr>;</init><condition pos:start="285:25" pos:end="285:29"><expr pos:start="285:25" pos:end="285:28"><name pos:start="285:25" pos:end="285:25">i</name><operator pos:start="285:26" pos:end="285:26">&lt;</operator><literal type="number" pos:start="285:27" pos:end="285:28">25</literal></expr>;</condition><incr pos:start="285:30" pos:end="285:32"><expr pos:start="285:30" pos:end="285:32"><name pos:start="285:30" pos:end="285:30">i</name><operator pos:start="285:31" pos:end="285:32">++</operator></expr></incr>)</control> <block pos:start="285:35" pos:end="309:17">{<block_content pos:start="287:21" pos:end="307:31">

                    <expr_stmt pos:start="287:21" pos:end="287:46"><expr pos:start="287:21" pos:end="287:45"><name pos:start="287:21" pos:end="287:21">a</name> <operator pos:start="287:23" pos:end="287:23">=</operator> <name pos:start="287:25" pos:end="287:45"><name pos:start="287:25" pos:end="287:42">wma_critical_freqs</name><index pos:start="287:43" pos:end="287:45">[<expr pos:start="287:44" pos:end="287:44"><name pos:start="287:44" pos:end="287:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:39"><expr pos:start="289:21" pos:end="289:38"><name pos:start="289:21" pos:end="289:21">b</name> <operator pos:start="289:23" pos:end="289:23">=</operator> <name pos:start="289:25" pos:end="289:38"><name pos:start="289:25" pos:end="289:25">s</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:38">sample_rate</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="291:21" pos:end="291:64"><expr pos:start="291:21" pos:end="291:63"><name pos:start="291:21" pos:end="291:23">pos</name> <operator pos:start="291:25" pos:end="291:25">=</operator> <operator pos:start="291:27" pos:end="291:27">(</operator><operator pos:start="291:28" pos:end="291:28">(</operator><name pos:start="291:29" pos:end="291:37">block_len</name> <operator pos:start="291:39" pos:end="291:39">*</operator> <literal type="number" pos:start="291:41" pos:end="291:41">2</literal> <operator pos:start="291:43" pos:end="291:43">*</operator> <name pos:start="291:45" pos:end="291:45">a</name><operator pos:start="291:46" pos:end="291:46">)</operator>  <operator pos:start="291:49" pos:end="291:49">+</operator> <operator pos:start="291:51" pos:end="291:51">(</operator><name pos:start="291:52" pos:end="291:52">b</name> <operator pos:start="291:54" pos:end="291:55">&gt;&gt;</operator> <literal type="number" pos:start="291:57" pos:end="291:57">1</literal><operator pos:start="291:58" pos:end="291:58">)</operator><operator pos:start="291:59" pos:end="291:59">)</operator> <operator pos:start="291:61" pos:end="291:61">/</operator> <name pos:start="291:63" pos:end="291:63">b</name></expr>;</expr_stmt>

                    <if_stmt pos:start="293:21" pos:end="295:40"><if pos:start="293:21" pos:end="295:40">if <condition pos:start="293:24" pos:end="293:40">(<expr pos:start="293:25" pos:end="293:39"><name pos:start="293:25" pos:end="293:27">pos</name> <operator pos:start="293:29" pos:end="293:29">&gt;</operator> <name pos:start="293:31" pos:end="293:39">block_len</name></expr>)</condition><block type="pseudo" pos:start="295:25" pos:end="295:40"><block_content pos:start="295:25" pos:end="295:40"> 

                        <expr_stmt pos:start="295:25" pos:end="295:40"><expr pos:start="295:25" pos:end="295:39"><name pos:start="295:25" pos:end="295:27">pos</name> <operator pos:start="295:29" pos:end="295:29">=</operator> <name pos:start="295:31" pos:end="295:39">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:57"><expr pos:start="297:21" pos:end="297:56"><name pos:start="297:21" pos:end="297:43"><name pos:start="297:21" pos:end="297:21">s</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:37">exponent_bands</name><index pos:start="297:38" pos:end="297:40">[<expr pos:start="297:39" pos:end="297:39"><literal type="number" pos:start="297:39" pos:end="297:39">0</literal></expr>]</index><index pos:start="297:41" pos:end="297:43">[<expr pos:start="297:42" pos:end="297:42"><name pos:start="297:42" pos:end="297:42">i</name></expr>]</index></name> <operator pos:start="297:45" pos:end="297:45">=</operator> <name pos:start="297:47" pos:end="297:49">pos</name> <operator pos:start="297:51" pos:end="297:51">-</operator> <name pos:start="297:53" pos:end="297:56">lpos</name></expr>;</expr_stmt>

                    <if_stmt pos:start="299:21" pos:end="305:21"><if pos:start="299:21" pos:end="305:21">if <condition pos:start="299:24" pos:end="299:41">(<expr pos:start="299:25" pos:end="299:40"><name pos:start="299:25" pos:end="299:27">pos</name> <operator pos:start="299:29" pos:end="299:30">&gt;=</operator> <name pos:start="299:32" pos:end="299:40">block_len</name></expr>)</condition> <block pos:start="299:43" pos:end="305:21">{<block_content pos:start="301:25" pos:end="303:30">

                        <expr_stmt pos:start="301:25" pos:end="301:28"><expr pos:start="301:25" pos:end="301:27"><name pos:start="301:25" pos:end="301:25">i</name><operator pos:start="301:26" pos:end="301:27">++</operator></expr>;</expr_stmt>

                        <break pos:start="303:25" pos:end="303:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:31"><expr pos:start="307:21" pos:end="307:30"><name pos:start="307:21" pos:end="307:24">lpos</name> <operator pos:start="307:26" pos:end="307:26">=</operator> <name pos:start="307:28" pos:end="307:30">pos</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="311:17" pos:end="311:41"><expr pos:start="311:17" pos:end="311:40"><name pos:start="311:17" pos:end="311:36"><name pos:start="311:17" pos:end="311:17">s</name><operator pos:start="311:18" pos:end="311:19">-&gt;</operator><name pos:start="311:20" pos:end="311:33">exponent_sizes</name><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><literal type="number" pos:start="311:35" pos:end="311:35">0</literal></expr>]</index></name> <operator pos:start="311:38" pos:end="311:38">=</operator> <name pos:start="311:40" pos:end="311:40">i</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="313:15" pos:end="383:13">else <block pos:start="313:20" pos:end="383:13">{<block_content pos:start="317:17" pos:end="381:17">

                <comment type="block" pos:start="315:17" pos:end="315:38">/* hardcoded tables */</comment>

                <expr_stmt pos:start="317:17" pos:end="317:29"><expr pos:start="317:17" pos:end="317:28"><name pos:start="317:17" pos:end="317:21">table</name> <operator pos:start="317:23" pos:end="317:23">=</operator> <name pos:start="317:25" pos:end="317:28">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:59"><expr pos:start="319:17" pos:end="319:58"><name pos:start="319:17" pos:end="319:17">a</name> <operator pos:start="319:19" pos:end="319:19">=</operator> <name pos:start="319:21" pos:end="319:37"><name pos:start="319:21" pos:end="319:21">s</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:37">frame_len_bits</name></name> <operator pos:start="319:39" pos:end="319:39">-</operator> <name pos:start="319:41" pos:end="319:54">BLOCK_MIN_BITS</name> <operator pos:start="319:56" pos:end="319:56">-</operator> <name pos:start="319:58" pos:end="319:58">k</name></expr>;</expr_stmt>

                <if_stmt pos:start="321:17" pos:end="335:17"><if pos:start="321:17" pos:end="335:17">if <condition pos:start="321:20" pos:end="321:26">(<expr pos:start="321:21" pos:end="321:25"><name pos:start="321:21" pos:end="321:21">a</name> <operator pos:start="321:23" pos:end="321:23">&lt;</operator> <literal type="number" pos:start="321:25" pos:end="321:25">3</literal></expr>)</condition> <block pos:start="321:28" pos:end="335:17">{<block_content pos:start="323:21" pos:end="333:55">

                    <if_stmt pos:start="323:21" pos:end="333:55"><if pos:start="323:21" pos:end="325:55">if <condition pos:start="323:24" pos:end="323:48">(<expr pos:start="323:25" pos:end="323:47"><name pos:start="323:25" pos:end="323:38"><name pos:start="323:25" pos:end="323:25">s</name><operator pos:start="323:26" pos:end="323:27">-&gt;</operator><name pos:start="323:28" pos:end="323:38">sample_rate</name></name> <operator pos:start="323:40" pos:end="323:41">&gt;=</operator> <literal type="number" pos:start="323:43" pos:end="323:47">44100</literal></expr>)</condition><block type="pseudo" pos:start="325:25" pos:end="325:55"><block_content pos:start="325:25" pos:end="325:55">

                        <expr_stmt pos:start="325:25" pos:end="325:55"><expr pos:start="325:25" pos:end="325:54"><name pos:start="325:25" pos:end="325:29">table</name> <operator pos:start="325:31" pos:end="325:31">=</operator> <name pos:start="325:33" pos:end="325:54"><name pos:start="325:33" pos:end="325:51">exponent_band_44100</name><index pos:start="325:52" pos:end="325:54">[<expr pos:start="325:53" pos:end="325:53"><name pos:start="325:53" pos:end="325:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="327:21" pos:end="329:55">else if <condition pos:start="327:29" pos:end="327:53">(<expr pos:start="327:30" pos:end="327:52"><name pos:start="327:30" pos:end="327:43"><name pos:start="327:30" pos:end="327:30">s</name><operator pos:start="327:31" pos:end="327:32">-&gt;</operator><name pos:start="327:33" pos:end="327:43">sample_rate</name></name> <operator pos:start="327:45" pos:end="327:46">&gt;=</operator> <literal type="number" pos:start="327:48" pos:end="327:52">32000</literal></expr>)</condition><block type="pseudo" pos:start="329:25" pos:end="329:55"><block_content pos:start="329:25" pos:end="329:55">

                        <expr_stmt pos:start="329:25" pos:end="329:55"><expr pos:start="329:25" pos:end="329:54"><name pos:start="329:25" pos:end="329:29">table</name> <operator pos:start="329:31" pos:end="329:31">=</operator> <name pos:start="329:33" pos:end="329:54"><name pos:start="329:33" pos:end="329:51">exponent_band_32000</name><index pos:start="329:52" pos:end="329:54">[<expr pos:start="329:53" pos:end="329:53"><name pos:start="329:53" pos:end="329:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="331:21" pos:end="333:55">else if <condition pos:start="331:29" pos:end="331:53">(<expr pos:start="331:30" pos:end="331:52"><name pos:start="331:30" pos:end="331:43"><name pos:start="331:30" pos:end="331:30">s</name><operator pos:start="331:31" pos:end="331:32">-&gt;</operator><name pos:start="331:33" pos:end="331:43">sample_rate</name></name> <operator pos:start="331:45" pos:end="331:46">&gt;=</operator> <literal type="number" pos:start="331:48" pos:end="331:52">22050</literal></expr>)</condition><block type="pseudo" pos:start="333:25" pos:end="333:55"><block_content pos:start="333:25" pos:end="333:55">

                        <expr_stmt pos:start="333:25" pos:end="333:55"><expr pos:start="333:25" pos:end="333:54"><name pos:start="333:25" pos:end="333:29">table</name> <operator pos:start="333:31" pos:end="333:31">=</operator> <name pos:start="333:33" pos:end="333:54"><name pos:start="333:33" pos:end="333:51">exponent_band_22050</name><index pos:start="333:52" pos:end="333:54">[<expr pos:start="333:53" pos:end="333:53"><name pos:start="333:53" pos:end="333:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="337:17" pos:end="381:17"><if pos:start="337:17" pos:end="347:17">if <condition pos:start="337:20" pos:end="337:26">(<expr pos:start="337:21" pos:end="337:25"><name pos:start="337:21" pos:end="337:25">table</name></expr>)</condition> <block pos:start="337:28" pos:end="347:17">{<block_content pos:start="339:21" pos:end="345:45">

                    <expr_stmt pos:start="339:21" pos:end="339:33"><expr pos:start="339:21" pos:end="339:32"><name pos:start="339:21" pos:end="339:21">n</name> <operator pos:start="339:23" pos:end="339:23">=</operator> <operator pos:start="339:25" pos:end="339:25">*</operator><name pos:start="339:26" pos:end="339:30">table</name><operator pos:start="339:31" pos:end="339:32">++</operator></expr>;</expr_stmt>

                    <for pos:start="341:21" pos:end="343:59">for<control pos:start="341:24" pos:end="341:36">(<init pos:start="341:25" pos:end="341:28"><expr pos:start="341:25" pos:end="341:27"><name pos:start="341:25" pos:end="341:25">i</name><operator pos:start="341:26" pos:end="341:26">=</operator><literal type="number" pos:start="341:27" pos:end="341:27">0</literal></expr>;</init><condition pos:start="341:29" pos:end="341:32"><expr pos:start="341:29" pos:end="341:31"><name pos:start="341:29" pos:end="341:29">i</name><operator pos:start="341:30" pos:end="341:30">&lt;</operator><name pos:start="341:31" pos:end="341:31">n</name></expr>;</condition><incr pos:start="341:33" pos:end="341:35"><expr pos:start="341:33" pos:end="341:35"><name pos:start="341:33" pos:end="341:33">i</name><operator pos:start="341:34" pos:end="341:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="343:25" pos:end="343:59"><block_content pos:start="343:25" pos:end="343:59">

                        <expr_stmt pos:start="343:25" pos:end="343:59"><expr pos:start="343:25" pos:end="343:58"><name pos:start="343:25" pos:end="343:47"><name pos:start="343:25" pos:end="343:25">s</name><operator pos:start="343:26" pos:end="343:27">-&gt;</operator><name pos:start="343:28" pos:end="343:41">exponent_bands</name><index pos:start="343:42" pos:end="343:44">[<expr pos:start="343:43" pos:end="343:43"><name pos:start="343:43" pos:end="343:43">k</name></expr>]</index><index pos:start="343:45" pos:end="343:47">[<expr pos:start="343:46" pos:end="343:46"><name pos:start="343:46" pos:end="343:46">i</name></expr>]</index></name> <operator pos:start="343:49" pos:end="343:49">=</operator> <name pos:start="343:51" pos:end="343:58"><name pos:start="343:51" pos:end="343:55">table</name><index pos:start="343:56" pos:end="343:58">[<expr pos:start="343:57" pos:end="343:57"><name pos:start="343:57" pos:end="343:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="345:21" pos:end="345:45"><expr pos:start="345:21" pos:end="345:44"><name pos:start="345:21" pos:end="345:40"><name pos:start="345:21" pos:end="345:21">s</name><operator pos:start="345:22" pos:end="345:23">-&gt;</operator><name pos:start="345:24" pos:end="345:37">exponent_sizes</name><index pos:start="345:38" pos:end="345:40">[<expr pos:start="345:39" pos:end="345:39"><name pos:start="345:39" pos:end="345:39">k</name></expr>]</index></name> <operator pos:start="345:42" pos:end="345:42">=</operator> <name pos:start="345:44" pos:end="345:44">n</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="347:19" pos:end="381:17">else <block pos:start="347:24" pos:end="381:17">{<block_content pos:start="349:21" pos:end="379:45">

                    <expr_stmt pos:start="349:21" pos:end="349:26"><expr pos:start="349:21" pos:end="349:25"><name pos:start="349:21" pos:end="349:21">j</name> <operator pos:start="349:23" pos:end="349:23">=</operator> <literal type="number" pos:start="349:25" pos:end="349:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="351:21" pos:end="351:29"><expr pos:start="351:21" pos:end="351:28"><name pos:start="351:21" pos:end="351:24">lpos</name> <operator pos:start="351:26" pos:end="351:26">=</operator> <literal type="number" pos:start="351:28" pos:end="351:28">0</literal></expr>;</expr_stmt>

                    <for pos:start="353:21" pos:end="377:21">for<control pos:start="353:24" pos:end="353:37">(<init pos:start="353:25" pos:end="353:28"><expr pos:start="353:25" pos:end="353:27"><name pos:start="353:25" pos:end="353:25">i</name><operator pos:start="353:26" pos:end="353:26">=</operator><literal type="number" pos:start="353:27" pos:end="353:27">0</literal></expr>;</init><condition pos:start="353:29" pos:end="353:33"><expr pos:start="353:29" pos:end="353:32"><name pos:start="353:29" pos:end="353:29">i</name><operator pos:start="353:30" pos:end="353:30">&lt;</operator><literal type="number" pos:start="353:31" pos:end="353:32">25</literal></expr>;</condition><incr pos:start="353:34" pos:end="353:36"><expr pos:start="353:34" pos:end="353:36"><name pos:start="353:34" pos:end="353:34">i</name><operator pos:start="353:35" pos:end="353:36">++</operator></expr></incr>)</control> <block pos:start="353:39" pos:end="377:21">{<block_content pos:start="355:25" pos:end="375:35">

                        <expr_stmt pos:start="355:25" pos:end="355:50"><expr pos:start="355:25" pos:end="355:49"><name pos:start="355:25" pos:end="355:25">a</name> <operator pos:start="355:27" pos:end="355:27">=</operator> <name pos:start="355:29" pos:end="355:49"><name pos:start="355:29" pos:end="355:46">wma_critical_freqs</name><index pos:start="355:47" pos:end="355:49">[<expr pos:start="355:48" pos:end="355:48"><name pos:start="355:48" pos:end="355:48">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="357:25" pos:end="357:43"><expr pos:start="357:25" pos:end="357:42"><name pos:start="357:25" pos:end="357:25">b</name> <operator pos:start="357:27" pos:end="357:27">=</operator> <name pos:start="357:29" pos:end="357:42"><name pos:start="357:29" pos:end="357:29">s</name><operator pos:start="357:30" pos:end="357:31">-&gt;</operator><name pos:start="357:32" pos:end="357:42">sample_rate</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="359:25" pos:end="359:74"><expr pos:start="359:25" pos:end="359:73"><name pos:start="359:25" pos:end="359:27">pos</name> <operator pos:start="359:29" pos:end="359:29">=</operator> <operator pos:start="359:31" pos:end="359:31">(</operator><operator pos:start="359:32" pos:end="359:32">(</operator><name pos:start="359:33" pos:end="359:41">block_len</name> <operator pos:start="359:43" pos:end="359:43">*</operator> <literal type="number" pos:start="359:45" pos:end="359:45">2</literal> <operator pos:start="359:47" pos:end="359:47">*</operator> <name pos:start="359:49" pos:end="359:49">a</name><operator pos:start="359:50" pos:end="359:50">)</operator>  <operator pos:start="359:53" pos:end="359:53">+</operator> <operator pos:start="359:55" pos:end="359:55">(</operator><name pos:start="359:56" pos:end="359:56">b</name> <operator pos:start="359:58" pos:end="359:59">&lt;&lt;</operator> <literal type="number" pos:start="359:61" pos:end="359:61">1</literal><operator pos:start="359:62" pos:end="359:62">)</operator><operator pos:start="359:63" pos:end="359:63">)</operator> <operator pos:start="359:65" pos:end="359:65">/</operator> <operator pos:start="359:67" pos:end="359:67">(</operator><literal type="number" pos:start="359:68" pos:end="359:68">4</literal> <operator pos:start="359:70" pos:end="359:70">*</operator> <name pos:start="359:72" pos:end="359:72">b</name><operator pos:start="359:73" pos:end="359:73">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="361:25" pos:end="361:34"><expr pos:start="361:25" pos:end="361:33"><name pos:start="361:25" pos:end="361:27">pos</name> <operator pos:start="361:29" pos:end="361:31">&lt;&lt;=</operator> <literal type="number" pos:start="361:33" pos:end="361:33">2</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="363:25" pos:end="365:44"><if pos:start="363:25" pos:end="365:44">if <condition pos:start="363:28" pos:end="363:44">(<expr pos:start="363:29" pos:end="363:43"><name pos:start="363:29" pos:end="363:31">pos</name> <operator pos:start="363:33" pos:end="363:33">&gt;</operator> <name pos:start="363:35" pos:end="363:43">block_len</name></expr>)</condition><block type="pseudo" pos:start="365:29" pos:end="365:44"><block_content pos:start="365:29" pos:end="365:44"> 

                            <expr_stmt pos:start="365:29" pos:end="365:44"><expr pos:start="365:29" pos:end="365:43"><name pos:start="365:29" pos:end="365:31">pos</name> <operator pos:start="365:33" pos:end="365:33">=</operator> <name pos:start="365:35" pos:end="365:43">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="367:25" pos:end="369:67"><if pos:start="367:25" pos:end="369:67">if <condition pos:start="367:28" pos:end="367:39">(<expr pos:start="367:29" pos:end="367:38"><name pos:start="367:29" pos:end="367:31">pos</name> <operator pos:start="367:33" pos:end="367:33">&gt;</operator> <name pos:start="367:35" pos:end="367:38">lpos</name></expr>)</condition><block type="pseudo" pos:start="369:29" pos:end="369:67"><block_content pos:start="369:29" pos:end="369:67">

                            <expr_stmt pos:start="369:29" pos:end="369:67"><expr pos:start="369:29" pos:end="369:66"><name pos:start="369:29" pos:end="369:53"><name pos:start="369:29" pos:end="369:29">s</name><operator pos:start="369:30" pos:end="369:31">-&gt;</operator><name pos:start="369:32" pos:end="369:45">exponent_bands</name><index pos:start="369:46" pos:end="369:48">[<expr pos:start="369:47" pos:end="369:47"><name pos:start="369:47" pos:end="369:47">k</name></expr>]</index><index pos:start="369:49" pos:end="369:53">[<expr pos:start="369:50" pos:end="369:52"><name pos:start="369:50" pos:end="369:50">j</name><operator pos:start="369:51" pos:end="369:52">++</operator></expr>]</index></name> <operator pos:start="369:55" pos:end="369:55">=</operator> <name pos:start="369:57" pos:end="369:59">pos</name> <operator pos:start="369:61" pos:end="369:61">-</operator> <name pos:start="369:63" pos:end="369:66">lpos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="371:25" pos:end="373:34"><if pos:start="371:25" pos:end="373:34">if <condition pos:start="371:28" pos:end="371:45">(<expr pos:start="371:29" pos:end="371:44"><name pos:start="371:29" pos:end="371:31">pos</name> <operator pos:start="371:33" pos:end="371:34">&gt;=</operator> <name pos:start="371:36" pos:end="371:44">block_len</name></expr>)</condition><block type="pseudo" pos:start="373:29" pos:end="373:34"><block_content pos:start="373:29" pos:end="373:34">

                            <break pos:start="373:29" pos:end="373:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="375:25" pos:end="375:35"><expr pos:start="375:25" pos:end="375:34"><name pos:start="375:25" pos:end="375:28">lpos</name> <operator pos:start="375:30" pos:end="375:30">=</operator> <name pos:start="375:32" pos:end="375:34">pos</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="379:21" pos:end="379:45"><expr pos:start="379:21" pos:end="379:44"><name pos:start="379:21" pos:end="379:40"><name pos:start="379:21" pos:end="379:21">s</name><operator pos:start="379:22" pos:end="379:23">-&gt;</operator><name pos:start="379:24" pos:end="379:37">exponent_sizes</name><index pos:start="379:38" pos:end="379:40">[<expr pos:start="379:39" pos:end="379:39"><name pos:start="379:39" pos:end="379:39">k</name></expr>]</index></name> <operator pos:start="379:42" pos:end="379:42">=</operator> <name pos:start="379:44" pos:end="379:44">j</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="387:13" pos:end="387:37">/* max number of coefs */</comment>

            <expr_stmt pos:start="389:13" pos:end="389:79"><expr pos:start="389:13" pos:end="389:78"><name pos:start="389:13" pos:end="389:27"><name pos:start="389:13" pos:end="389:13">s</name><operator pos:start="389:14" pos:end="389:15">-&gt;</operator><name pos:start="389:16" pos:end="389:24">coefs_end</name><index pos:start="389:25" pos:end="389:27">[<expr pos:start="389:26" pos:end="389:26"><name pos:start="389:26" pos:end="389:26">k</name></expr>]</index></name> <operator pos:start="389:29" pos:end="389:29">=</operator> <operator pos:start="389:31" pos:end="389:31">(</operator><name pos:start="389:32" pos:end="389:43"><name pos:start="389:32" pos:end="389:32">s</name><operator pos:start="389:33" pos:end="389:34">-&gt;</operator><name pos:start="389:35" pos:end="389:43">frame_len</name></name> <operator pos:start="389:45" pos:end="389:45">-</operator> <operator pos:start="389:47" pos:end="389:47">(</operator><operator pos:start="389:48" pos:end="389:48">(</operator><name pos:start="389:49" pos:end="389:60"><name pos:start="389:49" pos:end="389:49">s</name><operator pos:start="389:50" pos:end="389:51">-&gt;</operator><name pos:start="389:52" pos:end="389:60">frame_len</name></name> <operator pos:start="389:62" pos:end="389:62">*</operator> <literal type="number" pos:start="389:64" pos:end="389:64">9</literal><operator pos:start="389:65" pos:end="389:65">)</operator> <operator pos:start="389:67" pos:end="389:67">/</operator> <literal type="number" pos:start="389:69" pos:end="389:71">100</literal><operator pos:start="389:72" pos:end="389:72">)</operator><operator pos:start="389:73" pos:end="389:73">)</operator> <operator pos:start="389:75" pos:end="389:76">&gt;&gt;</operator> <name pos:start="389:78" pos:end="389:78">k</name></expr>;</expr_stmt>

            <comment type="block" pos:start="391:13" pos:end="391:39">/* high freq computation */</comment>

            <expr_stmt pos:start="393:13" pos:end="395:64"><expr pos:start="393:13" pos:end="395:63"><name pos:start="393:13" pos:end="393:33"><name pos:start="393:13" pos:end="393:13">s</name><operator pos:start="393:14" pos:end="393:15">-&gt;</operator><name pos:start="393:16" pos:end="393:30">high_band_start</name><index pos:start="393:31" pos:end="393:33">[<expr pos:start="393:32" pos:end="393:32"><name pos:start="393:32" pos:end="393:32">k</name></expr>]</index></name> <operator pos:start="393:35" pos:end="393:35">=</operator> <operator pos:start="393:37" pos:end="393:37">(</operator><name pos:start="393:38" pos:end="393:40">int</name><operator pos:start="393:41" pos:end="393:41">)</operator><operator pos:start="393:42" pos:end="393:42">(</operator><operator pos:start="393:43" pos:end="393:43">(</operator><name pos:start="393:44" pos:end="393:52">block_len</name> <operator pos:start="393:54" pos:end="393:54">*</operator> <literal type="number" pos:start="393:56" pos:end="393:56">2</literal> <operator pos:start="393:58" pos:end="393:58">*</operator> <name pos:start="393:60" pos:end="393:68">high_freq</name><operator pos:start="393:69" pos:end="393:69">)</operator> <operator pos:start="393:71" pos:end="393:71">/</operator> 

                                          <name pos:start="395:43" pos:end="395:56"><name pos:start="395:43" pos:end="395:43">s</name><operator pos:start="395:44" pos:end="395:45">-&gt;</operator><name pos:start="395:46" pos:end="395:56">sample_rate</name></name> <operator pos:start="395:58" pos:end="395:58">+</operator> <literal type="number" pos:start="395:60" pos:end="395:62">0.5</literal><operator pos:start="395:63" pos:end="395:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:37"><expr pos:start="397:13" pos:end="397:36"><name pos:start="397:13" pos:end="397:13">n</name> <operator pos:start="397:15" pos:end="397:15">=</operator> <name pos:start="397:17" pos:end="397:36"><name pos:start="397:17" pos:end="397:17">s</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:33">exponent_sizes</name><index pos:start="397:34" pos:end="397:36">[<expr pos:start="397:35" pos:end="397:35"><name pos:start="397:35" pos:end="397:35">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:18"><expr pos:start="399:13" pos:end="399:17"><name pos:start="399:13" pos:end="399:13">j</name> <operator pos:start="399:15" pos:end="399:15">=</operator> <literal type="number" pos:start="399:17" pos:end="399:17">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:20"><expr pos:start="401:13" pos:end="401:19"><name pos:start="401:13" pos:end="401:15">pos</name> <operator pos:start="401:17" pos:end="401:17">=</operator> <literal type="number" pos:start="401:19" pos:end="401:19">0</literal></expr>;</expr_stmt>

            <for pos:start="403:13" pos:end="425:13">for<control pos:start="403:16" pos:end="403:28">(<init pos:start="403:17" pos:end="403:20"><expr pos:start="403:17" pos:end="403:19"><name pos:start="403:17" pos:end="403:17">i</name><operator pos:start="403:18" pos:end="403:18">=</operator><literal type="number" pos:start="403:19" pos:end="403:19">0</literal></expr>;</init><condition pos:start="403:21" pos:end="403:24"><expr pos:start="403:21" pos:end="403:23"><name pos:start="403:21" pos:end="403:21">i</name><operator pos:start="403:22" pos:end="403:22">&lt;</operator><name pos:start="403:23" pos:end="403:23">n</name></expr>;</condition><incr pos:start="403:25" pos:end="403:27"><expr pos:start="403:25" pos:end="403:27"><name pos:start="403:25" pos:end="403:25">i</name><operator pos:start="403:26" pos:end="403:27">++</operator></expr></incr>)</control> <block pos:start="403:30" pos:end="425:13">{<block_content pos:start="405:17" pos:end="423:65">

                <decl_stmt pos:start="405:17" pos:end="405:31"><decl pos:start="405:17" pos:end="405:25"><type pos:start="405:17" pos:end="405:19"><name pos:start="405:17" pos:end="405:19">int</name></type> <name pos:start="405:21" pos:end="405:25">start</name></decl>, <decl pos:start="405:28" pos:end="405:30"><type ref="prev" pos:start="405:17" pos:end="405:19"/><name pos:start="405:28" pos:end="405:30">end</name></decl>;</decl_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:28"><expr pos:start="407:17" pos:end="407:27"><name pos:start="407:17" pos:end="407:21">start</name> <operator pos:start="407:23" pos:end="407:23">=</operator> <name pos:start="407:25" pos:end="407:27">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="409:47"><expr pos:start="409:17" pos:end="409:46"><name pos:start="409:17" pos:end="409:19">pos</name> <operator pos:start="409:21" pos:end="409:22">+=</operator> <name pos:start="409:24" pos:end="409:46"><name pos:start="409:24" pos:end="409:24">s</name><operator pos:start="409:25" pos:end="409:26">-&gt;</operator><name pos:start="409:27" pos:end="409:40">exponent_bands</name><index pos:start="409:41" pos:end="409:43">[<expr pos:start="409:42" pos:end="409:42"><name pos:start="409:42" pos:end="409:42">k</name></expr>]</index><index pos:start="409:44" pos:end="409:46">[<expr pos:start="409:45" pos:end="409:45"><name pos:start="409:45" pos:end="409:45">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:26"><expr pos:start="411:17" pos:end="411:25"><name pos:start="411:17" pos:end="411:19">end</name> <operator pos:start="411:21" pos:end="411:21">=</operator> <name pos:start="411:23" pos:end="411:25">pos</name></expr>;</expr_stmt>

                <if_stmt pos:start="413:17" pos:end="415:50"><if pos:start="413:17" pos:end="415:50">if <condition pos:start="413:20" pos:end="413:50">(<expr pos:start="413:21" pos:end="413:49"><name pos:start="413:21" pos:end="413:25">start</name> <operator pos:start="413:27" pos:end="413:27">&lt;</operator> <name pos:start="413:29" pos:end="413:49"><name pos:start="413:29" pos:end="413:29">s</name><operator pos:start="413:30" pos:end="413:31">-&gt;</operator><name pos:start="413:32" pos:end="413:46">high_band_start</name><index pos:start="413:47" pos:end="413:49">[<expr pos:start="413:48" pos:end="413:48"><name pos:start="413:48" pos:end="413:48">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="415:21" pos:end="415:50"><block_content pos:start="415:21" pos:end="415:50">

                    <expr_stmt pos:start="415:21" pos:end="415:50"><expr pos:start="415:21" pos:end="415:49"><name pos:start="415:21" pos:end="415:25">start</name> <operator pos:start="415:27" pos:end="415:27">=</operator> <name pos:start="415:29" pos:end="415:49"><name pos:start="415:29" pos:end="415:29">s</name><operator pos:start="415:30" pos:end="415:31">-&gt;</operator><name pos:start="415:32" pos:end="415:46">high_band_start</name><index pos:start="415:47" pos:end="415:49">[<expr pos:start="415:48" pos:end="415:48"><name pos:start="415:48" pos:end="415:48">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="417:17" pos:end="419:42"><if pos:start="417:17" pos:end="419:42">if <condition pos:start="417:20" pos:end="417:42">(<expr pos:start="417:21" pos:end="417:41"><name pos:start="417:21" pos:end="417:23">end</name> <operator pos:start="417:25" pos:end="417:25">&gt;</operator> <name pos:start="417:27" pos:end="417:41"><name pos:start="417:27" pos:end="417:27">s</name><operator pos:start="417:28" pos:end="417:29">-&gt;</operator><name pos:start="417:30" pos:end="417:38">coefs_end</name><index pos:start="417:39" pos:end="417:41">[<expr pos:start="417:40" pos:end="417:40"><name pos:start="417:40" pos:end="417:40">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="419:21" pos:end="419:42"><block_content pos:start="419:21" pos:end="419:42">

                    <expr_stmt pos:start="419:21" pos:end="419:42"><expr pos:start="419:21" pos:end="419:41"><name pos:start="419:21" pos:end="419:23">end</name> <operator pos:start="419:25" pos:end="419:25">=</operator> <name pos:start="419:27" pos:end="419:41"><name pos:start="419:27" pos:end="419:27">s</name><operator pos:start="419:28" pos:end="419:29">-&gt;</operator><name pos:start="419:30" pos:end="419:38">coefs_end</name><index pos:start="419:39" pos:end="419:41">[<expr pos:start="419:40" pos:end="419:40"><name pos:start="419:40" pos:end="419:40">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="421:17" pos:end="423:65"><if pos:start="421:17" pos:end="423:65">if <condition pos:start="421:20" pos:end="421:32">(<expr pos:start="421:21" pos:end="421:31"><name pos:start="421:21" pos:end="421:23">end</name> <operator pos:start="421:25" pos:end="421:25">&gt;</operator> <name pos:start="421:27" pos:end="421:31">start</name></expr>)</condition><block type="pseudo" pos:start="423:21" pos:end="423:65"><block_content pos:start="423:21" pos:end="423:65">

                    <expr_stmt pos:start="423:21" pos:end="423:65"><expr pos:start="423:21" pos:end="423:64"><name pos:start="423:21" pos:end="423:50"><name pos:start="423:21" pos:end="423:21">s</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:42">exponent_high_bands</name><index pos:start="423:43" pos:end="423:45">[<expr pos:start="423:44" pos:end="423:44"><name pos:start="423:44" pos:end="423:44">k</name></expr>]</index><index pos:start="423:46" pos:end="423:50">[<expr pos:start="423:47" pos:end="423:49"><name pos:start="423:47" pos:end="423:47">j</name><operator pos:start="423:48" pos:end="423:49">++</operator></expr>]</index></name> <operator pos:start="423:52" pos:end="423:52">=</operator> <name pos:start="423:54" pos:end="423:56">end</name> <operator pos:start="423:58" pos:end="423:58">-</operator> <name pos:start="423:60" pos:end="423:64">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="427:13" pos:end="448:0"><expr pos:start="427:13" pos:end="427:41"><name pos:start="427:13" pos:end="427:37"><name pos:start="427:13" pos:end="427:13">s</name><operator pos:start="427:14" pos:end="427:15">-&gt;</operator><name pos:start="427:16" pos:end="427:34">exponent_high_sizes</name><index pos:start="427:35" pos:end="427:37">[<expr pos:start="427:36" pos:end="427:36"><name pos:start="427:36" pos:end="427:36">k</name></expr>]</index></name> <operator pos:start="427:39" pos:end="427:39">=</operator> <name pos:start="427:41" pos:end="427:41">j</name></expr>;</expr_stmt>

<cpp:if pos:start="429:1" pos:end="429:5">#<cpp:directive pos:start="429:2" pos:end="429:3">if</cpp:directive> <expr pos:start="429:5" pos:end="429:5"><literal type="number" pos:start="429:5" pos:end="429:5">0</literal></expr></cpp:if>

            trace("%5d: coefs_end=%d high_band_start=%d nb_high_bands=%d: ",

                  s-&gt;frame_len &gt;&gt; k, 

                  s-&gt;coefs_end[k],

                  s-&gt;high_band_start[k],

                  s-&gt;exponent_high_sizes[k]);

            for(j=0;j&lt;s-&gt;exponent_high_sizes[k];j++)

                trace(" %d", s-&gt;exponent_high_bands[k][j]);

            trace("\n");

<cpp:endif pos:start="447:1" pos:end="447:6">#<cpp:directive pos:start="447:2" pos:end="447:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></for>

    </block_content>}</block>



<cpp:ifdef pos:start="455:1" pos:end="455:18">#<cpp:directive pos:start="455:2" pos:end="455:6">ifdef</cpp:directive> <name pos:start="455:8" pos:end="455:18">DEBUG_TRACE</name></cpp:ifdef>

    <block pos:start="457:5" pos:end="480:0">{<block_content pos:start="459:9" pos:end="475:9">

        <decl_stmt pos:start="459:9" pos:end="459:17"><decl pos:start="459:9" pos:end="459:13"><type pos:start="459:9" pos:end="459:11"><name pos:start="459:9" pos:end="459:11">int</name></type> <name pos:start="459:13" pos:end="459:13">i</name></decl>, <decl pos:start="459:16" pos:end="459:16"><type ref="prev" pos:start="459:9" pos:end="459:11"/><name pos:start="459:16" pos:end="459:16">j</name></decl>;</decl_stmt>

        <for pos:start="461:9" pos:end="475:9">for<control pos:start="461:12" pos:end="461:46">(<init pos:start="461:13" pos:end="461:18"><expr pos:start="461:13" pos:end="461:17"><name pos:start="461:13" pos:end="461:13">i</name> <operator pos:start="461:15" pos:end="461:15">=</operator> <literal type="number" pos:start="461:17" pos:end="461:17">0</literal></expr>;</init> <condition pos:start="461:20" pos:end="461:41"><expr pos:start="461:20" pos:end="461:40"><name pos:start="461:20" pos:end="461:20">i</name> <operator pos:start="461:22" pos:end="461:22">&lt;</operator> <name pos:start="461:24" pos:end="461:40"><name pos:start="461:24" pos:end="461:24">s</name><operator pos:start="461:25" pos:end="461:26">-&gt;</operator><name pos:start="461:27" pos:end="461:40">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="461:43" pos:end="461:45"><expr pos:start="461:43" pos:end="461:45"><name pos:start="461:43" pos:end="461:43">i</name><operator pos:start="461:44" pos:end="461:45">++</operator></expr></incr>)</control> <block pos:start="461:48" pos:end="475:9">{<block_content pos:start="463:13" pos:end="473:24">

            <expr_stmt pos:start="463:13" pos:end="467:41"><expr pos:start="463:13" pos:end="467:40"><call pos:start="463:13" pos:end="467:40"><name pos:start="463:13" pos:end="463:17">trace</name><argument_list pos:start="463:18" pos:end="467:40">(<argument pos:start="463:19" pos:end="463:31"><expr pos:start="463:19" pos:end="463:31"><literal type="string" pos:start="463:19" pos:end="463:31">"%5d: n=%2d:"</literal></expr></argument>, 

                   <argument pos:start="465:20" pos:end="465:36"><expr pos:start="465:20" pos:end="465:36"><name pos:start="465:20" pos:end="465:31"><name pos:start="465:20" pos:end="465:20">s</name><operator pos:start="465:21" pos:end="465:22">-&gt;</operator><name pos:start="465:23" pos:end="465:31">frame_len</name></name> <operator pos:start="465:33" pos:end="465:34">&gt;&gt;</operator> <name pos:start="465:36" pos:end="465:36">i</name></expr></argument>, 

                   <argument pos:start="467:20" pos:end="467:39"><expr pos:start="467:20" pos:end="467:39"><name pos:start="467:20" pos:end="467:39"><name pos:start="467:20" pos:end="467:20">s</name><operator pos:start="467:21" pos:end="467:22">-&gt;</operator><name pos:start="467:23" pos:end="467:36">exponent_sizes</name><index pos:start="467:37" pos:end="467:39">[<expr pos:start="467:38" pos:end="467:38"><name pos:start="467:38" pos:end="467:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="469:13" pos:end="471:54">for<control pos:start="469:16" pos:end="469:47">(<init pos:start="469:17" pos:end="469:20"><expr pos:start="469:17" pos:end="469:19"><name pos:start="469:17" pos:end="469:17">j</name><operator pos:start="469:18" pos:end="469:18">=</operator><literal type="number" pos:start="469:19" pos:end="469:19">0</literal></expr>;</init><condition pos:start="469:21" pos:end="469:43"><expr pos:start="469:21" pos:end="469:42"><name pos:start="469:21" pos:end="469:21">j</name><operator pos:start="469:22" pos:end="469:22">&lt;</operator><name pos:start="469:23" pos:end="469:42"><name pos:start="469:23" pos:end="469:23">s</name><operator pos:start="469:24" pos:end="469:25">-&gt;</operator><name pos:start="469:26" pos:end="469:39">exponent_sizes</name><index pos:start="469:40" pos:end="469:42">[<expr pos:start="469:41" pos:end="469:41"><name pos:start="469:41" pos:end="469:41">i</name></expr>]</index></name></expr>;</condition><incr pos:start="469:44" pos:end="469:46"><expr pos:start="469:44" pos:end="469:46"><name pos:start="469:44" pos:end="469:44">j</name><operator pos:start="469:45" pos:end="469:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="471:17" pos:end="471:54"><block_content pos:start="471:17" pos:end="471:54">

                <expr_stmt pos:start="471:17" pos:end="471:54"><expr pos:start="471:17" pos:end="471:53"><call pos:start="471:17" pos:end="471:53"><name pos:start="471:17" pos:end="471:21">trace</name><argument_list pos:start="471:22" pos:end="471:53">(<argument pos:start="471:23" pos:end="471:27"><expr pos:start="471:23" pos:end="471:27"><literal type="string" pos:start="471:23" pos:end="471:27">" %d"</literal></expr></argument>, <argument pos:start="471:30" pos:end="471:52"><expr pos:start="471:30" pos:end="471:52"><name pos:start="471:30" pos:end="471:52"><name pos:start="471:30" pos:end="471:30">s</name><operator pos:start="471:31" pos:end="471:32">-&gt;</operator><name pos:start="471:33" pos:end="471:46">exponent_bands</name><index pos:start="471:47" pos:end="471:49">[<expr pos:start="471:48" pos:end="471:48"><name pos:start="471:48" pos:end="471:48">i</name></expr>]</index><index pos:start="471:50" pos:end="471:52">[<expr pos:start="471:51" pos:end="471:51"><name pos:start="471:51" pos:end="471:51">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="473:13" pos:end="473:24"><expr pos:start="473:13" pos:end="473:23"><call pos:start="473:13" pos:end="473:23"><name pos:start="473:13" pos:end="473:17">trace</name><argument_list pos:start="473:18" pos:end="473:23">(<argument pos:start="473:19" pos:end="473:22"><expr pos:start="473:19" pos:end="473:22"><literal type="string" pos:start="473:19" pos:end="473:22">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:endif pos:start="479:1" pos:end="479:6">#<cpp:directive pos:start="479:2" pos:end="479:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="483:5" pos:end="483:19">/* init MDCT */</comment>

    <for pos:start="485:5" pos:end="487:68">for<control pos:start="485:8" pos:end="485:42">(<init pos:start="485:9" pos:end="485:14"><expr pos:start="485:9" pos:end="485:13"><name pos:start="485:9" pos:end="485:9">i</name> <operator pos:start="485:11" pos:end="485:11">=</operator> <literal type="number" pos:start="485:13" pos:end="485:13">0</literal></expr>;</init> <condition pos:start="485:16" pos:end="485:37"><expr pos:start="485:16" pos:end="485:36"><name pos:start="485:16" pos:end="485:16">i</name> <operator pos:start="485:18" pos:end="485:18">&lt;</operator> <name pos:start="485:20" pos:end="485:36"><name pos:start="485:20" pos:end="485:20">s</name><operator pos:start="485:21" pos:end="485:22">-&gt;</operator><name pos:start="485:23" pos:end="485:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="485:39" pos:end="485:41"><expr pos:start="485:39" pos:end="485:41"><name pos:start="485:39" pos:end="485:39">i</name><operator pos:start="485:40" pos:end="485:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="487:9" pos:end="487:68"><block_content pos:start="487:9" pos:end="487:68">

        <expr_stmt pos:start="487:9" pos:end="487:68"><expr pos:start="487:9" pos:end="487:67"><call pos:start="487:9" pos:end="487:67"><name pos:start="487:9" pos:end="487:20">ff_mdct_init</name><argument_list pos:start="487:21" pos:end="487:67">(<argument pos:start="487:22" pos:end="487:36"><expr pos:start="487:22" pos:end="487:36"><operator pos:start="487:22" pos:end="487:22">&amp;</operator><name pos:start="487:23" pos:end="487:36"><name pos:start="487:23" pos:end="487:23">s</name><operator pos:start="487:24" pos:end="487:25">-&gt;</operator><name pos:start="487:26" pos:end="487:33">mdct_ctx</name><index pos:start="487:34" pos:end="487:36">[<expr pos:start="487:35" pos:end="487:35"><name pos:start="487:35" pos:end="487:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="487:39" pos:end="487:63"><expr pos:start="487:39" pos:end="487:63"><name pos:start="487:39" pos:end="487:55"><name pos:start="487:39" pos:end="487:39">s</name><operator pos:start="487:40" pos:end="487:41">-&gt;</operator><name pos:start="487:42" pos:end="487:55">frame_len_bits</name></name> <operator pos:start="487:57" pos:end="487:57">-</operator> <name pos:start="487:59" pos:end="487:59">i</name> <operator pos:start="487:61" pos:end="487:61">+</operator> <literal type="number" pos:start="487:63" pos:end="487:63">1</literal></expr></argument>, <argument pos:start="487:66" pos:end="487:66"><expr pos:start="487:66" pos:end="487:66"><literal type="number" pos:start="487:66" pos:end="487:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    

    <comment type="block" pos:start="491:5" pos:end="491:49">/* init MDCT windows : simple sinus window */</comment>

    <for pos:start="493:5" pos:end="513:5">for<control pos:start="493:8" pos:end="493:42">(<init pos:start="493:9" pos:end="493:14"><expr pos:start="493:9" pos:end="493:13"><name pos:start="493:9" pos:end="493:9">i</name> <operator pos:start="493:11" pos:end="493:11">=</operator> <literal type="number" pos:start="493:13" pos:end="493:13">0</literal></expr>;</init> <condition pos:start="493:16" pos:end="493:37"><expr pos:start="493:16" pos:end="493:36"><name pos:start="493:16" pos:end="493:16">i</name> <operator pos:start="493:18" pos:end="493:18">&lt;</operator> <name pos:start="493:20" pos:end="493:36"><name pos:start="493:20" pos:end="493:20">s</name><operator pos:start="493:21" pos:end="493:22">-&gt;</operator><name pos:start="493:23" pos:end="493:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="493:39" pos:end="493:41"><expr pos:start="493:39" pos:end="493:41"><name pos:start="493:39" pos:end="493:39">i</name><operator pos:start="493:40" pos:end="493:41">++</operator></expr></incr>)</control> <block pos:start="493:44" pos:end="513:5">{<block_content pos:start="495:9" pos:end="511:31">

        <decl_stmt pos:start="495:9" pos:end="495:17"><decl pos:start="495:9" pos:end="495:13"><type pos:start="495:9" pos:end="495:11"><name pos:start="495:9" pos:end="495:11">int</name></type> <name pos:start="495:13" pos:end="495:13">n</name></decl>, <decl pos:start="495:16" pos:end="495:16"><type ref="prev" pos:start="495:9" pos:end="495:11"/><name pos:start="495:16" pos:end="495:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="497:9" pos:end="497:20"><decl pos:start="497:9" pos:end="497:19"><type pos:start="497:9" pos:end="497:13"><name pos:start="497:9" pos:end="497:13">float</name></type> <name pos:start="497:15" pos:end="497:19">alpha</name></decl>;</decl_stmt>

        <expr_stmt pos:start="499:9" pos:end="499:41"><expr pos:start="499:9" pos:end="499:40"><name pos:start="499:9" pos:end="499:9">n</name> <operator pos:start="499:11" pos:end="499:11">=</operator> <literal type="number" pos:start="499:13" pos:end="499:13">1</literal> <operator pos:start="499:15" pos:end="499:16">&lt;&lt;</operator> <operator pos:start="499:18" pos:end="499:18">(</operator><name pos:start="499:19" pos:end="499:35"><name pos:start="499:19" pos:end="499:19">s</name><operator pos:start="499:20" pos:end="499:21">-&gt;</operator><name pos:start="499:22" pos:end="499:35">frame_len_bits</name></name> <operator pos:start="499:37" pos:end="499:37">-</operator> <name pos:start="499:39" pos:end="499:39">i</name><operator pos:start="499:40" pos:end="499:40">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="501:9" pos:end="501:46"><expr pos:start="501:9" pos:end="501:45"><name pos:start="501:9" pos:end="501:14">window</name> <operator pos:start="501:16" pos:end="501:16">=</operator> <call pos:start="501:18" pos:end="501:45"><name pos:start="501:18" pos:end="501:26">av_malloc</name><argument_list pos:start="501:27" pos:end="501:45">(<argument pos:start="501:28" pos:end="501:44"><expr pos:start="501:28" pos:end="501:44"><sizeof pos:start="501:28" pos:end="501:40">sizeof<argument_list pos:start="501:34" pos:end="501:40">(<argument pos:start="501:35" pos:end="501:39"><expr pos:start="501:35" pos:end="501:39"><name pos:start="501:35" pos:end="501:39">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="501:42" pos:end="501:42">*</operator> <name pos:start="501:44" pos:end="501:44">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="503:9" pos:end="503:33"><expr pos:start="503:9" pos:end="503:32"><name pos:start="503:9" pos:end="503:13">alpha</name> <operator pos:start="503:15" pos:end="503:15">=</operator> <name pos:start="503:17" pos:end="503:20">M_PI</name> <operator pos:start="503:22" pos:end="503:22">/</operator> <operator pos:start="503:24" pos:end="503:24">(</operator><literal type="number" pos:start="503:25" pos:end="503:27">2.0</literal> <operator pos:start="503:29" pos:end="503:29">*</operator> <name pos:start="503:31" pos:end="503:31">n</name><operator pos:start="503:32" pos:end="503:32">)</operator></expr>;</expr_stmt>

        <for pos:start="505:9" pos:end="509:9">for<control pos:start="505:12" pos:end="505:24">(<init pos:start="505:13" pos:end="505:16"><expr pos:start="505:13" pos:end="505:15"><name pos:start="505:13" pos:end="505:13">j</name><operator pos:start="505:14" pos:end="505:14">=</operator><literal type="number" pos:start="505:15" pos:end="505:15">0</literal></expr>;</init><condition pos:start="505:17" pos:end="505:20"><expr pos:start="505:17" pos:end="505:19"><name pos:start="505:17" pos:end="505:17">j</name><operator pos:start="505:18" pos:end="505:18">&lt;</operator><name pos:start="505:19" pos:end="505:19">n</name></expr>;</condition><incr pos:start="505:21" pos:end="505:23"><expr pos:start="505:21" pos:end="505:23"><name pos:start="505:21" pos:end="505:21">j</name><operator pos:start="505:22" pos:end="505:23">++</operator></expr></incr>)</control> <block pos:start="505:26" pos:end="509:9">{<block_content pos:start="507:13" pos:end="507:55">

            <expr_stmt pos:start="507:13" pos:end="507:55"><expr pos:start="507:13" pos:end="507:54"><name pos:start="507:13" pos:end="507:29"><name pos:start="507:13" pos:end="507:18">window</name><index pos:start="507:19" pos:end="507:29">[<expr pos:start="507:20" pos:end="507:28"><name pos:start="507:20" pos:end="507:20">n</name> <operator pos:start="507:22" pos:end="507:22">-</operator> <name pos:start="507:24" pos:end="507:24">j</name> <operator pos:start="507:26" pos:end="507:26">-</operator> <literal type="number" pos:start="507:28" pos:end="507:28">1</literal></expr>]</index></name> <operator pos:start="507:31" pos:end="507:31">=</operator> <call pos:start="507:33" pos:end="507:54"><name pos:start="507:33" pos:end="507:35">sin</name><argument_list pos:start="507:36" pos:end="507:54">(<argument pos:start="507:37" pos:end="507:53"><expr pos:start="507:37" pos:end="507:53"><operator pos:start="507:37" pos:end="507:37">(</operator><name pos:start="507:38" pos:end="507:38">j</name> <operator pos:start="507:40" pos:end="507:40">+</operator> <literal type="number" pos:start="507:42" pos:end="507:44">0.5</literal><operator pos:start="507:45" pos:end="507:45">)</operator> <operator pos:start="507:47" pos:end="507:47">*</operator> <name pos:start="507:49" pos:end="507:53">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="511:9" pos:end="511:31"><expr pos:start="511:9" pos:end="511:30"><name pos:start="511:9" pos:end="511:21"><name pos:start="511:9" pos:end="511:9">s</name><operator pos:start="511:10" pos:end="511:11">-&gt;</operator><name pos:start="511:12" pos:end="511:18">windows</name><index pos:start="511:19" pos:end="511:21">[<expr pos:start="511:20" pos:end="511:20"><name pos:start="511:20" pos:end="511:20">i</name></expr>]</index></name> <operator pos:start="511:23" pos:end="511:23">=</operator> <name pos:start="511:25" pos:end="511:30">window</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="517:5" pos:end="517:31"><expr pos:start="517:5" pos:end="517:30"><name pos:start="517:5" pos:end="517:26"><name pos:start="517:5" pos:end="517:5">s</name><operator pos:start="517:6" pos:end="517:7">-&gt;</operator><name pos:start="517:8" pos:end="517:26">reset_block_lengths</name></name> <operator pos:start="517:28" pos:end="517:28">=</operator> <literal type="number" pos:start="517:30" pos:end="517:30">1</literal></expr>;</expr_stmt>

    

    <if_stmt pos:start="521:5" pos:end="573:5"><if pos:start="521:5" pos:end="573:5">if <condition pos:start="521:8" pos:end="521:28">(<expr pos:start="521:9" pos:end="521:27"><name pos:start="521:9" pos:end="521:27"><name pos:start="521:9" pos:end="521:9">s</name><operator pos:start="521:10" pos:end="521:11">-&gt;</operator><name pos:start="521:12" pos:end="521:27">use_noise_coding</name></name></expr>)</condition> <block pos:start="521:30" pos:end="573:5">{<block_content pos:start="527:9" pos:end="571:40">



        <comment type="block" pos:start="525:9" pos:end="525:38">/* init the noise generator */</comment>

        <if_stmt pos:start="527:9" pos:end="538:0"><if pos:start="527:9" pos:end="529:33">if <condition pos:start="527:12" pos:end="527:27">(<expr pos:start="527:13" pos:end="527:26"><name pos:start="527:13" pos:end="527:26"><name pos:start="527:13" pos:end="527:13">s</name><operator pos:start="527:14" pos:end="527:15">-&gt;</operator><name pos:start="527:16" pos:end="527:26">use_exp_vlc</name></name></expr>)</condition><block type="pseudo" pos:start="529:13" pos:end="529:33"><block_content pos:start="529:13" pos:end="529:33">

            <expr_stmt pos:start="529:13" pos:end="529:33"><expr pos:start="529:13" pos:end="529:32"><name pos:start="529:13" pos:end="529:25"><name pos:start="529:13" pos:end="529:13">s</name><operator pos:start="529:14" pos:end="529:15">-&gt;</operator><name pos:start="529:16" pos:end="529:25">noise_mult</name></name> <operator pos:start="529:27" pos:end="529:27">=</operator> <literal type="number" pos:start="529:29" pos:end="529:32">0.02</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="531:9" pos:end="538:0">else<block type="pseudo" pos:start="533:13" pos:end="538:0"><block_content pos:start="533:13" pos:end="538:0">

            <expr_stmt pos:start="533:13" pos:end="538:0"><expr pos:start="533:13" pos:end="533:32"><name pos:start="533:13" pos:end="533:25"><name pos:start="533:13" pos:end="533:13">s</name><operator pos:start="533:14" pos:end="533:15">-&gt;</operator><name pos:start="533:16" pos:end="533:25">noise_mult</name></name> <operator pos:start="533:27" pos:end="533:27">=</operator> <literal type="number" pos:start="533:29" pos:end="533:32">0.04</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

               

<cpp:if pos:start="537:1" pos:end="537:24">#<cpp:directive pos:start="537:2" pos:end="537:3">if</cpp:directive> <expr pos:start="537:5" pos:end="537:24"><call pos:start="537:5" pos:end="537:24"><name pos:start="537:5" pos:end="537:11">defined</name><argument_list pos:start="537:12" pos:end="537:24">(<argument pos:start="537:13" pos:end="537:23"><expr pos:start="537:13" pos:end="537:23"><name pos:start="537:13" pos:end="537:23">DEBUG_TRACE</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <for pos:start="539:9" pos:end="544:0">for<control pos:start="539:12" pos:end="539:37">(<init pos:start="539:13" pos:end="539:16"><expr pos:start="539:13" pos:end="539:15"><name pos:start="539:13" pos:end="539:13">i</name><operator pos:start="539:14" pos:end="539:14">=</operator><literal type="number" pos:start="539:15" pos:end="539:15">0</literal></expr>;</init><condition pos:start="539:17" pos:end="539:33"><expr pos:start="539:17" pos:end="539:32"><name pos:start="539:17" pos:end="539:17">i</name><operator pos:start="539:18" pos:end="539:18">&lt;</operator><name pos:start="539:19" pos:end="539:32">NOISE_TAB_SIZE</name></expr>;</condition><incr pos:start="539:34" pos:end="539:36"><expr pos:start="539:34" pos:end="539:36"><name pos:start="539:34" pos:end="539:34">i</name><operator pos:start="539:35" pos:end="539:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="541:13" pos:end="544:0"><block_content pos:start="541:13" pos:end="544:0">

            <expr_stmt pos:start="541:13" pos:end="544:0"><expr pos:start="541:13" pos:end="541:51"><name pos:start="541:13" pos:end="541:29"><name pos:start="541:13" pos:end="541:13">s</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:26">noise_table</name><index pos:start="541:27" pos:end="541:29">[<expr pos:start="541:28" pos:end="541:28"><name pos:start="541:28" pos:end="541:28">i</name></expr>]</index></name> <operator pos:start="541:31" pos:end="541:31">=</operator> <literal type="number" pos:start="541:33" pos:end="541:35">1.0</literal> <operator pos:start="541:37" pos:end="541:37">*</operator> <name pos:start="541:39" pos:end="541:51"><name pos:start="541:39" pos:end="541:39">s</name><operator pos:start="541:40" pos:end="541:41">-&gt;</operator><name pos:start="541:42" pos:end="541:51">noise_mult</name></name></expr>;</expr_stmt></block_content></block></for>

<cpp:else pos:start="543:1" pos:end="543:5">#<cpp:directive pos:start="543:2" pos:end="543:5">else</cpp:directive></cpp:else>

        <block pos:start="545:9" pos:end="566:0">{<block_content pos:start="547:13" pos:end="561:13">

            <decl_stmt pos:start="547:13" pos:end="547:30"><decl pos:start="547:13" pos:end="547:29"><type pos:start="547:13" pos:end="547:24"><name pos:start="547:13" pos:end="547:20">unsigned</name> <name pos:start="547:22" pos:end="547:24">int</name></type> <name pos:start="547:26" pos:end="547:29">seed</name></decl>;</decl_stmt>

            <decl_stmt pos:start="549:13" pos:end="549:23"><decl pos:start="549:13" pos:end="549:22"><type pos:start="549:13" pos:end="549:17"><name pos:start="549:13" pos:end="549:17">float</name></type> <name pos:start="549:19" pos:end="549:22">norm</name></decl>;</decl_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:21"><expr pos:start="551:13" pos:end="551:20"><name pos:start="551:13" pos:end="551:16">seed</name> <operator pos:start="551:18" pos:end="551:18">=</operator> <literal type="number" pos:start="551:20" pos:end="551:20">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:72"><expr pos:start="553:13" pos:end="553:71"><name pos:start="553:13" pos:end="553:16">norm</name> <operator pos:start="553:18" pos:end="553:18">=</operator> <operator pos:start="553:20" pos:end="553:20">(</operator><literal type="number" pos:start="553:21" pos:end="553:23">1.0</literal> <operator pos:start="553:25" pos:end="553:25">/</operator> <operator pos:start="553:27" pos:end="553:27">(</operator><name pos:start="553:28" pos:end="553:32">float</name><operator pos:start="553:33" pos:end="553:33">)</operator><operator pos:start="553:34" pos:end="553:34">(</operator><literal type="number" pos:start="553:35" pos:end="553:37">1LL</literal> <operator pos:start="553:39" pos:end="553:40">&lt;&lt;</operator> <literal type="number" pos:start="553:42" pos:end="553:43">31</literal><operator pos:start="553:44" pos:end="553:44">)</operator><operator pos:start="553:45" pos:end="553:45">)</operator> <operator pos:start="553:47" pos:end="553:47">*</operator> <call pos:start="553:49" pos:end="553:55"><name pos:start="553:49" pos:end="553:52">sqrt</name><argument_list pos:start="553:53" pos:end="553:55">(<argument pos:start="553:54" pos:end="553:54"><expr pos:start="553:54" pos:end="553:54"><literal type="number" pos:start="553:54" pos:end="553:54">3</literal></expr></argument>)</argument_list></call> <operator pos:start="553:57" pos:end="553:57">*</operator> <name pos:start="553:59" pos:end="553:71"><name pos:start="553:59" pos:end="553:59">s</name><operator pos:start="553:60" pos:end="553:61">-&gt;</operator><name pos:start="553:62" pos:end="553:71">noise_mult</name></name></expr>;</expr_stmt>

            <for pos:start="555:13" pos:end="561:13">for<control pos:start="555:16" pos:end="555:41">(<init pos:start="555:17" pos:end="555:20"><expr pos:start="555:17" pos:end="555:19"><name pos:start="555:17" pos:end="555:17">i</name><operator pos:start="555:18" pos:end="555:18">=</operator><literal type="number" pos:start="555:19" pos:end="555:19">0</literal></expr>;</init><condition pos:start="555:21" pos:end="555:37"><expr pos:start="555:21" pos:end="555:36"><name pos:start="555:21" pos:end="555:21">i</name><operator pos:start="555:22" pos:end="555:22">&lt;</operator><name pos:start="555:23" pos:end="555:36">NOISE_TAB_SIZE</name></expr>;</condition><incr pos:start="555:38" pos:end="555:40"><expr pos:start="555:38" pos:end="555:40"><name pos:start="555:38" pos:end="555:38">i</name><operator pos:start="555:39" pos:end="555:40">++</operator></expr></incr>)</control> <block pos:start="555:43" pos:end="561:13">{<block_content pos:start="557:17" pos:end="559:62">

                <expr_stmt pos:start="557:17" pos:end="557:41"><expr pos:start="557:17" pos:end="557:40"><name pos:start="557:17" pos:end="557:20">seed</name> <operator pos:start="557:22" pos:end="557:22">=</operator> <name pos:start="557:24" pos:end="557:27">seed</name> <operator pos:start="557:29" pos:end="557:29">*</operator> <literal type="number" pos:start="557:31" pos:end="557:38">314159</literal> <operator pos:start="557:38" pos:end="557:38">+</operator> <literal type="number" pos:start="557:40" pos:end="557:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="559:17" pos:end="559:62"><expr pos:start="559:17" pos:end="559:61"><name pos:start="559:17" pos:end="559:33"><name pos:start="559:17" pos:end="559:17">s</name><operator pos:start="559:18" pos:end="559:19">-&gt;</operator><name pos:start="559:20" pos:end="559:30">noise_table</name><index pos:start="559:31" pos:end="559:33">[<expr pos:start="559:32" pos:end="559:32"><name pos:start="559:32" pos:end="559:32">i</name></expr>]</index></name> <operator pos:start="559:35" pos:end="559:35">=</operator> <operator pos:start="559:37" pos:end="559:37">(</operator><name pos:start="559:38" pos:end="559:42">float</name><operator pos:start="559:43" pos:end="559:43">)</operator><operator pos:start="559:44" pos:end="559:44">(</operator><operator pos:start="559:45" pos:end="559:45">(</operator><name pos:start="559:46" pos:end="559:48">int</name><operator pos:start="559:49" pos:end="559:49">)</operator><name pos:start="559:50" pos:end="559:53">seed</name><operator pos:start="559:54" pos:end="559:54">)</operator> <operator pos:start="559:56" pos:end="559:56">*</operator> <name pos:start="559:58" pos:end="559:61">norm</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

<cpp:endif pos:start="565:1" pos:end="565:6">#<cpp:directive pos:start="565:2" pos:end="565:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="567:9" pos:end="571:40"><expr pos:start="567:9" pos:end="571:39"><call pos:start="567:9" pos:end="571:39"><name pos:start="567:9" pos:end="567:16">init_vlc</name><argument_list pos:start="567:17" pos:end="571:39">(<argument pos:start="567:18" pos:end="567:30"><expr pos:start="567:18" pos:end="567:30"><operator pos:start="567:18" pos:end="567:18">&amp;</operator><name pos:start="567:19" pos:end="567:30"><name pos:start="567:19" pos:end="567:19">s</name><operator pos:start="567:20" pos:end="567:21">-&gt;</operator><name pos:start="567:22" pos:end="567:30">hgain_vlc</name></name></expr></argument>, <argument pos:start="567:33" pos:end="567:33"><expr pos:start="567:33" pos:end="567:33"><literal type="number" pos:start="567:33" pos:end="567:33">9</literal></expr></argument>, <argument pos:start="567:36" pos:end="567:57"><expr pos:start="567:36" pos:end="567:57"><sizeof pos:start="567:36" pos:end="567:57">sizeof<argument_list pos:start="567:42" pos:end="567:57">(<argument pos:start="567:43" pos:end="567:56"><expr pos:start="567:43" pos:end="567:56"><name pos:start="567:43" pos:end="567:56">hgain_huffbits</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                 <argument pos:start="569:18" pos:end="569:31"><expr pos:start="569:18" pos:end="569:31"><name pos:start="569:18" pos:end="569:31">hgain_huffbits</name></expr></argument>, <argument pos:start="569:34" pos:end="569:34"><expr pos:start="569:34" pos:end="569:34"><literal type="number" pos:start="569:34" pos:end="569:34">1</literal></expr></argument>, <argument pos:start="569:37" pos:end="569:37"><expr pos:start="569:37" pos:end="569:37"><literal type="number" pos:start="569:37" pos:end="569:37">1</literal></expr></argument>,

                 <argument pos:start="571:18" pos:end="571:32"><expr pos:start="571:18" pos:end="571:32"><name pos:start="571:18" pos:end="571:32">hgain_huffcodes</name></expr></argument>, <argument pos:start="571:35" pos:end="571:35"><expr pos:start="571:35" pos:end="571:35"><literal type="number" pos:start="571:35" pos:end="571:35">2</literal></expr></argument>, <argument pos:start="571:38" pos:end="571:38"><expr pos:start="571:38" pos:end="571:38"><literal type="number" pos:start="571:38" pos:end="571:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="577:5" pos:end="589:5"><if pos:start="577:5" pos:end="585:5">if <condition pos:start="577:8" pos:end="577:23">(<expr pos:start="577:9" pos:end="577:22"><name pos:start="577:9" pos:end="577:22"><name pos:start="577:9" pos:end="577:9">s</name><operator pos:start="577:10" pos:end="577:11">-&gt;</operator><name pos:start="577:12" pos:end="577:22">use_exp_vlc</name></name></expr>)</condition> <block pos:start="577:25" pos:end="585:5">{<block_content pos:start="579:9" pos:end="583:40">

        <expr_stmt pos:start="579:9" pos:end="583:40"><expr pos:start="579:9" pos:end="583:39"><call pos:start="579:9" pos:end="583:39"><name pos:start="579:9" pos:end="579:16">init_vlc</name><argument_list pos:start="579:17" pos:end="583:39">(<argument pos:start="579:18" pos:end="579:28"><expr pos:start="579:18" pos:end="579:28"><operator pos:start="579:18" pos:end="579:18">&amp;</operator><name pos:start="579:19" pos:end="579:28"><name pos:start="579:19" pos:end="579:19">s</name><operator pos:start="579:20" pos:end="579:21">-&gt;</operator><name pos:start="579:22" pos:end="579:28">exp_vlc</name></name></expr></argument>, <argument pos:start="579:31" pos:end="579:31"><expr pos:start="579:31" pos:end="579:31"><literal type="number" pos:start="579:31" pos:end="579:31">9</literal></expr></argument>, <argument pos:start="579:34" pos:end="579:55"><expr pos:start="579:34" pos:end="579:55"><sizeof pos:start="579:34" pos:end="579:55">sizeof<argument_list pos:start="579:40" pos:end="579:55">(<argument pos:start="579:41" pos:end="579:54"><expr pos:start="579:41" pos:end="579:54"><name pos:start="579:41" pos:end="579:54">scale_huffbits</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                 <argument pos:start="581:18" pos:end="581:31"><expr pos:start="581:18" pos:end="581:31"><name pos:start="581:18" pos:end="581:31">scale_huffbits</name></expr></argument>, <argument pos:start="581:34" pos:end="581:34"><expr pos:start="581:34" pos:end="581:34"><literal type="number" pos:start="581:34" pos:end="581:34">1</literal></expr></argument>, <argument pos:start="581:37" pos:end="581:37"><expr pos:start="581:37" pos:end="581:37"><literal type="number" pos:start="581:37" pos:end="581:37">1</literal></expr></argument>,

                 <argument pos:start="583:18" pos:end="583:32"><expr pos:start="583:18" pos:end="583:32"><name pos:start="583:18" pos:end="583:32">scale_huffcodes</name></expr></argument>, <argument pos:start="583:35" pos:end="583:35"><expr pos:start="583:35" pos:end="583:35"><literal type="number" pos:start="583:35" pos:end="583:35">4</literal></expr></argument>, <argument pos:start="583:38" pos:end="583:38"><expr pos:start="583:38" pos:end="583:38"><literal type="number" pos:start="583:38" pos:end="583:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="585:7" pos:end="589:5">else <block pos:start="585:12" pos:end="589:5">{<block_content pos:start="587:9" pos:end="587:47">

        <expr_stmt pos:start="587:9" pos:end="587:47"><expr pos:start="587:9" pos:end="587:46"><call pos:start="587:9" pos:end="587:46"><name pos:start="587:9" pos:end="587:29">wma_lsp_to_curve_init</name><argument_list pos:start="587:30" pos:end="587:46">(<argument pos:start="587:31" pos:end="587:31"><expr pos:start="587:31" pos:end="587:31"><name pos:start="587:31" pos:end="587:31">s</name></expr></argument>, <argument pos:start="587:34" pos:end="587:45"><expr pos:start="587:34" pos:end="587:45"><name pos:start="587:34" pos:end="587:45"><name pos:start="587:34" pos:end="587:34">s</name><operator pos:start="587:35" pos:end="587:36">-&gt;</operator><name pos:start="587:37" pos:end="587:45">frame_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="593:5" pos:end="593:52">/* choose the VLC tables for the coefficients */</comment>

    <expr_stmt pos:start="595:5" pos:end="595:23"><expr pos:start="595:5" pos:end="595:22"><name pos:start="595:5" pos:end="595:18">coef_vlc_table</name> <operator pos:start="595:20" pos:end="595:20">=</operator> <literal type="number" pos:start="595:22" pos:end="595:22">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="597:5" pos:end="607:5"><if pos:start="597:5" pos:end="607:5">if <condition pos:start="597:8" pos:end="597:32">(<expr pos:start="597:9" pos:end="597:31"><name pos:start="597:9" pos:end="597:22"><name pos:start="597:9" pos:end="597:9">s</name><operator pos:start="597:10" pos:end="597:11">-&gt;</operator><name pos:start="597:12" pos:end="597:22">sample_rate</name></name> <operator pos:start="597:24" pos:end="597:25">&gt;=</operator> <literal type="number" pos:start="597:27" pos:end="597:31">32000</literal></expr>)</condition> <block pos:start="597:34" pos:end="607:5">{<block_content pos:start="599:9" pos:end="605:31">

        <if_stmt pos:start="599:9" pos:end="605:31"><if pos:start="599:9" pos:end="601:31">if <condition pos:start="599:12" pos:end="599:24">(<expr pos:start="599:13" pos:end="599:23"><name pos:start="599:13" pos:end="599:16">bps1</name> <operator pos:start="599:18" pos:end="599:18">&lt;</operator> <literal type="number" pos:start="599:20" pos:end="599:23">0.72</literal></expr>)</condition><block type="pseudo" pos:start="601:13" pos:end="601:31"><block_content pos:start="601:13" pos:end="601:31">

            <expr_stmt pos:start="601:13" pos:end="601:31"><expr pos:start="601:13" pos:end="601:30"><name pos:start="601:13" pos:end="601:26">coef_vlc_table</name> <operator pos:start="601:28" pos:end="601:28">=</operator> <literal type="number" pos:start="601:30" pos:end="601:30">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="603:9" pos:end="605:31">else if <condition pos:start="603:17" pos:end="603:29">(<expr pos:start="603:18" pos:end="603:28"><name pos:start="603:18" pos:end="603:21">bps1</name> <operator pos:start="603:23" pos:end="603:23">&lt;</operator> <literal type="number" pos:start="603:25" pos:end="603:28">1.16</literal></expr>)</condition><block type="pseudo" pos:start="605:13" pos:end="605:31"><block_content pos:start="605:13" pos:end="605:31">

            <expr_stmt pos:start="605:13" pos:end="605:31"><expr pos:start="605:13" pos:end="605:30"><name pos:start="605:13" pos:end="605:26">coef_vlc_table</name> <operator pos:start="605:28" pos:end="605:28">=</operator> <literal type="number" pos:start="605:30" pos:end="605:30">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="611:5" pos:end="613:50"><expr pos:start="611:5" pos:end="613:49"><call pos:start="611:5" pos:end="613:49"><name pos:start="611:5" pos:end="611:17">init_coef_vlc</name><argument_list pos:start="611:18" pos:end="613:49">(<argument pos:start="611:19" pos:end="611:33"><expr pos:start="611:19" pos:end="611:33"><operator pos:start="611:19" pos:end="611:19">&amp;</operator><name pos:start="611:20" pos:end="611:33"><name pos:start="611:20" pos:end="611:20">s</name><operator pos:start="611:21" pos:end="611:22">-&gt;</operator><name pos:start="611:23" pos:end="611:30">coef_vlc</name><index pos:start="611:31" pos:end="611:33">[<expr pos:start="611:32" pos:end="611:32"><literal type="number" pos:start="611:32" pos:end="611:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="611:36" pos:end="611:51"><expr pos:start="611:36" pos:end="611:51"><operator pos:start="611:36" pos:end="611:36">&amp;</operator><name pos:start="611:37" pos:end="611:51"><name pos:start="611:37" pos:end="611:37">s</name><operator pos:start="611:38" pos:end="611:39">-&gt;</operator><name pos:start="611:40" pos:end="611:48">run_table</name><index pos:start="611:49" pos:end="611:51">[<expr pos:start="611:50" pos:end="611:50"><literal type="number" pos:start="611:50" pos:end="611:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="611:54" pos:end="611:71"><expr pos:start="611:54" pos:end="611:71"><operator pos:start="611:54" pos:end="611:54">&amp;</operator><name pos:start="611:55" pos:end="611:71"><name pos:start="611:55" pos:end="611:55">s</name><operator pos:start="611:56" pos:end="611:57">-&gt;</operator><name pos:start="611:58" pos:end="611:68">level_table</name><index pos:start="611:69" pos:end="611:71">[<expr pos:start="611:70" pos:end="611:70"><literal type="number" pos:start="611:70" pos:end="611:70">0</literal></expr>]</index></name></expr></argument>,

                  <argument pos:start="613:19" pos:end="613:48"><expr pos:start="613:19" pos:end="613:48"><operator pos:start="613:19" pos:end="613:19">&amp;</operator><name pos:start="613:20" pos:end="613:48"><name pos:start="613:20" pos:end="613:28">coef_vlcs</name><index pos:start="613:29" pos:end="613:48">[<expr pos:start="613:30" pos:end="613:47"><name pos:start="613:30" pos:end="613:43">coef_vlc_table</name> <operator pos:start="613:45" pos:end="613:45">*</operator> <literal type="number" pos:start="613:47" pos:end="613:47">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="615:5" pos:end="617:54"><expr pos:start="615:5" pos:end="617:53"><call pos:start="615:5" pos:end="617:53"><name pos:start="615:5" pos:end="615:17">init_coef_vlc</name><argument_list pos:start="615:18" pos:end="617:53">(<argument pos:start="615:19" pos:end="615:33"><expr pos:start="615:19" pos:end="615:33"><operator pos:start="615:19" pos:end="615:19">&amp;</operator><name pos:start="615:20" pos:end="615:33"><name pos:start="615:20" pos:end="615:20">s</name><operator pos:start="615:21" pos:end="615:22">-&gt;</operator><name pos:start="615:23" pos:end="615:30">coef_vlc</name><index pos:start="615:31" pos:end="615:33">[<expr pos:start="615:32" pos:end="615:32"><literal type="number" pos:start="615:32" pos:end="615:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="615:36" pos:end="615:51"><expr pos:start="615:36" pos:end="615:51"><operator pos:start="615:36" pos:end="615:36">&amp;</operator><name pos:start="615:37" pos:end="615:51"><name pos:start="615:37" pos:end="615:37">s</name><operator pos:start="615:38" pos:end="615:39">-&gt;</operator><name pos:start="615:40" pos:end="615:48">run_table</name><index pos:start="615:49" pos:end="615:51">[<expr pos:start="615:50" pos:end="615:50"><literal type="number" pos:start="615:50" pos:end="615:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="615:54" pos:end="615:71"><expr pos:start="615:54" pos:end="615:71"><operator pos:start="615:54" pos:end="615:54">&amp;</operator><name pos:start="615:55" pos:end="615:71"><name pos:start="615:55" pos:end="615:55">s</name><operator pos:start="615:56" pos:end="615:57">-&gt;</operator><name pos:start="615:58" pos:end="615:68">level_table</name><index pos:start="615:69" pos:end="615:71">[<expr pos:start="615:70" pos:end="615:70"><literal type="number" pos:start="615:70" pos:end="615:70">1</literal></expr>]</index></name></expr></argument>,

                  <argument pos:start="617:19" pos:end="617:52"><expr pos:start="617:19" pos:end="617:52"><operator pos:start="617:19" pos:end="617:19">&amp;</operator><name pos:start="617:20" pos:end="617:52"><name pos:start="617:20" pos:end="617:28">coef_vlcs</name><index pos:start="617:29" pos:end="617:52">[<expr pos:start="617:30" pos:end="617:51"><name pos:start="617:30" pos:end="617:43">coef_vlc_table</name> <operator pos:start="617:45" pos:end="617:45">*</operator> <literal type="number" pos:start="617:47" pos:end="617:49">2</literal> <operator pos:start="617:49" pos:end="617:49">+</operator> <literal type="number" pos:start="617:51" pos:end="617:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="619:5" pos:end="619:13">return <expr pos:start="619:12" pos:end="619:12"><literal type="number" pos:start="619:12" pos:end="619:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
