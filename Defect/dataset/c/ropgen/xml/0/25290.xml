<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25290.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">sigp_restart</name><parameter_list pos:start="1:25" pos:end="1:59">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:33">CPUState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">cs</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><name pos:start="1:40" pos:end="1:54">run_on_cpu_data</name></type> <name pos:start="1:56" pos:end="1:58">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:41">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:31">= <expr pos:start="5:20" pos:end="5:31"><call pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:27">S390_CPU</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">SigpInfo</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">si</name> <init pos:start="7:18" pos:end="7:31">= <expr pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:22">arg</name><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:31">host_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:6"><decl pos:start="9:5" pos:end="13:5"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">kvm_s390_irq</name></name></type> <name pos:start="9:25" pos:end="9:27">irq</name> <init pos:start="9:29" pos:end="13:5">= <expr pos:start="9:31" pos:end="13:5"><block pos:start="9:31" pos:end="13:5">{

        <expr pos:start="11:9" pos:end="11:32"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:13">type</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:32">KVM_S390_RESTART</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="37:5">switch <condition pos:start="17:12" pos:end="17:36">(<expr pos:start="17:13" pos:end="17:35"><call pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:30">s390_cpu_get_state</name><argument_list pos:start="17:31" pos:end="17:35">(<argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:34">cpu</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:38" pos:end="37:5">{<block_content pos:start="19:5" pos:end="35:14">

    <case pos:start="19:5" pos:end="19:27">case <expr pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:26">CPU_STATE_STOPPED</name></expr>:</case>

        <comment type="block" pos:start="21:9" pos:end="21:80">/* the restart irq has to be delivered prior to any other pending irq */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><call pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:29">cpu_synchronize_state</name><argument_list pos:start="23:30" pos:end="23:33">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><call pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:28">do_restart_interrupt</name><argument_list pos:start="25:29" pos:end="25:39">(<argument pos:start="25:30" pos:end="25:38"><expr pos:start="25:30" pos:end="25:38"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:33">cpu</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:38">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><call pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:26">s390_cpu_set_state</name><argument_list pos:start="27:27" pos:end="27:52">(<argument pos:start="27:28" pos:end="27:46"><expr pos:start="27:28" pos:end="27:46"><name pos:start="27:28" pos:end="27:46">CPU_STATE_OPERATING</name></expr></argument>, <argument pos:start="27:49" pos:end="27:51"><expr pos:start="27:49" pos:end="27:51"><name pos:start="27:49" pos:end="27:51">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:29">case <expr pos:start="31:10" pos:end="31:28"><name pos:start="31:10" pos:end="31:28">CPU_STATE_OPERATING</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:31">kvm_s390_vcpu_interrupt</name><argument_list pos:start="33:32" pos:end="33:42">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">cpu</name></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:41">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:6">si</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:10">cc</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:40">SIGP_CC_ORDER_CODE_ACCEPTED</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
