<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2194.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">vhdx_parse_log</name><parameter_list pos:start="1:26" pos:end="1:65">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:61">BDRVVHDXState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VHDXHeader</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">hdr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:7">hdr</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:36"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:20">headers</name><index pos:start="13:21" pos:end="13:36">[<expr pos:start="13:22" pos:end="13:35"><name pos:start="13:22" pos:end="13:35"><name pos:start="13:22" pos:end="13:22">s</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:35">curr_header</name></name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="19:38">/* either the log guid, or log length is zero,

     * then a replay log is present */</comment>

    <for pos:start="21:5" pos:end="25:5">for <control pos:start="21:9" pos:end="21:53">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:48"><expr pos:start="21:17" pos:end="21:47"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <sizeof pos:start="21:21" pos:end="21:47">sizeof<argument_list pos:start="21:27" pos:end="21:47">(<argument pos:start="21:28" pos:end="21:46"><expr pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:30">hdr</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:40">log_guid</name><operator pos:start="21:41" pos:end="21:41">.</operator><name pos:start="21:42" pos:end="21:46">data4</name></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="21:50" pos:end="21:52"><expr pos:start="21:50" pos:end="21:52"><name pos:start="21:50" pos:end="21:50">i</name><operator pos:start="21:51" pos:end="21:52">++</operator></expr></incr>)</control> <block pos:start="21:55" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:38">

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:14">|=</operator> <name pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:18">hdr</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:28">log_guid</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:34">data4</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="33:17">(<expr pos:start="27:9" pos:end="33:16"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">hdr</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:21">log_guid</name><operator pos:start="27:22" pos:end="27:22">.</operator><name pos:start="27:23" pos:end="27:27">data1</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal> <operator pos:start="27:34" pos:end="27:35">&amp;&amp;</operator>

        <name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:11">hdr</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:21">log_guid</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:27">data2</name></name> <operator pos:start="29:29" pos:end="29:30">==</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal> <operator pos:start="29:34" pos:end="29:35">&amp;&amp;</operator>

        <name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:11">hdr</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:21">log_guid</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:27">data3</name></name> <operator pos:start="31:29" pos:end="31:30">==</operator> <literal type="number" pos:start="31:32" pos:end="31:32">0</literal> <operator pos:start="31:34" pos:end="31:35">&amp;&amp;</operator>

        <name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:14">==</operator> <literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>)</condition> <block pos:start="33:19" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:54">/* per spec, only log version of 0 is supported */</comment>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:11">hdr</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:24">log_version</name></name> <operator pos:start="43:26" pos:end="43:27">!=</operator> <literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>)</condition> <block pos:start="43:32" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">-</operator><name pos:start="45:16" pos:end="45:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:18">goto <name pos:start="47:14" pos:end="47:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:29">(<expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:11">hdr</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:23">log_length</name></name> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr>)</condition> <block pos:start="53:31" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:64">/* We currently do not support images with logs to replay */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:19"><expr pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <operator pos:start="63:11" pos:end="63:11">-</operator><name pos:start="63:12" pos:end="63:18">ENOTSUP</name></expr>;</expr_stmt>



<label pos:start="67:1" pos:end="67:5"><name pos:start="67:1" pos:end="67:4">exit</name>:</label>

    <return pos:start="69:5" pos:end="69:15">return <expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
