<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8761.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ioinst_handle_sal</name><parameter_list pos:start="1:23" pos:end="1:51">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">S390CPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">uint64_t</name></type> <name pos:start="1:47" pos:end="1:50">reg1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="7:5" pos:end="11:5">

    <comment type="block" pos:start="5:5" pos:end="5:73">/* We do not provide address limit checking, so let's suppress it. */</comment>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:60">(<expr pos:start="7:9" pos:end="7:59"><call pos:start="7:9" pos:end="7:30"><name pos:start="7:9" pos:end="7:24">SAL_REG1_INVALID</name><argument_list pos:start="7:25" pos:end="7:30">(<argument pos:start="7:26" pos:end="7:29"><expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">reg1</name></expr></argument>)</argument_list></call> <operator pos:start="7:32" pos:end="7:33">||</operator> <name pos:start="7:35" pos:end="7:38">reg1</name> <operator pos:start="7:40" pos:end="7:40">&amp;</operator> <literal type="number" pos:start="7:42" pos:end="7:59">0x000000000000ffff</literal></expr>)</condition> <block pos:start="7:62" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:53">

        <expr_stmt pos:start="9:9" pos:end="9:53"><expr pos:start="9:9" pos:end="9:52"><call pos:start="9:9" pos:end="9:52"><name pos:start="9:9" pos:end="9:25">program_interrupt</name><argument_list pos:start="9:26" pos:end="9:52">(<argument pos:start="9:27" pos:end="9:35"><expr pos:start="9:27" pos:end="9:35"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:35"><name pos:start="9:28" pos:end="9:30">cpu</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:35">env</name></name></expr></argument>, <argument pos:start="9:38" pos:end="9:48"><expr pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:48">PGM_OPERAND</name></expr></argument>, <argument pos:start="9:51" pos:end="9:51"><expr pos:start="9:51" pos:end="9:51"><literal type="number" pos:start="9:51" pos:end="9:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
