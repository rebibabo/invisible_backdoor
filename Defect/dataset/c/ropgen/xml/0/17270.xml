<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17270.c" pos:tabs="8"><function pos:start="1:1" pos:end="361:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">mlp_parse</name><parameter_list pos:start="1:21" pos:end="7:54">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:42"><decl pos:start="3:22" pos:end="3:42"><type pos:start="3:22" pos:end="3:42"><name pos:start="3:22" pos:end="3:35">AVCodecContext</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">avctx</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:44"><decl pos:start="5:22" pos:end="5:44"><type pos:start="5:22" pos:end="5:44"><specifier pos:start="5:22" pos:end="5:26">const</specifier> <name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier><modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:44">poutbuf</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:63"><decl pos:start="5:47" pos:end="5:63"><type pos:start="5:47" pos:end="5:63"><name pos:start="5:47" pos:end="5:49">int</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:63">poutbuf_size</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><specifier pos:start="7:22" pos:end="7:26">const</specifier> <name pos:start="7:28" pos:end="7:34">uint8_t</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:39">buf</name></decl></parameter>, <parameter pos:start="7:42" pos:end="7:53"><decl pos:start="7:42" pos:end="7:53"><type pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:44">int</name></type> <name pos:start="7:46" pos:end="7:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="361:1">{<block_content pos:start="11:5" pos:end="359:13">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">MLPParseContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">mp</name> <init pos:start="11:25" pos:end="11:38">= <expr pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">sync_present</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:23">parity_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:16"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">p</name> <init pos:start="19:14" pos:end="19:16">= <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:17">poutbuf_size</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16">buf_size</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="77:5"><if pos:start="31:5" pos:end="77:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:11">mp</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:20">in_sync</name></name></expr>)</condition> <block pos:start="31:23" pos:end="77:5">{<block_content pos:start="37:9" pos:end="75:21">

        <comment type="line" pos:start="33:9" pos:end="33:49">// Not in sync - find a major sync header</comment>



        <for pos:start="37:9" pos:end="55:9">for <control pos:start="37:13" pos:end="37:38">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:33"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:32">buf_size</name></expr>;</condition> <incr pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><name pos:start="37:35" pos:end="37:35">i</name><operator pos:start="37:36" pos:end="37:37">++</operator></expr></incr>)</control> <block pos:start="37:40" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:13">

            <expr_stmt pos:start="39:13" pos:end="39:56"><expr pos:start="39:13" pos:end="39:55"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">mp</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">pc</name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:24">state</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <operator pos:start="39:28" pos:end="39:28">(</operator><name pos:start="39:29" pos:end="39:40"><name pos:start="39:29" pos:end="39:30">mp</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:34">pc</name><operator pos:start="39:35" pos:end="39:35">.</operator><name pos:start="39:36" pos:end="39:40">state</name></name> <operator pos:start="39:42" pos:end="39:43">&lt;&lt;</operator> <literal type="number" pos:start="39:45" pos:end="39:45">8</literal><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">|</operator> <name pos:start="39:50" pos:end="39:55"><name pos:start="39:50" pos:end="39:52">buf</name><index pos:start="39:53" pos:end="39:55">[<expr pos:start="39:54" pos:end="39:54"><name pos:start="39:54" pos:end="39:54">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="53:13"><if pos:start="41:13" pos:end="53:13">if <condition pos:start="41:16" pos:end="45:38">(<expr pos:start="41:17" pos:end="45:37"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:29"><name pos:start="41:18" pos:end="41:19">mp</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pc</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:29">state</name></name> <operator pos:start="41:31" pos:end="41:31">&amp;</operator> <literal type="number" pos:start="41:33" pos:end="41:42">0xfffffffe</literal><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:46">==</operator> <literal type="number" pos:start="41:48" pos:end="41:57">0xf8726fba</literal> <operator pos:start="41:59" pos:end="41:60">&amp;&amp;</operator>

                <comment type="line" pos:start="43:17" pos:end="43:76">// ignore if we do not have the data for the start of header</comment>

                <name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:18">mp</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:22">pc</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:28">index</name></name> <operator pos:start="45:30" pos:end="45:30">+</operator> <name pos:start="45:32" pos:end="45:32">i</name> <operator pos:start="45:34" pos:end="45:35">&gt;=</operator> <literal type="number" pos:start="45:37" pos:end="45:37">7</literal></expr>)</condition> <block pos:start="45:40" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:22">

                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:18">mp</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:27">in_sync</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:35"><expr pos:start="49:17" pos:end="49:34"><name pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:18">mp</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:30">bytes_left</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>;</expr_stmt>

                <break pos:start="51:17" pos:end="51:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:25">(<expr pos:start="59:13" pos:end="59:24"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:24"><name pos:start="59:14" pos:end="59:15">mp</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:24">in_sync</name></name></expr>)</condition> <block pos:start="59:27" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:28">

            <if_stmt pos:start="61:13" pos:end="63:75"><if pos:start="61:13" pos:end="63:75">if <condition pos:start="61:16" pos:end="61:80">(<expr pos:start="61:17" pos:end="61:79"><call pos:start="61:17" pos:end="61:73"><name pos:start="61:17" pos:end="61:32">ff_combine_frame</name><argument_list pos:start="61:33" pos:end="61:73">(<argument pos:start="61:34" pos:end="61:40"><expr pos:start="61:34" pos:end="61:40"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:40"><name pos:start="61:35" pos:end="61:36">mp</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:40">pc</name></name></expr></argument>, <argument pos:start="61:43" pos:end="61:55"><expr pos:start="61:43" pos:end="61:55"><name pos:start="61:43" pos:end="61:55">END_NOT_FOUND</name></expr></argument>, <argument pos:start="61:58" pos:end="61:61"><expr pos:start="61:58" pos:end="61:61"><operator pos:start="61:58" pos:end="61:58">&amp;</operator><name pos:start="61:59" pos:end="61:61">buf</name></expr></argument>, <argument pos:start="61:64" pos:end="61:72"><expr pos:start="61:64" pos:end="61:72"><operator pos:start="61:64" pos:end="61:64">&amp;</operator><name pos:start="61:65" pos:end="61:72">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="61:75" pos:end="61:76">!=</operator> <operator pos:start="61:78" pos:end="61:78">-</operator><literal type="number" pos:start="61:79" pos:end="61:79">1</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:75"><block_content pos:start="63:17" pos:end="63:75">

                <expr_stmt pos:start="63:17" pos:end="63:75"><expr pos:start="63:17" pos:end="63:74"><call pos:start="63:17" pos:end="63:74"><name pos:start="63:17" pos:end="63:22">av_log</name><argument_list pos:start="63:23" pos:end="63:74">(<argument pos:start="63:24" pos:end="63:28"><expr pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:28">avctx</name></expr></argument>, <argument pos:start="63:31" pos:end="63:44"><expr pos:start="63:31" pos:end="63:44"><name pos:start="63:31" pos:end="63:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="63:47" pos:end="63:73"><expr pos:start="63:47" pos:end="63:73"><literal type="string" pos:start="63:47" pos:end="63:73">"ff_combine_frame failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="65:13" pos:end="65:28">return <expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:58"><expr pos:start="71:9" pos:end="71:57"><call pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:24">ff_combine_frame</name><argument_list pos:start="71:25" pos:end="71:57">(<argument pos:start="71:26" pos:end="71:32"><expr pos:start="71:26" pos:end="71:32"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:28">mp</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:32">pc</name></name></expr></argument>, <argument pos:start="71:35" pos:end="71:39"><expr pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:35">i</name> <operator pos:start="71:37" pos:end="71:37">-</operator> <literal type="number" pos:start="71:39" pos:end="71:39">7</literal></expr></argument>, <argument pos:start="71:42" pos:end="71:45"><expr pos:start="71:42" pos:end="71:45"><operator pos:start="71:42" pos:end="71:42">&amp;</operator><name pos:start="71:43" pos:end="71:45">buf</name></expr></argument>, <argument pos:start="71:48" pos:end="71:56"><expr pos:start="71:48" pos:end="71:56"><operator pos:start="71:48" pos:end="71:48">&amp;</operator><name pos:start="71:49" pos:end="71:56">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="75:9" pos:end="75:21">return <expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:16">i</name> <operator pos:start="75:18" pos:end="75:18">-</operator> <literal type="number" pos:start="75:20" pos:end="75:20">7</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="123:5"><if pos:start="81:5" pos:end="123:5">if <condition pos:start="81:8" pos:end="81:28">(<expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:10">mp</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:22">bytes_left</name></name> <operator pos:start="81:24" pos:end="81:25">==</operator> <literal type="number" pos:start="81:27" pos:end="81:27">0</literal></expr>)</condition> <block pos:start="81:30" pos:end="123:5">{<block_content pos:start="89:9" pos:end="121:39">

        <comment type="line" pos:start="83:9" pos:end="83:37">// Find length of this packet</comment>



        <comment type="block" pos:start="87:9" pos:end="87:62">/* Copy overread bytes from last frame into buffer. */</comment>

        <for pos:start="89:9" pos:end="93:9">for<control pos:start="89:12" pos:end="89:51">(<init pos:start="89:13" pos:end="89:13">;</init> <condition pos:start="89:15" pos:end="89:32"><expr pos:start="89:15" pos:end="89:31"><name pos:start="89:15" pos:end="89:29"><name pos:start="89:15" pos:end="89:16">mp</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:20">pc</name><operator pos:start="89:21" pos:end="89:21">.</operator><name pos:start="89:22" pos:end="89:29">overread</name></name><operator pos:start="89:30" pos:end="89:30">&gt;</operator><literal type="number" pos:start="89:31" pos:end="89:31">0</literal></expr>;</condition> <incr pos:start="89:34" pos:end="89:50"><expr pos:start="89:34" pos:end="89:50"><name pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:35">mp</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:39">pc</name><operator pos:start="89:40" pos:end="89:40">.</operator><name pos:start="89:41" pos:end="89:48">overread</name></name><operator pos:start="89:49" pos:end="89:50">--</operator></expr></incr>)</control> <block pos:start="89:53" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:82">

            <expr_stmt pos:start="91:13" pos:end="91:82"><expr pos:start="91:13" pos:end="91:81"><name pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:14">mp</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:18">pc</name><operator pos:start="91:19" pos:end="91:19">.</operator><name pos:start="91:20" pos:end="91:25">buffer</name><index pos:start="91:26" pos:end="91:41">[<expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:28">mp</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:32">pc</name><operator pos:start="91:33" pos:end="91:33">.</operator><name pos:start="91:34" pos:end="91:38">index</name></name><operator pos:start="91:39" pos:end="91:40">++</operator></expr>]</index></name><operator pos:start="91:42" pos:end="91:42">=</operator> <name pos:start="91:44" pos:end="91:81"><name pos:start="91:44" pos:end="91:45">mp</name><operator pos:start="91:46" pos:end="91:47">-&gt;</operator><name pos:start="91:48" pos:end="91:49">pc</name><operator pos:start="91:50" pos:end="91:50">.</operator><name pos:start="91:51" pos:end="91:56">buffer</name><index pos:start="91:57" pos:end="91:81">[<expr pos:start="91:58" pos:end="91:80"><name pos:start="91:58" pos:end="91:78"><name pos:start="91:58" pos:end="91:59">mp</name><operator pos:start="91:60" pos:end="91:61">-&gt;</operator><name pos:start="91:62" pos:end="91:63">pc</name><operator pos:start="91:64" pos:end="91:64">.</operator><name pos:start="91:65" pos:end="91:78">overread_index</name></name><operator pos:start="91:79" pos:end="91:80">++</operator></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="97:9" pos:end="105:9"><if pos:start="97:9" pos:end="105:9">if <condition pos:start="97:12" pos:end="97:40">(<expr pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:14">mp</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:18">pc</name><operator pos:start="97:19" pos:end="97:19">.</operator><name pos:start="97:20" pos:end="97:24">index</name></name> <operator pos:start="97:26" pos:end="97:26">+</operator> <name pos:start="97:28" pos:end="97:35">buf_size</name> <operator pos:start="97:37" pos:end="97:37">&lt;</operator> <literal type="number" pos:start="97:39" pos:end="97:39">2</literal></expr>)</condition> <block pos:start="97:42" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:28">

            <if_stmt pos:start="99:13" pos:end="101:75"><if pos:start="99:13" pos:end="101:75">if <condition pos:start="99:16" pos:end="99:80">(<expr pos:start="99:17" pos:end="99:79"><call pos:start="99:17" pos:end="99:73"><name pos:start="99:17" pos:end="99:32">ff_combine_frame</name><argument_list pos:start="99:33" pos:end="99:73">(<argument pos:start="99:34" pos:end="99:40"><expr pos:start="99:34" pos:end="99:40"><operator pos:start="99:34" pos:end="99:34">&amp;</operator><name pos:start="99:35" pos:end="99:40"><name pos:start="99:35" pos:end="99:36">mp</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:40">pc</name></name></expr></argument>, <argument pos:start="99:43" pos:end="99:55"><expr pos:start="99:43" pos:end="99:55"><name pos:start="99:43" pos:end="99:55">END_NOT_FOUND</name></expr></argument>, <argument pos:start="99:58" pos:end="99:61"><expr pos:start="99:58" pos:end="99:61"><operator pos:start="99:58" pos:end="99:58">&amp;</operator><name pos:start="99:59" pos:end="99:61">buf</name></expr></argument>, <argument pos:start="99:64" pos:end="99:72"><expr pos:start="99:64" pos:end="99:72"><operator pos:start="99:64" pos:end="99:64">&amp;</operator><name pos:start="99:65" pos:end="99:72">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="99:75" pos:end="99:76">!=</operator> <operator pos:start="99:78" pos:end="99:78">-</operator><literal type="number" pos:start="99:79" pos:end="99:79">1</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:75"><block_content pos:start="101:17" pos:end="101:75">

                <expr_stmt pos:start="101:17" pos:end="101:75"><expr pos:start="101:17" pos:end="101:74"><call pos:start="101:17" pos:end="101:74"><name pos:start="101:17" pos:end="101:22">av_log</name><argument_list pos:start="101:23" pos:end="101:74">(<argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28">avctx</name></expr></argument>, <argument pos:start="101:31" pos:end="101:44"><expr pos:start="101:31" pos:end="101:44"><name pos:start="101:31" pos:end="101:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="101:47" pos:end="101:73"><expr pos:start="101:47" pos:end="101:73"><literal type="string" pos:start="101:47" pos:end="101:73">"ff_combine_frame failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="103:13" pos:end="103:28">return <expr pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="109:9" pos:end="111:86"><expr pos:start="109:9" pos:end="111:85"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:10">mp</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:22">bytes_left</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <operator pos:start="109:26" pos:end="109:26">(</operator><operator pos:start="109:27" pos:end="109:27">(</operator><ternary pos:start="109:28" pos:end="109:71"><condition pos:start="109:28" pos:end="109:45"><expr pos:start="109:28" pos:end="109:43"><name pos:start="109:28" pos:end="109:39"><name pos:start="109:28" pos:end="109:29">mp</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:33">pc</name><operator pos:start="109:34" pos:end="109:34">.</operator><name pos:start="109:35" pos:end="109:39">index</name></name> <operator pos:start="109:41" pos:end="109:41">&gt;</operator> <literal type="number" pos:start="109:43" pos:end="109:43">0</literal></expr> ?</condition><then pos:start="109:47" pos:end="109:62"> <expr pos:start="109:47" pos:end="109:62"><name pos:start="109:47" pos:end="109:62"><name pos:start="109:47" pos:end="109:48">mp</name><operator pos:start="109:49" pos:end="109:50">-&gt;</operator><name pos:start="109:51" pos:end="109:52">pc</name><operator pos:start="109:53" pos:end="109:53">.</operator><name pos:start="109:54" pos:end="109:59">buffer</name><index pos:start="109:60" pos:end="109:62">[<expr pos:start="109:61" pos:end="109:61"><literal type="number" pos:start="109:61" pos:end="109:61">0</literal></expr>]</index></name></expr> </then><else pos:start="109:64" pos:end="109:71">: <expr pos:start="109:66" pos:end="109:71"><name pos:start="109:66" pos:end="109:71"><name pos:start="109:66" pos:end="109:68">buf</name><index pos:start="109:69" pos:end="109:71">[<expr pos:start="109:70" pos:end="109:70"><literal type="number" pos:start="109:70" pos:end="109:70">0</literal></expr>]</index></name></expr></else></ternary><operator pos:start="109:72" pos:end="109:72">)</operator> <operator pos:start="109:74" pos:end="109:75">&lt;&lt;</operator> <literal type="number" pos:start="109:77" pos:end="109:77">8</literal><operator pos:start="109:78" pos:end="109:78">)</operator>

                       <operator pos:start="111:24" pos:end="111:24">|</operator>  <operator pos:start="111:27" pos:end="111:27">(</operator><ternary pos:start="111:28" pos:end="111:84"><condition pos:start="111:28" pos:end="111:45"><expr pos:start="111:28" pos:end="111:43"><name pos:start="111:28" pos:end="111:39"><name pos:start="111:28" pos:end="111:29">mp</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:33">pc</name><operator pos:start="111:34" pos:end="111:34">.</operator><name pos:start="111:35" pos:end="111:39">index</name></name> <operator pos:start="111:41" pos:end="111:41">&gt;</operator> <literal type="number" pos:start="111:43" pos:end="111:43">1</literal></expr> ?</condition><then pos:start="111:47" pos:end="111:62"> <expr pos:start="111:47" pos:end="111:62"><name pos:start="111:47" pos:end="111:62"><name pos:start="111:47" pos:end="111:48">mp</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:52">pc</name><operator pos:start="111:53" pos:end="111:53">.</operator><name pos:start="111:54" pos:end="111:59">buffer</name><index pos:start="111:60" pos:end="111:62">[<expr pos:start="111:61" pos:end="111:61"><literal type="number" pos:start="111:61" pos:end="111:61">1</literal></expr>]</index></name></expr> </then><else pos:start="111:64" pos:end="111:84">: <expr pos:start="111:66" pos:end="111:84"><name pos:start="111:66" pos:end="111:84"><name pos:start="111:66" pos:end="111:68">buf</name><index pos:start="111:69" pos:end="111:84">[<expr pos:start="111:70" pos:end="111:83"><literal type="number" pos:start="111:70" pos:end="111:71">1</literal><operator pos:start="111:71" pos:end="111:71">-</operator><name pos:start="111:72" pos:end="111:83"><name pos:start="111:72" pos:end="111:73">mp</name><operator pos:start="111:74" pos:end="111:75">-&gt;</operator><name pos:start="111:76" pos:end="111:77">pc</name><operator pos:start="111:78" pos:end="111:78">.</operator><name pos:start="111:79" pos:end="111:83">index</name></name></expr>]</index></name></expr></else></ternary><operator pos:start="111:85" pos:end="111:85">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:54"><expr pos:start="113:9" pos:end="113:53"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:10">mp</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:22">bytes_left</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">(</operator><name pos:start="113:27" pos:end="113:40"><name pos:start="113:27" pos:end="113:28">mp</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:40">bytes_left</name></name> <operator pos:start="113:42" pos:end="113:42">&amp;</operator> <literal type="number" pos:start="113:44" pos:end="113:48">0xfff</literal><operator pos:start="113:49" pos:end="113:49">)</operator> <operator pos:start="113:51" pos:end="113:51">*</operator> <literal type="number" pos:start="113:53" pos:end="113:53">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:32">(<expr pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:14">mp</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:26">bytes_left</name></name> <operator pos:start="115:28" pos:end="115:29">&lt;=</operator> <literal type="number" pos:start="115:31" pos:end="115:31">0</literal></expr>)</condition> <block pos:start="115:34" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:27"> <comment type="line" pos:start="115:36" pos:end="115:59">// prevent infinite loop</comment>

            <goto pos:start="117:13" pos:end="117:27">goto <name pos:start="117:18" pos:end="117:26">lost_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:10">mp</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:22">bytes_left</name></name> <operator pos:start="121:24" pos:end="121:25">-=</operator> <name pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:28">mp</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:32">pc</name><operator pos:start="121:33" pos:end="121:33">.</operator><name pos:start="121:34" pos:end="121:38">index</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:72"><expr pos:start="127:5" pos:end="127:71"><name pos:start="127:5" pos:end="127:8">next</name> <operator pos:start="127:10" pos:end="127:10">=</operator> <ternary pos:start="127:12" pos:end="127:71"><condition pos:start="127:12" pos:end="127:40"><expr pos:start="127:12" pos:end="127:38"><operator pos:start="127:12" pos:end="127:12">(</operator><name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:14">mp</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:26">bytes_left</name></name> <operator pos:start="127:28" pos:end="127:28">&gt;</operator> <name pos:start="127:30" pos:end="127:37">buf_size</name><operator pos:start="127:38" pos:end="127:38">)</operator></expr> ?</condition><then pos:start="127:42" pos:end="127:54"> <expr pos:start="127:42" pos:end="127:54"><name pos:start="127:42" pos:end="127:54">END_NOT_FOUND</name></expr> </then><else pos:start="127:56" pos:end="127:71">: <expr pos:start="127:58" pos:end="127:71"><name pos:start="127:58" pos:end="127:71"><name pos:start="127:58" pos:end="127:59">mp</name><operator pos:start="127:60" pos:end="127:61">-&gt;</operator><name pos:start="127:62" pos:end="127:71">bytes_left</name></name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="137:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:61">(<expr pos:start="131:9" pos:end="131:60"><call pos:start="131:9" pos:end="131:56"><name pos:start="131:9" pos:end="131:24">ff_combine_frame</name><argument_list pos:start="131:25" pos:end="131:56">(<argument pos:start="131:26" pos:end="131:32"><expr pos:start="131:26" pos:end="131:32"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:32"><name pos:start="131:27" pos:end="131:28">mp</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:32">pc</name></name></expr></argument>, <argument pos:start="131:35" pos:end="131:38"><expr pos:start="131:35" pos:end="131:38"><name pos:start="131:35" pos:end="131:38">next</name></expr></argument>, <argument pos:start="131:41" pos:end="131:44"><expr pos:start="131:41" pos:end="131:44"><operator pos:start="131:41" pos:end="131:41">&amp;</operator><name pos:start="131:42" pos:end="131:44">buf</name></expr></argument>, <argument pos:start="131:47" pos:end="131:55"><expr pos:start="131:47" pos:end="131:55"><operator pos:start="131:47" pos:end="131:47">&amp;</operator><name pos:start="131:48" pos:end="131:55">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="131:58" pos:end="131:58">&lt;</operator> <literal type="number" pos:start="131:60" pos:end="131:60">0</literal></expr>)</condition> <block pos:start="131:63" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:24">

        <expr_stmt pos:start="133:9" pos:end="133:35"><expr pos:start="133:9" pos:end="133:34"><name pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:10">mp</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:22">bytes_left</name></name> <operator pos:start="133:24" pos:end="133:25">-=</operator> <name pos:start="133:27" pos:end="133:34">buf_size</name></expr>;</expr_stmt>

        <return pos:start="135:9" pos:end="135:24">return <expr pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:23"><expr pos:start="141:5" pos:end="141:22"><name pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:6">mp</name><operator pos:start="141:7" pos:end="141:8">-&gt;</operator><name pos:start="141:9" pos:end="141:18">bytes_left</name></name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:65"><expr pos:start="145:5" pos:end="145:64"><name pos:start="145:5" pos:end="145:16">sync_present</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <operator pos:start="145:20" pos:end="145:20">(</operator><call pos:start="145:21" pos:end="145:36"><name pos:start="145:21" pos:end="145:27">AV_RB32</name><argument_list pos:start="145:28" pos:end="145:36">(<argument pos:start="145:29" pos:end="145:35"><expr pos:start="145:29" pos:end="145:35"><name pos:start="145:29" pos:end="145:31">buf</name> <operator pos:start="145:33" pos:end="145:33">+</operator> <literal type="number" pos:start="145:35" pos:end="145:35">4</literal></expr></argument>)</argument_list></call> <operator pos:start="145:38" pos:end="145:38">&amp;</operator> <literal type="number" pos:start="145:40" pos:end="145:49">0xfffffffe</literal><operator pos:start="145:50" pos:end="145:50">)</operator> <operator pos:start="145:52" pos:end="145:53">==</operator> <literal type="number" pos:start="145:55" pos:end="145:64">0xf8726fba</literal></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="341:5"><if pos:start="149:5" pos:end="189:5">if <condition pos:start="149:8" pos:end="149:22">(<expr pos:start="149:9" pos:end="149:21"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:21">sync_present</name></expr>)</condition> <block pos:start="149:24" pos:end="189:5">{<block_content pos:start="159:9" pos:end="187:9">

        <comment type="block" pos:start="151:9" pos:end="153:76">/* The first nibble of a frame is a parity check of the 4-byte

         * access unit header and all the 2- or 4-byte substream headers. */</comment>

        <comment type="line" pos:start="155:9" pos:end="155:75">// Only check when this isn't a sync frame - syncs have a checksum.</comment>



        <expr_stmt pos:start="159:9" pos:end="159:24"><expr pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:19">parity_bits</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <literal type="number" pos:start="159:23" pos:end="159:23">0</literal></expr>;</expr_stmt>

        <for pos:start="161:9" pos:end="177:9">for <control pos:start="161:13" pos:end="161:49">(<init pos:start="161:14" pos:end="161:20"><expr pos:start="161:14" pos:end="161:19"><name pos:start="161:14" pos:end="161:14">i</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <operator pos:start="161:18" pos:end="161:18">-</operator><literal type="number" pos:start="161:19" pos:end="161:19">1</literal></expr>;</init> <condition pos:start="161:22" pos:end="161:44"><expr pos:start="161:22" pos:end="161:43"><name pos:start="161:22" pos:end="161:22">i</name> <operator pos:start="161:24" pos:end="161:24">&lt;</operator> <name pos:start="161:26" pos:end="161:43"><name pos:start="161:26" pos:end="161:27">mp</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:43">num_substreams</name></name></expr>;</condition> <incr pos:start="161:46" pos:end="161:48"><expr pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:46">i</name><operator pos:start="161:47" pos:end="161:48">++</operator></expr></incr>)</control> <block pos:start="161:51" pos:end="177:9">{<block_content pos:start="163:13" pos:end="175:13">

            <expr_stmt pos:start="163:13" pos:end="163:36"><expr pos:start="163:13" pos:end="163:35"><name pos:start="163:13" pos:end="163:23">parity_bits</name> <operator pos:start="163:25" pos:end="163:26">^=</operator> <name pos:start="163:28" pos:end="163:35"><name pos:start="163:28" pos:end="163:30">buf</name><index pos:start="163:31" pos:end="163:35">[<expr pos:start="163:32" pos:end="163:34"><name pos:start="163:32" pos:end="163:32">p</name><operator pos:start="163:33" pos:end="163:34">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:36"><expr pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:23">parity_bits</name> <operator pos:start="165:25" pos:end="165:26">^=</operator> <name pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:30">buf</name><index pos:start="165:31" pos:end="165:35">[<expr pos:start="165:32" pos:end="165:34"><name pos:start="165:32" pos:end="165:32">p</name><operator pos:start="165:33" pos:end="165:34">++</operator></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="169:13" pos:end="175:13"><if pos:start="169:13" pos:end="175:13">if <condition pos:start="169:16" pos:end="169:41">(<expr pos:start="169:17" pos:end="169:40"><name pos:start="169:17" pos:end="169:17">i</name> <operator pos:start="169:19" pos:end="169:19">&lt;</operator> <literal type="number" pos:start="169:21" pos:end="169:21">0</literal> <operator pos:start="169:23" pos:end="169:24">||</operator> <name pos:start="169:26" pos:end="169:33"><name pos:start="169:26" pos:end="169:28">buf</name><index pos:start="169:29" pos:end="169:33">[<expr pos:start="169:30" pos:end="169:32"><name pos:start="169:30" pos:end="169:30">p</name><operator pos:start="169:31" pos:end="169:31">-</operator><literal type="number" pos:start="169:32" pos:end="169:32">2</literal></expr>]</index></name> <operator pos:start="169:35" pos:end="169:35">&amp;</operator> <literal type="number" pos:start="169:37" pos:end="169:40">0x80</literal></expr>)</condition> <block pos:start="169:43" pos:end="175:13">{<block_content pos:start="171:17" pos:end="173:40">

                <expr_stmt pos:start="171:17" pos:end="171:40"><expr pos:start="171:17" pos:end="171:39"><name pos:start="171:17" pos:end="171:27">parity_bits</name> <operator pos:start="171:29" pos:end="171:30">^=</operator> <name pos:start="171:32" pos:end="171:39"><name pos:start="171:32" pos:end="171:34">buf</name><index pos:start="171:35" pos:end="171:39">[<expr pos:start="171:36" pos:end="171:38"><name pos:start="171:36" pos:end="171:36">p</name><operator pos:start="171:37" pos:end="171:38">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:40"><expr pos:start="173:17" pos:end="173:39"><name pos:start="173:17" pos:end="173:27">parity_bits</name> <operator pos:start="173:29" pos:end="173:30">^=</operator> <name pos:start="173:32" pos:end="173:39"><name pos:start="173:32" pos:end="173:34">buf</name><index pos:start="173:35" pos:end="173:39">[<expr pos:start="173:36" pos:end="173:38"><name pos:start="173:36" pos:end="173:36">p</name><operator pos:start="173:37" pos:end="173:38">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="181:9" pos:end="187:9"><if pos:start="181:9" pos:end="187:9">if <condition pos:start="181:12" pos:end="181:62">(<expr pos:start="181:13" pos:end="181:61"><operator pos:start="181:13" pos:end="181:13">(</operator><operator pos:start="181:14" pos:end="181:14">(</operator><operator pos:start="181:15" pos:end="181:15">(</operator><name pos:start="181:16" pos:end="181:26">parity_bits</name> <operator pos:start="181:28" pos:end="181:29">&gt;&gt;</operator> <literal type="number" pos:start="181:31" pos:end="181:31">4</literal><operator pos:start="181:32" pos:end="181:32">)</operator> <operator pos:start="181:34" pos:end="181:34">^</operator> <name pos:start="181:36" pos:end="181:46">parity_bits</name><operator pos:start="181:47" pos:end="181:47">)</operator> <operator pos:start="181:49" pos:end="181:49">&amp;</operator> <literal type="number" pos:start="181:51" pos:end="181:53">0xF</literal><operator pos:start="181:54" pos:end="181:54">)</operator> <operator pos:start="181:56" pos:end="181:57">!=</operator> <literal type="number" pos:start="181:59" pos:end="181:61">0xF</literal></expr>)</condition> <block pos:start="181:64" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:27">

            <expr_stmt pos:start="183:13" pos:end="183:75"><expr pos:start="183:13" pos:end="183:74"><call pos:start="183:13" pos:end="183:74"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:74">(<argument pos:start="183:20" pos:end="183:24"><expr pos:start="183:20" pos:end="183:24"><name pos:start="183:20" pos:end="183:24">avctx</name></expr></argument>, <argument pos:start="183:27" pos:end="183:37"><expr pos:start="183:27" pos:end="183:37"><name pos:start="183:27" pos:end="183:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="183:40" pos:end="183:73"><expr pos:start="183:40" pos:end="183:73"><literal type="string" pos:start="183:40" pos:end="183:73">"mlpparse: Parity check failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="185:13" pos:end="185:27">goto <name pos:start="185:18" pos:end="185:26">lost_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="341:5">else <block pos:start="189:12" pos:end="341:5">{<block_content pos:start="191:9" pos:end="339:47">

        <decl_stmt pos:start="191:9" pos:end="191:25"><decl pos:start="191:9" pos:end="191:24"><type pos:start="191:9" pos:end="191:21"><name pos:start="191:9" pos:end="191:21">GetBitContext</name></type> <name pos:start="191:23" pos:end="191:24">gb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:25"><decl pos:start="193:9" pos:end="193:24"><type pos:start="193:9" pos:end="193:21"><name pos:start="193:9" pos:end="193:21">MLPHeaderInfo</name></type> <name pos:start="193:23" pos:end="193:24">mh</name></decl>;</decl_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:57"><expr pos:start="197:9" pos:end="197:56"><call pos:start="197:9" pos:end="197:56"><name pos:start="197:9" pos:end="197:21">init_get_bits</name><argument_list pos:start="197:22" pos:end="197:56">(<argument pos:start="197:23" pos:end="197:25"><expr pos:start="197:23" pos:end="197:25"><operator pos:start="197:23" pos:end="197:23">&amp;</operator><name pos:start="197:24" pos:end="197:25">gb</name></expr></argument>, <argument pos:start="197:28" pos:end="197:34"><expr pos:start="197:28" pos:end="197:34"><name pos:start="197:28" pos:end="197:30">buf</name> <operator pos:start="197:32" pos:end="197:32">+</operator> <literal type="number" pos:start="197:34" pos:end="197:34">4</literal></expr></argument>, <argument pos:start="197:37" pos:end="197:55"><expr pos:start="197:37" pos:end="197:55"><operator pos:start="197:37" pos:end="197:37">(</operator><name pos:start="197:38" pos:end="197:45">buf_size</name> <operator pos:start="197:47" pos:end="197:47">-</operator> <literal type="number" pos:start="197:49" pos:end="197:49">4</literal><operator pos:start="197:50" pos:end="197:50">)</operator> <operator pos:start="197:52" pos:end="197:53">&lt;&lt;</operator> <literal type="number" pos:start="197:55" pos:end="197:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="201:27"><if pos:start="199:9" pos:end="201:27">if <condition pos:start="199:12" pos:end="199:56">(<expr pos:start="199:13" pos:end="199:55"><call pos:start="199:13" pos:end="199:51"><name pos:start="199:13" pos:end="199:34">ff_mlp_read_major_sync</name><argument_list pos:start="199:35" pos:end="199:51">(<argument pos:start="199:36" pos:end="199:40"><expr pos:start="199:36" pos:end="199:40"><name pos:start="199:36" pos:end="199:40">avctx</name></expr></argument>, <argument pos:start="199:43" pos:end="199:45"><expr pos:start="199:43" pos:end="199:45"><operator pos:start="199:43" pos:end="199:43">&amp;</operator><name pos:start="199:44" pos:end="199:45">mh</name></expr></argument>, <argument pos:start="199:48" pos:end="199:50"><expr pos:start="199:48" pos:end="199:50"><operator pos:start="199:48" pos:end="199:48">&amp;</operator><name pos:start="199:49" pos:end="199:50">gb</name></expr></argument>)</argument_list></call> <operator pos:start="199:53" pos:end="199:53">&lt;</operator> <literal type="number" pos:start="199:55" pos:end="199:55">0</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:27"><block_content pos:start="201:13" pos:end="201:27">

            <goto pos:start="201:13" pos:end="201:27">goto <name pos:start="201:18" pos:end="201:26">lost_sync</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:52"><expr pos:start="205:9" pos:end="205:51"><name pos:start="205:9" pos:end="205:34"><name pos:start="205:9" pos:end="205:13">avctx</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:34">bits_per_raw_sample</name></name> <operator pos:start="205:36" pos:end="205:36">=</operator> <name pos:start="205:38" pos:end="205:51"><name pos:start="205:38" pos:end="205:39">mh</name><operator pos:start="205:40" pos:end="205:40">.</operator><name pos:start="205:41" pos:end="205:51">group1_bits</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="213:50"><if pos:start="207:9" pos:end="209:50">if <condition pos:start="207:12" pos:end="207:44">(<expr pos:start="207:13" pos:end="207:43"><name pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:17">avctx</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:38">bits_per_raw_sample</name></name> <operator pos:start="207:40" pos:end="207:40">&gt;</operator> <literal type="number" pos:start="207:42" pos:end="207:43">16</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:50"><block_content pos:start="209:13" pos:end="209:50">

            <expr_stmt pos:start="209:13" pos:end="209:50"><expr pos:start="209:13" pos:end="209:49"><name pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:17">avctx</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:29">sample_fmt</name></name> <operator pos:start="209:31" pos:end="209:31">=</operator> <name pos:start="209:33" pos:end="209:49">AV_SAMPLE_FMT_S32</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="211:9" pos:end="213:50">else<block type="pseudo" pos:start="213:13" pos:end="213:50"><block_content pos:start="213:13" pos:end="213:50">

            <expr_stmt pos:start="213:13" pos:end="213:50"><expr pos:start="213:13" pos:end="213:49"><name pos:start="213:13" pos:end="213:29"><name pos:start="213:13" pos:end="213:17">avctx</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:29">sample_fmt</name></name> <operator pos:start="213:31" pos:end="213:31">=</operator> <name pos:start="213:33" pos:end="213:49">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:50"><expr pos:start="215:9" pos:end="215:49"><name pos:start="215:9" pos:end="215:26"><name pos:start="215:9" pos:end="215:13">avctx</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:26">sample_rate</name></name> <operator pos:start="215:28" pos:end="215:28">=</operator> <name pos:start="215:30" pos:end="215:49"><name pos:start="215:30" pos:end="215:31">mh</name><operator pos:start="215:32" pos:end="215:32">.</operator><name pos:start="215:33" pos:end="215:49">group1_samplerate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:42"><expr pos:start="217:9" pos:end="217:41"><name pos:start="217:9" pos:end="217:19"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:19">duration</name></name> <operator pos:start="217:21" pos:end="217:21">=</operator> <name pos:start="217:23" pos:end="217:41"><name pos:start="217:23" pos:end="217:24">mh</name><operator pos:start="217:25" pos:end="217:25">.</operator><name pos:start="217:26" pos:end="217:41">access_unit_size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="221:9" pos:end="329:9"><if pos:start="221:9" pos:end="329:9">if<condition pos:start="221:11" pos:end="221:54">(<expr pos:start="221:12" pos:end="221:53"><operator pos:start="221:12" pos:end="221:12">!</operator><name pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:17">avctx</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:27">channels</name></name> <operator pos:start="221:29" pos:end="221:30">||</operator> <operator pos:start="221:32" pos:end="221:32">!</operator><name pos:start="221:33" pos:end="221:53"><name pos:start="221:33" pos:end="221:37">avctx</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:53">channel_layout</name></name></expr>)</condition> <block pos:start="221:56" pos:end="329:9">{<block_content pos:start="223:9" pos:end="327:9">

        <if_stmt pos:start="223:9" pos:end="327:9"><if pos:start="223:9" pos:end="265:9">if <condition pos:start="223:12" pos:end="223:35">(<expr pos:start="223:13" pos:end="223:34"><name pos:start="223:13" pos:end="223:26"><name pos:start="223:13" pos:end="223:14">mh</name><operator pos:start="223:15" pos:end="223:15">.</operator><name pos:start="223:16" pos:end="223:26">stream_type</name></name> <operator pos:start="223:28" pos:end="223:29">==</operator> <literal type="number" pos:start="223:31" pos:end="223:34">0xbb</literal></expr>)</condition> <block pos:start="223:37" pos:end="265:9">{<block_content pos:start="229:1" pos:end="263:13">

            <comment type="block" pos:start="225:13" pos:end="225:28">/* MLP stream */</comment>

<cpp:if pos:start="227:1" pos:end="227:27">#<cpp:directive pos:start="227:2" pos:end="227:3">if</cpp:directive> <expr pos:start="227:5" pos:end="227:27"><name pos:start="227:5" pos:end="227:27">FF_API_REQUEST_CHANNELS</name></expr></cpp:if>

<macro pos:start="229:1" pos:end="229:31"><name pos:start="229:1" pos:end="229:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

            <if_stmt pos:start="231:13" pos:end="263:13"><if pos:start="231:13" pos:end="241:13">if <condition pos:start="231:16" pos:end="233:38">(<expr pos:start="231:17" pos:end="233:37"><name pos:start="231:17" pos:end="231:39"><name pos:start="231:17" pos:end="231:21">avctx</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:39">request_channels</name></name> <operator pos:start="231:41" pos:end="231:41">&gt;</operator> <literal type="number" pos:start="231:43" pos:end="231:43">0</literal> <operator pos:start="231:45" pos:end="231:46">&amp;&amp;</operator> <name pos:start="231:48" pos:end="231:70"><name pos:start="231:48" pos:end="231:52">avctx</name><operator pos:start="231:53" pos:end="231:54">-&gt;</operator><name pos:start="231:55" pos:end="231:70">request_channels</name></name> <operator pos:start="231:72" pos:end="231:73">&lt;=</operator> <literal type="number" pos:start="231:75" pos:end="231:75">2</literal> <operator pos:start="231:77" pos:end="231:78">&amp;&amp;</operator>

                <name pos:start="233:17" pos:end="233:33"><name pos:start="233:17" pos:end="233:18">mh</name><operator pos:start="233:19" pos:end="233:19">.</operator><name pos:start="233:20" pos:end="233:33">num_substreams</name></name> <operator pos:start="233:35" pos:end="233:35">&gt;</operator> <literal type="number" pos:start="233:37" pos:end="233:37">1</literal></expr>)</condition> <block pos:start="233:40" pos:end="241:13">{<block_content pos:start="235:17" pos:end="239:30">

                <expr_stmt pos:start="235:17" pos:end="235:42"><expr pos:start="235:17" pos:end="235:41"><name pos:start="235:17" pos:end="235:31"><name pos:start="235:17" pos:end="235:21">avctx</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:31">channels</name></name>       <operator pos:start="235:39" pos:end="235:39">=</operator> <literal type="number" pos:start="235:41" pos:end="235:41">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:60"><expr pos:start="237:17" pos:end="237:59"><name pos:start="237:17" pos:end="237:37"><name pos:start="237:17" pos:end="237:21">avctx</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:37">channel_layout</name></name> <operator pos:start="237:39" pos:end="237:39">=</operator> <name pos:start="237:41" pos:end="237:59">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

<expr_stmt pos:start="239:1" pos:end="239:30"><expr pos:start="239:1" pos:end="239:30"><name pos:start="239:1" pos:end="239:30">FF_ENABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="241:15" pos:end="257:13">else

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

            if <condition pos:start="245:16" pos:end="251:38">(<expr pos:start="245:17" pos:end="251:37"><name pos:start="245:17" pos:end="245:45"><name pos:start="245:17" pos:end="245:21">avctx</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:45">request_channel_layout</name></name> <operator pos:start="245:47" pos:end="245:48">&amp;&amp;</operator>

                <operator pos:start="247:17" pos:end="247:17">(</operator><name pos:start="247:18" pos:end="247:46"><name pos:start="247:18" pos:end="247:22">avctx</name><operator pos:start="247:23" pos:end="247:24">-&gt;</operator><name pos:start="247:25" pos:end="247:46">request_channel_layout</name></name> <operator pos:start="247:48" pos:end="247:48">&amp;</operator> <name pos:start="247:50" pos:end="247:68">AV_CH_LAYOUT_STEREO</name><operator pos:start="247:69" pos:end="247:69">)</operator> <operator pos:start="247:71" pos:end="247:72">==</operator>

                <name pos:start="249:17" pos:end="249:45"><name pos:start="249:17" pos:end="249:21">avctx</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:45">request_channel_layout</name></name> <operator pos:start="249:47" pos:end="249:48">&amp;&amp;</operator>

                <name pos:start="251:17" pos:end="251:33"><name pos:start="251:17" pos:end="251:18">mh</name><operator pos:start="251:19" pos:end="251:19">.</operator><name pos:start="251:20" pos:end="251:33">num_substreams</name></name> <operator pos:start="251:35" pos:end="251:35">&gt;</operator> <literal type="number" pos:start="251:37" pos:end="251:37">1</literal></expr>)</condition> <block pos:start="251:40" pos:end="257:13">{<block_content pos:start="253:17" pos:end="255:60">

                <expr_stmt pos:start="253:17" pos:end="253:42"><expr pos:start="253:17" pos:end="253:41"><name pos:start="253:17" pos:end="253:31"><name pos:start="253:17" pos:end="253:21">avctx</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:31">channels</name></name>       <operator pos:start="253:39" pos:end="253:39">=</operator> <literal type="number" pos:start="253:41" pos:end="253:41">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:60"><expr pos:start="255:17" pos:end="255:59"><name pos:start="255:17" pos:end="255:37"><name pos:start="255:17" pos:end="255:21">avctx</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:37">channel_layout</name></name> <operator pos:start="255:39" pos:end="255:39">=</operator> <name pos:start="255:41" pos:end="255:59">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="257:15" pos:end="263:13">else <block pos:start="257:20" pos:end="263:13">{<block_content pos:start="259:17" pos:end="261:62">

                <expr_stmt pos:start="259:17" pos:end="259:56"><expr pos:start="259:17" pos:end="259:55"><name pos:start="259:17" pos:end="259:31"><name pos:start="259:17" pos:end="259:21">avctx</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:31">channels</name></name>       <operator pos:start="259:39" pos:end="259:39">=</operator> <name pos:start="259:41" pos:end="259:55"><name pos:start="259:41" pos:end="259:42">mh</name><operator pos:start="259:43" pos:end="259:43">.</operator><name pos:start="259:44" pos:end="259:55">channels_mlp</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:62"><expr pos:start="261:17" pos:end="261:61"><name pos:start="261:17" pos:end="261:37"><name pos:start="261:17" pos:end="261:21">avctx</name><operator pos:start="261:22" pos:end="261:23">-&gt;</operator><name pos:start="261:24" pos:end="261:37">channel_layout</name></name> <operator pos:start="261:39" pos:end="261:39">=</operator> <name pos:start="261:41" pos:end="261:61"><name pos:start="261:41" pos:end="261:42">mh</name><operator pos:start="261:43" pos:end="261:43">.</operator><name pos:start="261:44" pos:end="261:61">channel_layout_mlp</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="265:11" pos:end="327:9">else <block pos:start="265:16" pos:end="327:9">{<block_content pos:start="271:1" pos:end="325:13"> <comment type="block" pos:start="265:18" pos:end="265:45">/* mh.stream_type == 0xba */</comment>

            <comment type="block" pos:start="267:13" pos:end="267:31">/* TrueHD stream */</comment>

<cpp:if pos:start="269:1" pos:end="269:27">#<cpp:directive pos:start="269:2" pos:end="269:3">if</cpp:directive> <expr pos:start="269:5" pos:end="269:27"><name pos:start="269:5" pos:end="269:27">FF_API_REQUEST_CHANNELS</name></expr></cpp:if>

<macro pos:start="271:1" pos:end="271:31"><name pos:start="271:1" pos:end="271:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

            <if_stmt pos:start="273:13" pos:end="325:13"><if pos:start="273:13" pos:end="281:13">if <condition pos:start="273:16" pos:end="275:38">(<expr pos:start="273:17" pos:end="275:37"><name pos:start="273:17" pos:end="273:39"><name pos:start="273:17" pos:end="273:21">avctx</name><operator pos:start="273:22" pos:end="273:23">-&gt;</operator><name pos:start="273:24" pos:end="273:39">request_channels</name></name> <operator pos:start="273:41" pos:end="273:41">&gt;</operator> <literal type="number" pos:start="273:43" pos:end="273:43">0</literal> <operator pos:start="273:45" pos:end="273:46">&amp;&amp;</operator> <name pos:start="273:48" pos:end="273:70"><name pos:start="273:48" pos:end="273:52">avctx</name><operator pos:start="273:53" pos:end="273:54">-&gt;</operator><name pos:start="273:55" pos:end="273:70">request_channels</name></name> <operator pos:start="273:72" pos:end="273:73">&lt;=</operator> <literal type="number" pos:start="273:75" pos:end="273:75">2</literal> <operator pos:start="273:77" pos:end="273:78">&amp;&amp;</operator>

                <name pos:start="275:17" pos:end="275:33"><name pos:start="275:17" pos:end="275:18">mh</name><operator pos:start="275:19" pos:end="275:19">.</operator><name pos:start="275:20" pos:end="275:33">num_substreams</name></name> <operator pos:start="275:35" pos:end="275:35">&gt;</operator> <literal type="number" pos:start="275:37" pos:end="275:37">1</literal></expr>)</condition> <block pos:start="275:40" pos:end="281:13">{<block_content pos:start="277:17" pos:end="279:60">

                <expr_stmt pos:start="277:17" pos:end="277:42"><expr pos:start="277:17" pos:end="277:41"><name pos:start="277:17" pos:end="277:31"><name pos:start="277:17" pos:end="277:21">avctx</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:31">channels</name></name>       <operator pos:start="277:39" pos:end="277:39">=</operator> <literal type="number" pos:start="277:41" pos:end="277:41">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:60"><expr pos:start="279:17" pos:end="279:59"><name pos:start="279:17" pos:end="279:37"><name pos:start="279:17" pos:end="279:21">avctx</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:37">channel_layout</name></name> <operator pos:start="279:39" pos:end="279:39">=</operator> <name pos:start="279:41" pos:end="279:59">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="281:15" pos:end="291:13">else if <condition pos:start="281:23" pos:end="283:74">(<expr pos:start="281:24" pos:end="283:73"><name pos:start="281:24" pos:end="281:46"><name pos:start="281:24" pos:end="281:28">avctx</name><operator pos:start="281:29" pos:end="281:30">-&gt;</operator><name pos:start="281:31" pos:end="281:46">request_channels</name></name> <operator pos:start="281:48" pos:end="281:48">&gt;</operator> <literal type="number" pos:start="281:50" pos:end="281:50">0</literal> <operator pos:start="281:52" pos:end="281:53">&amp;&amp;</operator>

                       <name pos:start="283:24" pos:end="283:46"><name pos:start="283:24" pos:end="283:28">avctx</name><operator pos:start="283:29" pos:end="283:30">-&gt;</operator><name pos:start="283:31" pos:end="283:46">request_channels</name></name> <operator pos:start="283:48" pos:end="283:49">&lt;=</operator> <name pos:start="283:51" pos:end="283:73"><name pos:start="283:51" pos:end="283:52">mh</name><operator pos:start="283:53" pos:end="283:53">.</operator><name pos:start="283:54" pos:end="283:73">channels_thd_stream1</name></name></expr>)</condition> <block pos:start="283:76" pos:end="291:13">{<block_content pos:start="285:17" pos:end="289:30">

                <expr_stmt pos:start="285:17" pos:end="285:64"><expr pos:start="285:17" pos:end="285:63"><name pos:start="285:17" pos:end="285:31"><name pos:start="285:17" pos:end="285:21">avctx</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:31">channels</name></name>       <operator pos:start="285:39" pos:end="285:39">=</operator> <name pos:start="285:41" pos:end="285:63"><name pos:start="285:41" pos:end="285:42">mh</name><operator pos:start="285:43" pos:end="285:43">.</operator><name pos:start="285:44" pos:end="285:63">channels_thd_stream1</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:70"><expr pos:start="287:17" pos:end="287:69"><name pos:start="287:17" pos:end="287:37"><name pos:start="287:17" pos:end="287:21">avctx</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:37">channel_layout</name></name> <operator pos:start="287:39" pos:end="287:39">=</operator> <name pos:start="287:41" pos:end="287:69"><name pos:start="287:41" pos:end="287:42">mh</name><operator pos:start="287:43" pos:end="287:43">.</operator><name pos:start="287:44" pos:end="287:69">channel_layout_thd_stream1</name></name></expr>;</expr_stmt>

<expr_stmt pos:start="289:1" pos:end="289:30"><expr pos:start="289:1" pos:end="289:30"><name pos:start="289:1" pos:end="289:30">FF_ENABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="291:15" pos:end="307:13">else

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>

                if <condition pos:start="295:20" pos:end="301:42">(<expr pos:start="295:21" pos:end="301:41"><name pos:start="295:21" pos:end="295:49"><name pos:start="295:21" pos:end="295:25">avctx</name><operator pos:start="295:26" pos:end="295:27">-&gt;</operator><name pos:start="295:28" pos:end="295:49">request_channel_layout</name></name> <operator pos:start="295:51" pos:end="295:52">&amp;&amp;</operator>

                    <operator pos:start="297:21" pos:end="297:21">(</operator><name pos:start="297:22" pos:end="297:50"><name pos:start="297:22" pos:end="297:26">avctx</name><operator pos:start="297:27" pos:end="297:28">-&gt;</operator><name pos:start="297:29" pos:end="297:50">request_channel_layout</name></name> <operator pos:start="297:52" pos:end="297:52">&amp;</operator> <name pos:start="297:54" pos:end="297:72">AV_CH_LAYOUT_STEREO</name><operator pos:start="297:73" pos:end="297:73">)</operator> <operator pos:start="297:75" pos:end="297:76">==</operator>

                    <name pos:start="299:21" pos:end="299:49"><name pos:start="299:21" pos:end="299:25">avctx</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:49">request_channel_layout</name></name> <operator pos:start="299:51" pos:end="299:52">&amp;&amp;</operator>

                    <name pos:start="301:21" pos:end="301:37"><name pos:start="301:21" pos:end="301:22">mh</name><operator pos:start="301:23" pos:end="301:23">.</operator><name pos:start="301:24" pos:end="301:37">num_substreams</name></name> <operator pos:start="301:39" pos:end="301:39">&gt;</operator> <literal type="number" pos:start="301:41" pos:end="301:41">1</literal></expr>)</condition> <block pos:start="301:44" pos:end="307:13">{<block_content pos:start="303:17" pos:end="305:60">

                <expr_stmt pos:start="303:17" pos:end="303:42"><expr pos:start="303:17" pos:end="303:41"><name pos:start="303:17" pos:end="303:31"><name pos:start="303:17" pos:end="303:21">avctx</name><operator pos:start="303:22" pos:end="303:23">-&gt;</operator><name pos:start="303:24" pos:end="303:31">channels</name></name>       <operator pos:start="303:39" pos:end="303:39">=</operator> <literal type="number" pos:start="303:41" pos:end="303:41">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:60"><expr pos:start="305:17" pos:end="305:59"><name pos:start="305:17" pos:end="305:37"><name pos:start="305:17" pos:end="305:21">avctx</name><operator pos:start="305:22" pos:end="305:23">-&gt;</operator><name pos:start="305:24" pos:end="305:37">channel_layout</name></name> <operator pos:start="305:39" pos:end="305:39">=</operator> <name pos:start="305:41" pos:end="305:59">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="307:15" pos:end="319:13">else if <condition pos:start="307:23" pos:end="313:55">(<expr pos:start="307:24" pos:end="313:54"><operator pos:start="307:24" pos:end="307:24">!</operator><name pos:start="307:25" pos:end="307:47"><name pos:start="307:25" pos:end="307:26">mh</name><operator pos:start="307:27" pos:end="307:27">.</operator><name pos:start="307:28" pos:end="307:47">channels_thd_stream2</name></name> <operator pos:start="307:49" pos:end="307:50">||</operator>

                       <operator pos:start="309:24" pos:end="309:24">(</operator><name pos:start="309:25" pos:end="309:53"><name pos:start="309:25" pos:end="309:29">avctx</name><operator pos:start="309:30" pos:end="309:31">-&gt;</operator><name pos:start="309:32" pos:end="309:53">request_channel_layout</name></name> <operator pos:start="309:55" pos:end="309:56">&amp;&amp;</operator>

                        <operator pos:start="311:25" pos:end="311:25">(</operator><name pos:start="311:26" pos:end="311:54"><name pos:start="311:26" pos:end="311:30">avctx</name><operator pos:start="311:31" pos:end="311:32">-&gt;</operator><name pos:start="311:33" pos:end="311:54">request_channel_layout</name></name> <operator pos:start="311:56" pos:end="311:56">&amp;</operator> <name pos:start="311:58" pos:end="311:86"><name pos:start="311:58" pos:end="311:59">mh</name><operator pos:start="311:60" pos:end="311:60">.</operator><name pos:start="311:61" pos:end="311:86">channel_layout_thd_stream1</name></name><operator pos:start="311:87" pos:end="311:87">)</operator> <operator pos:start="311:89" pos:end="311:90">==</operator>

                        <name pos:start="313:25" pos:end="313:53"><name pos:start="313:25" pos:end="313:29">avctx</name><operator pos:start="313:30" pos:end="313:31">-&gt;</operator><name pos:start="313:32" pos:end="313:53">request_channel_layout</name></name><operator pos:start="313:54" pos:end="313:54">)</operator></expr>)</condition> <block pos:start="313:57" pos:end="319:13">{<block_content pos:start="315:17" pos:end="317:70">

                <expr_stmt pos:start="315:17" pos:end="315:64"><expr pos:start="315:17" pos:end="315:63"><name pos:start="315:17" pos:end="315:31"><name pos:start="315:17" pos:end="315:21">avctx</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:31">channels</name></name>       <operator pos:start="315:39" pos:end="315:39">=</operator> <name pos:start="315:41" pos:end="315:63"><name pos:start="315:41" pos:end="315:42">mh</name><operator pos:start="315:43" pos:end="315:43">.</operator><name pos:start="315:44" pos:end="315:63">channels_thd_stream1</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:70"><expr pos:start="317:17" pos:end="317:69"><name pos:start="317:17" pos:end="317:37"><name pos:start="317:17" pos:end="317:21">avctx</name><operator pos:start="317:22" pos:end="317:23">-&gt;</operator><name pos:start="317:24" pos:end="317:37">channel_layout</name></name> <operator pos:start="317:39" pos:end="317:39">=</operator> <name pos:start="317:41" pos:end="317:69"><name pos:start="317:41" pos:end="317:42">mh</name><operator pos:start="317:43" pos:end="317:43">.</operator><name pos:start="317:44" pos:end="317:69">channel_layout_thd_stream1</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="319:15" pos:end="325:13">else <block pos:start="319:20" pos:end="325:13">{<block_content pos:start="321:17" pos:end="323:70">

                <expr_stmt pos:start="321:17" pos:end="321:64"><expr pos:start="321:17" pos:end="321:63"><name pos:start="321:17" pos:end="321:31"><name pos:start="321:17" pos:end="321:21">avctx</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:31">channels</name></name>       <operator pos:start="321:39" pos:end="321:39">=</operator> <name pos:start="321:41" pos:end="321:63"><name pos:start="321:41" pos:end="321:42">mh</name><operator pos:start="321:43" pos:end="321:43">.</operator><name pos:start="321:44" pos:end="321:63">channels_thd_stream2</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:70"><expr pos:start="323:17" pos:end="323:69"><name pos:start="323:17" pos:end="323:37"><name pos:start="323:17" pos:end="323:21">avctx</name><operator pos:start="323:22" pos:end="323:23">-&gt;</operator><name pos:start="323:24" pos:end="323:37">channel_layout</name></name> <operator pos:start="323:39" pos:end="323:39">=</operator> <name pos:start="323:41" pos:end="323:69"><name pos:start="323:41" pos:end="323:42">mh</name><operator pos:start="323:43" pos:end="323:43">.</operator><name pos:start="323:44" pos:end="323:69">channel_layout_thd_stream2</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="333:9" pos:end="335:46"><if pos:start="333:9" pos:end="335:46">if <condition pos:start="333:12" pos:end="333:23">(<expr pos:start="333:13" pos:end="333:22"><operator pos:start="333:13" pos:end="333:13">!</operator><name pos:start="333:14" pos:end="333:22"><name pos:start="333:14" pos:end="333:15">mh</name><operator pos:start="333:16" pos:end="333:16">.</operator><name pos:start="333:17" pos:end="333:22">is_vbr</name></name></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:46"><block_content pos:start="335:13" pos:end="335:46"> <comment type="block" pos:start="333:25" pos:end="333:43">/* Stream is CBR */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:46"><expr pos:start="335:13" pos:end="335:45"><name pos:start="335:13" pos:end="335:27"><name pos:start="335:13" pos:end="335:17">avctx</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:27">bit_rate</name></name> <operator pos:start="335:29" pos:end="335:29">=</operator> <name pos:start="335:31" pos:end="335:45"><name pos:start="335:31" pos:end="335:32">mh</name><operator pos:start="335:33" pos:end="335:33">.</operator><name pos:start="335:34" pos:end="335:45">peak_bitrate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="339:9" pos:end="339:47"><expr pos:start="339:9" pos:end="339:46"><name pos:start="339:9" pos:end="339:26"><name pos:start="339:9" pos:end="339:10">mp</name><operator pos:start="339:11" pos:end="339:12">-&gt;</operator><name pos:start="339:13" pos:end="339:26">num_substreams</name></name> <operator pos:start="339:28" pos:end="339:28">=</operator> <name pos:start="339:30" pos:end="339:46"><name pos:start="339:30" pos:end="339:31">mh</name><operator pos:start="339:32" pos:end="339:32">.</operator><name pos:start="339:33" pos:end="339:46">num_substreams</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="345:5" pos:end="345:19"><expr pos:start="345:5" pos:end="345:18"><operator pos:start="345:5" pos:end="345:5">*</operator><name pos:start="345:6" pos:end="345:12">poutbuf</name> <operator pos:start="345:14" pos:end="345:14">=</operator> <name pos:start="345:16" pos:end="345:18">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:29"><expr pos:start="347:5" pos:end="347:28"><operator pos:start="347:5" pos:end="347:5">*</operator><name pos:start="347:6" pos:end="347:17">poutbuf_size</name> <operator pos:start="347:19" pos:end="347:19">=</operator> <name pos:start="347:21" pos:end="347:28">buf_size</name></expr>;</expr_stmt>



    <return pos:start="351:5" pos:end="351:16">return <expr pos:start="351:12" pos:end="351:15"><name pos:start="351:12" pos:end="351:15">next</name></expr>;</return>



<label pos:start="355:1" pos:end="355:10"><name pos:start="355:1" pos:end="355:9">lost_sync</name>:</label>

    <expr_stmt pos:start="357:5" pos:end="357:20"><expr pos:start="357:5" pos:end="357:19"><name pos:start="357:5" pos:end="357:15"><name pos:start="357:5" pos:end="357:6">mp</name><operator pos:start="357:7" pos:end="357:8">-&gt;</operator><name pos:start="357:9" pos:end="357:15">in_sync</name></name> <operator pos:start="357:17" pos:end="357:17">=</operator> <literal type="number" pos:start="357:19" pos:end="357:19">0</literal></expr>;</expr_stmt>

    <return pos:start="359:5" pos:end="359:13">return <expr pos:start="359:12" pos:end="359:12"><literal type="number" pos:start="359:12" pos:end="359:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
