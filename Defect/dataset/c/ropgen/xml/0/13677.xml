<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13677.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">analyze</name><parameter_list pos:start="1:19" pos:end="3:29">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><specifier pos:start="1:20" pos:end="1:24">const</specifier> <name pos:start="1:26" pos:end="1:32">uint8_t</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">buf</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:47"><decl pos:start="1:40" pos:end="1:47"><type pos:start="1:40" pos:end="1:47"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:47">size</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:64">packet_size</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:28"><decl pos:start="3:20" pos:end="3:28"><type pos:start="3:20" pos:end="3:28"><name pos:start="3:20" pos:end="3:22">int</name></type> <name pos:start="3:24" pos:end="3:28">probe</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:62">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:32"><name pos:start="7:9" pos:end="7:12">stat</name><index pos:start="7:13" pos:end="7:32">[<expr pos:start="7:14" pos:end="7:31"><name pos:start="7:14" pos:end="7:31">TS_MAX_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">stat_all</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">best_score</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><call pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:48">(<argument pos:start="17:12" pos:end="17:15"><expr pos:start="17:12" pos:end="17:15"><name pos:start="17:12" pos:end="17:15">stat</name></expr></argument>, <argument pos:start="17:18" pos:end="17:18"><expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></argument>, <argument pos:start="17:21" pos:end="17:47"><expr pos:start="17:21" pos:end="17:47"><name pos:start="17:21" pos:end="17:31">packet_size</name> <operator pos:start="17:33" pos:end="17:33">*</operator> <sizeof pos:start="17:35" pos:end="17:47">sizeof<argument_list pos:start="17:41" pos:end="17:47">(<argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><operator pos:start="17:42" pos:end="17:42">*</operator><name pos:start="17:43" pos:end="17:46">stat</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="41:5">for <control pos:start="21:9" pos:end="21:34">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:29"><expr pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:24">size</name> <operator pos:start="21:26" pos:end="21:26">-</operator> <literal type="number" pos:start="21:28" pos:end="21:28">3</literal></expr>;</condition> <incr pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:31">i</name><operator pos:start="21:32" pos:end="21:33">++</operator></expr></incr>)</control> <block pos:start="21:36" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:9">

        <if_stmt pos:start="23:9" pos:end="39:9"><if pos:start="23:9" pos:end="39:9">if <condition pos:start="23:12" pos:end="25:44">(<expr pos:start="23:13" pos:end="25:43"><name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">buf</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">i</name></expr>]</index></name> <operator pos:start="23:20" pos:end="23:21">==</operator> <literal type="number" pos:start="23:23" pos:end="23:26">0x47</literal> <operator pos:start="23:28" pos:end="23:29">&amp;&amp;</operator>

            <operator pos:start="25:13" pos:end="25:13">(</operator><operator pos:start="25:14" pos:end="25:14">!</operator><name pos:start="25:15" pos:end="25:19">probe</name> <operator pos:start="25:21" pos:end="25:22">||</operator> <operator pos:start="25:24" pos:end="25:24">(</operator><name pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:27">buf</name><index pos:start="25:28" pos:end="25:34">[<expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:29">i</name> <operator pos:start="25:31" pos:end="25:31">+</operator> <literal type="number" pos:start="25:33" pos:end="25:33">3</literal></expr>]</index></name> <operator pos:start="25:36" pos:end="25:36">&amp;</operator> <literal type="number" pos:start="25:38" pos:end="25:41">0x30</literal><operator pos:start="25:42" pos:end="25:42">)</operator><operator pos:start="25:43" pos:end="25:43">)</operator></expr>)</condition> <block pos:start="25:46" pos:end="39:9">{<block_content pos:start="27:13" pos:end="37:13">

            <decl_stmt pos:start="27:13" pos:end="27:36"><decl pos:start="27:13" pos:end="27:35"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">x</name> <init pos:start="27:19" pos:end="27:35">= <expr pos:start="27:21" pos:end="27:35"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">%</operator> <name pos:start="27:25" pos:end="27:35">packet_size</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:22"><expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">stat</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">x</name></expr>]</index></name><operator pos:start="29:20" pos:end="29:21">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:20">stat_all</name><operator pos:start="31:21" pos:end="31:22">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:37">(<expr pos:start="33:17" pos:end="33:36"><name pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:20">stat</name><index pos:start="33:21" pos:end="33:23">[<expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">x</name></expr>]</index></name> <operator pos:start="33:25" pos:end="33:25">&gt;</operator> <name pos:start="33:27" pos:end="33:36">best_score</name></expr>)</condition> <block pos:start="33:39" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:37">

                <expr_stmt pos:start="35:17" pos:end="35:37"><expr pos:start="35:17" pos:end="35:36"><name pos:start="35:17" pos:end="35:26">best_score</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:36"><name pos:start="35:30" pos:end="35:33">stat</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">x</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="45:5" pos:end="45:62">return <expr pos:start="45:12" pos:end="45:61"><name pos:start="45:12" pos:end="45:21">best_score</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <call pos:start="45:25" pos:end="45:58"><name pos:start="45:25" pos:end="45:29">FFMAX</name><argument_list pos:start="45:30" pos:end="45:58">(<argument pos:start="45:31" pos:end="45:54"><expr pos:start="45:31" pos:end="45:54"><name pos:start="45:31" pos:end="45:38">stat_all</name> <operator pos:start="45:40" pos:end="45:40">-</operator> <literal type="number" pos:start="45:42" pos:end="45:43">10</literal><operator pos:start="45:44" pos:end="45:44">*</operator><name pos:start="45:45" pos:end="45:54">best_score</name></expr></argument>, <argument pos:start="45:57" pos:end="45:57"><expr pos:start="45:57" pos:end="45:57"><literal type="number" pos:start="45:57" pos:end="45:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="45:59" pos:end="45:59">/</operator><literal type="number" pos:start="45:60" pos:end="45:61">10</literal></expr>;</return>

</block_content>}</block></function>
</unit>
