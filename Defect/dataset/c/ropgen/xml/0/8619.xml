<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8619.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">abi_long</name></type> <name pos:start="1:10" pos:end="1:22">target_mremap</name><parameter_list pos:start="1:23" pos:end="5:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:32">abi_ulong</name></type> <name pos:start="1:34" pos:end="1:41">old_addr</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:52">abi_ulong</name></type> <name pos:start="1:54" pos:end="1:61">old_size</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:32">abi_ulong</name></type> <name pos:start="3:34" pos:end="3:41">new_size</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:51">unsigned</name> <name pos:start="3:53" pos:end="3:56">long</name></type> <name pos:start="3:58" pos:end="3:62">flags</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:41"><decl pos:start="5:24" pos:end="5:41"><type pos:start="5:24" pos:end="5:41"><name pos:start="5:24" pos:end="5:32">abi_ulong</name></type> <name pos:start="5:34" pos:end="5:41">new_addr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="147:1">{<block_content pos:start="9:5" pos:end="145:20">

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">prot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:19">host_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><call pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">mmap_lock</name><argument_list pos:start="15:14" pos:end="15:15">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="123:5"><if pos:start="19:5" pos:end="41:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:13">flags</name> <operator pos:start="19:15" pos:end="19:15">&amp;</operator> <name pos:start="19:17" pos:end="19:28">MREMAP_FIXED</name></expr>)</condition> <block pos:start="19:31" pos:end="41:5">{<block_content pos:start="21:9" pos:end="39:9">

        <expr_stmt pos:start="21:9" pos:end="27:52"><expr pos:start="21:9" pos:end="27:51"><name pos:start="21:9" pos:end="21:17">host_addr</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <operator pos:start="21:21" pos:end="21:21">(</operator><name pos:start="21:22" pos:end="21:25">void</name> <operator pos:start="21:27" pos:end="21:27">*</operator><operator pos:start="21:28" pos:end="21:28">)</operator> <call pos:start="21:30" pos:end="27:51"><name pos:start="21:30" pos:end="21:36">syscall</name><argument_list pos:start="21:37" pos:end="27:51">(<argument pos:start="21:38" pos:end="21:48"><expr pos:start="21:38" pos:end="21:48"><name pos:start="21:38" pos:end="21:48">__NR_mremap</name></expr></argument>, <argument pos:start="21:51" pos:end="21:63"><expr pos:start="21:51" pos:end="21:63"><call pos:start="21:51" pos:end="21:63"><name pos:start="21:51" pos:end="21:53">g2h</name><argument_list pos:start="21:54" pos:end="21:63">(<argument pos:start="21:55" pos:end="21:62"><expr pos:start="21:55" pos:end="21:62"><name pos:start="21:55" pos:end="21:62">old_addr</name></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="23:38" pos:end="23:45"><expr pos:start="23:38" pos:end="23:45"><name pos:start="23:38" pos:end="23:45">old_size</name></expr></argument>, <argument pos:start="23:48" pos:end="23:55"><expr pos:start="23:48" pos:end="23:55"><name pos:start="23:48" pos:end="23:55">new_size</name></expr></argument>,

                                     <argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:42">flags</name></expr></argument>,

                                     <argument pos:start="27:38" pos:end="27:50"><expr pos:start="27:38" pos:end="27:50"><call pos:start="27:38" pos:end="27:50"><name pos:start="27:38" pos:end="27:40">g2h</name><argument_list pos:start="27:41" pos:end="27:50">(<argument pos:start="27:42" pos:end="27:49"><expr pos:start="27:42" pos:end="27:49"><name pos:start="27:42" pos:end="27:49">new_addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:51">(<expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:23">RESERVED_VA</name> <operator pos:start="31:25" pos:end="31:26">&amp;&amp;</operator> <name pos:start="31:28" pos:end="31:36">host_addr</name> <operator pos:start="31:38" pos:end="31:39">!=</operator> <name pos:start="31:41" pos:end="31:50">MAP_FAILED</name></expr>)</condition> <block pos:start="31:53" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:45">

            <comment type="block" pos:start="33:13" pos:end="35:51">/* If new and old addresses overlap then the above mremap will

               already have failed with EINVAL.  */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:45"><expr pos:start="37:13" pos:end="37:44"><call pos:start="37:13" pos:end="37:44"><name pos:start="37:13" pos:end="37:24">mmap_reserve</name><argument_list pos:start="37:25" pos:end="37:44">(<argument pos:start="37:26" pos:end="37:33"><expr pos:start="37:26" pos:end="37:33"><name pos:start="37:26" pos:end="37:33">old_addr</name></expr></argument>, <argument pos:start="37:36" pos:end="37:43"><expr pos:start="37:36" pos:end="37:43"><name pos:start="37:36" pos:end="37:43">old_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="71:5">else if <condition pos:start="41:15" pos:end="41:38">(<expr pos:start="41:16" pos:end="41:37"><name pos:start="41:16" pos:end="41:20">flags</name> <operator pos:start="41:22" pos:end="41:22">&amp;</operator> <name pos:start="41:24" pos:end="41:37">MREMAP_MAYMOVE</name></expr>)</condition> <block pos:start="41:40" pos:end="71:5">{<block_content pos:start="43:9" pos:end="69:9">

        <decl_stmt pos:start="43:9" pos:end="43:29"><decl pos:start="43:9" pos:end="43:28"><type pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:17">abi_ulong</name></type> <name pos:start="43:19" pos:end="43:28">mmap_start</name></decl>;</decl_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:18">mmap_start</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:47"><name pos:start="47:22" pos:end="47:34">mmap_find_vma</name><argument_list pos:start="47:35" pos:end="47:47">(<argument pos:start="47:36" pos:end="47:36"><expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">0</literal></expr></argument>, <argument pos:start="47:39" pos:end="47:46"><expr pos:start="47:39" pos:end="47:46"><name pos:start="47:39" pos:end="47:46">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="69:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:22">mmap_start</name> <operator pos:start="51:24" pos:end="51:25">==</operator> <operator pos:start="51:27" pos:end="51:27">-</operator><literal type="number" pos:start="51:28" pos:end="51:28">1</literal></expr>)</condition> <block pos:start="51:31" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:35">

            <expr_stmt pos:start="53:13" pos:end="53:27"><expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:17">errno</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:26">ENOMEM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:35"><expr pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:21">host_addr</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:34">MAP_FAILED</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="69:9">else <block pos:start="57:16" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:45">

            <expr_stmt pos:start="59:13" pos:end="65:58"><expr pos:start="59:13" pos:end="65:57"><name pos:start="59:13" pos:end="59:21">host_addr</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:29">void</name> <operator pos:start="59:31" pos:end="59:31">*</operator><operator pos:start="59:32" pos:end="59:32">)</operator> <call pos:start="59:34" pos:end="65:57"><name pos:start="59:34" pos:end="59:40">syscall</name><argument_list pos:start="59:41" pos:end="65:57">(<argument pos:start="59:42" pos:end="59:52"><expr pos:start="59:42" pos:end="59:52"><name pos:start="59:42" pos:end="59:52">__NR_mremap</name></expr></argument>, <argument pos:start="59:55" pos:end="59:67"><expr pos:start="59:55" pos:end="59:67"><call pos:start="59:55" pos:end="59:67"><name pos:start="59:55" pos:end="59:57">g2h</name><argument_list pos:start="59:58" pos:end="59:67">(<argument pos:start="59:59" pos:end="59:66"><expr pos:start="59:59" pos:end="59:66"><name pos:start="59:59" pos:end="59:66">old_addr</name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="61:42" pos:end="61:49"><expr pos:start="61:42" pos:end="61:49"><name pos:start="61:42" pos:end="61:49">old_size</name></expr></argument>, <argument pos:start="61:52" pos:end="61:59"><expr pos:start="61:52" pos:end="61:59"><name pos:start="61:52" pos:end="61:59">new_size</name></expr></argument>,

                                         <argument pos:start="63:42" pos:end="63:61"><expr pos:start="63:42" pos:end="63:61"><name pos:start="63:42" pos:end="63:46">flags</name> <operator pos:start="63:48" pos:end="63:48">|</operator> <name pos:start="63:50" pos:end="63:61">MREMAP_FIXED</name></expr></argument>,

                                         <argument pos:start="65:42" pos:end="65:56"><expr pos:start="65:42" pos:end="65:56"><call pos:start="65:42" pos:end="65:56"><name pos:start="65:42" pos:end="65:44">g2h</name><argument_list pos:start="65:45" pos:end="65:56">(<argument pos:start="65:46" pos:end="65:55"><expr pos:start="65:46" pos:end="65:55"><name pos:start="65:46" pos:end="65:55">mmap_start</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:45"><expr pos:start="67:13" pos:end="67:44"><call pos:start="67:13" pos:end="67:44"><name pos:start="67:13" pos:end="67:24">mmap_reserve</name><argument_list pos:start="67:25" pos:end="67:44">(<argument pos:start="67:26" pos:end="67:33"><expr pos:start="67:26" pos:end="67:33"><name pos:start="67:26" pos:end="67:33">old_addr</name></expr></argument>, <argument pos:start="67:36" pos:end="67:43"><expr pos:start="67:36" pos:end="67:43"><name pos:start="67:36" pos:end="67:43">old_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="123:5">else <block pos:start="71:12" pos:end="123:5">{<block_content pos:start="73:9" pos:end="121:9">

        <decl_stmt pos:start="73:9" pos:end="73:21"><decl pos:start="73:9" pos:end="73:20"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:16">prot</name> <init pos:start="73:18" pos:end="73:20">= <expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="75:9" pos:end="89:9"><if pos:start="75:9" pos:end="89:9">if <condition pos:start="75:12" pos:end="75:47">(<expr pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:23">RESERVED_VA</name> <operator pos:start="75:25" pos:end="75:26">&amp;&amp;</operator> <name pos:start="75:28" pos:end="75:35">old_size</name> <operator pos:start="75:37" pos:end="75:37">&lt;</operator> <name pos:start="75:39" pos:end="75:46">new_size</name></expr>)</condition> <block pos:start="75:49" pos:end="89:9">{<block_content pos:start="77:13" pos:end="87:13">

            <decl_stmt pos:start="77:13" pos:end="77:27"><decl pos:start="77:13" pos:end="77:26"><type pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:21">abi_ulong</name></type> <name pos:start="77:23" pos:end="77:26">addr</name></decl>;</decl_stmt>

            <for pos:start="79:13" pos:end="87:13">for <control pos:start="79:17" pos:end="83:24">(<init pos:start="79:18" pos:end="79:44"><expr pos:start="79:18" pos:end="79:43"><name pos:start="79:18" pos:end="79:21">addr</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:32">old_addr</name> <operator pos:start="79:34" pos:end="79:34">+</operator> <name pos:start="79:36" pos:end="79:43">old_size</name></expr>;</init>

                 <condition pos:start="81:18" pos:end="81:44"><expr pos:start="81:18" pos:end="81:43"><name pos:start="81:18" pos:end="81:21">addr</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:32">old_addr</name> <operator pos:start="81:34" pos:end="81:34">+</operator> <name pos:start="81:36" pos:end="81:43">new_size</name></expr>;</condition>

                 <incr pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><name pos:start="83:18" pos:end="83:21">addr</name><operator pos:start="83:22" pos:end="83:23">++</operator></expr></incr>)</control> <block pos:start="83:26" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:45">

                <expr_stmt pos:start="85:17" pos:end="85:45"><expr pos:start="85:17" pos:end="85:44"><name pos:start="85:17" pos:end="85:20">prot</name> <operator pos:start="85:22" pos:end="85:23">|=</operator> <call pos:start="85:25" pos:end="85:44"><name pos:start="85:25" pos:end="85:38">page_get_flags</name><argument_list pos:start="85:39" pos:end="85:44">(<argument pos:start="85:40" pos:end="85:43"><expr pos:start="85:40" pos:end="85:43"><name pos:start="85:40" pos:end="85:43">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="107:9"><if pos:start="91:9" pos:end="101:9">if <condition pos:start="91:12" pos:end="91:22">(<expr pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">prot</name> <operator pos:start="91:18" pos:end="91:19">==</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>)</condition> <block pos:start="91:24" pos:end="101:9">{<block_content pos:start="93:13" pos:end="99:13">

            <expr_stmt pos:start="93:13" pos:end="93:73"><expr pos:start="93:13" pos:end="93:72"><name pos:start="93:13" pos:end="93:21">host_addr</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="93:72"><name pos:start="93:25" pos:end="93:30">mremap</name><argument_list pos:start="93:31" pos:end="93:72">(<argument pos:start="93:32" pos:end="93:44"><expr pos:start="93:32" pos:end="93:44"><call pos:start="93:32" pos:end="93:44"><name pos:start="93:32" pos:end="93:34">g2h</name><argument_list pos:start="93:35" pos:end="93:44">(<argument pos:start="93:36" pos:end="93:43"><expr pos:start="93:36" pos:end="93:43"><name pos:start="93:36" pos:end="93:43">old_addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:47" pos:end="93:54"><expr pos:start="93:47" pos:end="93:54"><name pos:start="93:47" pos:end="93:54">old_size</name></expr></argument>, <argument pos:start="93:57" pos:end="93:64"><expr pos:start="93:57" pos:end="93:64"><name pos:start="93:57" pos:end="93:64">new_size</name></expr></argument>, <argument pos:start="93:67" pos:end="93:71"><expr pos:start="93:67" pos:end="93:71"><name pos:start="93:67" pos:end="93:71">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="99:13"><if pos:start="95:13" pos:end="99:13">if <condition pos:start="95:16" pos:end="95:78">(<expr pos:start="95:17" pos:end="95:77"><name pos:start="95:17" pos:end="95:25">host_addr</name> <operator pos:start="95:27" pos:end="95:28">!=</operator> <name pos:start="95:30" pos:end="95:39">MAP_FAILED</name> <operator pos:start="95:41" pos:end="95:42">&amp;&amp;</operator> <name pos:start="95:44" pos:end="95:54">RESERVED_VA</name> <operator pos:start="95:56" pos:end="95:57">&amp;&amp;</operator> <name pos:start="95:59" pos:end="95:66">old_size</name> <operator pos:start="95:68" pos:end="95:68">&gt;</operator> <name pos:start="95:70" pos:end="95:77">new_size</name></expr>)</condition> <block pos:start="95:80" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:71">

                <expr_stmt pos:start="97:17" pos:end="97:71"><expr pos:start="97:17" pos:end="97:70"><call pos:start="97:17" pos:end="97:70"><name pos:start="97:17" pos:end="97:28">mmap_reserve</name><argument_list pos:start="97:29" pos:end="97:70">(<argument pos:start="97:30" pos:end="97:48"><expr pos:start="97:30" pos:end="97:48"><name pos:start="97:30" pos:end="97:37">old_addr</name> <operator pos:start="97:39" pos:end="97:39">+</operator> <name pos:start="97:41" pos:end="97:48">old_size</name></expr></argument>, <argument pos:start="97:51" pos:end="97:69"><expr pos:start="97:51" pos:end="97:69"><name pos:start="97:51" pos:end="97:58">new_size</name> <operator pos:start="97:60" pos:end="97:60">-</operator> <name pos:start="97:62" pos:end="97:69">old_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="107:9">else <block pos:start="101:16" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:35">

            <expr_stmt pos:start="103:13" pos:end="103:27"><expr pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:17">errno</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:26">ENOMEM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:21">host_addr</name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:34">MAP_FAILED</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="109:9" pos:end="109:56">/* Check if address fits target address space */</comment>

        <if_stmt pos:start="111:9" pos:end="121:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="111:64">(<expr pos:start="111:13" pos:end="111:63"><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:21">unsigned</name> <name pos:start="111:23" pos:end="111:26">long</name><operator pos:start="111:27" pos:end="111:27">)</operator><name pos:start="111:28" pos:end="111:36">host_addr</name> <operator pos:start="111:38" pos:end="111:38">+</operator> <name pos:start="111:40" pos:end="111:47">new_size</name> <operator pos:start="111:49" pos:end="111:49">&gt;</operator> <operator pos:start="111:51" pos:end="111:51">(</operator><name pos:start="111:52" pos:end="111:60">abi_ulong</name><operator pos:start="111:61" pos:end="111:61">)</operator><operator pos:start="111:62" pos:end="111:62">-</operator><literal type="number" pos:start="111:63" pos:end="111:63">1</literal></expr>)</condition> <block pos:start="111:66" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:35">

            <comment type="block" pos:start="113:13" pos:end="113:41">/* Revert mremap() changes */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:73"><expr pos:start="115:13" pos:end="115:72"><name pos:start="115:13" pos:end="115:21">host_addr</name> <operator pos:start="115:23" pos:end="115:23">=</operator> <call pos:start="115:25" pos:end="115:72"><name pos:start="115:25" pos:end="115:30">mremap</name><argument_list pos:start="115:31" pos:end="115:72">(<argument pos:start="115:32" pos:end="115:44"><expr pos:start="115:32" pos:end="115:44"><call pos:start="115:32" pos:end="115:44"><name pos:start="115:32" pos:end="115:34">g2h</name><argument_list pos:start="115:35" pos:end="115:44">(<argument pos:start="115:36" pos:end="115:43"><expr pos:start="115:36" pos:end="115:43"><name pos:start="115:36" pos:end="115:43">old_addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:47" pos:end="115:54"><expr pos:start="115:47" pos:end="115:54"><name pos:start="115:47" pos:end="115:54">new_size</name></expr></argument>, <argument pos:start="115:57" pos:end="115:64"><expr pos:start="115:57" pos:end="115:64"><name pos:start="115:57" pos:end="115:64">old_size</name></expr></argument>, <argument pos:start="115:67" pos:end="115:71"><expr pos:start="115:67" pos:end="115:71"><name pos:start="115:67" pos:end="115:71">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:27"><expr pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:17">errno</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:26">ENOMEM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:35"><expr pos:start="119:13" pos:end="119:34"><name pos:start="119:13" pos:end="119:21">host_addr</name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:34">MAP_FAILED</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="127:5" pos:end="141:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:32">(<expr pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:17">host_addr</name> <operator pos:start="127:19" pos:end="127:20">==</operator> <name pos:start="127:22" pos:end="127:31">MAP_FAILED</name></expr>)</condition> <block pos:start="127:34" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:22">

        <expr_stmt pos:start="129:9" pos:end="129:22"><expr pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:16">new_addr</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <operator pos:start="129:20" pos:end="129:20">-</operator><literal type="number" pos:start="129:21" pos:end="129:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="141:5">else <block pos:start="131:12" pos:end="141:5">{<block_content pos:start="133:9" pos:end="139:73">

        <expr_stmt pos:start="133:9" pos:end="133:34"><expr pos:start="133:9" pos:end="133:33"><name pos:start="133:9" pos:end="133:16">new_addr</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <call pos:start="133:20" pos:end="133:33"><name pos:start="133:20" pos:end="133:22">h2g</name><argument_list pos:start="133:23" pos:end="133:33">(<argument pos:start="133:24" pos:end="133:32"><expr pos:start="133:24" pos:end="133:32"><name pos:start="133:24" pos:end="133:32">host_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:40"><expr pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:12">prot</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <call pos:start="135:16" pos:end="135:39"><name pos:start="135:16" pos:end="135:29">page_get_flags</name><argument_list pos:start="135:30" pos:end="135:39">(<argument pos:start="135:31" pos:end="135:38"><expr pos:start="135:31" pos:end="135:38"><name pos:start="135:31" pos:end="135:38">old_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:57"><expr pos:start="137:9" pos:end="137:56"><call pos:start="137:9" pos:end="137:56"><name pos:start="137:9" pos:end="137:22">page_set_flags</name><argument_list pos:start="137:23" pos:end="137:56">(<argument pos:start="137:24" pos:end="137:31"><expr pos:start="137:24" pos:end="137:31"><name pos:start="137:24" pos:end="137:31">old_addr</name></expr></argument>, <argument pos:start="137:34" pos:end="137:52"><expr pos:start="137:34" pos:end="137:52"><name pos:start="137:34" pos:end="137:41">old_addr</name> <operator pos:start="137:43" pos:end="137:43">+</operator> <name pos:start="137:45" pos:end="137:52">old_size</name></expr></argument>, <argument pos:start="137:55" pos:end="137:55"><expr pos:start="137:55" pos:end="137:55"><literal type="number" pos:start="137:55" pos:end="137:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:73"><expr pos:start="139:9" pos:end="139:72"><call pos:start="139:9" pos:end="139:72"><name pos:start="139:9" pos:end="139:22">page_set_flags</name><argument_list pos:start="139:23" pos:end="139:72">(<argument pos:start="139:24" pos:end="139:31"><expr pos:start="139:24" pos:end="139:31"><name pos:start="139:24" pos:end="139:31">new_addr</name></expr></argument>, <argument pos:start="139:34" pos:end="139:52"><expr pos:start="139:34" pos:end="139:52"><name pos:start="139:34" pos:end="139:41">new_addr</name> <operator pos:start="139:43" pos:end="139:43">+</operator> <name pos:start="139:45" pos:end="139:52">new_size</name></expr></argument>, <argument pos:start="139:55" pos:end="139:71"><expr pos:start="139:55" pos:end="139:71"><name pos:start="139:55" pos:end="139:58">prot</name> <operator pos:start="139:60" pos:end="139:60">|</operator> <name pos:start="139:62" pos:end="139:71">PAGE_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:18"><expr pos:start="143:5" pos:end="143:17"><call pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:15">mmap_unlock</name><argument_list pos:start="143:16" pos:end="143:17">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="145:5" pos:end="145:20">return <expr pos:start="145:12" pos:end="145:19"><name pos:start="145:12" pos:end="145:19">new_addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
