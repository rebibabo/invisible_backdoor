<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8092.c" pos:tabs="8"><function pos:start="1:1" pos:end="637:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">adpcm_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:55">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

			    <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

			    <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="637:1">{<block_content pos:start="9:5" pos:end="635:21">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ADPCMContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">c</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:27">avctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">ADPCMChannelStatus</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">n</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">m</name></decl>, <decl pos:start="13:15" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:21">channel</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:23">block_predictor</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">short</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:11"><decl pos:start="21:5" pos:end="21:10"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:10">st</name></decl>;</decl_stmt> <comment type="block" pos:start="21:13" pos:end="21:24">/* stereo */</comment>



    <comment type="block" pos:start="25:5" pos:end="25:40">/* DK3 ADPCM accounting variables */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:31"><type pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:17">char</name></type> <name pos:start="27:19" pos:end="27:27">last_byte</name> <init pos:start="27:29" pos:end="27:31">= <expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:25"><decl pos:start="29:5" pos:end="29:24"><type pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:12">unsigned</name> <name pos:start="29:14" pos:end="29:17">char</name></type> <name pos:start="29:19" pos:end="29:24">nibble</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:35"><decl pos:start="31:5" pos:end="31:34"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:30">decode_top_nibble_next</name> <init pos:start="31:32" pos:end="31:34">= <expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:21"><decl pos:start="33:5" pos:end="33:20"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:20">diff_channel</name></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:11">samples</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:18">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:7">src</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:13">buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:6">st</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <name pos:start="43:10" pos:end="43:24"><name pos:start="43:10" pos:end="43:14">avctx</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:24">channels</name></name> <operator pos:start="43:26" pos:end="43:27">==</operator> <literal type="number" pos:start="43:29" pos:end="43:29">2</literal></expr>;</expr_stmt>



    <switch pos:start="47:5" pos:end="631:5">switch<condition pos:start="47:11" pos:end="47:28">(<expr pos:start="47:12" pos:end="47:27"><name pos:start="47:12" pos:end="47:27"><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">codec</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:27">id</name></name></expr>)</condition> <block pos:start="47:30" pos:end="631:5">{<block_content pos:start="49:5" pos:end="629:18">

    <case pos:start="49:5" pos:end="49:31">case <expr pos:start="49:10" pos:end="49:30"><name pos:start="49:10" pos:end="49:30">CODEC_ID_ADPCM_IMA_QT</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:9">n</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:21">buf_size</name> <operator pos:start="51:23" pos:end="51:23">-</operator> <literal type="number" pos:start="51:25" pos:end="51:25">2</literal><operator pos:start="51:26" pos:end="51:26">)</operator></expr>;</expr_stmt><comment type="block" pos:start="51:28" pos:end="51:53">/* &gt;&gt; 2*avctx-&gt;channels;*/</comment>

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:15">channel</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:28"><name pos:start="53:19" pos:end="53:19">c</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:28">channel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:10">cs</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <operator pos:start="55:14" pos:end="55:14">&amp;</operator><operator pos:start="55:15" pos:end="55:15">(</operator><name pos:start="55:16" pos:end="55:33"><name pos:start="55:16" pos:end="55:16">c</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:24">status</name><index pos:start="55:25" pos:end="55:33">[<expr pos:start="55:26" pos:end="55:32"><name pos:start="55:26" pos:end="55:32">channel</name></expr>]</index></name><operator pos:start="55:34" pos:end="55:34">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="57:9" pos:end="57:33">/* (pppppp) (piiiiiii) */</comment>



        <comment type="block" pos:start="61:9" pos:end="61:82">/* Bits 15-7 are the _top_ 9 bits of the 16-bit initial predictor value */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:10">cs</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:21">predictor</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <operator pos:start="63:25" pos:end="63:25">(</operator><operator pos:start="63:26" pos:end="63:26">*</operator><name pos:start="63:27" pos:end="63:29">src</name><operator pos:start="63:30" pos:end="63:31">++</operator><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:35">&lt;&lt;</operator> <literal type="number" pos:start="63:37" pos:end="63:37">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:10">cs</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:21">predictor</name></name> <operator pos:start="65:23" pos:end="65:24">|=</operator> <operator pos:start="65:26" pos:end="65:26">(</operator><operator pos:start="65:27" pos:end="65:27">*</operator><name pos:start="65:28" pos:end="65:30">src</name> <operator pos:start="65:32" pos:end="65:32">&amp;</operator> <literal type="number" pos:start="65:34" pos:end="65:37">0x80</literal><operator pos:start="65:38" pos:end="65:38">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:10">cs</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:21">predictor</name></name> <operator pos:start="67:23" pos:end="67:24">&amp;=</operator> <literal type="number" pos:start="67:26" pos:end="67:31">0xFF80</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:28">/* sign extension */</comment>

        <if_stmt pos:start="73:9" pos:end="75:37"><if pos:start="73:9" pos:end="75:37">if<condition pos:start="73:11" pos:end="73:34">(<expr pos:start="73:12" pos:end="73:33"><name pos:start="73:12" pos:end="73:24"><name pos:start="73:12" pos:end="73:13">cs</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:24">predictor</name></name> <operator pos:start="73:26" pos:end="73:26">&amp;</operator> <literal type="number" pos:start="73:28" pos:end="73:33">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:37"><block_content pos:start="75:13" pos:end="75:37">

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:14">cs</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:25">predictor</name></name> <operator pos:start="75:27" pos:end="75:28">-=</operator> <literal type="number" pos:start="75:30" pos:end="75:36">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><call pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:22">CLAMP_TO_SHORT</name><argument_list pos:start="79:23" pos:end="79:37">(<argument pos:start="79:24" pos:end="79:36"><expr pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:25">cs</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:36">predictor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:41"><expr pos:start="83:9" pos:end="83:40"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:10">cs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:22">step_index</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <operator pos:start="83:26" pos:end="83:26">(</operator><operator pos:start="83:27" pos:end="83:27">*</operator><name pos:start="83:28" pos:end="83:30">src</name><operator pos:start="83:31" pos:end="83:32">++</operator><operator pos:start="83:33" pos:end="83:33">)</operator> <operator pos:start="83:35" pos:end="83:35">&amp;</operator> <literal type="number" pos:start="83:37" pos:end="83:40">0x7F</literal></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="87:93"><if pos:start="87:9" pos:end="87:93">if <condition pos:start="87:12" pos:end="87:32">(<expr pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:14">cs</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:26">step_index</name></name> <operator pos:start="87:28" pos:end="87:28">&gt;</operator> <literal type="number" pos:start="87:30" pos:end="87:31">88</literal></expr>)</condition><block type="pseudo" pos:start="87:34" pos:end="87:93"><block_content pos:start="87:34" pos:end="87:93"> <expr_stmt pos:start="87:34" pos:end="87:93"><expr pos:start="87:34" pos:end="87:92"><call pos:start="87:34" pos:end="87:92"><name pos:start="87:34" pos:end="87:40">fprintf</name><argument_list pos:start="87:41" pos:end="87:92">(<argument pos:start="87:42" pos:end="87:47"><expr pos:start="87:42" pos:end="87:47"><name pos:start="87:42" pos:end="87:47">stderr</name></expr></argument>, <argument pos:start="87:50" pos:end="87:75"><expr pos:start="87:50" pos:end="87:75"><literal type="string" pos:start="87:50" pos:end="87:75">"ERROR: step_index = %i\n"</literal></expr></argument>, <argument pos:start="87:78" pos:end="87:91"><expr pos:start="87:78" pos:end="87:91"><name pos:start="87:78" pos:end="87:91"><name pos:start="87:78" pos:end="87:79">cs</name><operator pos:start="87:80" pos:end="87:81">-&gt;</operator><name pos:start="87:82" pos:end="87:91">step_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="89:53"><if pos:start="89:9" pos:end="89:53">if <condition pos:start="89:12" pos:end="89:32">(<expr pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:14">cs</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">step_index</name></name> <operator pos:start="89:28" pos:end="89:28">&gt;</operator> <literal type="number" pos:start="89:30" pos:end="89:31">88</literal></expr>)</condition><block type="pseudo" pos:start="89:34" pos:end="89:53"><block_content pos:start="89:34" pos:end="89:53"> <expr_stmt pos:start="89:34" pos:end="89:53"><expr pos:start="89:34" pos:end="89:52"><name pos:start="89:34" pos:end="89:47"><name pos:start="89:34" pos:end="89:35">cs</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:47">step_index</name></name> <operator pos:start="89:49" pos:end="89:49">=</operator> <literal type="number" pos:start="89:51" pos:end="89:52">88</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:10">cs</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:16">step</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:45"><name pos:start="93:20" pos:end="93:29">step_table</name><index pos:start="93:30" pos:end="93:45">[<expr pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:32">cs</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:44">step_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="99:22"><if pos:start="97:9" pos:end="99:22">if <condition pos:start="97:12" pos:end="97:26">(<expr pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:14">st</name> <operator pos:start="97:16" pos:end="97:17">&amp;&amp;</operator> <name pos:start="97:19" pos:end="97:25">channel</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:22"><block_content pos:start="99:13" pos:end="99:22">

            <expr_stmt pos:start="99:13" pos:end="99:22"><expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:19">samples</name><operator pos:start="99:20" pos:end="99:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><operator pos:start="103:9" pos:end="103:9">*</operator><name pos:start="103:10" pos:end="103:16">samples</name><operator pos:start="103:17" pos:end="103:18">++</operator> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:34"><name pos:start="103:22" pos:end="103:23">cs</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:34">predictor</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:22"><expr pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:15">samples</name> <operator pos:start="105:17" pos:end="105:18">+=</operator> <name pos:start="105:20" pos:end="105:21">st</name></expr>;</expr_stmt>



        <for pos:start="109:9" pos:end="121:9">for<control pos:start="109:12" pos:end="109:39">(<init pos:start="109:13" pos:end="109:17"><expr pos:start="109:13" pos:end="109:16"><name pos:start="109:13" pos:end="109:13">m</name><operator pos:start="109:14" pos:end="109:14">=</operator><literal type="number" pos:start="109:15" pos:end="109:16">32</literal></expr>;</init> <condition pos:start="109:19" pos:end="109:29"><expr pos:start="109:19" pos:end="109:28"><name pos:start="109:19" pos:end="109:19">n</name><operator pos:start="109:20" pos:end="109:20">&gt;</operator><literal type="number" pos:start="109:21" pos:end="109:21">0</literal> <operator pos:start="109:23" pos:end="109:24">&amp;&amp;</operator> <name pos:start="109:26" pos:end="109:26">m</name><operator pos:start="109:27" pos:end="109:27">&gt;</operator><literal type="number" pos:start="109:28" pos:end="109:28">0</literal></expr>;</condition> <incr pos:start="109:31" pos:end="109:38"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:31">n</name><operator pos:start="109:32" pos:end="109:33">--</operator></expr><operator pos:start="109:34" pos:end="109:34">,</operator> <expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:36">m</name><operator pos:start="109:37" pos:end="109:38">--</operator></expr></incr>)</control> <block pos:start="109:41" pos:end="121:9">{<block_content pos:start="111:13" pos:end="119:19"> <comment type="block" pos:start="109:43" pos:end="109:113">/* in QuickTime, IMA is encoded by chuncks of 34 bytes (=64 samples) */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:66"><expr pos:start="111:13" pos:end="111:65"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:20">samples</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <call pos:start="111:24" pos:end="111:65"><name pos:start="111:24" pos:end="111:46">adpcm_ima_expand_nibble</name><argument_list pos:start="111:47" pos:end="111:65">(<argument pos:start="111:48" pos:end="111:49"><expr pos:start="111:48" pos:end="111:49"><name pos:start="111:48" pos:end="111:49">cs</name></expr></argument>, <argument pos:start="111:52" pos:end="111:64"><expr pos:start="111:52" pos:end="111:64"><name pos:start="111:52" pos:end="111:57"><name pos:start="111:52" pos:end="111:54">src</name><index pos:start="111:55" pos:end="111:57">[<expr pos:start="111:56" pos:end="111:56"><literal type="number" pos:start="111:56" pos:end="111:56">0</literal></expr>]</index></name> <operator pos:start="111:59" pos:end="111:59">&amp;</operator> <literal type="number" pos:start="111:61" pos:end="111:64">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:39"><expr pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:19">samples</name> <operator pos:start="113:21" pos:end="113:22">+=</operator> <name pos:start="113:24" pos:end="113:38"><name pos:start="113:24" pos:end="113:28">avctx</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:38">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:73"><expr pos:start="115:13" pos:end="115:72"><operator pos:start="115:13" pos:end="115:13">*</operator><name pos:start="115:14" pos:end="115:20">samples</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:72"><name pos:start="115:24" pos:end="115:46">adpcm_ima_expand_nibble</name><argument_list pos:start="115:47" pos:end="115:72">(<argument pos:start="115:48" pos:end="115:49"><expr pos:start="115:48" pos:end="115:49"><name pos:start="115:48" pos:end="115:49">cs</name></expr></argument>, <argument pos:start="115:52" pos:end="115:71"><expr pos:start="115:52" pos:end="115:71"><operator pos:start="115:52" pos:end="115:52">(</operator><name pos:start="115:53" pos:end="115:58"><name pos:start="115:53" pos:end="115:55">src</name><index pos:start="115:56" pos:end="115:58">[<expr pos:start="115:57" pos:end="115:57"><literal type="number" pos:start="115:57" pos:end="115:57">0</literal></expr>]</index></name> <operator pos:start="115:60" pos:end="115:61">&gt;&gt;</operator> <literal type="number" pos:start="115:63" pos:end="115:63">4</literal><operator pos:start="115:64" pos:end="115:64">)</operator> <operator pos:start="115:66" pos:end="115:66">&amp;</operator> <literal type="number" pos:start="115:68" pos:end="115:71">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:39"><expr pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:19">samples</name> <operator pos:start="117:21" pos:end="117:22">+=</operator> <name pos:start="117:24" pos:end="117:38"><name pos:start="117:24" pos:end="117:28">avctx</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:38">channels</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:19"><expr pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:15">src</name> <operator pos:start="119:17" pos:end="119:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="125:9" pos:end="137:9"><if pos:start="125:9" pos:end="137:9">if<condition pos:start="125:11" pos:end="125:14">(<expr pos:start="125:12" pos:end="125:13"><name pos:start="125:12" pos:end="125:13">st</name></expr>)</condition> <block pos:start="125:16" pos:end="137:9">{<block_content pos:start="127:13" pos:end="135:13"> <comment type="block" pos:start="125:18" pos:end="125:48">/* handle stereo interlacing */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:43"><expr pos:start="127:13" pos:end="127:42"><name pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:13">c</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:22">channel</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <operator pos:start="127:26" pos:end="127:26">(</operator><name pos:start="127:27" pos:end="127:33">channel</name> <operator pos:start="127:35" pos:end="127:35">+</operator> <literal type="number" pos:start="127:37" pos:end="127:37">1</literal><operator pos:start="127:38" pos:end="127:38">)</operator> <operator pos:start="127:40" pos:end="127:40">%</operator> <literal type="number" pos:start="127:42" pos:end="127:42">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="127:45" pos:end="127:101">/* we get one packet for left, then one for right data */</comment>

            <if_stmt pos:start="129:13" pos:end="135:13"><if pos:start="129:13" pos:end="135:13">if<condition pos:start="129:15" pos:end="129:28">(<expr pos:start="129:16" pos:end="129:27"><name pos:start="129:16" pos:end="129:22">channel</name> <operator pos:start="129:24" pos:end="129:25">==</operator> <literal type="number" pos:start="129:27" pos:end="129:27">0</literal></expr>)</condition> <block pos:start="129:30" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:33"> <comment type="block" pos:start="129:32" pos:end="129:88">/* wait for the other packet before outputing anything */</comment>

                <expr_stmt pos:start="131:17" pos:end="131:31"><expr pos:start="131:17" pos:end="131:30"><operator pos:start="131:17" pos:end="131:17">*</operator><name pos:start="131:18" pos:end="131:26">data_size</name> <operator pos:start="131:28" pos:end="131:28">=</operator> <literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr>;</expr_stmt>

                <return pos:start="133:17" pos:end="133:33">return <expr pos:start="133:24" pos:end="133:32"><name pos:start="133:24" pos:end="133:26">src</name> <operator pos:start="133:28" pos:end="133:28">-</operator> <name pos:start="133:30" pos:end="133:32">buf</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:32">case <expr pos:start="141:10" pos:end="141:31"><name pos:start="141:10" pos:end="141:31">CODEC_ID_ADPCM_IMA_WAV</name></expr>:</case>

        <if_stmt pos:start="143:9" pos:end="145:42"><if pos:start="143:9" pos:end="145:42">if <condition pos:start="143:12" pos:end="143:69">(<expr pos:start="143:13" pos:end="143:68"><name pos:start="143:13" pos:end="143:30"><name pos:start="143:13" pos:end="143:17">avctx</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:30">block_align</name></name> <operator pos:start="143:32" pos:end="143:33">!=</operator> <literal type="number" pos:start="143:35" pos:end="143:35">0</literal> <operator pos:start="143:37" pos:end="143:38">&amp;&amp;</operator> <name pos:start="143:40" pos:end="143:47">buf_size</name> <operator pos:start="143:49" pos:end="143:49">&gt;</operator> <name pos:start="143:51" pos:end="143:68"><name pos:start="143:51" pos:end="143:55">avctx</name><operator pos:start="143:56" pos:end="143:57">-&gt;</operator><name pos:start="143:58" pos:end="143:68">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:42"><block_content pos:start="145:13" pos:end="145:42">

            <expr_stmt pos:start="145:13" pos:end="145:42"><expr pos:start="145:13" pos:end="145:41"><name pos:start="145:13" pos:end="145:20">buf_size</name> <operator pos:start="145:22" pos:end="145:22">=</operator> <name pos:start="145:24" pos:end="145:41"><name pos:start="145:24" pos:end="145:28">avctx</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



	<comment type="line" pos:start="149:9" pos:end="149:38">// XXX: do as per-channel loop</comment>

        <expr_stmt pos:start="151:9" pos:end="151:29"><expr pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:10">cs</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <operator pos:start="151:14" pos:end="151:14">&amp;</operator><operator pos:start="151:15" pos:end="151:15">(</operator><name pos:start="151:16" pos:end="151:27"><name pos:start="151:16" pos:end="151:16">c</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:24">status</name><index pos:start="151:25" pos:end="151:27">[<expr pos:start="151:26" pos:end="151:26"><literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>]</index></name><operator pos:start="151:28" pos:end="151:28">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:41"><expr pos:start="153:9" pos:end="153:40"><name pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:10">cs</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:21">predictor</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <operator pos:start="153:25" pos:end="153:25">(</operator><operator pos:start="153:26" pos:end="153:26">*</operator><name pos:start="153:27" pos:end="153:29">src</name><operator pos:start="153:30" pos:end="153:31">++</operator><operator pos:start="153:32" pos:end="153:32">)</operator> <operator pos:start="153:34" pos:end="153:34">&amp;</operator> <literal type="number" pos:start="153:36" pos:end="153:40">0x0FF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:51"><expr pos:start="155:9" pos:end="155:50"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:10">cs</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:21">predictor</name></name> <operator pos:start="155:23" pos:end="155:24">|=</operator> <operator pos:start="155:26" pos:end="155:26">(</operator><operator pos:start="155:27" pos:end="155:27">(</operator><operator pos:start="155:28" pos:end="155:28">*</operator><name pos:start="155:29" pos:end="155:31">src</name><operator pos:start="155:32" pos:end="155:33">++</operator><operator pos:start="155:34" pos:end="155:34">)</operator> <operator pos:start="155:36" pos:end="155:37">&lt;&lt;</operator> <literal type="number" pos:start="155:39" pos:end="155:39">8</literal><operator pos:start="155:40" pos:end="155:40">)</operator> <operator pos:start="155:42" pos:end="155:42">&amp;</operator> <literal type="number" pos:start="155:44" pos:end="155:50">0x0FF00</literal></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="159:37"><if pos:start="157:9" pos:end="159:37">if<condition pos:start="157:11" pos:end="157:34">(<expr pos:start="157:12" pos:end="157:33"><name pos:start="157:12" pos:end="157:24"><name pos:start="157:12" pos:end="157:13">cs</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:24">predictor</name></name> <operator pos:start="157:26" pos:end="157:26">&amp;</operator> <literal type="number" pos:start="157:28" pos:end="157:33">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:37"><block_content pos:start="159:13" pos:end="159:37">

            <expr_stmt pos:start="159:13" pos:end="159:37"><expr pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:14">cs</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:25">predictor</name></name> <operator pos:start="159:27" pos:end="159:28">-=</operator> <literal type="number" pos:start="159:30" pos:end="159:36">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:38"><expr pos:start="161:9" pos:end="161:37"><call pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:22">CLAMP_TO_SHORT</name><argument_list pos:start="161:23" pos:end="161:37">(<argument pos:start="161:24" pos:end="161:36"><expr pos:start="161:24" pos:end="161:36"><name pos:start="161:24" pos:end="161:36"><name pos:start="161:24" pos:end="161:25">cs</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:36">predictor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="line" pos:start="165:9" pos:end="165:63">// XXX: is this correct ??: *samples++ = cs-&gt;predictor;</comment>



	<expr_stmt pos:start="169:9" pos:end="169:32"><expr pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:10">cs</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:22">step_index</name></name> <operator pos:start="169:24" pos:end="169:24">=</operator> <operator pos:start="169:26" pos:end="169:26">*</operator><name pos:start="169:27" pos:end="169:29">src</name><operator pos:start="169:30" pos:end="169:31">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="171:51"><if pos:start="171:9" pos:end="171:51">if <condition pos:start="171:12" pos:end="171:31">(<expr pos:start="171:13" pos:end="171:30"><name pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:14">cs</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:26">step_index</name></name> <operator pos:start="171:28" pos:end="171:28">&lt;</operator> <literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>)</condition><block type="pseudo" pos:start="171:33" pos:end="171:51"><block_content pos:start="171:33" pos:end="171:51"> <expr_stmt pos:start="171:33" pos:end="171:51"><expr pos:start="171:33" pos:end="171:50"><name pos:start="171:33" pos:end="171:46"><name pos:start="171:33" pos:end="171:34">cs</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:46">step_index</name></name> <operator pos:start="171:48" pos:end="171:48">=</operator> <literal type="number" pos:start="171:50" pos:end="171:50">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="173:53"><if pos:start="173:9" pos:end="173:53">if <condition pos:start="173:12" pos:end="173:32">(<expr pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:26"><name pos:start="173:13" pos:end="173:14">cs</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:26">step_index</name></name> <operator pos:start="173:28" pos:end="173:28">&gt;</operator> <literal type="number" pos:start="173:30" pos:end="173:31">88</literal></expr>)</condition><block type="pseudo" pos:start="173:34" pos:end="173:53"><block_content pos:start="173:34" pos:end="173:53"> <expr_stmt pos:start="173:34" pos:end="173:53"><expr pos:start="173:34" pos:end="173:52"><name pos:start="173:34" pos:end="173:47"><name pos:start="173:34" pos:end="173:35">cs</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:47">step_index</name></name> <operator pos:start="173:49" pos:end="173:49">=</operator> <literal type="number" pos:start="173:51" pos:end="173:52">88</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="175:9" pos:end="175:71"><if pos:start="175:9" pos:end="175:71">if <condition pos:start="175:12" pos:end="175:19">(<expr pos:start="175:13" pos:end="175:18"><operator pos:start="175:13" pos:end="175:13">*</operator><name pos:start="175:14" pos:end="175:16">src</name><operator pos:start="175:17" pos:end="175:18">++</operator></expr>)</condition><block type="pseudo" pos:start="175:21" pos:end="175:71"><block_content pos:start="175:21" pos:end="175:71"> <expr_stmt pos:start="175:21" pos:end="175:71"><expr pos:start="175:21" pos:end="175:70"><call pos:start="175:21" pos:end="175:70"><name pos:start="175:21" pos:end="175:27">fprintf</name><argument_list pos:start="175:28" pos:end="175:70">(<argument pos:start="175:29" pos:end="175:34"><expr pos:start="175:29" pos:end="175:34"><name pos:start="175:29" pos:end="175:34">stderr</name></expr></argument>, <argument pos:start="175:37" pos:end="175:69"><expr pos:start="175:37" pos:end="175:69"><literal type="string" pos:start="175:37" pos:end="175:69">"unused byte should be null !!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="175:73" pos:end="175:84">/* unused */</comment>



        <if_stmt pos:start="179:9" pos:end="207:9"><if pos:start="179:9" pos:end="207:9">if <condition pos:start="179:12" pos:end="179:15">(<expr pos:start="179:13" pos:end="179:14"><name pos:start="179:13" pos:end="179:14">st</name></expr>)</condition> <block pos:start="179:17" pos:end="207:9">{<block_content pos:start="181:13" pos:end="205:18">

            <expr_stmt pos:start="181:13" pos:end="181:33"><expr pos:start="181:13" pos:end="181:32"><name pos:start="181:13" pos:end="181:14">cs</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <operator pos:start="181:18" pos:end="181:18">&amp;</operator><operator pos:start="181:19" pos:end="181:19">(</operator><name pos:start="181:20" pos:end="181:31"><name pos:start="181:20" pos:end="181:20">c</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:28">status</name><index pos:start="181:29" pos:end="181:31">[<expr pos:start="181:30" pos:end="181:30"><literal type="number" pos:start="181:30" pos:end="181:30">1</literal></expr>]</index></name><operator pos:start="181:32" pos:end="181:32">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:45"><expr pos:start="183:13" pos:end="183:44"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:14">cs</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:25">predictor</name></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <operator pos:start="183:29" pos:end="183:29">(</operator><operator pos:start="183:30" pos:end="183:30">*</operator><name pos:start="183:31" pos:end="183:33">src</name><operator pos:start="183:34" pos:end="183:35">++</operator><operator pos:start="183:36" pos:end="183:36">)</operator> <operator pos:start="183:38" pos:end="183:38">&amp;</operator> <literal type="number" pos:start="183:40" pos:end="183:44">0x0FF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:55"><expr pos:start="185:13" pos:end="185:54"><name pos:start="185:13" pos:end="185:25"><name pos:start="185:13" pos:end="185:14">cs</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:25">predictor</name></name> <operator pos:start="185:27" pos:end="185:28">|=</operator> <operator pos:start="185:30" pos:end="185:30">(</operator><operator pos:start="185:31" pos:end="185:31">(</operator><operator pos:start="185:32" pos:end="185:32">*</operator><name pos:start="185:33" pos:end="185:35">src</name><operator pos:start="185:36" pos:end="185:37">++</operator><operator pos:start="185:38" pos:end="185:38">)</operator> <operator pos:start="185:40" pos:end="185:41">&lt;&lt;</operator> <literal type="number" pos:start="185:43" pos:end="185:43">8</literal><operator pos:start="185:44" pos:end="185:44">)</operator> <operator pos:start="185:46" pos:end="185:46">&amp;</operator> <literal type="number" pos:start="185:48" pos:end="185:54">0x0FF00</literal></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="189:41"><if pos:start="187:13" pos:end="189:41">if<condition pos:start="187:15" pos:end="187:38">(<expr pos:start="187:16" pos:end="187:37"><name pos:start="187:16" pos:end="187:28"><name pos:start="187:16" pos:end="187:17">cs</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:28">predictor</name></name> <operator pos:start="187:30" pos:end="187:30">&amp;</operator> <literal type="number" pos:start="187:32" pos:end="187:37">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:41"><block_content pos:start="189:17" pos:end="189:41">

                <expr_stmt pos:start="189:17" pos:end="189:41"><expr pos:start="189:17" pos:end="189:40"><name pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:18">cs</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:29">predictor</name></name> <operator pos:start="189:31" pos:end="189:32">-=</operator> <literal type="number" pos:start="189:34" pos:end="189:40">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:42"><expr pos:start="191:13" pos:end="191:41"><call pos:start="191:13" pos:end="191:41"><name pos:start="191:13" pos:end="191:26">CLAMP_TO_SHORT</name><argument_list pos:start="191:27" pos:end="191:41">(<argument pos:start="191:28" pos:end="191:40"><expr pos:start="191:28" pos:end="191:40"><name pos:start="191:28" pos:end="191:40"><name pos:start="191:28" pos:end="191:29">cs</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:40">predictor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	    <comment type="line" pos:start="195:13" pos:end="195:67">// XXX: is this correct ??: *samples++ = cs-&gt;predictor;</comment>



	    <expr_stmt pos:start="199:13" pos:end="199:36"><expr pos:start="199:13" pos:end="199:35"><name pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:14">cs</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:26">step_index</name></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <operator pos:start="199:30" pos:end="199:30">*</operator><name pos:start="199:31" pos:end="199:33">src</name><operator pos:start="199:34" pos:end="199:35">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="201:13" pos:end="201:55"><if pos:start="201:13" pos:end="201:55">if <condition pos:start="201:16" pos:end="201:35">(<expr pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:18">cs</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:30">step_index</name></name> <operator pos:start="201:32" pos:end="201:32">&lt;</operator> <literal type="number" pos:start="201:34" pos:end="201:34">0</literal></expr>)</condition><block type="pseudo" pos:start="201:37" pos:end="201:55"><block_content pos:start="201:37" pos:end="201:55"> <expr_stmt pos:start="201:37" pos:end="201:55"><expr pos:start="201:37" pos:end="201:54"><name pos:start="201:37" pos:end="201:50"><name pos:start="201:37" pos:end="201:38">cs</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:50">step_index</name></name> <operator pos:start="201:52" pos:end="201:52">=</operator> <literal type="number" pos:start="201:54" pos:end="201:54">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="203:13" pos:end="203:57"><if pos:start="203:13" pos:end="203:57">if <condition pos:start="203:16" pos:end="203:36">(<expr pos:start="203:17" pos:end="203:35"><name pos:start="203:17" pos:end="203:30"><name pos:start="203:17" pos:end="203:18">cs</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:30">step_index</name></name> <operator pos:start="203:32" pos:end="203:32">&gt;</operator> <literal type="number" pos:start="203:34" pos:end="203:35">88</literal></expr>)</condition><block type="pseudo" pos:start="203:38" pos:end="203:57"><block_content pos:start="203:38" pos:end="203:57"> <expr_stmt pos:start="203:38" pos:end="203:57"><expr pos:start="203:38" pos:end="203:56"><name pos:start="203:38" pos:end="203:51"><name pos:start="203:38" pos:end="203:39">cs</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:51">step_index</name></name> <operator pos:start="203:53" pos:end="203:53">=</operator> <literal type="number" pos:start="203:55" pos:end="203:56">88</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:18"><expr pos:start="205:13" pos:end="205:17"><name pos:start="205:13" pos:end="205:15">src</name><operator pos:start="205:16" pos:end="205:17">++</operator></expr>;</expr_stmt> <comment type="block" pos:start="205:20" pos:end="205:48">/* if != 0  -&gt; out-of-sync */</comment>

        </block_content>}</block></if></if_stmt>



        <for pos:start="211:9" pos:end="237:9">for<control pos:start="211:12" pos:end="211:41">(<init pos:start="211:13" pos:end="211:16"><expr pos:start="211:13" pos:end="211:15"><name pos:start="211:13" pos:end="211:13">m</name><operator pos:start="211:14" pos:end="211:14">=</operator><literal type="number" pos:start="211:15" pos:end="211:15">4</literal></expr>;</init> <condition pos:start="211:18" pos:end="211:40"><expr pos:start="211:18" pos:end="211:39"><name pos:start="211:18" pos:end="211:20">src</name> <operator pos:start="211:22" pos:end="211:22">&lt;</operator> <operator pos:start="211:24" pos:end="211:24">(</operator><name pos:start="211:25" pos:end="211:27">buf</name> <operator pos:start="211:29" pos:end="211:29">+</operator> <name pos:start="211:31" pos:end="211:38">buf_size</name><operator pos:start="211:39" pos:end="211:39">)</operator></expr>;</condition><incr/>)</control> <block pos:start="211:43" pos:end="237:9">{<block_content pos:start="213:13" pos:end="235:18">

	    <expr_stmt pos:start="213:13" pos:end="213:79"><expr pos:start="213:13" pos:end="213:78"><operator pos:start="213:13" pos:end="213:13">*</operator><name pos:start="213:14" pos:end="213:20">samples</name><operator pos:start="213:21" pos:end="213:22">++</operator> <operator pos:start="213:24" pos:end="213:24">=</operator> <call pos:start="213:26" pos:end="213:78"><name pos:start="213:26" pos:end="213:48">adpcm_ima_expand_nibble</name><argument_list pos:start="213:49" pos:end="213:78">(<argument pos:start="213:50" pos:end="213:62"><expr pos:start="213:50" pos:end="213:62"><operator pos:start="213:50" pos:end="213:50">&amp;</operator><name pos:start="213:51" pos:end="213:62"><name pos:start="213:51" pos:end="213:51">c</name><operator pos:start="213:52" pos:end="213:53">-&gt;</operator><name pos:start="213:54" pos:end="213:59">status</name><index pos:start="213:60" pos:end="213:62">[<expr pos:start="213:61" pos:end="213:61"><literal type="number" pos:start="213:61" pos:end="213:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:65" pos:end="213:77"><expr pos:start="213:65" pos:end="213:77"><name pos:start="213:65" pos:end="213:70"><name pos:start="213:65" pos:end="213:67">src</name><index pos:start="213:68" pos:end="213:70">[<expr pos:start="213:69" pos:end="213:69"><literal type="number" pos:start="213:69" pos:end="213:69">0</literal></expr>]</index></name> <operator pos:start="213:72" pos:end="213:72">&amp;</operator> <literal type="number" pos:start="213:74" pos:end="213:77">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="217:83"><if pos:start="215:13" pos:end="217:83">if <condition pos:start="215:16" pos:end="215:19">(<expr pos:start="215:17" pos:end="215:18"><name pos:start="215:17" pos:end="215:18">st</name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:83"><block_content pos:start="217:17" pos:end="217:83">

                <expr_stmt pos:start="217:17" pos:end="217:83"><expr pos:start="217:17" pos:end="217:82"><operator pos:start="217:17" pos:end="217:17">*</operator><name pos:start="217:18" pos:end="217:24">samples</name><operator pos:start="217:25" pos:end="217:26">++</operator> <operator pos:start="217:28" pos:end="217:28">=</operator> <call pos:start="217:30" pos:end="217:82"><name pos:start="217:30" pos:end="217:52">adpcm_ima_expand_nibble</name><argument_list pos:start="217:53" pos:end="217:82">(<argument pos:start="217:54" pos:end="217:66"><expr pos:start="217:54" pos:end="217:66"><operator pos:start="217:54" pos:end="217:54">&amp;</operator><name pos:start="217:55" pos:end="217:66"><name pos:start="217:55" pos:end="217:55">c</name><operator pos:start="217:56" pos:end="217:57">-&gt;</operator><name pos:start="217:58" pos:end="217:63">status</name><index pos:start="217:64" pos:end="217:66">[<expr pos:start="217:65" pos:end="217:65"><literal type="number" pos:start="217:65" pos:end="217:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:69" pos:end="217:81"><expr pos:start="217:69" pos:end="217:81"><name pos:start="217:69" pos:end="217:74"><name pos:start="217:69" pos:end="217:71">src</name><index pos:start="217:72" pos:end="217:74">[<expr pos:start="217:73" pos:end="217:73"><literal type="number" pos:start="217:73" pos:end="217:73">4</literal></expr>]</index></name> <operator pos:start="217:76" pos:end="217:76">&amp;</operator> <literal type="number" pos:start="217:78" pos:end="217:81">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:86"><expr pos:start="219:13" pos:end="219:85"><operator pos:start="219:13" pos:end="219:13">*</operator><name pos:start="219:14" pos:end="219:20">samples</name><operator pos:start="219:21" pos:end="219:22">++</operator> <operator pos:start="219:24" pos:end="219:24">=</operator> <call pos:start="219:26" pos:end="219:85"><name pos:start="219:26" pos:end="219:48">adpcm_ima_expand_nibble</name><argument_list pos:start="219:49" pos:end="219:85">(<argument pos:start="219:50" pos:end="219:62"><expr pos:start="219:50" pos:end="219:62"><operator pos:start="219:50" pos:end="219:50">&amp;</operator><name pos:start="219:51" pos:end="219:62"><name pos:start="219:51" pos:end="219:51">c</name><operator pos:start="219:52" pos:end="219:53">-&gt;</operator><name pos:start="219:54" pos:end="219:59">status</name><index pos:start="219:60" pos:end="219:62">[<expr pos:start="219:61" pos:end="219:61"><literal type="number" pos:start="219:61" pos:end="219:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:65" pos:end="219:84"><expr pos:start="219:65" pos:end="219:84"><operator pos:start="219:65" pos:end="219:65">(</operator><name pos:start="219:66" pos:end="219:71"><name pos:start="219:66" pos:end="219:68">src</name><index pos:start="219:69" pos:end="219:71">[<expr pos:start="219:70" pos:end="219:70"><literal type="number" pos:start="219:70" pos:end="219:70">0</literal></expr>]</index></name> <operator pos:start="219:73" pos:end="219:74">&gt;&gt;</operator> <literal type="number" pos:start="219:76" pos:end="219:76">4</literal><operator pos:start="219:77" pos:end="219:77">)</operator> <operator pos:start="219:79" pos:end="219:79">&amp;</operator> <literal type="number" pos:start="219:81" pos:end="219:84">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="221:13" pos:end="233:13"><if pos:start="221:13" pos:end="233:13">if <condition pos:start="221:16" pos:end="221:19">(<expr pos:start="221:17" pos:end="221:18"><name pos:start="221:17" pos:end="221:18">st</name></expr>)</condition> <block pos:start="221:21" pos:end="233:13">{<block_content pos:start="223:17" pos:end="231:17">

                <expr_stmt pos:start="223:17" pos:end="223:90"><expr pos:start="223:17" pos:end="223:89"><operator pos:start="223:17" pos:end="223:17">*</operator><name pos:start="223:18" pos:end="223:24">samples</name><operator pos:start="223:25" pos:end="223:26">++</operator> <operator pos:start="223:28" pos:end="223:28">=</operator> <call pos:start="223:30" pos:end="223:89"><name pos:start="223:30" pos:end="223:52">adpcm_ima_expand_nibble</name><argument_list pos:start="223:53" pos:end="223:89">(<argument pos:start="223:54" pos:end="223:66"><expr pos:start="223:54" pos:end="223:66"><operator pos:start="223:54" pos:end="223:54">&amp;</operator><name pos:start="223:55" pos:end="223:66"><name pos:start="223:55" pos:end="223:55">c</name><operator pos:start="223:56" pos:end="223:57">-&gt;</operator><name pos:start="223:58" pos:end="223:63">status</name><index pos:start="223:64" pos:end="223:66">[<expr pos:start="223:65" pos:end="223:65"><literal type="number" pos:start="223:65" pos:end="223:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:69" pos:end="223:88"><expr pos:start="223:69" pos:end="223:88"><operator pos:start="223:69" pos:end="223:69">(</operator><name pos:start="223:70" pos:end="223:75"><name pos:start="223:70" pos:end="223:72">src</name><index pos:start="223:73" pos:end="223:75">[<expr pos:start="223:74" pos:end="223:74"><literal type="number" pos:start="223:74" pos:end="223:74">4</literal></expr>]</index></name> <operator pos:start="223:77" pos:end="223:78">&gt;&gt;</operator> <literal type="number" pos:start="223:80" pos:end="223:80">4</literal><operator pos:start="223:81" pos:end="223:81">)</operator> <operator pos:start="223:83" pos:end="223:83">&amp;</operator> <literal type="number" pos:start="223:85" pos:end="223:88">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="225:17" pos:end="231:17"><if pos:start="225:17" pos:end="231:17">if <condition pos:start="225:20" pos:end="225:25">(<expr pos:start="225:21" pos:end="225:24"><operator pos:start="225:21" pos:end="225:21">!</operator><operator pos:start="225:22" pos:end="225:23">--</operator><name pos:start="225:24" pos:end="225:24">m</name></expr>)</condition> <block pos:start="225:27" pos:end="231:17">{<block_content pos:start="227:21" pos:end="229:27">

		    <expr_stmt pos:start="227:21" pos:end="227:24"><expr pos:start="227:21" pos:end="227:23"><name pos:start="227:21" pos:end="227:21">m</name><operator pos:start="227:22" pos:end="227:22">=</operator><literal type="number" pos:start="227:23" pos:end="227:23">4</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="229:21" pos:end="229:27"><expr pos:start="229:21" pos:end="229:26"><name pos:start="229:21" pos:end="229:23">src</name><operator pos:start="229:24" pos:end="229:25">+=</operator><literal type="number" pos:start="229:26" pos:end="229:26">4</literal></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="235:13" pos:end="235:18"><expr pos:start="235:13" pos:end="235:17"><name pos:start="235:13" pos:end="235:15">src</name><operator pos:start="235:16" pos:end="235:17">++</operator></expr>;</expr_stmt>

	</block_content>}</block></for>

        <break pos:start="239:9" pos:end="239:14">break;</break>

    <case pos:start="241:5" pos:end="241:28">case <expr pos:start="241:10" pos:end="241:27"><name pos:start="241:10" pos:end="241:27">CODEC_ID_ADPCM_4XM</name></expr>:</case>

        <expr_stmt pos:start="243:9" pos:end="243:29"><expr pos:start="243:9" pos:end="243:28"><name pos:start="243:9" pos:end="243:10">cs</name> <operator pos:start="243:12" pos:end="243:12">=</operator> <operator pos:start="243:14" pos:end="243:14">&amp;</operator><operator pos:start="243:15" pos:end="243:15">(</operator><name pos:start="243:16" pos:end="243:27"><name pos:start="243:16" pos:end="243:16">c</name><operator pos:start="243:17" pos:end="243:18">-&gt;</operator><name pos:start="243:19" pos:end="243:24">status</name><index pos:start="243:25" pos:end="243:27">[<expr pos:start="243:26" pos:end="243:26"><literal type="number" pos:start="243:26" pos:end="243:26">0</literal></expr>]</index></name><operator pos:start="243:28" pos:end="243:28">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:64"><expr pos:start="245:9" pos:end="245:63"><name pos:start="245:9" pos:end="245:20"><name pos:start="245:9" pos:end="245:9">c</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:17">status</name><index pos:start="245:18" pos:end="245:20">[<expr pos:start="245:19" pos:end="245:19"><literal type="number" pos:start="245:19" pos:end="245:19">0</literal></expr>]</index></name><operator pos:start="245:21" pos:end="245:21">.</operator><name pos:start="245:22" pos:end="245:30">predictor</name><operator pos:start="245:31" pos:end="245:31">=</operator> <operator pos:start="245:33" pos:end="245:33">(</operator><name pos:start="245:34" pos:end="245:40">int16_t</name><operator pos:start="245:41" pos:end="245:41">)</operator><operator pos:start="245:42" pos:end="245:42">(</operator><name pos:start="245:43" pos:end="245:48"><name pos:start="245:43" pos:end="245:45">src</name><index pos:start="245:46" pos:end="245:48">[<expr pos:start="245:47" pos:end="245:47"><literal type="number" pos:start="245:47" pos:end="245:47">0</literal></expr>]</index></name> <operator pos:start="245:50" pos:end="245:50">+</operator> <operator pos:start="245:52" pos:end="245:52">(</operator><name pos:start="245:53" pos:end="245:58"><name pos:start="245:53" pos:end="245:55">src</name><index pos:start="245:56" pos:end="245:58">[<expr pos:start="245:57" pos:end="245:57"><literal type="number" pos:start="245:57" pos:end="245:57">1</literal></expr>]</index></name><operator pos:start="245:59" pos:end="245:60">&lt;&lt;</operator><literal type="number" pos:start="245:61" pos:end="245:61">8</literal><operator pos:start="245:62" pos:end="245:62">)</operator><operator pos:start="245:63" pos:end="245:63">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="245:66" pos:end="245:72"><expr pos:start="245:66" pos:end="245:71"><name pos:start="245:66" pos:end="245:68">src</name><operator pos:start="245:69" pos:end="245:70">+=</operator><literal type="number" pos:start="245:71" pos:end="245:71">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="251:9"><if pos:start="247:9" pos:end="251:9">if<condition pos:start="247:11" pos:end="247:14">(<expr pos:start="247:12" pos:end="247:13"><name pos:start="247:12" pos:end="247:13">st</name></expr>)</condition><block pos:start="247:15" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:76">

            <expr_stmt pos:start="249:13" pos:end="249:68"><expr pos:start="249:13" pos:end="249:67"><name pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:13">c</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:21">status</name><index pos:start="249:22" pos:end="249:24">[<expr pos:start="249:23" pos:end="249:23"><literal type="number" pos:start="249:23" pos:end="249:23">1</literal></expr>]</index></name><operator pos:start="249:25" pos:end="249:25">.</operator><name pos:start="249:26" pos:end="249:34">predictor</name><operator pos:start="249:35" pos:end="249:35">=</operator> <operator pos:start="249:37" pos:end="249:37">(</operator><name pos:start="249:38" pos:end="249:44">int16_t</name><operator pos:start="249:45" pos:end="249:45">)</operator><operator pos:start="249:46" pos:end="249:46">(</operator><name pos:start="249:47" pos:end="249:52"><name pos:start="249:47" pos:end="249:49">src</name><index pos:start="249:50" pos:end="249:52">[<expr pos:start="249:51" pos:end="249:51"><literal type="number" pos:start="249:51" pos:end="249:51">0</literal></expr>]</index></name> <operator pos:start="249:54" pos:end="249:54">+</operator> <operator pos:start="249:56" pos:end="249:56">(</operator><name pos:start="249:57" pos:end="249:62"><name pos:start="249:57" pos:end="249:59">src</name><index pos:start="249:60" pos:end="249:62">[<expr pos:start="249:61" pos:end="249:61"><literal type="number" pos:start="249:61" pos:end="249:61">1</literal></expr>]</index></name><operator pos:start="249:63" pos:end="249:64">&lt;&lt;</operator><literal type="number" pos:start="249:65" pos:end="249:65">8</literal><operator pos:start="249:66" pos:end="249:66">)</operator><operator pos:start="249:67" pos:end="249:67">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="249:70" pos:end="249:76"><expr pos:start="249:70" pos:end="249:75"><name pos:start="249:70" pos:end="249:72">src</name><operator pos:start="249:73" pos:end="249:74">+=</operator><literal type="number" pos:start="249:75" pos:end="249:75">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:65"><expr pos:start="253:9" pos:end="253:64"><name pos:start="253:9" pos:end="253:20"><name pos:start="253:9" pos:end="253:9">c</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:17">status</name><index pos:start="253:18" pos:end="253:20">[<expr pos:start="253:19" pos:end="253:19"><literal type="number" pos:start="253:19" pos:end="253:19">0</literal></expr>]</index></name><operator pos:start="253:21" pos:end="253:21">.</operator><name pos:start="253:22" pos:end="253:31">step_index</name><operator pos:start="253:32" pos:end="253:32">=</operator> <operator pos:start="253:34" pos:end="253:34">(</operator><name pos:start="253:35" pos:end="253:41">int16_t</name><operator pos:start="253:42" pos:end="253:42">)</operator><operator pos:start="253:43" pos:end="253:43">(</operator><name pos:start="253:44" pos:end="253:49"><name pos:start="253:44" pos:end="253:46">src</name><index pos:start="253:47" pos:end="253:49">[<expr pos:start="253:48" pos:end="253:48"><literal type="number" pos:start="253:48" pos:end="253:48">0</literal></expr>]</index></name> <operator pos:start="253:51" pos:end="253:51">+</operator> <operator pos:start="253:53" pos:end="253:53">(</operator><name pos:start="253:54" pos:end="253:59"><name pos:start="253:54" pos:end="253:56">src</name><index pos:start="253:57" pos:end="253:59">[<expr pos:start="253:58" pos:end="253:58"><literal type="number" pos:start="253:58" pos:end="253:58">1</literal></expr>]</index></name><operator pos:start="253:60" pos:end="253:61">&lt;&lt;</operator><literal type="number" pos:start="253:62" pos:end="253:62">8</literal><operator pos:start="253:63" pos:end="253:63">)</operator><operator pos:start="253:64" pos:end="253:64">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="253:67" pos:end="253:73"><expr pos:start="253:67" pos:end="253:72"><name pos:start="253:67" pos:end="253:69">src</name><operator pos:start="253:70" pos:end="253:71">+=</operator><literal type="number" pos:start="253:72" pos:end="253:72">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="255:9" pos:end="259:9"><if pos:start="255:9" pos:end="259:9">if<condition pos:start="255:11" pos:end="255:14">(<expr pos:start="255:12" pos:end="255:13"><name pos:start="255:12" pos:end="255:13">st</name></expr>)</condition><block pos:start="255:15" pos:end="259:9">{<block_content pos:start="257:13" pos:end="257:77">

            <expr_stmt pos:start="257:13" pos:end="257:69"><expr pos:start="257:13" pos:end="257:68"><name pos:start="257:13" pos:end="257:24"><name pos:start="257:13" pos:end="257:13">c</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:21">status</name><index pos:start="257:22" pos:end="257:24">[<expr pos:start="257:23" pos:end="257:23"><literal type="number" pos:start="257:23" pos:end="257:23">1</literal></expr>]</index></name><operator pos:start="257:25" pos:end="257:25">.</operator><name pos:start="257:26" pos:end="257:35">step_index</name><operator pos:start="257:36" pos:end="257:36">=</operator> <operator pos:start="257:38" pos:end="257:38">(</operator><name pos:start="257:39" pos:end="257:45">int16_t</name><operator pos:start="257:46" pos:end="257:46">)</operator><operator pos:start="257:47" pos:end="257:47">(</operator><name pos:start="257:48" pos:end="257:53"><name pos:start="257:48" pos:end="257:50">src</name><index pos:start="257:51" pos:end="257:53">[<expr pos:start="257:52" pos:end="257:52"><literal type="number" pos:start="257:52" pos:end="257:52">0</literal></expr>]</index></name> <operator pos:start="257:55" pos:end="257:55">+</operator> <operator pos:start="257:57" pos:end="257:57">(</operator><name pos:start="257:58" pos:end="257:63"><name pos:start="257:58" pos:end="257:60">src</name><index pos:start="257:61" pos:end="257:63">[<expr pos:start="257:62" pos:end="257:62"><literal type="number" pos:start="257:62" pos:end="257:62">1</literal></expr>]</index></name><operator pos:start="257:64" pos:end="257:65">&lt;&lt;</operator><literal type="number" pos:start="257:66" pos:end="257:66">8</literal><operator pos:start="257:67" pos:end="257:67">)</operator><operator pos:start="257:68" pos:end="257:68">)</operator></expr>;</expr_stmt> <expr_stmt pos:start="257:71" pos:end="257:77"><expr pos:start="257:71" pos:end="257:76"><name pos:start="257:71" pos:end="257:73">src</name><operator pos:start="257:74" pos:end="257:75">+=</operator><literal type="number" pos:start="257:76" pos:end="257:76">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="261:1" pos:end="261:57">//            if (cs-&gt;step_index &lt; 0) cs-&gt;step_index = 0;</comment>

<comment type="line" pos:start="263:1" pos:end="263:59">//            if (cs-&gt;step_index &gt; 88) cs-&gt;step_index = 88;</comment>



        <expr_stmt pos:start="267:9" pos:end="267:40"><expr pos:start="267:9" pos:end="267:39"><name pos:start="267:9" pos:end="267:9">m</name><operator pos:start="267:10" pos:end="267:10">=</operator> <operator pos:start="267:12" pos:end="267:12">(</operator><name pos:start="267:13" pos:end="267:20">buf_size</name> <operator pos:start="267:22" pos:end="267:22">-</operator> <operator pos:start="267:24" pos:end="267:24">(</operator><name pos:start="267:25" pos:end="267:27">src</name> <operator pos:start="267:29" pos:end="267:29">-</operator> <name pos:start="267:31" pos:end="267:33">buf</name><operator pos:start="267:34" pos:end="267:34">)</operator><operator pos:start="267:35" pos:end="267:35">)</operator><operator pos:start="267:36" pos:end="267:37">&gt;&gt;</operator><name pos:start="267:38" pos:end="267:39">st</name></expr>;</expr_stmt>

<comment type="line" pos:start="269:1" pos:end="269:82">//printf("%d %d %d %d\n", st, m, c-&gt;status[0].predictor, c-&gt;status[0].step_index);</comment>

        <comment type="line" pos:start="271:9" pos:end="271:68">//FIXME / XXX decode chanels individual &amp; interleave samples</comment>

        <for pos:start="273:9" pos:end="287:9">for<control pos:start="273:12" pos:end="273:26">(<init pos:start="273:13" pos:end="273:16"><expr pos:start="273:13" pos:end="273:15"><name pos:start="273:13" pos:end="273:13">i</name><operator pos:start="273:14" pos:end="273:14">=</operator><literal type="number" pos:start="273:15" pos:end="273:15">0</literal></expr>;</init> <condition pos:start="273:18" pos:end="273:21"><expr pos:start="273:18" pos:end="273:20"><name pos:start="273:18" pos:end="273:18">i</name><operator pos:start="273:19" pos:end="273:19">&lt;</operator><name pos:start="273:20" pos:end="273:20">m</name></expr>;</condition> <incr pos:start="273:23" pos:end="273:25"><expr pos:start="273:23" pos:end="273:25"><name pos:start="273:23" pos:end="273:23">i</name><operator pos:start="273:24" pos:end="273:25">++</operator></expr></incr>)</control> <block pos:start="273:28" pos:end="287:9">{<block_content pos:start="275:13" pos:end="285:83">

	    <expr_stmt pos:start="275:13" pos:end="275:79"><expr pos:start="275:13" pos:end="275:78"><operator pos:start="275:13" pos:end="275:13">*</operator><name pos:start="275:14" pos:end="275:20">samples</name><operator pos:start="275:21" pos:end="275:22">++</operator> <operator pos:start="275:24" pos:end="275:24">=</operator> <call pos:start="275:26" pos:end="275:78"><name pos:start="275:26" pos:end="275:48">adpcm_4xa_expand_nibble</name><argument_list pos:start="275:49" pos:end="275:78">(<argument pos:start="275:50" pos:end="275:62"><expr pos:start="275:50" pos:end="275:62"><operator pos:start="275:50" pos:end="275:50">&amp;</operator><name pos:start="275:51" pos:end="275:62"><name pos:start="275:51" pos:end="275:51">c</name><operator pos:start="275:52" pos:end="275:53">-&gt;</operator><name pos:start="275:54" pos:end="275:59">status</name><index pos:start="275:60" pos:end="275:62">[<expr pos:start="275:61" pos:end="275:61"><literal type="number" pos:start="275:61" pos:end="275:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="275:65" pos:end="275:77"><expr pos:start="275:65" pos:end="275:77"><name pos:start="275:65" pos:end="275:70"><name pos:start="275:65" pos:end="275:67">src</name><index pos:start="275:68" pos:end="275:70">[<expr pos:start="275:69" pos:end="275:69"><name pos:start="275:69" pos:end="275:69">i</name></expr>]</index></name> <operator pos:start="275:72" pos:end="275:72">&amp;</operator> <literal type="number" pos:start="275:74" pos:end="275:77">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="277:13" pos:end="279:85"><if pos:start="277:13" pos:end="279:85">if <condition pos:start="277:16" pos:end="277:19">(<expr pos:start="277:17" pos:end="277:18"><name pos:start="277:17" pos:end="277:18">st</name></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:85"><block_content pos:start="279:17" pos:end="279:85">

                <expr_stmt pos:start="279:17" pos:end="279:85"><expr pos:start="279:17" pos:end="279:84"><operator pos:start="279:17" pos:end="279:17">*</operator><name pos:start="279:18" pos:end="279:24">samples</name><operator pos:start="279:25" pos:end="279:26">++</operator> <operator pos:start="279:28" pos:end="279:28">=</operator> <call pos:start="279:30" pos:end="279:84"><name pos:start="279:30" pos:end="279:52">adpcm_4xa_expand_nibble</name><argument_list pos:start="279:53" pos:end="279:84">(<argument pos:start="279:54" pos:end="279:66"><expr pos:start="279:54" pos:end="279:66"><operator pos:start="279:54" pos:end="279:54">&amp;</operator><name pos:start="279:55" pos:end="279:66"><name pos:start="279:55" pos:end="279:55">c</name><operator pos:start="279:56" pos:end="279:57">-&gt;</operator><name pos:start="279:58" pos:end="279:63">status</name><index pos:start="279:64" pos:end="279:66">[<expr pos:start="279:65" pos:end="279:65"><literal type="number" pos:start="279:65" pos:end="279:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="279:69" pos:end="279:83"><expr pos:start="279:69" pos:end="279:83"><name pos:start="279:69" pos:end="279:76"><name pos:start="279:69" pos:end="279:71">src</name><index pos:start="279:72" pos:end="279:76">[<expr pos:start="279:73" pos:end="279:75"><name pos:start="279:73" pos:end="279:73">i</name><operator pos:start="279:74" pos:end="279:74">+</operator><name pos:start="279:75" pos:end="279:75">m</name></expr>]</index></name> <operator pos:start="279:78" pos:end="279:78">&amp;</operator> <literal type="number" pos:start="279:80" pos:end="279:83">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:77"><expr pos:start="281:13" pos:end="281:76"><operator pos:start="281:13" pos:end="281:13">*</operator><name pos:start="281:14" pos:end="281:20">samples</name><operator pos:start="281:21" pos:end="281:22">++</operator> <operator pos:start="281:24" pos:end="281:24">=</operator> <call pos:start="281:26" pos:end="281:76"><name pos:start="281:26" pos:end="281:48">adpcm_4xa_expand_nibble</name><argument_list pos:start="281:49" pos:end="281:76">(<argument pos:start="281:50" pos:end="281:62"><expr pos:start="281:50" pos:end="281:62"><operator pos:start="281:50" pos:end="281:50">&amp;</operator><name pos:start="281:51" pos:end="281:62"><name pos:start="281:51" pos:end="281:51">c</name><operator pos:start="281:52" pos:end="281:53">-&gt;</operator><name pos:start="281:54" pos:end="281:59">status</name><index pos:start="281:60" pos:end="281:62">[<expr pos:start="281:61" pos:end="281:61"><literal type="number" pos:start="281:61" pos:end="281:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:65" pos:end="281:75"><expr pos:start="281:65" pos:end="281:75"><name pos:start="281:65" pos:end="281:70"><name pos:start="281:65" pos:end="281:67">src</name><index pos:start="281:68" pos:end="281:70">[<expr pos:start="281:69" pos:end="281:69"><name pos:start="281:69" pos:end="281:69">i</name></expr>]</index></name> <operator pos:start="281:72" pos:end="281:73">&gt;&gt;</operator> <literal type="number" pos:start="281:75" pos:end="281:75">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="283:13" pos:end="285:83"><if pos:start="283:13" pos:end="285:83">if <condition pos:start="283:16" pos:end="283:19">(<expr pos:start="283:17" pos:end="283:18"><name pos:start="283:17" pos:end="283:18">st</name></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:83"><block_content pos:start="285:17" pos:end="285:83">

                <expr_stmt pos:start="285:17" pos:end="285:83"><expr pos:start="285:17" pos:end="285:82"><operator pos:start="285:17" pos:end="285:17">*</operator><name pos:start="285:18" pos:end="285:24">samples</name><operator pos:start="285:25" pos:end="285:26">++</operator> <operator pos:start="285:28" pos:end="285:28">=</operator> <call pos:start="285:30" pos:end="285:82"><name pos:start="285:30" pos:end="285:52">adpcm_4xa_expand_nibble</name><argument_list pos:start="285:53" pos:end="285:82">(<argument pos:start="285:54" pos:end="285:66"><expr pos:start="285:54" pos:end="285:66"><operator pos:start="285:54" pos:end="285:54">&amp;</operator><name pos:start="285:55" pos:end="285:66"><name pos:start="285:55" pos:end="285:55">c</name><operator pos:start="285:56" pos:end="285:57">-&gt;</operator><name pos:start="285:58" pos:end="285:63">status</name><index pos:start="285:64" pos:end="285:66">[<expr pos:start="285:65" pos:end="285:65"><literal type="number" pos:start="285:65" pos:end="285:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="285:69" pos:end="285:81"><expr pos:start="285:69" pos:end="285:81"><name pos:start="285:69" pos:end="285:76"><name pos:start="285:69" pos:end="285:71">src</name><index pos:start="285:72" pos:end="285:76">[<expr pos:start="285:73" pos:end="285:75"><name pos:start="285:73" pos:end="285:73">i</name><operator pos:start="285:74" pos:end="285:74">+</operator><name pos:start="285:75" pos:end="285:75">m</name></expr>]</index></name> <operator pos:start="285:78" pos:end="285:79">&gt;&gt;</operator> <literal type="number" pos:start="285:81" pos:end="285:81">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	</block_content>}</block></for>



        <expr_stmt pos:start="291:9" pos:end="291:21"><expr pos:start="291:9" pos:end="291:20"><name pos:start="291:9" pos:end="291:11">src</name> <operator pos:start="291:13" pos:end="291:14">+=</operator> <name pos:start="291:16" pos:end="291:16">m</name><operator pos:start="291:17" pos:end="291:18">&lt;&lt;</operator><name pos:start="291:19" pos:end="291:20">st</name></expr>;</expr_stmt>



        <break pos:start="295:9" pos:end="295:14">break;</break>

    <case pos:start="297:5" pos:end="297:27">case <expr pos:start="297:10" pos:end="297:26"><name pos:start="297:10" pos:end="297:26">CODEC_ID_ADPCM_MS</name></expr>:</case>

        <if_stmt pos:start="299:9" pos:end="301:42"><if pos:start="299:9" pos:end="301:42">if <condition pos:start="299:12" pos:end="299:69">(<expr pos:start="299:13" pos:end="299:68"><name pos:start="299:13" pos:end="299:30"><name pos:start="299:13" pos:end="299:17">avctx</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:30">block_align</name></name> <operator pos:start="299:32" pos:end="299:33">!=</operator> <literal type="number" pos:start="299:35" pos:end="299:35">0</literal> <operator pos:start="299:37" pos:end="299:38">&amp;&amp;</operator> <name pos:start="299:40" pos:end="299:47">buf_size</name> <operator pos:start="299:49" pos:end="299:49">&gt;</operator> <name pos:start="299:51" pos:end="299:68"><name pos:start="299:51" pos:end="299:55">avctx</name><operator pos:start="299:56" pos:end="299:57">-&gt;</operator><name pos:start="299:58" pos:end="299:68">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="301:13" pos:end="301:42"><block_content pos:start="301:13" pos:end="301:42">

            <expr_stmt pos:start="301:13" pos:end="301:42"><expr pos:start="301:13" pos:end="301:41"><name pos:start="301:13" pos:end="301:20">buf_size</name> <operator pos:start="301:22" pos:end="301:22">=</operator> <name pos:start="301:24" pos:end="301:41"><name pos:start="301:24" pos:end="301:28">avctx</name><operator pos:start="301:29" pos:end="301:30">-&gt;</operator><name pos:start="301:31" pos:end="301:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:43"><expr pos:start="303:9" pos:end="303:42"><name pos:start="303:9" pos:end="303:9">n</name> <operator pos:start="303:11" pos:end="303:11">=</operator> <name pos:start="303:13" pos:end="303:20">buf_size</name> <operator pos:start="303:22" pos:end="303:22">-</operator> <literal type="number" pos:start="303:24" pos:end="303:24">7</literal> <operator pos:start="303:26" pos:end="303:26">*</operator> <name pos:start="303:28" pos:end="303:42"><name pos:start="303:28" pos:end="303:32">avctx</name><operator pos:start="303:33" pos:end="303:34">-&gt;</operator><name pos:start="303:35" pos:end="303:42">channels</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="307:22"><if pos:start="305:9" pos:end="307:22">if <condition pos:start="305:12" pos:end="305:18">(<expr pos:start="305:13" pos:end="305:17"><name pos:start="305:13" pos:end="305:13">n</name> <operator pos:start="305:15" pos:end="305:15">&lt;</operator> <literal type="number" pos:start="305:17" pos:end="305:17">0</literal></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:22"><block_content pos:start="307:13" pos:end="307:22">

            <return pos:start="307:13" pos:end="307:22">return <expr pos:start="307:20" pos:end="307:21"><operator pos:start="307:20" pos:end="307:20">-</operator><literal type="number" pos:start="307:21" pos:end="307:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:38"><expr pos:start="309:9" pos:end="309:37"><name pos:start="309:9" pos:end="309:26"><name pos:start="309:9" pos:end="309:23">block_predictor</name><index pos:start="309:24" pos:end="309:26">[<expr pos:start="309:25" pos:end="309:25"><literal type="number" pos:start="309:25" pos:end="309:25">0</literal></expr>]</index></name> <operator pos:start="309:28" pos:end="309:28">=</operator> <operator pos:start="309:30" pos:end="309:30">(</operator><operator pos:start="309:31" pos:end="309:31">*</operator><name pos:start="309:32" pos:end="309:34">src</name><operator pos:start="309:35" pos:end="309:36">++</operator><operator pos:start="309:37" pos:end="309:37">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="309:40" pos:end="309:60">/* should be bound */</comment>

        <expr_stmt pos:start="311:9" pos:end="311:110"><expr pos:start="311:9" pos:end="311:109"><name pos:start="311:9" pos:end="311:26"><name pos:start="311:9" pos:end="311:23">block_predictor</name><index pos:start="311:24" pos:end="311:26">[<expr pos:start="311:25" pos:end="311:25"><literal type="number" pos:start="311:25" pos:end="311:25">0</literal></expr>]</index></name> <operator pos:start="311:28" pos:end="311:28">=</operator> <ternary pos:start="311:30" pos:end="311:109"><condition pos:start="311:30" pos:end="311:54"><expr pos:start="311:30" pos:end="311:53"><operator pos:start="311:30" pos:end="311:30">(</operator><name pos:start="311:31" pos:end="311:48"><name pos:start="311:31" pos:end="311:45">block_predictor</name><index pos:start="311:46" pos:end="311:48">[<expr pos:start="311:47" pos:end="311:47"><literal type="number" pos:start="311:47" pos:end="311:47">0</literal></expr>]</index></name> <operator pos:start="311:50" pos:end="311:50">&lt;</operator> <literal type="number" pos:start="311:52" pos:end="311:52">0</literal><operator pos:start="311:53" pos:end="311:53">)</operator></expr>?</condition><then pos:start="311:55" pos:end="311:57"><expr pos:start="311:55" pos:end="311:57"><operator pos:start="311:55" pos:end="311:55">(</operator><literal type="number" pos:start="311:56" pos:end="311:56">0</literal><operator pos:start="311:57" pos:end="311:57">)</operator></expr></then><else pos:start="311:58" pos:end="311:109">:<expr pos:start="311:59" pos:end="311:109"><operator pos:start="311:59" pos:end="311:59">(</operator><ternary pos:start="311:60" pos:end="311:108"><condition pos:start="311:60" pos:end="311:84"><expr pos:start="311:60" pos:end="311:83"><operator pos:start="311:60" pos:end="311:60">(</operator><name pos:start="311:61" pos:end="311:78"><name pos:start="311:61" pos:end="311:75">block_predictor</name><index pos:start="311:76" pos:end="311:78">[<expr pos:start="311:77" pos:end="311:77"><literal type="number" pos:start="311:77" pos:end="311:77">0</literal></expr>]</index></name> <operator pos:start="311:80" pos:end="311:80">&gt;</operator> <literal type="number" pos:start="311:82" pos:end="311:82">7</literal><operator pos:start="311:83" pos:end="311:83">)</operator></expr>?</condition><then pos:start="311:85" pos:end="311:87"><expr pos:start="311:85" pos:end="311:87"><operator pos:start="311:85" pos:end="311:85">(</operator><literal type="number" pos:start="311:86" pos:end="311:86">7</literal><operator pos:start="311:87" pos:end="311:87">)</operator></expr></then><else pos:start="311:88" pos:end="311:108">:<expr pos:start="311:89" pos:end="311:108"><operator pos:start="311:89" pos:end="311:89">(</operator><name pos:start="311:90" pos:end="311:107"><name pos:start="311:90" pos:end="311:104">block_predictor</name><index pos:start="311:105" pos:end="311:107">[<expr pos:start="311:106" pos:end="311:106"><literal type="number" pos:start="311:106" pos:end="311:106">0</literal></expr>]</index></name><operator pos:start="311:108" pos:end="311:108">)</operator></expr></else></ternary><operator pos:start="311:109" pos:end="311:109">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:31"><expr pos:start="313:9" pos:end="313:30"><name pos:start="313:9" pos:end="313:26"><name pos:start="313:9" pos:end="313:23">block_predictor</name><index pos:start="313:24" pos:end="313:26">[<expr pos:start="313:25" pos:end="313:25"><literal type="number" pos:start="313:25" pos:end="313:25">1</literal></expr>]</index></name> <operator pos:start="313:28" pos:end="313:28">=</operator> <literal type="number" pos:start="313:30" pos:end="313:30">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="317:42"><if pos:start="315:9" pos:end="317:42">if <condition pos:start="315:12" pos:end="315:15">(<expr pos:start="315:13" pos:end="315:14"><name pos:start="315:13" pos:end="315:14">st</name></expr>)</condition><block type="pseudo" pos:start="317:13" pos:end="317:42"><block_content pos:start="317:13" pos:end="317:42">

            <expr_stmt pos:start="317:13" pos:end="317:42"><expr pos:start="317:13" pos:end="317:41"><name pos:start="317:13" pos:end="317:30"><name pos:start="317:13" pos:end="317:27">block_predictor</name><index pos:start="317:28" pos:end="317:30">[<expr pos:start="317:29" pos:end="317:29"><literal type="number" pos:start="317:29" pos:end="317:29">1</literal></expr>]</index></name> <operator pos:start="317:32" pos:end="317:32">=</operator> <operator pos:start="317:34" pos:end="317:34">(</operator><operator pos:start="317:35" pos:end="317:35">*</operator><name pos:start="317:36" pos:end="317:38">src</name><operator pos:start="317:39" pos:end="317:40">++</operator><operator pos:start="317:41" pos:end="317:41">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:110"><expr pos:start="319:9" pos:end="319:109"><name pos:start="319:9" pos:end="319:26"><name pos:start="319:9" pos:end="319:23">block_predictor</name><index pos:start="319:24" pos:end="319:26">[<expr pos:start="319:25" pos:end="319:25"><literal type="number" pos:start="319:25" pos:end="319:25">1</literal></expr>]</index></name> <operator pos:start="319:28" pos:end="319:28">=</operator> <ternary pos:start="319:30" pos:end="319:109"><condition pos:start="319:30" pos:end="319:54"><expr pos:start="319:30" pos:end="319:53"><operator pos:start="319:30" pos:end="319:30">(</operator><name pos:start="319:31" pos:end="319:48"><name pos:start="319:31" pos:end="319:45">block_predictor</name><index pos:start="319:46" pos:end="319:48">[<expr pos:start="319:47" pos:end="319:47"><literal type="number" pos:start="319:47" pos:end="319:47">1</literal></expr>]</index></name> <operator pos:start="319:50" pos:end="319:50">&lt;</operator> <literal type="number" pos:start="319:52" pos:end="319:52">0</literal><operator pos:start="319:53" pos:end="319:53">)</operator></expr>?</condition><then pos:start="319:55" pos:end="319:57"><expr pos:start="319:55" pos:end="319:57"><operator pos:start="319:55" pos:end="319:55">(</operator><literal type="number" pos:start="319:56" pos:end="319:56">0</literal><operator pos:start="319:57" pos:end="319:57">)</operator></expr></then><else pos:start="319:58" pos:end="319:109">:<expr pos:start="319:59" pos:end="319:109"><operator pos:start="319:59" pos:end="319:59">(</operator><ternary pos:start="319:60" pos:end="319:108"><condition pos:start="319:60" pos:end="319:84"><expr pos:start="319:60" pos:end="319:83"><operator pos:start="319:60" pos:end="319:60">(</operator><name pos:start="319:61" pos:end="319:78"><name pos:start="319:61" pos:end="319:75">block_predictor</name><index pos:start="319:76" pos:end="319:78">[<expr pos:start="319:77" pos:end="319:77"><literal type="number" pos:start="319:77" pos:end="319:77">1</literal></expr>]</index></name> <operator pos:start="319:80" pos:end="319:80">&gt;</operator> <literal type="number" pos:start="319:82" pos:end="319:82">7</literal><operator pos:start="319:83" pos:end="319:83">)</operator></expr>?</condition><then pos:start="319:85" pos:end="319:87"><expr pos:start="319:85" pos:end="319:87"><operator pos:start="319:85" pos:end="319:85">(</operator><literal type="number" pos:start="319:86" pos:end="319:86">7</literal><operator pos:start="319:87" pos:end="319:87">)</operator></expr></then><else pos:start="319:88" pos:end="319:108">:<expr pos:start="319:89" pos:end="319:108"><operator pos:start="319:89" pos:end="319:89">(</operator><name pos:start="319:90" pos:end="319:107"><name pos:start="319:90" pos:end="319:104">block_predictor</name><index pos:start="319:105" pos:end="319:107">[<expr pos:start="319:106" pos:end="319:106"><literal type="number" pos:start="319:106" pos:end="319:106">1</literal></expr>]</index></name><operator pos:start="319:108" pos:end="319:108">)</operator></expr></else></ternary><operator pos:start="319:109" pos:end="319:109">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:73"><expr pos:start="321:9" pos:end="321:72"><name pos:start="321:9" pos:end="321:20"><name pos:start="321:9" pos:end="321:9">c</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:17">status</name><index pos:start="321:18" pos:end="321:20">[<expr pos:start="321:19" pos:end="321:19"><literal type="number" pos:start="321:19" pos:end="321:19">0</literal></expr>]</index></name><operator pos:start="321:21" pos:end="321:21">.</operator><name pos:start="321:22" pos:end="321:27">idelta</name> <operator pos:start="321:29" pos:end="321:29">=</operator> <operator pos:start="321:31" pos:end="321:31">(</operator><operator pos:start="321:32" pos:end="321:32">(</operator><operator pos:start="321:33" pos:end="321:33">*</operator><name pos:start="321:34" pos:end="321:36">src</name> <operator pos:start="321:38" pos:end="321:38">&amp;</operator> <literal type="number" pos:start="321:40" pos:end="321:43">0xFF</literal><operator pos:start="321:44" pos:end="321:44">)</operator> <operator pos:start="321:46" pos:end="321:46">|</operator> <operator pos:start="321:48" pos:end="321:48">(</operator><operator pos:start="321:49" pos:end="321:49">(</operator><name pos:start="321:50" pos:end="321:55"><name pos:start="321:50" pos:end="321:52">src</name><index pos:start="321:53" pos:end="321:55">[<expr pos:start="321:54" pos:end="321:54"><literal type="number" pos:start="321:54" pos:end="321:54">1</literal></expr>]</index></name> <operator pos:start="321:57" pos:end="321:58">&lt;&lt;</operator> <literal type="number" pos:start="321:60" pos:end="321:60">8</literal><operator pos:start="321:61" pos:end="321:61">)</operator> <operator pos:start="321:63" pos:end="321:63">&amp;</operator> <literal type="number" pos:start="321:65" pos:end="321:70">0xFF00</literal><operator pos:start="321:71" pos:end="321:71">)</operator><operator pos:start="321:72" pos:end="321:72">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="323:9" pos:end="325:43"><if pos:start="323:9" pos:end="325:43">if <condition pos:start="323:12" pos:end="323:42">(<expr pos:start="323:13" pos:end="323:41"><name pos:start="323:13" pos:end="323:24"><name pos:start="323:13" pos:end="323:13">c</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:21">status</name><index pos:start="323:22" pos:end="323:24">[<expr pos:start="323:23" pos:end="323:23"><literal type="number" pos:start="323:23" pos:end="323:23">0</literal></expr>]</index></name><operator pos:start="323:25" pos:end="323:25">.</operator><name pos:start="323:26" pos:end="323:31">idelta</name> <operator pos:start="323:33" pos:end="323:33">&amp;</operator> <literal type="number" pos:start="323:35" pos:end="323:41">0x08000</literal></expr>)</condition><block type="pseudo" pos:start="325:13" pos:end="325:43"><block_content pos:start="325:13" pos:end="325:43">

            <expr_stmt pos:start="325:13" pos:end="325:43"><expr pos:start="325:13" pos:end="325:42"><name pos:start="325:13" pos:end="325:24"><name pos:start="325:13" pos:end="325:13">c</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:21">status</name><index pos:start="325:22" pos:end="325:24">[<expr pos:start="325:23" pos:end="325:23"><literal type="number" pos:start="325:23" pos:end="325:23">0</literal></expr>]</index></name><operator pos:start="325:25" pos:end="325:25">.</operator><name pos:start="325:26" pos:end="325:31">idelta</name> <operator pos:start="325:33" pos:end="325:34">-=</operator> <literal type="number" pos:start="325:36" pos:end="325:42">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:15"><expr pos:start="327:9" pos:end="327:14"><name pos:start="327:9" pos:end="327:11">src</name><operator pos:start="327:12" pos:end="327:13">+=</operator><literal type="number" pos:start="327:14" pos:end="327:14">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="329:9" pos:end="331:77"><if pos:start="329:9" pos:end="331:77">if <condition pos:start="329:12" pos:end="329:15">(<expr pos:start="329:13" pos:end="329:14"><name pos:start="329:13" pos:end="329:14">st</name></expr>)</condition><block type="pseudo" pos:start="331:13" pos:end="331:77"><block_content pos:start="331:13" pos:end="331:77">

            <expr_stmt pos:start="331:13" pos:end="331:77"><expr pos:start="331:13" pos:end="331:76"><name pos:start="331:13" pos:end="331:24"><name pos:start="331:13" pos:end="331:13">c</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:21">status</name><index pos:start="331:22" pos:end="331:24">[<expr pos:start="331:23" pos:end="331:23"><literal type="number" pos:start="331:23" pos:end="331:23">1</literal></expr>]</index></name><operator pos:start="331:25" pos:end="331:25">.</operator><name pos:start="331:26" pos:end="331:31">idelta</name> <operator pos:start="331:33" pos:end="331:33">=</operator> <operator pos:start="331:35" pos:end="331:35">(</operator><operator pos:start="331:36" pos:end="331:36">(</operator><operator pos:start="331:37" pos:end="331:37">*</operator><name pos:start="331:38" pos:end="331:40">src</name> <operator pos:start="331:42" pos:end="331:42">&amp;</operator> <literal type="number" pos:start="331:44" pos:end="331:47">0xFF</literal><operator pos:start="331:48" pos:end="331:48">)</operator> <operator pos:start="331:50" pos:end="331:50">|</operator> <operator pos:start="331:52" pos:end="331:52">(</operator><operator pos:start="331:53" pos:end="331:53">(</operator><name pos:start="331:54" pos:end="331:59"><name pos:start="331:54" pos:end="331:56">src</name><index pos:start="331:57" pos:end="331:59">[<expr pos:start="331:58" pos:end="331:58"><literal type="number" pos:start="331:58" pos:end="331:58">1</literal></expr>]</index></name> <operator pos:start="331:61" pos:end="331:62">&lt;&lt;</operator> <literal type="number" pos:start="331:64" pos:end="331:64">8</literal><operator pos:start="331:65" pos:end="331:65">)</operator> <operator pos:start="331:67" pos:end="331:67">&amp;</operator> <literal type="number" pos:start="331:69" pos:end="331:74">0xFF00</literal><operator pos:start="331:75" pos:end="331:75">)</operator><operator pos:start="331:76" pos:end="331:76">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="333:9" pos:end="335:46"><if pos:start="333:9" pos:end="335:46">if <condition pos:start="333:12" pos:end="333:48">(<expr pos:start="333:13" pos:end="333:47"><name pos:start="333:13" pos:end="333:14">st</name> <operator pos:start="333:16" pos:end="333:17">&amp;&amp;</operator> <name pos:start="333:19" pos:end="333:30"><name pos:start="333:19" pos:end="333:19">c</name><operator pos:start="333:20" pos:end="333:21">-&gt;</operator><name pos:start="333:22" pos:end="333:27">status</name><index pos:start="333:28" pos:end="333:30">[<expr pos:start="333:29" pos:end="333:29"><literal type="number" pos:start="333:29" pos:end="333:29">1</literal></expr>]</index></name><operator pos:start="333:31" pos:end="333:31">.</operator><name pos:start="333:32" pos:end="333:37">idelta</name> <operator pos:start="333:39" pos:end="333:39">&amp;</operator> <literal type="number" pos:start="333:41" pos:end="333:47">0x08000</literal></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:46"><block_content pos:start="335:13" pos:end="335:46">

            <expr_stmt pos:start="335:13" pos:end="335:46"><expr pos:start="335:13" pos:end="335:45"><name pos:start="335:13" pos:end="335:24"><name pos:start="335:13" pos:end="335:13">c</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:21">status</name><index pos:start="335:22" pos:end="335:24">[<expr pos:start="335:23" pos:end="335:23"><literal type="number" pos:start="335:23" pos:end="335:23">1</literal></expr>]</index></name><operator pos:start="335:25" pos:end="335:25">.</operator><name pos:start="335:26" pos:end="335:31">idelta</name> <operator pos:start="335:33" pos:end="335:34">|=</operator> <literal type="number" pos:start="335:36" pos:end="335:45">0xFFFF0000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="337:9" pos:end="339:19"><if pos:start="337:9" pos:end="339:19">if <condition pos:start="337:12" pos:end="337:15">(<expr pos:start="337:13" pos:end="337:14"><name pos:start="337:13" pos:end="337:14">st</name></expr>)</condition><block type="pseudo" pos:start="339:13" pos:end="339:19"><block_content pos:start="339:13" pos:end="339:19">

            <expr_stmt pos:start="339:13" pos:end="339:19"><expr pos:start="339:13" pos:end="339:18"><name pos:start="339:13" pos:end="339:15">src</name><operator pos:start="339:16" pos:end="339:17">+=</operator><literal type="number" pos:start="339:18" pos:end="339:18">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:62"><expr pos:start="341:9" pos:end="341:61"><name pos:start="341:9" pos:end="341:20"><name pos:start="341:9" pos:end="341:9">c</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:17">status</name><index pos:start="341:18" pos:end="341:20">[<expr pos:start="341:19" pos:end="341:19"><literal type="number" pos:start="341:19" pos:end="341:19">0</literal></expr>]</index></name><operator pos:start="341:21" pos:end="341:21">.</operator><name pos:start="341:22" pos:end="341:27">coeff1</name> <operator pos:start="341:29" pos:end="341:29">=</operator> <name pos:start="341:31" pos:end="341:61"><name pos:start="341:31" pos:end="341:41">AdaptCoeff1</name><index pos:start="341:42" pos:end="341:61">[<expr pos:start="341:43" pos:end="341:60"><name pos:start="341:43" pos:end="341:60"><name pos:start="341:43" pos:end="341:57">block_predictor</name><index pos:start="341:58" pos:end="341:60">[<expr pos:start="341:59" pos:end="341:59"><literal type="number" pos:start="341:59" pos:end="341:59">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:62"><expr pos:start="343:9" pos:end="343:61"><name pos:start="343:9" pos:end="343:20"><name pos:start="343:9" pos:end="343:9">c</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:17">status</name><index pos:start="343:18" pos:end="343:20">[<expr pos:start="343:19" pos:end="343:19"><literal type="number" pos:start="343:19" pos:end="343:19">0</literal></expr>]</index></name><operator pos:start="343:21" pos:end="343:21">.</operator><name pos:start="343:22" pos:end="343:27">coeff2</name> <operator pos:start="343:29" pos:end="343:29">=</operator> <name pos:start="343:31" pos:end="343:61"><name pos:start="343:31" pos:end="343:41">AdaptCoeff2</name><index pos:start="343:42" pos:end="343:61">[<expr pos:start="343:43" pos:end="343:60"><name pos:start="343:43" pos:end="343:60"><name pos:start="343:43" pos:end="343:57">block_predictor</name><index pos:start="343:58" pos:end="343:60">[<expr pos:start="343:59" pos:end="343:59"><literal type="number" pos:start="343:59" pos:end="343:59">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:62"><expr pos:start="345:9" pos:end="345:61"><name pos:start="345:9" pos:end="345:20"><name pos:start="345:9" pos:end="345:9">c</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:17">status</name><index pos:start="345:18" pos:end="345:20">[<expr pos:start="345:19" pos:end="345:19"><literal type="number" pos:start="345:19" pos:end="345:19">1</literal></expr>]</index></name><operator pos:start="345:21" pos:end="345:21">.</operator><name pos:start="345:22" pos:end="345:27">coeff1</name> <operator pos:start="345:29" pos:end="345:29">=</operator> <name pos:start="345:31" pos:end="345:61"><name pos:start="345:31" pos:end="345:41">AdaptCoeff1</name><index pos:start="345:42" pos:end="345:61">[<expr pos:start="345:43" pos:end="345:60"><name pos:start="345:43" pos:end="345:60"><name pos:start="345:43" pos:end="345:57">block_predictor</name><index pos:start="345:58" pos:end="345:60">[<expr pos:start="345:59" pos:end="345:59"><literal type="number" pos:start="345:59" pos:end="345:59">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:62"><expr pos:start="347:9" pos:end="347:61"><name pos:start="347:9" pos:end="347:20"><name pos:start="347:9" pos:end="347:9">c</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:17">status</name><index pos:start="347:18" pos:end="347:20">[<expr pos:start="347:19" pos:end="347:19"><literal type="number" pos:start="347:19" pos:end="347:19">1</literal></expr>]</index></name><operator pos:start="347:21" pos:end="347:21">.</operator><name pos:start="347:22" pos:end="347:27">coeff2</name> <operator pos:start="347:29" pos:end="347:29">=</operator> <name pos:start="347:31" pos:end="347:61"><name pos:start="347:31" pos:end="347:41">AdaptCoeff2</name><index pos:start="347:42" pos:end="347:61">[<expr pos:start="347:43" pos:end="347:60"><name pos:start="347:43" pos:end="347:60"><name pos:start="347:43" pos:end="347:57">block_predictor</name><index pos:start="347:58" pos:end="347:60">[<expr pos:start="347:59" pos:end="347:59"><literal type="number" pos:start="347:59" pos:end="347:59">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        

        <expr_stmt pos:start="351:9" pos:end="351:74"><expr pos:start="351:9" pos:end="351:73"><name pos:start="351:9" pos:end="351:20"><name pos:start="351:9" pos:end="351:9">c</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:17">status</name><index pos:start="351:18" pos:end="351:20">[<expr pos:start="351:19" pos:end="351:19"><literal type="number" pos:start="351:19" pos:end="351:19">0</literal></expr>]</index></name><operator pos:start="351:21" pos:end="351:21">.</operator><name pos:start="351:22" pos:end="351:28">sample1</name> <operator pos:start="351:30" pos:end="351:30">=</operator> <operator pos:start="351:32" pos:end="351:32">(</operator><operator pos:start="351:33" pos:end="351:33">(</operator><operator pos:start="351:34" pos:end="351:34">*</operator><name pos:start="351:35" pos:end="351:37">src</name> <operator pos:start="351:39" pos:end="351:39">&amp;</operator> <literal type="number" pos:start="351:41" pos:end="351:44">0xFF</literal><operator pos:start="351:45" pos:end="351:45">)</operator> <operator pos:start="351:47" pos:end="351:47">|</operator> <operator pos:start="351:49" pos:end="351:49">(</operator><operator pos:start="351:50" pos:end="351:50">(</operator><name pos:start="351:51" pos:end="351:56"><name pos:start="351:51" pos:end="351:53">src</name><index pos:start="351:54" pos:end="351:56">[<expr pos:start="351:55" pos:end="351:55"><literal type="number" pos:start="351:55" pos:end="351:55">1</literal></expr>]</index></name> <operator pos:start="351:58" pos:end="351:59">&lt;&lt;</operator> <literal type="number" pos:start="351:61" pos:end="351:61">8</literal><operator pos:start="351:62" pos:end="351:62">)</operator> <operator pos:start="351:64" pos:end="351:64">&amp;</operator> <literal type="number" pos:start="351:66" pos:end="351:71">0xFF00</literal><operator pos:start="351:72" pos:end="351:72">)</operator><operator pos:start="351:73" pos:end="351:73">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:15"><expr pos:start="353:9" pos:end="353:14"><name pos:start="353:9" pos:end="353:11">src</name><operator pos:start="353:12" pos:end="353:13">+=</operator><literal type="number" pos:start="353:14" pos:end="353:14">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="355:9" pos:end="355:82"><if pos:start="355:9" pos:end="355:82">if <condition pos:start="355:12" pos:end="355:15">(<expr pos:start="355:13" pos:end="355:14"><name pos:start="355:13" pos:end="355:14">st</name></expr>)</condition><block type="pseudo" pos:start="355:17" pos:end="355:82"><block_content pos:start="355:17" pos:end="355:82"> <expr_stmt pos:start="355:17" pos:end="355:82"><expr pos:start="355:17" pos:end="355:81"><name pos:start="355:17" pos:end="355:28"><name pos:start="355:17" pos:end="355:17">c</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:25">status</name><index pos:start="355:26" pos:end="355:28">[<expr pos:start="355:27" pos:end="355:27"><literal type="number" pos:start="355:27" pos:end="355:27">1</literal></expr>]</index></name><operator pos:start="355:29" pos:end="355:29">.</operator><name pos:start="355:30" pos:end="355:36">sample1</name> <operator pos:start="355:38" pos:end="355:38">=</operator> <operator pos:start="355:40" pos:end="355:40">(</operator><operator pos:start="355:41" pos:end="355:41">(</operator><operator pos:start="355:42" pos:end="355:42">*</operator><name pos:start="355:43" pos:end="355:45">src</name> <operator pos:start="355:47" pos:end="355:47">&amp;</operator> <literal type="number" pos:start="355:49" pos:end="355:52">0xFF</literal><operator pos:start="355:53" pos:end="355:53">)</operator> <operator pos:start="355:55" pos:end="355:55">|</operator> <operator pos:start="355:57" pos:end="355:57">(</operator><operator pos:start="355:58" pos:end="355:58">(</operator><name pos:start="355:59" pos:end="355:64"><name pos:start="355:59" pos:end="355:61">src</name><index pos:start="355:62" pos:end="355:64">[<expr pos:start="355:63" pos:end="355:63"><literal type="number" pos:start="355:63" pos:end="355:63">1</literal></expr>]</index></name> <operator pos:start="355:66" pos:end="355:67">&lt;&lt;</operator> <literal type="number" pos:start="355:69" pos:end="355:69">8</literal><operator pos:start="355:70" pos:end="355:70">)</operator> <operator pos:start="355:72" pos:end="355:72">&amp;</operator> <literal type="number" pos:start="355:74" pos:end="355:79">0xFF00</literal><operator pos:start="355:80" pos:end="355:80">)</operator><operator pos:start="355:81" pos:end="355:81">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="357:9" pos:end="357:23"><if pos:start="357:9" pos:end="357:23">if <condition pos:start="357:12" pos:end="357:15">(<expr pos:start="357:13" pos:end="357:14"><name pos:start="357:13" pos:end="357:14">st</name></expr>)</condition><block type="pseudo" pos:start="357:17" pos:end="357:23"><block_content pos:start="357:17" pos:end="357:23"> <expr_stmt pos:start="357:17" pos:end="357:23"><expr pos:start="357:17" pos:end="357:22"><name pos:start="357:17" pos:end="357:19">src</name><operator pos:start="357:20" pos:end="357:21">+=</operator><literal type="number" pos:start="357:22" pos:end="357:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:74"><expr pos:start="359:9" pos:end="359:73"><name pos:start="359:9" pos:end="359:20"><name pos:start="359:9" pos:end="359:9">c</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:17">status</name><index pos:start="359:18" pos:end="359:20">[<expr pos:start="359:19" pos:end="359:19"><literal type="number" pos:start="359:19" pos:end="359:19">0</literal></expr>]</index></name><operator pos:start="359:21" pos:end="359:21">.</operator><name pos:start="359:22" pos:end="359:28">sample2</name> <operator pos:start="359:30" pos:end="359:30">=</operator> <operator pos:start="359:32" pos:end="359:32">(</operator><operator pos:start="359:33" pos:end="359:33">(</operator><operator pos:start="359:34" pos:end="359:34">*</operator><name pos:start="359:35" pos:end="359:37">src</name> <operator pos:start="359:39" pos:end="359:39">&amp;</operator> <literal type="number" pos:start="359:41" pos:end="359:44">0xFF</literal><operator pos:start="359:45" pos:end="359:45">)</operator> <operator pos:start="359:47" pos:end="359:47">|</operator> <operator pos:start="359:49" pos:end="359:49">(</operator><operator pos:start="359:50" pos:end="359:50">(</operator><name pos:start="359:51" pos:end="359:56"><name pos:start="359:51" pos:end="359:53">src</name><index pos:start="359:54" pos:end="359:56">[<expr pos:start="359:55" pos:end="359:55"><literal type="number" pos:start="359:55" pos:end="359:55">1</literal></expr>]</index></name> <operator pos:start="359:58" pos:end="359:59">&lt;&lt;</operator> <literal type="number" pos:start="359:61" pos:end="359:61">8</literal><operator pos:start="359:62" pos:end="359:62">)</operator> <operator pos:start="359:64" pos:end="359:64">&amp;</operator> <literal type="number" pos:start="359:66" pos:end="359:71">0xFF00</literal><operator pos:start="359:72" pos:end="359:72">)</operator><operator pos:start="359:73" pos:end="359:73">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:15"><expr pos:start="361:9" pos:end="361:14"><name pos:start="361:9" pos:end="361:11">src</name><operator pos:start="361:12" pos:end="361:13">+=</operator><literal type="number" pos:start="361:14" pos:end="361:14">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="363:9" pos:end="363:82"><if pos:start="363:9" pos:end="363:82">if <condition pos:start="363:12" pos:end="363:15">(<expr pos:start="363:13" pos:end="363:14"><name pos:start="363:13" pos:end="363:14">st</name></expr>)</condition><block type="pseudo" pos:start="363:17" pos:end="363:82"><block_content pos:start="363:17" pos:end="363:82"> <expr_stmt pos:start="363:17" pos:end="363:82"><expr pos:start="363:17" pos:end="363:81"><name pos:start="363:17" pos:end="363:28"><name pos:start="363:17" pos:end="363:17">c</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:25">status</name><index pos:start="363:26" pos:end="363:28">[<expr pos:start="363:27" pos:end="363:27"><literal type="number" pos:start="363:27" pos:end="363:27">1</literal></expr>]</index></name><operator pos:start="363:29" pos:end="363:29">.</operator><name pos:start="363:30" pos:end="363:36">sample2</name> <operator pos:start="363:38" pos:end="363:38">=</operator> <operator pos:start="363:40" pos:end="363:40">(</operator><operator pos:start="363:41" pos:end="363:41">(</operator><operator pos:start="363:42" pos:end="363:42">*</operator><name pos:start="363:43" pos:end="363:45">src</name> <operator pos:start="363:47" pos:end="363:47">&amp;</operator> <literal type="number" pos:start="363:49" pos:end="363:52">0xFF</literal><operator pos:start="363:53" pos:end="363:53">)</operator> <operator pos:start="363:55" pos:end="363:55">|</operator> <operator pos:start="363:57" pos:end="363:57">(</operator><operator pos:start="363:58" pos:end="363:58">(</operator><name pos:start="363:59" pos:end="363:64"><name pos:start="363:59" pos:end="363:61">src</name><index pos:start="363:62" pos:end="363:64">[<expr pos:start="363:63" pos:end="363:63"><literal type="number" pos:start="363:63" pos:end="363:63">1</literal></expr>]</index></name> <operator pos:start="363:66" pos:end="363:67">&lt;&lt;</operator> <literal type="number" pos:start="363:69" pos:end="363:69">8</literal><operator pos:start="363:70" pos:end="363:70">)</operator> <operator pos:start="363:72" pos:end="363:72">&amp;</operator> <literal type="number" pos:start="363:74" pos:end="363:79">0xFF00</literal><operator pos:start="363:80" pos:end="363:80">)</operator><operator pos:start="363:81" pos:end="363:81">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="365:9" pos:end="365:23"><if pos:start="365:9" pos:end="365:23">if <condition pos:start="365:12" pos:end="365:15">(<expr pos:start="365:13" pos:end="365:14"><name pos:start="365:13" pos:end="365:14">st</name></expr>)</condition><block type="pseudo" pos:start="365:17" pos:end="365:23"><block_content pos:start="365:17" pos:end="365:23"> <expr_stmt pos:start="365:17" pos:end="365:23"><expr pos:start="365:17" pos:end="365:22"><name pos:start="365:17" pos:end="365:19">src</name><operator pos:start="365:20" pos:end="365:21">+=</operator><literal type="number" pos:start="365:22" pos:end="365:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="369:9" pos:end="369:42"><expr pos:start="369:9" pos:end="369:41"><operator pos:start="369:9" pos:end="369:9">*</operator><name pos:start="369:10" pos:end="369:16">samples</name><operator pos:start="369:17" pos:end="369:18">++</operator> <operator pos:start="369:20" pos:end="369:20">=</operator> <name pos:start="369:22" pos:end="369:33"><name pos:start="369:22" pos:end="369:22">c</name><operator pos:start="369:23" pos:end="369:24">-&gt;</operator><name pos:start="369:25" pos:end="369:30">status</name><index pos:start="369:31" pos:end="369:33">[<expr pos:start="369:32" pos:end="369:32"><literal type="number" pos:start="369:32" pos:end="369:32">0</literal></expr>]</index></name><operator pos:start="369:34" pos:end="369:34">.</operator><name pos:start="369:35" pos:end="369:41">sample1</name></expr>;</expr_stmt>

        <if_stmt pos:start="371:9" pos:end="371:50"><if pos:start="371:9" pos:end="371:50">if <condition pos:start="371:12" pos:end="371:15">(<expr pos:start="371:13" pos:end="371:14"><name pos:start="371:13" pos:end="371:14">st</name></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="371:50"><block_content pos:start="371:17" pos:end="371:50"> <expr_stmt pos:start="371:17" pos:end="371:50"><expr pos:start="371:17" pos:end="371:49"><operator pos:start="371:17" pos:end="371:17">*</operator><name pos:start="371:18" pos:end="371:24">samples</name><operator pos:start="371:25" pos:end="371:26">++</operator> <operator pos:start="371:28" pos:end="371:28">=</operator> <name pos:start="371:30" pos:end="371:41"><name pos:start="371:30" pos:end="371:30">c</name><operator pos:start="371:31" pos:end="371:32">-&gt;</operator><name pos:start="371:33" pos:end="371:38">status</name><index pos:start="371:39" pos:end="371:41">[<expr pos:start="371:40" pos:end="371:40"><literal type="number" pos:start="371:40" pos:end="371:40">1</literal></expr>]</index></name><operator pos:start="371:42" pos:end="371:42">.</operator><name pos:start="371:43" pos:end="371:49">sample1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:42"><expr pos:start="373:9" pos:end="373:41"><operator pos:start="373:9" pos:end="373:9">*</operator><name pos:start="373:10" pos:end="373:16">samples</name><operator pos:start="373:17" pos:end="373:18">++</operator> <operator pos:start="373:20" pos:end="373:20">=</operator> <name pos:start="373:22" pos:end="373:33"><name pos:start="373:22" pos:end="373:22">c</name><operator pos:start="373:23" pos:end="373:24">-&gt;</operator><name pos:start="373:25" pos:end="373:30">status</name><index pos:start="373:31" pos:end="373:33">[<expr pos:start="373:32" pos:end="373:32"><literal type="number" pos:start="373:32" pos:end="373:32">0</literal></expr>]</index></name><operator pos:start="373:34" pos:end="373:34">.</operator><name pos:start="373:35" pos:end="373:41">sample2</name></expr>;</expr_stmt>

        <if_stmt pos:start="375:9" pos:end="375:50"><if pos:start="375:9" pos:end="375:50">if <condition pos:start="375:12" pos:end="375:15">(<expr pos:start="375:13" pos:end="375:14"><name pos:start="375:13" pos:end="375:14">st</name></expr>)</condition><block type="pseudo" pos:start="375:17" pos:end="375:50"><block_content pos:start="375:17" pos:end="375:50"> <expr_stmt pos:start="375:17" pos:end="375:50"><expr pos:start="375:17" pos:end="375:49"><operator pos:start="375:17" pos:end="375:17">*</operator><name pos:start="375:18" pos:end="375:24">samples</name><operator pos:start="375:25" pos:end="375:26">++</operator> <operator pos:start="375:28" pos:end="375:28">=</operator> <name pos:start="375:30" pos:end="375:41"><name pos:start="375:30" pos:end="375:30">c</name><operator pos:start="375:31" pos:end="375:32">-&gt;</operator><name pos:start="375:33" pos:end="375:38">status</name><index pos:start="375:39" pos:end="375:41">[<expr pos:start="375:40" pos:end="375:40"><literal type="number" pos:start="375:40" pos:end="375:40">1</literal></expr>]</index></name><operator pos:start="375:42" pos:end="375:42">.</operator><name pos:start="375:43" pos:end="375:49">sample2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="377:9" pos:end="385:9">for<control pos:start="377:12" pos:end="377:21">(<init pos:start="377:13" pos:end="377:13">;</init><condition pos:start="377:14" pos:end="377:17"><expr pos:start="377:14" pos:end="377:16"><name pos:start="377:14" pos:end="377:14">n</name><operator pos:start="377:15" pos:end="377:15">&gt;</operator><literal type="number" pos:start="377:16" pos:end="377:16">0</literal></expr>;</condition><incr pos:start="377:18" pos:end="377:20"><expr pos:start="377:18" pos:end="377:20"><name pos:start="377:18" pos:end="377:18">n</name><operator pos:start="377:19" pos:end="377:20">--</operator></expr></incr>)</control> <block pos:start="377:23" pos:end="385:9">{<block_content pos:start="379:13" pos:end="383:19">

            <expr_stmt pos:start="379:13" pos:end="379:85"><expr pos:start="379:13" pos:end="379:84"><operator pos:start="379:13" pos:end="379:13">*</operator><name pos:start="379:14" pos:end="379:20">samples</name><operator pos:start="379:21" pos:end="379:22">++</operator> <operator pos:start="379:24" pos:end="379:24">=</operator> <call pos:start="379:26" pos:end="379:84"><name pos:start="379:26" pos:end="379:47">adpcm_ms_expand_nibble</name><argument_list pos:start="379:48" pos:end="379:84">(<argument pos:start="379:49" pos:end="379:61"><expr pos:start="379:49" pos:end="379:61"><operator pos:start="379:49" pos:end="379:49">&amp;</operator><name pos:start="379:50" pos:end="379:61"><name pos:start="379:50" pos:end="379:50">c</name><operator pos:start="379:51" pos:end="379:52">-&gt;</operator><name pos:start="379:53" pos:end="379:58">status</name><index pos:start="379:59" pos:end="379:61">[<expr pos:start="379:60" pos:end="379:60"><literal type="number" pos:start="379:60" pos:end="379:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="379:64" pos:end="379:83"><expr pos:start="379:64" pos:end="379:83"><operator pos:start="379:64" pos:end="379:64">(</operator><name pos:start="379:65" pos:end="379:70"><name pos:start="379:65" pos:end="379:67">src</name><index pos:start="379:68" pos:end="379:70">[<expr pos:start="379:69" pos:end="379:69"><literal type="number" pos:start="379:69" pos:end="379:69">0</literal></expr>]</index></name> <operator pos:start="379:72" pos:end="379:73">&gt;&gt;</operator> <literal type="number" pos:start="379:75" pos:end="379:75">4</literal><operator pos:start="379:76" pos:end="379:76">)</operator> <operator pos:start="379:78" pos:end="379:78">&amp;</operator> <literal type="number" pos:start="379:80" pos:end="379:83">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:79"><expr pos:start="381:13" pos:end="381:78"><operator pos:start="381:13" pos:end="381:13">*</operator><name pos:start="381:14" pos:end="381:20">samples</name><operator pos:start="381:21" pos:end="381:22">++</operator> <operator pos:start="381:24" pos:end="381:24">=</operator> <call pos:start="381:26" pos:end="381:78"><name pos:start="381:26" pos:end="381:47">adpcm_ms_expand_nibble</name><argument_list pos:start="381:48" pos:end="381:78">(<argument pos:start="381:49" pos:end="381:62"><expr pos:start="381:49" pos:end="381:62"><operator pos:start="381:49" pos:end="381:49">&amp;</operator><name pos:start="381:50" pos:end="381:62"><name pos:start="381:50" pos:end="381:50">c</name><operator pos:start="381:51" pos:end="381:52">-&gt;</operator><name pos:start="381:53" pos:end="381:58">status</name><index pos:start="381:59" pos:end="381:62">[<expr pos:start="381:60" pos:end="381:61"><name pos:start="381:60" pos:end="381:61">st</name></expr>]</index></name></expr></argument>, <argument pos:start="381:65" pos:end="381:77"><expr pos:start="381:65" pos:end="381:77"><name pos:start="381:65" pos:end="381:70"><name pos:start="381:65" pos:end="381:67">src</name><index pos:start="381:68" pos:end="381:70">[<expr pos:start="381:69" pos:end="381:69"><literal type="number" pos:start="381:69" pos:end="381:69">0</literal></expr>]</index></name> <operator pos:start="381:72" pos:end="381:72">&amp;</operator> <literal type="number" pos:start="381:74" pos:end="381:77">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:19"><expr pos:start="383:13" pos:end="383:18"><name pos:start="383:13" pos:end="383:15">src</name> <operator pos:start="383:17" pos:end="383:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="387:9" pos:end="387:14">break;</break>

    <case pos:start="389:5" pos:end="389:32">case <expr pos:start="389:10" pos:end="389:31"><name pos:start="389:10" pos:end="389:31">CODEC_ID_ADPCM_IMA_DK4</name></expr>:</case>

        <if_stmt pos:start="391:9" pos:end="401:9"><if pos:start="391:9" pos:end="401:9">if <condition pos:start="391:12" pos:end="391:31">(<expr pos:start="391:13" pos:end="391:30"><name pos:start="391:13" pos:end="391:20">buf_size</name> <operator pos:start="391:22" pos:end="391:22">&gt;</operator> <name pos:start="391:24" pos:end="391:30">BLKSIZE</name></expr>)</condition> <block pos:start="391:33" pos:end="401:9">{<block_content pos:start="393:13" pos:end="399:35">

            <if_stmt pos:start="393:13" pos:end="399:35"><if pos:start="393:13" pos:end="395:46">if <condition pos:start="393:16" pos:end="393:40">(<expr pos:start="393:17" pos:end="393:39"><name pos:start="393:17" pos:end="393:34"><name pos:start="393:17" pos:end="393:21">avctx</name><operator pos:start="393:22" pos:end="393:23">-&gt;</operator><name pos:start="393:24" pos:end="393:34">block_align</name></name> <operator pos:start="393:36" pos:end="393:37">!=</operator> <literal type="number" pos:start="393:39" pos:end="393:39">0</literal></expr>)</condition><block type="pseudo" pos:start="395:17" pos:end="395:46"><block_content pos:start="395:17" pos:end="395:46">

                <expr_stmt pos:start="395:17" pos:end="395:46"><expr pos:start="395:17" pos:end="395:45"><name pos:start="395:17" pos:end="395:24">buf_size</name> <operator pos:start="395:26" pos:end="395:26">=</operator> <name pos:start="395:28" pos:end="395:45"><name pos:start="395:28" pos:end="395:32">avctx</name><operator pos:start="395:33" pos:end="395:34">-&gt;</operator><name pos:start="395:35" pos:end="395:45">block_align</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="397:13" pos:end="399:35">else<block type="pseudo" pos:start="399:17" pos:end="399:35"><block_content pos:start="399:17" pos:end="399:35">

                <expr_stmt pos:start="399:17" pos:end="399:35"><expr pos:start="399:17" pos:end="399:34"><name pos:start="399:17" pos:end="399:24">buf_size</name> <operator pos:start="399:26" pos:end="399:26">=</operator> <name pos:start="399:28" pos:end="399:34">BLKSIZE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:58"><expr pos:start="403:9" pos:end="403:57"><name pos:start="403:9" pos:end="403:20"><name pos:start="403:9" pos:end="403:9">c</name><operator pos:start="403:10" pos:end="403:11">-&gt;</operator><name pos:start="403:12" pos:end="403:17">status</name><index pos:start="403:18" pos:end="403:20">[<expr pos:start="403:19" pos:end="403:19"><literal type="number" pos:start="403:19" pos:end="403:19">0</literal></expr>]</index></name><operator pos:start="403:21" pos:end="403:21">.</operator><name pos:start="403:22" pos:end="403:30">predictor</name> <operator pos:start="403:32" pos:end="403:32">=</operator> <operator pos:start="403:34" pos:end="403:34">(</operator><name pos:start="403:35" pos:end="403:40"><name pos:start="403:35" pos:end="403:37">src</name><index pos:start="403:38" pos:end="403:40">[<expr pos:start="403:39" pos:end="403:39"><literal type="number" pos:start="403:39" pos:end="403:39">0</literal></expr>]</index></name> <operator pos:start="403:42" pos:end="403:42">|</operator> <operator pos:start="403:44" pos:end="403:44">(</operator><name pos:start="403:45" pos:end="403:50"><name pos:start="403:45" pos:end="403:47">src</name><index pos:start="403:48" pos:end="403:50">[<expr pos:start="403:49" pos:end="403:49"><literal type="number" pos:start="403:49" pos:end="403:49">1</literal></expr>]</index></name> <operator pos:start="403:52" pos:end="403:53">&lt;&lt;</operator> <literal type="number" pos:start="403:55" pos:end="403:55">8</literal><operator pos:start="403:56" pos:end="403:56">)</operator><operator pos:start="403:57" pos:end="403:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:41"><expr pos:start="405:9" pos:end="405:40"><name pos:start="405:9" pos:end="405:20"><name pos:start="405:9" pos:end="405:9">c</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:17">status</name><index pos:start="405:18" pos:end="405:20">[<expr pos:start="405:19" pos:end="405:19"><literal type="number" pos:start="405:19" pos:end="405:19">0</literal></expr>]</index></name><operator pos:start="405:21" pos:end="405:21">.</operator><name pos:start="405:22" pos:end="405:31">step_index</name> <operator pos:start="405:33" pos:end="405:33">=</operator> <name pos:start="405:35" pos:end="405:40"><name pos:start="405:35" pos:end="405:37">src</name><index pos:start="405:38" pos:end="405:40">[<expr pos:start="405:39" pos:end="405:39"><literal type="number" pos:start="405:39" pos:end="405:39">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:17"><expr pos:start="407:9" pos:end="407:16"><name pos:start="407:9" pos:end="407:11">src</name> <operator pos:start="407:13" pos:end="407:14">+=</operator> <literal type="number" pos:start="407:16" pos:end="407:16">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="409:9" pos:end="411:46"><if pos:start="409:9" pos:end="411:46">if<condition pos:start="409:11" pos:end="409:43">(<expr pos:start="409:12" pos:end="409:42"><name pos:start="409:12" pos:end="409:23"><name pos:start="409:12" pos:end="409:12">c</name><operator pos:start="409:13" pos:end="409:14">-&gt;</operator><name pos:start="409:15" pos:end="409:20">status</name><index pos:start="409:21" pos:end="409:23">[<expr pos:start="409:22" pos:end="409:22"><literal type="number" pos:start="409:22" pos:end="409:22">0</literal></expr>]</index></name><operator pos:start="409:24" pos:end="409:24">.</operator><name pos:start="409:25" pos:end="409:33">predictor</name> <operator pos:start="409:35" pos:end="409:35">&amp;</operator> <literal type="number" pos:start="409:37" pos:end="409:42">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="411:13" pos:end="411:46"><block_content pos:start="411:13" pos:end="411:46">

            <expr_stmt pos:start="411:13" pos:end="411:46"><expr pos:start="411:13" pos:end="411:45"><name pos:start="411:13" pos:end="411:24"><name pos:start="411:13" pos:end="411:13">c</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:21">status</name><index pos:start="411:22" pos:end="411:24">[<expr pos:start="411:23" pos:end="411:23"><literal type="number" pos:start="411:23" pos:end="411:23">0</literal></expr>]</index></name><operator pos:start="411:25" pos:end="411:25">.</operator><name pos:start="411:26" pos:end="411:34">predictor</name> <operator pos:start="411:36" pos:end="411:37">-=</operator> <literal type="number" pos:start="411:39" pos:end="411:45">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:44"><expr pos:start="413:9" pos:end="413:43"><operator pos:start="413:9" pos:end="413:9">*</operator><name pos:start="413:10" pos:end="413:16">samples</name><operator pos:start="413:17" pos:end="413:18">++</operator> <operator pos:start="413:20" pos:end="413:20">=</operator> <name pos:start="413:22" pos:end="413:33"><name pos:start="413:22" pos:end="413:22">c</name><operator pos:start="413:23" pos:end="413:24">-&gt;</operator><name pos:start="413:25" pos:end="413:30">status</name><index pos:start="413:31" pos:end="413:33">[<expr pos:start="413:32" pos:end="413:32"><literal type="number" pos:start="413:32" pos:end="413:32">0</literal></expr>]</index></name><operator pos:start="413:34" pos:end="413:34">.</operator><name pos:start="413:35" pos:end="413:43">predictor</name></expr>;</expr_stmt>

        <if_stmt pos:start="415:9" pos:end="429:9"><if pos:start="415:9" pos:end="429:9">if <condition pos:start="415:12" pos:end="415:15">(<expr pos:start="415:13" pos:end="415:14"><name pos:start="415:13" pos:end="415:14">st</name></expr>)</condition> <block pos:start="415:17" pos:end="429:9">{<block_content pos:start="417:13" pos:end="427:48">

            <expr_stmt pos:start="417:13" pos:end="417:62"><expr pos:start="417:13" pos:end="417:61"><name pos:start="417:13" pos:end="417:24"><name pos:start="417:13" pos:end="417:13">c</name><operator pos:start="417:14" pos:end="417:15">-&gt;</operator><name pos:start="417:16" pos:end="417:21">status</name><index pos:start="417:22" pos:end="417:24">[<expr pos:start="417:23" pos:end="417:23"><literal type="number" pos:start="417:23" pos:end="417:23">1</literal></expr>]</index></name><operator pos:start="417:25" pos:end="417:25">.</operator><name pos:start="417:26" pos:end="417:34">predictor</name> <operator pos:start="417:36" pos:end="417:36">=</operator> <operator pos:start="417:38" pos:end="417:38">(</operator><name pos:start="417:39" pos:end="417:44"><name pos:start="417:39" pos:end="417:41">src</name><index pos:start="417:42" pos:end="417:44">[<expr pos:start="417:43" pos:end="417:43"><literal type="number" pos:start="417:43" pos:end="417:43">0</literal></expr>]</index></name> <operator pos:start="417:46" pos:end="417:46">|</operator> <operator pos:start="417:48" pos:end="417:48">(</operator><name pos:start="417:49" pos:end="417:54"><name pos:start="417:49" pos:end="417:51">src</name><index pos:start="417:52" pos:end="417:54">[<expr pos:start="417:53" pos:end="417:53"><literal type="number" pos:start="417:53" pos:end="417:53">1</literal></expr>]</index></name> <operator pos:start="417:56" pos:end="417:57">&lt;&lt;</operator> <literal type="number" pos:start="417:59" pos:end="417:59">8</literal><operator pos:start="417:60" pos:end="417:60">)</operator><operator pos:start="417:61" pos:end="417:61">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:45"><expr pos:start="419:13" pos:end="419:44"><name pos:start="419:13" pos:end="419:24"><name pos:start="419:13" pos:end="419:13">c</name><operator pos:start="419:14" pos:end="419:15">-&gt;</operator><name pos:start="419:16" pos:end="419:21">status</name><index pos:start="419:22" pos:end="419:24">[<expr pos:start="419:23" pos:end="419:23"><literal type="number" pos:start="419:23" pos:end="419:23">1</literal></expr>]</index></name><operator pos:start="419:25" pos:end="419:25">.</operator><name pos:start="419:26" pos:end="419:35">step_index</name> <operator pos:start="419:37" pos:end="419:37">=</operator> <name pos:start="419:39" pos:end="419:44"><name pos:start="419:39" pos:end="419:41">src</name><index pos:start="419:42" pos:end="419:44">[<expr pos:start="419:43" pos:end="419:43"><literal type="number" pos:start="419:43" pos:end="419:43">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:21"><expr pos:start="421:13" pos:end="421:20"><name pos:start="421:13" pos:end="421:15">src</name> <operator pos:start="421:17" pos:end="421:18">+=</operator> <literal type="number" pos:start="421:20" pos:end="421:20">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="423:13" pos:end="425:50"><if pos:start="423:13" pos:end="425:50">if<condition pos:start="423:15" pos:end="423:47">(<expr pos:start="423:16" pos:end="423:46"><name pos:start="423:16" pos:end="423:27"><name pos:start="423:16" pos:end="423:16">c</name><operator pos:start="423:17" pos:end="423:18">-&gt;</operator><name pos:start="423:19" pos:end="423:24">status</name><index pos:start="423:25" pos:end="423:27">[<expr pos:start="423:26" pos:end="423:26"><literal type="number" pos:start="423:26" pos:end="423:26">1</literal></expr>]</index></name><operator pos:start="423:28" pos:end="423:28">.</operator><name pos:start="423:29" pos:end="423:37">predictor</name> <operator pos:start="423:39" pos:end="423:39">&amp;</operator> <literal type="number" pos:start="423:41" pos:end="423:46">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="425:17" pos:end="425:50"><block_content pos:start="425:17" pos:end="425:50">

                <expr_stmt pos:start="425:17" pos:end="425:50"><expr pos:start="425:17" pos:end="425:49"><name pos:start="425:17" pos:end="425:28"><name pos:start="425:17" pos:end="425:17">c</name><operator pos:start="425:18" pos:end="425:19">-&gt;</operator><name pos:start="425:20" pos:end="425:25">status</name><index pos:start="425:26" pos:end="425:28">[<expr pos:start="425:27" pos:end="425:27"><literal type="number" pos:start="425:27" pos:end="425:27">1</literal></expr>]</index></name><operator pos:start="425:29" pos:end="425:29">.</operator><name pos:start="425:30" pos:end="425:38">predictor</name> <operator pos:start="425:40" pos:end="425:41">-=</operator> <literal type="number" pos:start="425:43" pos:end="425:49">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:48"><expr pos:start="427:13" pos:end="427:47"><operator pos:start="427:13" pos:end="427:13">*</operator><name pos:start="427:14" pos:end="427:20">samples</name><operator pos:start="427:21" pos:end="427:22">++</operator> <operator pos:start="427:24" pos:end="427:24">=</operator> <name pos:start="427:26" pos:end="427:37"><name pos:start="427:26" pos:end="427:26">c</name><operator pos:start="427:27" pos:end="427:28">-&gt;</operator><name pos:start="427:29" pos:end="427:34">status</name><index pos:start="427:35" pos:end="427:37">[<expr pos:start="427:36" pos:end="427:36"><literal type="number" pos:start="427:36" pos:end="427:36">1</literal></expr>]</index></name><operator pos:start="427:38" pos:end="427:38">.</operator><name pos:start="427:39" pos:end="427:47">predictor</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <while pos:start="431:9" pos:end="463:9">while <condition pos:start="431:15" pos:end="431:36">(<expr pos:start="431:16" pos:end="431:35"><name pos:start="431:16" pos:end="431:18">src</name> <operator pos:start="431:20" pos:end="431:20">&lt;</operator> <name pos:start="431:22" pos:end="431:24">buf</name> <operator pos:start="431:26" pos:end="431:26">+</operator> <name pos:start="431:28" pos:end="431:35">buf_size</name></expr>)</condition> <block pos:start="431:38" pos:end="463:9">{<block_content pos:start="437:13" pos:end="461:18">



            <comment type="block" pos:start="435:13" pos:end="435:75">/* take care of the top nibble (always left or mono channel) */</comment>

            <expr_stmt pos:start="437:13" pos:end="439:38"><expr pos:start="437:13" pos:end="439:37"><operator pos:start="437:13" pos:end="437:13">*</operator><name pos:start="437:14" pos:end="437:20">samples</name><operator pos:start="437:21" pos:end="437:22">++</operator> <operator pos:start="437:24" pos:end="437:24">=</operator> <call pos:start="437:26" pos:end="439:37"><name pos:start="437:26" pos:end="437:48">adpcm_ima_expand_nibble</name><argument_list pos:start="437:49" pos:end="439:37">(<argument pos:start="437:50" pos:end="437:62"><expr pos:start="437:50" pos:end="437:62"><operator pos:start="437:50" pos:end="437:50">&amp;</operator><name pos:start="437:51" pos:end="437:62"><name pos:start="437:51" pos:end="437:51">c</name><operator pos:start="437:52" pos:end="437:53">-&gt;</operator><name pos:start="437:54" pos:end="437:59">status</name><index pos:start="437:60" pos:end="437:62">[<expr pos:start="437:61" pos:end="437:61"><literal type="number" pos:start="437:61" pos:end="437:61">0</literal></expr>]</index></name></expr></argument>, 

                <argument pos:start="439:17" pos:end="439:36"><expr pos:start="439:17" pos:end="439:36"><operator pos:start="439:17" pos:end="439:17">(</operator><name pos:start="439:18" pos:end="439:23"><name pos:start="439:18" pos:end="439:20">src</name><index pos:start="439:21" pos:end="439:23">[<expr pos:start="439:22" pos:end="439:22"><literal type="number" pos:start="439:22" pos:end="439:22">0</literal></expr>]</index></name> <operator pos:start="439:25" pos:end="439:26">&gt;&gt;</operator> <literal type="number" pos:start="439:28" pos:end="439:28">4</literal><operator pos:start="439:29" pos:end="439:29">)</operator> <operator pos:start="439:31" pos:end="439:31">&amp;</operator> <literal type="number" pos:start="439:33" pos:end="439:36">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="443:13" pos:end="445:48">/* take care of the bottom nibble, which is right sample for

             * stereo, or another mono sample */</comment>

            <if_stmt pos:start="447:13" pos:end="457:35"><if pos:start="447:13" pos:end="451:35">if <condition pos:start="447:16" pos:end="447:19">(<expr pos:start="447:17" pos:end="447:18"><name pos:start="447:17" pos:end="447:18">st</name></expr>)</condition><block type="pseudo" pos:start="449:17" pos:end="451:35"><block_content pos:start="449:17" pos:end="451:35">

                <expr_stmt pos:start="449:17" pos:end="451:35"><expr pos:start="449:17" pos:end="451:34"><operator pos:start="449:17" pos:end="449:17">*</operator><name pos:start="449:18" pos:end="449:24">samples</name><operator pos:start="449:25" pos:end="449:26">++</operator> <operator pos:start="449:28" pos:end="449:28">=</operator> <call pos:start="449:30" pos:end="451:34"><name pos:start="449:30" pos:end="449:52">adpcm_ima_expand_nibble</name><argument_list pos:start="449:53" pos:end="451:34">(<argument pos:start="449:54" pos:end="449:66"><expr pos:start="449:54" pos:end="449:66"><operator pos:start="449:54" pos:end="449:54">&amp;</operator><name pos:start="449:55" pos:end="449:66"><name pos:start="449:55" pos:end="449:55">c</name><operator pos:start="449:56" pos:end="449:57">-&gt;</operator><name pos:start="449:58" pos:end="449:63">status</name><index pos:start="449:64" pos:end="449:66">[<expr pos:start="449:65" pos:end="449:65"><literal type="number" pos:start="449:65" pos:end="449:65">1</literal></expr>]</index></name></expr></argument>, 

                    <argument pos:start="451:21" pos:end="451:33"><expr pos:start="451:21" pos:end="451:33"><name pos:start="451:21" pos:end="451:26"><name pos:start="451:21" pos:end="451:23">src</name><index pos:start="451:24" pos:end="451:26">[<expr pos:start="451:25" pos:end="451:25"><literal type="number" pos:start="451:25" pos:end="451:25">0</literal></expr>]</index></name> <operator pos:start="451:28" pos:end="451:28">&amp;</operator> <literal type="number" pos:start="451:30" pos:end="451:33">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="453:13" pos:end="457:35">else<block type="pseudo" pos:start="455:17" pos:end="457:35"><block_content pos:start="455:17" pos:end="457:35">

                <expr_stmt pos:start="455:17" pos:end="457:35"><expr pos:start="455:17" pos:end="457:34"><operator pos:start="455:17" pos:end="455:17">*</operator><name pos:start="455:18" pos:end="455:24">samples</name><operator pos:start="455:25" pos:end="455:26">++</operator> <operator pos:start="455:28" pos:end="455:28">=</operator> <call pos:start="455:30" pos:end="457:34"><name pos:start="455:30" pos:end="455:52">adpcm_ima_expand_nibble</name><argument_list pos:start="455:53" pos:end="457:34">(<argument pos:start="455:54" pos:end="455:66"><expr pos:start="455:54" pos:end="455:66"><operator pos:start="455:54" pos:end="455:54">&amp;</operator><name pos:start="455:55" pos:end="455:66"><name pos:start="455:55" pos:end="455:55">c</name><operator pos:start="455:56" pos:end="455:57">-&gt;</operator><name pos:start="455:58" pos:end="455:63">status</name><index pos:start="455:64" pos:end="455:66">[<expr pos:start="455:65" pos:end="455:65"><literal type="number" pos:start="455:65" pos:end="455:65">0</literal></expr>]</index></name></expr></argument>, 

                    <argument pos:start="457:21" pos:end="457:33"><expr pos:start="457:21" pos:end="457:33"><name pos:start="457:21" pos:end="457:26"><name pos:start="457:21" pos:end="457:23">src</name><index pos:start="457:24" pos:end="457:26">[<expr pos:start="457:25" pos:end="457:25"><literal type="number" pos:start="457:25" pos:end="457:25">0</literal></expr>]</index></name> <operator pos:start="457:28" pos:end="457:28">&amp;</operator> <literal type="number" pos:start="457:30" pos:end="457:33">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="461:13" pos:end="461:18"><expr pos:start="461:13" pos:end="461:17"><name pos:start="461:13" pos:end="461:15">src</name><operator pos:start="461:16" pos:end="461:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="465:9" pos:end="465:14">break;</break>

    <case pos:start="467:5" pos:end="467:32">case <expr pos:start="467:10" pos:end="467:31"><name pos:start="467:10" pos:end="467:31">CODEC_ID_ADPCM_IMA_DK3</name></expr>:</case>

        <if_stmt pos:start="469:9" pos:end="479:9"><if pos:start="469:9" pos:end="479:9">if <condition pos:start="469:12" pos:end="469:31">(<expr pos:start="469:13" pos:end="469:30"><name pos:start="469:13" pos:end="469:20">buf_size</name> <operator pos:start="469:22" pos:end="469:22">&gt;</operator> <name pos:start="469:24" pos:end="469:30">BLKSIZE</name></expr>)</condition> <block pos:start="469:33" pos:end="479:9">{<block_content pos:start="471:13" pos:end="477:35">

            <if_stmt pos:start="471:13" pos:end="477:35"><if pos:start="471:13" pos:end="473:46">if <condition pos:start="471:16" pos:end="471:40">(<expr pos:start="471:17" pos:end="471:39"><name pos:start="471:17" pos:end="471:34"><name pos:start="471:17" pos:end="471:21">avctx</name><operator pos:start="471:22" pos:end="471:23">-&gt;</operator><name pos:start="471:24" pos:end="471:34">block_align</name></name> <operator pos:start="471:36" pos:end="471:37">!=</operator> <literal type="number" pos:start="471:39" pos:end="471:39">0</literal></expr>)</condition><block type="pseudo" pos:start="473:17" pos:end="473:46"><block_content pos:start="473:17" pos:end="473:46">

                <expr_stmt pos:start="473:17" pos:end="473:46"><expr pos:start="473:17" pos:end="473:45"><name pos:start="473:17" pos:end="473:24">buf_size</name> <operator pos:start="473:26" pos:end="473:26">=</operator> <name pos:start="473:28" pos:end="473:45"><name pos:start="473:28" pos:end="473:32">avctx</name><operator pos:start="473:33" pos:end="473:34">-&gt;</operator><name pos:start="473:35" pos:end="473:45">block_align</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="475:13" pos:end="477:35">else<block type="pseudo" pos:start="477:17" pos:end="477:35"><block_content pos:start="477:17" pos:end="477:35">

                <expr_stmt pos:start="477:17" pos:end="477:35"><expr pos:start="477:17" pos:end="477:34"><name pos:start="477:17" pos:end="477:24">buf_size</name> <operator pos:start="477:26" pos:end="477:26">=</operator> <name pos:start="477:28" pos:end="477:34">BLKSIZE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:60"><expr pos:start="481:9" pos:end="481:59"><name pos:start="481:9" pos:end="481:20"><name pos:start="481:9" pos:end="481:9">c</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:17">status</name><index pos:start="481:18" pos:end="481:20">[<expr pos:start="481:19" pos:end="481:19"><literal type="number" pos:start="481:19" pos:end="481:19">0</literal></expr>]</index></name><operator pos:start="481:21" pos:end="481:21">.</operator><name pos:start="481:22" pos:end="481:30">predictor</name> <operator pos:start="481:32" pos:end="481:32">=</operator> <operator pos:start="481:34" pos:end="481:34">(</operator><name pos:start="481:35" pos:end="481:41"><name pos:start="481:35" pos:end="481:37">src</name><index pos:start="481:38" pos:end="481:41">[<expr pos:start="481:39" pos:end="481:40"><literal type="number" pos:start="481:39" pos:end="481:40">10</literal></expr>]</index></name> <operator pos:start="481:43" pos:end="481:43">|</operator> <operator pos:start="481:45" pos:end="481:45">(</operator><name pos:start="481:46" pos:end="481:52"><name pos:start="481:46" pos:end="481:48">src</name><index pos:start="481:49" pos:end="481:52">[<expr pos:start="481:50" pos:end="481:51"><literal type="number" pos:start="481:50" pos:end="481:51">11</literal></expr>]</index></name> <operator pos:start="481:54" pos:end="481:55">&lt;&lt;</operator> <literal type="number" pos:start="481:57" pos:end="481:57">8</literal><operator pos:start="481:58" pos:end="481:58">)</operator><operator pos:start="481:59" pos:end="481:59">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="483:9" pos:end="483:60"><expr pos:start="483:9" pos:end="483:59"><name pos:start="483:9" pos:end="483:20"><name pos:start="483:9" pos:end="483:9">c</name><operator pos:start="483:10" pos:end="483:11">-&gt;</operator><name pos:start="483:12" pos:end="483:17">status</name><index pos:start="483:18" pos:end="483:20">[<expr pos:start="483:19" pos:end="483:19"><literal type="number" pos:start="483:19" pos:end="483:19">1</literal></expr>]</index></name><operator pos:start="483:21" pos:end="483:21">.</operator><name pos:start="483:22" pos:end="483:30">predictor</name> <operator pos:start="483:32" pos:end="483:32">=</operator> <operator pos:start="483:34" pos:end="483:34">(</operator><name pos:start="483:35" pos:end="483:41"><name pos:start="483:35" pos:end="483:37">src</name><index pos:start="483:38" pos:end="483:41">[<expr pos:start="483:39" pos:end="483:40"><literal type="number" pos:start="483:39" pos:end="483:40">12</literal></expr>]</index></name> <operator pos:start="483:43" pos:end="483:43">|</operator> <operator pos:start="483:45" pos:end="483:45">(</operator><name pos:start="483:46" pos:end="483:52"><name pos:start="483:46" pos:end="483:48">src</name><index pos:start="483:49" pos:end="483:52">[<expr pos:start="483:50" pos:end="483:51"><literal type="number" pos:start="483:50" pos:end="483:51">13</literal></expr>]</index></name> <operator pos:start="483:54" pos:end="483:55">&lt;&lt;</operator> <literal type="number" pos:start="483:57" pos:end="483:57">8</literal><operator pos:start="483:58" pos:end="483:58">)</operator><operator pos:start="483:59" pos:end="483:59">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:42"><expr pos:start="485:9" pos:end="485:41"><name pos:start="485:9" pos:end="485:20"><name pos:start="485:9" pos:end="485:9">c</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:17">status</name><index pos:start="485:18" pos:end="485:20">[<expr pos:start="485:19" pos:end="485:19"><literal type="number" pos:start="485:19" pos:end="485:19">0</literal></expr>]</index></name><operator pos:start="485:21" pos:end="485:21">.</operator><name pos:start="485:22" pos:end="485:31">step_index</name> <operator pos:start="485:33" pos:end="485:33">=</operator> <name pos:start="485:35" pos:end="485:41"><name pos:start="485:35" pos:end="485:37">src</name><index pos:start="485:38" pos:end="485:41">[<expr pos:start="485:39" pos:end="485:40"><literal type="number" pos:start="485:39" pos:end="485:40">14</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:42"><expr pos:start="487:9" pos:end="487:41"><name pos:start="487:9" pos:end="487:20"><name pos:start="487:9" pos:end="487:9">c</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:17">status</name><index pos:start="487:18" pos:end="487:20">[<expr pos:start="487:19" pos:end="487:19"><literal type="number" pos:start="487:19" pos:end="487:19">1</literal></expr>]</index></name><operator pos:start="487:21" pos:end="487:21">.</operator><name pos:start="487:22" pos:end="487:31">step_index</name> <operator pos:start="487:33" pos:end="487:33">=</operator> <name pos:start="487:35" pos:end="487:41"><name pos:start="487:35" pos:end="487:37">src</name><index pos:start="487:38" pos:end="487:41">[<expr pos:start="487:39" pos:end="487:40"><literal type="number" pos:start="487:39" pos:end="487:40">15</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="489:9" pos:end="489:40">/* sign extend the predictors */</comment>

        <if_stmt pos:start="491:9" pos:end="493:46"><if pos:start="491:9" pos:end="493:46">if<condition pos:start="491:11" pos:end="491:43">(<expr pos:start="491:12" pos:end="491:42"><name pos:start="491:12" pos:end="491:23"><name pos:start="491:12" pos:end="491:12">c</name><operator pos:start="491:13" pos:end="491:14">-&gt;</operator><name pos:start="491:15" pos:end="491:20">status</name><index pos:start="491:21" pos:end="491:23">[<expr pos:start="491:22" pos:end="491:22"><literal type="number" pos:start="491:22" pos:end="491:22">0</literal></expr>]</index></name><operator pos:start="491:24" pos:end="491:24">.</operator><name pos:start="491:25" pos:end="491:33">predictor</name> <operator pos:start="491:35" pos:end="491:35">&amp;</operator> <literal type="number" pos:start="491:37" pos:end="491:42">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="493:13" pos:end="493:46"><block_content pos:start="493:13" pos:end="493:46">

            <expr_stmt pos:start="493:13" pos:end="493:46"><expr pos:start="493:13" pos:end="493:45"><name pos:start="493:13" pos:end="493:24"><name pos:start="493:13" pos:end="493:13">c</name><operator pos:start="493:14" pos:end="493:15">-&gt;</operator><name pos:start="493:16" pos:end="493:21">status</name><index pos:start="493:22" pos:end="493:24">[<expr pos:start="493:23" pos:end="493:23"><literal type="number" pos:start="493:23" pos:end="493:23">0</literal></expr>]</index></name><operator pos:start="493:25" pos:end="493:25">.</operator><name pos:start="493:26" pos:end="493:34">predictor</name> <operator pos:start="493:36" pos:end="493:37">-=</operator> <literal type="number" pos:start="493:39" pos:end="493:45">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="495:9" pos:end="497:46"><if pos:start="495:9" pos:end="497:46">if<condition pos:start="495:11" pos:end="495:43">(<expr pos:start="495:12" pos:end="495:42"><name pos:start="495:12" pos:end="495:23"><name pos:start="495:12" pos:end="495:12">c</name><operator pos:start="495:13" pos:end="495:14">-&gt;</operator><name pos:start="495:15" pos:end="495:20">status</name><index pos:start="495:21" pos:end="495:23">[<expr pos:start="495:22" pos:end="495:22"><literal type="number" pos:start="495:22" pos:end="495:22">1</literal></expr>]</index></name><operator pos:start="495:24" pos:end="495:24">.</operator><name pos:start="495:25" pos:end="495:33">predictor</name> <operator pos:start="495:35" pos:end="495:35">&amp;</operator> <literal type="number" pos:start="495:37" pos:end="495:42">0x8000</literal></expr>)</condition><block type="pseudo" pos:start="497:13" pos:end="497:46"><block_content pos:start="497:13" pos:end="497:46">

            <expr_stmt pos:start="497:13" pos:end="497:46"><expr pos:start="497:13" pos:end="497:45"><name pos:start="497:13" pos:end="497:24"><name pos:start="497:13" pos:end="497:13">c</name><operator pos:start="497:14" pos:end="497:15">-&gt;</operator><name pos:start="497:16" pos:end="497:21">status</name><index pos:start="497:22" pos:end="497:24">[<expr pos:start="497:23" pos:end="497:23"><literal type="number" pos:start="497:23" pos:end="497:23">1</literal></expr>]</index></name><operator pos:start="497:25" pos:end="497:25">.</operator><name pos:start="497:26" pos:end="497:34">predictor</name> <operator pos:start="497:36" pos:end="497:37">-=</operator> <literal type="number" pos:start="497:39" pos:end="497:45">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="499:9" pos:end="499:18"><expr pos:start="499:9" pos:end="499:17"><name pos:start="499:9" pos:end="499:11">src</name> <operator pos:start="499:13" pos:end="499:14">+=</operator> <literal type="number" pos:start="499:16" pos:end="499:17">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="501:9" pos:end="501:46"><expr pos:start="501:9" pos:end="501:45"><name pos:start="501:9" pos:end="501:20">diff_channel</name> <operator pos:start="501:22" pos:end="501:22">=</operator> <name pos:start="501:24" pos:end="501:35"><name pos:start="501:24" pos:end="501:24">c</name><operator pos:start="501:25" pos:end="501:26">-&gt;</operator><name pos:start="501:27" pos:end="501:32">status</name><index pos:start="501:33" pos:end="501:35">[<expr pos:start="501:34" pos:end="501:34"><literal type="number" pos:start="501:34" pos:end="501:34">1</literal></expr>]</index></name><operator pos:start="501:36" pos:end="501:36">.</operator><name pos:start="501:37" pos:end="501:45">predictor</name></expr>;</expr_stmt>



        <comment type="block" pos:start="505:9" pos:end="507:36">/* the DK3_GET_NEXT_NIBBLE macro issues the break statement when

         * the buffer is consumed */</comment>

        <while pos:start="509:9" pos:end="561:9">while <condition pos:start="509:15" pos:end="509:17">(<expr pos:start="509:16" pos:end="509:16"><literal type="number" pos:start="509:16" pos:end="509:16">1</literal></expr>)</condition> <block pos:start="509:19" pos:end="561:9">{<block_content pos:start="521:13" pos:end="559:73">



            <comment type="block" pos:start="513:13" pos:end="515:50">/* for this algorithm, c-&gt;status[0] is the sum channel and

             * c-&gt;status[1] is the diff channel */</comment>



            <comment type="block" pos:start="519:13" pos:end="519:64">/* process the first predictor of the sum channel */</comment>

            <expr_stmt pos:start="521:13" pos:end="521:34"><expr pos:start="521:13" pos:end="521:33"><call pos:start="521:13" pos:end="521:33"><name pos:start="521:13" pos:end="521:31">DK3_GET_NEXT_NIBBLE</name><argument_list pos:start="521:32" pos:end="521:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:59"><expr pos:start="523:13" pos:end="523:58"><call pos:start="523:13" pos:end="523:58"><name pos:start="523:13" pos:end="523:35">adpcm_ima_expand_nibble</name><argument_list pos:start="523:36" pos:end="523:58">(<argument pos:start="523:37" pos:end="523:49"><expr pos:start="523:37" pos:end="523:49"><operator pos:start="523:37" pos:end="523:37">&amp;</operator><name pos:start="523:38" pos:end="523:49"><name pos:start="523:38" pos:end="523:38">c</name><operator pos:start="523:39" pos:end="523:40">-&gt;</operator><name pos:start="523:41" pos:end="523:46">status</name><index pos:start="523:47" pos:end="523:49">[<expr pos:start="523:48" pos:end="523:48"><literal type="number" pos:start="523:48" pos:end="523:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="523:52" pos:end="523:57"><expr pos:start="523:52" pos:end="523:57"><name pos:start="523:52" pos:end="523:57">nibble</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="527:13" pos:end="527:52">/* process the diff channel predictor */</comment>

            <expr_stmt pos:start="529:13" pos:end="529:34"><expr pos:start="529:13" pos:end="529:33"><call pos:start="529:13" pos:end="529:33"><name pos:start="529:13" pos:end="529:31">DK3_GET_NEXT_NIBBLE</name><argument_list pos:start="529:32" pos:end="529:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="531:59"><expr pos:start="531:13" pos:end="531:58"><call pos:start="531:13" pos:end="531:58"><name pos:start="531:13" pos:end="531:35">adpcm_ima_expand_nibble</name><argument_list pos:start="531:36" pos:end="531:58">(<argument pos:start="531:37" pos:end="531:49"><expr pos:start="531:37" pos:end="531:49"><operator pos:start="531:37" pos:end="531:37">&amp;</operator><name pos:start="531:38" pos:end="531:49"><name pos:start="531:38" pos:end="531:38">c</name><operator pos:start="531:39" pos:end="531:40">-&gt;</operator><name pos:start="531:41" pos:end="531:46">status</name><index pos:start="531:47" pos:end="531:49">[<expr pos:start="531:48" pos:end="531:48"><literal type="number" pos:start="531:48" pos:end="531:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="531:52" pos:end="531:57"><expr pos:start="531:52" pos:end="531:57"><name pos:start="531:52" pos:end="531:57">nibble</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="535:13" pos:end="535:62">/* process the first pair of stereo PCM samples */</comment>

            <expr_stmt pos:start="537:13" pos:end="537:71"><expr pos:start="537:13" pos:end="537:70"><name pos:start="537:13" pos:end="537:24">diff_channel</name> <operator pos:start="537:26" pos:end="537:26">=</operator> <operator pos:start="537:28" pos:end="537:28">(</operator><name pos:start="537:29" pos:end="537:40">diff_channel</name> <operator pos:start="537:42" pos:end="537:42">+</operator> <name pos:start="537:44" pos:end="537:55"><name pos:start="537:44" pos:end="537:44">c</name><operator pos:start="537:45" pos:end="537:46">-&gt;</operator><name pos:start="537:47" pos:end="537:52">status</name><index pos:start="537:53" pos:end="537:55">[<expr pos:start="537:54" pos:end="537:54"><literal type="number" pos:start="537:54" pos:end="537:54">1</literal></expr>]</index></name><operator pos:start="537:56" pos:end="537:56">.</operator><name pos:start="537:57" pos:end="537:65">predictor</name><operator pos:start="537:66" pos:end="537:66">)</operator> <operator pos:start="537:68" pos:end="537:68">/</operator> <literal type="number" pos:start="537:70" pos:end="537:70">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="539:13" pos:end="539:73"><expr pos:start="539:13" pos:end="539:72"><operator pos:start="539:13" pos:end="539:13">*</operator><name pos:start="539:14" pos:end="539:20">samples</name><operator pos:start="539:21" pos:end="539:22">++</operator> <operator pos:start="539:24" pos:end="539:24">=</operator> <name pos:start="539:26" pos:end="539:37"><name pos:start="539:26" pos:end="539:26">c</name><operator pos:start="539:27" pos:end="539:28">-&gt;</operator><name pos:start="539:29" pos:end="539:34">status</name><index pos:start="539:35" pos:end="539:37">[<expr pos:start="539:36" pos:end="539:36"><literal type="number" pos:start="539:36" pos:end="539:36">0</literal></expr>]</index></name><operator pos:start="539:38" pos:end="539:38">.</operator><name pos:start="539:39" pos:end="539:47">predictor</name> <operator pos:start="539:49" pos:end="539:49">+</operator> <name pos:start="539:51" pos:end="539:62"><name pos:start="539:51" pos:end="539:51">c</name><operator pos:start="539:52" pos:end="539:53">-&gt;</operator><name pos:start="539:54" pos:end="539:59">status</name><index pos:start="539:60" pos:end="539:62">[<expr pos:start="539:61" pos:end="539:61"><literal type="number" pos:start="539:61" pos:end="539:61">1</literal></expr>]</index></name><operator pos:start="539:63" pos:end="539:63">.</operator><name pos:start="539:64" pos:end="539:72">predictor</name></expr>;</expr_stmt>

            <expr_stmt pos:start="541:13" pos:end="541:73"><expr pos:start="541:13" pos:end="541:72"><operator pos:start="541:13" pos:end="541:13">*</operator><name pos:start="541:14" pos:end="541:20">samples</name><operator pos:start="541:21" pos:end="541:22">++</operator> <operator pos:start="541:24" pos:end="541:24">=</operator> <name pos:start="541:26" pos:end="541:37"><name pos:start="541:26" pos:end="541:26">c</name><operator pos:start="541:27" pos:end="541:28">-&gt;</operator><name pos:start="541:29" pos:end="541:34">status</name><index pos:start="541:35" pos:end="541:37">[<expr pos:start="541:36" pos:end="541:36"><literal type="number" pos:start="541:36" pos:end="541:36">0</literal></expr>]</index></name><operator pos:start="541:38" pos:end="541:38">.</operator><name pos:start="541:39" pos:end="541:47">predictor</name> <operator pos:start="541:49" pos:end="541:49">-</operator> <name pos:start="541:51" pos:end="541:62"><name pos:start="541:51" pos:end="541:51">c</name><operator pos:start="541:52" pos:end="541:53">-&gt;</operator><name pos:start="541:54" pos:end="541:59">status</name><index pos:start="541:60" pos:end="541:62">[<expr pos:start="541:61" pos:end="541:61"><literal type="number" pos:start="541:61" pos:end="541:61">1</literal></expr>]</index></name><operator pos:start="541:63" pos:end="541:63">.</operator><name pos:start="541:64" pos:end="541:72">predictor</name></expr>;</expr_stmt>



            <comment type="block" pos:start="545:13" pos:end="545:65">/* process the second predictor of the sum channel */</comment>

            <expr_stmt pos:start="547:13" pos:end="547:34"><expr pos:start="547:13" pos:end="547:33"><call pos:start="547:13" pos:end="547:33"><name pos:start="547:13" pos:end="547:31">DK3_GET_NEXT_NIBBLE</name><argument_list pos:start="547:32" pos:end="547:33">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="549:13" pos:end="549:59"><expr pos:start="549:13" pos:end="549:58"><call pos:start="549:13" pos:end="549:58"><name pos:start="549:13" pos:end="549:35">adpcm_ima_expand_nibble</name><argument_list pos:start="549:36" pos:end="549:58">(<argument pos:start="549:37" pos:end="549:49"><expr pos:start="549:37" pos:end="549:49"><operator pos:start="549:37" pos:end="549:37">&amp;</operator><name pos:start="549:38" pos:end="549:49"><name pos:start="549:38" pos:end="549:38">c</name><operator pos:start="549:39" pos:end="549:40">-&gt;</operator><name pos:start="549:41" pos:end="549:46">status</name><index pos:start="549:47" pos:end="549:49">[<expr pos:start="549:48" pos:end="549:48"><literal type="number" pos:start="549:48" pos:end="549:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="549:52" pos:end="549:57"><expr pos:start="549:52" pos:end="549:57"><name pos:start="549:52" pos:end="549:57">nibble</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="553:13" pos:end="553:63">/* process the second pair of stereo PCM samples */</comment>

            <expr_stmt pos:start="555:13" pos:end="555:71"><expr pos:start="555:13" pos:end="555:70"><name pos:start="555:13" pos:end="555:24">diff_channel</name> <operator pos:start="555:26" pos:end="555:26">=</operator> <operator pos:start="555:28" pos:end="555:28">(</operator><name pos:start="555:29" pos:end="555:40">diff_channel</name> <operator pos:start="555:42" pos:end="555:42">+</operator> <name pos:start="555:44" pos:end="555:55"><name pos:start="555:44" pos:end="555:44">c</name><operator pos:start="555:45" pos:end="555:46">-&gt;</operator><name pos:start="555:47" pos:end="555:52">status</name><index pos:start="555:53" pos:end="555:55">[<expr pos:start="555:54" pos:end="555:54"><literal type="number" pos:start="555:54" pos:end="555:54">1</literal></expr>]</index></name><operator pos:start="555:56" pos:end="555:56">.</operator><name pos:start="555:57" pos:end="555:65">predictor</name><operator pos:start="555:66" pos:end="555:66">)</operator> <operator pos:start="555:68" pos:end="555:68">/</operator> <literal type="number" pos:start="555:70" pos:end="555:70">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="557:13" pos:end="557:73"><expr pos:start="557:13" pos:end="557:72"><operator pos:start="557:13" pos:end="557:13">*</operator><name pos:start="557:14" pos:end="557:20">samples</name><operator pos:start="557:21" pos:end="557:22">++</operator> <operator pos:start="557:24" pos:end="557:24">=</operator> <name pos:start="557:26" pos:end="557:37"><name pos:start="557:26" pos:end="557:26">c</name><operator pos:start="557:27" pos:end="557:28">-&gt;</operator><name pos:start="557:29" pos:end="557:34">status</name><index pos:start="557:35" pos:end="557:37">[<expr pos:start="557:36" pos:end="557:36"><literal type="number" pos:start="557:36" pos:end="557:36">0</literal></expr>]</index></name><operator pos:start="557:38" pos:end="557:38">.</operator><name pos:start="557:39" pos:end="557:47">predictor</name> <operator pos:start="557:49" pos:end="557:49">+</operator> <name pos:start="557:51" pos:end="557:62"><name pos:start="557:51" pos:end="557:51">c</name><operator pos:start="557:52" pos:end="557:53">-&gt;</operator><name pos:start="557:54" pos:end="557:59">status</name><index pos:start="557:60" pos:end="557:62">[<expr pos:start="557:61" pos:end="557:61"><literal type="number" pos:start="557:61" pos:end="557:61">1</literal></expr>]</index></name><operator pos:start="557:63" pos:end="557:63">.</operator><name pos:start="557:64" pos:end="557:72">predictor</name></expr>;</expr_stmt>

            <expr_stmt pos:start="559:13" pos:end="559:73"><expr pos:start="559:13" pos:end="559:72"><operator pos:start="559:13" pos:end="559:13">*</operator><name pos:start="559:14" pos:end="559:20">samples</name><operator pos:start="559:21" pos:end="559:22">++</operator> <operator pos:start="559:24" pos:end="559:24">=</operator> <name pos:start="559:26" pos:end="559:37"><name pos:start="559:26" pos:end="559:26">c</name><operator pos:start="559:27" pos:end="559:28">-&gt;</operator><name pos:start="559:29" pos:end="559:34">status</name><index pos:start="559:35" pos:end="559:37">[<expr pos:start="559:36" pos:end="559:36"><literal type="number" pos:start="559:36" pos:end="559:36">0</literal></expr>]</index></name><operator pos:start="559:38" pos:end="559:38">.</operator><name pos:start="559:39" pos:end="559:47">predictor</name> <operator pos:start="559:49" pos:end="559:49">-</operator> <name pos:start="559:51" pos:end="559:62"><name pos:start="559:51" pos:end="559:51">c</name><operator pos:start="559:52" pos:end="559:53">-&gt;</operator><name pos:start="559:54" pos:end="559:59">status</name><index pos:start="559:60" pos:end="559:62">[<expr pos:start="559:61" pos:end="559:61"><literal type="number" pos:start="559:61" pos:end="559:61">1</literal></expr>]</index></name><operator pos:start="559:63" pos:end="559:63">.</operator><name pos:start="559:64" pos:end="559:72">predictor</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="563:9" pos:end="563:14">break;</break>

    <case pos:start="565:5" pos:end="565:31">case <expr pos:start="565:10" pos:end="565:30"><name pos:start="565:10" pos:end="565:30">CODEC_ID_ADPCM_IMA_WS</name></expr>:</case>

        <comment type="block" pos:start="567:9" pos:end="567:71">/* no per-block initialization; just start decoding the data */</comment>

        <while pos:start="569:9" pos:end="599:9">while <condition pos:start="569:15" pos:end="569:36">(<expr pos:start="569:16" pos:end="569:35"><name pos:start="569:16" pos:end="569:18">src</name> <operator pos:start="569:20" pos:end="569:20">&lt;</operator> <name pos:start="569:22" pos:end="569:24">buf</name> <operator pos:start="569:26" pos:end="569:26">+</operator> <name pos:start="569:28" pos:end="569:35">buf_size</name></expr>)</condition> <block pos:start="569:38" pos:end="599:9">{<block_content pos:start="573:13" pos:end="597:18">



            <if_stmt pos:start="573:13" pos:end="593:13"><if pos:start="573:13" pos:end="583:13">if <condition pos:start="573:16" pos:end="573:19">(<expr pos:start="573:17" pos:end="573:18"><name pos:start="573:17" pos:end="573:18">st</name></expr>)</condition> <block pos:start="573:21" pos:end="583:13">{<block_content pos:start="575:17" pos:end="581:35">

                <expr_stmt pos:start="575:17" pos:end="577:42"><expr pos:start="575:17" pos:end="577:41"><operator pos:start="575:17" pos:end="575:17">*</operator><name pos:start="575:18" pos:end="575:24">samples</name><operator pos:start="575:25" pos:end="575:26">++</operator> <operator pos:start="575:28" pos:end="575:28">=</operator> <call pos:start="575:30" pos:end="577:41"><name pos:start="575:30" pos:end="575:52">adpcm_ima_expand_nibble</name><argument_list pos:start="575:53" pos:end="577:41">(<argument pos:start="575:54" pos:end="575:66"><expr pos:start="575:54" pos:end="575:66"><operator pos:start="575:54" pos:end="575:54">&amp;</operator><name pos:start="575:55" pos:end="575:66"><name pos:start="575:55" pos:end="575:55">c</name><operator pos:start="575:56" pos:end="575:57">-&gt;</operator><name pos:start="575:58" pos:end="575:63">status</name><index pos:start="575:64" pos:end="575:66">[<expr pos:start="575:65" pos:end="575:65"><literal type="number" pos:start="575:65" pos:end="575:65">0</literal></expr>]</index></name></expr></argument>, 

                    <argument pos:start="577:21" pos:end="577:40"><expr pos:start="577:21" pos:end="577:40"><operator pos:start="577:21" pos:end="577:21">(</operator><name pos:start="577:22" pos:end="577:27"><name pos:start="577:22" pos:end="577:24">src</name><index pos:start="577:25" pos:end="577:27">[<expr pos:start="577:26" pos:end="577:26"><literal type="number" pos:start="577:26" pos:end="577:26">0</literal></expr>]</index></name> <operator pos:start="577:29" pos:end="577:30">&gt;&gt;</operator> <literal type="number" pos:start="577:32" pos:end="577:32">4</literal><operator pos:start="577:33" pos:end="577:33">)</operator> <operator pos:start="577:35" pos:end="577:35">&amp;</operator> <literal type="number" pos:start="577:37" pos:end="577:40">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="581:35"><expr pos:start="579:17" pos:end="581:34"><operator pos:start="579:17" pos:end="579:17">*</operator><name pos:start="579:18" pos:end="579:24">samples</name><operator pos:start="579:25" pos:end="579:26">++</operator> <operator pos:start="579:28" pos:end="579:28">=</operator> <call pos:start="579:30" pos:end="581:34"><name pos:start="579:30" pos:end="579:52">adpcm_ima_expand_nibble</name><argument_list pos:start="579:53" pos:end="581:34">(<argument pos:start="579:54" pos:end="579:66"><expr pos:start="579:54" pos:end="579:66"><operator pos:start="579:54" pos:end="579:54">&amp;</operator><name pos:start="579:55" pos:end="579:66"><name pos:start="579:55" pos:end="579:55">c</name><operator pos:start="579:56" pos:end="579:57">-&gt;</operator><name pos:start="579:58" pos:end="579:63">status</name><index pos:start="579:64" pos:end="579:66">[<expr pos:start="579:65" pos:end="579:65"><literal type="number" pos:start="579:65" pos:end="579:65">1</literal></expr>]</index></name></expr></argument>, 

                    <argument pos:start="581:21" pos:end="581:33"><expr pos:start="581:21" pos:end="581:33"><name pos:start="581:21" pos:end="581:26"><name pos:start="581:21" pos:end="581:23">src</name><index pos:start="581:24" pos:end="581:26">[<expr pos:start="581:25" pos:end="581:25"><literal type="number" pos:start="581:25" pos:end="581:25">0</literal></expr>]</index></name> <operator pos:start="581:28" pos:end="581:28">&amp;</operator> <literal type="number" pos:start="581:30" pos:end="581:33">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="583:15" pos:end="593:13">else <block pos:start="583:20" pos:end="593:13">{<block_content pos:start="585:17" pos:end="591:35">

                <expr_stmt pos:start="585:17" pos:end="587:42"><expr pos:start="585:17" pos:end="587:41"><operator pos:start="585:17" pos:end="585:17">*</operator><name pos:start="585:18" pos:end="585:24">samples</name><operator pos:start="585:25" pos:end="585:26">++</operator> <operator pos:start="585:28" pos:end="585:28">=</operator> <call pos:start="585:30" pos:end="587:41"><name pos:start="585:30" pos:end="585:52">adpcm_ima_expand_nibble</name><argument_list pos:start="585:53" pos:end="587:41">(<argument pos:start="585:54" pos:end="585:66"><expr pos:start="585:54" pos:end="585:66"><operator pos:start="585:54" pos:end="585:54">&amp;</operator><name pos:start="585:55" pos:end="585:66"><name pos:start="585:55" pos:end="585:55">c</name><operator pos:start="585:56" pos:end="585:57">-&gt;</operator><name pos:start="585:58" pos:end="585:63">status</name><index pos:start="585:64" pos:end="585:66">[<expr pos:start="585:65" pos:end="585:65"><literal type="number" pos:start="585:65" pos:end="585:65">0</literal></expr>]</index></name></expr></argument>, 

                    <argument pos:start="587:21" pos:end="587:40"><expr pos:start="587:21" pos:end="587:40"><operator pos:start="587:21" pos:end="587:21">(</operator><name pos:start="587:22" pos:end="587:27"><name pos:start="587:22" pos:end="587:24">src</name><index pos:start="587:25" pos:end="587:27">[<expr pos:start="587:26" pos:end="587:26"><literal type="number" pos:start="587:26" pos:end="587:26">0</literal></expr>]</index></name> <operator pos:start="587:29" pos:end="587:30">&gt;&gt;</operator> <literal type="number" pos:start="587:32" pos:end="587:32">4</literal><operator pos:start="587:33" pos:end="587:33">)</operator> <operator pos:start="587:35" pos:end="587:35">&amp;</operator> <literal type="number" pos:start="587:37" pos:end="587:40">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="589:17" pos:end="591:35"><expr pos:start="589:17" pos:end="591:34"><operator pos:start="589:17" pos:end="589:17">*</operator><name pos:start="589:18" pos:end="589:24">samples</name><operator pos:start="589:25" pos:end="589:26">++</operator> <operator pos:start="589:28" pos:end="589:28">=</operator> <call pos:start="589:30" pos:end="591:34"><name pos:start="589:30" pos:end="589:52">adpcm_ima_expand_nibble</name><argument_list pos:start="589:53" pos:end="591:34">(<argument pos:start="589:54" pos:end="589:66"><expr pos:start="589:54" pos:end="589:66"><operator pos:start="589:54" pos:end="589:54">&amp;</operator><name pos:start="589:55" pos:end="589:66"><name pos:start="589:55" pos:end="589:55">c</name><operator pos:start="589:56" pos:end="589:57">-&gt;</operator><name pos:start="589:58" pos:end="589:63">status</name><index pos:start="589:64" pos:end="589:66">[<expr pos:start="589:65" pos:end="589:65"><literal type="number" pos:start="589:65" pos:end="589:65">0</literal></expr>]</index></name></expr></argument>, 

                    <argument pos:start="591:21" pos:end="591:33"><expr pos:start="591:21" pos:end="591:33"><name pos:start="591:21" pos:end="591:26"><name pos:start="591:21" pos:end="591:23">src</name><index pos:start="591:24" pos:end="591:26">[<expr pos:start="591:25" pos:end="591:25"><literal type="number" pos:start="591:25" pos:end="591:25">0</literal></expr>]</index></name> <operator pos:start="591:28" pos:end="591:28">&amp;</operator> <literal type="number" pos:start="591:30" pos:end="591:33">0x0F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="597:13" pos:end="597:18"><expr pos:start="597:13" pos:end="597:17"><name pos:start="597:13" pos:end="597:15">src</name><operator pos:start="597:16" pos:end="597:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="601:9" pos:end="601:14">break;</break>

    <case pos:start="603:5" pos:end="603:27">case <expr pos:start="603:10" pos:end="603:26"><name pos:start="603:10" pos:end="603:26">CODEC_ID_ADPCM_XA</name></expr>:</case>

        <expr_stmt pos:start="605:9" pos:end="607:56"><expr pos:start="605:9" pos:end="607:55"><name pos:start="605:9" pos:end="605:20"><name pos:start="605:9" pos:end="605:9">c</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:17">status</name><index pos:start="605:18" pos:end="605:20">[<expr pos:start="605:19" pos:end="605:19"><literal type="number" pos:start="605:19" pos:end="605:19">0</literal></expr>]</index></name><operator pos:start="605:21" pos:end="605:21">.</operator><name pos:start="605:22" pos:end="605:28">sample1</name> <operator pos:start="605:30" pos:end="605:30">=</operator> <name pos:start="605:32" pos:end="605:43"><name pos:start="605:32" pos:end="605:32">c</name><operator pos:start="605:33" pos:end="605:34">-&gt;</operator><name pos:start="605:35" pos:end="605:40">status</name><index pos:start="605:41" pos:end="605:43">[<expr pos:start="605:42" pos:end="605:42"><literal type="number" pos:start="605:42" pos:end="605:42">0</literal></expr>]</index></name><operator pos:start="605:44" pos:end="605:44">.</operator><name pos:start="605:45" pos:end="605:51">sample2</name> <operator pos:start="605:53" pos:end="605:53">=</operator> 

        <name pos:start="607:9" pos:end="607:20"><name pos:start="607:9" pos:end="607:9">c</name><operator pos:start="607:10" pos:end="607:11">-&gt;</operator><name pos:start="607:12" pos:end="607:17">status</name><index pos:start="607:18" pos:end="607:20">[<expr pos:start="607:19" pos:end="607:19"><literal type="number" pos:start="607:19" pos:end="607:19">1</literal></expr>]</index></name><operator pos:start="607:21" pos:end="607:21">.</operator><name pos:start="607:22" pos:end="607:28">sample1</name> <operator pos:start="607:30" pos:end="607:30">=</operator> <name pos:start="607:32" pos:end="607:43"><name pos:start="607:32" pos:end="607:32">c</name><operator pos:start="607:33" pos:end="607:34">-&gt;</operator><name pos:start="607:35" pos:end="607:40">status</name><index pos:start="607:41" pos:end="607:43">[<expr pos:start="607:42" pos:end="607:42"><literal type="number" pos:start="607:42" pos:end="607:42">1</literal></expr>]</index></name><operator pos:start="607:44" pos:end="607:44">.</operator><name pos:start="607:45" pos:end="607:51">sample2</name> <operator pos:start="607:53" pos:end="607:53">=</operator> <literal type="number" pos:start="607:55" pos:end="607:55">0</literal></expr>;</expr_stmt>

        <while pos:start="609:9" pos:end="621:9">while <condition pos:start="609:15" pos:end="609:31">(<expr pos:start="609:16" pos:end="609:30"><name pos:start="609:16" pos:end="609:23">buf_size</name> <operator pos:start="609:25" pos:end="609:26">&gt;=</operator> <literal type="number" pos:start="609:28" pos:end="609:30">128</literal></expr>)</condition> <block pos:start="609:33" pos:end="621:9">{<block_content pos:start="611:13" pos:end="619:28">

            <expr_stmt pos:start="611:13" pos:end="613:33"><expr pos:start="611:13" pos:end="613:32"><call pos:start="611:13" pos:end="613:32"><name pos:start="611:13" pos:end="611:21">xa_decode</name><argument_list pos:start="611:22" pos:end="613:32">(<argument pos:start="611:23" pos:end="611:29"><expr pos:start="611:23" pos:end="611:29"><name pos:start="611:23" pos:end="611:29">samples</name></expr></argument>, <argument pos:start="611:32" pos:end="611:34"><expr pos:start="611:32" pos:end="611:34"><name pos:start="611:32" pos:end="611:34">src</name></expr></argument>, <argument pos:start="611:37" pos:end="611:49"><expr pos:start="611:37" pos:end="611:49"><operator pos:start="611:37" pos:end="611:37">&amp;</operator><name pos:start="611:38" pos:end="611:49"><name pos:start="611:38" pos:end="611:38">c</name><operator pos:start="611:39" pos:end="611:40">-&gt;</operator><name pos:start="611:41" pos:end="611:46">status</name><index pos:start="611:47" pos:end="611:49">[<expr pos:start="611:48" pos:end="611:48"><literal type="number" pos:start="611:48" pos:end="611:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="611:52" pos:end="611:64"><expr pos:start="611:52" pos:end="611:64"><operator pos:start="611:52" pos:end="611:52">&amp;</operator><name pos:start="611:53" pos:end="611:64"><name pos:start="611:53" pos:end="611:53">c</name><operator pos:start="611:54" pos:end="611:55">-&gt;</operator><name pos:start="611:56" pos:end="611:61">status</name><index pos:start="611:62" pos:end="611:64">[<expr pos:start="611:63" pos:end="611:63"><literal type="number" pos:start="611:63" pos:end="611:63">1</literal></expr>]</index></name></expr></argument>, 

                <argument pos:start="613:17" pos:end="613:31"><expr pos:start="613:17" pos:end="613:31"><name pos:start="613:17" pos:end="613:31"><name pos:start="613:17" pos:end="613:21">avctx</name><operator pos:start="613:22" pos:end="613:23">-&gt;</operator><name pos:start="613:24" pos:end="613:31">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:23"><expr pos:start="615:13" pos:end="615:22"><name pos:start="615:13" pos:end="615:15">src</name> <operator pos:start="615:17" pos:end="615:18">+=</operator> <literal type="number" pos:start="615:20" pos:end="615:22">128</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:30"><expr pos:start="617:13" pos:end="617:29"><name pos:start="617:13" pos:end="617:19">samples</name> <operator pos:start="617:21" pos:end="617:22">+=</operator> <literal type="number" pos:start="617:24" pos:end="617:25">28</literal> <operator pos:start="617:27" pos:end="617:27">*</operator> <literal type="number" pos:start="617:29" pos:end="617:29">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="619:13" pos:end="619:28"><expr pos:start="619:13" pos:end="619:27"><name pos:start="619:13" pos:end="619:20">buf_size</name> <operator pos:start="619:22" pos:end="619:23">-=</operator> <literal type="number" pos:start="619:25" pos:end="619:27">128</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

        <break pos:start="623:9" pos:end="623:14">break;</break>

    <default pos:start="625:5" pos:end="625:12">default:</default>

        <expr_stmt pos:start="627:9" pos:end="627:23"><expr pos:start="627:9" pos:end="627:22"><operator pos:start="627:9" pos:end="627:9">*</operator><name pos:start="627:10" pos:end="627:18">data_size</name> <operator pos:start="627:20" pos:end="627:20">=</operator> <literal type="number" pos:start="627:22" pos:end="627:22">0</literal></expr>;</expr_stmt>

        <return pos:start="629:9" pos:end="629:18">return <expr pos:start="629:16" pos:end="629:17"><operator pos:start="629:16" pos:end="629:16">-</operator><literal type="number" pos:start="629:17" pos:end="629:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="633:5" pos:end="633:54"><expr pos:start="633:5" pos:end="633:53"><operator pos:start="633:5" pos:end="633:5">*</operator><name pos:start="633:6" pos:end="633:14">data_size</name> <operator pos:start="633:16" pos:end="633:16">=</operator> <operator pos:start="633:18" pos:end="633:18">(</operator><name pos:start="633:19" pos:end="633:25">uint8_t</name> <operator pos:start="633:27" pos:end="633:27">*</operator><operator pos:start="633:28" pos:end="633:28">)</operator><name pos:start="633:29" pos:end="633:35">samples</name> <operator pos:start="633:37" pos:end="633:37">-</operator> <operator pos:start="633:39" pos:end="633:39">(</operator><name pos:start="633:40" pos:end="633:46">uint8_t</name> <operator pos:start="633:48" pos:end="633:48">*</operator><operator pos:start="633:49" pos:end="633:49">)</operator><name pos:start="633:50" pos:end="633:53">data</name></expr>;</expr_stmt>

    <return pos:start="635:5" pos:end="635:21">return <expr pos:start="635:12" pos:end="635:20"><name pos:start="635:12" pos:end="635:14">src</name> <operator pos:start="635:16" pos:end="635:16">-</operator> <name pos:start="635:18" pos:end="635:20">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
