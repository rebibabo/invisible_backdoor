<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18713.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">need_output</name><parameter_list pos:start="1:23" pos:end="1:28">(<parameter pos:start="1:24" pos:end="1:27"><decl pos:start="1:24" pos:end="1:27"><type pos:start="1:24" pos:end="1:27"><name pos:start="1:24" pos:end="1:27">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="41:5">for <control pos:start="9:9" pos:end="9:43">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:38"><expr pos:start="9:17" pos:end="9:37"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:37">nb_output_streams</name></expr>;</condition> <incr pos:start="9:40" pos:end="9:42"><expr pos:start="9:40" pos:end="9:42"><name pos:start="9:40" pos:end="9:40">i</name><operator pos:start="9:41" pos:end="9:42">++</operator></expr></incr>)</control> <block pos:start="9:45" pos:end="41:5">{<block_content pos:start="11:9" pos:end="39:17">

        <decl_stmt pos:start="11:9" pos:end="11:49"><decl pos:start="11:9" pos:end="11:48"><type pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:20">OutputStream</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:25">ost</name>    <init pos:start="11:30" pos:end="11:48">= <expr pos:start="11:32" pos:end="11:48"><name pos:start="11:32" pos:end="11:48"><name pos:start="11:32" pos:end="11:45">output_streams</name><index pos:start="11:46" pos:end="11:48">[<expr pos:start="11:47" pos:end="11:47"><name pos:start="11:47" pos:end="11:47">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:61"><decl pos:start="13:9" pos:end="13:60"><type pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:18">OutputFile</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:22">of</name>       <init pos:start="13:30" pos:end="13:60">= <expr pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:43">output_files</name><index pos:start="13:44" pos:end="13:60">[<expr pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:47">ost</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:59">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:66"><decl pos:start="15:9" pos:end="15:65"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:23">AVFormatContext</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:27">os</name>  <init pos:start="15:30" pos:end="15:65">= <expr pos:start="15:32" pos:end="15:65"><name pos:start="15:32" pos:end="15:60"><name pos:start="15:32" pos:end="15:43">output_files</name><index pos:start="15:44" pos:end="15:60">[<expr pos:start="15:45" pos:end="15:59"><name pos:start="15:45" pos:end="15:59"><name pos:start="15:45" pos:end="15:47">ost</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:59">file_index</name></name></expr>]</index></name><operator pos:start="15:61" pos:end="15:62">-&gt;</operator><name pos:start="15:63" pos:end="15:65">ctx</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="23:21"><if pos:start="19:9" pos:end="23:21">if <condition pos:start="19:12" pos:end="21:64">(<expr pos:start="19:13" pos:end="21:63"><name pos:start="19:13" pos:end="19:39"><name pos:start="19:13" pos:end="19:15">ost</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:39">is_past_recording_time</name></name> <operator pos:start="19:41" pos:end="19:42">||</operator>

            <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:19"><name pos:start="21:14" pos:end="21:15">os</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">pb</name></name> <operator pos:start="21:21" pos:end="21:22">&amp;&amp;</operator> <call pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:32">avio_tell</name><argument_list pos:start="21:33" pos:end="21:40">(<argument pos:start="21:34" pos:end="21:39"><expr pos:start="21:34" pos:end="21:39"><name pos:start="21:34" pos:end="21:39"><name pos:start="21:34" pos:end="21:35">os</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:42" pos:end="21:43">&gt;=</operator> <name pos:start="21:45" pos:end="21:62"><name pos:start="21:45" pos:end="21:46">of</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:62">limit_filesize</name></name><operator pos:start="21:63" pos:end="21:63">)</operator></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:15">ost</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:29">frame_number</name></name> <operator pos:start="25:31" pos:end="25:32">&gt;=</operator> <name pos:start="25:34" pos:end="25:48"><name pos:start="25:34" pos:end="25:36">ost</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:48">max_frames</name></name></expr>)</condition> <block pos:start="25:51" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:21">

            <decl_stmt pos:start="27:13" pos:end="27:18"><decl pos:start="27:13" pos:end="27:17"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">j</name></decl>;</decl_stmt>

            <for pos:start="29:13" pos:end="31:78">for <control pos:start="29:17" pos:end="29:53">(<init pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">j</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</init> <condition pos:start="29:25" pos:end="29:48"><expr pos:start="29:25" pos:end="29:47"><name pos:start="29:25" pos:end="29:25">j</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <name pos:start="29:29" pos:end="29:47"><name pos:start="29:29" pos:end="29:30">of</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:35">ctx</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:47">nb_streams</name></name></expr>;</condition> <incr pos:start="29:50" pos:end="29:52"><expr pos:start="29:50" pos:end="29:52"><name pos:start="29:50" pos:end="29:50">j</name><operator pos:start="29:51" pos:end="29:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:17" pos:end="31:78"><block_content pos:start="31:17" pos:end="31:78">

                <expr_stmt pos:start="31:17" pos:end="31:78"><expr pos:start="31:17" pos:end="31:77"><name pos:start="31:17" pos:end="31:49"><name pos:start="31:17" pos:end="31:30">output_streams</name><index pos:start="31:31" pos:end="31:49">[<expr pos:start="31:32" pos:end="31:48"><name pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:33">of</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:44">ost_index</name></name> <operator pos:start="31:46" pos:end="31:46">+</operator> <name pos:start="31:48" pos:end="31:48">j</name></expr>]</index></name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:73">is_past_recording_time</name> <operator pos:start="31:75" pos:end="31:75">=</operator> <literal type="number" pos:start="31:77" pos:end="31:77">1</literal></expr>;</expr_stmt></block_content></block></for>

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">1</literal></expr>;</return>

    </block_content>}</block></for>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
