<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9056.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">qemu_chr_parse_common</name><parameter_list pos:start="1:34" pos:end="1:73">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:42">QemuOpts</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">opts</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:63">ChardevCommon</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:72">backend</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:69">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">logfile</name> <init pos:start="5:25" pos:end="5:55">= <expr pos:start="5:27" pos:end="5:55"><call pos:start="5:27" pos:end="5:55"><name pos:start="5:27" pos:end="5:38">qemu_opt_get</name><argument_list pos:start="5:39" pos:end="5:55">(<argument pos:start="5:40" pos:end="5:43"><expr pos:start="5:40" pos:end="5:43"><name pos:start="5:40" pos:end="5:43">opts</name></expr></argument>, <argument pos:start="5:46" pos:end="5:54"><expr pos:start="5:46" pos:end="5:54"><literal type="string" pos:start="5:46" pos:end="5:54">"logfile"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:11">backend</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:24">has_logfile</name></name> <operator pos:start="9:26" pos:end="9:26">=</operator> <name pos:start="9:28" pos:end="9:34">logfile</name> <operator pos:start="9:36" pos:end="9:37">!=</operator> <name pos:start="9:39" pos:end="9:42">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:58"><expr pos:start="11:5" pos:end="11:57"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:11">backend</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:20">logfile</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <ternary pos:start="11:24" pos:end="11:57"><condition pos:start="11:24" pos:end="11:32"><expr pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:30">logfile</name></expr> ?</condition><then pos:start="11:34" pos:end="11:50"> <expr pos:start="11:34" pos:end="11:50"><call pos:start="11:34" pos:end="11:50"><name pos:start="11:34" pos:end="11:41">g_strdup</name><argument_list pos:start="11:42" pos:end="11:50">(<argument pos:start="11:43" pos:end="11:49"><expr pos:start="11:43" pos:end="11:49"><name pos:start="11:43" pos:end="11:49">logfile</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="11:52" pos:end="11:57">: <expr pos:start="11:54" pos:end="11:57"><name pos:start="11:54" pos:end="11:57">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:11">backend</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:26">has_logappend</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:33">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:69"><expr pos:start="17:5" pos:end="17:68"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:11">backend</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:22">logappend</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:68"><name pos:start="17:26" pos:end="17:42">qemu_opt_get_bool</name><argument_list pos:start="17:43" pos:end="17:68">(<argument pos:start="17:44" pos:end="17:47"><expr pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:47">opts</name></expr></argument>, <argument pos:start="17:50" pos:end="17:60"><expr pos:start="17:50" pos:end="17:60"><literal type="string" pos:start="17:50" pos:end="17:60">"logappend"</literal></expr></argument>, <argument pos:start="17:63" pos:end="17:67"><expr pos:start="17:63" pos:end="17:67"><name pos:start="17:63" pos:end="17:67">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
