<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25665.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_qcx</name><parameter_list pos:start="1:19" pos:end="1:75">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:41">Jpeg2000DecoderContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:51"><decl pos:start="1:47" pos:end="1:51"><type pos:start="1:47" pos:end="1:51"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:51">n</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:74"><decl pos:start="1:54" pos:end="1:74"><type pos:start="1:54" pos:end="1:74"><name pos:start="1:54" pos:end="1:71">Jpeg2000QuantStyle</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:74">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">x</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:31"><if pos:start="9:5" pos:end="11:31">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">buf_end</name></name> <operator pos:start="9:20" pos:end="9:20">-</operator> <name pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:27">buf</name></name> <operator pos:start="9:29" pos:end="9:29">&lt;</operator> <literal type="number" pos:start="9:31" pos:end="9:31">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:31"><block_content pos:start="11:9" pos:end="11:31">

        <return pos:start="11:9" pos:end="11:31">return <expr pos:start="11:16" pos:end="11:30"><call pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:22">AVERROR</name><argument_list pos:start="11:23" pos:end="11:30">(<argument pos:start="11:24" pos:end="11:29"><expr pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:5">x</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:27">bytestream_get_byte</name><argument_list pos:start="15:28" pos:end="15:36">(<argument pos:start="15:29" pos:end="15:35"><expr pos:start="15:29" pos:end="15:35"><operator pos:start="15:29" pos:end="15:29">&amp;</operator><name pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:30">s</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:35">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="15:39" pos:end="15:45">// Sqcd</comment>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">q</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">nguardbits</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:21">x</name> <operator pos:start="19:23" pos:end="19:24">&gt;&gt;</operator> <literal type="number" pos:start="19:26" pos:end="19:26">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:5">q</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:15">quantsty</name></name>   <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:21">x</name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <literal type="number" pos:start="21:25" pos:end="21:28">0x1f</literal></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="77:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:42">(<expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">q</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">quantsty</name></name> <operator pos:start="25:21" pos:end="25:22">==</operator> <name pos:start="25:24" pos:end="25:41">JPEG2000_QSTY_NONE</name></expr>)</condition> <block pos:start="25:44" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:59">

        <expr_stmt pos:start="27:9" pos:end="27:15"><expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:9">n</name> <operator pos:start="27:11" pos:end="27:12">-=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:35"><if pos:start="29:9" pos:end="31:35">if <condition pos:start="29:12" pos:end="29:48">(<expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">buf_end</name></name> <operator pos:start="29:24" pos:end="29:24">-</operator> <name pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">buf</name></name> <operator pos:start="29:33" pos:end="29:33">&lt;</operator> <name pos:start="29:35" pos:end="29:35">n</name> <operator pos:start="29:37" pos:end="29:38">||</operator> <literal type="number" pos:start="29:40" pos:end="29:41">32</literal><operator pos:start="29:42" pos:end="29:42">*</operator><literal type="number" pos:start="29:43" pos:end="29:43">3</literal> <operator pos:start="29:45" pos:end="29:45">&lt;</operator> <name pos:start="29:47" pos:end="29:47">n</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:35"><block_content pos:start="31:13" pos:end="31:35">

            <return pos:start="31:13" pos:end="31:35">return <expr pos:start="31:20" pos:end="31:34"><call pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <for pos:start="33:9" pos:end="35:59">for <control pos:start="33:13" pos:end="33:31">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:25">n</name></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:13" pos:end="35:59"><block_content pos:start="35:13" pos:end="35:59">

            <expr_stmt pos:start="35:13" pos:end="35:59"><expr pos:start="35:13" pos:end="35:58"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">q</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">expn</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">i</name></expr>]</index></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:53"><name pos:start="35:26" pos:end="35:44">bytestream_get_byte</name><argument_list pos:start="35:45" pos:end="35:53">(<argument pos:start="35:46" pos:end="35:52"><expr pos:start="35:46" pos:end="35:52"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:52"><name pos:start="35:47" pos:end="35:47">s</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:52">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:55" pos:end="35:56">&gt;&gt;</operator> <literal type="number" pos:start="35:58" pos:end="35:58">3</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="59:5">else if <condition pos:start="37:15" pos:end="37:47">(<expr pos:start="37:16" pos:end="37:46"><name pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:16">q</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:26">quantsty</name></name> <operator pos:start="37:28" pos:end="37:29">==</operator> <name pos:start="37:31" pos:end="37:46">JPEG2000_QSTY_SI</name></expr>)</condition> <block pos:start="37:49" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:9">

        <if_stmt pos:start="39:9" pos:end="41:35"><if pos:start="39:9" pos:end="41:35">if <condition pos:start="39:12" pos:end="39:36">(<expr pos:start="39:13" pos:end="39:35"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">buf_end</name></name> <operator pos:start="39:24" pos:end="39:24">-</operator> <name pos:start="39:26" pos:end="39:31"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:31">buf</name></name> <operator pos:start="39:33" pos:end="39:33">&lt;</operator> <literal type="number" pos:start="39:35" pos:end="39:35">2</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:35"><block_content pos:start="41:13" pos:end="41:35">

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:9">x</name>          <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:49"><name pos:start="43:22" pos:end="43:40">bytestream_get_be16</name><argument_list pos:start="43:41" pos:end="43:49">(<argument pos:start="43:42" pos:end="43:48"><expr pos:start="43:42" pos:end="43:48"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:48"><name pos:start="43:43" pos:end="43:43">s</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:48">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:9">q</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">expn</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:22">x</name> <operator pos:start="45:24" pos:end="45:25">&gt;&gt;</operator> <literal type="number" pos:start="45:27" pos:end="45:28">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:9">q</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:15">mant</name><index pos:start="47:16" pos:end="47:18">[<expr pos:start="47:17" pos:end="47:17"><literal type="number" pos:start="47:17" pos:end="47:17">0</literal></expr>]</index></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:22">x</name> <operator pos:start="47:24" pos:end="47:24">&amp;</operator> <literal type="number" pos:start="47:26" pos:end="47:30">0x7ff</literal></expr>;</expr_stmt>

        <for pos:start="49:9" pos:end="57:9">for <control pos:start="49:13" pos:end="49:36">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <literal type="number" pos:start="49:25" pos:end="49:26">32</literal> <operator pos:start="49:28" pos:end="49:28">*</operator> <literal type="number" pos:start="49:30" pos:end="49:30">3</literal></expr>;</condition> <incr pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:33">i</name><operator pos:start="49:34" pos:end="49:35">++</operator></expr></incr>)</control> <block pos:start="49:38" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:36">

            <decl_stmt pos:start="51:13" pos:end="51:61"><decl pos:start="51:13" pos:end="51:60"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:23">curexpn</name> <init pos:start="51:25" pos:end="51:60">= <expr pos:start="51:27" pos:end="51:60"><call pos:start="51:27" pos:end="51:60"><name pos:start="51:27" pos:end="51:31">FFMAX</name><argument_list pos:start="51:32" pos:end="51:60">(<argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr></argument>, <argument pos:start="51:36" pos:end="51:59"><expr pos:start="51:36" pos:end="51:59"><name pos:start="51:36" pos:end="51:45"><name pos:start="51:36" pos:end="51:36">q</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:42">expn</name><index pos:start="51:43" pos:end="51:45">[<expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">0</literal></expr>]</index></name> <operator pos:start="51:47" pos:end="51:47">-</operator> <operator pos:start="51:49" pos:end="51:49">(</operator><name pos:start="51:50" pos:end="51:50">i</name> <operator pos:start="51:52" pos:end="51:52">-</operator> <literal type="number" pos:start="51:54" pos:end="51:54">1</literal><operator pos:start="51:55" pos:end="51:55">)</operator> <operator pos:start="51:57" pos:end="51:57">/</operator> <literal type="number" pos:start="51:59" pos:end="51:59">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:13">q</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:19">expn</name><index pos:start="53:20" pos:end="53:22">[<expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">i</name></expr>]</index></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:32">curexpn</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:13">q</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:19">mant</name><index pos:start="55:20" pos:end="55:22">[<expr pos:start="55:21" pos:end="55:21"><name pos:start="55:21" pos:end="55:21">i</name></expr>]</index></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:35"><name pos:start="55:26" pos:end="55:26">q</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:32">mant</name><index pos:start="55:33" pos:end="55:35">[<expr pos:start="55:34" pos:end="55:34"><literal type="number" pos:start="55:34" pos:end="55:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="77:5">else <block pos:start="59:12" pos:end="77:5">{<block_content pos:start="61:9" pos:end="75:9">

        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">n</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:14">n</name> <operator pos:start="61:16" pos:end="61:16">-</operator> <literal type="number" pos:start="61:18" pos:end="61:18">3</literal><operator pos:start="61:19" pos:end="61:19">)</operator> <operator pos:start="61:21" pos:end="61:22">&gt;&gt;</operator> <literal type="number" pos:start="61:24" pos:end="61:24">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:35"><if pos:start="63:9" pos:end="65:35">if <condition pos:start="63:12" pos:end="63:52">(<expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">buf_end</name></name> <operator pos:start="63:24" pos:end="63:24">-</operator> <name pos:start="63:26" pos:end="63:31"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:31">buf</name></name> <operator pos:start="63:33" pos:end="63:33">&lt;</operator> <literal type="number" pos:start="63:35" pos:end="63:35">2</literal> <operator pos:start="63:37" pos:end="63:37">*</operator> <name pos:start="63:39" pos:end="63:39">n</name> <operator pos:start="63:41" pos:end="63:42">||</operator> <literal type="number" pos:start="63:44" pos:end="63:45">32</literal><operator pos:start="63:46" pos:end="63:46">*</operator><literal type="number" pos:start="63:47" pos:end="63:47">3</literal> <operator pos:start="63:49" pos:end="63:49">&lt;</operator> <name pos:start="63:51" pos:end="63:51">n</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:35"><block_content pos:start="65:13" pos:end="65:35">

            <return pos:start="65:13" pos:end="65:35">return <expr pos:start="65:20" pos:end="65:34"><call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:26">AVERROR</name><argument_list pos:start="65:27" pos:end="65:34">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <for pos:start="67:9" pos:end="75:9">for <control pos:start="67:13" pos:end="67:31">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:26"><expr pos:start="67:21" pos:end="67:25"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:25">n</name></expr>;</condition> <incr pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:28">i</name><operator pos:start="67:29" pos:end="67:30">++</operator></expr></incr>)</control> <block pos:start="67:33" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:35">

            <expr_stmt pos:start="69:13" pos:end="69:54"><expr pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:13">x</name>          <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:53"><name pos:start="69:26" pos:end="69:44">bytestream_get_be16</name><argument_list pos:start="69:45" pos:end="69:53">(<argument pos:start="69:46" pos:end="69:52"><expr pos:start="69:46" pos:end="69:52"><operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:52"><name pos:start="69:47" pos:end="69:47">s</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:52">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:33"><expr pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:13">q</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:19">expn</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">i</name></expr>]</index></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:26">x</name> <operator pos:start="71:28" pos:end="71:29">&gt;&gt;</operator> <literal type="number" pos:start="71:31" pos:end="71:32">11</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:13">q</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:19">mant</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">i</name></expr>]</index></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:26">x</name> <operator pos:start="73:28" pos:end="73:28">&amp;</operator> <literal type="number" pos:start="73:30" pos:end="73:34">0x7ff</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
