<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15810.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">ac97_load</name> <parameter_list pos:start="1:22" pos:end="1:64">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:30">QEMUFile</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">f</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:63">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:30"><name pos:start="9:13" pos:end="9:18">active</name><index pos:start="9:19" pos:end="9:30">[<expr pos:start="9:20" pos:end="9:29"><name pos:start="9:20" pos:end="9:29">LAST_INDEX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">AC97LinkState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:29">= <expr pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:29">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:23"><if pos:start="15:5" pos:end="17:23">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:18">version_id</name> <operator pos:start="15:20" pos:end="15:21">!=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">2</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:23"><block_content pos:start="17:9" pos:end="17:23">

        <return pos:start="17:9" pos:end="17:23">return <expr pos:start="17:16" pos:end="17:22"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:41"><name pos:start="21:11" pos:end="21:25">pci_device_load</name> <argument_list pos:start="21:27" pos:end="21:41">(<argument pos:start="21:28" pos:end="21:37"><expr pos:start="21:28" pos:end="21:37"><name pos:start="21:28" pos:end="21:37"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:37">pci_dev</name></name></expr></argument>, <argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:19"><if pos:start="23:5" pos:end="25:19">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">ret</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><call pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:18">qemu_get_be32s</name> <argument_list pos:start="29:20" pos:end="29:36">(<argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><name pos:start="29:21" pos:end="29:21">f</name></expr></argument>, <argument pos:start="29:24" pos:end="29:35"><expr pos:start="29:24" pos:end="29:35"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:35"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:35">glob_cnt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:18">qemu_get_be32s</name> <argument_list pos:start="31:20" pos:end="31:36">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">f</name></expr></argument>, <argument pos:start="31:24" pos:end="31:35"><expr pos:start="31:24" pos:end="31:35"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:35">glob_sta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><call pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:18">qemu_get_be32s</name> <argument_list pos:start="33:20" pos:end="33:31">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">f</name></expr></argument>, <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">cas</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="61:5">for <control pos:start="37:9" pos:end="37:49">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:44"><expr pos:start="37:17" pos:end="37:43"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <call pos:start="37:21" pos:end="37:43"><name pos:start="37:21" pos:end="37:30">ARRAY_SIZE</name> <argument_list pos:start="37:32" pos:end="37:43">(<argument pos:start="37:33" pos:end="37:42"><expr pos:start="37:33" pos:end="37:42"><name pos:start="37:33" pos:end="37:42"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:42">bm_regs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="37:46" pos:end="37:48"><expr pos:start="37:46" pos:end="37:48"><operator pos:start="37:46" pos:end="37:47">++</operator><name pos:start="37:48" pos:end="37:48">i</name></expr></incr>)</control> <block pos:start="37:51" pos:end="61:5">{<block_content pos:start="39:9" pos:end="59:43">

        <decl_stmt pos:start="39:9" pos:end="39:46"><decl pos:start="39:9" pos:end="39:45"><type pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:25">AC97BusMasterRegs</name> <modifier pos:start="39:27" pos:end="39:27">*</modifier></type><name pos:start="39:28" pos:end="39:28">r</name> <init pos:start="39:30" pos:end="39:45">= <expr pos:start="39:32" pos:end="39:45"><operator pos:start="39:32" pos:end="39:32">&amp;</operator><name pos:start="39:33" pos:end="39:45"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:42">bm_regs</name><index pos:start="39:43" pos:end="39:45">[<expr pos:start="39:44" pos:end="39:44"><name pos:start="39:44" pos:end="39:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><call pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:22">qemu_get_be32s</name> <argument_list pos:start="41:24" pos:end="41:37">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">f</name></expr></argument>, <argument pos:start="41:28" pos:end="41:36"><expr pos:start="41:28" pos:end="41:36"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:36"><name pos:start="41:29" pos:end="41:29">r</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:36">bdbar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:19">qemu_get_8s</name> <argument_list pos:start="43:21" pos:end="43:32">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">f</name></expr></argument>, <argument pos:start="43:25" pos:end="43:31"><expr pos:start="43:25" pos:end="43:31"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:31"><name pos:start="43:26" pos:end="43:26">r</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:31">civ</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:19">qemu_get_8s</name> <argument_list pos:start="45:21" pos:end="45:32">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">f</name></expr></argument>, <argument pos:start="45:25" pos:end="45:31"><expr pos:start="45:25" pos:end="45:31"><operator pos:start="45:25" pos:end="45:25">&amp;</operator><name pos:start="45:26" pos:end="45:31"><name pos:start="45:26" pos:end="45:26">r</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:31">lvi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><call pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:22">qemu_get_be16s</name> <argument_list pos:start="47:24" pos:end="47:34">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">f</name></expr></argument>, <argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:33"><name pos:start="47:29" pos:end="47:29">r</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:33">sr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><call pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:22">qemu_get_be16s</name> <argument_list pos:start="49:24" pos:end="49:36">(<argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">f</name></expr></argument>, <argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:35"><name pos:start="49:29" pos:end="49:29">r</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:35">picb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><call pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:19">qemu_get_8s</name> <argument_list pos:start="51:21" pos:end="51:32">(<argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">f</name></expr></argument>, <argument pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:31"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:26">r</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:31">piv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><call pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:19">qemu_get_8s</name> <argument_list pos:start="53:21" pos:end="53:31">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">f</name></expr></argument>, <argument pos:start="53:25" pos:end="53:30"><expr pos:start="53:25" pos:end="53:30"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:30"><name pos:start="53:26" pos:end="53:26">r</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:30">cr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><call pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:22">qemu_get_be32s</name> <argument_list pos:start="55:24" pos:end="55:40">(<argument pos:start="55:25" pos:end="55:25"><expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">f</name></expr></argument>, <argument pos:start="55:28" pos:end="55:39"><expr pos:start="55:28" pos:end="55:39"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:29">r</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:39">bd_valid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><call pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:22">qemu_get_be32s</name> <argument_list pos:start="57:24" pos:end="57:39">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">f</name></expr></argument>, <argument pos:start="57:28" pos:end="57:38"><expr pos:start="57:28" pos:end="57:38"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:38"><name pos:start="57:29" pos:end="57:29">r</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:33">bd</name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:38">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><call pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:22">qemu_get_be32s</name> <argument_list pos:start="59:24" pos:end="59:42">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">f</name></expr></argument>, <argument pos:start="59:28" pos:end="59:41"><expr pos:start="59:28" pos:end="59:41"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:41"><name pos:start="59:29" pos:end="59:29">r</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:33">bd</name><operator pos:start="59:34" pos:end="59:34">.</operator><name pos:start="59:35" pos:end="59:41">ctl_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="63:5" pos:end="63:63"><expr pos:start="63:5" pos:end="63:62"><call pos:start="63:5" pos:end="63:62"><name pos:start="63:5" pos:end="63:19">qemu_get_buffer</name> <argument_list pos:start="63:21" pos:end="63:62">(<argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">f</name></expr></argument>, <argument pos:start="63:25" pos:end="63:37"><expr pos:start="63:25" pos:end="63:37"><name pos:start="63:25" pos:end="63:37"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:37">mixer_data</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:61"><expr pos:start="63:40" pos:end="63:61"><sizeof pos:start="63:40" pos:end="63:61">sizeof <argument_list pos:start="63:47" pos:end="63:61">(<argument pos:start="63:48" pos:end="63:60"><expr pos:start="63:48" pos:end="63:60"><name pos:start="63:48" pos:end="63:60"><name pos:start="63:48" pos:end="63:48">s</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:60">mixer_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="70:0"><expr pos:start="65:5" pos:end="65:48"><call pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:19">qemu_get_buffer</name> <argument_list pos:start="65:21" pos:end="65:48">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">f</name></expr></argument>, <argument pos:start="65:25" pos:end="65:30"><expr pos:start="65:25" pos:end="65:30"><name pos:start="65:25" pos:end="65:30">active</name></expr></argument>, <argument pos:start="65:33" pos:end="65:47"><expr pos:start="65:33" pos:end="65:47"><sizeof pos:start="65:33" pos:end="65:47">sizeof <argument_list pos:start="65:40" pos:end="65:47">(<argument pos:start="65:41" pos:end="65:46"><expr pos:start="65:41" pos:end="65:46"><name pos:start="65:41" pos:end="65:46">active</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="69:1" pos:end="69:16">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:16">USE_MIXER</name></cpp:ifdef>

    <expr_stmt pos:start="71:5" pos:end="74:0"><expr pos:start="71:5" pos:end="71:57"><call pos:start="71:5" pos:end="71:57"><name pos:start="71:5" pos:end="71:17">record_select</name> <argument_list pos:start="71:19" pos:end="71:57">(<argument pos:start="71:20" pos:end="71:20"><expr pos:start="71:20" pos:end="71:20"><name pos:start="71:20" pos:end="71:20">s</name></expr></argument>, <argument pos:start="71:23" pos:end="71:56"><expr pos:start="71:23" pos:end="71:56"><call pos:start="71:23" pos:end="71:56"><name pos:start="71:23" pos:end="71:32">mixer_load</name> <argument_list pos:start="71:34" pos:end="71:56">(<argument pos:start="71:35" pos:end="71:35"><expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">s</name></expr></argument>, <argument pos:start="71:38" pos:end="71:55"><expr pos:start="71:38" pos:end="71:55"><name pos:start="71:38" pos:end="71:55">AC97_Record_Select</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define pos:start="73:1" pos:end="73:56">#<cpp:directive pos:start="73:2" pos:end="73:7">define</cpp:directive> <cpp:macro pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:10">V_</name><parameter_list pos:start="73:11" pos:end="73:16">(<parameter pos:start="73:12" pos:end="73:12"><type pos:start="73:12" pos:end="73:12"><name pos:start="73:12" pos:end="73:12">a</name></type></parameter>, <parameter pos:start="73:15" pos:end="73:15"><type pos:start="73:15" pos:end="73:15"><name pos:start="73:15" pos:end="73:15">b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="73:18" pos:end="73:56">set_volume (s, a, b, mixer_load (s, a))</cpp:value></cpp:define>

    <expr_stmt pos:start="75:5" pos:end="75:51"><expr pos:start="75:5" pos:end="75:50"><call pos:start="75:5" pos:end="75:50"><name pos:start="75:5" pos:end="75:6">V_</name> <argument_list pos:start="75:8" pos:end="75:50">(<argument pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:31">AC97_Master_Volume_Mute</name></expr></argument>, <argument pos:start="75:34" pos:end="75:49"><expr pos:start="75:34" pos:end="75:49"><name pos:start="75:34" pos:end="75:49">AUD_MIXER_VOLUME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:49"><expr pos:start="77:5" pos:end="77:48"><call pos:start="77:5" pos:end="77:48"><name pos:start="77:5" pos:end="77:6">V_</name> <argument_list pos:start="77:8" pos:end="77:48">(<argument pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:32">AC97_PCM_Out_Volume_Mute</name></expr></argument>, <argument pos:start="77:35" pos:end="77:47"><expr pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:47">AUD_MIXER_PCM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="84:0"><expr pos:start="79:5" pos:end="79:52"><call pos:start="79:5" pos:end="79:52"><name pos:start="79:5" pos:end="79:6">V_</name> <argument_list pos:start="79:8" pos:end="79:52">(<argument pos:start="79:9" pos:end="79:32"><expr pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:32">AC97_Line_In_Volume_Mute</name></expr></argument>, <argument pos:start="79:35" pos:end="79:51"><expr pos:start="79:35" pos:end="79:51"><name pos:start="79:35" pos:end="79:51">AUD_MIXER_LINE_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="81:1" pos:end="81:9">#<cpp:directive pos:start="81:2" pos:end="81:6">undef</cpp:directive> <name pos:start="81:8" pos:end="81:9">V_</name></cpp:undef>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><call pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:16">reset_voices</name> <argument_list pos:start="85:18" pos:end="85:28">(<argument pos:start="85:19" pos:end="85:19"><expr pos:start="85:19" pos:end="85:19"><name pos:start="85:19" pos:end="85:19">s</name></expr></argument>, <argument pos:start="85:22" pos:end="85:27"><expr pos:start="85:22" pos:end="85:27"><name pos:start="85:22" pos:end="85:27">active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:20"><expr pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:15"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:15">bup_flag</name></name> <operator pos:start="89:17" pos:end="89:17">=</operator> <literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:21"><expr pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:16">last_samp</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
