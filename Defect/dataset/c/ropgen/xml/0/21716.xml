<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21716.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">handle_hint</name><parameter_list pos:start="1:24" pos:end="3:77">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:54">insn</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:40"><decl pos:start="3:25" pos:end="3:40"><type pos:start="3:25" pos:end="3:40"><name pos:start="3:25" pos:end="3:32">unsigned</name> <name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:40">op1</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:58"><decl pos:start="3:43" pos:end="3:58"><type pos:start="3:43" pos:end="3:58"><name pos:start="3:43" pos:end="3:50">unsigned</name> <name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:58">op2</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:76"><decl pos:start="3:61" pos:end="3:76"><type pos:start="3:61" pos:end="3:76"><name pos:start="3:61" pos:end="3:68">unsigned</name> <name pos:start="3:70" pos:end="3:72">int</name></type> <name pos:start="3:74" pos:end="3:76">crm</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:5">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:25">selector</name> <init pos:start="7:27" pos:end="7:42">= <expr pos:start="7:29" pos:end="7:42"><name pos:start="7:29" pos:end="7:31">crm</name> <operator pos:start="7:33" pos:end="7:34">&lt;&lt;</operator> <literal type="number" pos:start="7:36" pos:end="7:36">3</literal> <operator pos:start="7:38" pos:end="7:38">|</operator> <name pos:start="7:40" pos:end="7:42">op2</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">op1</name> <operator pos:start="11:13" pos:end="11:14">!=</operator> <literal type="number" pos:start="11:16" pos:end="11:16">3</literal></expr>)</condition> <block pos:start="11:19" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:28">unallocated_encoding</name><argument_list pos:start="13:29" pos:end="13:31">(<argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="67:5">switch <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:20">selector</name></expr>)</condition> <block pos:start="21:23" pos:end="67:5">{<block_content pos:start="23:5" pos:end="65:15">

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">0</literal></expr>:</case> <comment type="block" pos:start="23:13" pos:end="23:21">/* NOP */</comment>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">3</literal></expr>:</case> <comment type="block" pos:start="27:13" pos:end="27:21">/* WFI */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">base</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:22">is_jmp</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:34">DISAS_WFI</name></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">1</literal></expr>:</case> <comment type="block" pos:start="33:13" pos:end="33:23">/* YIELD */</comment>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:26">parallel_cpus</name></expr>)</condition> <block pos:start="35:29" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:41">

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:19">base</name><operator pos:start="37:20" pos:end="37:20">.</operator><name pos:start="37:21" pos:end="37:26">is_jmp</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:40">DISAS_YIELD</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="41:9" pos:end="41:15">return;</return>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">2</literal></expr>:</case> <comment type="block" pos:start="43:13" pos:end="43:21">/* WFE */</comment>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:27">(<expr pos:start="45:13" pos:end="45:26"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:26">parallel_cpus</name></expr>)</condition> <block pos:start="45:29" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:39">

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:19">base</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:26">is_jmp</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:38">DISAS_WFE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">4</literal></expr>:</case> <comment type="block" pos:start="53:13" pos:end="53:21">/* SEV */</comment>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">5</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:22">/* SEVL */</comment>

        <comment type="block" pos:start="57:9" pos:end="57:50">/* we treat all as NOP at least for now */</comment>

        <return pos:start="59:9" pos:end="59:15">return;</return>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <comment type="block" pos:start="63:9" pos:end="63:49">/* default specified as NOP equivalent */</comment>

        <return pos:start="65:9" pos:end="65:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
