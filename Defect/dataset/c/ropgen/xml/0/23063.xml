<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23063.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:23">ppc4xx_pci_init</name><parameter_list pos:start="1:24" pos:end="9:53">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:47">qemu_irq</name></type> <name pos:start="1:49" pos:end="1:59"><name pos:start="1:49" pos:end="1:56">pci_irqs</name><index pos:start="1:57" pos:end="1:59">[<expr pos:start="1:58" pos:end="1:58"><literal type="number" pos:start="1:58" pos:end="1:58">4</literal></expr>]</index></name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:55"><decl pos:start="3:25" pos:end="3:55"><type pos:start="3:25" pos:end="3:55"><name pos:start="3:25" pos:end="3:42">target_phys_addr_t</name></type> <name pos:start="3:44" pos:end="3:55">config_space</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:50"><decl pos:start="5:25" pos:end="5:50"><type pos:start="5:25" pos:end="5:50"><name pos:start="5:25" pos:end="5:42">target_phys_addr_t</name></type> <name pos:start="5:44" pos:end="5:50">int_ack</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:56"><decl pos:start="7:25" pos:end="7:56"><type pos:start="7:25" pos:end="7:56"><name pos:start="7:25" pos:end="7:42">target_phys_addr_t</name></type> <name pos:start="7:44" pos:end="7:56">special_cycle</name></decl></parameter>,

                        <parameter pos:start="9:25" pos:end="9:52"><decl pos:start="9:25" pos:end="9:52"><type pos:start="9:25" pos:end="9:52"><name pos:start="9:25" pos:end="9:42">target_phys_addr_t</name></type> <name pos:start="9:44" pos:end="9:52">registers</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="119:1">{<block_content pos:start="13:5" pos:end="117:16">

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">PPC4xxPCIState</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:30">controller</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:14"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:14">int</name></type> <name pos:start="17:16" pos:end="17:28">ppc4xx_pci_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:14">controller</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:53"><name pos:start="23:18" pos:end="23:29">qemu_mallocz</name><argument_list pos:start="23:30" pos:end="23:53">(<argument pos:start="23:31" pos:end="23:52"><expr pos:start="23:31" pos:end="23:52"><sizeof pos:start="23:31" pos:end="23:52">sizeof<argument_list pos:start="23:37" pos:end="23:52">(<argument pos:start="23:38" pos:end="23:51"><expr pos:start="23:38" pos:end="23:51"><name pos:start="23:38" pos:end="23:51">PPC4xxPCIState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="33:65"><expr pos:start="27:5" pos:end="33:64"><name pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:14">controller</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">pci_state</name><operator pos:start="27:26" pos:end="27:26">.</operator><name pos:start="27:27" pos:end="27:29">bus</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <call pos:start="27:33" pos:end="33:64"><name pos:start="27:33" pos:end="27:48">pci_register_bus</name><argument_list pos:start="27:49" pos:end="33:64">(<argument pos:start="27:50" pos:end="27:53"><expr pos:start="27:50" pos:end="27:53"><name pos:start="27:50" pos:end="27:53">NULL</name></expr></argument>, <argument pos:start="27:56" pos:end="27:60"><expr pos:start="27:56" pos:end="27:60"><literal type="string" pos:start="27:56" pos:end="27:60">"pci"</literal></expr></argument>,

                                                 <argument pos:start="29:50" pos:end="29:67"><expr pos:start="29:50" pos:end="29:67"><name pos:start="29:50" pos:end="29:67">ppc4xx_pci_set_irq</name></expr></argument>,

                                                 <argument pos:start="31:50" pos:end="31:67"><expr pos:start="31:50" pos:end="31:67"><name pos:start="31:50" pos:end="31:67">ppc4xx_pci_map_irq</name></expr></argument>,

                                                 <argument pos:start="33:50" pos:end="33:57"><expr pos:start="33:50" pos:end="33:57"><name pos:start="33:50" pos:end="33:57">pci_irqs</name></expr></argument>, <argument pos:start="33:60" pos:end="33:60"><expr pos:start="33:60" pos:end="33:60"><literal type="number" pos:start="33:60" pos:end="33:60">0</literal></expr></argument>, <argument pos:start="33:63" pos:end="33:63"><expr pos:start="33:63" pos:end="33:63"><literal type="number" pos:start="33:63" pos:end="33:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="41:61"><expr pos:start="37:5" pos:end="41:60"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:14">controller</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:23">pci_dev</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="41:60"><name pos:start="37:27" pos:end="37:45">pci_register_device</name><argument_list pos:start="37:46" pos:end="41:60">(<argument pos:start="37:47" pos:end="37:71"><expr pos:start="37:47" pos:end="37:71"><name pos:start="37:47" pos:end="37:71"><name pos:start="37:47" pos:end="37:56">controller</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:67">pci_state</name><operator pos:start="37:68" pos:end="37:68">.</operator><name pos:start="37:69" pos:end="37:71">bus</name></name></expr></argument>,

                                              <argument pos:start="39:47" pos:end="39:59"><expr pos:start="39:47" pos:end="39:59"><literal type="string" pos:start="39:47" pos:end="39:59">"host bridge"</literal></expr></argument>, <argument pos:start="39:62" pos:end="39:78"><expr pos:start="39:62" pos:end="39:78"><sizeof pos:start="39:62" pos:end="39:78">sizeof<argument_list pos:start="39:68" pos:end="39:78">(<argument pos:start="39:69" pos:end="39:77"><expr pos:start="39:69" pos:end="39:77"><name pos:start="39:69" pos:end="39:77">PCIDevice</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                              <argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr></argument>, <argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><name pos:start="41:50" pos:end="41:53">NULL</name></expr></argument>, <argument pos:start="41:56" pos:end="41:59"><expr pos:start="41:56" pos:end="41:59"><name pos:start="41:56" pos:end="41:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:12">pci_conf</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:42"><name pos:start="43:16" pos:end="43:25">controller</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:34">pci_dev</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:42">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><call pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:28">pci_config_set_vendor_id</name><argument_list pos:start="45:29" pos:end="45:57">(<argument pos:start="45:30" pos:end="45:37"><expr pos:start="45:30" pos:end="45:37"><name pos:start="45:30" pos:end="45:37">pci_conf</name></expr></argument>, <argument pos:start="45:40" pos:end="45:56"><expr pos:start="45:40" pos:end="45:56"><name pos:start="45:40" pos:end="45:56">PCI_VENDOR_ID_IBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:64"><expr pos:start="47:5" pos:end="47:63"><call pos:start="47:5" pos:end="47:63"><name pos:start="47:5" pos:end="47:28">pci_config_set_device_id</name><argument_list pos:start="47:29" pos:end="47:63">(<argument pos:start="47:30" pos:end="47:37"><expr pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:37">pci_conf</name></expr></argument>, <argument pos:start="47:40" pos:end="47:62"><expr pos:start="47:40" pos:end="47:62"><name pos:start="47:40" pos:end="47:62">PCI_DEVICE_ID_IBM_440GX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><call pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:24">pci_config_set_class</name><argument_list pos:start="49:25" pos:end="49:58">(<argument pos:start="49:26" pos:end="49:33"><expr pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:33">pci_conf</name></expr></argument>, <argument pos:start="49:36" pos:end="49:57"><expr pos:start="49:36" pos:end="49:57"><name pos:start="49:36" pos:end="49:57">PCI_CLASS_BRIDGE_OTHER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:17">/* CFGADDR */</comment>

    <expr_stmt pos:start="55:5" pos:end="57:69"><expr pos:start="55:5" pos:end="57:68"><name pos:start="55:5" pos:end="55:9">index</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="57:68"><name pos:start="55:13" pos:end="55:34">cpu_register_io_memory</name><argument_list pos:start="55:35" pos:end="57:68">(<argument pos:start="55:36" pos:end="55:54"><expr pos:start="55:36" pos:end="55:54"><name pos:start="55:36" pos:end="55:54">pci4xx_cfgaddr_read</name></expr></argument>,

                                   <argument pos:start="57:36" pos:end="57:55"><expr pos:start="57:36" pos:end="57:55"><name pos:start="57:36" pos:end="57:55">pci4xx_cfgaddr_write</name></expr></argument>, <argument pos:start="57:58" pos:end="57:67"><expr pos:start="57:58" pos:end="57:67"><name pos:start="57:58" pos:end="57:67">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:18"><if pos:start="59:5" pos:end="61:18">if <condition pos:start="59:8" pos:end="59:18">(<expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:13">index</name> <operator pos:start="59:15" pos:end="59:15">&lt;</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:18"><block_content pos:start="61:9" pos:end="61:18">

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">free</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:73"><expr pos:start="63:5" pos:end="63:72"><call pos:start="63:5" pos:end="63:72"><name pos:start="63:5" pos:end="63:32">cpu_register_physical_memory</name><argument_list pos:start="63:33" pos:end="63:72">(<argument pos:start="63:34" pos:end="63:61"><expr pos:start="63:34" pos:end="63:61"><name pos:start="63:34" pos:end="63:45">config_space</name> <operator pos:start="63:47" pos:end="63:47">+</operator> <name pos:start="63:49" pos:end="63:61">PCIC0_CFGADDR</name></expr></argument>, <argument pos:start="63:64" pos:end="63:64"><expr pos:start="63:64" pos:end="63:64"><literal type="number" pos:start="63:64" pos:end="63:64">4</literal></expr></argument>, <argument pos:start="63:67" pos:end="63:71"><expr pos:start="63:67" pos:end="63:71"><name pos:start="63:67" pos:end="63:71">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:17">/* CFGDATA */</comment>

    <expr_stmt pos:start="69:5" pos:end="73:59"><expr pos:start="69:5" pos:end="73:58"><name pos:start="69:5" pos:end="69:9">index</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <call pos:start="69:13" pos:end="73:58"><name pos:start="69:13" pos:end="69:34">cpu_register_io_memory</name><argument_list pos:start="69:35" pos:end="73:58">(<argument pos:start="69:36" pos:end="69:54"><expr pos:start="69:36" pos:end="69:54"><name pos:start="69:36" pos:end="69:54">pci4xx_cfgdata_read</name></expr></argument>,

                                   <argument pos:start="71:36" pos:end="71:55"><expr pos:start="71:36" pos:end="71:55"><name pos:start="71:36" pos:end="71:55">pci4xx_cfgdata_write</name></expr></argument>,

                                   <argument pos:start="73:36" pos:end="73:57"><expr pos:start="73:36" pos:end="73:57"><operator pos:start="73:36" pos:end="73:36">&amp;</operator><name pos:start="73:37" pos:end="73:57"><name pos:start="73:37" pos:end="73:46">controller</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:57">pci_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:18">(<expr pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:13">index</name> <operator pos:start="75:15" pos:end="75:15">&lt;</operator> <literal type="number" pos:start="75:17" pos:end="75:17">0</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">free</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:73"><expr pos:start="79:5" pos:end="79:72"><call pos:start="79:5" pos:end="79:72"><name pos:start="79:5" pos:end="79:32">cpu_register_physical_memory</name><argument_list pos:start="79:33" pos:end="79:72">(<argument pos:start="79:34" pos:end="79:61"><expr pos:start="79:34" pos:end="79:61"><name pos:start="79:34" pos:end="79:45">config_space</name> <operator pos:start="79:47" pos:end="79:47">+</operator> <name pos:start="79:49" pos:end="79:61">PCIC0_CFGDATA</name></expr></argument>, <argument pos:start="79:64" pos:end="79:64"><expr pos:start="79:64" pos:end="79:64"><literal type="number" pos:start="79:64" pos:end="79:64">4</literal></expr></argument>, <argument pos:start="79:67" pos:end="79:71"><expr pos:start="79:67" pos:end="79:71"><name pos:start="79:67" pos:end="79:71">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:28">/* Internal registers */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:76"><expr pos:start="85:5" pos:end="85:75"><name pos:start="85:5" pos:end="85:9">index</name> <operator pos:start="85:11" pos:end="85:11">=</operator> <call pos:start="85:13" pos:end="85:75"><name pos:start="85:13" pos:end="85:34">cpu_register_io_memory</name><argument_list pos:start="85:35" pos:end="85:75">(<argument pos:start="85:36" pos:end="85:47"><expr pos:start="85:36" pos:end="85:47"><name pos:start="85:36" pos:end="85:47">pci_reg_read</name></expr></argument>, <argument pos:start="85:50" pos:end="85:62"><expr pos:start="85:50" pos:end="85:62"><name pos:start="85:50" pos:end="85:62">pci_reg_write</name></expr></argument>, <argument pos:start="85:65" pos:end="85:74"><expr pos:start="85:65" pos:end="85:74"><name pos:start="85:65" pos:end="85:74">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="89:18"><if pos:start="87:5" pos:end="89:18">if <condition pos:start="87:8" pos:end="87:18">(<expr pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:13">index</name> <operator pos:start="87:15" pos:end="87:15">&lt;</operator> <literal type="number" pos:start="87:17" pos:end="87:17">0</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:18"><block_content pos:start="89:9" pos:end="89:18">

        <goto pos:start="89:9" pos:end="89:18">goto <name pos:start="89:14" pos:end="89:17">free</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:65"><expr pos:start="91:5" pos:end="91:64"><call pos:start="91:5" pos:end="91:64"><name pos:start="91:5" pos:end="91:32">cpu_register_physical_memory</name><argument_list pos:start="91:33" pos:end="91:64">(<argument pos:start="91:34" pos:end="91:42"><expr pos:start="91:34" pos:end="91:42"><name pos:start="91:34" pos:end="91:42">registers</name></expr></argument>, <argument pos:start="91:45" pos:end="91:56"><expr pos:start="91:45" pos:end="91:56"><name pos:start="91:45" pos:end="91:56">PCI_REG_SIZE</name></expr></argument>, <argument pos:start="91:59" pos:end="91:63"><expr pos:start="91:59" pos:end="91:63"><name pos:start="91:59" pos:end="91:63">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:54"><expr pos:start="95:5" pos:end="95:53"><call pos:start="95:5" pos:end="95:53"><name pos:start="95:5" pos:end="95:23">qemu_register_reset</name><argument_list pos:start="95:24" pos:end="95:53">(<argument pos:start="95:25" pos:end="95:40"><expr pos:start="95:25" pos:end="95:40"><name pos:start="95:25" pos:end="95:40">ppc4xx_pci_reset</name></expr></argument>, <argument pos:start="95:43" pos:end="95:52"><expr pos:start="95:43" pos:end="95:52"><name pos:start="95:43" pos:end="95:52">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:40">/* XXX load/save code not tested. */</comment>

    <expr_stmt pos:start="101:5" pos:end="103:66"><expr pos:start="101:5" pos:end="103:65"><call pos:start="101:5" pos:end="103:65"><name pos:start="101:5" pos:end="101:19">register_savevm</name><argument_list pos:start="101:20" pos:end="103:65">(<argument pos:start="101:21" pos:end="101:32"><expr pos:start="101:21" pos:end="101:32"><literal type="string" pos:start="101:21" pos:end="101:32">"ppc4xx_pci"</literal></expr></argument>, <argument pos:start="101:35" pos:end="101:49"><expr pos:start="101:35" pos:end="101:49"><name pos:start="101:35" pos:end="101:47">ppc4xx_pci_id</name><operator pos:start="101:48" pos:end="101:49">++</operator></expr></argument>, <argument pos:start="101:52" pos:end="101:52"><expr pos:start="101:52" pos:end="101:52"><literal type="number" pos:start="101:52" pos:end="101:52">1</literal></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:35"><expr pos:start="103:21" pos:end="103:35"><name pos:start="103:21" pos:end="103:35">ppc4xx_pci_save</name></expr></argument>, <argument pos:start="103:38" pos:end="103:52"><expr pos:start="103:38" pos:end="103:52"><name pos:start="103:38" pos:end="103:52">ppc4xx_pci_load</name></expr></argument>, <argument pos:start="103:55" pos:end="103:64"><expr pos:start="103:55" pos:end="103:64"><name pos:start="103:55" pos:end="103:64">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="107:5" pos:end="107:37">return <expr pos:start="107:12" pos:end="107:36"><name pos:start="107:12" pos:end="107:36"><name pos:start="107:12" pos:end="107:21">controller</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:32">pci_state</name><operator pos:start="107:33" pos:end="107:33">.</operator><name pos:start="107:34" pos:end="107:36">bus</name></name></expr>;</return>



<label pos:start="111:1" pos:end="111:5"><name pos:start="111:1" pos:end="111:4">free</name>:</label>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><call pos:start="113:5" pos:end="113:34"><name pos:start="113:5" pos:end="113:10">printf</name><argument_list pos:start="113:11" pos:end="113:34">(<argument pos:start="113:12" pos:end="113:23"><expr pos:start="113:12" pos:end="113:23"><literal type="string" pos:start="113:12" pos:end="113:23">"%s error\n"</literal></expr></argument>, <argument pos:start="113:26" pos:end="113:33"><expr pos:start="113:26" pos:end="113:33"><name pos:start="113:26" pos:end="113:33">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:26"><expr pos:start="115:5" pos:end="115:25"><call pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:13">qemu_free</name><argument_list pos:start="115:14" pos:end="115:25">(<argument pos:start="115:15" pos:end="115:24"><expr pos:start="115:15" pos:end="115:24"><name pos:start="115:15" pos:end="115:24">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:16">return <expr pos:start="117:12" pos:end="117:15"><name pos:start="117:12" pos:end="117:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
