<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/213.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">cpu_exec_nocache</name><parameter_list pos:start="1:29" pos:end="1:71">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:43">max_cycles</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:70"><decl pos:start="1:46" pos:end="1:70"><type pos:start="1:46" pos:end="1:70"><name pos:start="1:46" pos:end="1:61">TranslationBlock</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">orig_tb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:16">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">long</name></type> <name pos:start="5:19" pos:end="5:25">next_tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">TranslationBlock</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">tb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="13:63">/* Should never happen.

       We only end up here when an existing TB is too long.  */</comment>

    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:18">max_cycles</name> <operator pos:start="15:20" pos:end="15:20">&gt;</operator> <name pos:start="15:22" pos:end="15:34">CF_COUNT_MASK</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:18">max_cycles</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:34">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:33"><expr pos:start="21:5" pos:end="23:32"><name pos:start="21:5" pos:end="21:6">tb</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="23:32"><name pos:start="21:10" pos:end="21:20">tb_gen_code</name><argument_list pos:start="21:21" pos:end="23:32">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">env</name></expr></argument>, <argument pos:start="21:27" pos:end="21:37"><expr pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:33">orig_tb</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:37">pc</name></name></expr></argument>, <argument pos:start="21:40" pos:end="21:55"><expr pos:start="21:40" pos:end="21:55"><name pos:start="21:40" pos:end="21:55"><name pos:start="21:40" pos:end="21:46">orig_tb</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:55">cs_base</name></name></expr></argument>, <argument pos:start="21:58" pos:end="21:71"><expr pos:start="21:58" pos:end="21:71"><name pos:start="21:58" pos:end="21:71"><name pos:start="21:58" pos:end="21:64">orig_tb</name><operator pos:start="21:65" pos:end="21:66">-&gt;</operator><name pos:start="21:67" pos:end="21:71">flags</name></name></expr></argument>,

                     <argument pos:start="23:22" pos:end="23:31"><expr pos:start="23:22" pos:end="23:31"><name pos:start="23:22" pos:end="23:31">max_cycles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">env</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:19">current_tb</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:24">tb</name></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:36">/* execute the generated code */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:11">next_tb</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:42"><name pos:start="29:15" pos:end="29:30">tcg_qemu_tb_exec</name><argument_list pos:start="29:31" pos:end="29:42">(<argument pos:start="29:32" pos:end="29:41"><expr pos:start="29:32" pos:end="29:41"><name pos:start="29:32" pos:end="29:41"><name pos:start="29:32" pos:end="29:33">tb</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:41">tc_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:19">current_tb</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:26">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:16">next_tb</name> <operator pos:start="35:18" pos:end="35:18">&amp;</operator> <literal type="number" pos:start="35:20" pos:end="35:20">3</literal><operator pos:start="35:21" pos:end="35:21">)</operator> <operator pos:start="35:23" pos:end="35:24">==</operator> <literal type="number" pos:start="35:26" pos:end="35:26">2</literal></expr>)</condition> <block pos:start="35:29" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:32">

        <comment type="block" pos:start="37:9" pos:end="39:39">/* Restore PC.  This may happen if async event occurs before

           the TB starts executing.  */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><call pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:22">cpu_pc_from_tb</name><argument_list pos:start="41:23" pos:end="41:31">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">env</name></expr></argument>, <argument pos:start="41:29" pos:end="41:30"><expr pos:start="41:29" pos:end="41:30"><name pos:start="41:29" pos:end="41:30">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><call pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:22">tb_phys_invalidate</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:25"><expr pos:start="45:24" pos:end="45:25"><name pos:start="45:24" pos:end="45:25">tb</name></expr></argument>, <argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><operator pos:start="45:28" pos:end="45:28">-</operator><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:16"><expr pos:start="47:5" pos:end="47:15"><call pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:11">tb_free</name><argument_list pos:start="47:12" pos:end="47:15">(<argument pos:start="47:13" pos:end="47:14"><expr pos:start="47:13" pos:end="47:14"><name pos:start="47:13" pos:end="47:14">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
