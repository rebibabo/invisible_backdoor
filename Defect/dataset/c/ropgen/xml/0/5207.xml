<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5207.c" pos:tabs="8"><function pos:start="1:1" pos:end="339:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vga_update_text</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:64"><decl pos:start="1:43" pos:end="1:64"><type pos:start="1:43" pos:end="1:64"><name pos:start="1:43" pos:end="1:54">console_ch_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">chardata</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="339:1">{<block_content pos:start="5:5" pos:end="337:57">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VGACommonState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:31">=  <expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">graphic_mode</name></decl>, <decl pos:start="7:23" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:23">i</name></decl>, <decl pos:start="7:26" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:38">cursor_offset</name></decl>, <decl pos:start="7:41" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:54">cursor_visible</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">cw</name></decl>, <decl pos:start="9:13" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:19">cheight</name></decl>, <decl pos:start="9:22" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:26">width</name></decl>, <decl pos:start="9:29" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:34">height</name></decl>, <decl pos:start="9:37" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:40">size</name></decl>, <decl pos:start="9:43" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:47">c_min</name></decl>, <decl pos:start="9:50" pos:end="9:54"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:50" pos:end="9:54">c_max</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">console_ch_t</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">dst</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:18"/><name pos:start="13:24" pos:end="13:26">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:23"><name pos:start="15:10" pos:end="15:19">msg_buffer</name><index pos:start="15:20" pos:end="15:23">[<expr pos:start="15:21" pos:end="15:22"><literal type="number" pos:start="15:21" pos:end="15:22">80</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">full_update</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><call pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:36">qemu_flush_coalesced_mmio_buffer</name><argument_list pos:start="21:37" pos:end="21:38">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:21"><name pos:start="25:11" pos:end="25:11">s</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:21">ar_index</name></name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <literal type="number" pos:start="25:25" pos:end="25:28">0x20</literal><operator pos:start="25:29" pos:end="25:29">)</operator></expr>)</condition> <block pos:start="25:32" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:35">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:20">graphic_mode</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:34">GMODE_BLANK</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:68">

        <expr_stmt pos:start="31:9" pos:end="31:68"><expr pos:start="31:9" pos:end="31:67"><name pos:start="31:9" pos:end="31:20">graphic_mode</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:28">gr</name><index pos:start="31:29" pos:end="31:42">[<expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">VGA_GFX_MISC</name></expr>]</index></name> <operator pos:start="31:44" pos:end="31:44">&amp;</operator> <name pos:start="31:46" pos:end="31:67">VGA_GR06_GRAPHICS_MODE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:40">(<expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:20">graphic_mode</name> <operator pos:start="35:22" pos:end="35:23">!=</operator> <name pos:start="35:25" pos:end="35:39"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:39">graphic_mode</name></name></expr>)</condition> <block pos:start="35:42" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:24">

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:23">graphic_mode</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:38">graphic_mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:19">full_update</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:28">(<expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">last_width</name></name> <operator pos:start="43:23" pos:end="43:24">==</operator> <operator pos:start="43:26" pos:end="43:26">-</operator><literal type="number" pos:start="43:27" pos:end="43:27">1</literal></expr>)</condition> <block pos:start="43:30" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:24">

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:21">last_width</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:19">full_update</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="53:5" pos:end="303:5">switch <condition pos:start="53:12" pos:end="53:25">(<expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:24">graphic_mode</name></expr>)</condition> <block pos:start="53:27" pos:end="303:5">{<block_content pos:start="55:5" pos:end="301:14">

    <case pos:start="55:5" pos:end="55:20">case <expr pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:19">GMODE_TEXT</name></expr>:</case>

        <comment type="block" pos:start="57:9" pos:end="57:34">/* TODO: update palette */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:19">full_update</name> <operator pos:start="59:21" pos:end="59:22">|=</operator> <call pos:start="59:24" pos:end="59:45"><name pos:start="59:24" pos:end="59:42">update_basic_params</name><argument_list pos:start="59:43" pos:end="59:45">(<argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><name pos:start="59:44" pos:end="59:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="63:9" pos:end="63:34">/* total width &amp; height */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:56"><expr pos:start="65:9" pos:end="65:55"><name pos:start="65:9" pos:end="65:15">cheight</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <operator pos:start="65:19" pos:end="65:19">(</operator><name pos:start="65:20" pos:end="65:43"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:24">cr</name><index pos:start="65:25" pos:end="65:43">[<expr pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:42">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="65:45" pos:end="65:45">&amp;</operator> <literal type="number" pos:start="65:47" pos:end="65:50">0x1f</literal><operator pos:start="65:51" pos:end="65:51">)</operator> <operator pos:start="65:53" pos:end="65:53">+</operator> <literal type="number" pos:start="65:55" pos:end="65:55">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:15"><expr pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:10">cw</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:67">(<expr pos:start="69:13" pos:end="69:66"><operator pos:start="69:13" pos:end="69:13">!</operator><operator pos:start="69:14" pos:end="69:14">(</operator><name pos:start="69:15" pos:end="69:39"><name pos:start="69:15" pos:end="69:15">s</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">sr</name><index pos:start="69:20" pos:end="69:39">[<expr pos:start="69:21" pos:end="69:38"><name pos:start="69:21" pos:end="69:38">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="69:41" pos:end="69:41">&amp;</operator> <name pos:start="69:43" pos:end="69:65">VGA_SR01_CHAR_CLK_8DOTS</name><operator pos:start="69:66" pos:end="69:66">)</operator></expr>)</condition> <block pos:start="69:69" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:19">

            <expr_stmt pos:start="71:13" pos:end="71:19"><expr pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:14">cw</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">9</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:45">(<expr pos:start="75:13" pos:end="75:44"><name pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:17">sr</name><index pos:start="75:18" pos:end="75:37">[<expr pos:start="75:19" pos:end="75:36"><name pos:start="75:19" pos:end="75:36">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="75:39" pos:end="75:39">&amp;</operator> <literal type="number" pos:start="75:41" pos:end="75:44">0x08</literal></expr>)</condition> <block pos:start="75:47" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:20">

            <expr_stmt pos:start="77:13" pos:end="77:20"><expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:14">cw</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:19">16</literal></expr>;</expr_stmt> <comment type="block" pos:start="77:22" pos:end="77:49">/* NOTE: no 18 pixel wide */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:45"><expr pos:start="81:9" pos:end="81:44"><name pos:start="81:9" pos:end="81:13">width</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <operator pos:start="81:17" pos:end="81:17">(</operator><name pos:start="81:18" pos:end="81:39"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:22">cr</name><index pos:start="81:23" pos:end="81:39">[<expr pos:start="81:24" pos:end="81:38"><name pos:start="81:24" pos:end="81:38">VGA_CRTC_H_DISP</name></expr>]</index></name> <operator pos:start="81:41" pos:end="81:41">+</operator> <literal type="number" pos:start="81:43" pos:end="81:43">1</literal><operator pos:start="81:44" pos:end="81:44">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:43">(<expr pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:17">cr</name><index pos:start="83:18" pos:end="83:35">[<expr pos:start="83:19" pos:end="83:34"><name pos:start="83:19" pos:end="83:34">VGA_CRTC_V_TOTAL</name></expr>]</index></name> <operator pos:start="83:37" pos:end="83:38">==</operator> <literal type="number" pos:start="83:40" pos:end="83:42">100</literal></expr>)</condition> <block pos:start="83:45" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:25">

            <comment type="block" pos:start="85:13" pos:end="85:69">/* ugly hack for CGA 160x100x16 - explain me the logic */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:25"><expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:18">height</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:24">100</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="99:9">else <block pos:start="89:16" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:44">

            <expr_stmt pos:start="91:13" pos:end="95:57"><expr pos:start="91:13" pos:end="95:56"><name pos:start="91:13" pos:end="91:18">height</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:47"><name pos:start="91:22" pos:end="91:22">s</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:26">cr</name><index pos:start="91:27" pos:end="91:47">[<expr pos:start="91:28" pos:end="91:46"><name pos:start="91:28" pos:end="91:46">VGA_CRTC_V_DISP_END</name></expr>]</index></name> <operator pos:start="91:49" pos:end="91:49">|</operator>

                <operator pos:start="93:17" pos:end="93:17">(</operator><operator pos:start="93:18" pos:end="93:18">(</operator><name pos:start="93:19" pos:end="93:42"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:23">cr</name><index pos:start="93:24" pos:end="93:42">[<expr pos:start="93:25" pos:end="93:41"><name pos:start="93:25" pos:end="93:41">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="93:44" pos:end="93:44">&amp;</operator> <literal type="number" pos:start="93:46" pos:end="93:49">0x02</literal><operator pos:start="93:50" pos:end="93:50">)</operator> <operator pos:start="93:52" pos:end="93:53">&lt;&lt;</operator> <literal type="number" pos:start="93:55" pos:end="93:55">7</literal><operator pos:start="93:56" pos:end="93:56">)</operator> <operator pos:start="93:58" pos:end="93:58">|</operator>

                <operator pos:start="95:17" pos:end="95:17">(</operator><operator pos:start="95:18" pos:end="95:18">(</operator><name pos:start="95:19" pos:end="95:42"><name pos:start="95:19" pos:end="95:19">s</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:23">cr</name><index pos:start="95:24" pos:end="95:42">[<expr pos:start="95:25" pos:end="95:41"><name pos:start="95:25" pos:end="95:41">VGA_CRTC_OVERFLOW</name></expr>]</index></name> <operator pos:start="95:44" pos:end="95:44">&amp;</operator> <literal type="number" pos:start="95:46" pos:end="95:49">0x40</literal><operator pos:start="95:50" pos:end="95:50">)</operator> <operator pos:start="95:52" pos:end="95:53">&lt;&lt;</operator> <literal type="number" pos:start="95:55" pos:end="95:55">3</literal><operator pos:start="95:56" pos:end="95:56">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><name pos:start="97:13" pos:end="97:18">height</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <operator pos:start="97:22" pos:end="97:22">(</operator><name pos:start="97:23" pos:end="97:28">height</name> <operator pos:start="97:30" pos:end="97:30">+</operator> <literal type="number" pos:start="97:32" pos:end="97:32">1</literal><operator pos:start="97:33" pos:end="97:33">)</operator> <operator pos:start="97:35" pos:end="97:35">/</operator> <name pos:start="97:37" pos:end="97:43">cheight</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:12">size</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <operator pos:start="103:16" pos:end="103:16">(</operator><name pos:start="103:17" pos:end="103:22">height</name> <operator pos:start="103:24" pos:end="103:24">*</operator> <name pos:start="103:26" pos:end="103:30">width</name><operator pos:start="103:31" pos:end="103:31">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="119:9"><if pos:start="105:9" pos:end="119:9">if <condition pos:start="105:12" pos:end="105:32">(<expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:16">size</name> <operator pos:start="105:18" pos:end="105:18">&gt;</operator> <name pos:start="105:20" pos:end="105:31">CH_ATTR_SIZE</name></expr>)</condition> <block pos:start="105:34" pos:end="119:9">{<block_content pos:start="107:13" pos:end="117:18">

            <if_stmt pos:start="107:13" pos:end="109:23"><if pos:start="107:13" pos:end="109:23">if <condition pos:start="107:16" pos:end="107:29">(<expr pos:start="107:17" pos:end="107:28"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:28">full_update</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:23"><block_content pos:start="109:17" pos:end="109:23">

                <return pos:start="109:17" pos:end="109:23">return;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="113:13" pos:end="115:36"><expr pos:start="113:13" pos:end="115:35"><call pos:start="113:13" pos:end="115:35"><name pos:start="113:13" pos:end="113:20">snprintf</name><argument_list pos:start="113:21" pos:end="115:35">(<argument pos:start="113:22" pos:end="113:31"><expr pos:start="113:22" pos:end="113:31"><name pos:start="113:22" pos:end="113:31">msg_buffer</name></expr></argument>, <argument pos:start="113:34" pos:end="113:51"><expr pos:start="113:34" pos:end="113:51"><sizeof pos:start="113:34" pos:end="113:51">sizeof<argument_list pos:start="113:40" pos:end="113:51">(<argument pos:start="113:41" pos:end="113:50"><expr pos:start="113:41" pos:end="113:50"><name pos:start="113:41" pos:end="113:50">msg_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="113:54" pos:end="113:72"><expr pos:start="113:54" pos:end="113:72"><literal type="string" pos:start="113:54" pos:end="113:72">"%i x %i Text mode"</literal></expr></argument>,

                     <argument pos:start="115:22" pos:end="115:26"><expr pos:start="115:22" pos:end="115:26"><name pos:start="115:22" pos:end="115:26">width</name></expr></argument>, <argument pos:start="115:29" pos:end="115:34"><expr pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:34">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="147:9"><if pos:start="123:9" pos:end="147:9">if <condition pos:start="123:12" pos:end="125:54">(<expr pos:start="123:13" pos:end="125:53"><name pos:start="123:13" pos:end="123:17">width</name> <operator pos:start="123:19" pos:end="123:20">!=</operator> <name pos:start="123:22" pos:end="123:34"><name pos:start="123:22" pos:end="123:22">s</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:34">last_width</name></name> <operator pos:start="123:36" pos:end="123:37">||</operator> <name pos:start="123:39" pos:end="123:44">height</name> <operator pos:start="123:46" pos:end="123:47">!=</operator> <name pos:start="123:49" pos:end="123:62"><name pos:start="123:49" pos:end="123:49">s</name><operator pos:start="123:50" pos:end="123:51">-&gt;</operator><name pos:start="123:52" pos:end="123:62">last_height</name></name> <operator pos:start="123:64" pos:end="123:65">||</operator>

            <name pos:start="125:13" pos:end="125:14">cw</name> <operator pos:start="125:16" pos:end="125:17">!=</operator> <name pos:start="125:19" pos:end="125:28"><name pos:start="125:19" pos:end="125:19">s</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:28">last_cw</name></name> <operator pos:start="125:30" pos:end="125:31">||</operator> <name pos:start="125:33" pos:end="125:39">cheight</name> <operator pos:start="125:41" pos:end="125:42">!=</operator> <name pos:start="125:44" pos:end="125:53"><name pos:start="125:44" pos:end="125:44">s</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:53">last_ch</name></name></expr>)</condition> <block pos:start="125:56" pos:end="147:9">{<block_content pos:start="127:13" pos:end="145:28">

            <expr_stmt pos:start="127:13" pos:end="127:43"><expr pos:start="127:13" pos:end="127:42"><name pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:29">last_scr_width</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:37">width</name> <operator pos:start="127:39" pos:end="127:39">*</operator> <name pos:start="127:41" pos:end="127:42">cw</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:50"><expr pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:30"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:30">last_scr_height</name></name> <operator pos:start="129:32" pos:end="129:32">=</operator> <name pos:start="129:34" pos:end="129:39">height</name> <operator pos:start="129:41" pos:end="129:41">*</operator> <name pos:start="129:43" pos:end="129:49">cheight</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:79"><expr pos:start="131:13" pos:end="131:78"><call pos:start="131:13" pos:end="131:78"><name pos:start="131:13" pos:end="131:31">qemu_console_resize</name><argument_list pos:start="131:32" pos:end="131:78">(<argument pos:start="131:33" pos:end="131:38"><expr pos:start="131:33" pos:end="131:38"><name pos:start="131:33" pos:end="131:38"><name pos:start="131:33" pos:end="131:33">s</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:38">con</name></name></expr></argument>, <argument pos:start="131:41" pos:end="131:57"><expr pos:start="131:41" pos:end="131:57"><name pos:start="131:41" pos:end="131:57"><name pos:start="131:41" pos:end="131:41">s</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:57">last_scr_width</name></name></expr></argument>, <argument pos:start="131:60" pos:end="131:77"><expr pos:start="131:60" pos:end="131:77"><name pos:start="131:60" pos:end="131:77"><name pos:start="131:60" pos:end="131:60">s</name><operator pos:start="131:61" pos:end="131:62">-&gt;</operator><name pos:start="131:63" pos:end="131:77">last_scr_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:51"><expr pos:start="133:13" pos:end="133:50"><call pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:27">dpy_text_resize</name><argument_list pos:start="133:28" pos:end="133:50">(<argument pos:start="133:29" pos:end="133:34"><expr pos:start="133:29" pos:end="133:34"><name pos:start="133:29" pos:end="133:34"><name pos:start="133:29" pos:end="133:29">s</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:34">con</name></name></expr></argument>, <argument pos:start="133:37" pos:end="133:41"><expr pos:start="133:37" pos:end="133:41"><name pos:start="133:37" pos:end="133:41">width</name></expr></argument>, <argument pos:start="133:44" pos:end="133:49"><expr pos:start="133:44" pos:end="133:49"><name pos:start="133:44" pos:end="133:49">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:25">last_depth</name></name> <operator pos:start="135:27" pos:end="135:27">=</operator> <literal type="number" pos:start="135:29" pos:end="135:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:25">last_width</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:33">width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:36"><expr pos:start="139:13" pos:end="139:35"><name pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:26">last_height</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator> <name pos:start="139:30" pos:end="139:35">height</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:33"><expr pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:22"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:22">last_ch</name></name> <operator pos:start="141:24" pos:end="141:24">=</operator> <name pos:start="141:26" pos:end="141:32">cheight</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:28"><expr pos:start="143:13" pos:end="143:27"><name pos:start="143:13" pos:end="143:22"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:22">last_cw</name></name> <operator pos:start="143:24" pos:end="143:24">=</operator> <name pos:start="143:26" pos:end="143:27">cw</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:28"><expr pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:23">full_update</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <literal type="number" pos:start="145:27" pos:end="145:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:24">(<expr pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:23">full_update</name></expr>)</condition> <block pos:start="151:26" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:35">

            <expr_stmt pos:start="153:13" pos:end="153:35"><expr pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:30"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:30">full_update_gfx</name></name> <operator pos:start="153:32" pos:end="153:32">=</operator> <literal type="number" pos:start="153:34" pos:end="153:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:32">(<expr pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:31">full_update_text</name></name></expr>)</condition> <block pos:start="157:34" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:29">

            <expr_stmt pos:start="159:13" pos:end="159:36"><expr pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:31">full_update_text</name></name> <operator pos:start="159:33" pos:end="159:33">=</operator> <literal type="number" pos:start="159:35" pos:end="159:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:29"><expr pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:23">full_update</name> <operator pos:start="161:25" pos:end="161:26">|=</operator> <literal type="number" pos:start="161:28" pos:end="161:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="167:9" pos:end="167:38">/* Update "hardware" cursor */</comment>

        <expr_stmt pos:start="169:9" pos:end="171:68"><expr pos:start="169:9" pos:end="171:67"><name pos:start="169:9" pos:end="169:21">cursor_offset</name> <operator pos:start="169:23" pos:end="169:23">=</operator> <operator pos:start="169:25" pos:end="169:25">(</operator><operator pos:start="169:26" pos:end="169:26">(</operator><name pos:start="169:27" pos:end="169:51"><name pos:start="169:27" pos:end="169:27">s</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:31">cr</name><index pos:start="169:32" pos:end="169:51">[<expr pos:start="169:33" pos:end="169:50"><name pos:start="169:33" pos:end="169:50">VGA_CRTC_CURSOR_HI</name></expr>]</index></name> <operator pos:start="169:53" pos:end="169:54">&lt;&lt;</operator> <literal type="number" pos:start="169:56" pos:end="169:56">8</literal><operator pos:start="169:57" pos:end="169:57">)</operator> <operator pos:start="169:59" pos:end="169:59">|</operator>

                         <name pos:start="171:26" pos:end="171:50"><name pos:start="171:26" pos:end="171:26">s</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:30">cr</name><index pos:start="171:31" pos:end="171:50">[<expr pos:start="171:32" pos:end="171:49"><name pos:start="171:32" pos:end="171:49">VGA_CRTC_CURSOR_LO</name></expr>]</index></name><operator pos:start="171:51" pos:end="171:51">)</operator> <operator pos:start="171:53" pos:end="171:53">-</operator> <name pos:start="171:55" pos:end="171:67"><name pos:start="171:55" pos:end="171:55">s</name><operator pos:start="171:56" pos:end="171:57">-&gt;</operator><name pos:start="171:58" pos:end="171:67">start_addr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="199:9"><if pos:start="173:9" pos:end="199:9">if <condition pos:start="173:12" pos:end="177:71">(<expr pos:start="173:13" pos:end="177:70"><name pos:start="173:13" pos:end="173:25">cursor_offset</name> <operator pos:start="173:27" pos:end="173:28">!=</operator> <name pos:start="173:30" pos:end="173:45"><name pos:start="173:30" pos:end="173:30">s</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:45">cursor_offset</name></name> <operator pos:start="173:47" pos:end="173:48">||</operator>

            <name pos:start="175:13" pos:end="175:40"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:17">cr</name><index pos:start="175:18" pos:end="175:40">[<expr pos:start="175:19" pos:end="175:39"><name pos:start="175:19" pos:end="175:39">VGA_CRTC_CURSOR_START</name></expr>]</index></name> <operator pos:start="175:42" pos:end="175:43">!=</operator> <name pos:start="175:45" pos:end="175:59"><name pos:start="175:45" pos:end="175:45">s</name><operator pos:start="175:46" pos:end="175:47">-&gt;</operator><name pos:start="175:48" pos:end="175:59">cursor_start</name></name> <operator pos:start="175:61" pos:end="175:62">||</operator>

            <name pos:start="177:13" pos:end="177:38"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:17">cr</name><index pos:start="177:18" pos:end="177:38">[<expr pos:start="177:19" pos:end="177:37"><name pos:start="177:19" pos:end="177:37">VGA_CRTC_CURSOR_END</name></expr>]</index></name> <operator pos:start="177:40" pos:end="177:41">!=</operator> <name pos:start="177:43" pos:end="177:55"><name pos:start="177:43" pos:end="177:43">s</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:55">cursor_end</name></name> <operator pos:start="177:57" pos:end="177:58">||</operator> <name pos:start="177:60" pos:end="177:70">full_update</name></expr>)</condition> <block pos:start="177:73" pos:end="199:9">{<block_content pos:start="179:13" pos:end="197:55">

            <expr_stmt pos:start="179:13" pos:end="179:68"><expr pos:start="179:13" pos:end="179:67"><name pos:start="179:13" pos:end="179:26">cursor_visible</name> <operator pos:start="179:28" pos:end="179:28">=</operator> <operator pos:start="179:30" pos:end="179:30">!</operator><operator pos:start="179:31" pos:end="179:31">(</operator><name pos:start="179:32" pos:end="179:59"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:36">cr</name><index pos:start="179:37" pos:end="179:59">[<expr pos:start="179:38" pos:end="179:58"><name pos:start="179:38" pos:end="179:58">VGA_CRTC_CURSOR_START</name></expr>]</index></name> <operator pos:start="179:61" pos:end="179:61">&amp;</operator> <literal type="number" pos:start="179:63" pos:end="179:66">0x20</literal><operator pos:start="179:67" pos:end="179:67">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="181:13" pos:end="191:48"><if pos:start="181:13" pos:end="187:59">if <condition pos:start="181:16" pos:end="181:77">(<expr pos:start="181:17" pos:end="181:76"><name pos:start="181:17" pos:end="181:30">cursor_visible</name> <operator pos:start="181:32" pos:end="181:33">&amp;&amp;</operator> <name pos:start="181:35" pos:end="181:47">cursor_offset</name> <operator pos:start="181:49" pos:end="181:49">&lt;</operator> <name pos:start="181:51" pos:end="181:54">size</name> <operator pos:start="181:56" pos:end="181:57">&amp;&amp;</operator> <name pos:start="181:59" pos:end="181:71">cursor_offset</name> <operator pos:start="181:73" pos:end="181:74">&gt;=</operator> <literal type="number" pos:start="181:76" pos:end="181:76">0</literal></expr>)</condition><block type="pseudo" pos:start="183:17" pos:end="187:59"><block_content pos:start="183:17" pos:end="187:59">

                <expr_stmt pos:start="183:17" pos:end="187:59"><expr pos:start="183:17" pos:end="187:58"><call pos:start="183:17" pos:end="187:58"><name pos:start="183:17" pos:end="183:31">dpy_text_cursor</name><argument_list pos:start="183:32" pos:end="187:58">(<argument pos:start="183:33" pos:end="183:38"><expr pos:start="183:33" pos:end="183:38"><name pos:start="183:33" pos:end="183:38"><name pos:start="183:33" pos:end="183:33">s</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:38">con</name></name></expr></argument>,

                                <argument pos:start="185:33" pos:end="185:57"><expr pos:start="185:33" pos:end="185:57"><call pos:start="185:33" pos:end="185:57"><name pos:start="185:33" pos:end="185:42">TEXTMODE_X</name><argument_list pos:start="185:43" pos:end="185:57">(<argument pos:start="185:44" pos:end="185:56"><expr pos:start="185:44" pos:end="185:56"><name pos:start="185:44" pos:end="185:56">cursor_offset</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="187:33" pos:end="187:57"><expr pos:start="187:33" pos:end="187:57"><call pos:start="187:33" pos:end="187:57"><name pos:start="187:33" pos:end="187:42">TEXTMODE_Y</name><argument_list pos:start="187:43" pos:end="187:57">(<argument pos:start="187:44" pos:end="187:56"><expr pos:start="187:44" pos:end="187:56"><name pos:start="187:44" pos:end="187:56">cursor_offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="189:13" pos:end="191:48">else<block type="pseudo" pos:start="191:17" pos:end="191:48"><block_content pos:start="191:17" pos:end="191:48">

                <expr_stmt pos:start="191:17" pos:end="191:48"><expr pos:start="191:17" pos:end="191:47"><call pos:start="191:17" pos:end="191:47"><name pos:start="191:17" pos:end="191:31">dpy_text_cursor</name><argument_list pos:start="191:32" pos:end="191:47">(<argument pos:start="191:33" pos:end="191:38"><expr pos:start="191:33" pos:end="191:38"><name pos:start="191:33" pos:end="191:38"><name pos:start="191:33" pos:end="191:33">s</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:38">con</name></name></expr></argument>, <argument pos:start="191:41" pos:end="191:42"><expr pos:start="191:41" pos:end="191:42"><operator pos:start="191:41" pos:end="191:41">-</operator><literal type="number" pos:start="191:42" pos:end="191:42">1</literal></expr></argument>, <argument pos:start="191:45" pos:end="191:46"><expr pos:start="191:45" pos:end="191:46"><operator pos:start="191:45" pos:end="191:45">-</operator><literal type="number" pos:start="191:46" pos:end="191:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:45"><expr pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:28"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:28">cursor_offset</name></name> <operator pos:start="193:30" pos:end="193:30">=</operator> <name pos:start="193:32" pos:end="193:44">cursor_offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:59"><expr pos:start="195:13" pos:end="195:58"><name pos:start="195:13" pos:end="195:27"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:27">cursor_start</name></name> <operator pos:start="195:29" pos:end="195:29">=</operator> <name pos:start="195:31" pos:end="195:58"><name pos:start="195:31" pos:end="195:31">s</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:35">cr</name><index pos:start="195:36" pos:end="195:58">[<expr pos:start="195:37" pos:end="195:57"><name pos:start="195:37" pos:end="195:57">VGA_CRTC_CURSOR_START</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:55"><expr pos:start="197:13" pos:end="197:54"><name pos:start="197:13" pos:end="197:25"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:25">cursor_end</name></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:54"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:33">cr</name><index pos:start="197:34" pos:end="197:54">[<expr pos:start="197:35" pos:end="197:53"><name pos:start="197:35" pos:end="197:53">VGA_CRTC_CURSOR_END</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="203:9" pos:end="203:55"><expr pos:start="203:9" pos:end="203:54"><name pos:start="203:9" pos:end="203:11">src</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <operator pos:start="203:15" pos:end="203:15">(</operator><name pos:start="203:16" pos:end="203:23">uint32_t</name> <operator pos:start="203:25" pos:end="203:25">*</operator><operator pos:start="203:26" pos:end="203:26">)</operator> <name pos:start="203:28" pos:end="203:38"><name pos:start="203:28" pos:end="203:28">s</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:38">vram_ptr</name></name> <operator pos:start="203:40" pos:end="203:40">+</operator> <name pos:start="203:42" pos:end="203:54"><name pos:start="203:42" pos:end="203:42">s</name><operator pos:start="203:43" pos:end="203:44">-&gt;</operator><name pos:start="203:45" pos:end="203:54">start_addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:23"><expr pos:start="205:9" pos:end="205:22"><name pos:start="205:9" pos:end="205:11">dst</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <name pos:start="205:15" pos:end="205:22">chardata</name></expr>;</expr_stmt>



        <if_stmt pos:start="209:9" pos:end="267:9"><if pos:start="209:9" pos:end="219:9">if <condition pos:start="209:12" pos:end="209:24">(<expr pos:start="209:13" pos:end="209:23"><name pos:start="209:13" pos:end="209:23">full_update</name></expr>)</condition> <block pos:start="209:26" pos:end="219:9">{<block_content pos:start="211:13" pos:end="217:57">

            <for pos:start="211:13" pos:end="213:70">for <control pos:start="211:17" pos:end="211:55">(<init pos:start="211:18" pos:end="211:23"><expr pos:start="211:18" pos:end="211:22"><name pos:start="211:18" pos:end="211:18">i</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <literal type="number" pos:start="211:22" pos:end="211:22">0</literal></expr>;</init> <condition pos:start="211:25" pos:end="211:33"><expr pos:start="211:25" pos:end="211:32"><name pos:start="211:25" pos:end="211:25">i</name> <operator pos:start="211:27" pos:end="211:27">&lt;</operator> <name pos:start="211:29" pos:end="211:32">size</name></expr>;</condition> <incr pos:start="211:35" pos:end="211:54"><expr pos:start="211:35" pos:end="211:40"><name pos:start="211:35" pos:end="211:37">src</name> <operator pos:start="211:39" pos:end="211:40">++</operator></expr><operator pos:start="211:41" pos:end="211:41">,</operator> <expr pos:start="211:43" pos:end="211:48"><name pos:start="211:43" pos:end="211:45">dst</name> <operator pos:start="211:47" pos:end="211:48">++</operator></expr><operator pos:start="211:49" pos:end="211:49">,</operator> <expr pos:start="211:51" pos:end="211:54"><name pos:start="211:51" pos:end="211:51">i</name> <operator pos:start="211:53" pos:end="211:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="213:17" pos:end="213:70"><block_content pos:start="213:17" pos:end="213:70">

                <expr_stmt pos:start="213:17" pos:end="213:70"><expr pos:start="213:17" pos:end="213:69"><call pos:start="213:17" pos:end="213:69"><name pos:start="213:17" pos:end="213:32">console_write_ch</name><argument_list pos:start="213:33" pos:end="213:69">(<argument pos:start="213:34" pos:end="213:36"><expr pos:start="213:34" pos:end="213:36"><name pos:start="213:34" pos:end="213:36">dst</name></expr></argument>, <argument pos:start="213:39" pos:end="213:68"><expr pos:start="213:39" pos:end="213:68"><call pos:start="213:39" pos:end="213:68"><name pos:start="213:39" pos:end="213:49">VMEM2CHTYPE</name><argument_list pos:start="213:50" pos:end="213:68">(<argument pos:start="213:51" pos:end="213:67"><expr pos:start="213:51" pos:end="213:67"><call pos:start="213:51" pos:end="213:67"><name pos:start="213:51" pos:end="213:61">le32_to_cpu</name><argument_list pos:start="213:62" pos:end="213:67">(<argument pos:start="213:63" pos:end="213:66"><expr pos:start="213:63" pos:end="213:66"><operator pos:start="213:63" pos:end="213:63">*</operator><name pos:start="213:64" pos:end="213:66">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="217:13" pos:end="217:57"><expr pos:start="217:13" pos:end="217:56"><call pos:start="217:13" pos:end="217:56"><name pos:start="217:13" pos:end="217:27">dpy_text_update</name><argument_list pos:start="217:28" pos:end="217:56">(<argument pos:start="217:29" pos:end="217:34"><expr pos:start="217:29" pos:end="217:34"><name pos:start="217:29" pos:end="217:34"><name pos:start="217:29" pos:end="217:29">s</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:34">con</name></name></expr></argument>, <argument pos:start="217:37" pos:end="217:37"><expr pos:start="217:37" pos:end="217:37"><literal type="number" pos:start="217:37" pos:end="217:37">0</literal></expr></argument>, <argument pos:start="217:40" pos:end="217:40"><expr pos:start="217:40" pos:end="217:40"><literal type="number" pos:start="217:40" pos:end="217:40">0</literal></expr></argument>, <argument pos:start="217:43" pos:end="217:47"><expr pos:start="217:43" pos:end="217:47"><name pos:start="217:43" pos:end="217:47">width</name></expr></argument>, <argument pos:start="217:50" pos:end="217:55"><expr pos:start="217:50" pos:end="217:55"><name pos:start="217:50" pos:end="217:55">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="219:11" pos:end="267:9">else <block pos:start="219:16" pos:end="267:9">{<block_content pos:start="221:13" pos:end="265:13">

            <expr_stmt pos:start="221:13" pos:end="221:22"><expr pos:start="221:13" pos:end="221:21"><name pos:start="221:13" pos:end="221:17">c_max</name> <operator pos:start="221:19" pos:end="221:19">=</operator> <literal type="number" pos:start="221:21" pos:end="221:21">0</literal></expr>;</expr_stmt>



            <for pos:start="225:13" pos:end="239:13">for <control pos:start="225:17" pos:end="225:55">(<init pos:start="225:18" pos:end="225:23"><expr pos:start="225:18" pos:end="225:22"><name pos:start="225:18" pos:end="225:18">i</name> <operator pos:start="225:20" pos:end="225:20">=</operator> <literal type="number" pos:start="225:22" pos:end="225:22">0</literal></expr>;</init> <condition pos:start="225:25" pos:end="225:33"><expr pos:start="225:25" pos:end="225:32"><name pos:start="225:25" pos:end="225:25">i</name> <operator pos:start="225:27" pos:end="225:27">&lt;</operator> <name pos:start="225:29" pos:end="225:32">size</name></expr>;</condition> <incr pos:start="225:35" pos:end="225:54"><expr pos:start="225:35" pos:end="225:40"><name pos:start="225:35" pos:end="225:37">src</name> <operator pos:start="225:39" pos:end="225:40">++</operator></expr><operator pos:start="225:41" pos:end="225:41">,</operator> <expr pos:start="225:43" pos:end="225:48"><name pos:start="225:43" pos:end="225:45">dst</name> <operator pos:start="225:47" pos:end="225:48">++</operator></expr><operator pos:start="225:49" pos:end="225:49">,</operator> <expr pos:start="225:51" pos:end="225:54"><name pos:start="225:51" pos:end="225:51">i</name> <operator pos:start="225:53" pos:end="225:54">++</operator></expr></incr>)</control> <block pos:start="225:57" pos:end="239:13">{<block_content pos:start="227:17" pos:end="237:17">

                <expr_stmt pos:start="227:17" pos:end="227:71"><expr pos:start="227:17" pos:end="227:70"><call pos:start="227:17" pos:end="227:70"><name pos:start="227:17" pos:end="227:32">console_write_ch</name><argument_list pos:start="227:33" pos:end="227:70">(<argument pos:start="227:34" pos:end="227:37"><expr pos:start="227:34" pos:end="227:37"><operator pos:start="227:34" pos:end="227:34">&amp;</operator><name pos:start="227:35" pos:end="227:37">val</name></expr></argument>, <argument pos:start="227:40" pos:end="227:69"><expr pos:start="227:40" pos:end="227:69"><call pos:start="227:40" pos:end="227:69"><name pos:start="227:40" pos:end="227:50">VMEM2CHTYPE</name><argument_list pos:start="227:51" pos:end="227:69">(<argument pos:start="227:52" pos:end="227:68"><expr pos:start="227:52" pos:end="227:68"><call pos:start="227:52" pos:end="227:68"><name pos:start="227:52" pos:end="227:62">le32_to_cpu</name><argument_list pos:start="227:63" pos:end="227:68">(<argument pos:start="227:64" pos:end="227:67"><expr pos:start="227:64" pos:end="227:67"><operator pos:start="227:64" pos:end="227:64">*</operator><name pos:start="227:65" pos:end="227:67">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="229:17" pos:end="237:17"><if pos:start="229:17" pos:end="237:17">if <condition pos:start="229:20" pos:end="229:32">(<expr pos:start="229:21" pos:end="229:31"><operator pos:start="229:21" pos:end="229:21">*</operator><name pos:start="229:22" pos:end="229:24">dst</name> <operator pos:start="229:26" pos:end="229:27">!=</operator> <name pos:start="229:29" pos:end="229:31">val</name></expr>)</condition> <block pos:start="229:34" pos:end="237:17">{<block_content pos:start="231:21" pos:end="235:26">

                    <expr_stmt pos:start="231:21" pos:end="231:31"><expr pos:start="231:21" pos:end="231:30"><operator pos:start="231:21" pos:end="231:21">*</operator><name pos:start="231:22" pos:end="231:24">dst</name> <operator pos:start="231:26" pos:end="231:26">=</operator> <name pos:start="231:28" pos:end="231:30">val</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:30"><expr pos:start="233:21" pos:end="233:29"><name pos:start="233:21" pos:end="233:25">c_max</name> <operator pos:start="233:27" pos:end="233:27">=</operator> <name pos:start="233:29" pos:end="233:29">i</name></expr>;</expr_stmt>

                    <break pos:start="235:21" pos:end="235:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="241:13" pos:end="241:22"><expr pos:start="241:13" pos:end="241:21"><name pos:start="241:13" pos:end="241:17">c_min</name> <operator pos:start="241:19" pos:end="241:19">=</operator> <name pos:start="241:21" pos:end="241:21">i</name></expr>;</expr_stmt>

            <for pos:start="243:13" pos:end="255:13">for <control pos:start="243:17" pos:end="243:50">(<init pos:start="243:18" pos:end="243:18">;</init> <condition pos:start="243:20" pos:end="243:28"><expr pos:start="243:20" pos:end="243:27"><name pos:start="243:20" pos:end="243:20">i</name> <operator pos:start="243:22" pos:end="243:22">&lt;</operator> <name pos:start="243:24" pos:end="243:27">size</name></expr>;</condition> <incr pos:start="243:30" pos:end="243:49"><expr pos:start="243:30" pos:end="243:35"><name pos:start="243:30" pos:end="243:32">src</name> <operator pos:start="243:34" pos:end="243:35">++</operator></expr><operator pos:start="243:36" pos:end="243:36">,</operator> <expr pos:start="243:38" pos:end="243:43"><name pos:start="243:38" pos:end="243:40">dst</name> <operator pos:start="243:42" pos:end="243:43">++</operator></expr><operator pos:start="243:44" pos:end="243:44">,</operator> <expr pos:start="243:46" pos:end="243:49"><name pos:start="243:46" pos:end="243:46">i</name> <operator pos:start="243:48" pos:end="243:49">++</operator></expr></incr>)</control> <block pos:start="243:52" pos:end="255:13">{<block_content pos:start="245:17" pos:end="253:17">

                <expr_stmt pos:start="245:17" pos:end="245:71"><expr pos:start="245:17" pos:end="245:70"><call pos:start="245:17" pos:end="245:70"><name pos:start="245:17" pos:end="245:32">console_write_ch</name><argument_list pos:start="245:33" pos:end="245:70">(<argument pos:start="245:34" pos:end="245:37"><expr pos:start="245:34" pos:end="245:37"><operator pos:start="245:34" pos:end="245:34">&amp;</operator><name pos:start="245:35" pos:end="245:37">val</name></expr></argument>, <argument pos:start="245:40" pos:end="245:69"><expr pos:start="245:40" pos:end="245:69"><call pos:start="245:40" pos:end="245:69"><name pos:start="245:40" pos:end="245:50">VMEM2CHTYPE</name><argument_list pos:start="245:51" pos:end="245:69">(<argument pos:start="245:52" pos:end="245:68"><expr pos:start="245:52" pos:end="245:68"><call pos:start="245:52" pos:end="245:68"><name pos:start="245:52" pos:end="245:62">le32_to_cpu</name><argument_list pos:start="245:63" pos:end="245:68">(<argument pos:start="245:64" pos:end="245:67"><expr pos:start="245:64" pos:end="245:67"><operator pos:start="245:64" pos:end="245:64">*</operator><name pos:start="245:65" pos:end="245:67">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="247:17" pos:end="253:17"><if pos:start="247:17" pos:end="253:17">if <condition pos:start="247:20" pos:end="247:32">(<expr pos:start="247:21" pos:end="247:31"><operator pos:start="247:21" pos:end="247:21">*</operator><name pos:start="247:22" pos:end="247:24">dst</name> <operator pos:start="247:26" pos:end="247:27">!=</operator> <name pos:start="247:29" pos:end="247:31">val</name></expr>)</condition> <block pos:start="247:34" pos:end="253:17">{<block_content pos:start="249:21" pos:end="251:30">

                    <expr_stmt pos:start="249:21" pos:end="249:31"><expr pos:start="249:21" pos:end="249:30"><operator pos:start="249:21" pos:end="249:21">*</operator><name pos:start="249:22" pos:end="249:24">dst</name> <operator pos:start="249:26" pos:end="249:26">=</operator> <name pos:start="249:28" pos:end="249:30">val</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="251:21" pos:end="251:30"><expr pos:start="251:21" pos:end="251:29"><name pos:start="251:21" pos:end="251:25">c_max</name> <operator pos:start="251:27" pos:end="251:27">=</operator> <name pos:start="251:29" pos:end="251:29">i</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="259:13" pos:end="265:13"><if pos:start="259:13" pos:end="265:13">if <condition pos:start="259:16" pos:end="259:31">(<expr pos:start="259:17" pos:end="259:30"><name pos:start="259:17" pos:end="259:21">c_min</name> <operator pos:start="259:23" pos:end="259:24">&lt;=</operator> <name pos:start="259:26" pos:end="259:30">c_max</name></expr>)</condition> <block pos:start="259:33" pos:end="265:13">{<block_content pos:start="261:17" pos:end="263:80">

                <expr_stmt pos:start="261:17" pos:end="261:38"><expr pos:start="261:17" pos:end="261:37"><name pos:start="261:17" pos:end="261:17">i</name> <operator pos:start="261:19" pos:end="261:19">=</operator> <call pos:start="261:21" pos:end="261:37"><name pos:start="261:21" pos:end="261:30">TEXTMODE_Y</name><argument_list pos:start="261:31" pos:end="261:37">(<argument pos:start="261:32" pos:end="261:36"><expr pos:start="261:32" pos:end="261:36"><name pos:start="261:32" pos:end="261:36">c_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="263:17" pos:end="263:80"><expr pos:start="263:17" pos:end="263:79"><call pos:start="263:17" pos:end="263:79"><name pos:start="263:17" pos:end="263:31">dpy_text_update</name><argument_list pos:start="263:32" pos:end="263:79">(<argument pos:start="263:33" pos:end="263:38"><expr pos:start="263:33" pos:end="263:38"><name pos:start="263:33" pos:end="263:38"><name pos:start="263:33" pos:end="263:33">s</name><operator pos:start="263:34" pos:end="263:35">-&gt;</operator><name pos:start="263:36" pos:end="263:38">con</name></name></expr></argument>, <argument pos:start="263:41" pos:end="263:41"><expr pos:start="263:41" pos:end="263:41"><literal type="number" pos:start="263:41" pos:end="263:41">0</literal></expr></argument>, <argument pos:start="263:44" pos:end="263:44"><expr pos:start="263:44" pos:end="263:44"><name pos:start="263:44" pos:end="263:44">i</name></expr></argument>, <argument pos:start="263:47" pos:end="263:51"><expr pos:start="263:47" pos:end="263:51"><name pos:start="263:47" pos:end="263:51">width</name></expr></argument>, <argument pos:start="263:54" pos:end="263:78"><expr pos:start="263:54" pos:end="263:78"><call pos:start="263:54" pos:end="263:70"><name pos:start="263:54" pos:end="263:63">TEXTMODE_Y</name><argument_list pos:start="263:64" pos:end="263:70">(<argument pos:start="263:65" pos:end="263:69"><expr pos:start="263:65" pos:end="263:69"><name pos:start="263:65" pos:end="263:69">c_max</name></expr></argument>)</argument_list></call> <operator pos:start="263:72" pos:end="263:72">-</operator> <name pos:start="263:74" pos:end="263:74">i</name> <operator pos:start="263:76" pos:end="263:76">+</operator> <literal type="number" pos:start="263:78" pos:end="263:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <return pos:start="271:9" pos:end="271:15">return;</return>

    <case pos:start="273:5" pos:end="273:21">case <expr pos:start="273:10" pos:end="273:20"><name pos:start="273:10" pos:end="273:20">GMODE_GRAPH</name></expr>:</case>

        <if_stmt pos:start="275:9" pos:end="277:19"><if pos:start="275:9" pos:end="277:19">if <condition pos:start="275:12" pos:end="275:25">(<expr pos:start="275:13" pos:end="275:24"><operator pos:start="275:13" pos:end="275:13">!</operator><name pos:start="275:14" pos:end="275:24">full_update</name></expr>)</condition><block type="pseudo" pos:start="277:13" pos:end="277:19"><block_content pos:start="277:13" pos:end="277:19">

            <return pos:start="277:13" pos:end="277:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="281:9" pos:end="281:46"><expr pos:start="281:9" pos:end="281:45"><call pos:start="281:9" pos:end="281:45"><name pos:start="281:9" pos:end="281:25"><name pos:start="281:9" pos:end="281:9">s</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:25">get_resolution</name></name><argument_list pos:start="281:26" pos:end="281:45">(<argument pos:start="281:27" pos:end="281:27"><expr pos:start="281:27" pos:end="281:27"><name pos:start="281:27" pos:end="281:27">s</name></expr></argument>, <argument pos:start="281:30" pos:end="281:35"><expr pos:start="281:30" pos:end="281:35"><operator pos:start="281:30" pos:end="281:30">&amp;</operator><name pos:start="281:31" pos:end="281:35">width</name></expr></argument>, <argument pos:start="281:38" pos:end="281:44"><expr pos:start="281:38" pos:end="281:44"><operator pos:start="281:38" pos:end="281:38">&amp;</operator><name pos:start="281:39" pos:end="281:44">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="285:32"><expr pos:start="283:9" pos:end="285:31"><call pos:start="283:9" pos:end="285:31"><name pos:start="283:9" pos:end="283:16">snprintf</name><argument_list pos:start="283:17" pos:end="285:31">(<argument pos:start="283:18" pos:end="283:27"><expr pos:start="283:18" pos:end="283:27"><name pos:start="283:18" pos:end="283:27">msg_buffer</name></expr></argument>, <argument pos:start="283:30" pos:end="283:47"><expr pos:start="283:30" pos:end="283:47"><sizeof pos:start="283:30" pos:end="283:47">sizeof<argument_list pos:start="283:36" pos:end="283:47">(<argument pos:start="283:37" pos:end="283:46"><expr pos:start="283:37" pos:end="283:46"><name pos:start="283:37" pos:end="283:46">msg_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="283:50" pos:end="283:71"><expr pos:start="283:50" pos:end="283:71"><literal type="string" pos:start="283:50" pos:end="283:71">"%i x %i Graphic mode"</literal></expr></argument>,

                 <argument pos:start="285:18" pos:end="285:22"><expr pos:start="285:18" pos:end="285:22"><name pos:start="285:18" pos:end="285:22">width</name></expr></argument>, <argument pos:start="285:25" pos:end="285:30"><expr pos:start="285:25" pos:end="285:30"><name pos:start="285:25" pos:end="285:30">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="287:9" pos:end="287:14">break;</break>

    <case pos:start="289:5" pos:end="289:21">case <expr pos:start="289:10" pos:end="289:20"><name pos:start="289:10" pos:end="289:20">GMODE_BLANK</name></expr>:</case>

    <default pos:start="291:5" pos:end="291:12">default:</default>

        <if_stmt pos:start="293:9" pos:end="295:19"><if pos:start="293:9" pos:end="295:19">if <condition pos:start="293:12" pos:end="293:25">(<expr pos:start="293:13" pos:end="293:24"><operator pos:start="293:13" pos:end="293:13">!</operator><name pos:start="293:14" pos:end="293:24">full_update</name></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:19"><block_content pos:start="295:13" pos:end="295:19">

            <return pos:start="295:13" pos:end="295:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="299:9" pos:end="299:67"><expr pos:start="299:9" pos:end="299:66"><call pos:start="299:9" pos:end="299:66"><name pos:start="299:9" pos:end="299:16">snprintf</name><argument_list pos:start="299:17" pos:end="299:66">(<argument pos:start="299:18" pos:end="299:27"><expr pos:start="299:18" pos:end="299:27"><name pos:start="299:18" pos:end="299:27">msg_buffer</name></expr></argument>, <argument pos:start="299:30" pos:end="299:47"><expr pos:start="299:30" pos:end="299:47"><sizeof pos:start="299:30" pos:end="299:47">sizeof<argument_list pos:start="299:36" pos:end="299:47">(<argument pos:start="299:37" pos:end="299:46"><expr pos:start="299:37" pos:end="299:46"><name pos:start="299:37" pos:end="299:46">msg_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="299:50" pos:end="299:65"><expr pos:start="299:50" pos:end="299:65"><literal type="string" pos:start="299:50" pos:end="299:65">"VGA Blank mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="301:9" pos:end="301:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="307:5" pos:end="307:27">/* Display a message */</comment>

    <expr_stmt pos:start="309:5" pos:end="309:23"><expr pos:start="309:5" pos:end="309:22"><name pos:start="309:5" pos:end="309:17"><name pos:start="309:5" pos:end="309:5">s</name><operator pos:start="309:6" pos:end="309:7">-&gt;</operator><name pos:start="309:8" pos:end="309:17">last_width</name></name> <operator pos:start="309:19" pos:end="309:19">=</operator> <literal type="number" pos:start="309:21" pos:end="309:22">60</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:32"><expr pos:start="311:5" pos:end="311:31"><name pos:start="311:5" pos:end="311:18"><name pos:start="311:5" pos:end="311:5">s</name><operator pos:start="311:6" pos:end="311:7">-&gt;</operator><name pos:start="311:8" pos:end="311:18">last_height</name></name> <operator pos:start="311:20" pos:end="311:20">=</operator> <name pos:start="311:22" pos:end="311:27">height</name> <operator pos:start="311:29" pos:end="311:29">=</operator> <literal type="number" pos:start="311:31" pos:end="311:31">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:36"><expr pos:start="313:5" pos:end="313:35"><call pos:start="313:5" pos:end="313:35"><name pos:start="313:5" pos:end="313:19">dpy_text_cursor</name><argument_list pos:start="313:20" pos:end="313:35">(<argument pos:start="313:21" pos:end="313:26"><expr pos:start="313:21" pos:end="313:26"><name pos:start="313:21" pos:end="313:26"><name pos:start="313:21" pos:end="313:21">s</name><operator pos:start="313:22" pos:end="313:23">-&gt;</operator><name pos:start="313:24" pos:end="313:26">con</name></name></expr></argument>, <argument pos:start="313:29" pos:end="313:30"><expr pos:start="313:29" pos:end="313:30"><operator pos:start="313:29" pos:end="313:29">-</operator><literal type="number" pos:start="313:30" pos:end="313:30">1</literal></expr></argument>, <argument pos:start="313:33" pos:end="313:34"><expr pos:start="313:33" pos:end="313:34"><operator pos:start="313:33" pos:end="313:33">-</operator><literal type="number" pos:start="313:34" pos:end="313:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:51"><expr pos:start="315:5" pos:end="315:50"><call pos:start="315:5" pos:end="315:50"><name pos:start="315:5" pos:end="315:19">dpy_text_resize</name><argument_list pos:start="315:20" pos:end="315:50">(<argument pos:start="315:21" pos:end="315:26"><expr pos:start="315:21" pos:end="315:26"><name pos:start="315:21" pos:end="315:26"><name pos:start="315:21" pos:end="315:21">s</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:26">con</name></name></expr></argument>, <argument pos:start="315:29" pos:end="315:41"><expr pos:start="315:29" pos:end="315:41"><name pos:start="315:29" pos:end="315:41"><name pos:start="315:29" pos:end="315:29">s</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:41">last_width</name></name></expr></argument>, <argument pos:start="315:44" pos:end="315:49"><expr pos:start="315:44" pos:end="315:49"><name pos:start="315:44" pos:end="315:49">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="319:5" pos:end="321:38">for <control pos:start="319:9" pos:end="319:65">(<init pos:start="319:10" pos:end="319:31"><expr pos:start="319:10" pos:end="319:23"><name pos:start="319:10" pos:end="319:12">dst</name> <operator pos:start="319:14" pos:end="319:14">=</operator> <name pos:start="319:16" pos:end="319:23">chardata</name></expr><operator pos:start="319:24" pos:end="319:24">,</operator> <expr pos:start="319:26" pos:end="319:30"><name pos:start="319:26" pos:end="319:26">i</name> <operator pos:start="319:28" pos:end="319:28">=</operator> <literal type="number" pos:start="319:30" pos:end="319:30">0</literal></expr>;</init> <condition pos:start="319:33" pos:end="319:59"><expr pos:start="319:33" pos:end="319:58"><name pos:start="319:33" pos:end="319:33">i</name> <operator pos:start="319:35" pos:end="319:35">&lt;</operator> <name pos:start="319:37" pos:end="319:49"><name pos:start="319:37" pos:end="319:37">s</name><operator pos:start="319:38" pos:end="319:39">-&gt;</operator><name pos:start="319:40" pos:end="319:49">last_width</name></name> <operator pos:start="319:51" pos:end="319:51">*</operator> <name pos:start="319:53" pos:end="319:58">height</name></expr>;</condition> <incr pos:start="319:61" pos:end="319:64"><expr pos:start="319:61" pos:end="319:64"><name pos:start="319:61" pos:end="319:61">i</name> <operator pos:start="319:63" pos:end="319:64">++</operator></expr></incr>)</control><block type="pseudo" pos:start="321:9" pos:end="321:38"><block_content pos:start="321:9" pos:end="321:38">

        <expr_stmt pos:start="321:9" pos:end="321:38"><expr pos:start="321:9" pos:end="321:37"><call pos:start="321:9" pos:end="321:37"><name pos:start="321:9" pos:end="321:24">console_write_ch</name><argument_list pos:start="321:25" pos:end="321:37">(<argument pos:start="321:26" pos:end="321:31"><expr pos:start="321:26" pos:end="321:31"><name pos:start="321:26" pos:end="321:28">dst</name> <operator pos:start="321:30" pos:end="321:31">++</operator></expr></argument>, <argument pos:start="321:34" pos:end="321:36"><expr pos:start="321:34" pos:end="321:36"><literal type="char" pos:start="321:34" pos:end="321:36">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="325:5" pos:end="325:30"><expr pos:start="325:5" pos:end="325:29"><name pos:start="325:5" pos:end="325:8">size</name> <operator pos:start="325:10" pos:end="325:10">=</operator> <call pos:start="325:12" pos:end="325:29"><name pos:start="325:12" pos:end="325:17">strlen</name><argument_list pos:start="325:18" pos:end="325:29">(<argument pos:start="325:19" pos:end="325:28"><expr pos:start="325:19" pos:end="325:28"><name pos:start="325:19" pos:end="325:28">msg_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:39"><expr pos:start="327:5" pos:end="327:38"><name pos:start="327:5" pos:end="327:9">width</name> <operator pos:start="327:11" pos:end="327:11">=</operator> <operator pos:start="327:13" pos:end="327:13">(</operator><name pos:start="327:14" pos:end="327:26"><name pos:start="327:14" pos:end="327:14">s</name><operator pos:start="327:15" pos:end="327:16">-&gt;</operator><name pos:start="327:17" pos:end="327:26">last_width</name></name> <operator pos:start="327:28" pos:end="327:28">-</operator> <name pos:start="327:30" pos:end="327:33">size</name><operator pos:start="327:34" pos:end="327:34">)</operator> <operator pos:start="327:36" pos:end="327:36">/</operator> <literal type="number" pos:start="327:38" pos:end="327:38">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:43"><expr pos:start="329:5" pos:end="329:42"><name pos:start="329:5" pos:end="329:7">dst</name> <operator pos:start="329:9" pos:end="329:9">=</operator> <name pos:start="329:11" pos:end="329:18">chardata</name> <operator pos:start="329:20" pos:end="329:20">+</operator> <name pos:start="329:22" pos:end="329:34"><name pos:start="329:22" pos:end="329:22">s</name><operator pos:start="329:23" pos:end="329:24">-&gt;</operator><name pos:start="329:25" pos:end="329:34">last_width</name></name> <operator pos:start="329:36" pos:end="329:36">+</operator> <name pos:start="329:38" pos:end="329:42">width</name></expr>;</expr_stmt>

    <for pos:start="331:5" pos:end="333:61">for <control pos:start="331:9" pos:end="331:31">(<init pos:start="331:10" pos:end="331:15"><expr pos:start="331:10" pos:end="331:14"><name pos:start="331:10" pos:end="331:10">i</name> <operator pos:start="331:12" pos:end="331:12">=</operator> <literal type="number" pos:start="331:14" pos:end="331:14">0</literal></expr>;</init> <condition pos:start="331:17" pos:end="331:25"><expr pos:start="331:17" pos:end="331:24"><name pos:start="331:17" pos:end="331:17">i</name> <operator pos:start="331:19" pos:end="331:19">&lt;</operator> <name pos:start="331:21" pos:end="331:24">size</name></expr>;</condition> <incr pos:start="331:27" pos:end="331:30"><expr pos:start="331:27" pos:end="331:30"><name pos:start="331:27" pos:end="331:27">i</name> <operator pos:start="331:29" pos:end="331:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="333:9" pos:end="333:61"><block_content pos:start="333:9" pos:end="333:61">

        <expr_stmt pos:start="333:9" pos:end="333:61"><expr pos:start="333:9" pos:end="333:60"><call pos:start="333:9" pos:end="333:60"><name pos:start="333:9" pos:end="333:24">console_write_ch</name><argument_list pos:start="333:25" pos:end="333:60">(<argument pos:start="333:26" pos:end="333:31"><expr pos:start="333:26" pos:end="333:31"><name pos:start="333:26" pos:end="333:28">dst</name> <operator pos:start="333:30" pos:end="333:31">++</operator></expr></argument>, <argument pos:start="333:34" pos:end="333:59"><expr pos:start="333:34" pos:end="333:59"><literal type="number" pos:start="333:34" pos:end="333:43">0x00200100</literal> <operator pos:start="333:45" pos:end="333:45">|</operator> <name pos:start="333:47" pos:end="333:59"><name pos:start="333:47" pos:end="333:56">msg_buffer</name><index pos:start="333:57" pos:end="333:59">[<expr pos:start="333:58" pos:end="333:58"><name pos:start="333:58" pos:end="333:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="337:5" pos:end="337:57"><expr pos:start="337:5" pos:end="337:56"><call pos:start="337:5" pos:end="337:56"><name pos:start="337:5" pos:end="337:19">dpy_text_update</name><argument_list pos:start="337:20" pos:end="337:56">(<argument pos:start="337:21" pos:end="337:26"><expr pos:start="337:21" pos:end="337:26"><name pos:start="337:21" pos:end="337:26"><name pos:start="337:21" pos:end="337:21">s</name><operator pos:start="337:22" pos:end="337:23">-&gt;</operator><name pos:start="337:24" pos:end="337:26">con</name></name></expr></argument>, <argument pos:start="337:29" pos:end="337:29"><expr pos:start="337:29" pos:end="337:29"><literal type="number" pos:start="337:29" pos:end="337:29">0</literal></expr></argument>, <argument pos:start="337:32" pos:end="337:32"><expr pos:start="337:32" pos:end="337:32"><literal type="number" pos:start="337:32" pos:end="337:32">0</literal></expr></argument>, <argument pos:start="337:35" pos:end="337:47"><expr pos:start="337:35" pos:end="337:47"><name pos:start="337:35" pos:end="337:47"><name pos:start="337:35" pos:end="337:35">s</name><operator pos:start="337:36" pos:end="337:37">-&gt;</operator><name pos:start="337:38" pos:end="337:47">last_width</name></name></expr></argument>, <argument pos:start="337:50" pos:end="337:55"><expr pos:start="337:50" pos:end="337:55"><name pos:start="337:50" pos:end="337:55">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
