<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19143.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">tcg_match_xori</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:33">TCGType</name></type> <name pos:start="1:35" pos:end="1:38">type</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:59"><name pos:start="1:41" pos:end="1:55">tcg_target_long</name></type> <name pos:start="1:57" pos:end="1:59">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:50">(<expr pos:start="5:9" pos:end="5:49"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:24">s390_facilities</name> <operator pos:start="5:26" pos:end="5:26">&amp;</operator> <name pos:start="5:28" pos:end="5:43">FACILITY_EXT_IMM</name><operator pos:start="5:44" pos:end="5:44">)</operator> <operator pos:start="5:46" pos:end="5:47">==</operator> <literal type="number" pos:start="5:49" pos:end="5:49">0</literal></expr>)</condition> <block pos:start="5:52" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:17">

        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:12">type</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:28">TCG_TYPE_I32</name></expr>)</condition> <block pos:start="13:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <comment type="block" pos:start="15:9" pos:end="15:67">/* All 32-bit XORs can be performed with 1 48-bit insn.  */</comment>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:71">/* Look for negative values.  These are best to load with LGHI.  */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:11">val</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal> <operator pos:start="25:17" pos:end="25:18">&amp;&amp;</operator> <name pos:start="25:20" pos:end="25:22">val</name> <operator pos:start="25:24" pos:end="25:25">==</operator> <operator pos:start="25:27" pos:end="25:27">(</operator><name pos:start="25:28" pos:end="25:34">int32_t</name><operator pos:start="25:35" pos:end="25:35">)</operator><name pos:start="25:36" pos:end="25:38">val</name></expr>)</condition> <block pos:start="25:41" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
