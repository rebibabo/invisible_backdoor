<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6909.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:51">dvbsub_parse_display_definition_segment</name><parameter_list pos:start="1:52" pos:end="5:65">(<parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:66">AVCodecContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">avctx</name></decl></parameter>,

                                                    <parameter pos:start="3:53" pos:end="3:70"><decl pos:start="3:53" pos:end="3:70"><type pos:start="3:53" pos:end="3:70"><specifier pos:start="3:53" pos:end="3:57">const</specifier> <name pos:start="3:59" pos:end="3:65">uint8_t</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:70">buf</name></decl></parameter>,

                                                    <parameter pos:start="5:53" pos:end="5:64"><decl pos:start="5:53" pos:end="5:64"><type pos:start="5:53" pos:end="5:64"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="77:1">{<block_content pos:start="9:5" pos:end="75:5">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">DVBSubContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ctx</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:67"><decl pos:start="11:5" pos:end="11:66"><type pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:27">DVBSubDisplayDefinition</name> <modifier pos:start="11:29" pos:end="11:29">*</modifier></type><name pos:start="11:30" pos:end="11:40">display_def</name> <init pos:start="11:42" pos:end="11:66">= <expr pos:start="11:44" pos:end="11:66"><name pos:start="11:44" pos:end="11:66"><name pos:start="11:44" pos:end="11:46">ctx</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:66">display_definition</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">dds_version</name></decl>, <decl pos:start="13:22" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:30">info_byte</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:16">buf_size</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <literal type="number" pos:start="17:20" pos:end="17:20">5</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:13">info_byte</name>   <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:43"><name pos:start="23:19" pos:end="23:37">bytestream_get_byte</name><argument_list pos:start="23:38" pos:end="23:43">(<argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:42">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:15">dds_version</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:27">info_byte</name> <operator pos:start="25:29" pos:end="25:30">&gt;&gt;</operator> <literal type="number" pos:start="25:32" pos:end="25:32">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:15"><if pos:start="27:5" pos:end="29:15">if <condition pos:start="27:8" pos:end="27:59">(<expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:19">display_def</name> <operator pos:start="27:21" pos:end="27:22">&amp;&amp;</operator> <name pos:start="27:24" pos:end="27:43"><name pos:start="27:24" pos:end="27:34">display_def</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:43">version</name></name> <operator pos:start="27:45" pos:end="27:46">==</operator> <name pos:start="27:48" pos:end="27:58">dds_version</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:15"><block_content pos:start="29:9" pos:end="29:15">

        <return pos:start="29:9" pos:end="29:15">return;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="29:17" pos:end="29:63">// already have this display definition version</comment>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:20">display_def</name></expr>)</condition> <block pos:start="33:23" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:46">

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:19">display_def</name>             <operator pos:start="35:33" pos:end="35:33">=</operator> <call pos:start="35:35" pos:end="35:66"><name pos:start="35:35" pos:end="35:44">av_mallocz</name><argument_list pos:start="35:45" pos:end="35:66">(<argument pos:start="35:46" pos:end="35:65"><expr pos:start="35:46" pos:end="35:65"><sizeof pos:start="35:46" pos:end="35:65">sizeof<argument_list pos:start="35:52" pos:end="35:65">(<argument pos:start="35:53" pos:end="35:64"><expr pos:start="35:53" pos:end="35:64"><operator pos:start="35:53" pos:end="35:53">*</operator><name pos:start="35:54" pos:end="35:64">display_def</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:11">ctx</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:31">display_definition</name></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <name pos:start="37:35" pos:end="37:45">display_def</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:15"><if pos:start="41:5" pos:end="43:15">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:20">display_def</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:15"><block_content pos:start="43:9" pos:end="43:15">

        <return pos:start="43:9" pos:end="43:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:15">display_def</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:24">version</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:38">dds_version</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:15">display_def</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:18">x</name></name>       <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:15">display_def</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:18">y</name></name>       <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:57"><expr pos:start="53:5" pos:end="53:56"><name pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:15">display_def</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:22">width</name></name>   <operator pos:start="53:26" pos:end="53:26">=</operator> <call pos:start="53:28" pos:end="53:52"><name pos:start="53:28" pos:end="53:46">bytestream_get_be16</name><argument_list pos:start="53:47" pos:end="53:52">(<argument pos:start="53:48" pos:end="53:51"><expr pos:start="53:48" pos:end="53:51"><operator pos:start="53:48" pos:end="53:48">&amp;</operator><name pos:start="53:49" pos:end="53:51">buf</name></expr></argument>)</argument_list></call> <operator pos:start="53:54" pos:end="53:54">+</operator> <literal type="number" pos:start="53:56" pos:end="53:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:57"><expr pos:start="55:5" pos:end="55:56"><name pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:15">display_def</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:23">height</name></name>  <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:52"><name pos:start="55:28" pos:end="55:46">bytestream_get_be16</name><argument_list pos:start="55:47" pos:end="55:52">(<argument pos:start="55:48" pos:end="55:51"><expr pos:start="55:48" pos:end="55:51"><operator pos:start="55:48" pos:end="55:48">&amp;</operator><name pos:start="55:49" pos:end="55:51">buf</name></expr></argument>)</argument_list></call> <operator pos:start="55:54" pos:end="55:54">+</operator> <literal type="number" pos:start="55:56" pos:end="55:56">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="61:15"><if pos:start="59:5" pos:end="61:15">if <condition pos:start="59:8" pos:end="59:22">(<expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:16">buf_size</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <literal type="number" pos:start="59:20" pos:end="59:21">13</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:15"><block_content pos:start="61:9" pos:end="61:15">

        <return pos:start="61:9" pos:end="61:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:25">(<expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:17">info_byte</name> <operator pos:start="65:19" pos:end="65:19">&amp;</operator> <literal type="number" pos:start="65:21" pos:end="65:21">1</literal><operator pos:start="65:22" pos:end="65:23">&lt;&lt;</operator><literal type="number" pos:start="65:24" pos:end="65:24">3</literal></expr>)</condition> <block pos:start="65:27" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:77"> <comment type="line" pos:start="65:29" pos:end="65:50">// display_window_flag</comment>

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:19">display_def</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:22">x</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <call pos:start="67:26" pos:end="67:50"><name pos:start="67:26" pos:end="67:44">bytestream_get_be16</name><argument_list pos:start="67:45" pos:end="67:50">(<argument pos:start="67:46" pos:end="67:49"><expr pos:start="67:46" pos:end="67:49"><operator pos:start="67:46" pos:end="67:46">&amp;</operator><name pos:start="67:47" pos:end="67:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:51"><expr pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:19">display_def</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:22">y</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:50"><name pos:start="69:26" pos:end="69:44">bytestream_get_be16</name><argument_list pos:start="69:45" pos:end="69:50">(<argument pos:start="69:46" pos:end="69:49"><expr pos:start="69:46" pos:end="69:49"><operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:77"><expr pos:start="71:9" pos:end="71:76"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:19">display_def</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:26">width</name></name>  <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:55"><name pos:start="71:31" pos:end="71:49">bytestream_get_be16</name><argument_list pos:start="71:50" pos:end="71:55">(<argument pos:start="71:51" pos:end="71:54"><expr pos:start="71:51" pos:end="71:54"><operator pos:start="71:51" pos:end="71:51">&amp;</operator><name pos:start="71:52" pos:end="71:54">buf</name></expr></argument>)</argument_list></call> <operator pos:start="71:57" pos:end="71:57">-</operator> <name pos:start="71:59" pos:end="71:72"><name pos:start="71:59" pos:end="71:69">display_def</name><operator pos:start="71:70" pos:end="71:71">-&gt;</operator><name pos:start="71:72" pos:end="71:72">x</name></name> <operator pos:start="71:74" pos:end="71:74">+</operator> <literal type="number" pos:start="71:76" pos:end="71:76">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:77"><expr pos:start="73:9" pos:end="73:76"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:19">display_def</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:27">height</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <call pos:start="73:31" pos:end="73:55"><name pos:start="73:31" pos:end="73:49">bytestream_get_be16</name><argument_list pos:start="73:50" pos:end="73:55">(<argument pos:start="73:51" pos:end="73:54"><expr pos:start="73:51" pos:end="73:54"><operator pos:start="73:51" pos:end="73:51">&amp;</operator><name pos:start="73:52" pos:end="73:54">buf</name></expr></argument>)</argument_list></call> <operator pos:start="73:57" pos:end="73:57">-</operator> <name pos:start="73:59" pos:end="73:72"><name pos:start="73:59" pos:end="73:69">display_def</name><operator pos:start="73:70" pos:end="73:71">-&gt;</operator><name pos:start="73:72" pos:end="73:72">y</name></name> <operator pos:start="73:74" pos:end="73:74">+</operator> <literal type="number" pos:start="73:76" pos:end="73:76">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
