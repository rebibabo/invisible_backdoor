<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19146.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:37"><name pos:start="1:1" pos:end="1:21">matroska_ebmlnum_uint</name> <argument_list pos:start="1:23" pos:end="5:37">(<argument pos:start="1:24" pos:end="1:37">uint8_t  *data</argument>,

                       <argument pos:start="3:24" pos:end="3:37">uint32_t  size</argument>,

                       <argument pos:start="5:24" pos:end="5:36">uint64_t *num</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="77:1">{<block_content pos:start="9:5" pos:end="75:16">

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">len_mask</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><literal type="number" pos:start="9:20" pos:end="9:23">0x80</literal></expr></init></decl>, <decl pos:start="9:26" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:29">read</name> <init pos:start="9:31" pos:end="9:33">= <expr pos:start="9:33" pos:end="9:33"><literal type="number" pos:start="9:33" pos:end="9:33">1</literal></expr></init></decl>, <decl pos:start="9:36" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:36" pos:end="9:36">n</name> <init pos:start="9:38" pos:end="9:40">= <expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">1</literal></expr></init></decl>, <decl pos:start="9:43" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:49">num_ffs</name> <init pos:start="9:51" pos:end="9:53">= <expr pos:start="9:53" pos:end="9:53"><literal type="number" pos:start="9:53" pos:end="9:53">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:18">total</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">size</name> <operator pos:start="15:14" pos:end="15:15">&lt;=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:9">total</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">data</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="29:5">while <condition pos:start="23:11" pos:end="23:44">(<expr pos:start="23:12" pos:end="23:43"><name pos:start="23:12" pos:end="23:15">read</name> <operator pos:start="23:17" pos:end="23:18">&lt;=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">8</literal> <operator pos:start="23:22" pos:end="23:23">&amp;&amp;</operator> <operator pos:start="23:25" pos:end="23:25">!</operator><operator pos:start="23:26" pos:end="23:26">(</operator><name pos:start="23:27" pos:end="23:31">total</name> <operator pos:start="23:33" pos:end="23:33">&amp;</operator> <name pos:start="23:35" pos:end="23:42">len_mask</name><operator pos:start="23:43" pos:end="23:43">)</operator></expr>)</condition> <block pos:start="23:46" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:23">

        <expr_stmt pos:start="25:9" pos:end="25:15"><expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:12">read</name><operator pos:start="25:13" pos:end="25:14">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:16">len_mask</name> <operator pos:start="27:18" pos:end="27:20">&gt;&gt;=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:12">read</name> <operator pos:start="31:14" pos:end="31:14">&gt;</operator> <literal type="number" pos:start="31:16" pos:end="31:16">8</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:50">(<expr pos:start="37:9" pos:end="37:49"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:14">total</name> <operator pos:start="37:16" pos:end="37:17">&amp;=</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:27">len_mask</name> <operator pos:start="37:29" pos:end="37:29">-</operator> <literal type="number" pos:start="37:31" pos:end="37:31">1</literal><operator pos:start="37:32" pos:end="37:32">)</operator><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:36">==</operator> <name pos:start="37:38" pos:end="37:45">len_mask</name> <operator pos:start="37:47" pos:end="37:47">-</operator> <literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:15">num_ffs</name><operator pos:start="39:16" pos:end="39:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:35"><if pos:start="41:5" pos:end="43:35">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:12">size</name> <operator pos:start="41:14" pos:end="41:14">&lt;</operator> <name pos:start="41:16" pos:end="41:19">read</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:35"><block_content pos:start="43:9" pos:end="43:35">

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="45:5" pos:end="55:5">while <condition pos:start="45:11" pos:end="45:20">(<expr pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:12">n</name> <operator pos:start="45:14" pos:end="45:14">&lt;</operator> <name pos:start="45:16" pos:end="45:19">read</name></expr>)</condition> <block pos:start="45:22" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:12">

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:28">(<expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:16">data</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><name pos:start="47:18" pos:end="47:18">n</name></expr>]</index></name> <operator pos:start="47:21" pos:end="47:22">==</operator> <literal type="number" pos:start="47:24" pos:end="47:27">0xff</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:22"><block_content pos:start="49:13" pos:end="49:22">

            <expr_stmt pos:start="49:13" pos:end="49:22"><expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:19">num_ffs</name><operator pos:start="49:20" pos:end="49:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:13">total</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <operator pos:start="51:17" pos:end="51:17">(</operator><name pos:start="51:18" pos:end="51:22">total</name> <operator pos:start="51:24" pos:end="51:25">&lt;&lt;</operator> <literal type="number" pos:start="51:27" pos:end="51:27">8</literal><operator pos:start="51:28" pos:end="51:28">)</operator> <operator pos:start="51:30" pos:end="51:30">|</operator> <name pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:35">data</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">n</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">n</name><operator pos:start="53:10" pos:end="53:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="59:5" pos:end="61:35"><if pos:start="59:5" pos:end="61:35">if <condition pos:start="59:8" pos:end="59:15">(<expr pos:start="59:9" pos:end="59:14"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:14">total</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:35"><block_content pos:start="61:9" pos:end="61:35">

        <return pos:start="61:9" pos:end="61:35">return <expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="71:21"><if pos:start="65:5" pos:end="67:28">if <condition pos:start="65:8" pos:end="65:24">(<expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:12">read</name> <operator pos:start="65:14" pos:end="65:15">==</operator> <name pos:start="65:17" pos:end="65:23">num_ffs</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:28"><block_content pos:start="67:9" pos:end="67:28">

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:12">num</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <operator pos:start="67:16" pos:end="67:16">(</operator><name pos:start="67:17" pos:end="67:24">uint64_t</name><operator pos:start="67:25" pos:end="67:25">)</operator><operator pos:start="67:26" pos:end="67:26">-</operator><literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="69:5" pos:end="71:21">else<block type="pseudo" pos:start="71:9" pos:end="71:21"><block_content pos:start="71:9" pos:end="71:21">

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:12">num</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <name pos:start="71:16" pos:end="71:20">total</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="75:5" pos:end="75:16">return <expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">read</name></expr>;</return>

</block_content>}</block>
</unit>
