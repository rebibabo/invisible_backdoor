<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12700.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">nvdimm_build_ssdt</name><parameter_list pos:start="1:30" pos:end="3:65">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:36">GSList</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:49">device_list</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><name pos:start="1:52" pos:end="1:57">GArray</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:72">table_offsets</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:36">GArray</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:48">table_data</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:64"><decl pos:start="3:51" pos:end="3:64"><type pos:start="3:51" pos:end="3:64"><name pos:start="3:51" pos:end="3:56">GArray</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:64">linker</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:25">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">Aml</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:13">ssdt</name></decl>, <decl pos:start="7:16" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:9"><modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">sb_scope</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:9"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">dev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><call pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:18">acpi_add_table</name><argument_list pos:start="11:19" pos:end="11:45">(<argument pos:start="11:20" pos:end="11:32"><expr pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:32">table_offsets</name></expr></argument>, <argument pos:start="11:35" pos:end="11:44"><expr pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:44">table_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:8">ssdt</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:31"><name pos:start="15:12" pos:end="15:29">init_aml_allocator</name><argument_list pos:start="15:30" pos:end="15:31">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><call pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:18">acpi_data_push</name><argument_list pos:start="17:19" pos:end="17:54">(<argument pos:start="17:20" pos:end="17:28"><expr pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:23">ssdt</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:28">buf</name></name></expr></argument>, <argument pos:start="17:31" pos:end="17:53"><expr pos:start="17:31" pos:end="17:53"><sizeof pos:start="17:31" pos:end="17:53">sizeof<argument_list pos:start="17:37" pos:end="17:53">(<argument pos:start="17:38" pos:end="17:52"><expr pos:start="17:38" pos:end="17:52"><name pos:start="17:38" pos:end="17:52">AcpiTableHeader</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:12">sb_scope</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:33"><name pos:start="21:16" pos:end="21:24">aml_scope</name><argument_list pos:start="21:25" pos:end="21:33">(<argument pos:start="21:26" pos:end="21:32"><expr pos:start="21:26" pos:end="21:32"><literal type="string" pos:start="21:26" pos:end="21:32">"\\_SB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:7">dev</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:28"><name pos:start="25:11" pos:end="25:20">aml_device</name><argument_list pos:start="25:21" pos:end="25:28">(<argument pos:start="25:22" pos:end="25:27"><expr pos:start="25:22" pos:end="25:27"><literal type="string" pos:start="25:22" pos:end="25:27">"NVDR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="49:7">/*

     * ACPI 6.0: 9.20 NVDIMM Devices:

     *

     * The ACPI Name Space device uses _HID of ACPI0012 to identify the root

     * NVDIMM interface device. Platform firmware is required to contain one

     * such device in _SB scope if NVDIMMs support is exposed by platform to

     * OSPM.

     * For each NVDIMM present or intended to be supported by platform,

     * platform firmware also exposes an ACPI Namespace Device under the

     * root device.

     */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:67"><expr pos:start="51:5" pos:end="51:66"><call pos:start="51:5" pos:end="51:66"><name pos:start="51:5" pos:end="51:14">aml_append</name><argument_list pos:start="51:15" pos:end="51:66">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">dev</name></expr></argument>, <argument pos:start="51:21" pos:end="51:65"><expr pos:start="51:21" pos:end="51:65"><call pos:start="51:21" pos:end="51:65"><name pos:start="51:21" pos:end="51:33">aml_name_decl</name><argument_list pos:start="51:34" pos:end="51:65">(<argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><literal type="string" pos:start="51:35" pos:end="51:40">"_HID"</literal></expr></argument>, <argument pos:start="51:43" pos:end="51:64"><expr pos:start="51:43" pos:end="51:64"><call pos:start="51:43" pos:end="51:64"><name pos:start="51:43" pos:end="51:52">aml_string</name><argument_list pos:start="51:53" pos:end="51:64">(<argument pos:start="51:54" pos:end="51:63"><expr pos:start="51:54" pos:end="51:63"><literal type="string" pos:start="51:54" pos:end="51:63">"ACPI0012"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><call pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:27">nvdimm_build_common_dsm</name><argument_list pos:start="55:28" pos:end="55:32">(<argument pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:27">nvdimm_build_device_dsm</name><argument_list pos:start="57:28" pos:end="57:32">(<argument pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:50"><expr pos:start="61:5" pos:end="61:49"><call pos:start="61:5" pos:end="61:49"><name pos:start="61:5" pos:end="61:31">nvdimm_build_nvdimm_devices</name><argument_list pos:start="61:32" pos:end="61:49">(<argument pos:start="61:33" pos:end="61:43"><expr pos:start="61:33" pos:end="61:43"><name pos:start="61:33" pos:end="61:43">device_list</name></expr></argument>, <argument pos:start="61:46" pos:end="61:48"><expr pos:start="61:46" pos:end="61:48"><name pos:start="61:46" pos:end="61:48">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><call pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:14">aml_append</name><argument_list pos:start="65:15" pos:end="65:29">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23">sb_scope</name></expr></argument>, <argument pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><call pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:14">aml_append</name><argument_list pos:start="69:15" pos:end="69:30">(<argument pos:start="69:16" pos:end="69:19"><expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">ssdt</name></expr></argument>, <argument pos:start="69:22" pos:end="69:29"><expr pos:start="69:22" pos:end="69:29"><name pos:start="69:22" pos:end="69:29">sb_scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="71:5" pos:end="71:69">/* copy AML table into ACPI tables blob and patch header there */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:69"><expr pos:start="73:5" pos:end="73:68"><call pos:start="73:5" pos:end="73:68"><name pos:start="73:5" pos:end="73:23">g_array_append_vals</name><argument_list pos:start="73:24" pos:end="73:68">(<argument pos:start="73:25" pos:end="73:34"><expr pos:start="73:25" pos:end="73:34"><name pos:start="73:25" pos:end="73:34">table_data</name></expr></argument>, <argument pos:start="73:37" pos:end="73:51"><expr pos:start="73:37" pos:end="73:51"><name pos:start="73:37" pos:end="73:51"><name pos:start="73:37" pos:end="73:40">ssdt</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:45">buf</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:51">data</name></name></expr></argument>, <argument pos:start="73:54" pos:end="73:67"><expr pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:57">ssdt</name><operator pos:start="73:58" pos:end="73:59">-&gt;</operator><name pos:start="73:60" pos:end="73:62">buf</name><operator pos:start="73:63" pos:end="73:64">-&gt;</operator><name pos:start="73:65" pos:end="73:67">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="79:45"><expr pos:start="75:5" pos:end="79:44"><call pos:start="75:5" pos:end="79:44"><name pos:start="75:5" pos:end="75:16">build_header</name><argument_list pos:start="75:17" pos:end="79:44">(<argument pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:23"><name pos:start="75:18" pos:end="75:23">linker</name></expr></argument>, <argument pos:start="75:26" pos:end="75:35"><expr pos:start="75:26" pos:end="75:35"><name pos:start="75:26" pos:end="75:35">table_data</name></expr></argument>,

        <argument pos:start="77:9" pos:end="77:69"><expr pos:start="77:9" pos:end="77:69"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:13">void</name> <operator pos:start="77:15" pos:end="77:15">*</operator><operator pos:start="77:16" pos:end="77:16">)</operator><operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:33"><name pos:start="77:18" pos:end="77:27">table_data</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:33">data</name></name> <operator pos:start="77:35" pos:end="77:35">+</operator> <name pos:start="77:37" pos:end="77:51"><name pos:start="77:37" pos:end="77:46">table_data</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:51">len</name></name> <operator pos:start="77:53" pos:end="77:53">-</operator> <name pos:start="77:55" pos:end="77:68"><name pos:start="77:55" pos:end="77:58">ssdt</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:63">buf</name><operator pos:start="77:64" pos:end="77:65">-&gt;</operator><name pos:start="77:66" pos:end="77:68">len</name></name><operator pos:start="77:69" pos:end="77:69">)</operator></expr></argument>,

        <argument pos:start="79:9" pos:end="79:14"><expr pos:start="79:9" pos:end="79:14"><literal type="string" pos:start="79:9" pos:end="79:14">"SSDT"</literal></expr></argument>, <argument pos:start="79:17" pos:end="79:30"><expr pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:20">ssdt</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:25">buf</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:30">len</name></name></expr></argument>, <argument pos:start="79:33" pos:end="79:33"><expr pos:start="79:33" pos:end="79:33"><literal type="number" pos:start="79:33" pos:end="79:33">1</literal></expr></argument>, <argument pos:start="79:36" pos:end="79:43"><expr pos:start="79:36" pos:end="79:43"><literal type="string" pos:start="79:36" pos:end="79:43">"NVDIMM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:25"><expr pos:start="81:5" pos:end="81:24"><call pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:22">free_aml_allocator</name><argument_list pos:start="81:23" pos:end="81:24">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
