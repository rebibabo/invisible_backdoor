<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19922.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">handle_packets</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:39">MpegTSContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ts</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:59">nb_packets</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:15">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:35">= <expr pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:27">ts</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">stream</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:34"><name pos:start="7:13" pos:end="7:18">packet</name><index pos:start="7:19" pos:end="7:34">[<expr pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:33">TS_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">packet_num</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">ret</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="39:5"><if pos:start="13:5" pos:end="39:5">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:17">avio_tell</name><argument_list pos:start="13:18" pos:end="13:24">(<argument pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:26" pos:end="13:27">!=</operator> <name pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:30">ts</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">last_pos</name></name></expr>)</condition> <block pos:start="13:43" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:9">

        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:41"><expr pos:start="17:9" pos:end="17:40"><call pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:15">av_dlog</name><argument_list pos:start="17:16" pos:end="17:40">(<argument pos:start="17:17" pos:end="17:39"><expr pos:start="17:17" pos:end="17:39"><literal type="string" pos:start="17:17" pos:end="17:39">"Skipping after seek\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="19:9" pos:end="19:45">/* seek detected, flush pes buffer */</comment>

        <for pos:start="21:9" pos:end="37:9">for <control pos:start="21:13" pos:end="21:40">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:35"><expr pos:start="21:21" pos:end="21:34"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:34">NB_PID_MAX</name></expr>;</condition> <incr pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:37">i</name><operator pos:start="21:38" pos:end="21:39">++</operator></expr></incr>)</control> <block pos:start="21:42" pos:end="37:9">{<block_content pos:start="23:13" pos:end="35:13">

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="35:13">if <condition pos:start="23:16" pos:end="23:63">(<expr pos:start="23:17" pos:end="23:62"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:18">ts</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:24">pids</name><index pos:start="23:25" pos:end="23:27">[<expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">i</name></expr>]</index></name> <operator pos:start="23:29" pos:end="23:30">&amp;&amp;</operator> <name pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:33">ts</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:39">pids</name><index pos:start="23:40" pos:end="23:42">[<expr pos:start="23:41" pos:end="23:41"><name pos:start="23:41" pos:end="23:41">i</name></expr>]</index></name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:48">type</name> <operator pos:start="23:50" pos:end="23:51">==</operator> <name pos:start="23:53" pos:end="23:62">MPEGTS_PES</name></expr>)</condition> <block pos:start="23:65" pos:end="35:13">{<block_content pos:start="25:17" pos:end="33:41">

                <decl_stmt pos:start="25:17" pos:end="25:67"><decl pos:start="25:17" pos:end="25:66"><type pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:26">PESContext</name> <modifier pos:start="25:28" pos:end="25:28">*</modifier></type><name pos:start="25:29" pos:end="25:31">pes</name> <init pos:start="25:33" pos:end="25:66">= <expr pos:start="25:35" pos:end="25:66"><name pos:start="25:35" pos:end="25:45"><name pos:start="25:35" pos:end="25:36">ts</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:42">pids</name><index pos:start="25:43" pos:end="25:45">[<expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">i</name></expr>]</index></name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:66"><name pos:start="25:48" pos:end="25:48">u</name><operator pos:start="25:49" pos:end="25:49">.</operator><name pos:start="25:50" pos:end="25:59">pes_filter</name><operator pos:start="25:60" pos:end="25:60">.</operator><name pos:start="25:61" pos:end="25:66">opaque</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:39"><expr pos:start="27:17" pos:end="27:38"><call pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:24">av_freep</name><argument_list pos:start="27:25" pos:end="27:38">(<argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:37"><name pos:start="27:27" pos:end="27:29">pes</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:37">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:42"><expr pos:start="29:17" pos:end="29:41"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:18">ts</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:24">pids</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">i</name></expr>]</index></name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:36">last_cc</name> <operator pos:start="29:38" pos:end="29:38">=</operator> <operator pos:start="29:40" pos:end="29:40">-</operator><literal type="number" pos:start="29:41" pos:end="29:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:31"><name pos:start="31:17" pos:end="31:19">pes</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:31">data_index</name></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:41"><expr pos:start="33:17" pos:end="33:40"><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:19">pes</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:26">state</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:40">MPEGTS_SKIP</name></expr>;</expr_stmt> <comment type="block" pos:start="33:43" pos:end="33:69">/* skip until pes header */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:6">ts</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:18">stop_parse</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:14">packet_num</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="71:5">for<control pos:start="47:8" pos:end="47:11">(<init pos:start="47:9" pos:end="47:9">;</init><condition pos:start="47:10" pos:end="47:10">;</condition><incr/>)</control> <block pos:start="47:13" pos:end="71:5">{<block_content pos:start="49:9" pos:end="69:18">

        <if_stmt pos:start="49:9" pos:end="51:18"><if pos:start="49:9" pos:end="51:18">if <condition pos:start="49:12" pos:end="49:29">(<expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:14">ts</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:26">stop_parse</name></name><operator pos:start="49:27" pos:end="49:27">&gt;</operator><literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:18"><block_content pos:start="51:13" pos:end="51:18">

            <break pos:start="51:13" pos:end="51:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:18">packet_num</name><operator pos:start="53:19" pos:end="53:20">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:18"><if pos:start="55:9" pos:end="57:18">if <condition pos:start="55:12" pos:end="55:56">(<expr pos:start="55:13" pos:end="55:55"><name pos:start="55:13" pos:end="55:22">nb_packets</name> <operator pos:start="55:24" pos:end="55:25">!=</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <name pos:start="55:32" pos:end="55:41">packet_num</name> <operator pos:start="55:43" pos:end="55:44">&gt;=</operator> <name pos:start="55:46" pos:end="55:55">nb_packets</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:18"><block_content pos:start="57:13" pos:end="57:18">

            <break pos:start="57:13" pos:end="57:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:57"><name pos:start="59:15" pos:end="59:25">read_packet</name><argument_list pos:start="59:26" pos:end="59:57">(<argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">s</name></expr></argument>, <argument pos:start="59:30" pos:end="59:35"><expr pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:35">packet</name></expr></argument>, <argument pos:start="59:38" pos:end="59:56"><expr pos:start="59:38" pos:end="59:56"><name pos:start="59:38" pos:end="59:56"><name pos:start="59:38" pos:end="59:39">ts</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:56">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:18"><if pos:start="61:9" pos:end="63:18">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:18">!=</operator> <literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:18"><block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:39"><name pos:start="65:15" pos:end="65:27">handle_packet</name><argument_list pos:start="65:28" pos:end="65:39">(<argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><name pos:start="65:29" pos:end="65:30">ts</name></expr></argument>, <argument pos:start="65:33" pos:end="65:38"><expr pos:start="65:33" pos:end="65:38"><name pos:start="65:33" pos:end="65:38">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:18"><if pos:start="67:9" pos:end="69:18">if <condition pos:start="67:12" pos:end="67:21">(<expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:18">!=</operator> <literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:18"><block_content pos:start="69:13" pos:end="69:18">

            <break pos:start="69:13" pos:end="69:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:6">ts</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:16">last_pos</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:35"><name pos:start="73:20" pos:end="73:28">avio_tell</name><argument_list pos:start="73:29" pos:end="73:35">(<argument pos:start="73:30" pos:end="73:34"><expr pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:15">return <expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
