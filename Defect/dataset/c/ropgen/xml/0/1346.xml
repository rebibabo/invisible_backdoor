<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1346.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">read_decoding_params</name><parameter_list pos:start="1:32" pos:end="3:52">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:48">MLPDecodeContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">m</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:66">GetBitContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">gbp</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:40">unsigned</name> <name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:51">substr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SubStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:21">m</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">substream</name><index pos:start="7:33" pos:end="7:40">[<expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">substr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:19">ch</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:51"><if pos:start="13:5" pos:end="17:51">if <condition pos:start="13:8" pos:end="13:49">(<expr pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:31">param_presence_flags</name></name> <operator pos:start="13:33" pos:end="13:33">&amp;</operator> <name pos:start="13:35" pos:end="13:48">PARAM_PRESENCE</name></expr>)</condition><block type="pseudo" pos:start="15:5" pos:end="17:51"><block_content pos:start="15:5" pos:end="17:51">

    <if_stmt pos:start="15:5" pos:end="17:51"><if pos:start="15:5" pos:end="17:51">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><call pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:17">get_bits1</name><argument_list pos:start="15:18" pos:end="15:22">(<argument pos:start="15:19" pos:end="15:21"><expr pos:start="15:19" pos:end="15:21"><name pos:start="15:19" pos:end="15:21">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:51"><block_content pos:start="17:9" pos:end="17:51">

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:31">param_presence_flags</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <call pos:start="17:35" pos:end="17:50"><name pos:start="17:35" pos:end="17:42">get_bits</name><argument_list pos:start="17:43" pos:end="17:50">(<argument pos:start="17:44" pos:end="17:46"><expr pos:start="17:44" pos:end="17:46"><name pos:start="17:44" pos:end="17:46">gbp</name></expr></argument>, <argument pos:start="17:49" pos:end="17:49"><expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="37:9"><if pos:start="21:5" pos:end="37:9">if <condition pos:start="21:8" pos:end="21:50">(<expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:31">param_presence_flags</name></name> <operator pos:start="21:33" pos:end="21:33">&amp;</operator> <name pos:start="21:35" pos:end="21:49">PARAM_BLOCKSIZE</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="37:9"><block_content pos:start="23:9" pos:end="37:9">

        <if_stmt pos:start="23:9" pos:end="37:9"><if pos:start="23:9" pos:end="37:9">if <condition pos:start="23:12" pos:end="23:27">(<expr pos:start="23:13" pos:end="23:26"><call pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:21">get_bits1</name><argument_list pos:start="23:22" pos:end="23:26">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:29" pos:end="37:9">{<block_content pos:start="25:13" pos:end="35:13">

            <expr_stmt pos:start="25:13" pos:end="25:44"><expr pos:start="25:13" pos:end="25:43"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">blocksize</name></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:35">get_bits</name><argument_list pos:start="25:36" pos:end="25:43">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">gbp</name></expr></argument>, <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="35:13"><if pos:start="27:13" pos:end="35:13">if <condition pos:start="27:16" pos:end="27:45">(<expr pos:start="27:17" pos:end="27:44"><name pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:28">blocksize</name></name> <operator pos:start="27:30" pos:end="27:30">&gt;</operator> <name pos:start="27:32" pos:end="27:44">MAX_BLOCKSIZE</name></expr>)</condition> <block pos:start="27:47" pos:end="35:13">{<block_content pos:start="29:17" pos:end="33:26">

                <expr_stmt pos:start="29:17" pos:end="29:73"><expr pos:start="29:17" pos:end="29:72"><call pos:start="29:17" pos:end="29:72"><name pos:start="29:17" pos:end="29:22">av_log</name><argument_list pos:start="29:23" pos:end="29:72">(<argument pos:start="29:24" pos:end="29:31"><expr pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:24">m</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">avctx</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:45"><expr pos:start="29:34" pos:end="29:45"><name pos:start="29:34" pos:end="29:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:48" pos:end="29:71"><expr pos:start="29:48" pos:end="29:71"><literal type="string" pos:start="29:48" pos:end="29:71">"block size too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:33"><expr pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:28">blocksize</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr>;</expr_stmt>

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="49:9"><if pos:start="41:5" pos:end="49:9">if <condition pos:start="41:8" pos:end="41:47">(<expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:31">param_presence_flags</name></name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <name pos:start="41:35" pos:end="41:46">PARAM_MATRIX</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="49:9"><block_content pos:start="43:9" pos:end="49:9">

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:27">(<expr pos:start="43:13" pos:end="43:26"><call pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:21">get_bits1</name><argument_list pos:start="43:22" pos:end="43:26">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:29" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:26">

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:50">(<expr pos:start="45:17" pos:end="45:49"><call pos:start="45:17" pos:end="45:45"><name pos:start="45:17" pos:end="45:34">read_matrix_params</name><argument_list pos:start="45:35" pos:end="45:45">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">m</name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><name pos:start="45:39" pos:end="45:39">s</name></expr></argument>, <argument pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:44">gbp</name></expr></argument>)</argument_list></call> <operator pos:start="45:47" pos:end="45:47">&lt;</operator> <literal type="number" pos:start="45:49" pos:end="45:49">0</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="65:13"><if pos:start="53:5" pos:end="65:13">if <condition pos:start="53:8" pos:end="53:49">(<expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:31">param_presence_flags</name></name> <operator pos:start="53:33" pos:end="53:33">&amp;</operator> <name pos:start="53:35" pos:end="53:48">PARAM_OUTSHIFT</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="65:13"><block_content pos:start="55:9" pos:end="65:13">

        <if_stmt pos:start="55:9" pos:end="65:13"><if pos:start="55:9" pos:end="65:13">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><call pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:21">get_bits1</name><argument_list pos:start="55:22" pos:end="55:26">(<argument pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="65:13"><block_content pos:start="57:13" pos:end="65:13">

            <for pos:start="57:13" pos:end="65:13">for <control pos:start="57:17" pos:end="57:59">(<init pos:start="57:18" pos:end="57:24"><expr pos:start="57:18" pos:end="57:23"><name pos:start="57:18" pos:end="57:19">ch</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>;</init> <condition pos:start="57:26" pos:end="57:53"><expr pos:start="57:26" pos:end="57:52"><name pos:start="57:26" pos:end="57:27">ch</name> <operator pos:start="57:29" pos:end="57:30">&lt;=</operator> <name pos:start="57:32" pos:end="57:52"><name pos:start="57:32" pos:end="57:32">s</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:52">max_matrix_channel</name></name></expr>;</condition> <incr pos:start="57:55" pos:end="57:58"><expr pos:start="57:55" pos:end="57:58"><name pos:start="57:55" pos:end="57:56">ch</name><operator pos:start="57:57" pos:end="57:58">++</operator></expr></incr>)</control> <block pos:start="57:61" pos:end="65:13">{<block_content pos:start="59:17" pos:end="63:49">

                <expr_stmt pos:start="59:17" pos:end="59:56"><expr pos:start="59:17" pos:end="59:55"><name pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:31">output_shift</name><index pos:start="59:32" pos:end="59:35">[<expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">ch</name></expr>]</index></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <call pos:start="59:39" pos:end="59:55"><name pos:start="59:39" pos:end="59:47">get_sbits</name><argument_list pos:start="59:48" pos:end="59:55">(<argument pos:start="59:49" pos:end="59:51"><expr pos:start="59:49" pos:end="59:51"><name pos:start="59:49" pos:end="59:51">gbp</name></expr></argument>, <argument pos:start="59:54" pos:end="59:54"><expr pos:start="59:54" pos:end="59:54"><literal type="number" pos:start="59:54" pos:end="59:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="63:49"><expr pos:start="61:17" pos:end="63:48"><call pos:start="61:17" pos:end="63:48"><name pos:start="61:17" pos:end="61:23">dprintf</name><argument_list pos:start="61:24" pos:end="63:48">(<argument pos:start="61:25" pos:end="61:32"><expr pos:start="61:25" pos:end="61:32"><name pos:start="61:25" pos:end="61:32"><name pos:start="61:25" pos:end="61:25">m</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:32">avctx</name></name></expr></argument>, <argument pos:start="61:35" pos:end="61:59"><expr pos:start="61:35" pos:end="61:59"><literal type="string" pos:start="61:35" pos:end="61:59">"output shift[%d] = %d\n"</literal></expr></argument>,

                        <argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><name pos:start="63:25" pos:end="63:26">ch</name></expr></argument>, <argument pos:start="63:29" pos:end="63:47"><expr pos:start="63:29" pos:end="63:47"><name pos:start="63:29" pos:end="63:47"><name pos:start="63:29" pos:end="63:29">s</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:43">output_shift</name><index pos:start="63:44" pos:end="63:47">[<expr pos:start="63:45" pos:end="63:46"><name pos:start="63:45" pos:end="63:46">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="85:13"><if pos:start="69:5" pos:end="85:13">if <condition pos:start="69:8" pos:end="69:50">(<expr pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:31">param_presence_flags</name></name> <operator pos:start="69:33" pos:end="69:33">&amp;</operator> <name pos:start="69:35" pos:end="69:49">PARAM_QUANTSTEP</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="85:13"><block_content pos:start="71:9" pos:end="85:13">

        <if_stmt pos:start="71:9" pos:end="85:13"><if pos:start="71:9" pos:end="85:13">if <condition pos:start="71:12" pos:end="71:27">(<expr pos:start="71:13" pos:end="71:26"><call pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:21">get_bits1</name><argument_list pos:start="71:22" pos:end="71:26">(<argument pos:start="71:23" pos:end="71:25"><expr pos:start="71:23" pos:end="71:25"><name pos:start="71:23" pos:end="71:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="85:13"><block_content pos:start="73:13" pos:end="85:13">

            <for pos:start="73:13" pos:end="85:13">for <control pos:start="73:17" pos:end="73:52">(<init pos:start="73:18" pos:end="73:24"><expr pos:start="73:18" pos:end="73:23"><name pos:start="73:18" pos:end="73:19">ch</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>;</init> <condition pos:start="73:26" pos:end="73:46"><expr pos:start="73:26" pos:end="73:45"><name pos:start="73:26" pos:end="73:27">ch</name> <operator pos:start="73:29" pos:end="73:30">&lt;=</operator> <name pos:start="73:32" pos:end="73:45"><name pos:start="73:32" pos:end="73:32">s</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:45">max_channel</name></name></expr>;</condition> <incr pos:start="73:48" pos:end="73:51"><expr pos:start="73:48" pos:end="73:51"><name pos:start="73:48" pos:end="73:49">ch</name><operator pos:start="73:50" pos:end="73:51">++</operator></expr></incr>)</control> <block pos:start="73:54" pos:end="85:13">{<block_content pos:start="75:17" pos:end="83:74">

                <decl_stmt pos:start="75:17" pos:end="75:59"><decl pos:start="75:17" pos:end="75:58"><type pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:29">ChannelParams</name> <modifier pos:start="75:31" pos:end="75:31">*</modifier></type><name pos:start="75:32" pos:end="75:33">cp</name> <init pos:start="75:35" pos:end="75:58">= <expr pos:start="75:37" pos:end="75:58"><operator pos:start="75:37" pos:end="75:37">&amp;</operator><name pos:start="75:38" pos:end="75:58"><name pos:start="75:38" pos:end="75:38">m</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:54">channel_params</name><index pos:start="75:55" pos:end="75:58">[<expr pos:start="75:56" pos:end="75:57"><name pos:start="75:56" pos:end="75:57">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="79:17" pos:end="79:58"><expr pos:start="79:17" pos:end="79:57"><name pos:start="79:17" pos:end="79:38"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:34">quant_step_size</name><index pos:start="79:35" pos:end="79:38">[<expr pos:start="79:36" pos:end="79:37"><name pos:start="79:36" pos:end="79:37">ch</name></expr>]</index></name> <operator pos:start="79:40" pos:end="79:40">=</operator> <call pos:start="79:42" pos:end="79:57"><name pos:start="79:42" pos:end="79:49">get_bits</name><argument_list pos:start="79:50" pos:end="79:57">(<argument pos:start="79:51" pos:end="79:53"><expr pos:start="79:51" pos:end="79:53"><name pos:start="79:51" pos:end="79:53">gbp</name></expr></argument>, <argument pos:start="79:56" pos:end="79:56"><expr pos:start="79:56" pos:end="79:56"><literal type="number" pos:start="79:56" pos:end="79:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="83:17" pos:end="83:74"><expr pos:start="83:17" pos:end="83:73"><name pos:start="83:17" pos:end="83:36"><name pos:start="83:17" pos:end="83:18">cp</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:36">sign_huff_offset</name></name> <operator pos:start="83:38" pos:end="83:38">=</operator> <call pos:start="83:40" pos:end="83:73"><name pos:start="83:40" pos:end="83:58">calculate_sign_huff</name><argument_list pos:start="83:59" pos:end="83:73">(<argument pos:start="83:60" pos:end="83:60"><expr pos:start="83:60" pos:end="83:60"><name pos:start="83:60" pos:end="83:60">m</name></expr></argument>, <argument pos:start="83:63" pos:end="83:68"><expr pos:start="83:63" pos:end="83:68"><name pos:start="83:63" pos:end="83:68">substr</name></expr></argument>, <argument pos:start="83:71" pos:end="83:72"><expr pos:start="83:71" pos:end="83:72"><name pos:start="83:71" pos:end="83:72">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <for pos:start="89:5" pos:end="97:9">for <control pos:start="89:9" pos:end="89:57">(<init pos:start="89:10" pos:end="89:29"><expr pos:start="89:10" pos:end="89:28"><name pos:start="89:10" pos:end="89:11">ch</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:28"><name pos:start="89:15" pos:end="89:15">s</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:28">min_channel</name></name></expr>;</init> <condition pos:start="89:31" pos:end="89:51"><expr pos:start="89:31" pos:end="89:50"><name pos:start="89:31" pos:end="89:32">ch</name> <operator pos:start="89:34" pos:end="89:35">&lt;=</operator> <name pos:start="89:37" pos:end="89:50"><name pos:start="89:37" pos:end="89:37">s</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:50">max_channel</name></name></expr>;</condition> <incr pos:start="89:53" pos:end="89:56"><expr pos:start="89:53" pos:end="89:56"><name pos:start="89:53" pos:end="89:54">ch</name><operator pos:start="89:55" pos:end="89:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:9" pos:end="97:9"><block_content pos:start="91:9" pos:end="97:9">

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:27">(<expr pos:start="91:13" pos:end="91:26"><call pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:21">get_bits1</name><argument_list pos:start="91:22" pos:end="91:26">(<argument pos:start="91:23" pos:end="91:25"><expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:29" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:26">

            <if_stmt pos:start="93:13" pos:end="95:26"><if pos:start="93:13" pos:end="95:26">if <condition pos:start="93:16" pos:end="93:60">(<expr pos:start="93:17" pos:end="93:59"><call pos:start="93:17" pos:end="93:55"><name pos:start="93:17" pos:end="93:35">read_channel_params</name><argument_list pos:start="93:36" pos:end="93:55">(<argument pos:start="93:37" pos:end="93:37"><expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">m</name></expr></argument>, <argument pos:start="93:40" pos:end="93:45"><expr pos:start="93:40" pos:end="93:45"><name pos:start="93:40" pos:end="93:45">substr</name></expr></argument>, <argument pos:start="93:48" pos:end="93:50"><expr pos:start="93:48" pos:end="93:50"><name pos:start="93:48" pos:end="93:50">gbp</name></expr></argument>, <argument pos:start="93:53" pos:end="93:54"><expr pos:start="93:53" pos:end="93:54"><name pos:start="93:53" pos:end="93:54">ch</name></expr></argument>)</argument_list></call> <operator pos:start="93:57" pos:end="93:57">&lt;</operator> <literal type="number" pos:start="93:59" pos:end="93:59">0</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:26"><block_content pos:start="95:17" pos:end="95:26">

                <return pos:start="95:17" pos:end="95:26">return <expr pos:start="95:24" pos:end="95:25"><operator pos:start="95:24" pos:end="95:24">-</operator><literal type="number" pos:start="95:25" pos:end="95:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
