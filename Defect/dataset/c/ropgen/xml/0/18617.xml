<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18617.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">set_mem_path</name><parameter_list pos:start="1:25" pos:end="1:66">(<parameter pos:start="1:26" pos:end="1:34"><decl pos:start="1:26" pos:end="1:34"><type pos:start="1:26" pos:end="1:34"><name pos:start="1:26" pos:end="1:31">Object</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">o</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">str</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:33">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">HostMemoryBackend</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:30">backend</name> <init pos:start="5:32" pos:end="5:50">= <expr pos:start="5:34" pos:end="5:50"><call pos:start="5:34" pos:end="5:50"><name pos:start="5:34" pos:end="5:47">MEMORY_BACKEND</name><argument_list pos:start="5:48" pos:end="5:50">(<argument pos:start="5:49" pos:end="5:49"><expr pos:start="5:49" pos:end="5:49"><name pos:start="5:49" pos:end="5:49">o</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">HostMemoryBackendFile</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:29">fb</name> <init pos:start="7:31" pos:end="7:54">= <expr pos:start="7:33" pos:end="7:54"><call pos:start="7:33" pos:end="7:54"><name pos:start="7:33" pos:end="7:51">MEMORY_BACKEND_FILE</name><argument_list pos:start="7:52" pos:end="7:54">(<argument pos:start="7:53" pos:end="7:53"><expr pos:start="7:53" pos:end="7:53"><name pos:start="7:53" pos:end="7:53">o</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:41">(<expr pos:start="11:9" pos:end="11:40"><call pos:start="11:9" pos:end="11:40"><name pos:start="11:9" pos:end="11:26">memory_region_size</name><argument_list pos:start="11:27" pos:end="11:40">(<argument pos:start="11:28" pos:end="11:39"><expr pos:start="11:28" pos:end="11:39"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:39"><name pos:start="11:29" pos:end="11:35">backend</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:39">mr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:43" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:57"><expr pos:start="13:9" pos:end="13:56"><call pos:start="13:9" pos:end="13:56"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="13:56">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:55"><expr pos:start="13:26" pos:end="13:55"><literal type="string" pos:start="13:26" pos:end="13:55">"cannot change property value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:10">fb</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:20">mem_path</name></name></expr>)</condition> <block pos:start="19:23" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:29">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><call pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:14">g_free</name><argument_list pos:start="21:15" pos:end="21:28">(<argument pos:start="21:16" pos:end="21:27"><expr pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:27"><name pos:start="21:16" pos:end="21:17">fb</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">mem_path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:6">fb</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:16">mem_path</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:32"><name pos:start="25:20" pos:end="25:27">g_strdup</name><argument_list pos:start="25:28" pos:end="25:32">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
