<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7276.c" pos:tabs="8"><function pos:start="1:1" pos:end="413:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">av_noinline</name> <name pos:start="1:20" pos:end="1:23">void</name> <name pos:start="1:25" pos:end="1:28">FUNC</name></type>(<name pos:start="1:30" pos:end="1:41">hl_decode_mb</name>)<parameter_list pos:start="1:43" pos:end="1:86">(<parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:60">H264Context</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">h</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:85"><decl pos:start="1:66" pos:end="1:85"><type pos:start="1:66" pos:end="1:85"><name pos:start="1:66" pos:end="1:81">H264SliceContext</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:85">sl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="413:1">{<block_content pos:start="5:5" pos:end="411:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">mb_x</name>    <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:26">sl</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:32">mb_x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">mb_y</name>    <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:26">sl</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:32">mb_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:19">mb_xy</name>   <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><name pos:start="9:25" pos:end="9:33"><name pos:start="9:25" pos:end="9:26">sl</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:33">mb_xy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:21">mb_type</name> <init pos:start="11:23" pos:end="11:49">= <expr pos:start="11:25" pos:end="11:49"><name pos:start="11:25" pos:end="11:49"><name pos:start="11:25" pos:end="11:25">h</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:34">cur_pic</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:42">mb_type</name><index pos:start="11:43" pos:end="11:49">[<expr pos:start="11:44" pos:end="11:48"><name pos:start="11:44" pos:end="11:48">mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:19">dest_y</name></decl>, <decl pos:start="13:22" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:29">dest_cb</name></decl>, <decl pos:start="13:32" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:32" pos:end="13:32">*</modifier></type><name pos:start="13:33" pos:end="13:39">dest_cr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">linesize</name></decl>, <decl pos:start="15:19" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:28">uvlinesize</name></decl> <comment type="block" pos:start="15:30" pos:end="15:43">/*dct_offset*/</comment>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:50"><decl pos:start="19:5" pos:end="19:49"><type pos:start="19:5" pos:end="19:15"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:27">block_offset</name> <init pos:start="19:29" pos:end="19:49">= <expr pos:start="19:31" pos:end="19:49"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:49"><name pos:start="19:32" pos:end="19:32">h</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:46">block_offset</name><index pos:start="19:47" pos:end="19:49">[<expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:89"><decl pos:start="21:5" pos:end="21:88"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:30">transform_bypass</name> <init pos:start="21:32" pos:end="21:88">= <expr pos:start="21:34" pos:end="21:88"><operator pos:start="21:34" pos:end="21:34">!</operator><name pos:start="21:35" pos:end="21:40">SIMPLE</name> <operator pos:start="21:42" pos:end="21:43">&amp;&amp;</operator> <operator pos:start="21:45" pos:end="21:45">(</operator><name pos:start="21:46" pos:end="21:55"><name pos:start="21:46" pos:end="21:47">sl</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:55">qscale</name></name> <operator pos:start="21:57" pos:end="21:58">==</operator> <literal type="number" pos:start="21:60" pos:end="21:60">0</literal> <operator pos:start="21:62" pos:end="21:63">&amp;&amp;</operator> <name pos:start="21:65" pos:end="21:87"><name pos:start="21:65" pos:end="21:65">h</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:70">sps</name><operator pos:start="21:71" pos:end="21:71">.</operator><name pos:start="21:72" pos:end="21:87">transform_bypass</name></name><operator pos:start="21:88" pos:end="21:88">)</operator></expr></init></decl>;</decl_stmt>

    <function_decl pos:start="23:5" pos:end="23:63"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">void</name></type> (<modifier pos:start="23:11" pos:end="23:11">*</modifier><name pos:start="23:12" pos:end="23:19">idct_add</name>)<parameter_list pos:start="23:21" pos:end="23:62">(<parameter pos:start="23:22" pos:end="23:33"><decl pos:start="23:22" pos:end="23:33"><type pos:start="23:22" pos:end="23:33"><name pos:start="23:22" pos:end="23:28">uint8_t</name> <modifier pos:start="23:30" pos:end="23:30">*</modifier></type><name pos:start="23:31" pos:end="23:33">dst</name></decl></parameter>, <parameter pos:start="23:36" pos:end="23:49"><decl pos:start="23:36" pos:end="23:49"><type pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:42">int16_t</name> <modifier pos:start="23:44" pos:end="23:44">*</modifier></type><name pos:start="23:45" pos:end="23:49">block</name></decl></parameter>, <parameter pos:start="23:52" pos:end="23:61"><decl pos:start="23:52" pos:end="23:61"><type pos:start="23:52" pos:end="23:61"><name pos:start="23:52" pos:end="23:54">int</name></type> <name pos:start="23:56" pos:end="23:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="25:5" pos:end="25:50"><decl pos:start="25:5" pos:end="25:49"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:21">block_h</name>   <init pos:start="25:25" pos:end="25:49">= <expr pos:start="25:27" pos:end="25:49"><literal type="number" pos:start="25:27" pos:end="25:28">16</literal> <operator pos:start="25:30" pos:end="25:31">&gt;&gt;</operator> <name pos:start="25:33" pos:end="25:49"><name pos:start="25:33" pos:end="25:33">h</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:49">chroma_y_shift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:39"><decl pos:start="27:5" pos:end="27:38"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:23">chroma422</name> <init pos:start="27:25" pos:end="27:38">= <expr pos:start="27:27" pos:end="27:38"><call pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:35">CHROMA422</name><argument_list pos:start="27:36" pos:end="27:38">(<argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><name pos:start="27:37" pos:end="27:37">h</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:94"><expr pos:start="31:5" pos:end="31:93"><name pos:start="31:5" pos:end="31:10">dest_y</name>  <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:35"><name pos:start="31:15" pos:end="31:15">h</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:24">cur_pic</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:26">f</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">data</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>]</index></name> <operator pos:start="31:37" pos:end="31:37">+</operator> <operator pos:start="31:39" pos:end="31:39">(</operator><operator pos:start="31:40" pos:end="31:40">(</operator><name pos:start="31:41" pos:end="31:44">mb_x</name> <operator pos:start="31:46" pos:end="31:47">&lt;&lt;</operator> <name pos:start="31:49" pos:end="31:59">PIXEL_SHIFT</name><operator pos:start="31:60" pos:end="31:60">)</operator>     <operator pos:start="31:66" pos:end="31:66">+</operator> <name pos:start="31:68" pos:end="31:71">mb_y</name> <operator pos:start="31:73" pos:end="31:73">*</operator> <name pos:start="31:75" pos:end="31:86"><name pos:start="31:75" pos:end="31:76">sl</name><operator pos:start="31:77" pos:end="31:78">-&gt;</operator><name pos:start="31:79" pos:end="31:86">linesize</name></name><operator pos:start="31:87" pos:end="31:87">)</operator>  <operator pos:start="31:90" pos:end="31:90">*</operator> <literal type="number" pos:start="31:92" pos:end="31:93">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:99"><expr pos:start="33:5" pos:end="33:98"><name pos:start="33:5" pos:end="33:11">dest_cb</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:35"><name pos:start="33:15" pos:end="33:15">h</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:24">cur_pic</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:26">f</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:32">data</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr>]</index></name> <operator pos:start="33:37" pos:end="33:37">+</operator>  <operator pos:start="33:40" pos:end="33:40">(</operator><name pos:start="33:41" pos:end="33:44">mb_x</name> <operator pos:start="33:46" pos:end="33:47">&lt;&lt;</operator> <name pos:start="33:49" pos:end="33:59">PIXEL_SHIFT</name><operator pos:start="33:60" pos:end="33:60">)</operator> <operator pos:start="33:62" pos:end="33:62">*</operator> <literal type="number" pos:start="33:64" pos:end="33:66">8</literal> <operator pos:start="33:66" pos:end="33:66">+</operator> <name pos:start="33:68" pos:end="33:71">mb_y</name> <operator pos:start="33:73" pos:end="33:73">*</operator> <name pos:start="33:75" pos:end="33:88"><name pos:start="33:75" pos:end="33:76">sl</name><operator pos:start="33:77" pos:end="33:78">-&gt;</operator><name pos:start="33:79" pos:end="33:88">uvlinesize</name></name> <operator pos:start="33:90" pos:end="33:90">*</operator> <name pos:start="33:92" pos:end="33:98">block_h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:99"><expr pos:start="35:5" pos:end="35:98"><name pos:start="35:5" pos:end="35:11">dest_cr</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:35"><name pos:start="35:15" pos:end="35:15">h</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">cur_pic</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:26">f</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:32">data</name><index pos:start="35:33" pos:end="35:35">[<expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">2</literal></expr>]</index></name> <operator pos:start="35:37" pos:end="35:37">+</operator>  <operator pos:start="35:40" pos:end="35:40">(</operator><name pos:start="35:41" pos:end="35:44">mb_x</name> <operator pos:start="35:46" pos:end="35:47">&lt;&lt;</operator> <name pos:start="35:49" pos:end="35:59">PIXEL_SHIFT</name><operator pos:start="35:60" pos:end="35:60">)</operator> <operator pos:start="35:62" pos:end="35:62">*</operator> <literal type="number" pos:start="35:64" pos:end="35:66">8</literal> <operator pos:start="35:66" pos:end="35:66">+</operator> <name pos:start="35:68" pos:end="35:71">mb_y</name> <operator pos:start="35:73" pos:end="35:73">*</operator> <name pos:start="35:75" pos:end="35:88"><name pos:start="35:75" pos:end="35:76">sl</name><operator pos:start="35:77" pos:end="35:78">-&gt;</operator><name pos:start="35:79" pos:end="35:88">uvlinesize</name></name> <operator pos:start="35:90" pos:end="35:90">*</operator> <name pos:start="35:92" pos:end="35:98">block_h</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:113"><expr pos:start="39:5" pos:end="39:112"><call pos:start="39:5" pos:end="39:112"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:11">vdsp</name><operator pos:start="39:12" pos:end="39:12">.</operator><name pos:start="39:13" pos:end="39:20">prefetch</name></name><argument_list pos:start="39:21" pos:end="39:112">(<argument pos:start="39:22" pos:end="39:88"><expr pos:start="39:22" pos:end="39:88"><name pos:start="39:22" pos:end="39:27">dest_y</name>  <operator pos:start="39:30" pos:end="39:30">+</operator> <operator pos:start="39:32" pos:end="39:32">(</operator><name pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:34">sl</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:40">mb_x</name></name> <operator pos:start="39:42" pos:end="39:42">&amp;</operator> <literal type="number" pos:start="39:44" pos:end="39:44">3</literal><operator pos:start="39:45" pos:end="39:45">)</operator> <operator pos:start="39:47" pos:end="39:47">*</operator> <literal type="number" pos:start="39:49" pos:end="39:49">4</literal> <operator pos:start="39:51" pos:end="39:51">*</operator> <name pos:start="39:53" pos:end="39:64"><name pos:start="39:53" pos:end="39:54">sl</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:64">linesize</name></name>   <operator pos:start="39:68" pos:end="39:68">+</operator> <operator pos:start="39:70" pos:end="39:70">(</operator><literal type="number" pos:start="39:71" pos:end="39:72">64</literal> <operator pos:start="39:74" pos:end="39:75">&lt;&lt;</operator> <name pos:start="39:77" pos:end="39:87">PIXEL_SHIFT</name><operator pos:start="39:88" pos:end="39:88">)</operator></expr></argument>, <argument pos:start="39:91" pos:end="39:102"><expr pos:start="39:91" pos:end="39:102"><name pos:start="39:91" pos:end="39:102"><name pos:start="39:91" pos:end="39:92">sl</name><operator pos:start="39:93" pos:end="39:94">-&gt;</operator><name pos:start="39:95" pos:end="39:102">linesize</name></name></expr></argument>,       <argument pos:start="39:111" pos:end="39:111"><expr pos:start="39:111" pos:end="39:111"><literal type="number" pos:start="39:111" pos:end="39:111">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:112"><expr pos:start="41:5" pos:end="41:111"><call pos:start="41:5" pos:end="41:111"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">h</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">vdsp</name><operator pos:start="41:12" pos:end="41:12">.</operator><name pos:start="41:13" pos:end="41:20">prefetch</name></name><argument_list pos:start="41:21" pos:end="41:111">(<argument pos:start="41:22" pos:end="41:88"><expr pos:start="41:22" pos:end="41:88"><name pos:start="41:22" pos:end="41:28">dest_cb</name> <operator pos:start="41:30" pos:end="41:30">+</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:34">sl</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:40">mb_x</name></name> <operator pos:start="41:42" pos:end="41:42">&amp;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">7</literal><operator pos:start="41:45" pos:end="41:45">)</operator>     <operator pos:start="41:51" pos:end="41:51">*</operator> <name pos:start="41:53" pos:end="41:66"><name pos:start="41:53" pos:end="41:54">sl</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:66">uvlinesize</name></name> <operator pos:start="41:68" pos:end="41:68">+</operator> <operator pos:start="41:70" pos:end="41:70">(</operator><literal type="number" pos:start="41:71" pos:end="41:72">64</literal> <operator pos:start="41:74" pos:end="41:75">&lt;&lt;</operator> <name pos:start="41:77" pos:end="41:87">PIXEL_SHIFT</name><operator pos:start="41:88" pos:end="41:88">)</operator></expr></argument>, <argument pos:start="41:91" pos:end="41:107"><expr pos:start="41:91" pos:end="41:107"><name pos:start="41:91" pos:end="41:97">dest_cr</name> <operator pos:start="41:99" pos:end="41:99">-</operator> <name pos:start="41:101" pos:end="41:107">dest_cb</name></expr></argument>, <argument pos:start="41:110" pos:end="41:110"><expr pos:start="41:110" pos:end="41:110"><literal type="number" pos:start="41:110" pos:end="41:110">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:5">h</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:18">list_counts</name><index pos:start="45:19" pos:end="45:25">[<expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">mb_xy</name></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:42"><name pos:start="45:29" pos:end="45:30">sl</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:42">list_count</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="111:5"><if pos:start="49:5" pos:end="103:5">if <condition pos:start="49:8" pos:end="49:32">(<expr pos:start="49:9" pos:end="49:31"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:15">SIMPLE</name> <operator pos:start="49:17" pos:end="49:18">&amp;&amp;</operator> <call pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:27">MB_FIELD</name><argument_list pos:start="49:28" pos:end="49:31">(<argument pos:start="49:29" pos:end="49:30"><expr pos:start="49:29" pos:end="49:30"><name pos:start="49:29" pos:end="49:30">sl</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:34" pos:end="103:5">{<block_content pos:start="51:9" pos:end="101:9">

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:16">linesize</name>     <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:38"><name pos:start="51:24" pos:end="51:25">sl</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:38">mb_linesize</name></name> <operator pos:start="51:40" pos:end="51:40">=</operator> <name pos:start="51:42" pos:end="51:53"><name pos:start="51:42" pos:end="51:43">sl</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:53">linesize</name></name> <operator pos:start="51:55" pos:end="51:55">*</operator> <literal type="number" pos:start="51:57" pos:end="51:57">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:18">uvlinesize</name>   <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:40"><name pos:start="53:24" pos:end="53:25">sl</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:40">mb_uvlinesize</name></name> <operator pos:start="53:42" pos:end="53:42">=</operator> <name pos:start="53:44" pos:end="53:57"><name pos:start="53:44" pos:end="53:45">sl</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:57">uvlinesize</name></name> <operator pos:start="53:59" pos:end="53:59">*</operator> <literal type="number" pos:start="53:61" pos:end="53:61">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:44"><expr pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:20">block_offset</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:43"><name pos:start="55:25" pos:end="55:25">h</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:39">block_offset</name><index pos:start="55:40" pos:end="55:43">[<expr pos:start="55:41" pos:end="55:42"><literal type="number" pos:start="55:41" pos:end="55:42">48</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:16">mb_y</name> <operator pos:start="57:18" pos:end="57:18">&amp;</operator> <literal type="number" pos:start="57:20" pos:end="57:20">1</literal></expr>)</condition> <block pos:start="57:23" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:54"> <comment type="line" pos:start="57:25" pos:end="57:59">// FIXME move out of this function?</comment>

            <expr_stmt pos:start="59:13" pos:end="59:41"><expr pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:18">dest_y</name>  <operator pos:start="59:21" pos:end="59:22">-=</operator> <name pos:start="59:24" pos:end="59:35"><name pos:start="59:24" pos:end="59:25">sl</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:35">linesize</name></name> <operator pos:start="59:37" pos:end="59:37">*</operator> <literal type="number" pos:start="59:39" pos:end="59:40">15</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:54"><expr pos:start="61:13" pos:end="61:53"><name pos:start="61:13" pos:end="61:19">dest_cb</name> <operator pos:start="61:21" pos:end="61:22">-=</operator> <name pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:25">sl</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:37">uvlinesize</name></name> <operator pos:start="61:39" pos:end="61:39">*</operator> <operator pos:start="61:41" pos:end="61:41">(</operator><name pos:start="61:42" pos:end="61:48">block_h</name> <operator pos:start="61:50" pos:end="61:50">-</operator> <literal type="number" pos:start="61:52" pos:end="61:52">1</literal><operator pos:start="61:53" pos:end="61:53">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:54"><expr pos:start="63:13" pos:end="63:53"><name pos:start="63:13" pos:end="63:19">dest_cr</name> <operator pos:start="63:21" pos:end="63:22">-=</operator> <name pos:start="63:24" pos:end="63:37"><name pos:start="63:24" pos:end="63:25">sl</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:37">uvlinesize</name></name> <operator pos:start="63:39" pos:end="63:39">*</operator> <operator pos:start="63:41" pos:end="63:41">(</operator><name pos:start="63:42" pos:end="63:48">block_h</name> <operator pos:start="63:50" pos:end="63:50">-</operator> <literal type="number" pos:start="63:52" pos:end="63:52">1</literal><operator pos:start="63:53" pos:end="63:53">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="101:9"><if pos:start="67:9" pos:end="101:9">if <condition pos:start="67:12" pos:end="67:27">(<expr pos:start="67:13" pos:end="67:26"><call pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:23">FRAME_MBAFF</name><argument_list pos:start="67:24" pos:end="67:26">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:29" pos:end="101:9">{<block_content pos:start="69:13" pos:end="99:13">

            <decl_stmt pos:start="69:13" pos:end="69:21"><decl pos:start="69:13" pos:end="69:20"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:20">list</name></decl>;</decl_stmt>

            <for pos:start="71:13" pos:end="99:13">for <control pos:start="71:17" pos:end="71:57">(<init pos:start="71:18" pos:end="71:26"><expr pos:start="71:18" pos:end="71:25"><name pos:start="71:18" pos:end="71:21">list</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>;</init> <condition pos:start="71:28" pos:end="71:49"><expr pos:start="71:28" pos:end="71:48"><name pos:start="71:28" pos:end="71:31">list</name> <operator pos:start="71:33" pos:end="71:33">&lt;</operator> <name pos:start="71:35" pos:end="71:48"><name pos:start="71:35" pos:end="71:36">sl</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:48">list_count</name></name></expr>;</condition> <incr pos:start="71:51" pos:end="71:56"><expr pos:start="71:51" pos:end="71:56"><name pos:start="71:51" pos:end="71:54">list</name><operator pos:start="71:55" pos:end="71:56">++</operator></expr></incr>)</control> <block pos:start="71:59" pos:end="99:13">{<block_content pos:start="73:17" pos:end="97:17">

                <if_stmt pos:start="73:17" pos:end="75:29"><if pos:start="73:17" pos:end="75:29">if <condition pos:start="73:20" pos:end="73:46">(<expr pos:start="73:21" pos:end="73:45"><operator pos:start="73:21" pos:end="73:21">!</operator><call pos:start="73:22" pos:end="73:45"><name pos:start="73:22" pos:end="73:30">USES_LIST</name><argument_list pos:start="73:31" pos:end="73:45">(<argument pos:start="73:32" pos:end="73:38"><expr pos:start="73:32" pos:end="73:38"><name pos:start="73:32" pos:end="73:38">mb_type</name></expr></argument>, <argument pos:start="73:41" pos:end="73:44"><expr pos:start="73:41" pos:end="73:44"><name pos:start="73:41" pos:end="73:44">list</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:29"><block_content pos:start="75:21" pos:end="75:29">

                    <continue pos:start="75:21" pos:end="75:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="77:17" pos:end="97:17"><if pos:start="77:17" pos:end="83:17">if <condition pos:start="77:20" pos:end="77:38">(<expr pos:start="77:21" pos:end="77:37"><call pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:28">IS_16X16</name><argument_list pos:start="77:29" pos:end="77:37">(<argument pos:start="77:30" pos:end="77:36"><expr pos:start="77:30" pos:end="77:36"><name pos:start="77:30" pos:end="77:36">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:40" pos:end="83:17">{<block_content pos:start="79:21" pos:end="81:82">

                    <decl_stmt pos:start="79:21" pos:end="79:65"><decl pos:start="79:21" pos:end="79:64"><type pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:26">int8_t</name> <modifier pos:start="79:28" pos:end="79:28">*</modifier></type><name pos:start="79:29" pos:end="79:31">ref</name> <init pos:start="79:33" pos:end="79:64">= <expr pos:start="79:35" pos:end="79:64"><operator pos:start="79:35" pos:end="79:35">&amp;</operator><name pos:start="79:36" pos:end="79:64"><name pos:start="79:36" pos:end="79:37">sl</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:48">ref_cache</name><index pos:start="79:49" pos:end="79:54">[<expr pos:start="79:50" pos:end="79:53"><name pos:start="79:50" pos:end="79:53">list</name></expr>]</index><index pos:start="79:55" pos:end="79:64">[<expr pos:start="79:56" pos:end="79:63"><name pos:start="79:56" pos:end="79:63"><name pos:start="79:56" pos:end="79:60">scan8</name><index pos:start="79:61" pos:end="79:63">[<expr pos:start="79:62" pos:end="79:62"><literal type="number" pos:start="79:62" pos:end="79:62">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:82"><expr pos:start="81:21" pos:end="81:81"><call pos:start="81:21" pos:end="81:81"><name pos:start="81:21" pos:end="81:34">fill_rectangle</name><argument_list pos:start="81:35" pos:end="81:81">(<argument pos:start="81:36" pos:end="81:38"><expr pos:start="81:36" pos:end="81:38"><name pos:start="81:36" pos:end="81:38">ref</name></expr></argument>, <argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">4</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:44"><expr pos:start="81:44" pos:end="81:44"><literal type="number" pos:start="81:44" pos:end="81:44">4</literal></expr></argument>, <argument pos:start="81:47" pos:end="81:47"><expr pos:start="81:47" pos:end="81:47"><literal type="number" pos:start="81:47" pos:end="81:47">8</literal></expr></argument>, <argument pos:start="81:50" pos:end="81:77"><expr pos:start="81:50" pos:end="81:77"><operator pos:start="81:50" pos:end="81:50">(</operator><literal type="number" pos:start="81:51" pos:end="81:54">16</literal> <operator pos:start="81:54" pos:end="81:54">+</operator> <operator pos:start="81:56" pos:end="81:56">*</operator><name pos:start="81:57" pos:end="81:59">ref</name><operator pos:start="81:60" pos:end="81:60">)</operator> <operator pos:start="81:62" pos:end="81:62">^</operator> <operator pos:start="81:64" pos:end="81:64">(</operator><name pos:start="81:65" pos:end="81:72"><name pos:start="81:65" pos:end="81:66">sl</name><operator pos:start="81:67" pos:end="81:68">-&gt;</operator><name pos:start="81:69" pos:end="81:72">mb_y</name></name> <operator pos:start="81:74" pos:end="81:74">&amp;</operator> <literal type="number" pos:start="81:76" pos:end="81:76">1</literal><operator pos:start="81:77" pos:end="81:77">)</operator></expr></argument>, <argument pos:start="81:80" pos:end="81:80"><expr pos:start="81:80" pos:end="81:80"><literal type="number" pos:start="81:80" pos:end="81:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="83:19" pos:end="97:17">else <block pos:start="83:24" pos:end="97:17">{<block_content pos:start="85:21" pos:end="95:21">

                    <for pos:start="85:21" pos:end="95:21">for <control pos:start="85:25" pos:end="85:47">(<init pos:start="85:26" pos:end="85:31"><expr pos:start="85:26" pos:end="85:30"><name pos:start="85:26" pos:end="85:26">i</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>;</init> <condition pos:start="85:33" pos:end="85:39"><expr pos:start="85:33" pos:end="85:38"><name pos:start="85:33" pos:end="85:33">i</name> <operator pos:start="85:35" pos:end="85:35">&lt;</operator> <literal type="number" pos:start="85:37" pos:end="85:38">16</literal></expr>;</condition> <incr pos:start="85:41" pos:end="85:46"><expr pos:start="85:41" pos:end="85:46"><name pos:start="85:41" pos:end="85:41">i</name> <operator pos:start="85:43" pos:end="85:44">+=</operator> <literal type="number" pos:start="85:46" pos:end="85:46">4</literal></expr></incr>)</control> <block pos:start="85:49" pos:end="95:21">{<block_content pos:start="87:25" pos:end="93:78">

                        <decl_stmt pos:start="87:25" pos:end="87:64"><decl pos:start="87:25" pos:end="87:63"><type pos:start="87:25" pos:end="87:27"><name pos:start="87:25" pos:end="87:27">int</name></type> <name pos:start="87:29" pos:end="87:31">ref</name> <init pos:start="87:33" pos:end="87:63">= <expr pos:start="87:35" pos:end="87:63"><name pos:start="87:35" pos:end="87:63"><name pos:start="87:35" pos:end="87:36">sl</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:47">ref_cache</name><index pos:start="87:48" pos:end="87:53">[<expr pos:start="87:49" pos:end="87:52"><name pos:start="87:49" pos:end="87:52">list</name></expr>]</index><index pos:start="87:54" pos:end="87:63">[<expr pos:start="87:55" pos:end="87:62"><name pos:start="87:55" pos:end="87:62"><name pos:start="87:55" pos:end="87:59">scan8</name><index pos:start="87:60" pos:end="87:62">[<expr pos:start="87:61" pos:end="87:61"><name pos:start="87:61" pos:end="87:61">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="89:25" pos:end="93:78"><if pos:start="89:25" pos:end="93:78">if <condition pos:start="89:28" pos:end="89:37">(<expr pos:start="89:29" pos:end="89:36"><name pos:start="89:29" pos:end="89:31">ref</name> <operator pos:start="89:33" pos:end="89:34">&gt;=</operator> <literal type="number" pos:start="89:36" pos:end="89:36">0</literal></expr>)</condition><block type="pseudo" pos:start="91:29" pos:end="93:78"><block_content pos:start="91:29" pos:end="93:78">

                            <expr_stmt pos:start="91:29" pos:end="93:78"><expr pos:start="91:29" pos:end="93:77"><call pos:start="91:29" pos:end="93:77"><name pos:start="91:29" pos:end="91:42">fill_rectangle</name><argument_list pos:start="91:43" pos:end="93:77">(<argument pos:start="91:44" pos:end="91:73"><expr pos:start="91:44" pos:end="91:73"><operator pos:start="91:44" pos:end="91:44">&amp;</operator><name pos:start="91:45" pos:end="91:73"><name pos:start="91:45" pos:end="91:46">sl</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:57">ref_cache</name><index pos:start="91:58" pos:end="91:63">[<expr pos:start="91:59" pos:end="91:62"><name pos:start="91:59" pos:end="91:62">list</name></expr>]</index><index pos:start="91:64" pos:end="91:73">[<expr pos:start="91:65" pos:end="91:72"><name pos:start="91:65" pos:end="91:72"><name pos:start="91:65" pos:end="91:69">scan8</name><index pos:start="91:70" pos:end="91:72">[<expr pos:start="91:71" pos:end="91:71"><name pos:start="91:71" pos:end="91:71">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="91:76" pos:end="91:76"><expr pos:start="91:76" pos:end="91:76"><literal type="number" pos:start="91:76" pos:end="91:76">2</literal></expr></argument>, <argument pos:start="91:79" pos:end="91:79"><expr pos:start="91:79" pos:end="91:79"><literal type="number" pos:start="91:79" pos:end="91:79">2</literal></expr></argument>,

                                           <argument pos:start="93:44" pos:end="93:44"><expr pos:start="93:44" pos:end="93:44"><literal type="number" pos:start="93:44" pos:end="93:44">8</literal></expr></argument>, <argument pos:start="93:47" pos:end="93:73"><expr pos:start="93:47" pos:end="93:73"><operator pos:start="93:47" pos:end="93:47">(</operator><literal type="number" pos:start="93:48" pos:end="93:51">16</literal> <operator pos:start="93:51" pos:end="93:51">+</operator> <name pos:start="93:53" pos:end="93:55">ref</name><operator pos:start="93:56" pos:end="93:56">)</operator> <operator pos:start="93:58" pos:end="93:58">^</operator> <operator pos:start="93:60" pos:end="93:60">(</operator><name pos:start="93:61" pos:end="93:68"><name pos:start="93:61" pos:end="93:62">sl</name><operator pos:start="93:63" pos:end="93:64">-&gt;</operator><name pos:start="93:65" pos:end="93:68">mb_y</name></name> <operator pos:start="93:70" pos:end="93:70">&amp;</operator> <literal type="number" pos:start="93:72" pos:end="93:72">1</literal><operator pos:start="93:73" pos:end="93:73">)</operator></expr></argument>, <argument pos:start="93:76" pos:end="93:76"><expr pos:start="93:76" pos:end="93:76"><literal type="number" pos:start="93:76" pos:end="93:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="111:5">else <block pos:start="103:12" pos:end="111:5">{<block_content pos:start="105:9" pos:end="107:56">

        <expr_stmt pos:start="105:9" pos:end="105:54"><expr pos:start="105:9" pos:end="105:53"><name pos:start="105:9" pos:end="105:16">linesize</name>   <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:36"><name pos:start="105:22" pos:end="105:23">sl</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:36">mb_linesize</name></name>   <operator pos:start="105:40" pos:end="105:40">=</operator> <name pos:start="105:42" pos:end="105:53"><name pos:start="105:42" pos:end="105:43">sl</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:53">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:18">uvlinesize</name> <operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:38"><name pos:start="107:22" pos:end="107:23">sl</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:38">mb_uvlinesize</name></name> <operator pos:start="107:40" pos:end="107:40">=</operator> <name pos:start="107:42" pos:end="107:55"><name pos:start="107:42" pos:end="107:43">sl</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:55">uvlinesize</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="109:9" pos:end="109:41">// dct_offset = s-&gt;linesize * 16;</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="115:5" pos:end="411:5"><if pos:start="115:5" pos:end="229:5">if <condition pos:start="115:8" pos:end="115:41">(<expr pos:start="115:9" pos:end="115:40"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:15">SIMPLE</name> <operator pos:start="115:17" pos:end="115:18">&amp;&amp;</operator> <call pos:start="115:20" pos:end="115:40"><name pos:start="115:20" pos:end="115:31">IS_INTRA_PCM</name><argument_list pos:start="115:32" pos:end="115:40">(<argument pos:start="115:33" pos:end="115:39"><expr pos:start="115:33" pos:end="115:39"><name pos:start="115:33" pos:end="115:39">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:43" pos:end="229:5">{<block_content pos:start="117:9" pos:end="227:9">

        <if_stmt pos:start="117:9" pos:end="227:9"><if pos:start="117:9" pos:end="191:9">if <condition pos:start="117:12" pos:end="117:24">(<expr pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:23">PIXEL_SHIFT</name></expr>)</condition> <block pos:start="117:26" pos:end="191:9">{<block_content pos:start="119:13" pos:end="189:13">

            <decl_stmt pos:start="119:13" pos:end="119:56"><decl pos:start="119:13" pos:end="119:55"><type pos:start="119:13" pos:end="119:21"><specifier pos:start="119:13" pos:end="119:17">const</specifier> <name pos:start="119:19" pos:end="119:21">int</name></type> <name pos:start="119:23" pos:end="119:31">bit_depth</name> <init pos:start="119:33" pos:end="119:55">= <expr pos:start="119:35" pos:end="119:55"><name pos:start="119:35" pos:end="119:55"><name pos:start="119:35" pos:end="119:35">h</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:40">sps</name><operator pos:start="119:41" pos:end="119:41">.</operator><name pos:start="119:42" pos:end="119:55">bit_depth_luma</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="121:13" pos:end="121:18"><decl pos:start="121:13" pos:end="121:17"><type pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">int</name></type> <name pos:start="121:17" pos:end="121:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:29"><decl pos:start="123:13" pos:end="123:28"><type pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:25">GetBitContext</name></type> <name pos:start="123:27" pos:end="123:28">gb</name></decl>;</decl_stmt>

            <expr_stmt pos:start="125:13" pos:end="127:82"><expr pos:start="125:13" pos:end="127:81"><call pos:start="125:13" pos:end="127:81"><name pos:start="125:13" pos:end="125:25">init_get_bits</name><argument_list pos:start="125:26" pos:end="127:81">(<argument pos:start="125:27" pos:end="125:29"><expr pos:start="125:27" pos:end="125:29"><operator pos:start="125:27" pos:end="125:27">&amp;</operator><name pos:start="125:28" pos:end="125:29">gb</name></expr></argument>, <argument pos:start="125:32" pos:end="125:48"><expr pos:start="125:32" pos:end="125:48"><name pos:start="125:32" pos:end="125:48"><name pos:start="125:32" pos:end="125:33">sl</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:48">intra_pcm_ptr</name></name></expr></argument>,

                          <argument pos:start="127:27" pos:end="127:80"><expr pos:start="127:27" pos:end="127:80"><name pos:start="127:27" pos:end="127:68"><name pos:start="127:27" pos:end="127:42">ff_h264_mb_sizes</name><index pos:start="127:43" pos:end="127:68">[<expr pos:start="127:44" pos:end="127:67"><name pos:start="127:44" pos:end="127:67"><name pos:start="127:44" pos:end="127:44">h</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:49">sps</name><operator pos:start="127:50" pos:end="127:50">.</operator><name pos:start="127:51" pos:end="127:67">chroma_format_idc</name></name></expr>]</index></name> <operator pos:start="127:70" pos:end="127:70">*</operator> <name pos:start="127:72" pos:end="127:80">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="131:13" pos:end="139:13">for <control pos:start="131:17" pos:end="131:36">(<init pos:start="131:18" pos:end="131:23"><expr pos:start="131:18" pos:end="131:22"><name pos:start="131:18" pos:end="131:18">i</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr>;</init> <condition pos:start="131:25" pos:end="131:31"><expr pos:start="131:25" pos:end="131:30"><name pos:start="131:25" pos:end="131:25">i</name> <operator pos:start="131:27" pos:end="131:27">&lt;</operator> <literal type="number" pos:start="131:29" pos:end="131:30">16</literal></expr>;</condition> <incr pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:33">i</name><operator pos:start="131:34" pos:end="131:35">++</operator></expr></incr>)</control> <block pos:start="131:38" pos:end="139:13">{<block_content pos:start="133:17" pos:end="137:56">

                <decl_stmt pos:start="133:17" pos:end="133:70"><decl pos:start="133:17" pos:end="133:69"><type pos:start="133:17" pos:end="133:26"><name pos:start="133:17" pos:end="133:24">uint16_t</name> <modifier pos:start="133:26" pos:end="133:26">*</modifier></type><name pos:start="133:27" pos:end="133:31">tmp_y</name> <init pos:start="133:33" pos:end="133:69">= <expr pos:start="133:35" pos:end="133:69"><operator pos:start="133:35" pos:end="133:35">(</operator><name pos:start="133:36" pos:end="133:43">uint16_t</name> <operator pos:start="133:45" pos:end="133:45">*</operator><operator pos:start="133:46" pos:end="133:46">)</operator><operator pos:start="133:47" pos:end="133:47">(</operator><name pos:start="133:48" pos:end="133:53">dest_y</name> <operator pos:start="133:55" pos:end="133:55">+</operator> <name pos:start="133:57" pos:end="133:57">i</name> <operator pos:start="133:59" pos:end="133:59">*</operator> <name pos:start="133:61" pos:end="133:68">linesize</name><operator pos:start="133:69" pos:end="133:69">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="135:17" pos:end="137:56">for <control pos:start="135:21" pos:end="135:40">(<init pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:26"><name pos:start="135:22" pos:end="135:22">j</name> <operator pos:start="135:24" pos:end="135:24">=</operator> <literal type="number" pos:start="135:26" pos:end="135:26">0</literal></expr>;</init> <condition pos:start="135:29" pos:end="135:35"><expr pos:start="135:29" pos:end="135:34"><name pos:start="135:29" pos:end="135:29">j</name> <operator pos:start="135:31" pos:end="135:31">&lt;</operator> <literal type="number" pos:start="135:33" pos:end="135:34">16</literal></expr>;</condition> <incr pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:37">j</name><operator pos:start="135:38" pos:end="135:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:21" pos:end="137:56"><block_content pos:start="137:21" pos:end="137:56">

                    <expr_stmt pos:start="137:21" pos:end="137:56"><expr pos:start="137:21" pos:end="137:55"><name pos:start="137:21" pos:end="137:28"><name pos:start="137:21" pos:end="137:25">tmp_y</name><index pos:start="137:26" pos:end="137:28">[<expr pos:start="137:27" pos:end="137:27"><name pos:start="137:27" pos:end="137:27">j</name></expr>]</index></name> <operator pos:start="137:30" pos:end="137:30">=</operator> <call pos:start="137:32" pos:end="137:55"><name pos:start="137:32" pos:end="137:39">get_bits</name><argument_list pos:start="137:40" pos:end="137:55">(<argument pos:start="137:41" pos:end="137:43"><expr pos:start="137:41" pos:end="137:43"><operator pos:start="137:41" pos:end="137:41">&amp;</operator><name pos:start="137:42" pos:end="137:43">gb</name></expr></argument>, <argument pos:start="137:46" pos:end="137:54"><expr pos:start="137:46" pos:end="137:54"><name pos:start="137:46" pos:end="137:54">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></for>

            <if_stmt pos:start="141:13" pos:end="189:13"><if pos:start="141:13" pos:end="189:13">if <condition pos:start="141:16" pos:end="141:75">(<expr pos:start="141:17" pos:end="141:74"><name pos:start="141:17" pos:end="141:22">SIMPLE</name> <operator pos:start="141:24" pos:end="141:25">||</operator> <operator pos:start="141:27" pos:end="141:27">!</operator><name pos:start="141:28" pos:end="141:38">CONFIG_GRAY</name> <operator pos:start="141:40" pos:end="141:41">||</operator> <operator pos:start="141:43" pos:end="141:43">!</operator><operator pos:start="141:44" pos:end="141:44">(</operator><name pos:start="141:45" pos:end="141:52"><name pos:start="141:45" pos:end="141:45">h</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:52">flags</name></name> <operator pos:start="141:54" pos:end="141:54">&amp;</operator> <name pos:start="141:56" pos:end="141:73">AV_CODEC_FLAG_GRAY</name><operator pos:start="141:74" pos:end="141:74">)</operator></expr>)</condition> <block pos:start="141:77" pos:end="189:13">{<block_content pos:start="143:17" pos:end="187:17">

                <if_stmt pos:start="143:17" pos:end="187:17"><if pos:start="143:17" pos:end="165:17">if <condition pos:start="143:20" pos:end="143:46">(<expr pos:start="143:21" pos:end="143:45"><operator pos:start="143:21" pos:end="143:21">!</operator><name pos:start="143:22" pos:end="143:45"><name pos:start="143:22" pos:end="143:22">h</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:27">sps</name><operator pos:start="143:28" pos:end="143:28">.</operator><name pos:start="143:29" pos:end="143:45">chroma_format_idc</name></name></expr>)</condition> <block pos:start="143:48" pos:end="165:17">{<block_content pos:start="145:21" pos:end="163:21">

                    <for pos:start="145:21" pos:end="153:21">for <control pos:start="145:25" pos:end="145:49">(<init pos:start="145:26" pos:end="145:31"><expr pos:start="145:26" pos:end="145:30"><name pos:start="145:26" pos:end="145:26">i</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <literal type="number" pos:start="145:30" pos:end="145:30">0</literal></expr>;</init> <condition pos:start="145:33" pos:end="145:44"><expr pos:start="145:33" pos:end="145:43"><name pos:start="145:33" pos:end="145:33">i</name> <operator pos:start="145:35" pos:end="145:35">&lt;</operator> <name pos:start="145:37" pos:end="145:43">block_h</name></expr>;</condition> <incr pos:start="145:46" pos:end="145:48"><expr pos:start="145:46" pos:end="145:48"><name pos:start="145:46" pos:end="145:46">i</name><operator pos:start="145:47" pos:end="145:48">++</operator></expr></incr>)</control> <block pos:start="145:51" pos:end="153:21">{<block_content pos:start="147:25" pos:end="151:61">

                        <decl_stmt pos:start="147:25" pos:end="147:82"><decl pos:start="147:25" pos:end="147:81"><type pos:start="147:25" pos:end="147:34"><name pos:start="147:25" pos:end="147:32">uint16_t</name> <modifier pos:start="147:34" pos:end="147:34">*</modifier></type><name pos:start="147:35" pos:end="147:40">tmp_cb</name> <init pos:start="147:42" pos:end="147:81">= <expr pos:start="147:44" pos:end="147:81"><operator pos:start="147:44" pos:end="147:44">(</operator><name pos:start="147:45" pos:end="147:52">uint16_t</name> <operator pos:start="147:54" pos:end="147:54">*</operator><operator pos:start="147:55" pos:end="147:55">)</operator><operator pos:start="147:56" pos:end="147:56">(</operator><name pos:start="147:57" pos:end="147:63">dest_cb</name> <operator pos:start="147:65" pos:end="147:65">+</operator> <name pos:start="147:67" pos:end="147:67">i</name> <operator pos:start="147:69" pos:end="147:69">*</operator> <name pos:start="147:71" pos:end="147:80">uvlinesize</name><operator pos:start="147:81" pos:end="147:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="149:25" pos:end="151:61">for <control pos:start="149:29" pos:end="149:47">(<init pos:start="149:30" pos:end="149:35"><expr pos:start="149:30" pos:end="149:34"><name pos:start="149:30" pos:end="149:30">j</name> <operator pos:start="149:32" pos:end="149:32">=</operator> <literal type="number" pos:start="149:34" pos:end="149:34">0</literal></expr>;</init> <condition pos:start="149:37" pos:end="149:42"><expr pos:start="149:37" pos:end="149:41"><name pos:start="149:37" pos:end="149:37">j</name> <operator pos:start="149:39" pos:end="149:39">&lt;</operator> <literal type="number" pos:start="149:41" pos:end="149:41">8</literal></expr>;</condition> <incr pos:start="149:44" pos:end="149:46"><expr pos:start="149:44" pos:end="149:46"><name pos:start="149:44" pos:end="149:44">j</name><operator pos:start="149:45" pos:end="149:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="151:29" pos:end="151:61"><block_content pos:start="151:29" pos:end="151:61">

                            <expr_stmt pos:start="151:29" pos:end="151:61"><expr pos:start="151:29" pos:end="151:60"><name pos:start="151:29" pos:end="151:37"><name pos:start="151:29" pos:end="151:34">tmp_cb</name><index pos:start="151:35" pos:end="151:37">[<expr pos:start="151:36" pos:end="151:36"><name pos:start="151:36" pos:end="151:36">j</name></expr>]</index></name> <operator pos:start="151:39" pos:end="151:39">=</operator> <literal type="number" pos:start="151:41" pos:end="151:41">1</literal> <operator pos:start="151:43" pos:end="151:44">&lt;&lt;</operator> <operator pos:start="151:46" pos:end="151:46">(</operator><name pos:start="151:47" pos:end="151:55">bit_depth</name> <operator pos:start="151:57" pos:end="151:57">-</operator> <literal type="number" pos:start="151:59" pos:end="151:59">1</literal><operator pos:start="151:60" pos:end="151:60">)</operator></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                    <for pos:start="155:21" pos:end="163:21">for <control pos:start="155:25" pos:end="155:49">(<init pos:start="155:26" pos:end="155:31"><expr pos:start="155:26" pos:end="155:30"><name pos:start="155:26" pos:end="155:26">i</name> <operator pos:start="155:28" pos:end="155:28">=</operator> <literal type="number" pos:start="155:30" pos:end="155:30">0</literal></expr>;</init> <condition pos:start="155:33" pos:end="155:44"><expr pos:start="155:33" pos:end="155:43"><name pos:start="155:33" pos:end="155:33">i</name> <operator pos:start="155:35" pos:end="155:35">&lt;</operator> <name pos:start="155:37" pos:end="155:43">block_h</name></expr>;</condition> <incr pos:start="155:46" pos:end="155:48"><expr pos:start="155:46" pos:end="155:48"><name pos:start="155:46" pos:end="155:46">i</name><operator pos:start="155:47" pos:end="155:48">++</operator></expr></incr>)</control> <block pos:start="155:51" pos:end="163:21">{<block_content pos:start="157:25" pos:end="161:61">

                        <decl_stmt pos:start="157:25" pos:end="157:82"><decl pos:start="157:25" pos:end="157:81"><type pos:start="157:25" pos:end="157:34"><name pos:start="157:25" pos:end="157:32">uint16_t</name> <modifier pos:start="157:34" pos:end="157:34">*</modifier></type><name pos:start="157:35" pos:end="157:40">tmp_cr</name> <init pos:start="157:42" pos:end="157:81">= <expr pos:start="157:44" pos:end="157:81"><operator pos:start="157:44" pos:end="157:44">(</operator><name pos:start="157:45" pos:end="157:52">uint16_t</name> <operator pos:start="157:54" pos:end="157:54">*</operator><operator pos:start="157:55" pos:end="157:55">)</operator><operator pos:start="157:56" pos:end="157:56">(</operator><name pos:start="157:57" pos:end="157:63">dest_cr</name> <operator pos:start="157:65" pos:end="157:65">+</operator> <name pos:start="157:67" pos:end="157:67">i</name> <operator pos:start="157:69" pos:end="157:69">*</operator> <name pos:start="157:71" pos:end="157:80">uvlinesize</name><operator pos:start="157:81" pos:end="157:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="159:25" pos:end="161:61">for <control pos:start="159:29" pos:end="159:47">(<init pos:start="159:30" pos:end="159:35"><expr pos:start="159:30" pos:end="159:34"><name pos:start="159:30" pos:end="159:30">j</name> <operator pos:start="159:32" pos:end="159:32">=</operator> <literal type="number" pos:start="159:34" pos:end="159:34">0</literal></expr>;</init> <condition pos:start="159:37" pos:end="159:42"><expr pos:start="159:37" pos:end="159:41"><name pos:start="159:37" pos:end="159:37">j</name> <operator pos:start="159:39" pos:end="159:39">&lt;</operator> <literal type="number" pos:start="159:41" pos:end="159:41">8</literal></expr>;</condition> <incr pos:start="159:44" pos:end="159:46"><expr pos:start="159:44" pos:end="159:46"><name pos:start="159:44" pos:end="159:44">j</name><operator pos:start="159:45" pos:end="159:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:29" pos:end="161:61"><block_content pos:start="161:29" pos:end="161:61">

                            <expr_stmt pos:start="161:29" pos:end="161:61"><expr pos:start="161:29" pos:end="161:60"><name pos:start="161:29" pos:end="161:37"><name pos:start="161:29" pos:end="161:34">tmp_cr</name><index pos:start="161:35" pos:end="161:37">[<expr pos:start="161:36" pos:end="161:36"><name pos:start="161:36" pos:end="161:36">j</name></expr>]</index></name> <operator pos:start="161:39" pos:end="161:39">=</operator> <literal type="number" pos:start="161:41" pos:end="161:41">1</literal> <operator pos:start="161:43" pos:end="161:44">&lt;&lt;</operator> <operator pos:start="161:46" pos:end="161:46">(</operator><name pos:start="161:47" pos:end="161:55">bit_depth</name> <operator pos:start="161:57" pos:end="161:57">-</operator> <literal type="number" pos:start="161:59" pos:end="161:59">1</literal><operator pos:start="161:60" pos:end="161:60">)</operator></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="165:19" pos:end="187:17">else <block pos:start="165:24" pos:end="187:17">{<block_content pos:start="167:21" pos:end="185:21">

                    <for pos:start="167:21" pos:end="175:21">for <control pos:start="167:25" pos:end="167:49">(<init pos:start="167:26" pos:end="167:31"><expr pos:start="167:26" pos:end="167:30"><name pos:start="167:26" pos:end="167:26">i</name> <operator pos:start="167:28" pos:end="167:28">=</operator> <literal type="number" pos:start="167:30" pos:end="167:30">0</literal></expr>;</init> <condition pos:start="167:33" pos:end="167:44"><expr pos:start="167:33" pos:end="167:43"><name pos:start="167:33" pos:end="167:33">i</name> <operator pos:start="167:35" pos:end="167:35">&lt;</operator> <name pos:start="167:37" pos:end="167:43">block_h</name></expr>;</condition> <incr pos:start="167:46" pos:end="167:48"><expr pos:start="167:46" pos:end="167:48"><name pos:start="167:46" pos:end="167:46">i</name><operator pos:start="167:47" pos:end="167:48">++</operator></expr></incr>)</control> <block pos:start="167:51" pos:end="175:21">{<block_content pos:start="169:25" pos:end="173:65">

                        <decl_stmt pos:start="169:25" pos:end="169:82"><decl pos:start="169:25" pos:end="169:81"><type pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:32">uint16_t</name> <modifier pos:start="169:34" pos:end="169:34">*</modifier></type><name pos:start="169:35" pos:end="169:40">tmp_cb</name> <init pos:start="169:42" pos:end="169:81">= <expr pos:start="169:44" pos:end="169:81"><operator pos:start="169:44" pos:end="169:44">(</operator><name pos:start="169:45" pos:end="169:52">uint16_t</name> <operator pos:start="169:54" pos:end="169:54">*</operator><operator pos:start="169:55" pos:end="169:55">)</operator><operator pos:start="169:56" pos:end="169:56">(</operator><name pos:start="169:57" pos:end="169:63">dest_cb</name> <operator pos:start="169:65" pos:end="169:65">+</operator> <name pos:start="169:67" pos:end="169:67">i</name> <operator pos:start="169:69" pos:end="169:69">*</operator> <name pos:start="169:71" pos:end="169:80">uvlinesize</name><operator pos:start="169:81" pos:end="169:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="171:25" pos:end="173:65">for <control pos:start="171:29" pos:end="171:47">(<init pos:start="171:30" pos:end="171:35"><expr pos:start="171:30" pos:end="171:34"><name pos:start="171:30" pos:end="171:30">j</name> <operator pos:start="171:32" pos:end="171:32">=</operator> <literal type="number" pos:start="171:34" pos:end="171:34">0</literal></expr>;</init> <condition pos:start="171:37" pos:end="171:42"><expr pos:start="171:37" pos:end="171:41"><name pos:start="171:37" pos:end="171:37">j</name> <operator pos:start="171:39" pos:end="171:39">&lt;</operator> <literal type="number" pos:start="171:41" pos:end="171:41">8</literal></expr>;</condition> <incr pos:start="171:44" pos:end="171:46"><expr pos:start="171:44" pos:end="171:46"><name pos:start="171:44" pos:end="171:44">j</name><operator pos:start="171:45" pos:end="171:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="173:29" pos:end="173:65"><block_content pos:start="173:29" pos:end="173:65">

                            <expr_stmt pos:start="173:29" pos:end="173:65"><expr pos:start="173:29" pos:end="173:64"><name pos:start="173:29" pos:end="173:37"><name pos:start="173:29" pos:end="173:34">tmp_cb</name><index pos:start="173:35" pos:end="173:37">[<expr pos:start="173:36" pos:end="173:36"><name pos:start="173:36" pos:end="173:36">j</name></expr>]</index></name> <operator pos:start="173:39" pos:end="173:39">=</operator> <call pos:start="173:41" pos:end="173:64"><name pos:start="173:41" pos:end="173:48">get_bits</name><argument_list pos:start="173:49" pos:end="173:64">(<argument pos:start="173:50" pos:end="173:52"><expr pos:start="173:50" pos:end="173:52"><operator pos:start="173:50" pos:end="173:50">&amp;</operator><name pos:start="173:51" pos:end="173:52">gb</name></expr></argument>, <argument pos:start="173:55" pos:end="173:63"><expr pos:start="173:55" pos:end="173:63"><name pos:start="173:55" pos:end="173:63">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                    <for pos:start="177:21" pos:end="185:21">for <control pos:start="177:25" pos:end="177:49">(<init pos:start="177:26" pos:end="177:31"><expr pos:start="177:26" pos:end="177:30"><name pos:start="177:26" pos:end="177:26">i</name> <operator pos:start="177:28" pos:end="177:28">=</operator> <literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>;</init> <condition pos:start="177:33" pos:end="177:44"><expr pos:start="177:33" pos:end="177:43"><name pos:start="177:33" pos:end="177:33">i</name> <operator pos:start="177:35" pos:end="177:35">&lt;</operator> <name pos:start="177:37" pos:end="177:43">block_h</name></expr>;</condition> <incr pos:start="177:46" pos:end="177:48"><expr pos:start="177:46" pos:end="177:48"><name pos:start="177:46" pos:end="177:46">i</name><operator pos:start="177:47" pos:end="177:48">++</operator></expr></incr>)</control> <block pos:start="177:51" pos:end="185:21">{<block_content pos:start="179:25" pos:end="183:65">

                        <decl_stmt pos:start="179:25" pos:end="179:82"><decl pos:start="179:25" pos:end="179:81"><type pos:start="179:25" pos:end="179:34"><name pos:start="179:25" pos:end="179:32">uint16_t</name> <modifier pos:start="179:34" pos:end="179:34">*</modifier></type><name pos:start="179:35" pos:end="179:40">tmp_cr</name> <init pos:start="179:42" pos:end="179:81">= <expr pos:start="179:44" pos:end="179:81"><operator pos:start="179:44" pos:end="179:44">(</operator><name pos:start="179:45" pos:end="179:52">uint16_t</name> <operator pos:start="179:54" pos:end="179:54">*</operator><operator pos:start="179:55" pos:end="179:55">)</operator><operator pos:start="179:56" pos:end="179:56">(</operator><name pos:start="179:57" pos:end="179:63">dest_cr</name> <operator pos:start="179:65" pos:end="179:65">+</operator> <name pos:start="179:67" pos:end="179:67">i</name> <operator pos:start="179:69" pos:end="179:69">*</operator> <name pos:start="179:71" pos:end="179:80">uvlinesize</name><operator pos:start="179:81" pos:end="179:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="181:25" pos:end="183:65">for <control pos:start="181:29" pos:end="181:47">(<init pos:start="181:30" pos:end="181:35"><expr pos:start="181:30" pos:end="181:34"><name pos:start="181:30" pos:end="181:30">j</name> <operator pos:start="181:32" pos:end="181:32">=</operator> <literal type="number" pos:start="181:34" pos:end="181:34">0</literal></expr>;</init> <condition pos:start="181:37" pos:end="181:42"><expr pos:start="181:37" pos:end="181:41"><name pos:start="181:37" pos:end="181:37">j</name> <operator pos:start="181:39" pos:end="181:39">&lt;</operator> <literal type="number" pos:start="181:41" pos:end="181:41">8</literal></expr>;</condition> <incr pos:start="181:44" pos:end="181:46"><expr pos:start="181:44" pos:end="181:46"><name pos:start="181:44" pos:end="181:44">j</name><operator pos:start="181:45" pos:end="181:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:29" pos:end="183:65"><block_content pos:start="183:29" pos:end="183:65">

                            <expr_stmt pos:start="183:29" pos:end="183:65"><expr pos:start="183:29" pos:end="183:64"><name pos:start="183:29" pos:end="183:37"><name pos:start="183:29" pos:end="183:34">tmp_cr</name><index pos:start="183:35" pos:end="183:37">[<expr pos:start="183:36" pos:end="183:36"><name pos:start="183:36" pos:end="183:36">j</name></expr>]</index></name> <operator pos:start="183:39" pos:end="183:39">=</operator> <call pos:start="183:41" pos:end="183:64"><name pos:start="183:41" pos:end="183:48">get_bits</name><argument_list pos:start="183:49" pos:end="183:64">(<argument pos:start="183:50" pos:end="183:52"><expr pos:start="183:50" pos:end="183:52"><operator pos:start="183:50" pos:end="183:50">&amp;</operator><name pos:start="183:51" pos:end="183:52">gb</name></expr></argument>, <argument pos:start="183:55" pos:end="183:63"><expr pos:start="183:55" pos:end="183:63"><name pos:start="183:55" pos:end="183:63">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="227:9">else <block pos:start="191:16" pos:end="227:9">{<block_content pos:start="193:13" pos:end="225:13">

            <for pos:start="193:13" pos:end="195:78">for <control pos:start="193:17" pos:end="193:36">(<init pos:start="193:18" pos:end="193:23"><expr pos:start="193:18" pos:end="193:22"><name pos:start="193:18" pos:end="193:18">i</name> <operator pos:start="193:20" pos:end="193:20">=</operator> <literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr>;</init> <condition pos:start="193:25" pos:end="193:31"><expr pos:start="193:25" pos:end="193:30"><name pos:start="193:25" pos:end="193:25">i</name> <operator pos:start="193:27" pos:end="193:27">&lt;</operator> <literal type="number" pos:start="193:29" pos:end="193:30">16</literal></expr>;</condition> <incr pos:start="193:33" pos:end="193:35"><expr pos:start="193:33" pos:end="193:35"><name pos:start="193:33" pos:end="193:33">i</name><operator pos:start="193:34" pos:end="193:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:17" pos:end="195:78"><block_content pos:start="195:17" pos:end="195:78">

                <expr_stmt pos:start="195:17" pos:end="195:78"><expr pos:start="195:17" pos:end="195:77"><call pos:start="195:17" pos:end="195:77"><name pos:start="195:17" pos:end="195:22">memcpy</name><argument_list pos:start="195:23" pos:end="195:77">(<argument pos:start="195:24" pos:end="195:44"><expr pos:start="195:24" pos:end="195:44"><name pos:start="195:24" pos:end="195:29">dest_y</name> <operator pos:start="195:31" pos:end="195:31">+</operator> <name pos:start="195:33" pos:end="195:33">i</name> <operator pos:start="195:35" pos:end="195:35">*</operator> <name pos:start="195:37" pos:end="195:44">linesize</name></expr></argument>, <argument pos:start="195:47" pos:end="195:72"><expr pos:start="195:47" pos:end="195:72"><name pos:start="195:47" pos:end="195:63"><name pos:start="195:47" pos:end="195:48">sl</name><operator pos:start="195:49" pos:end="195:50">-&gt;</operator><name pos:start="195:51" pos:end="195:63">intra_pcm_ptr</name></name> <operator pos:start="195:65" pos:end="195:65">+</operator> <name pos:start="195:67" pos:end="195:67">i</name> <operator pos:start="195:69" pos:end="195:69">*</operator> <literal type="number" pos:start="195:71" pos:end="195:72">16</literal></expr></argument>, <argument pos:start="195:75" pos:end="195:76"><expr pos:start="195:75" pos:end="195:76"><literal type="number" pos:start="195:75" pos:end="195:76">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="197:13" pos:end="225:13"><if pos:start="197:13" pos:end="225:13">if <condition pos:start="197:16" pos:end="197:75">(<expr pos:start="197:17" pos:end="197:74"><name pos:start="197:17" pos:end="197:22">SIMPLE</name> <operator pos:start="197:24" pos:end="197:25">||</operator> <operator pos:start="197:27" pos:end="197:27">!</operator><name pos:start="197:28" pos:end="197:38">CONFIG_GRAY</name> <operator pos:start="197:40" pos:end="197:41">||</operator> <operator pos:start="197:43" pos:end="197:43">!</operator><operator pos:start="197:44" pos:end="197:44">(</operator><name pos:start="197:45" pos:end="197:52"><name pos:start="197:45" pos:end="197:45">h</name><operator pos:start="197:46" pos:end="197:47">-&gt;</operator><name pos:start="197:48" pos:end="197:52">flags</name></name> <operator pos:start="197:54" pos:end="197:54">&amp;</operator> <name pos:start="197:56" pos:end="197:73">AV_CODEC_FLAG_GRAY</name><operator pos:start="197:74" pos:end="197:74">)</operator></expr>)</condition> <block pos:start="197:77" pos:end="225:13">{<block_content pos:start="199:17" pos:end="223:17">

                <if_stmt pos:start="199:17" pos:end="223:17"><if pos:start="199:17" pos:end="209:17">if <condition pos:start="199:20" pos:end="199:46">(<expr pos:start="199:21" pos:end="199:45"><operator pos:start="199:21" pos:end="199:21">!</operator><name pos:start="199:22" pos:end="199:45"><name pos:start="199:22" pos:end="199:22">h</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:27">sps</name><operator pos:start="199:28" pos:end="199:28">.</operator><name pos:start="199:29" pos:end="199:45">chroma_format_idc</name></name></expr>)</condition> <block pos:start="199:48" pos:end="209:17">{<block_content pos:start="201:21" pos:end="207:21">

                    <for pos:start="201:21" pos:end="207:21">for <control pos:start="201:25" pos:end="201:49">(<init pos:start="201:26" pos:end="201:31"><expr pos:start="201:26" pos:end="201:30"><name pos:start="201:26" pos:end="201:26">i</name> <operator pos:start="201:28" pos:end="201:28">=</operator> <literal type="number" pos:start="201:30" pos:end="201:30">0</literal></expr>;</init> <condition pos:start="201:33" pos:end="201:44"><expr pos:start="201:33" pos:end="201:43"><name pos:start="201:33" pos:end="201:33">i</name> <operator pos:start="201:35" pos:end="201:35">&lt;</operator> <name pos:start="201:37" pos:end="201:43">block_h</name></expr>;</condition> <incr pos:start="201:46" pos:end="201:48"><expr pos:start="201:46" pos:end="201:48"><name pos:start="201:46" pos:end="201:46">i</name><operator pos:start="201:47" pos:end="201:48">++</operator></expr></incr>)</control> <block pos:start="201:51" pos:end="207:21">{<block_content pos:start="203:25" pos:end="205:65">

                        <expr_stmt pos:start="203:25" pos:end="203:65"><expr pos:start="203:25" pos:end="203:64"><call pos:start="203:25" pos:end="203:64"><name pos:start="203:25" pos:end="203:30">memset</name><argument_list pos:start="203:31" pos:end="203:64">(<argument pos:start="203:32" pos:end="203:55"><expr pos:start="203:32" pos:end="203:55"><name pos:start="203:32" pos:end="203:38">dest_cb</name> <operator pos:start="203:40" pos:end="203:40">+</operator> <name pos:start="203:42" pos:end="203:42">i</name> <operator pos:start="203:44" pos:end="203:44">*</operator> <name pos:start="203:46" pos:end="203:55">uvlinesize</name></expr></argument>, <argument pos:start="203:58" pos:end="203:60"><expr pos:start="203:58" pos:end="203:60"><literal type="number" pos:start="203:58" pos:end="203:60">128</literal></expr></argument>, <argument pos:start="203:63" pos:end="203:63"><expr pos:start="203:63" pos:end="203:63"><literal type="number" pos:start="203:63" pos:end="203:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="205:25" pos:end="205:65"><expr pos:start="205:25" pos:end="205:64"><call pos:start="205:25" pos:end="205:64"><name pos:start="205:25" pos:end="205:30">memset</name><argument_list pos:start="205:31" pos:end="205:64">(<argument pos:start="205:32" pos:end="205:55"><expr pos:start="205:32" pos:end="205:55"><name pos:start="205:32" pos:end="205:38">dest_cr</name> <operator pos:start="205:40" pos:end="205:40">+</operator> <name pos:start="205:42" pos:end="205:42">i</name> <operator pos:start="205:44" pos:end="205:44">*</operator> <name pos:start="205:46" pos:end="205:55">uvlinesize</name></expr></argument>, <argument pos:start="205:58" pos:end="205:60"><expr pos:start="205:58" pos:end="205:60"><literal type="number" pos:start="205:58" pos:end="205:60">128</literal></expr></argument>, <argument pos:start="205:63" pos:end="205:63"><expr pos:start="205:63" pos:end="205:63"><literal type="number" pos:start="205:63" pos:end="205:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="209:19" pos:end="223:17">else <block pos:start="209:24" pos:end="223:17">{<block_content pos:start="211:21" pos:end="221:21">

                    <decl_stmt pos:start="211:21" pos:end="211:68"><decl pos:start="211:21" pos:end="211:67"><type pos:start="211:21" pos:end="211:35"><specifier pos:start="211:21" pos:end="211:25">const</specifier> <name pos:start="211:27" pos:end="211:33">uint8_t</name> <modifier pos:start="211:35" pos:end="211:35">*</modifier></type><name pos:start="211:36" pos:end="211:41">src_cb</name> <init pos:start="211:43" pos:end="211:67">= <expr pos:start="211:45" pos:end="211:67"><name pos:start="211:45" pos:end="211:61"><name pos:start="211:45" pos:end="211:46">sl</name><operator pos:start="211:47" pos:end="211:48">-&gt;</operator><name pos:start="211:49" pos:end="211:61">intra_pcm_ptr</name></name> <operator pos:start="211:63" pos:end="211:63">+</operator> <literal type="number" pos:start="211:65" pos:end="211:67">256</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="213:21" pos:end="213:82"><decl pos:start="213:21" pos:end="213:81"><type pos:start="213:21" pos:end="213:35"><specifier pos:start="213:21" pos:end="213:25">const</specifier> <name pos:start="213:27" pos:end="213:33">uint8_t</name> <modifier pos:start="213:35" pos:end="213:35">*</modifier></type><name pos:start="213:36" pos:end="213:41">src_cr</name> <init pos:start="213:43" pos:end="213:81">= <expr pos:start="213:45" pos:end="213:81"><name pos:start="213:45" pos:end="213:61"><name pos:start="213:45" pos:end="213:46">sl</name><operator pos:start="213:47" pos:end="213:48">-&gt;</operator><name pos:start="213:49" pos:end="213:61">intra_pcm_ptr</name></name> <operator pos:start="213:63" pos:end="213:63">+</operator> <literal type="number" pos:start="213:65" pos:end="213:69">256</literal> <operator pos:start="213:69" pos:end="213:69">+</operator> <name pos:start="213:71" pos:end="213:77">block_h</name> <operator pos:start="213:79" pos:end="213:79">*</operator> <literal type="number" pos:start="213:81" pos:end="213:81">8</literal></expr></init></decl>;</decl_stmt>

                    <for pos:start="215:21" pos:end="221:21">for <control pos:start="215:25" pos:end="215:49">(<init pos:start="215:26" pos:end="215:31"><expr pos:start="215:26" pos:end="215:30"><name pos:start="215:26" pos:end="215:26">i</name> <operator pos:start="215:28" pos:end="215:28">=</operator> <literal type="number" pos:start="215:30" pos:end="215:30">0</literal></expr>;</init> <condition pos:start="215:33" pos:end="215:44"><expr pos:start="215:33" pos:end="215:43"><name pos:start="215:33" pos:end="215:33">i</name> <operator pos:start="215:35" pos:end="215:35">&lt;</operator> <name pos:start="215:37" pos:end="215:43">block_h</name></expr>;</condition> <incr pos:start="215:46" pos:end="215:48"><expr pos:start="215:46" pos:end="215:48"><name pos:start="215:46" pos:end="215:46">i</name><operator pos:start="215:47" pos:end="215:48">++</operator></expr></incr>)</control> <block pos:start="215:51" pos:end="221:21">{<block_content pos:start="217:25" pos:end="219:76">

                        <expr_stmt pos:start="217:25" pos:end="217:76"><expr pos:start="217:25" pos:end="217:75"><call pos:start="217:25" pos:end="217:75"><name pos:start="217:25" pos:end="217:30">memcpy</name><argument_list pos:start="217:31" pos:end="217:75">(<argument pos:start="217:32" pos:end="217:55"><expr pos:start="217:32" pos:end="217:55"><name pos:start="217:32" pos:end="217:38">dest_cb</name> <operator pos:start="217:40" pos:end="217:40">+</operator> <name pos:start="217:42" pos:end="217:42">i</name> <operator pos:start="217:44" pos:end="217:44">*</operator> <name pos:start="217:46" pos:end="217:55">uvlinesize</name></expr></argument>, <argument pos:start="217:58" pos:end="217:71"><expr pos:start="217:58" pos:end="217:71"><name pos:start="217:58" pos:end="217:63">src_cb</name> <operator pos:start="217:65" pos:end="217:65">+</operator> <name pos:start="217:67" pos:end="217:67">i</name> <operator pos:start="217:69" pos:end="217:69">*</operator> <literal type="number" pos:start="217:71" pos:end="217:71">8</literal></expr></argument>, <argument pos:start="217:74" pos:end="217:74"><expr pos:start="217:74" pos:end="217:74"><literal type="number" pos:start="217:74" pos:end="217:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="219:25" pos:end="219:76"><expr pos:start="219:25" pos:end="219:75"><call pos:start="219:25" pos:end="219:75"><name pos:start="219:25" pos:end="219:30">memcpy</name><argument_list pos:start="219:31" pos:end="219:75">(<argument pos:start="219:32" pos:end="219:55"><expr pos:start="219:32" pos:end="219:55"><name pos:start="219:32" pos:end="219:38">dest_cr</name> <operator pos:start="219:40" pos:end="219:40">+</operator> <name pos:start="219:42" pos:end="219:42">i</name> <operator pos:start="219:44" pos:end="219:44">*</operator> <name pos:start="219:46" pos:end="219:55">uvlinesize</name></expr></argument>, <argument pos:start="219:58" pos:end="219:71"><expr pos:start="219:58" pos:end="219:71"><name pos:start="219:58" pos:end="219:63">src_cr</name> <operator pos:start="219:65" pos:end="219:65">+</operator> <name pos:start="219:67" pos:end="219:67">i</name> <operator pos:start="219:69" pos:end="219:69">*</operator> <literal type="number" pos:start="219:71" pos:end="219:71">8</literal></expr></argument>, <argument pos:start="219:74" pos:end="219:74"><expr pos:start="219:74" pos:end="219:74"><literal type="number" pos:start="219:74" pos:end="219:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="229:7" pos:end="411:5">else <block pos:start="229:12" pos:end="411:5">{<block_content pos:start="231:9" pos:end="409:9">

        <if_stmt pos:start="231:9" pos:end="293:9"><if pos:start="231:9" pos:end="265:9">if <condition pos:start="231:12" pos:end="231:30">(<expr pos:start="231:13" pos:end="231:29"><call pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:20">IS_INTRA</name><argument_list pos:start="231:21" pos:end="231:29">(<argument pos:start="231:22" pos:end="231:28"><expr pos:start="231:22" pos:end="231:28"><name pos:start="231:22" pos:end="231:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="231:32" pos:end="265:9">{<block_content pos:start="233:13" pos:end="263:70">

            <if_stmt pos:start="233:13" pos:end="237:70"><if pos:start="233:13" pos:end="237:70">if <condition pos:start="233:16" pos:end="233:38">(<expr pos:start="233:17" pos:end="233:37"><name pos:start="233:17" pos:end="233:37"><name pos:start="233:17" pos:end="233:18">sl</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:37">deblocking_filter</name></name></expr>)</condition><block type="pseudo" pos:start="235:17" pos:end="237:70"><block_content pos:start="235:17" pos:end="237:70">

                <expr_stmt pos:start="235:17" pos:end="237:70"><expr pos:start="235:17" pos:end="237:69"><call pos:start="235:17" pos:end="237:69"><name pos:start="235:17" pos:end="235:30">xchg_mb_border</name><argument_list pos:start="235:31" pos:end="237:69">(<argument pos:start="235:32" pos:end="235:32"><expr pos:start="235:32" pos:end="235:32"><name pos:start="235:32" pos:end="235:32">h</name></expr></argument>, <argument pos:start="235:35" pos:end="235:36"><expr pos:start="235:35" pos:end="235:36"><name pos:start="235:35" pos:end="235:36">sl</name></expr></argument>, <argument pos:start="235:39" pos:end="235:44"><expr pos:start="235:39" pos:end="235:44"><name pos:start="235:39" pos:end="235:44">dest_y</name></expr></argument>, <argument pos:start="235:47" pos:end="235:53"><expr pos:start="235:47" pos:end="235:53"><name pos:start="235:47" pos:end="235:53">dest_cb</name></expr></argument>, <argument pos:start="235:56" pos:end="235:62"><expr pos:start="235:56" pos:end="235:62"><name pos:start="235:56" pos:end="235:62">dest_cr</name></expr></argument>, <argument pos:start="235:65" pos:end="235:72"><expr pos:start="235:65" pos:end="235:72"><name pos:start="235:65" pos:end="235:72">linesize</name></expr></argument>,

                               <argument pos:start="237:32" pos:end="237:41"><expr pos:start="237:32" pos:end="237:41"><name pos:start="237:32" pos:end="237:41">uvlinesize</name></expr></argument>, <argument pos:start="237:44" pos:end="237:44"><expr pos:start="237:44" pos:end="237:44"><literal type="number" pos:start="237:44" pos:end="237:44">1</literal></expr></argument>, <argument pos:start="237:47" pos:end="237:47"><expr pos:start="237:47" pos:end="237:47"><literal type="number" pos:start="237:47" pos:end="237:47">0</literal></expr></argument>, <argument pos:start="237:50" pos:end="237:55"><expr pos:start="237:50" pos:end="237:55"><name pos:start="237:50" pos:end="237:55">SIMPLE</name></expr></argument>, <argument pos:start="237:58" pos:end="237:68"><expr pos:start="237:58" pos:end="237:68"><name pos:start="237:58" pos:end="237:68">PIXEL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="241:13" pos:end="247:13"><if pos:start="241:13" pos:end="247:13">if <condition pos:start="241:16" pos:end="241:75">(<expr pos:start="241:17" pos:end="241:74"><name pos:start="241:17" pos:end="241:22">SIMPLE</name> <operator pos:start="241:24" pos:end="241:25">||</operator> <operator pos:start="241:27" pos:end="241:27">!</operator><name pos:start="241:28" pos:end="241:38">CONFIG_GRAY</name> <operator pos:start="241:40" pos:end="241:41">||</operator> <operator pos:start="241:43" pos:end="241:43">!</operator><operator pos:start="241:44" pos:end="241:44">(</operator><name pos:start="241:45" pos:end="241:52"><name pos:start="241:45" pos:end="241:45">h</name><operator pos:start="241:46" pos:end="241:47">-&gt;</operator><name pos:start="241:48" pos:end="241:52">flags</name></name> <operator pos:start="241:54" pos:end="241:54">&amp;</operator> <name pos:start="241:56" pos:end="241:73">AV_CODEC_FLAG_GRAY</name><operator pos:start="241:74" pos:end="241:74">)</operator></expr>)</condition> <block pos:start="241:77" pos:end="247:13">{<block_content pos:start="243:17" pos:end="245:74">

                <expr_stmt pos:start="243:17" pos:end="243:74"><expr pos:start="243:17" pos:end="243:73"><name pos:start="243:17" pos:end="243:52"><name pos:start="243:17" pos:end="243:17">h</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:22">hpc</name><operator pos:start="243:23" pos:end="243:23">.</operator><name pos:start="243:24" pos:end="243:30">pred8x8</name><index pos:start="243:31" pos:end="243:52">[<expr pos:start="243:32" pos:end="243:51"><name pos:start="243:32" pos:end="243:51"><name pos:start="243:32" pos:end="243:33">sl</name><operator pos:start="243:34" pos:end="243:35">-&gt;</operator><name pos:start="243:36" pos:end="243:51">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="243:53" pos:end="243:53">(</operator><name pos:start="243:54" pos:end="243:60">dest_cb</name><operator pos:start="243:61" pos:end="243:61">,</operator> <name pos:start="243:63" pos:end="243:72">uvlinesize</name><operator pos:start="243:73" pos:end="243:73">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:74"><expr pos:start="245:17" pos:end="245:73"><name pos:start="245:17" pos:end="245:52"><name pos:start="245:17" pos:end="245:17">h</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:22">hpc</name><operator pos:start="245:23" pos:end="245:23">.</operator><name pos:start="245:24" pos:end="245:30">pred8x8</name><index pos:start="245:31" pos:end="245:52">[<expr pos:start="245:32" pos:end="245:51"><name pos:start="245:32" pos:end="245:51"><name pos:start="245:32" pos:end="245:33">sl</name><operator pos:start="245:34" pos:end="245:35">-&gt;</operator><name pos:start="245:36" pos:end="245:51">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="245:53" pos:end="245:53">(</operator><name pos:start="245:54" pos:end="245:60">dest_cr</name><operator pos:start="245:61" pos:end="245:61">,</operator> <name pos:start="245:63" pos:end="245:72">uvlinesize</name><operator pos:start="245:73" pos:end="245:73">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="251:13" pos:end="255:73"><expr pos:start="251:13" pos:end="255:72"><call pos:start="251:13" pos:end="255:72"><name pos:start="251:13" pos:end="251:37">hl_decode_mb_predict_luma</name><argument_list pos:start="251:38" pos:end="255:72">(<argument pos:start="251:39" pos:end="251:39"><expr pos:start="251:39" pos:end="251:39"><name pos:start="251:39" pos:end="251:39">h</name></expr></argument>, <argument pos:start="251:42" pos:end="251:43"><expr pos:start="251:42" pos:end="251:43"><name pos:start="251:42" pos:end="251:43">sl</name></expr></argument>, <argument pos:start="251:46" pos:end="251:52"><expr pos:start="251:46" pos:end="251:52"><name pos:start="251:46" pos:end="251:52">mb_type</name></expr></argument>, <argument pos:start="251:55" pos:end="251:60"><expr pos:start="251:55" pos:end="251:60"><name pos:start="251:55" pos:end="251:60">SIMPLE</name></expr></argument>,

                                      <argument pos:start="253:39" pos:end="253:54"><expr pos:start="253:39" pos:end="253:54"><name pos:start="253:39" pos:end="253:54">transform_bypass</name></expr></argument>, <argument pos:start="253:57" pos:end="253:67"><expr pos:start="253:57" pos:end="253:67"><name pos:start="253:57" pos:end="253:67">PIXEL_SHIFT</name></expr></argument>,

                                      <argument pos:start="255:39" pos:end="255:50"><expr pos:start="255:39" pos:end="255:50"><name pos:start="255:39" pos:end="255:50">block_offset</name></expr></argument>, <argument pos:start="255:53" pos:end="255:60"><expr pos:start="255:53" pos:end="255:60"><name pos:start="255:53" pos:end="255:60">linesize</name></expr></argument>, <argument pos:start="255:63" pos:end="255:68"><expr pos:start="255:63" pos:end="255:68"><name pos:start="255:63" pos:end="255:68">dest_y</name></expr></argument>, <argument pos:start="255:71" pos:end="255:71"><expr pos:start="255:71" pos:end="255:71"><literal type="number" pos:start="255:71" pos:end="255:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="259:13" pos:end="263:70"><if pos:start="259:13" pos:end="263:70">if <condition pos:start="259:16" pos:end="259:38">(<expr pos:start="259:17" pos:end="259:37"><name pos:start="259:17" pos:end="259:37"><name pos:start="259:17" pos:end="259:18">sl</name><operator pos:start="259:19" pos:end="259:20">-&gt;</operator><name pos:start="259:21" pos:end="259:37">deblocking_filter</name></name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="263:70"><block_content pos:start="261:17" pos:end="263:70">

                <expr_stmt pos:start="261:17" pos:end="263:70"><expr pos:start="261:17" pos:end="263:69"><call pos:start="261:17" pos:end="263:69"><name pos:start="261:17" pos:end="261:30">xchg_mb_border</name><argument_list pos:start="261:31" pos:end="263:69">(<argument pos:start="261:32" pos:end="261:32"><expr pos:start="261:32" pos:end="261:32"><name pos:start="261:32" pos:end="261:32">h</name></expr></argument>, <argument pos:start="261:35" pos:end="261:36"><expr pos:start="261:35" pos:end="261:36"><name pos:start="261:35" pos:end="261:36">sl</name></expr></argument>, <argument pos:start="261:39" pos:end="261:44"><expr pos:start="261:39" pos:end="261:44"><name pos:start="261:39" pos:end="261:44">dest_y</name></expr></argument>, <argument pos:start="261:47" pos:end="261:53"><expr pos:start="261:47" pos:end="261:53"><name pos:start="261:47" pos:end="261:53">dest_cb</name></expr></argument>, <argument pos:start="261:56" pos:end="261:62"><expr pos:start="261:56" pos:end="261:62"><name pos:start="261:56" pos:end="261:62">dest_cr</name></expr></argument>, <argument pos:start="261:65" pos:end="261:72"><expr pos:start="261:65" pos:end="261:72"><name pos:start="261:65" pos:end="261:72">linesize</name></expr></argument>,

                               <argument pos:start="263:32" pos:end="263:41"><expr pos:start="263:32" pos:end="263:41"><name pos:start="263:32" pos:end="263:41">uvlinesize</name></expr></argument>, <argument pos:start="263:44" pos:end="263:44"><expr pos:start="263:44" pos:end="263:44"><literal type="number" pos:start="263:44" pos:end="263:44">0</literal></expr></argument>, <argument pos:start="263:47" pos:end="263:47"><expr pos:start="263:47" pos:end="263:47"><literal type="number" pos:start="263:47" pos:end="263:47">0</literal></expr></argument>, <argument pos:start="263:50" pos:end="263:55"><expr pos:start="263:50" pos:end="263:55"><name pos:start="263:50" pos:end="263:55">SIMPLE</name></expr></argument>, <argument pos:start="263:58" pos:end="263:68"><expr pos:start="263:58" pos:end="263:68"><name pos:start="263:58" pos:end="263:68">PIXEL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="265:11" pos:end="293:9">else <block pos:start="265:16" pos:end="293:9">{<block_content pos:start="267:13" pos:end="291:13">

            <if_stmt pos:start="267:13" pos:end="291:13"><if pos:start="267:13" pos:end="279:13">if <condition pos:start="267:16" pos:end="267:26">(<expr pos:start="267:17" pos:end="267:25"><name pos:start="267:17" pos:end="267:25">chroma422</name></expr>)</condition> <block pos:start="267:28" pos:end="279:13">{<block_content pos:start="269:17" pos:end="277:67">

                <function_decl pos:start="269:17" pos:end="277:67"><type pos:start="269:17" pos:end="269:20"><name pos:start="269:17" pos:end="269:20">FUNC</name></type>(<name pos:start="269:22" pos:end="269:34">hl_motion_422</name>)<parameter_list pos:start="269:36" pos:end="277:66">(<parameter pos:start="269:37" pos:end="269:37"><decl pos:start="269:37" pos:end="269:37"><type pos:start="269:37" pos:end="269:37"><name pos:start="269:37" pos:end="269:37">h</name></type></decl></parameter>, <parameter pos:start="269:40" pos:end="269:41"><decl pos:start="269:40" pos:end="269:41"><type pos:start="269:40" pos:end="269:41"><name pos:start="269:40" pos:end="269:41">sl</name></type></decl></parameter>, <parameter pos:start="269:44" pos:end="269:49"><decl pos:start="269:44" pos:end="269:49"><type pos:start="269:44" pos:end="269:49"><name pos:start="269:44" pos:end="269:49">dest_y</name></type></decl></parameter>, <parameter pos:start="269:52" pos:end="269:58"><decl pos:start="269:52" pos:end="269:58"><type pos:start="269:52" pos:end="269:58"><name pos:start="269:52" pos:end="269:58">dest_cb</name></type></decl></parameter>, <parameter pos:start="269:61" pos:end="269:67"><decl pos:start="269:61" pos:end="269:67"><type pos:start="269:61" pos:end="269:67"><name pos:start="269:61" pos:end="269:67">dest_cr</name></type></decl></parameter>,

                              <parameter pos:start="271:31" pos:end="271:41"><decl pos:start="271:31" pos:end="271:41"><type pos:start="271:31" pos:end="271:41"><name pos:start="271:31" pos:end="271:41"><name pos:start="271:31" pos:end="271:31">h</name><operator pos:start="271:32" pos:end="271:33">-&gt;</operator><name pos:start="271:34" pos:end="271:41">qpel_put</name></name></type></decl></parameter>, <parameter pos:start="271:44" pos:end="271:83"><decl pos:start="271:44" pos:end="271:83"><type pos:start="271:44" pos:end="271:83"><name pos:start="271:44" pos:end="271:83"><name pos:start="271:44" pos:end="271:44">h</name><operator pos:start="271:45" pos:end="271:46">-&gt;</operator><name pos:start="271:47" pos:end="271:56">h264chroma</name><operator pos:start="271:57" pos:end="271:57">.</operator><name pos:start="271:58" pos:end="271:83">put_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="273:31" pos:end="273:41"><decl pos:start="273:31" pos:end="273:41"><type pos:start="273:31" pos:end="273:41"><name pos:start="273:31" pos:end="273:41"><name pos:start="273:31" pos:end="273:31">h</name><operator pos:start="273:32" pos:end="273:33">-&gt;</operator><name pos:start="273:34" pos:end="273:41">qpel_avg</name></name></type></decl></parameter>, <parameter pos:start="273:44" pos:end="273:83"><decl pos:start="273:44" pos:end="273:83"><type pos:start="273:44" pos:end="273:83"><name pos:start="273:44" pos:end="273:83"><name pos:start="273:44" pos:end="273:44">h</name><operator pos:start="273:45" pos:end="273:46">-&gt;</operator><name pos:start="273:47" pos:end="273:56">h264chroma</name><operator pos:start="273:57" pos:end="273:57">.</operator><name pos:start="273:58" pos:end="273:83">avg_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="275:31" pos:end="275:63"><decl pos:start="275:31" pos:end="275:63"><type pos:start="275:31" pos:end="275:63"><name pos:start="275:31" pos:end="275:63"><name pos:start="275:31" pos:end="275:31">h</name><operator pos:start="275:32" pos:end="275:33">-&gt;</operator><name pos:start="275:34" pos:end="275:40">h264dsp</name><operator pos:start="275:41" pos:end="275:41">.</operator><name pos:start="275:42" pos:end="275:63">weight_h264_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="277:31" pos:end="277:65"><decl pos:start="277:31" pos:end="277:65"><type pos:start="277:31" pos:end="277:65"><name pos:start="277:31" pos:end="277:65"><name pos:start="277:31" pos:end="277:31">h</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:40">h264dsp</name><operator pos:start="277:41" pos:end="277:41">.</operator><name pos:start="277:42" pos:end="277:65">biweight_h264_pixels_tab</name></name></type></decl></parameter>)</parameter_list>;</function_decl>

            </block_content>}</block></if> <else pos:start="279:15" pos:end="291:13">else <block pos:start="279:20" pos:end="291:13">{<block_content pos:start="281:17" pos:end="289:67">

                <function_decl pos:start="281:17" pos:end="289:67"><type pos:start="281:17" pos:end="281:20"><name pos:start="281:17" pos:end="281:20">FUNC</name></type>(<name pos:start="281:22" pos:end="281:34">hl_motion_420</name>)<parameter_list pos:start="281:36" pos:end="289:66">(<parameter pos:start="281:37" pos:end="281:37"><decl pos:start="281:37" pos:end="281:37"><type pos:start="281:37" pos:end="281:37"><name pos:start="281:37" pos:end="281:37">h</name></type></decl></parameter>, <parameter pos:start="281:40" pos:end="281:41"><decl pos:start="281:40" pos:end="281:41"><type pos:start="281:40" pos:end="281:41"><name pos:start="281:40" pos:end="281:41">sl</name></type></decl></parameter>, <parameter pos:start="281:44" pos:end="281:49"><decl pos:start="281:44" pos:end="281:49"><type pos:start="281:44" pos:end="281:49"><name pos:start="281:44" pos:end="281:49">dest_y</name></type></decl></parameter>, <parameter pos:start="281:52" pos:end="281:58"><decl pos:start="281:52" pos:end="281:58"><type pos:start="281:52" pos:end="281:58"><name pos:start="281:52" pos:end="281:58">dest_cb</name></type></decl></parameter>, <parameter pos:start="281:61" pos:end="281:67"><decl pos:start="281:61" pos:end="281:67"><type pos:start="281:61" pos:end="281:67"><name pos:start="281:61" pos:end="281:67">dest_cr</name></type></decl></parameter>,

                              <parameter pos:start="283:31" pos:end="283:41"><decl pos:start="283:31" pos:end="283:41"><type pos:start="283:31" pos:end="283:41"><name pos:start="283:31" pos:end="283:41"><name pos:start="283:31" pos:end="283:31">h</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:41">qpel_put</name></name></type></decl></parameter>, <parameter pos:start="283:44" pos:end="283:83"><decl pos:start="283:44" pos:end="283:83"><type pos:start="283:44" pos:end="283:83"><name pos:start="283:44" pos:end="283:83"><name pos:start="283:44" pos:end="283:44">h</name><operator pos:start="283:45" pos:end="283:46">-&gt;</operator><name pos:start="283:47" pos:end="283:56">h264chroma</name><operator pos:start="283:57" pos:end="283:57">.</operator><name pos:start="283:58" pos:end="283:83">put_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="285:31" pos:end="285:41"><decl pos:start="285:31" pos:end="285:41"><type pos:start="285:31" pos:end="285:41"><name pos:start="285:31" pos:end="285:41"><name pos:start="285:31" pos:end="285:31">h</name><operator pos:start="285:32" pos:end="285:33">-&gt;</operator><name pos:start="285:34" pos:end="285:41">qpel_avg</name></name></type></decl></parameter>, <parameter pos:start="285:44" pos:end="285:83"><decl pos:start="285:44" pos:end="285:83"><type pos:start="285:44" pos:end="285:83"><name pos:start="285:44" pos:end="285:83"><name pos:start="285:44" pos:end="285:44">h</name><operator pos:start="285:45" pos:end="285:46">-&gt;</operator><name pos:start="285:47" pos:end="285:56">h264chroma</name><operator pos:start="285:57" pos:end="285:57">.</operator><name pos:start="285:58" pos:end="285:83">avg_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="287:31" pos:end="287:63"><decl pos:start="287:31" pos:end="287:63"><type pos:start="287:31" pos:end="287:63"><name pos:start="287:31" pos:end="287:63"><name pos:start="287:31" pos:end="287:31">h</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:40">h264dsp</name><operator pos:start="287:41" pos:end="287:41">.</operator><name pos:start="287:42" pos:end="287:63">weight_h264_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="289:31" pos:end="289:65"><decl pos:start="289:31" pos:end="289:65"><type pos:start="289:31" pos:end="289:65"><name pos:start="289:31" pos:end="289:65"><name pos:start="289:31" pos:end="289:31">h</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:40">h264dsp</name><operator pos:start="289:41" pos:end="289:41">.</operator><name pos:start="289:42" pos:end="289:65">biweight_h264_pixels_tab</name></name></type></decl></parameter>)</parameter_list>;</function_decl>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="297:9" pos:end="299:79"><expr pos:start="297:9" pos:end="299:78"><call pos:start="297:9" pos:end="299:78"><name pos:start="297:9" pos:end="297:30">hl_decode_mb_idct_luma</name><argument_list pos:start="297:31" pos:end="299:78">(<argument pos:start="297:32" pos:end="297:32"><expr pos:start="297:32" pos:end="297:32"><name pos:start="297:32" pos:end="297:32">h</name></expr></argument>, <argument pos:start="297:35" pos:end="297:36"><expr pos:start="297:35" pos:end="297:36"><name pos:start="297:35" pos:end="297:36">sl</name></expr></argument>, <argument pos:start="297:39" pos:end="297:45"><expr pos:start="297:39" pos:end="297:45"><name pos:start="297:39" pos:end="297:45">mb_type</name></expr></argument>, <argument pos:start="297:48" pos:end="297:53"><expr pos:start="297:48" pos:end="297:53"><name pos:start="297:48" pos:end="297:53">SIMPLE</name></expr></argument>, <argument pos:start="297:56" pos:end="297:71"><expr pos:start="297:56" pos:end="297:71"><name pos:start="297:56" pos:end="297:71">transform_bypass</name></expr></argument>,

                               <argument pos:start="299:32" pos:end="299:42"><expr pos:start="299:32" pos:end="299:42"><name pos:start="299:32" pos:end="299:42">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="299:45" pos:end="299:56"><expr pos:start="299:45" pos:end="299:56"><name pos:start="299:45" pos:end="299:56">block_offset</name></expr></argument>, <argument pos:start="299:59" pos:end="299:66"><expr pos:start="299:59" pos:end="299:66"><name pos:start="299:59" pos:end="299:66">linesize</name></expr></argument>, <argument pos:start="299:69" pos:end="299:74"><expr pos:start="299:69" pos:end="299:74"><name pos:start="299:69" pos:end="299:74">dest_y</name></expr></argument>, <argument pos:start="299:77" pos:end="299:77"><expr pos:start="299:77" pos:end="299:77"><literal type="number" pos:start="299:77" pos:end="299:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="303:9" pos:end="409:9"><if pos:start="303:9" pos:end="409:9">if <condition pos:start="303:12" pos:end="305:29">(<expr pos:start="303:13" pos:end="305:28"><operator pos:start="303:13" pos:end="303:13">(</operator><name pos:start="303:14" pos:end="303:19">SIMPLE</name> <operator pos:start="303:21" pos:end="303:22">||</operator> <operator pos:start="303:24" pos:end="303:24">!</operator><name pos:start="303:25" pos:end="303:35">CONFIG_GRAY</name> <operator pos:start="303:37" pos:end="303:38">||</operator> <operator pos:start="303:40" pos:end="303:40">!</operator><operator pos:start="303:41" pos:end="303:41">(</operator><name pos:start="303:42" pos:end="303:49"><name pos:start="303:42" pos:end="303:42">h</name><operator pos:start="303:43" pos:end="303:44">-&gt;</operator><name pos:start="303:45" pos:end="303:49">flags</name></name> <operator pos:start="303:51" pos:end="303:51">&amp;</operator> <name pos:start="303:53" pos:end="303:70">AV_CODEC_FLAG_GRAY</name><operator pos:start="303:71" pos:end="303:71">)</operator><operator pos:start="303:72" pos:end="303:72">)</operator> <operator pos:start="303:74" pos:end="303:75">&amp;&amp;</operator>

            <operator pos:start="305:13" pos:end="305:13">(</operator><name pos:start="305:14" pos:end="305:20"><name pos:start="305:14" pos:end="305:15">sl</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:20">cbp</name></name> <operator pos:start="305:22" pos:end="305:22">&amp;</operator> <literal type="number" pos:start="305:24" pos:end="305:27">0x30</literal><operator pos:start="305:28" pos:end="305:28">)</operator></expr>)</condition> <block pos:start="305:31" pos:end="409:9">{<block_content pos:start="307:13" pos:end="407:13">

            <decl_stmt pos:start="307:13" pos:end="307:52"><decl pos:start="307:13" pos:end="307:51"><type pos:start="307:13" pos:end="307:21"><name pos:start="307:13" pos:end="307:19">uint8_t</name> <modifier pos:start="307:21" pos:end="307:21">*</modifier></type><name pos:start="307:22" pos:end="307:28"><name pos:start="307:22" pos:end="307:25">dest</name><index pos:start="307:26" pos:end="307:28">[<expr pos:start="307:27" pos:end="307:27"><literal type="number" pos:start="307:27" pos:end="307:27">2</literal></expr>]</index></name> <init pos:start="307:30" pos:end="307:51">= <expr pos:start="307:32" pos:end="307:51"><block pos:start="307:32" pos:end="307:51">{ <expr pos:start="307:34" pos:end="307:40"><name pos:start="307:34" pos:end="307:40">dest_cb</name></expr>, <expr pos:start="307:43" pos:end="307:49"><name pos:start="307:43" pos:end="307:49">dest_cr</name></expr> }</block></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="309:13" pos:end="407:13"><if pos:start="309:13" pos:end="371:13">if <condition pos:start="309:16" pos:end="309:33">(<expr pos:start="309:17" pos:end="309:32"><name pos:start="309:17" pos:end="309:32">transform_bypass</name></expr>)</condition> <block pos:start="309:35" pos:end="371:13">{<block_content pos:start="311:17" pos:end="369:17">

                <if_stmt pos:start="311:17" pos:end="369:17"><if pos:start="311:17" pos:end="333:17">if <condition pos:start="311:20" pos:end="315:58">(<expr pos:start="311:21" pos:end="315:57"><call pos:start="311:21" pos:end="311:37"><name pos:start="311:21" pos:end="311:28">IS_INTRA</name><argument_list pos:start="311:29" pos:end="311:37">(<argument pos:start="311:30" pos:end="311:36"><expr pos:start="311:30" pos:end="311:36"><name pos:start="311:30" pos:end="311:36">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="311:39" pos:end="311:40">&amp;&amp;</operator> <name pos:start="311:42" pos:end="311:59"><name pos:start="311:42" pos:end="311:42">h</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:47">sps</name><operator pos:start="311:48" pos:end="311:48">.</operator><name pos:start="311:49" pos:end="311:59">profile_idc</name></name> <operator pos:start="311:61" pos:end="311:62">==</operator> <literal type="number" pos:start="311:64" pos:end="311:66">244</literal> <operator pos:start="311:68" pos:end="311:69">&amp;&amp;</operator>

                    <operator pos:start="313:21" pos:end="313:21">(</operator><name pos:start="313:22" pos:end="313:41"><name pos:start="313:22" pos:end="313:23">sl</name><operator pos:start="313:24" pos:end="313:25">-&gt;</operator><name pos:start="313:26" pos:end="313:41">chroma_pred_mode</name></name> <operator pos:start="313:43" pos:end="313:44">==</operator> <name pos:start="313:46" pos:end="313:57">VERT_PRED8x8</name> <operator pos:start="313:59" pos:end="313:60">||</operator>

                     <name pos:start="315:22" pos:end="315:41"><name pos:start="315:22" pos:end="315:23">sl</name><operator pos:start="315:24" pos:end="315:25">-&gt;</operator><name pos:start="315:26" pos:end="315:41">chroma_pred_mode</name></name> <operator pos:start="315:43" pos:end="315:44">==</operator> <name pos:start="315:46" pos:end="315:56">HOR_PRED8x8</name><operator pos:start="315:57" pos:end="315:57">)</operator></expr>)</condition> <block pos:start="315:60" pos:end="333:17">{<block_content pos:start="317:21" pos:end="331:72">

                    <expr_stmt pos:start="317:21" pos:end="323:72"><expr pos:start="317:21" pos:end="323:71"><name pos:start="317:21" pos:end="317:60"><name pos:start="317:21" pos:end="317:21">h</name><operator pos:start="317:22" pos:end="317:23">-&gt;</operator><name pos:start="317:24" pos:end="317:26">hpc</name><operator pos:start="317:27" pos:end="317:27">.</operator><name pos:start="317:28" pos:end="317:38">pred8x8_add</name><index pos:start="317:39" pos:end="317:60">[<expr pos:start="317:40" pos:end="317:59"><name pos:start="317:40" pos:end="317:59"><name pos:start="317:40" pos:end="317:41">sl</name><operator pos:start="317:42" pos:end="317:43">-&gt;</operator><name pos:start="317:44" pos:end="317:59">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="317:61" pos:end="317:61">(</operator><name pos:start="317:62" pos:end="317:68"><name pos:start="317:62" pos:end="317:65">dest</name><index pos:start="317:66" pos:end="317:68">[<expr pos:start="317:67" pos:end="317:67"><literal type="number" pos:start="317:67" pos:end="317:67">0</literal></expr>]</index></name><operator pos:start="317:69" pos:end="317:69">,</operator>

                                                            <name pos:start="319:61" pos:end="319:72">block_offset</name> <operator pos:start="319:74" pos:end="319:74">+</operator> <literal type="number" pos:start="319:76" pos:end="319:77">16</literal><operator pos:start="319:78" pos:end="319:78">,</operator>

                                                            <name pos:start="321:61" pos:end="321:66"><name pos:start="321:61" pos:end="321:62">sl</name><operator pos:start="321:63" pos:end="321:64">-&gt;</operator><name pos:start="321:65" pos:end="321:66">mb</name></name> <operator pos:start="321:68" pos:end="321:68">+</operator> <operator pos:start="321:70" pos:end="321:70">(</operator><literal type="number" pos:start="321:71" pos:end="321:72">16</literal> <operator pos:start="321:74" pos:end="321:74">*</operator> <literal type="number" pos:start="321:76" pos:end="321:77">16</literal> <operator pos:start="321:79" pos:end="321:79">*</operator> <literal type="number" pos:start="321:81" pos:end="321:81">1</literal> <operator pos:start="321:83" pos:end="321:84">&lt;&lt;</operator> <name pos:start="321:86" pos:end="321:96">PIXEL_SHIFT</name><operator pos:start="321:97" pos:end="321:97">)</operator><operator pos:start="321:98" pos:end="321:98">,</operator>

                                                            <name pos:start="323:61" pos:end="323:70">uvlinesize</name><operator pos:start="323:71" pos:end="323:71">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="325:21" pos:end="331:72"><expr pos:start="325:21" pos:end="331:71"><name pos:start="325:21" pos:end="325:60"><name pos:start="325:21" pos:end="325:21">h</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:26">hpc</name><operator pos:start="325:27" pos:end="325:27">.</operator><name pos:start="325:28" pos:end="325:38">pred8x8_add</name><index pos:start="325:39" pos:end="325:60">[<expr pos:start="325:40" pos:end="325:59"><name pos:start="325:40" pos:end="325:59"><name pos:start="325:40" pos:end="325:41">sl</name><operator pos:start="325:42" pos:end="325:43">-&gt;</operator><name pos:start="325:44" pos:end="325:59">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="325:61" pos:end="325:61">(</operator><name pos:start="325:62" pos:end="325:68"><name pos:start="325:62" pos:end="325:65">dest</name><index pos:start="325:66" pos:end="325:68">[<expr pos:start="325:67" pos:end="325:67"><literal type="number" pos:start="325:67" pos:end="325:67">1</literal></expr>]</index></name><operator pos:start="325:69" pos:end="325:69">,</operator>

                                                            <name pos:start="327:61" pos:end="327:72">block_offset</name> <operator pos:start="327:74" pos:end="327:74">+</operator> <literal type="number" pos:start="327:76" pos:end="327:77">32</literal><operator pos:start="327:78" pos:end="327:78">,</operator>

                                                            <name pos:start="329:61" pos:end="329:66"><name pos:start="329:61" pos:end="329:62">sl</name><operator pos:start="329:63" pos:end="329:64">-&gt;</operator><name pos:start="329:65" pos:end="329:66">mb</name></name> <operator pos:start="329:68" pos:end="329:68">+</operator> <operator pos:start="329:70" pos:end="329:70">(</operator><literal type="number" pos:start="329:71" pos:end="329:72">16</literal> <operator pos:start="329:74" pos:end="329:74">*</operator> <literal type="number" pos:start="329:76" pos:end="329:77">16</literal> <operator pos:start="329:79" pos:end="329:79">*</operator> <literal type="number" pos:start="329:81" pos:end="329:81">2</literal> <operator pos:start="329:83" pos:end="329:84">&lt;&lt;</operator> <name pos:start="329:86" pos:end="329:96">PIXEL_SHIFT</name><operator pos:start="329:97" pos:end="329:97">)</operator><operator pos:start="329:98" pos:end="329:98">,</operator>

                                                            <name pos:start="331:61" pos:end="331:70">uvlinesize</name><operator pos:start="331:71" pos:end="331:71">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="333:19" pos:end="369:17">else <block pos:start="333:24" pos:end="369:17">{<block_content pos:start="335:21" pos:end="367:21">

                    <expr_stmt pos:start="335:21" pos:end="335:65"><expr pos:start="335:21" pos:end="335:64"><name pos:start="335:21" pos:end="335:28">idct_add</name> <operator pos:start="335:30" pos:end="335:30">=</operator> <name pos:start="335:32" pos:end="335:64"><name pos:start="335:32" pos:end="335:32">h</name><operator pos:start="335:33" pos:end="335:34">-&gt;</operator><name pos:start="335:35" pos:end="335:41">h264dsp</name><operator pos:start="335:42" pos:end="335:42">.</operator><name pos:start="335:43" pos:end="335:64">h264_add_pixels4_clear</name></name></expr>;</expr_stmt>

                    <for pos:start="337:21" pos:end="367:21">for <control pos:start="337:25" pos:end="337:43">(<init pos:start="337:26" pos:end="337:31"><expr pos:start="337:26" pos:end="337:30"><name pos:start="337:26" pos:end="337:26">j</name> <operator pos:start="337:28" pos:end="337:28">=</operator> <literal type="number" pos:start="337:30" pos:end="337:30">1</literal></expr>;</init> <condition pos:start="337:33" pos:end="337:38"><expr pos:start="337:33" pos:end="337:37"><name pos:start="337:33" pos:end="337:33">j</name> <operator pos:start="337:35" pos:end="337:35">&lt;</operator> <literal type="number" pos:start="337:37" pos:end="337:37">3</literal></expr>;</condition> <incr pos:start="337:40" pos:end="337:42"><expr pos:start="337:40" pos:end="337:42"><name pos:start="337:40" pos:end="337:40">j</name><operator pos:start="337:41" pos:end="337:42">++</operator></expr></incr>)</control> <block pos:start="337:45" pos:end="367:21">{<block_content pos:start="339:25" pos:end="365:25">

                        <for pos:start="339:25" pos:end="349:53">for <control pos:start="339:29" pos:end="339:61">(<init pos:start="339:30" pos:end="339:40"><expr pos:start="339:30" pos:end="339:39"><name pos:start="339:30" pos:end="339:30">i</name> <operator pos:start="339:32" pos:end="339:32">=</operator> <name pos:start="339:34" pos:end="339:34">j</name> <operator pos:start="339:36" pos:end="339:36">*</operator> <literal type="number" pos:start="339:38" pos:end="339:39">16</literal></expr>;</init> <condition pos:start="339:42" pos:end="339:56"><expr pos:start="339:42" pos:end="339:55"><name pos:start="339:42" pos:end="339:42">i</name> <operator pos:start="339:44" pos:end="339:44">&lt;</operator> <name pos:start="339:46" pos:end="339:46">j</name> <operator pos:start="339:48" pos:end="339:48">*</operator> <literal type="number" pos:start="339:50" pos:end="339:53">16</literal> <operator pos:start="339:53" pos:end="339:53">+</operator> <literal type="number" pos:start="339:55" pos:end="339:55">4</literal></expr>;</condition> <incr pos:start="339:58" pos:end="339:60"><expr pos:start="339:58" pos:end="339:60"><name pos:start="339:58" pos:end="339:58">i</name><operator pos:start="339:59" pos:end="339:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="341:29" pos:end="349:53"><block_content pos:start="341:29" pos:end="349:53">

                            <if_stmt pos:start="341:29" pos:end="349:53"><if pos:start="341:29" pos:end="349:53">if <condition pos:start="341:32" pos:end="343:73">(<expr pos:start="341:33" pos:end="343:72"><name pos:start="341:33" pos:end="341:66"><name pos:start="341:33" pos:end="341:34">sl</name><operator pos:start="341:35" pos:end="341:36">-&gt;</operator><name pos:start="341:37" pos:end="341:56">non_zero_count_cache</name><index pos:start="341:57" pos:end="341:66">[<expr pos:start="341:58" pos:end="341:65"><name pos:start="341:58" pos:end="341:65"><name pos:start="341:58" pos:end="341:62">scan8</name><index pos:start="341:63" pos:end="341:65">[<expr pos:start="341:64" pos:end="341:64"><name pos:start="341:64" pos:end="341:64">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="341:68" pos:end="341:69">||</operator>

                                <call pos:start="343:33" pos:end="343:72"><name pos:start="343:33" pos:end="343:43">dctcoef_get</name><argument_list pos:start="343:44" pos:end="343:72">(<argument pos:start="343:45" pos:end="343:50"><expr pos:start="343:45" pos:end="343:50"><name pos:start="343:45" pos:end="343:50"><name pos:start="343:45" pos:end="343:46">sl</name><operator pos:start="343:47" pos:end="343:48">-&gt;</operator><name pos:start="343:49" pos:end="343:50">mb</name></name></expr></argument>, <argument pos:start="343:53" pos:end="343:63"><expr pos:start="343:53" pos:end="343:63"><name pos:start="343:53" pos:end="343:63">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="343:66" pos:end="343:71"><expr pos:start="343:66" pos:end="343:71"><name pos:start="343:66" pos:end="343:66">i</name> <operator pos:start="343:68" pos:end="343:68">*</operator> <literal type="number" pos:start="343:70" pos:end="343:71">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="345:33" pos:end="349:53"><block_content pos:start="345:33" pos:end="349:53">

                                <expr_stmt pos:start="345:33" pos:end="349:53"><expr pos:start="345:33" pos:end="349:52"><call pos:start="345:33" pos:end="349:52"><name pos:start="345:33" pos:end="345:40">idct_add</name><argument_list pos:start="345:41" pos:end="349:52">(<argument pos:start="345:42" pos:end="345:70"><expr pos:start="345:42" pos:end="345:70"><name pos:start="345:42" pos:end="345:52"><name pos:start="345:42" pos:end="345:45">dest</name><index pos:start="345:46" pos:end="345:52">[<expr pos:start="345:47" pos:end="345:51"><name pos:start="345:47" pos:end="345:47">j</name> <operator pos:start="345:49" pos:end="345:49">-</operator> <literal type="number" pos:start="345:51" pos:end="345:51">1</literal></expr>]</index></name> <operator pos:start="345:54" pos:end="345:54">+</operator> <name pos:start="345:56" pos:end="345:70"><name pos:start="345:56" pos:end="345:67">block_offset</name><index pos:start="345:68" pos:end="345:70">[<expr pos:start="345:69" pos:end="345:69"><name pos:start="345:69" pos:end="345:69">i</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="347:42" pos:end="347:73"><expr pos:start="347:42" pos:end="347:73"><name pos:start="347:42" pos:end="347:47"><name pos:start="347:42" pos:end="347:43">sl</name><operator pos:start="347:44" pos:end="347:45">-&gt;</operator><name pos:start="347:46" pos:end="347:47">mb</name></name> <operator pos:start="347:49" pos:end="347:49">+</operator> <operator pos:start="347:51" pos:end="347:51">(</operator><name pos:start="347:52" pos:end="347:52">i</name> <operator pos:start="347:54" pos:end="347:54">*</operator> <literal type="number" pos:start="347:56" pos:end="347:57">16</literal> <operator pos:start="347:59" pos:end="347:60">&lt;&lt;</operator> <name pos:start="347:62" pos:end="347:72">PIXEL_SHIFT</name><operator pos:start="347:73" pos:end="347:73">)</operator></expr></argument>,

                                         <argument pos:start="349:42" pos:end="349:51"><expr pos:start="349:42" pos:end="349:51"><name pos:start="349:42" pos:end="349:51">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        <if_stmt pos:start="351:25" pos:end="365:25"><if pos:start="351:25" pos:end="365:25">if <condition pos:start="351:28" pos:end="351:38">(<expr pos:start="351:29" pos:end="351:37"><name pos:start="351:29" pos:end="351:37">chroma422</name></expr>)</condition> <block pos:start="351:40" pos:end="365:25">{<block_content pos:start="353:29" pos:end="363:57">

                            <for pos:start="353:29" pos:end="363:57">for <control pos:start="353:33" pos:end="353:69">(<init pos:start="353:34" pos:end="353:48"><expr pos:start="353:34" pos:end="353:47"><name pos:start="353:34" pos:end="353:34">i</name> <operator pos:start="353:36" pos:end="353:36">=</operator> <name pos:start="353:38" pos:end="353:38">j</name> <operator pos:start="353:40" pos:end="353:40">*</operator> <literal type="number" pos:start="353:42" pos:end="353:45">16</literal> <operator pos:start="353:45" pos:end="353:45">+</operator> <literal type="number" pos:start="353:47" pos:end="353:47">4</literal></expr>;</init> <condition pos:start="353:50" pos:end="353:64"><expr pos:start="353:50" pos:end="353:63"><name pos:start="353:50" pos:end="353:50">i</name> <operator pos:start="353:52" pos:end="353:52">&lt;</operator> <name pos:start="353:54" pos:end="353:54">j</name> <operator pos:start="353:56" pos:end="353:56">*</operator> <literal type="number" pos:start="353:58" pos:end="353:61">16</literal> <operator pos:start="353:61" pos:end="353:61">+</operator> <literal type="number" pos:start="353:63" pos:end="353:63">8</literal></expr>;</condition> <incr pos:start="353:66" pos:end="353:68"><expr pos:start="353:66" pos:end="353:68"><name pos:start="353:66" pos:end="353:66">i</name><operator pos:start="353:67" pos:end="353:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="355:33" pos:end="363:57"><block_content pos:start="355:33" pos:end="363:57">

                                <if_stmt pos:start="355:33" pos:end="363:57"><if pos:start="355:33" pos:end="363:57">if <condition pos:start="355:36" pos:end="357:77">(<expr pos:start="355:37" pos:end="357:76"><name pos:start="355:37" pos:end="355:74"><name pos:start="355:37" pos:end="355:38">sl</name><operator pos:start="355:39" pos:end="355:40">-&gt;</operator><name pos:start="355:41" pos:end="355:60">non_zero_count_cache</name><index pos:start="355:61" pos:end="355:74">[<expr pos:start="355:62" pos:end="355:73"><name pos:start="355:62" pos:end="355:73"><name pos:start="355:62" pos:end="355:66">scan8</name><index pos:start="355:67" pos:end="355:73">[<expr pos:start="355:68" pos:end="355:72"><name pos:start="355:68" pos:end="355:68">i</name> <operator pos:start="355:70" pos:end="355:70">+</operator> <literal type="number" pos:start="355:72" pos:end="355:72">4</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="355:76" pos:end="355:77">||</operator>

                                    <call pos:start="357:37" pos:end="357:76"><name pos:start="357:37" pos:end="357:47">dctcoef_get</name><argument_list pos:start="357:48" pos:end="357:76">(<argument pos:start="357:49" pos:end="357:54"><expr pos:start="357:49" pos:end="357:54"><name pos:start="357:49" pos:end="357:54"><name pos:start="357:49" pos:end="357:50">sl</name><operator pos:start="357:51" pos:end="357:52">-&gt;</operator><name pos:start="357:53" pos:end="357:54">mb</name></name></expr></argument>, <argument pos:start="357:57" pos:end="357:67"><expr pos:start="357:57" pos:end="357:67"><name pos:start="357:57" pos:end="357:67">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="357:70" pos:end="357:75"><expr pos:start="357:70" pos:end="357:75"><name pos:start="357:70" pos:end="357:70">i</name> <operator pos:start="357:72" pos:end="357:72">*</operator> <literal type="number" pos:start="357:74" pos:end="357:75">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="359:37" pos:end="363:57"><block_content pos:start="359:37" pos:end="363:57">

                                    <expr_stmt pos:start="359:37" pos:end="363:57"><expr pos:start="359:37" pos:end="363:56"><call pos:start="359:37" pos:end="363:56"><name pos:start="359:37" pos:end="359:44">idct_add</name><argument_list pos:start="359:45" pos:end="363:56">(<argument pos:start="359:46" pos:end="359:78"><expr pos:start="359:46" pos:end="359:78"><name pos:start="359:46" pos:end="359:56"><name pos:start="359:46" pos:end="359:49">dest</name><index pos:start="359:50" pos:end="359:56">[<expr pos:start="359:51" pos:end="359:55"><name pos:start="359:51" pos:end="359:51">j</name> <operator pos:start="359:53" pos:end="359:53">-</operator> <literal type="number" pos:start="359:55" pos:end="359:55">1</literal></expr>]</index></name> <operator pos:start="359:58" pos:end="359:58">+</operator> <name pos:start="359:60" pos:end="359:78"><name pos:start="359:60" pos:end="359:71">block_offset</name><index pos:start="359:72" pos:end="359:78">[<expr pos:start="359:73" pos:end="359:77"><name pos:start="359:73" pos:end="359:73">i</name> <operator pos:start="359:75" pos:end="359:75">+</operator> <literal type="number" pos:start="359:77" pos:end="359:77">4</literal></expr>]</index></name></expr></argument>,

                                             <argument pos:start="361:46" pos:end="361:77"><expr pos:start="361:46" pos:end="361:77"><name pos:start="361:46" pos:end="361:51"><name pos:start="361:46" pos:end="361:47">sl</name><operator pos:start="361:48" pos:end="361:49">-&gt;</operator><name pos:start="361:50" pos:end="361:51">mb</name></name> <operator pos:start="361:53" pos:end="361:53">+</operator> <operator pos:start="361:55" pos:end="361:55">(</operator><name pos:start="361:56" pos:end="361:56">i</name> <operator pos:start="361:58" pos:end="361:58">*</operator> <literal type="number" pos:start="361:60" pos:end="361:61">16</literal> <operator pos:start="361:63" pos:end="361:64">&lt;&lt;</operator> <name pos:start="361:66" pos:end="361:76">PIXEL_SHIFT</name><operator pos:start="361:77" pos:end="361:77">)</operator></expr></argument>,

                                             <argument pos:start="363:46" pos:end="363:55"><expr pos:start="363:46" pos:end="363:55"><name pos:start="363:46" pos:end="363:55">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="371:15" pos:end="407:13">else <block pos:start="371:20" pos:end="407:13">{<block_content pos:start="373:17" pos:end="405:68">

                <decl_stmt pos:start="373:17" pos:end="373:26"><decl pos:start="373:17" pos:end="373:25"><type pos:start="373:17" pos:end="373:19"><name pos:start="373:17" pos:end="373:19">int</name></type> <name pos:start="373:21" pos:end="373:25"><name pos:start="373:21" pos:end="373:22">qp</name><index pos:start="373:23" pos:end="373:25">[<expr pos:start="373:24" pos:end="373:24"><literal type="number" pos:start="373:24" pos:end="373:24">2</literal></expr>]</index></name></decl>;</decl_stmt>

                <if_stmt pos:start="375:17" pos:end="387:17"><if pos:start="375:17" pos:end="381:17">if <condition pos:start="375:20" pos:end="375:30">(<expr pos:start="375:21" pos:end="375:29"><name pos:start="375:21" pos:end="375:29">chroma422</name></expr>)</condition> <block pos:start="375:32" pos:end="381:17">{<block_content pos:start="377:21" pos:end="379:49">

                    <expr_stmt pos:start="377:21" pos:end="377:49"><expr pos:start="377:21" pos:end="377:48"><name pos:start="377:21" pos:end="377:25"><name pos:start="377:21" pos:end="377:22">qp</name><index pos:start="377:23" pos:end="377:25">[<expr pos:start="377:24" pos:end="377:24"><literal type="number" pos:start="377:24" pos:end="377:24">0</literal></expr>]</index></name> <operator pos:start="377:27" pos:end="377:27">=</operator> <name pos:start="377:29" pos:end="377:44"><name pos:start="377:29" pos:end="377:30">sl</name><operator pos:start="377:31" pos:end="377:32">-&gt;</operator><name pos:start="377:33" pos:end="377:41">chroma_qp</name><index pos:start="377:42" pos:end="377:44">[<expr pos:start="377:43" pos:end="377:43"><literal type="number" pos:start="377:43" pos:end="377:43">0</literal></expr>]</index></name> <operator pos:start="377:46" pos:end="377:46">+</operator> <literal type="number" pos:start="377:48" pos:end="377:48">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="379:21" pos:end="379:49"><expr pos:start="379:21" pos:end="379:48"><name pos:start="379:21" pos:end="379:25"><name pos:start="379:21" pos:end="379:22">qp</name><index pos:start="379:23" pos:end="379:25">[<expr pos:start="379:24" pos:end="379:24"><literal type="number" pos:start="379:24" pos:end="379:24">1</literal></expr>]</index></name> <operator pos:start="379:27" pos:end="379:27">=</operator> <name pos:start="379:29" pos:end="379:44"><name pos:start="379:29" pos:end="379:30">sl</name><operator pos:start="379:31" pos:end="379:32">-&gt;</operator><name pos:start="379:33" pos:end="379:41">chroma_qp</name><index pos:start="379:42" pos:end="379:44">[<expr pos:start="379:43" pos:end="379:43"><literal type="number" pos:start="379:43" pos:end="379:43">1</literal></expr>]</index></name> <operator pos:start="379:46" pos:end="379:46">+</operator> <literal type="number" pos:start="379:48" pos:end="379:48">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="381:19" pos:end="387:17">else <block pos:start="381:24" pos:end="387:17">{<block_content pos:start="383:21" pos:end="385:45">

                    <expr_stmt pos:start="383:21" pos:end="383:45"><expr pos:start="383:21" pos:end="383:44"><name pos:start="383:21" pos:end="383:25"><name pos:start="383:21" pos:end="383:22">qp</name><index pos:start="383:23" pos:end="383:25">[<expr pos:start="383:24" pos:end="383:24"><literal type="number" pos:start="383:24" pos:end="383:24">0</literal></expr>]</index></name> <operator pos:start="383:27" pos:end="383:27">=</operator> <name pos:start="383:29" pos:end="383:44"><name pos:start="383:29" pos:end="383:30">sl</name><operator pos:start="383:31" pos:end="383:32">-&gt;</operator><name pos:start="383:33" pos:end="383:41">chroma_qp</name><index pos:start="383:42" pos:end="383:44">[<expr pos:start="383:43" pos:end="383:43"><literal type="number" pos:start="383:43" pos:end="383:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:45"><expr pos:start="385:21" pos:end="385:44"><name pos:start="385:21" pos:end="385:25"><name pos:start="385:21" pos:end="385:22">qp</name><index pos:start="385:23" pos:end="385:25">[<expr pos:start="385:24" pos:end="385:24"><literal type="number" pos:start="385:24" pos:end="385:24">1</literal></expr>]</index></name> <operator pos:start="385:27" pos:end="385:27">=</operator> <name pos:start="385:29" pos:end="385:44"><name pos:start="385:29" pos:end="385:30">sl</name><operator pos:start="385:31" pos:end="385:32">-&gt;</operator><name pos:start="385:33" pos:end="385:41">chroma_qp</name><index pos:start="385:42" pos:end="385:44">[<expr pos:start="385:43" pos:end="385:43"><literal type="number" pos:start="385:43" pos:end="385:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="389:17" pos:end="393:115"><if pos:start="389:17" pos:end="393:115">if <condition pos:start="389:20" pos:end="389:79">(<expr pos:start="389:21" pos:end="389:78"><name pos:start="389:21" pos:end="389:78"><name pos:start="389:21" pos:end="389:22">sl</name><operator pos:start="389:23" pos:end="389:24">-&gt;</operator><name pos:start="389:25" pos:end="389:44">non_zero_count_cache</name><index pos:start="389:45" pos:end="389:78">[<expr pos:start="389:46" pos:end="389:77"><name pos:start="389:46" pos:end="389:77"><name pos:start="389:46" pos:end="389:50">scan8</name><index pos:start="389:51" pos:end="389:77">[<expr pos:start="389:52" pos:end="389:76"><name pos:start="389:52" pos:end="389:72">CHROMA_DC_BLOCK_INDEX</name> <operator pos:start="389:74" pos:end="389:74">+</operator> <literal type="number" pos:start="389:76" pos:end="389:76">0</literal></expr>]</index></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="391:21" pos:end="393:115"><block_content pos:start="391:21" pos:end="393:115">

                    <expr_stmt pos:start="391:21" pos:end="393:115"><expr pos:start="391:21" pos:end="393:114"><call pos:start="391:21" pos:end="393:114"><name pos:start="391:21" pos:end="391:58"><name pos:start="391:21" pos:end="391:21">h</name><operator pos:start="391:22" pos:end="391:23">-&gt;</operator><name pos:start="391:24" pos:end="391:30">h264dsp</name><operator pos:start="391:31" pos:end="391:31">.</operator><name pos:start="391:32" pos:end="391:58">h264_chroma_dc_dequant_idct</name></name><argument_list pos:start="391:59" pos:end="393:114">(<argument pos:start="391:60" pos:end="391:96"><expr pos:start="391:60" pos:end="391:96"><name pos:start="391:60" pos:end="391:65"><name pos:start="391:60" pos:end="391:61">sl</name><operator pos:start="391:62" pos:end="391:63">-&gt;</operator><name pos:start="391:64" pos:end="391:65">mb</name></name> <operator pos:start="391:67" pos:end="391:67">+</operator> <operator pos:start="391:69" pos:end="391:69">(</operator><literal type="number" pos:start="391:70" pos:end="391:71">16</literal> <operator pos:start="391:73" pos:end="391:73">*</operator> <literal type="number" pos:start="391:75" pos:end="391:76">16</literal> <operator pos:start="391:78" pos:end="391:78">*</operator> <literal type="number" pos:start="391:80" pos:end="391:80">1</literal> <operator pos:start="391:82" pos:end="391:83">&lt;&lt;</operator> <name pos:start="391:85" pos:end="391:95">PIXEL_SHIFT</name><operator pos:start="391:96" pos:end="391:96">)</operator></expr></argument>,

                                                           <argument pos:start="393:60" pos:end="393:113"><expr pos:start="393:60" pos:end="393:113"><name pos:start="393:60" pos:end="393:113"><name pos:start="393:60" pos:end="393:60">h</name><operator pos:start="393:61" pos:end="393:62">-&gt;</operator><name pos:start="393:63" pos:end="393:76">dequant4_coeff</name><index pos:start="393:77" pos:end="393:103">[<expr pos:start="393:78" pos:end="393:102"><ternary pos:start="393:78" pos:end="393:102"><condition pos:start="393:78" pos:end="393:96"><expr pos:start="393:78" pos:end="393:94"><call pos:start="393:78" pos:end="393:94"><name pos:start="393:78" pos:end="393:85">IS_INTRA</name><argument_list pos:start="393:86" pos:end="393:94">(<argument pos:start="393:87" pos:end="393:93"><expr pos:start="393:87" pos:end="393:93"><name pos:start="393:87" pos:end="393:93">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="393:98" pos:end="393:98"> <expr pos:start="393:98" pos:end="393:98"><literal type="number" pos:start="393:98" pos:end="393:98">1</literal></expr> </then><else pos:start="393:100" pos:end="393:102">: <expr pos:start="393:102" pos:end="393:102"><literal type="number" pos:start="393:102" pos:end="393:102">4</literal></expr></else></ternary></expr>]</index><index pos:start="393:104" pos:end="393:110">[<expr pos:start="393:105" pos:end="393:109"><name pos:start="393:105" pos:end="393:109"><name pos:start="393:105" pos:end="393:106">qp</name><index pos:start="393:107" pos:end="393:109">[<expr pos:start="393:108" pos:end="393:108"><literal type="number" pos:start="393:108" pos:end="393:108">0</literal></expr>]</index></name></expr>]</index><index pos:start="393:111" pos:end="393:113">[<expr pos:start="393:112" pos:end="393:112"><literal type="number" pos:start="393:112" pos:end="393:112">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="395:17" pos:end="399:115"><if pos:start="395:17" pos:end="399:115">if <condition pos:start="395:20" pos:end="395:79">(<expr pos:start="395:21" pos:end="395:78"><name pos:start="395:21" pos:end="395:78"><name pos:start="395:21" pos:end="395:22">sl</name><operator pos:start="395:23" pos:end="395:24">-&gt;</operator><name pos:start="395:25" pos:end="395:44">non_zero_count_cache</name><index pos:start="395:45" pos:end="395:78">[<expr pos:start="395:46" pos:end="395:77"><name pos:start="395:46" pos:end="395:77"><name pos:start="395:46" pos:end="395:50">scan8</name><index pos:start="395:51" pos:end="395:77">[<expr pos:start="395:52" pos:end="395:76"><name pos:start="395:52" pos:end="395:72">CHROMA_DC_BLOCK_INDEX</name> <operator pos:start="395:74" pos:end="395:74">+</operator> <literal type="number" pos:start="395:76" pos:end="395:76">1</literal></expr>]</index></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="397:21" pos:end="399:115"><block_content pos:start="397:21" pos:end="399:115">

                    <expr_stmt pos:start="397:21" pos:end="399:115"><expr pos:start="397:21" pos:end="399:114"><call pos:start="397:21" pos:end="399:114"><name pos:start="397:21" pos:end="397:58"><name pos:start="397:21" pos:end="397:21">h</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:30">h264dsp</name><operator pos:start="397:31" pos:end="397:31">.</operator><name pos:start="397:32" pos:end="397:58">h264_chroma_dc_dequant_idct</name></name><argument_list pos:start="397:59" pos:end="399:114">(<argument pos:start="397:60" pos:end="397:96"><expr pos:start="397:60" pos:end="397:96"><name pos:start="397:60" pos:end="397:65"><name pos:start="397:60" pos:end="397:61">sl</name><operator pos:start="397:62" pos:end="397:63">-&gt;</operator><name pos:start="397:64" pos:end="397:65">mb</name></name> <operator pos:start="397:67" pos:end="397:67">+</operator> <operator pos:start="397:69" pos:end="397:69">(</operator><literal type="number" pos:start="397:70" pos:end="397:71">16</literal> <operator pos:start="397:73" pos:end="397:73">*</operator> <literal type="number" pos:start="397:75" pos:end="397:76">16</literal> <operator pos:start="397:78" pos:end="397:78">*</operator> <literal type="number" pos:start="397:80" pos:end="397:80">2</literal> <operator pos:start="397:82" pos:end="397:83">&lt;&lt;</operator> <name pos:start="397:85" pos:end="397:95">PIXEL_SHIFT</name><operator pos:start="397:96" pos:end="397:96">)</operator></expr></argument>,

                                                           <argument pos:start="399:60" pos:end="399:113"><expr pos:start="399:60" pos:end="399:113"><name pos:start="399:60" pos:end="399:113"><name pos:start="399:60" pos:end="399:60">h</name><operator pos:start="399:61" pos:end="399:62">-&gt;</operator><name pos:start="399:63" pos:end="399:76">dequant4_coeff</name><index pos:start="399:77" pos:end="399:103">[<expr pos:start="399:78" pos:end="399:102"><ternary pos:start="399:78" pos:end="399:102"><condition pos:start="399:78" pos:end="399:96"><expr pos:start="399:78" pos:end="399:94"><call pos:start="399:78" pos:end="399:94"><name pos:start="399:78" pos:end="399:85">IS_INTRA</name><argument_list pos:start="399:86" pos:end="399:94">(<argument pos:start="399:87" pos:end="399:93"><expr pos:start="399:87" pos:end="399:93"><name pos:start="399:87" pos:end="399:93">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="399:98" pos:end="399:98"> <expr pos:start="399:98" pos:end="399:98"><literal type="number" pos:start="399:98" pos:end="399:98">2</literal></expr> </then><else pos:start="399:100" pos:end="399:102">: <expr pos:start="399:102" pos:end="399:102"><literal type="number" pos:start="399:102" pos:end="399:102">5</literal></expr></else></ternary></expr>]</index><index pos:start="399:104" pos:end="399:110">[<expr pos:start="399:105" pos:end="399:109"><name pos:start="399:105" pos:end="399:109"><name pos:start="399:105" pos:end="399:106">qp</name><index pos:start="399:107" pos:end="399:109">[<expr pos:start="399:108" pos:end="399:108"><literal type="number" pos:start="399:108" pos:end="399:108">1</literal></expr>]</index></name></expr>]</index><index pos:start="399:111" pos:end="399:113">[<expr pos:start="399:112" pos:end="399:112"><literal type="number" pos:start="399:112" pos:end="399:112">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="401:17" pos:end="405:68"><expr pos:start="401:17" pos:end="405:67"><call pos:start="401:17" pos:end="405:67"><name pos:start="401:17" pos:end="401:41"><name pos:start="401:17" pos:end="401:17">h</name><operator pos:start="401:18" pos:end="401:19">-&gt;</operator><name pos:start="401:20" pos:end="401:26">h264dsp</name><operator pos:start="401:27" pos:end="401:27">.</operator><name pos:start="401:28" pos:end="401:41">h264_idct_add8</name></name><argument_list pos:start="401:42" pos:end="405:67">(<argument pos:start="401:43" pos:end="401:46"><expr pos:start="401:43" pos:end="401:46"><name pos:start="401:43" pos:end="401:46">dest</name></expr></argument>, <argument pos:start="401:49" pos:end="401:60"><expr pos:start="401:49" pos:end="401:60"><name pos:start="401:49" pos:end="401:60">block_offset</name></expr></argument>,

                                          <argument pos:start="403:43" pos:end="403:48"><expr pos:start="403:43" pos:end="403:48"><name pos:start="403:43" pos:end="403:48"><name pos:start="403:43" pos:end="403:44">sl</name><operator pos:start="403:45" pos:end="403:46">-&gt;</operator><name pos:start="403:47" pos:end="403:48">mb</name></name></expr></argument>, <argument pos:start="403:51" pos:end="403:60"><expr pos:start="403:51" pos:end="403:60"><name pos:start="403:51" pos:end="403:60">uvlinesize</name></expr></argument>,

                                          <argument pos:start="405:43" pos:end="405:66"><expr pos:start="405:43" pos:end="405:66"><name pos:start="405:43" pos:end="405:66"><name pos:start="405:43" pos:end="405:44">sl</name><operator pos:start="405:45" pos:end="405:46">-&gt;</operator><name pos:start="405:47" pos:end="405:66">non_zero_count_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
