<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1431.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">AVFrame</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:33">get_palette_frame</name><parameter_list pos:start="1:34" pos:end="1:55">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:49">AVFilterContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">PaletteGenContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVFilterLink</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">outlink</name> <init pos:start="9:27" pos:end="9:43">= <expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:31">ctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">outputs</name><index pos:start="9:41" pos:end="9:43">[<expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:16">ratio</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">box_id</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:20">range_box</name></name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:25">box</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:55">/* reference only the used colors from histogram */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">refs</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:55"><name pos:start="21:15" pos:end="21:29">load_color_refs</name><argument_list pos:start="21:30" pos:end="21:55">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:42">histogram</name></name></expr></argument>, <argument pos:start="21:45" pos:end="21:54"><expr pos:start="21:45" pos:end="21:54"><name pos:start="21:45" pos:end="21:54"><name pos:start="21:45" pos:end="21:45">s</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:54">nb_refs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">refs</name></name></expr>)</condition> <block pos:start="23:19" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:20">

        <expr_stmt pos:start="25:9" pos:end="25:105"><expr pos:start="25:9" pos:end="25:104"><call pos:start="25:9" pos:end="25:104"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:104">(<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ctx</name></expr></argument>, <argument pos:start="25:21" pos:end="25:32"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:35" pos:end="25:91"><expr pos:start="25:35" pos:end="25:91"><literal type="string" pos:start="25:35" pos:end="25:91">"Unable to allocate references for %d different colors\n"</literal></expr></argument>, <argument pos:start="25:94" pos:end="25:103"><expr pos:start="25:94" pos:end="25:103"><name pos:start="25:94" pos:end="25:103"><name pos:start="25:94" pos:end="25:94">s</name><operator pos:start="25:95" pos:end="25:96">-&gt;</operator><name pos:start="25:97" pos:end="25:103">nb_refs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:34">/* create the palette frame */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:63"><expr pos:start="35:5" pos:end="35:62"><name pos:start="35:5" pos:end="35:7">out</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:62"><name pos:start="35:11" pos:end="35:29">ff_get_video_buffer</name><argument_list pos:start="35:30" pos:end="35:62">(<argument pos:start="35:31" pos:end="35:37"><expr pos:start="35:31" pos:end="35:37"><name pos:start="35:31" pos:end="35:37">outlink</name></expr></argument>, <argument pos:start="35:40" pos:end="35:49"><expr pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:49"><name pos:start="35:40" pos:end="35:46">outlink</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:49">w</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:61"><expr pos:start="35:52" pos:end="35:61"><name pos:start="35:52" pos:end="35:61"><name pos:start="35:52" pos:end="35:58">outlink</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:61">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:20"><if pos:start="37:5" pos:end="39:20">if <condition pos:start="37:8" pos:end="37:13">(<expr pos:start="37:9" pos:end="37:12"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:12">out</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:20"><block_content pos:start="39:9" pos:end="39:20">

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:7">out</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:12">pts</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:38">/* set first box for 0..nb_refs */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:7">box</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <operator pos:start="47:11" pos:end="47:11">&amp;</operator><name pos:start="47:12" pos:end="47:27"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:19">boxes</name><index pos:start="47:20" pos:end="47:27">[<expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:26">box_id</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:7">box</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:12">len</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:25">nb_refs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:7">box</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:18">sorted_by</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">-</operator><literal type="number" pos:start="51:23" pos:end="51:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:7">box</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:14">color</name></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:44"><name pos:start="53:18" pos:end="53:30">get_avg_color</name><argument_list pos:start="53:31" pos:end="53:44">(<argument pos:start="53:32" pos:end="53:38"><expr pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:32">s</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:38">refs</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:43"><expr pos:start="53:41" pos:end="53:43"><name pos:start="53:41" pos:end="53:43">box</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:7">box</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:17">variance</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <operator pos:start="55:21" pos:end="55:21">-</operator><literal type="number" pos:start="55:22" pos:end="55:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:15">nb_boxes</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr>;</expr_stmt>



    <while pos:start="61:5" pos:end="167:5">while <condition pos:start="61:11" pos:end="61:31">(<expr pos:start="61:12" pos:end="61:30"><name pos:start="61:12" pos:end="61:14">box</name> <operator pos:start="61:16" pos:end="61:17">&amp;&amp;</operator> <name pos:start="61:19" pos:end="61:26"><name pos:start="61:19" pos:end="61:21">box</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:26">len</name></name> <operator pos:start="61:28" pos:end="61:28">&gt;</operator> <literal type="number" pos:start="61:30" pos:end="61:30">1</literal></expr>)</condition> <block pos:start="61:33" pos:end="167:5">{<block_content pos:start="63:9" pos:end="165:53">

        <decl_stmt pos:start="63:9" pos:end="63:35"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">i</name></decl>, <decl pos:start="63:16" pos:end="63:17"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:16" pos:end="63:17">rr</name></decl>, <decl pos:start="63:20" pos:end="63:21"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:20" pos:end="63:21">gr</name></decl>, <decl pos:start="63:24" pos:end="63:25"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:24" pos:end="63:25">br</name></decl>, <decl pos:start="63:28" pos:end="63:34"><type ref="prev" pos:start="63:9" pos:end="63:11"/><name pos:start="63:28" pos:end="63:34">longest</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:40"><decl pos:start="65:9" pos:end="65:23"><type pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:16">uint64_t</name></type> <name pos:start="65:18" pos:end="65:23">median</name></decl>, <decl pos:start="65:26" pos:end="65:39"><type ref="prev" pos:start="65:9" pos:end="65:16"/><name pos:start="65:26" pos:end="65:35">box_weight</name> <init pos:start="65:37" pos:end="65:39">= <expr pos:start="65:39" pos:end="65:39"><literal type="number" pos:start="65:39" pos:end="65:39">0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="69:9" pos:end="71:38">/* compute the box weight (sum all the weights of the colors in the

         * range) and its boundings */</comment>

        <decl_stmt pos:start="73:9" pos:end="73:44"><decl pos:start="73:9" pos:end="73:43"><type pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:15">uint8_t</name></type> <name pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:19">min</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">3</literal></expr>]</index></name> <init pos:start="73:24" pos:end="73:43">= <expr pos:start="73:26" pos:end="73:43"><block pos:start="73:26" pos:end="73:43">{<expr pos:start="73:27" pos:end="73:30"><literal type="number" pos:start="73:27" pos:end="73:30">0xff</literal></expr>, <expr pos:start="73:33" pos:end="73:36"><literal type="number" pos:start="73:33" pos:end="73:36">0xff</literal></expr>, <expr pos:start="73:39" pos:end="73:42"><literal type="number" pos:start="73:39" pos:end="73:42">0xff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:44"><decl pos:start="75:9" pos:end="75:43"><type pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:15">uint8_t</name></type> <name pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:19">max</name><index pos:start="75:20" pos:end="75:22">[<expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">3</literal></expr>]</index></name> <init pos:start="75:24" pos:end="75:43">= <expr pos:start="75:26" pos:end="75:43"><block pos:start="75:26" pos:end="75:43">{<expr pos:start="75:27" pos:end="75:30"><literal type="number" pos:start="75:27" pos:end="75:30">0x00</literal></expr>, <expr pos:start="75:33" pos:end="75:36"><literal type="number" pos:start="75:33" pos:end="75:36">0x00</literal></expr>, <expr pos:start="75:39" pos:end="75:42"><literal type="number" pos:start="75:39" pos:end="75:42">0x00</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <for pos:start="77:9" pos:end="93:9">for <control pos:start="77:13" pos:end="77:60">(<init pos:start="77:14" pos:end="77:28"><expr pos:start="77:14" pos:end="77:27"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:27"><name pos:start="77:18" pos:end="77:20">box</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">start</name></name></expr>;</init> <condition pos:start="77:30" pos:end="77:55"><expr pos:start="77:30" pos:end="77:54"><name pos:start="77:30" pos:end="77:30">i</name> <operator pos:start="77:32" pos:end="77:32">&lt;</operator> <name pos:start="77:34" pos:end="77:43"><name pos:start="77:34" pos:end="77:36">box</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:43">start</name></name> <operator pos:start="77:45" pos:end="77:45">+</operator> <name pos:start="77:47" pos:end="77:54"><name pos:start="77:47" pos:end="77:49">box</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:54">len</name></name></expr>;</condition> <incr pos:start="77:57" pos:end="77:59"><expr pos:start="77:57" pos:end="77:59"><name pos:start="77:57" pos:end="77:57">i</name><operator pos:start="77:58" pos:end="77:59">++</operator></expr></incr>)</control> <block pos:start="77:62" pos:end="93:9">{<block_content pos:start="79:13" pos:end="91:37">

            <decl_stmt pos:start="79:13" pos:end="79:53"><decl pos:start="79:13" pos:end="79:52"><type pos:start="79:13" pos:end="79:36"><specifier pos:start="79:13" pos:end="79:17">const</specifier> <name pos:start="79:19" pos:end="79:34"><name pos:start="79:19" pos:end="79:24">struct</name> <name pos:start="79:26" pos:end="79:34">color_ref</name></name> <modifier pos:start="79:36" pos:end="79:36">*</modifier></type><name pos:start="79:37" pos:end="79:39">ref</name> <init pos:start="79:41" pos:end="79:52">= <expr pos:start="79:43" pos:end="79:52"><name pos:start="79:43" pos:end="79:52"><name pos:start="79:43" pos:end="79:43">s</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:49">refs</name><index pos:start="79:50" pos:end="79:52">[<expr pos:start="79:51" pos:end="79:51"><name pos:start="79:51" pos:end="79:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="81:44"><decl pos:start="81:13" pos:end="81:43"><type pos:start="81:13" pos:end="81:26"><specifier pos:start="81:13" pos:end="81:17">const</specifier> <name pos:start="81:19" pos:end="81:26">uint32_t</name></type> <name pos:start="81:28" pos:end="81:30">rgb</name> <init pos:start="81:32" pos:end="81:43">= <expr pos:start="81:34" pos:end="81:43"><name pos:start="81:34" pos:end="81:43"><name pos:start="81:34" pos:end="81:36">ref</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:43">color</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:84"><decl pos:start="83:13" pos:end="83:46"><type pos:start="83:13" pos:end="83:25"><specifier pos:start="83:13" pos:end="83:17">const</specifier> <name pos:start="83:19" pos:end="83:25">uint8_t</name></type> <name pos:start="83:27" pos:end="83:27">r</name> <init pos:start="83:29" pos:end="83:46">= <expr pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:33">rgb</name> <operator pos:start="83:35" pos:end="83:36">&gt;&gt;</operator> <literal type="number" pos:start="83:38" pos:end="83:39">16</literal> <operator pos:start="83:41" pos:end="83:41">&amp;</operator> <literal type="number" pos:start="83:43" pos:end="83:46">0xff</literal></expr></init></decl>, <decl pos:start="83:49" pos:end="83:67"><type ref="prev" pos:start="83:13" pos:end="83:25"/><name pos:start="83:49" pos:end="83:49">g</name> <init pos:start="83:51" pos:end="83:67">= <expr pos:start="83:53" pos:end="83:67"><name pos:start="83:53" pos:end="83:55">rgb</name> <operator pos:start="83:57" pos:end="83:58">&gt;&gt;</operator> <literal type="number" pos:start="83:60" pos:end="83:60">8</literal> <operator pos:start="83:62" pos:end="83:62">&amp;</operator> <literal type="number" pos:start="83:64" pos:end="83:67">0xff</literal></expr></init></decl>, <decl pos:start="83:70" pos:end="83:83"><type ref="prev" pos:start="83:13" pos:end="83:25"/><name pos:start="83:70" pos:end="83:70">b</name> <init pos:start="83:72" pos:end="83:83">= <expr pos:start="83:74" pos:end="83:83"><name pos:start="83:74" pos:end="83:76">rgb</name> <operator pos:start="83:78" pos:end="83:78">&amp;</operator> <literal type="number" pos:start="83:80" pos:end="83:83">0xff</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:65"><expr pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:15">min</name><index pos:start="85:16" pos:end="85:18">[<expr pos:start="85:17" pos:end="85:17"><literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>]</index></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:37"><name pos:start="85:22" pos:end="85:26">FFMIN</name><argument_list pos:start="85:27" pos:end="85:37">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">r</name></expr></argument>, <argument pos:start="85:31" pos:end="85:36"><expr pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:33">min</name><index pos:start="85:34" pos:end="85:36">[<expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr><operator pos:start="85:38" pos:end="85:38">,</operator> <expr pos:start="85:40" pos:end="85:64"><name pos:start="85:40" pos:end="85:45"><name pos:start="85:40" pos:end="85:42">max</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">0</literal></expr>]</index></name> <operator pos:start="85:47" pos:end="85:47">=</operator> <call pos:start="85:49" pos:end="85:64"><name pos:start="85:49" pos:end="85:53">FFMAX</name><argument_list pos:start="85:54" pos:end="85:64">(<argument pos:start="85:55" pos:end="85:55"><expr pos:start="85:55" pos:end="85:55"><name pos:start="85:55" pos:end="85:55">r</name></expr></argument>, <argument pos:start="85:58" pos:end="85:63"><expr pos:start="85:58" pos:end="85:63"><name pos:start="85:58" pos:end="85:63"><name pos:start="85:58" pos:end="85:60">max</name><index pos:start="85:61" pos:end="85:63">[<expr pos:start="85:62" pos:end="85:62"><literal type="number" pos:start="85:62" pos:end="85:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:65"><expr pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:15">min</name><index pos:start="87:16" pos:end="87:18">[<expr pos:start="87:17" pos:end="87:17"><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>]</index></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <call pos:start="87:22" pos:end="87:37"><name pos:start="87:22" pos:end="87:26">FFMIN</name><argument_list pos:start="87:27" pos:end="87:37">(<argument pos:start="87:28" pos:end="87:28"><expr pos:start="87:28" pos:end="87:28"><name pos:start="87:28" pos:end="87:28">g</name></expr></argument>, <argument pos:start="87:31" pos:end="87:36"><expr pos:start="87:31" pos:end="87:36"><name pos:start="87:31" pos:end="87:36"><name pos:start="87:31" pos:end="87:33">min</name><index pos:start="87:34" pos:end="87:36">[<expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr><operator pos:start="87:38" pos:end="87:38">,</operator> <expr pos:start="87:40" pos:end="87:64"><name pos:start="87:40" pos:end="87:45"><name pos:start="87:40" pos:end="87:42">max</name><index pos:start="87:43" pos:end="87:45">[<expr pos:start="87:44" pos:end="87:44"><literal type="number" pos:start="87:44" pos:end="87:44">1</literal></expr>]</index></name> <operator pos:start="87:47" pos:end="87:47">=</operator> <call pos:start="87:49" pos:end="87:64"><name pos:start="87:49" pos:end="87:53">FFMAX</name><argument_list pos:start="87:54" pos:end="87:64">(<argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><name pos:start="87:55" pos:end="87:55">g</name></expr></argument>, <argument pos:start="87:58" pos:end="87:63"><expr pos:start="87:58" pos:end="87:63"><name pos:start="87:58" pos:end="87:63"><name pos:start="87:58" pos:end="87:60">max</name><index pos:start="87:61" pos:end="87:63">[<expr pos:start="87:62" pos:end="87:62"><literal type="number" pos:start="87:62" pos:end="87:62">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:65"><expr pos:start="89:13" pos:end="89:37"><name pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:15">min</name><index pos:start="89:16" pos:end="89:18">[<expr pos:start="89:17" pos:end="89:17"><literal type="number" pos:start="89:17" pos:end="89:17">2</literal></expr>]</index></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:37"><name pos:start="89:22" pos:end="89:26">FFMIN</name><argument_list pos:start="89:27" pos:end="89:37">(<argument pos:start="89:28" pos:end="89:28"><expr pos:start="89:28" pos:end="89:28"><name pos:start="89:28" pos:end="89:28">b</name></expr></argument>, <argument pos:start="89:31" pos:end="89:36"><expr pos:start="89:31" pos:end="89:36"><name pos:start="89:31" pos:end="89:36"><name pos:start="89:31" pos:end="89:33">min</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><literal type="number" pos:start="89:35" pos:end="89:35">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr><operator pos:start="89:38" pos:end="89:38">,</operator> <expr pos:start="89:40" pos:end="89:64"><name pos:start="89:40" pos:end="89:45"><name pos:start="89:40" pos:end="89:42">max</name><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">2</literal></expr>]</index></name> <operator pos:start="89:47" pos:end="89:47">=</operator> <call pos:start="89:49" pos:end="89:64"><name pos:start="89:49" pos:end="89:53">FFMAX</name><argument_list pos:start="89:54" pos:end="89:64">(<argument pos:start="89:55" pos:end="89:55"><expr pos:start="89:55" pos:end="89:55"><name pos:start="89:55" pos:end="89:55">b</name></expr></argument>, <argument pos:start="89:58" pos:end="89:63"><expr pos:start="89:58" pos:end="89:63"><name pos:start="89:58" pos:end="89:63"><name pos:start="89:58" pos:end="89:60">max</name><index pos:start="89:61" pos:end="89:63">[<expr pos:start="89:62" pos:end="89:62"><literal type="number" pos:start="89:62" pos:end="89:62">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:22">box_weight</name> <operator pos:start="91:24" pos:end="91:25">+=</operator> <name pos:start="91:27" pos:end="91:36"><name pos:start="91:27" pos:end="91:29">ref</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:36">count</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="97:9" pos:end="97:80">/* define the axis to sort by according to the widest range of colors */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:10">rr</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <name pos:start="99:14" pos:end="99:19"><name pos:start="99:14" pos:end="99:16">max</name><index pos:start="99:17" pos:end="99:19">[<expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>]</index></name> <operator pos:start="99:21" pos:end="99:21">-</operator> <name pos:start="99:23" pos:end="99:28"><name pos:start="99:23" pos:end="99:25">min</name><index pos:start="99:26" pos:end="99:28">[<expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:10">gr</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <name pos:start="101:14" pos:end="101:19"><name pos:start="101:14" pos:end="101:16">max</name><index pos:start="101:17" pos:end="101:19">[<expr pos:start="101:18" pos:end="101:18"><literal type="number" pos:start="101:18" pos:end="101:18">1</literal></expr>]</index></name> <operator pos:start="101:21" pos:end="101:21">-</operator> <name pos:start="101:23" pos:end="101:28"><name pos:start="101:23" pos:end="101:25">min</name><index pos:start="101:26" pos:end="101:28">[<expr pos:start="101:27" pos:end="101:27"><literal type="number" pos:start="101:27" pos:end="101:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:10">br</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:19"><name pos:start="103:14" pos:end="103:16">max</name><index pos:start="103:17" pos:end="103:19">[<expr pos:start="103:18" pos:end="103:18"><literal type="number" pos:start="103:18" pos:end="103:18">2</literal></expr>]</index></name> <operator pos:start="103:21" pos:end="103:21">-</operator> <name pos:start="103:23" pos:end="103:28"><name pos:start="103:23" pos:end="103:25">min</name><index pos:start="103:26" pos:end="103:28">[<expr pos:start="103:27" pos:end="103:27"><literal type="number" pos:start="103:27" pos:end="103:27">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:20"><expr pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:15">longest</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <literal type="number" pos:start="105:19" pos:end="105:19">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="105:22" pos:end="105:90">// pick green by default (the color the eye is the most sensitive to)</comment>

        <if_stmt pos:start="107:9" pos:end="107:46"><if pos:start="107:9" pos:end="107:46">if <condition pos:start="107:12" pos:end="107:33">(<expr pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:14">br</name> <operator pos:start="107:16" pos:end="107:17">&gt;=</operator> <name pos:start="107:19" pos:end="107:20">rr</name> <operator pos:start="107:22" pos:end="107:23">&amp;&amp;</operator> <name pos:start="107:25" pos:end="107:26">br</name> <operator pos:start="107:28" pos:end="107:29">&gt;=</operator> <name pos:start="107:31" pos:end="107:32">gr</name></expr>)</condition><block type="pseudo" pos:start="107:35" pos:end="107:46"><block_content pos:start="107:35" pos:end="107:46"> <expr_stmt pos:start="107:35" pos:end="107:46"><expr pos:start="107:35" pos:end="107:45"><name pos:start="107:35" pos:end="107:41">longest</name> <operator pos:start="107:43" pos:end="107:43">=</operator> <literal type="number" pos:start="107:45" pos:end="107:45">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="109:46"><if pos:start="109:9" pos:end="109:46">if <condition pos:start="109:12" pos:end="109:33">(<expr pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:14">rr</name> <operator pos:start="109:16" pos:end="109:17">&gt;=</operator> <name pos:start="109:19" pos:end="109:20">gr</name> <operator pos:start="109:22" pos:end="109:23">&amp;&amp;</operator> <name pos:start="109:25" pos:end="109:26">rr</name> <operator pos:start="109:28" pos:end="109:29">&gt;=</operator> <name pos:start="109:31" pos:end="109:32">br</name></expr>)</condition><block type="pseudo" pos:start="109:35" pos:end="109:46"><block_content pos:start="109:35" pos:end="109:46"> <expr_stmt pos:start="109:35" pos:end="109:46"><expr pos:start="109:35" pos:end="109:45"><name pos:start="109:35" pos:end="109:41">longest</name> <operator pos:start="109:43" pos:end="109:43">=</operator> <literal type="number" pos:start="109:45" pos:end="109:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="111:46"><if pos:start="111:9" pos:end="111:46">if <condition pos:start="111:12" pos:end="111:33">(<expr pos:start="111:13" pos:end="111:32"><name pos:start="111:13" pos:end="111:14">gr</name> <operator pos:start="111:16" pos:end="111:17">&gt;=</operator> <name pos:start="111:19" pos:end="111:20">rr</name> <operator pos:start="111:22" pos:end="111:23">&amp;&amp;</operator> <name pos:start="111:25" pos:end="111:26">gr</name> <operator pos:start="111:28" pos:end="111:29">&gt;=</operator> <name pos:start="111:31" pos:end="111:32">br</name></expr>)</condition><block type="pseudo" pos:start="111:35" pos:end="111:46"><block_content pos:start="111:35" pos:end="111:46"> <expr_stmt pos:start="111:35" pos:end="111:46"><expr pos:start="111:35" pos:end="111:45"><name pos:start="111:35" pos:end="111:41">longest</name> <operator pos:start="111:43" pos:end="111:43">=</operator> <literal type="number" pos:start="111:45" pos:end="111:45">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="111:48" pos:end="111:68">// prefer green again</comment>



        <expr_stmt pos:start="115:9" pos:end="119:81"><expr pos:start="115:9" pos:end="119:80"><call pos:start="115:9" pos:end="119:80"><name pos:start="115:9" pos:end="115:15">av_dlog</name><argument_list pos:start="115:16" pos:end="119:80">(<argument pos:start="115:17" pos:end="115:19"><expr pos:start="115:17" pos:end="115:19"><name pos:start="115:17" pos:end="115:19">ctx</name></expr></argument>, <argument pos:start="115:22" pos:end="115:117"><expr pos:start="115:22" pos:end="115:117"><literal type="string" pos:start="115:22" pos:end="115:56">"box #%02X [%6d..%-6d] (%6d) w:%-6"</literal><name pos:start="115:57" pos:end="115:62">PRIu64</name><literal type="string" pos:start="115:63" pos:end="115:117">" ranges:[%2x %2x %2x] sort by %c (already sorted:%c) "</literal></expr></argument>,

                <argument pos:start="117:17" pos:end="117:22"><expr pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:22">box_id</name></expr></argument>, <argument pos:start="117:25" pos:end="117:34"><expr pos:start="117:25" pos:end="117:34"><name pos:start="117:25" pos:end="117:34"><name pos:start="117:25" pos:end="117:27">box</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:34">start</name></name></expr></argument>, <argument pos:start="117:37" pos:end="117:61"><expr pos:start="117:37" pos:end="117:61"><name pos:start="117:37" pos:end="117:46"><name pos:start="117:37" pos:end="117:39">box</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:46">start</name></name> <operator pos:start="117:48" pos:end="117:48">+</operator> <name pos:start="117:50" pos:end="117:57"><name pos:start="117:50" pos:end="117:52">box</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:57">len</name></name> <operator pos:start="117:59" pos:end="117:59">-</operator> <literal type="number" pos:start="117:61" pos:end="117:61">1</literal></expr></argument>, <argument pos:start="117:64" pos:end="117:71"><expr pos:start="117:64" pos:end="117:71"><name pos:start="117:64" pos:end="117:71"><name pos:start="117:64" pos:end="117:66">box</name><operator pos:start="117:67" pos:end="117:68">-&gt;</operator><name pos:start="117:69" pos:end="117:71">len</name></name></expr></argument>, <argument pos:start="117:74" pos:end="117:83"><expr pos:start="117:74" pos:end="117:83"><name pos:start="117:74" pos:end="117:83">box_weight</name></expr></argument>,

                <argument pos:start="119:17" pos:end="119:18"><expr pos:start="119:17" pos:end="119:18"><name pos:start="119:17" pos:end="119:18">rr</name></expr></argument>, <argument pos:start="119:21" pos:end="119:22"><expr pos:start="119:21" pos:end="119:22"><name pos:start="119:21" pos:end="119:22">gr</name></expr></argument>, <argument pos:start="119:25" pos:end="119:26"><expr pos:start="119:25" pos:end="119:26"><name pos:start="119:25" pos:end="119:26">br</name></expr></argument>, <argument pos:start="119:29" pos:end="119:42"><expr pos:start="119:29" pos:end="119:42"><literal type="string" pos:start="119:29" pos:end="119:33">"rgb"</literal><index pos:start="119:34" pos:end="119:42">[<expr pos:start="119:35" pos:end="119:41"><name pos:start="119:35" pos:end="119:41">longest</name></expr>]</index></expr></argument>, <argument pos:start="119:45" pos:end="119:79"><expr pos:start="119:45" pos:end="119:79"><ternary pos:start="119:45" pos:end="119:79"><condition pos:start="119:45" pos:end="119:71"><expr pos:start="119:45" pos:end="119:69"><name pos:start="119:45" pos:end="119:58"><name pos:start="119:45" pos:end="119:47">box</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:58">sorted_by</name></name> <operator pos:start="119:60" pos:end="119:61">==</operator> <name pos:start="119:63" pos:end="119:69">longest</name></expr> ?</condition><then pos:start="119:73" pos:end="119:75"> <expr pos:start="119:73" pos:end="119:75"><literal type="char" pos:start="119:73" pos:end="119:75">'y'</literal></expr></then><else pos:start="119:76" pos:end="119:79">:<expr pos:start="119:77" pos:end="119:79"><literal type="char" pos:start="119:77" pos:end="119:79">'n'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="123:9" pos:end="123:75">/* sort the range by its longest axis if it's not already sorted */</comment>

        <if_stmt pos:start="125:9" pos:end="133:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="125:38">(<expr pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:15">box</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:26">sorted_by</name></name> <operator pos:start="125:28" pos:end="125:29">!=</operator> <name pos:start="125:31" pos:end="125:37">longest</name></expr>)</condition> <block pos:start="125:40" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:37">

            <decl_stmt pos:start="127:13" pos:end="127:47"><decl pos:start="127:13" pos:end="127:46"><type pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:20">cmp_func</name></type> <name pos:start="127:22" pos:end="127:25">cmpf</name> <init pos:start="127:27" pos:end="127:46">= <expr pos:start="127:29" pos:end="127:46"><name pos:start="127:29" pos:end="127:46"><name pos:start="127:29" pos:end="127:37">cmp_funcs</name><index pos:start="127:38" pos:end="127:46">[<expr pos:start="127:39" pos:end="127:45"><name pos:start="127:39" pos:end="127:45">longest</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:85"><expr pos:start="129:13" pos:end="129:84"><call pos:start="129:13" pos:end="129:84"><name pos:start="129:13" pos:end="129:20">AV_QSORT</name><argument_list pos:start="129:21" pos:end="129:84">(<argument pos:start="129:22" pos:end="129:41"><expr pos:start="129:22" pos:end="129:41"><operator pos:start="129:22" pos:end="129:22">&amp;</operator><name pos:start="129:23" pos:end="129:41"><name pos:start="129:23" pos:end="129:23">s</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:29">refs</name><index pos:start="129:30" pos:end="129:41">[<expr pos:start="129:31" pos:end="129:40"><name pos:start="129:31" pos:end="129:40"><name pos:start="129:31" pos:end="129:33">box</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:40">start</name></name></expr>]</index></name></expr></argument>, <argument pos:start="129:44" pos:end="129:51"><expr pos:start="129:44" pos:end="129:51"><name pos:start="129:44" pos:end="129:51"><name pos:start="129:44" pos:end="129:46">box</name><operator pos:start="129:47" pos:end="129:48">-&gt;</operator><name pos:start="129:49" pos:end="129:51">len</name></name></expr></argument>, <argument pos:start="129:54" pos:end="129:77"><expr pos:start="129:54" pos:end="129:77"><specifier pos:start="129:54" pos:end="129:58">const</specifier> struct <name pos:start="129:67" pos:end="129:75">color_ref</name> <operator pos:start="129:77" pos:end="129:77">*</operator></expr></argument>, <argument pos:start="129:80" pos:end="129:83"><expr pos:start="129:80" pos:end="129:83"><name pos:start="129:80" pos:end="129:83">cmpf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:37"><expr pos:start="131:13" pos:end="131:36"><name pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:15">box</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:26">sorted_by</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:36">longest</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="137:9" pos:end="137:46">/* locate the median where to split */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:39"><expr pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:14">median</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <operator pos:start="139:18" pos:end="139:18">(</operator><name pos:start="139:19" pos:end="139:28">box_weight</name> <operator pos:start="139:30" pos:end="139:30">+</operator> <literal type="number" pos:start="139:32" pos:end="139:32">1</literal><operator pos:start="139:33" pos:end="139:33">)</operator> <operator pos:start="139:35" pos:end="139:36">&gt;&gt;</operator> <literal type="number" pos:start="139:38" pos:end="139:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:23"><expr pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:18">box_weight</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="143:9" pos:end="145:67">/* if you have 2 boxes, the maximum is actually #0: you must have at

         * least 1 color on each side of the split, hence the -2 */</comment>

        <for pos:start="147:9" pos:end="155:9">for <control pos:start="147:13" pos:end="147:64">(<init pos:start="147:14" pos:end="147:28"><expr pos:start="147:14" pos:end="147:27"><name pos:start="147:14" pos:end="147:14">i</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <name pos:start="147:18" pos:end="147:27"><name pos:start="147:18" pos:end="147:20">box</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:27">start</name></name></expr>;</init> <condition pos:start="147:30" pos:end="147:59"><expr pos:start="147:30" pos:end="147:58"><name pos:start="147:30" pos:end="147:30">i</name> <operator pos:start="147:32" pos:end="147:32">&lt;</operator> <name pos:start="147:34" pos:end="147:43"><name pos:start="147:34" pos:end="147:36">box</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:43">start</name></name> <operator pos:start="147:45" pos:end="147:45">+</operator> <name pos:start="147:47" pos:end="147:54"><name pos:start="147:47" pos:end="147:49">box</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:54">len</name></name> <operator pos:start="147:56" pos:end="147:56">-</operator> <literal type="number" pos:start="147:58" pos:end="147:58">2</literal></expr>;</condition> <incr pos:start="147:61" pos:end="147:63"><expr pos:start="147:61" pos:end="147:63"><name pos:start="147:61" pos:end="147:61">i</name><operator pos:start="147:62" pos:end="147:63">++</operator></expr></incr>)</control> <block pos:start="147:66" pos:end="155:9">{<block_content pos:start="149:13" pos:end="153:22">

            <expr_stmt pos:start="149:13" pos:end="149:44"><expr pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:22">box_weight</name> <operator pos:start="149:24" pos:end="149:25">+=</operator> <name pos:start="149:27" pos:end="149:36"><name pos:start="149:27" pos:end="149:27">s</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:33">refs</name><index pos:start="149:34" pos:end="149:36">[<expr pos:start="149:35" pos:end="149:35"><name pos:start="149:35" pos:end="149:35">i</name></expr>]</index></name><operator pos:start="149:37" pos:end="149:38">-&gt;</operator><name pos:start="149:39" pos:end="149:43">count</name></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="153:22"><if pos:start="151:13" pos:end="153:22">if <condition pos:start="151:16" pos:end="151:36">(<expr pos:start="151:17" pos:end="151:35"><name pos:start="151:17" pos:end="151:26">box_weight</name> <operator pos:start="151:28" pos:end="151:28">&gt;</operator> <name pos:start="151:30" pos:end="151:35">median</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:22"><block_content pos:start="153:17" pos:end="153:22">

                <break pos:start="153:17" pos:end="153:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="157:9" pos:end="157:103"><expr pos:start="157:9" pos:end="157:102"><call pos:start="157:9" pos:end="157:102"><name pos:start="157:9" pos:end="157:15">av_dlog</name><argument_list pos:start="157:16" pos:end="157:102">(<argument pos:start="157:17" pos:end="157:19"><expr pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">ctx</name></expr></argument>, <argument pos:start="157:22" pos:end="157:78"><expr pos:start="157:22" pos:end="157:78"><literal type="string" pos:start="157:22" pos:end="157:48">"split @ i=%-6d with w=%-6"</literal><name pos:start="157:49" pos:end="157:54">PRIu64</name><literal type="string" pos:start="157:55" pos:end="157:67">" (target=%6"</literal><name pos:start="157:68" pos:end="157:73">PRIu64</name><literal type="string" pos:start="157:74" pos:end="157:78">")\n"</literal></expr></argument>, <argument pos:start="157:81" pos:end="157:81"><expr pos:start="157:81" pos:end="157:81"><name pos:start="157:81" pos:end="157:81">i</name></expr></argument>, <argument pos:start="157:84" pos:end="157:93"><expr pos:start="157:84" pos:end="157:93"><name pos:start="157:84" pos:end="157:93">box_weight</name></expr></argument>, <argument pos:start="157:96" pos:end="157:101"><expr pos:start="157:96" pos:end="157:101"><name pos:start="157:96" pos:end="157:101">median</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:29"><expr pos:start="159:9" pos:end="159:28"><call pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:17">split_box</name><argument_list pos:start="159:18" pos:end="159:28">(<argument pos:start="159:19" pos:end="159:19"><expr pos:start="159:19" pos:end="159:19"><name pos:start="159:19" pos:end="159:19">s</name></expr></argument>, <argument pos:start="159:22" pos:end="159:24"><expr pos:start="159:22" pos:end="159:24"><name pos:start="159:22" pos:end="159:24">box</name></expr></argument>, <argument pos:start="159:27" pos:end="159:27"><expr pos:start="159:27" pos:end="159:27"><name pos:start="159:27" pos:end="159:27">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:45"><expr pos:start="163:9" pos:end="163:44"><name pos:start="163:9" pos:end="163:14">box_id</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <call pos:start="163:18" pos:end="163:44"><name pos:start="163:18" pos:end="163:41">get_next_box_id_to_split</name><argument_list pos:start="163:42" pos:end="163:44">(<argument pos:start="163:43" pos:end="163:43"><expr pos:start="163:43" pos:end="163:43"><name pos:start="163:43" pos:end="163:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:53"><expr pos:start="165:9" pos:end="165:52"><name pos:start="165:9" pos:end="165:11">box</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <ternary pos:start="165:15" pos:end="165:52"><condition pos:start="165:15" pos:end="165:27"><expr pos:start="165:15" pos:end="165:25"><name pos:start="165:15" pos:end="165:20">box_id</name> <operator pos:start="165:22" pos:end="165:23">&gt;=</operator> <literal type="number" pos:start="165:25" pos:end="165:25">0</literal></expr> ?</condition><then pos:start="165:29" pos:end="165:45"> <expr pos:start="165:29" pos:end="165:45"><operator pos:start="165:29" pos:end="165:29">&amp;</operator><name pos:start="165:30" pos:end="165:45"><name pos:start="165:30" pos:end="165:30">s</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:37">boxes</name><index pos:start="165:38" pos:end="165:45">[<expr pos:start="165:39" pos:end="165:44"><name pos:start="165:39" pos:end="165:44">box_id</name></expr>]</index></name></expr> </then><else pos:start="165:47" pos:end="165:52">: <expr pos:start="165:49" pos:end="165:52"><name pos:start="165:49" pos:end="165:52">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="171:5" pos:end="171:68"><expr pos:start="171:5" pos:end="171:67"><name pos:start="171:5" pos:end="171:9">ratio</name> <operator pos:start="171:11" pos:end="171:11">=</operator> <call pos:start="171:13" pos:end="171:67"><name pos:start="171:13" pos:end="171:37">set_colorquant_ratio_meta</name><argument_list pos:start="171:38" pos:end="171:67">(<argument pos:start="171:39" pos:end="171:41"><expr pos:start="171:39" pos:end="171:41"><name pos:start="171:39" pos:end="171:41">out</name></expr></argument>, <argument pos:start="171:44" pos:end="171:54"><expr pos:start="171:44" pos:end="171:54"><name pos:start="171:44" pos:end="171:54"><name pos:start="171:44" pos:end="171:44">s</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:54">nb_boxes</name></name></expr></argument>, <argument pos:start="171:57" pos:end="171:66"><expr pos:start="171:57" pos:end="171:66"><name pos:start="171:57" pos:end="171:66"><name pos:start="171:57" pos:end="171:57">s</name><operator pos:start="171:58" pos:end="171:59">-&gt;</operator><name pos:start="171:60" pos:end="171:66">nb_refs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="175:81"><expr pos:start="173:5" pos:end="175:80"><call pos:start="173:5" pos:end="175:80"><name pos:start="173:5" pos:end="173:10">av_log</name><argument_list pos:start="173:11" pos:end="175:80">(<argument pos:start="173:12" pos:end="173:14"><expr pos:start="173:12" pos:end="173:14"><name pos:start="173:12" pos:end="173:14">ctx</name></expr></argument>, <argument pos:start="173:17" pos:end="173:27"><expr pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:27">AV_LOG_INFO</name></expr></argument>, <argument pos:start="173:30" pos:end="173:81"><expr pos:start="173:30" pos:end="173:81"><literal type="string" pos:start="173:30" pos:end="173:81">"%d%s colors generated out of %d colors; ratio=%f\n"</literal></expr></argument>,

           <argument pos:start="175:12" pos:end="175:22"><expr pos:start="175:12" pos:end="175:22"><name pos:start="175:12" pos:end="175:22"><name pos:start="175:12" pos:end="175:12">s</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:22">nb_boxes</name></name></expr></argument>, <argument pos:start="175:25" pos:end="175:60"><expr pos:start="175:25" pos:end="175:60"><ternary pos:start="175:25" pos:end="175:60"><condition pos:start="175:25" pos:end="175:48"><expr pos:start="175:25" pos:end="175:46"><name pos:start="175:25" pos:end="175:46"><name pos:start="175:25" pos:end="175:25">s</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:46">reserve_transparent</name></name></expr> ?</condition><then pos:start="175:50" pos:end="175:55"> <expr pos:start="175:50" pos:end="175:55"><literal type="string" pos:start="175:50" pos:end="175:55">"(+1)"</literal></expr> </then><else pos:start="175:57" pos:end="175:60">: <expr pos:start="175:59" pos:end="175:60"><literal type="string" pos:start="175:59" pos:end="175:60">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="175:63" pos:end="175:72"><expr pos:start="175:63" pos:end="175:72"><name pos:start="175:63" pos:end="175:72"><name pos:start="175:63" pos:end="175:63">s</name><operator pos:start="175:64" pos:end="175:65">-&gt;</operator><name pos:start="175:66" pos:end="175:72">nb_refs</name></name></expr></argument>, <argument pos:start="175:75" pos:end="175:79"><expr pos:start="175:75" pos:end="175:79"><name pos:start="175:75" pos:end="175:79">ratio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:63"><expr pos:start="179:5" pos:end="179:62"><call pos:start="179:5" pos:end="179:62"><name pos:start="179:5" pos:end="179:9">qsort</name><argument_list pos:start="179:10" pos:end="179:62">(<argument pos:start="179:11" pos:end="179:18"><expr pos:start="179:11" pos:end="179:18"><name pos:start="179:11" pos:end="179:18"><name pos:start="179:11" pos:end="179:11">s</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:18">boxes</name></name></expr></argument>, <argument pos:start="179:21" pos:end="179:31"><expr pos:start="179:21" pos:end="179:31"><name pos:start="179:21" pos:end="179:31"><name pos:start="179:21" pos:end="179:21">s</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:31">nb_boxes</name></name></expr></argument>, <argument pos:start="179:34" pos:end="179:50"><expr pos:start="179:34" pos:end="179:50"><sizeof pos:start="179:34" pos:end="179:50">sizeof<argument_list pos:start="179:40" pos:end="179:50">(<argument pos:start="179:41" pos:end="179:49"><expr pos:start="179:41" pos:end="179:49"><operator pos:start="179:41" pos:end="179:41">*</operator><name pos:start="179:42" pos:end="179:49"><name pos:start="179:42" pos:end="179:42">s</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:49">boxes</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="179:53" pos:end="179:61"><expr pos:start="179:53" pos:end="179:61"><name pos:start="179:53" pos:end="179:61">cmp_color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:28"><expr pos:start="183:5" pos:end="183:27"><call pos:start="183:5" pos:end="183:27"><name pos:start="183:5" pos:end="183:17">write_palette</name><argument_list pos:start="183:18" pos:end="183:27">(<argument pos:start="183:19" pos:end="183:21"><expr pos:start="183:19" pos:end="183:21"><name pos:start="183:19" pos:end="183:21">ctx</name></expr></argument>, <argument pos:start="183:24" pos:end="183:26"><expr pos:start="183:24" pos:end="183:26"><name pos:start="183:24" pos:end="183:26">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="187:5" pos:end="187:15">return <expr pos:start="187:12" pos:end="187:14"><name pos:start="187:12" pos:end="187:14">out</name></expr>;</return>

</block_content>}</block></function>
</unit>
