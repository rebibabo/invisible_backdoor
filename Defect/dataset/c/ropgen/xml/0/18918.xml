<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18918.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">op_mtc0_status</name> <parameter_list pos:start="1:21" pos:end="1:26">(<parameter pos:start="1:22" pos:end="1:25"><decl pos:start="1:22" pos:end="1:25"><type pos:start="1:22" pos:end="1:25"><name pos:start="1:22" pos:end="1:25">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">val</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:21">old</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">mask</name> <init pos:start="7:19" pos:end="7:42">= <expr pos:start="7:21" pos:end="7:42"><name pos:start="7:21" pos:end="7:42"><name pos:start="7:21" pos:end="7:23">env</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:42">Status_rw_bitmask</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="13:22">/* No reverse endianness, no MDMX/DSP, no 64bit ops

       implemented. */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">val</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:12">T0</name> <operator pos:start="15:14" pos:end="15:14">&amp;</operator> <name pos:start="15:16" pos:end="15:19">mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:7">old</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:25"><name pos:start="17:11" pos:end="17:13">env</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">CP0_Status</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="30:0"><if pos:start="19:5" pos:end="30:0">if <condition pos:start="19:8" pos:end="25:32">(<expr pos:start="19:9" pos:end="25:31"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:13">val</name> <operator pos:start="19:15" pos:end="19:15">&amp;</operator> <operator pos:start="19:17" pos:end="19:17">(</operator><literal type="number" pos:start="19:18" pos:end="19:18">1</literal> <operator pos:start="19:20" pos:end="19:21">&lt;&lt;</operator> <name pos:start="19:23" pos:end="19:31">CP0St_EXL</name><operator pos:start="19:32" pos:end="19:32">)</operator><operator pos:start="19:33" pos:end="19:33">)</operator> <operator pos:start="19:35" pos:end="19:36">&amp;&amp;</operator>

        <operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:13">val</name> <operator pos:start="21:15" pos:end="21:15">&amp;</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal> <operator pos:start="21:20" pos:end="21:21">&lt;&lt;</operator> <name pos:start="21:23" pos:end="21:31">CP0St_ERL</name><operator pos:start="21:32" pos:end="21:32">)</operator><operator pos:start="21:33" pos:end="21:33">)</operator> <operator pos:start="21:35" pos:end="21:36">&amp;&amp;</operator>

        <operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:21"><name pos:start="23:11" pos:end="23:13">env</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">hflags</name></name> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <name pos:start="23:25" pos:end="23:37">MIPS_HFLAG_DM</name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">&amp;&amp;</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">val</name> <operator pos:start="25:14" pos:end="25:14">&amp;</operator> <operator pos:start="25:16" pos:end="25:16">(</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal> <operator pos:start="25:19" pos:end="25:20">&lt;&lt;</operator> <name pos:start="25:22" pos:end="25:29">CP0St_UM</name><operator pos:start="25:30" pos:end="25:30">)</operator><operator pos:start="25:31" pos:end="25:31">)</operator></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="30:0"><block_content pos:start="27:9" pos:end="30:0">

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:19">hflags</name></name> <operator pos:start="27:21" pos:end="27:22">|=</operator> <name pos:start="27:24" pos:end="27:36">MIPS_HFLAG_UM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="29:1" pos:end="29:20">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:20">TARGET_MIPS64</name></cpp:ifdef>

    <if_stmt pos:start="31:5" pos:end="40:0"><if pos:start="31:5" pos:end="40:0">if <condition pos:start="31:8" pos:end="35:33">(<expr pos:start="31:9" pos:end="35:32"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:12">env</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:20">hflags</name></name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:36">MIPS_HFLAG_UM</name><operator pos:start="31:37" pos:end="31:37">)</operator> <operator pos:start="31:39" pos:end="31:40">&amp;&amp;</operator>

        <operator pos:start="33:9" pos:end="33:9">!</operator><operator pos:start="33:10" pos:end="33:10">(</operator><name pos:start="33:11" pos:end="33:13">val</name> <operator pos:start="33:15" pos:end="33:15">&amp;</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><literal type="number" pos:start="33:18" pos:end="33:18">1</literal> <operator pos:start="33:20" pos:end="33:21">&lt;&lt;</operator> <name pos:start="33:23" pos:end="33:30">CP0St_PX</name><operator pos:start="33:31" pos:end="33:31">)</operator><operator pos:start="33:32" pos:end="33:32">)</operator> <operator pos:start="33:34" pos:end="33:35">&amp;&amp;</operator>

        <operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:13">val</name> <operator pos:start="35:15" pos:end="35:15">&amp;</operator> <operator pos:start="35:17" pos:end="35:17">(</operator><literal type="number" pos:start="35:18" pos:end="35:18">1</literal> <operator pos:start="35:20" pos:end="35:21">&lt;&lt;</operator> <name pos:start="35:23" pos:end="35:30">CP0St_UX</name><operator pos:start="35:31" pos:end="35:31">)</operator><operator pos:start="35:32" pos:end="35:32">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="40:0"><block_content pos:start="37:9" pos:end="40:0">

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:11">env</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">hflags</name></name> <operator pos:start="37:21" pos:end="37:22">&amp;=</operator> <operator pos:start="37:24" pos:end="37:24">~</operator><name pos:start="37:25" pos:end="37:37">MIPS_HFLAG_64</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="41:5" pos:end="41:54"><expr pos:start="41:5" pos:end="41:53"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:19">CP0_Status</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">(</operator><name pos:start="41:24" pos:end="41:38"><name pos:start="41:24" pos:end="41:26">env</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:38">CP0_Status</name></name> <operator pos:start="41:40" pos:end="41:40">&amp;</operator> <operator pos:start="41:42" pos:end="41:42">~</operator><name pos:start="41:43" pos:end="41:46">mask</name><operator pos:start="41:47" pos:end="41:47">)</operator> <operator pos:start="41:49" pos:end="41:49">|</operator> <name pos:start="41:51" pos:end="41:53">val</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:54"><if pos:start="43:5" pos:end="45:54">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:16">loglevel</name> <operator pos:start="43:18" pos:end="43:18">&amp;</operator> <name pos:start="43:20" pos:end="43:31">CPU_LOG_EXEC</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:54"><block_content pos:start="45:9" pos:end="45:54">

        <expr_stmt pos:start="45:9" pos:end="45:54"><expr pos:start="45:9" pos:end="45:53"><call pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:21">CALL_FROM_TB2</name><argument_list pos:start="45:22" pos:end="45:53">(<argument pos:start="45:23" pos:end="45:42"><expr pos:start="45:23" pos:end="45:42"><name pos:start="45:23" pos:end="45:42">do_mtc0_status_debug</name></expr></argument>, <argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:47">old</name></expr></argument>, <argument pos:start="45:50" pos:end="45:52"><expr pos:start="45:50" pos:end="45:52"><name pos:start="45:50" pos:end="45:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><call pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:17">CALL_FROM_TB1</name><argument_list pos:start="47:18" pos:end="47:43">(<argument pos:start="47:19" pos:end="47:37"><expr pos:start="47:19" pos:end="47:37"><name pos:start="47:19" pos:end="47:37">cpu_mips_update_irq</name></expr></argument>, <argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:13"><expr pos:start="49:5" pos:end="49:12"><call pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:10">RETURN</name><argument_list pos:start="49:11" pos:end="49:12">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
