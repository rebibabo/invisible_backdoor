<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26571.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vt82c686b_ac97_initfn</name><parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VT686AC97State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:59">= <expr pos:start="5:25" pos:end="5:59"><call pos:start="5:25" pos:end="5:59"><name pos:start="5:25" pos:end="5:33">DO_UPCAST</name><argument_list pos:start="5:34" pos:end="5:59">(<argument pos:start="5:35" pos:end="5:48"><expr pos:start="5:35" pos:end="5:48"><name pos:start="5:35" pos:end="5:48">VT686AC97State</name></expr></argument>, <argument pos:start="5:51" pos:end="5:53"><expr pos:start="5:51" pos:end="5:53"><name pos:start="5:51" pos:end="5:53">dev</name></expr></argument>, <argument pos:start="5:56" pos:end="5:58"><expr pos:start="5:56" pos:end="5:58"><name pos:start="5:56" pos:end="5:58">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name> <init pos:start="7:23" pos:end="7:37">= <expr pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">dev</name><operator pos:start="7:31" pos:end="7:31">.</operator><name pos:start="7:32" pos:end="7:37">config</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:58"><expr pos:start="11:5" pos:end="11:57"><call pos:start="11:5" pos:end="11:57"><name pos:start="11:5" pos:end="11:28">pci_config_set_vendor_id</name><argument_list pos:start="11:29" pos:end="11:57">(<argument pos:start="11:30" pos:end="11:37"><expr pos:start="11:30" pos:end="11:37"><name pos:start="11:30" pos:end="11:37">pci_conf</name></expr></argument>, <argument pos:start="11:40" pos:end="11:56"><expr pos:start="11:40" pos:end="11:56"><name pos:start="11:40" pos:end="11:56">PCI_VENDOR_ID_VIA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:63"><expr pos:start="13:5" pos:end="13:62"><call pos:start="13:5" pos:end="13:62"><name pos:start="13:5" pos:end="13:28">pci_config_set_device_id</name><argument_list pos:start="13:29" pos:end="13:62">(<argument pos:start="13:30" pos:end="13:37"><expr pos:start="13:30" pos:end="13:37"><name pos:start="13:30" pos:end="13:37">pci_conf</name></expr></argument>, <argument pos:start="13:40" pos:end="13:61"><expr pos:start="13:40" pos:end="13:61"><name pos:start="13:40" pos:end="13:61">PCI_DEVICE_ID_VIA_AC97</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><call pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:24">pci_config_set_class</name><argument_list pos:start="15:25" pos:end="15:62">(<argument pos:start="15:26" pos:end="15:33"><expr pos:start="15:26" pos:end="15:33"><name pos:start="15:26" pos:end="15:33">pci_conf</name></expr></argument>, <argument pos:start="15:36" pos:end="15:61"><expr pos:start="15:36" pos:end="15:61"><name pos:start="15:36" pos:end="15:61">PCI_CLASS_MULTIMEDIA_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><call pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:27">pci_config_set_revision</name><argument_list pos:start="17:28" pos:end="17:43">(<argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:36">pci_conf</name></expr></argument>, <argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><literal type="number" pos:start="17:39" pos:end="17:42">0x50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:37"><expr pos:start="21:5" pos:end="23:36"><call pos:start="21:5" pos:end="23:36"><name pos:start="21:5" pos:end="21:16">pci_set_word</name><argument_list pos:start="21:17" pos:end="23:36">(<argument pos:start="21:18" pos:end="21:39"><expr pos:start="21:18" pos:end="21:39"><name pos:start="21:18" pos:end="21:25">pci_conf</name> <operator pos:start="21:27" pos:end="21:27">+</operator> <name pos:start="21:29" pos:end="21:39">PCI_COMMAND</name></expr></argument>, <argument pos:start="21:42" pos:end="23:35"><expr pos:start="21:42" pos:end="23:35"><name pos:start="21:42" pos:end="21:63">PCI_COMMAND_INVALIDATE</name> <operator pos:start="21:65" pos:end="21:65">|</operator>

                 <name pos:start="23:18" pos:end="23:35">PCI_COMMAND_PARITY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:43"><expr pos:start="25:5" pos:end="27:42"><call pos:start="25:5" pos:end="27:42"><name pos:start="25:5" pos:end="25:16">pci_set_word</name><argument_list pos:start="25:17" pos:end="27:42">(<argument pos:start="25:18" pos:end="25:38"><expr pos:start="25:18" pos:end="25:38"><name pos:start="25:18" pos:end="25:25">pci_conf</name> <operator pos:start="25:27" pos:end="25:27">+</operator> <name pos:start="25:29" pos:end="25:38">PCI_STATUS</name></expr></argument>, <argument pos:start="25:41" pos:end="27:41"><expr pos:start="25:41" pos:end="27:41"><name pos:start="25:41" pos:end="25:59">PCI_STATUS_CAP_LIST</name> <operator pos:start="25:61" pos:end="25:61">|</operator>

                 <name pos:start="27:18" pos:end="27:41">PCI_STATUS_DEVSEL_MEDIUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><call pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:16">pci_set_long</name><argument_list pos:start="29:17" pos:end="29:52">(<argument pos:start="29:18" pos:end="29:45"><expr pos:start="29:18" pos:end="29:45"><name pos:start="29:18" pos:end="29:25">pci_conf</name> <operator pos:start="29:27" pos:end="29:27">+</operator> <name pos:start="29:29" pos:end="29:45">PCI_INTERRUPT_PIN</name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><literal type="number" pos:start="29:48" pos:end="29:51">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
