<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1631.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">h264_parse</name><parameter_list pos:start="1:22" pos:end="7:55">(<parameter pos:start="1:23" pos:end="1:45"><decl pos:start="1:23" pos:end="1:45"><type pos:start="1:23" pos:end="1:45"><name pos:start="1:23" pos:end="1:42">AVCodecParserContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:43"><decl pos:start="3:23" pos:end="3:43"><type pos:start="3:23" pos:end="3:43"><name pos:start="3:23" pos:end="3:36">AVCodecContext</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avctx</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:39"><decl pos:start="5:23" pos:end="5:39"><type pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:29">uint8_t</name> <modifier pos:start="5:31" pos:end="5:31">*</modifier><modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:39">poutbuf</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:58"><decl pos:start="5:42" pos:end="5:58"><type pos:start="5:42" pos:end="5:58"><name pos:start="5:42" pos:end="5:44">int</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:58">poutbuf_size</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:40"><decl pos:start="7:23" pos:end="7:40"><type pos:start="7:23" pos:end="7:40"><specifier pos:start="7:23" pos:end="7:27">const</specifier> <name pos:start="7:29" pos:end="7:35">uint8_t</name> <modifier pos:start="7:37" pos:end="7:37">*</modifier></type><name pos:start="7:38" pos:end="7:40">buf</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:54"><decl pos:start="7:43" pos:end="7:54"><type pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="57:1">{<block_content pos:start="11:5" pos:end="55:16">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">H264Context</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">h</name> <init pos:start="11:20" pos:end="11:33">= <expr pos:start="11:22" pos:end="11:33"><name pos:start="11:22" pos:end="11:33"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">ParseContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">pc</name> <init pos:start="13:22" pos:end="13:42">= <expr pos:start="13:24" pos:end="13:42"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:42"><name pos:start="13:25" pos:end="13:25">h</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:42">parse_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">next</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="47:5"><if pos:start="19:5" pos:end="23:5">if<condition pos:start="19:7" pos:end="19:46">(<expr pos:start="19:8" pos:end="19:45"><name pos:start="19:8" pos:end="19:15"><name pos:start="19:8" pos:end="19:8">s</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:15">flags</name></name> <operator pos:start="19:17" pos:end="19:17">&amp;</operator> <name pos:start="19:19" pos:end="19:45">PARSER_FLAG_COMPLETE_FRAMES</name></expr>)</condition><block pos:start="19:47" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:12">next</name><operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:22">buf_size</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="23:6" pos:end="47:5">else<block pos:start="23:10" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:12">next</name><operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:46"><name pos:start="25:15" pos:end="25:28">find_frame_end</name><argument_list pos:start="25:29" pos:end="25:46">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">h</name></expr></argument>, <argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">buf</name></expr></argument>, <argument pos:start="25:38" pos:end="25:45"><expr pos:start="25:38" pos:end="25:45"><name pos:start="25:38" pos:end="25:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:72">(<expr pos:start="29:13" pos:end="29:71"><call pos:start="29:13" pos:end="29:67"><name pos:start="29:13" pos:end="29:28">ff_combine_frame</name><argument_list pos:start="29:29" pos:end="29:67">(<argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">pc</name></expr></argument>, <argument pos:start="29:34" pos:end="29:37"><expr pos:start="29:34" pos:end="29:37"><name pos:start="29:34" pos:end="29:37">next</name></expr></argument>, <argument pos:start="29:40" pos:end="29:55"><expr pos:start="29:40" pos:end="29:55"><operator pos:start="29:40" pos:end="29:40">(</operator><name pos:start="29:41" pos:end="29:47">uint8_t</name> <operator pos:start="29:49" pos:end="29:49">*</operator><operator pos:start="29:50" pos:end="29:50">*</operator><operator pos:start="29:51" pos:end="29:51">)</operator><operator pos:start="29:52" pos:end="29:52">&amp;</operator><name pos:start="29:53" pos:end="29:55">buf</name></expr></argument>, <argument pos:start="29:58" pos:end="29:66"><expr pos:start="29:58" pos:end="29:66"><operator pos:start="29:58" pos:end="29:58">&amp;</operator><name pos:start="29:59" pos:end="29:66">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="29:69" pos:end="29:69">&lt;</operator> <literal type="number" pos:start="29:71" pos:end="29:71">0</literal></expr>)</condition> <block pos:start="29:74" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:28">

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:20">poutbuf</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:27">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:30"><expr pos:start="33:13" pos:end="33:29"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:25">poutbuf_size</name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:28">return <expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if<condition pos:start="41:11" pos:end="41:18">(<expr pos:start="41:12" pos:end="41:17"><name pos:start="41:12" pos:end="41:15">next</name><operator pos:start="41:16" pos:end="41:16">&lt;</operator><literal type="number" pos:start="41:17" pos:end="41:17">0</literal></expr>)</condition><block pos:start="41:19" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:73">

            <expr_stmt pos:start="43:13" pos:end="43:73"><expr pos:start="43:13" pos:end="43:72"><call pos:start="43:13" pos:end="43:72"><name pos:start="43:13" pos:end="43:26">find_frame_end</name><argument_list pos:start="43:27" pos:end="43:72">(<argument pos:start="43:28" pos:end="43:28"><expr pos:start="43:28" pos:end="43:28"><name pos:start="43:28" pos:end="43:28">h</name></expr></argument>, <argument pos:start="43:31" pos:end="43:64"><expr pos:start="43:31" pos:end="43:64"><operator pos:start="43:31" pos:end="43:31">&amp;</operator><name pos:start="43:32" pos:end="43:64"><name pos:start="43:32" pos:end="43:33">pc</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:41">buffer</name><index pos:start="43:42" pos:end="43:64">[<expr pos:start="43:43" pos:end="43:63"><name pos:start="43:43" pos:end="43:56"><name pos:start="43:43" pos:end="43:44">pc</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:56">last_index</name></name> <operator pos:start="43:58" pos:end="43:58">+</operator> <name pos:start="43:60" pos:end="43:63">next</name></expr>]</index></name></expr></argument>, <argument pos:start="43:67" pos:end="43:71"><expr pos:start="43:67" pos:end="43:71"><operator pos:start="43:67" pos:end="43:67">-</operator><name pos:start="43:68" pos:end="43:71">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="43:75" pos:end="43:88">//update state</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:12">poutbuf</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:23">uint8_t</name> <operator pos:start="51:25" pos:end="51:25">*</operator><operator pos:start="51:26" pos:end="51:26">)</operator><name pos:start="51:27" pos:end="51:29">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><operator pos:start="53:5" pos:end="53:5">*</operator><name pos:start="53:6" pos:end="53:17">poutbuf_size</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:28">buf_size</name></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:16">return <expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">next</name></expr>;</return>

</block_content>}</block></function>
</unit>
