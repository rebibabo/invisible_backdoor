<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15197.c" pos:tabs="8"><function pos:start="1:1" pos:end="735:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mov_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="735:1">{<block_content pos:start="5:5" pos:end="733:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MOVMuxContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">mov</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:86"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">t</name></decl>, <decl pos:start="9:27" pos:end="9:85"><type ref="prev" pos:start="9:5" pos:end="9:23"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:37">global_tcr</name> <init pos:start="9:39" pos:end="9:85">= <expr pos:start="9:41" pos:end="9:85"><call pos:start="9:41" pos:end="9:85"><name pos:start="9:41" pos:end="9:51">av_dict_get</name><argument_list pos:start="9:52" pos:end="9:85">(<argument pos:start="9:53" pos:end="9:63"><expr pos:start="9:53" pos:end="9:63"><name pos:start="9:53" pos:end="9:63"><name pos:start="9:53" pos:end="9:53">s</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:63">metadata</name></name></expr></argument>, <argument pos:start="9:66" pos:end="9:75"><expr pos:start="9:66" pos:end="9:75"><literal type="string" pos:start="9:66" pos:end="9:75">"timecode"</literal></expr></argument>, <argument pos:start="9:78" pos:end="9:81"><expr pos:start="9:78" pos:end="9:81"><name pos:start="9:78" pos:end="9:81">NULL</name></expr></argument>, <argument pos:start="9:84" pos:end="9:84"><expr pos:start="9:84" pos:end="9:84"><literal type="number" pos:start="9:84" pos:end="9:84">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>, <decl pos:start="11:17" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:26">hint_track</name> <init pos:start="11:28" pos:end="11:30">= <expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">0</literal></expr></init></decl>, <decl pos:start="11:33" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:33" pos:end="11:42">tmcd_track</name> <init pos:start="11:44" pos:end="11:46">= <expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:7">mov</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:11">fc</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:15">s</name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:29">/* Default mode == MP4 */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">mov</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">mode</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:24">MODE_MP4</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="41:5"><if pos:start="25:5" pos:end="41:5">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:18">oformat</name></name></expr>)</condition> <block pos:start="25:21" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:72">

        <if_stmt pos:start="27:9" pos:end="39:72"><if pos:start="27:9" pos:end="27:67">if <condition pos:start="27:12" pos:end="27:45">(<expr pos:start="27:13" pos:end="27:44"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:44"><name pos:start="27:14" pos:end="27:19">strcmp</name><argument_list pos:start="27:20" pos:end="27:44">(<argument pos:start="27:21" pos:end="27:25"><expr pos:start="27:21" pos:end="27:25"><literal type="string" pos:start="27:21" pos:end="27:25">"3gp"</literal></expr></argument>, <argument pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:43"><name pos:start="27:28" pos:end="27:43"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:37">oformat</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:43">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:47" pos:end="27:67"><block_content pos:start="27:47" pos:end="27:67"> <expr_stmt pos:start="27:47" pos:end="27:67"><expr pos:start="27:47" pos:end="27:66"><name pos:start="27:47" pos:end="27:55"><name pos:start="27:47" pos:end="27:49">mov</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:55">mode</name></name> <operator pos:start="27:57" pos:end="27:57">=</operator> <name pos:start="27:59" pos:end="27:66">MODE_3GP</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="29:9" pos:end="29:81">else if <condition pos:start="29:17" pos:end="29:50">(<expr pos:start="29:18" pos:end="29:49"><operator pos:start="29:18" pos:end="29:18">!</operator><call pos:start="29:19" pos:end="29:49"><name pos:start="29:19" pos:end="29:24">strcmp</name><argument_list pos:start="29:25" pos:end="29:49">(<argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><literal type="string" pos:start="29:26" pos:end="29:30">"3g2"</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:48"><expr pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:48"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:42">oformat</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:52" pos:end="29:81"><block_content pos:start="29:52" pos:end="29:81"> <expr_stmt pos:start="29:52" pos:end="29:81"><expr pos:start="29:52" pos:end="29:80"><name pos:start="29:52" pos:end="29:60"><name pos:start="29:52" pos:end="29:54">mov</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:60">mode</name></name> <operator pos:start="29:62" pos:end="29:62">=</operator> <name pos:start="29:64" pos:end="29:71">MODE_3GP</name><operator pos:start="29:72" pos:end="29:72">|</operator><name pos:start="29:73" pos:end="29:80">MODE_3G2</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="31:72">else if <condition pos:start="31:17" pos:end="31:50">(<expr pos:start="31:18" pos:end="31:49"><operator pos:start="31:18" pos:end="31:18">!</operator><call pos:start="31:19" pos:end="31:49"><name pos:start="31:19" pos:end="31:24">strcmp</name><argument_list pos:start="31:25" pos:end="31:49">(<argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><literal type="string" pos:start="31:26" pos:end="31:30">"mov"</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:48"><expr pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:42">oformat</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:52" pos:end="31:72"><block_content pos:start="31:52" pos:end="31:72"> <expr_stmt pos:start="31:52" pos:end="31:72"><expr pos:start="31:52" pos:end="31:71"><name pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:54">mov</name><operator pos:start="31:55" pos:end="31:56">-&gt;</operator><name pos:start="31:57" pos:end="31:60">mode</name></name> <operator pos:start="31:62" pos:end="31:62">=</operator> <name pos:start="31:64" pos:end="31:71">MODE_MOV</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="33:9" pos:end="33:72">else if <condition pos:start="33:17" pos:end="33:50">(<expr pos:start="33:18" pos:end="33:49"><operator pos:start="33:18" pos:end="33:18">!</operator><call pos:start="33:19" pos:end="33:49"><name pos:start="33:19" pos:end="33:24">strcmp</name><argument_list pos:start="33:25" pos:end="33:49">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><literal type="string" pos:start="33:26" pos:end="33:30">"psp"</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:48"><expr pos:start="33:33" pos:end="33:48"><name pos:start="33:33" pos:end="33:48"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:42">oformat</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:52" pos:end="33:72"><block_content pos:start="33:52" pos:end="33:72"> <expr_stmt pos:start="33:52" pos:end="33:72"><expr pos:start="33:52" pos:end="33:71"><name pos:start="33:52" pos:end="33:60"><name pos:start="33:52" pos:end="33:54">mov</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:60">mode</name></name> <operator pos:start="33:62" pos:end="33:62">=</operator> <name pos:start="33:64" pos:end="33:71">MODE_PSP</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="35:9" pos:end="35:73">else if <condition pos:start="35:17" pos:end="35:50">(<expr pos:start="35:18" pos:end="35:49"><operator pos:start="35:18" pos:end="35:18">!</operator><call pos:start="35:19" pos:end="35:49"><name pos:start="35:19" pos:end="35:24">strcmp</name><argument_list pos:start="35:25" pos:end="35:49">(<argument pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><literal type="string" pos:start="35:26" pos:end="35:31">"ipod"</literal></expr></argument>,<argument pos:start="35:33" pos:end="35:48"><expr pos:start="35:33" pos:end="35:48"><name pos:start="35:33" pos:end="35:48"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:42">oformat</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:52" pos:end="35:73"><block_content pos:start="35:52" pos:end="35:73"> <expr_stmt pos:start="35:52" pos:end="35:73"><expr pos:start="35:52" pos:end="35:72"><name pos:start="35:52" pos:end="35:60"><name pos:start="35:52" pos:end="35:54">mov</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:60">mode</name></name> <operator pos:start="35:62" pos:end="35:62">=</operator> <name pos:start="35:64" pos:end="35:72">MODE_IPOD</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="37:9" pos:end="37:72">else if <condition pos:start="37:17" pos:end="37:50">(<expr pos:start="37:18" pos:end="37:49"><operator pos:start="37:18" pos:end="37:18">!</operator><call pos:start="37:19" pos:end="37:49"><name pos:start="37:19" pos:end="37:24">strcmp</name><argument_list pos:start="37:25" pos:end="37:49">(<argument pos:start="37:26" pos:end="37:31"><expr pos:start="37:26" pos:end="37:31"><literal type="string" pos:start="37:26" pos:end="37:31">"ismv"</literal></expr></argument>,<argument pos:start="37:33" pos:end="37:48"><expr pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:42">oformat</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:52" pos:end="37:72"><block_content pos:start="37:52" pos:end="37:72"> <expr_stmt pos:start="37:52" pos:end="37:72"><expr pos:start="37:52" pos:end="37:71"><name pos:start="37:52" pos:end="37:60"><name pos:start="37:52" pos:end="37:54">mov</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:60">mode</name></name> <operator pos:start="37:62" pos:end="37:62">=</operator> <name pos:start="37:64" pos:end="37:71">MODE_ISM</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="39:9" pos:end="39:72">else if <condition pos:start="39:17" pos:end="39:50">(<expr pos:start="39:18" pos:end="39:49"><operator pos:start="39:18" pos:end="39:18">!</operator><call pos:start="39:19" pos:end="39:49"><name pos:start="39:19" pos:end="39:24">strcmp</name><argument_list pos:start="39:25" pos:end="39:49">(<argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><literal type="string" pos:start="39:26" pos:end="39:30">"f4v"</literal></expr></argument>, <argument pos:start="39:33" pos:end="39:48"><expr pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:48"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:42">oformat</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:48">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:52" pos:end="39:72"><block_content pos:start="39:52" pos:end="39:72"> <expr_stmt pos:start="39:52" pos:end="39:72"><expr pos:start="39:52" pos:end="39:71"><name pos:start="39:52" pos:end="39:60"><name pos:start="39:52" pos:end="39:54">mov</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:60">mode</name></name> <operator pos:start="39:62" pos:end="39:62">=</operator> <name pos:start="39:64" pos:end="39:71">MODE_F4V</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:23"><if pos:start="45:5" pos:end="47:23">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">flags</name></name> <operator pos:start="45:18" pos:end="45:18">&amp;</operator> <name pos:start="45:20" pos:end="45:38">AVFMT_FLAG_BITEXACT</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:23"><block_content pos:start="47:9" pos:end="47:23">

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">mov</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">exact</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:45"><if pos:start="51:5" pos:end="53:45">if <condition pos:start="51:8" pos:end="51:44">(<expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">mov</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:18">flags</name></name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <name pos:start="51:22" pos:end="51:43">FF_MOV_FLAG_DELAY_MOOV</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:45"><block_content pos:start="53:9" pos:end="53:45">

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:11">mov</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:18">flags</name></name> <operator pos:start="53:20" pos:end="53:21">|=</operator> <name pos:start="53:23" pos:end="53:44">FF_MOV_FLAG_EMPTY_MOOV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="59:18">/* Set the FRAGMENT flag if any of the fragmentation methods are

     * enabled. */</comment>

    <if_stmt pos:start="61:5" pos:end="69:43"><if pos:start="61:5" pos:end="69:43">if <condition pos:start="61:8" pos:end="67:47">(<expr pos:start="61:9" pos:end="67:46"><name pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:11">mov</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:34">max_fragment_duration</name></name> <operator pos:start="61:36" pos:end="61:37">||</operator> <name pos:start="61:39" pos:end="61:60"><name pos:start="61:39" pos:end="61:41">mov</name><operator pos:start="61:42" pos:end="61:43">-&gt;</operator><name pos:start="61:44" pos:end="61:60">max_fragment_size</name></name> <operator pos:start="61:62" pos:end="61:63">||</operator>

        <name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:11">mov</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:18">flags</name></name> <operator pos:start="63:20" pos:end="63:20">&amp;</operator> <operator pos:start="63:22" pos:end="63:22">(</operator><name pos:start="63:23" pos:end="63:44">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="63:46" pos:end="63:46">|</operator>

                      <name pos:start="65:23" pos:end="65:47">FF_MOV_FLAG_FRAG_KEYFRAME</name> <operator pos:start="65:49" pos:end="65:49">|</operator>

                      <name pos:start="67:23" pos:end="67:45">FF_MOV_FLAG_FRAG_CUSTOM</name><operator pos:start="67:46" pos:end="67:46">)</operator></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:43"><block_content pos:start="69:9" pos:end="69:43">

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">mov</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:18">flags</name></name> <operator pos:start="69:20" pos:end="69:21">|=</operator> <name pos:start="69:23" pos:end="69:42">FF_MOV_FLAG_FRAGMENT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:46">/* Set other implicit flags immediately */</comment>

    <if_stmt pos:start="75:5" pos:end="79:43"><if pos:start="75:5" pos:end="79:43">if <condition pos:start="75:8" pos:end="75:30">(<expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:11">mov</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:17">mode</name></name> <operator pos:start="75:19" pos:end="75:20">==</operator> <name pos:start="75:22" pos:end="75:29">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="79:43"><block_content pos:start="77:9" pos:end="79:43">

        <expr_stmt pos:start="77:9" pos:end="79:43"><expr pos:start="77:9" pos:end="79:42"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:11">mov</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:18">flags</name></name> <operator pos:start="77:20" pos:end="77:21">|=</operator> <name pos:start="77:23" pos:end="77:44">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="77:46" pos:end="77:46">|</operator> <name pos:start="77:48" pos:end="77:72">FF_MOV_FLAG_SEPARATE_MOOF</name> <operator pos:start="77:74" pos:end="77:74">|</operator>

                      <name pos:start="79:23" pos:end="79:42">FF_MOV_FLAG_FRAGMENT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="85:52"><if pos:start="81:5" pos:end="85:52">if <condition pos:start="81:8" pos:end="81:38">(<expr pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:11">mov</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">flags</name></name> <operator pos:start="81:20" pos:end="81:20">&amp;</operator> <name pos:start="81:22" pos:end="81:37">FF_MOV_FLAG_DASH</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="85:52"><block_content pos:start="83:9" pos:end="85:52">

        <expr_stmt pos:start="83:9" pos:end="85:52"><expr pos:start="83:9" pos:end="85:51"><name pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:11">mov</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:18">flags</name></name> <operator pos:start="83:20" pos:end="83:21">|=</operator> <name pos:start="83:23" pos:end="83:42">FF_MOV_FLAG_FRAGMENT</name> <operator pos:start="83:44" pos:end="83:44">|</operator> <name pos:start="83:46" pos:end="83:67">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="83:69" pos:end="83:69">|</operator>

                      <name pos:start="85:23" pos:end="85:51">FF_MOV_FLAG_DEFAULT_BASE_MOOF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:43">(<expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:11">mov</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:18">flags</name></name> <operator pos:start="89:20" pos:end="89:20">&amp;</operator> <name pos:start="89:22" pos:end="89:42">FF_MOV_FLAG_FASTSTART</name></expr>)</condition> <block pos:start="89:45" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:37">

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:11">mov</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:31">reserved_moov_size</name></name> <operator pos:start="91:33" pos:end="91:33">=</operator> <operator pos:start="91:35" pos:end="91:35">-</operator><literal type="number" pos:start="91:36" pos:end="91:36">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="119:5"><if pos:start="97:5" pos:end="119:5">if <condition pos:start="97:8" pos:end="97:30">(<expr pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:11">mov</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:25">use_editlist</name></name> <operator pos:start="97:27" pos:end="97:27">&lt;</operator> <literal type="number" pos:start="97:29" pos:end="97:29">0</literal></expr>)</condition> <block pos:start="97:32" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:9">

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:11">mov</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:25">use_editlist</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <literal type="number" pos:start="99:29" pos:end="99:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="117:9"><if pos:start="101:9" pos:end="117:9">if <condition pos:start="101:12" pos:end="103:51">(<expr pos:start="101:13" pos:end="103:50"><name pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:15">mov</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:22">flags</name></name> <operator pos:start="101:24" pos:end="101:24">&amp;</operator> <name pos:start="101:26" pos:end="101:45">FF_MOV_FLAG_FRAGMENT</name> <operator pos:start="101:47" pos:end="101:48">&amp;&amp;</operator>

            <operator pos:start="103:13" pos:end="103:13">!</operator><operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:24"><name pos:start="103:15" pos:end="103:17">mov</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:24">flags</name></name> <operator pos:start="103:26" pos:end="103:26">&amp;</operator> <name pos:start="103:28" pos:end="103:49">FF_MOV_FLAG_DELAY_MOOV</name><operator pos:start="103:50" pos:end="103:50">)</operator></expr>)</condition> <block pos:start="103:53" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:38">

            <comment type="line" pos:start="105:13" pos:end="105:67">// If we can avoid needing an edit list by shifting the</comment>

            <comment type="line" pos:start="107:13" pos:end="107:68">// tracks, prefer that over (trying to) write edit lists</comment>

            <comment type="line" pos:start="109:13" pos:end="109:36">// in fragmented output.</comment>

            <if_stmt pos:start="111:13" pos:end="115:38"><if pos:start="111:13" pos:end="115:38">if <condition pos:start="111:16" pos:end="113:69">(<expr pos:start="111:17" pos:end="113:68"><name pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:36">avoid_negative_ts</name></name> <operator pos:start="111:38" pos:end="111:39">==</operator> <name pos:start="111:41" pos:end="111:63">AVFMT_AVOID_NEG_TS_AUTO</name> <operator pos:start="111:65" pos:end="111:66">||</operator>

                <name pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:36">avoid_negative_ts</name></name> <operator pos:start="113:38" pos:end="113:39">==</operator> <name pos:start="113:41" pos:end="113:68">AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:38"><block_content pos:start="115:17" pos:end="115:38">

                <expr_stmt pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:19">mov</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:33">use_editlist</name></name> <operator pos:start="115:35" pos:end="115:35">=</operator> <literal type="number" pos:start="115:37" pos:end="115:37">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="121:5" pos:end="125:120"><if pos:start="121:5" pos:end="125:120">if <condition pos:start="121:8" pos:end="123:68">(<expr pos:start="121:9" pos:end="123:67"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:11">mov</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:18">flags</name></name> <operator pos:start="121:20" pos:end="121:20">&amp;</operator> <name pos:start="121:22" pos:end="121:43">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="121:45" pos:end="121:46">&amp;&amp;</operator>

        <operator pos:start="123:9" pos:end="123:9">!</operator><operator pos:start="123:10" pos:end="123:10">(</operator><name pos:start="123:11" pos:end="123:20"><name pos:start="123:11" pos:end="123:13">mov</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:20">flags</name></name> <operator pos:start="123:22" pos:end="123:22">&amp;</operator> <name pos:start="123:24" pos:end="123:45">FF_MOV_FLAG_DELAY_MOOV</name><operator pos:start="123:46" pos:end="123:46">)</operator> <operator pos:start="123:48" pos:end="123:49">&amp;&amp;</operator> <name pos:start="123:51" pos:end="123:67"><name pos:start="123:51" pos:end="123:53">mov</name><operator pos:start="123:54" pos:end="123:55">-&gt;</operator><name pos:start="123:56" pos:end="123:67">use_editlist</name></name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:120"><block_content pos:start="125:9" pos:end="125:120">

        <expr_stmt pos:start="125:9" pos:end="125:120"><expr pos:start="125:9" pos:end="125:119"><call pos:start="125:9" pos:end="125:119"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="125:119">(<argument pos:start="125:16" pos:end="125:16"><expr pos:start="125:16" pos:end="125:16"><name pos:start="125:16" pos:end="125:16">s</name></expr></argument>, <argument pos:start="125:19" pos:end="125:32"><expr pos:start="125:19" pos:end="125:32"><name pos:start="125:19" pos:end="125:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="125:35" pos:end="125:118"><expr pos:start="125:35" pos:end="125:118"><literal type="string" pos:start="125:35" pos:end="125:118">"No meaningful edit list will be written when using empty_moov without delay_moov\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="131:60"><if pos:start="129:5" pos:end="131:60">if <condition pos:start="129:8" pos:end="129:78">(<expr pos:start="129:9" pos:end="129:77"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:26"><name pos:start="129:10" pos:end="129:12">mov</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:26">use_editlist</name></name> <operator pos:start="129:28" pos:end="129:29">&amp;&amp;</operator> <name pos:start="129:31" pos:end="129:50"><name pos:start="129:31" pos:end="129:31">s</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:50">avoid_negative_ts</name></name> <operator pos:start="129:52" pos:end="129:53">==</operator> <name pos:start="129:55" pos:end="129:77">AVFMT_AVOID_NEG_TS_AUTO</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:60"><block_content pos:start="131:9" pos:end="131:60">

        <expr_stmt pos:start="131:9" pos:end="131:60"><expr pos:start="131:9" pos:end="131:59"><name pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:28">avoid_negative_ts</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <name pos:start="131:32" pos:end="131:59">AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="139:44">/* Clear the omit_tfhd_offset flag if default_base_moof is set;

     * if the latter is set that's enough and omit_tfhd_offset doesn't

     * add anything extra on top of that. */</comment>

    <if_stmt pos:start="141:5" pos:end="145:52"><if pos:start="141:5" pos:end="145:52">if <condition pos:start="141:8" pos:end="143:51">(<expr pos:start="141:9" pos:end="143:50"><name pos:start="141:9" pos:end="141:18"><name pos:start="141:9" pos:end="141:11">mov</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:18">flags</name></name> <operator pos:start="141:20" pos:end="141:20">&amp;</operator> <name pos:start="141:22" pos:end="141:49">FF_MOV_FLAG_OMIT_TFHD_OFFSET</name> <operator pos:start="141:51" pos:end="141:52">&amp;&amp;</operator>

        <name pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:11">mov</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:18">flags</name></name> <operator pos:start="143:20" pos:end="143:20">&amp;</operator> <name pos:start="143:22" pos:end="143:50">FF_MOV_FLAG_DEFAULT_BASE_MOOF</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:52"><block_content pos:start="145:9" pos:end="145:52">

        <expr_stmt pos:start="145:9" pos:end="145:52"><expr pos:start="145:9" pos:end="145:51"><name pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:11">mov</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:18">flags</name></name> <operator pos:start="145:20" pos:end="145:21">&amp;=</operator> <operator pos:start="145:23" pos:end="145:23">~</operator><name pos:start="145:24" pos:end="145:51">FF_MOV_FLAG_OMIT_TFHD_OFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="161:5"><if pos:start="149:5" pos:end="161:5">if <condition pos:start="149:8" pos:end="151:80">(<expr pos:start="149:9" pos:end="151:79"><name pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:11">mov</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:28">frag_interleave</name></name> <operator pos:start="149:30" pos:end="149:31">&amp;&amp;</operator>

        <name pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:11">mov</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:18">flags</name></name> <operator pos:start="151:20" pos:end="151:20">&amp;</operator> <operator pos:start="151:22" pos:end="151:22">(</operator><name pos:start="151:23" pos:end="151:50">FF_MOV_FLAG_OMIT_TFHD_OFFSET</name> <operator pos:start="151:52" pos:end="151:52">|</operator> <name pos:start="151:54" pos:end="151:78">FF_MOV_FLAG_SEPARATE_MOOF</name><operator pos:start="151:79" pos:end="151:79">)</operator></expr>)</condition> <block pos:start="151:82" pos:end="161:5">{<block_content pos:start="153:9" pos:end="159:31">

        <expr_stmt pos:start="153:9" pos:end="157:55"><expr pos:start="153:9" pos:end="157:54"><call pos:start="153:9" pos:end="157:54"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="157:54">(<argument pos:start="153:16" pos:end="153:16"><expr pos:start="153:16" pos:end="153:16"><name pos:start="153:16" pos:end="153:16">s</name></expr></argument>, <argument pos:start="153:19" pos:end="153:30"><expr pos:start="153:19" pos:end="153:30"><name pos:start="153:19" pos:end="153:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="155:16" pos:end="157:53"><expr pos:start="155:16" pos:end="157:53"><literal type="string" pos:start="155:16" pos:end="155:77">"Sample interleaving in fragments is mutually exclusive with "</literal>

               <literal type="string" pos:start="157:16" pos:end="157:53">"omit_tfhd_offset and separate_moof\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:31">return <expr pos:start="159:16" pos:end="159:30"><call pos:start="159:16" pos:end="159:30"><name pos:start="159:16" pos:end="159:22">AVERROR</name><argument_list pos:start="159:23" pos:end="159:30">(<argument pos:start="159:24" pos:end="159:29"><expr pos:start="159:24" pos:end="159:29"><name pos:start="159:24" pos:end="159:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="167:66">/* Non-seekable output is ok if using fragmentation. If ism_lookahead

     * is enabled, we don't support non-seekable output at all. */</comment>

    <if_stmt pos:start="169:5" pos:end="177:5"><if pos:start="169:5" pos:end="177:5">if <condition pos:start="169:8" pos:end="171:69">(<expr pos:start="169:9" pos:end="171:68"><operator pos:start="169:9" pos:end="169:9">!</operator><name pos:start="169:10" pos:end="169:24"><name pos:start="169:10" pos:end="169:10">s</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:14">pb</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:24">seekable</name></name> <operator pos:start="169:26" pos:end="169:27">&amp;&amp;</operator>

        <operator pos:start="171:9" pos:end="171:9">(</operator><operator pos:start="171:10" pos:end="171:10">!</operator><operator pos:start="171:11" pos:end="171:11">(</operator><name pos:start="171:12" pos:end="171:21"><name pos:start="171:12" pos:end="171:14">mov</name><operator pos:start="171:15" pos:end="171:16">-&gt;</operator><name pos:start="171:17" pos:end="171:21">flags</name></name> <operator pos:start="171:23" pos:end="171:23">&amp;</operator> <name pos:start="171:25" pos:end="171:44">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="171:45" pos:end="171:45">)</operator> <operator pos:start="171:47" pos:end="171:48">||</operator> <name pos:start="171:50" pos:end="171:67"><name pos:start="171:50" pos:end="171:52">mov</name><operator pos:start="171:53" pos:end="171:54">-&gt;</operator><name pos:start="171:55" pos:end="171:67">ism_lookahead</name></name><operator pos:start="171:68" pos:end="171:68">)</operator></expr>)</condition> <block pos:start="171:71" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:31">

        <expr_stmt pos:start="173:9" pos:end="173:80"><expr pos:start="173:9" pos:end="173:79"><call pos:start="173:9" pos:end="173:79"><name pos:start="173:9" pos:end="173:14">av_log</name><argument_list pos:start="173:15" pos:end="173:79">(<argument pos:start="173:16" pos:end="173:16"><expr pos:start="173:16" pos:end="173:16"><name pos:start="173:16" pos:end="173:16">s</name></expr></argument>, <argument pos:start="173:19" pos:end="173:30"><expr pos:start="173:19" pos:end="173:30"><name pos:start="173:19" pos:end="173:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:33" pos:end="173:78"><expr pos:start="173:33" pos:end="173:78"><literal type="string" pos:start="173:33" pos:end="173:78">"muxer does not support non seekable output\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="175:9" pos:end="175:31">return <expr pos:start="175:16" pos:end="175:30"><call pos:start="175:16" pos:end="175:30"><name pos:start="175:16" pos:end="175:22">AVERROR</name><argument_list pos:start="175:23" pos:end="175:30">(<argument pos:start="175:24" pos:end="175:29"><expr pos:start="175:24" pos:end="175:29"><name pos:start="175:24" pos:end="175:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="181:5" pos:end="187:5"><if pos:start="181:5" pos:end="187:5">if <condition pos:start="181:8" pos:end="181:47">(<expr pos:start="181:9" pos:end="181:46"><operator pos:start="181:9" pos:end="181:9">!</operator><operator pos:start="181:10" pos:end="181:10">(</operator><name pos:start="181:11" pos:end="181:20"><name pos:start="181:11" pos:end="181:13">mov</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:20">flags</name></name> <operator pos:start="181:22" pos:end="181:22">&amp;</operator> <name pos:start="181:24" pos:end="181:45">FF_MOV_FLAG_DELAY_MOOV</name><operator pos:start="181:46" pos:end="181:46">)</operator></expr>)</condition> <block pos:start="181:49" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:23">

        <if_stmt pos:start="183:9" pos:end="185:23"><if pos:start="183:9" pos:end="185:23">if <condition pos:start="183:12" pos:end="183:56">(<expr pos:start="183:13" pos:end="183:55"><operator pos:start="183:13" pos:end="183:13">(</operator><name pos:start="183:14" pos:end="183:16">ret</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="183:50"><name pos:start="183:20" pos:end="183:43">mov_write_identification</name><argument_list pos:start="183:44" pos:end="183:50">(<argument pos:start="183:45" pos:end="183:46"><expr pos:start="183:45" pos:end="183:46"><name pos:start="183:45" pos:end="183:46">pb</name></expr></argument>, <argument pos:start="183:49" pos:end="183:49"><expr pos:start="183:49" pos:end="183:49"><name pos:start="183:49" pos:end="183:49">s</name></expr></argument>)</argument_list></call><operator pos:start="183:51" pos:end="183:51">)</operator> <operator pos:start="183:53" pos:end="183:53">&lt;</operator> <literal type="number" pos:start="183:55" pos:end="183:55">0</literal></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:23"><block_content pos:start="185:13" pos:end="185:23">

            <return pos:start="185:13" pos:end="185:23">return <expr pos:start="185:20" pos:end="185:22"><name pos:start="185:20" pos:end="185:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:36"><expr pos:start="191:5" pos:end="191:35"><name pos:start="191:5" pos:end="191:19"><name pos:start="191:5" pos:end="191:7">mov</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:19">nb_streams</name></name> <operator pos:start="191:21" pos:end="191:21">=</operator> <name pos:start="191:23" pos:end="191:35"><name pos:start="191:23" pos:end="191:23">s</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:35">nb_streams</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="195:47"><if pos:start="193:5" pos:end="195:47">if <condition pos:start="193:8" pos:end="193:68">(<expr pos:start="193:9" pos:end="193:67"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:11">mov</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:17">mode</name></name> <operator pos:start="193:19" pos:end="193:19">&amp;</operator> <operator pos:start="193:21" pos:end="193:21">(</operator><name pos:start="193:22" pos:end="193:29">MODE_MP4</name><operator pos:start="193:30" pos:end="193:30">|</operator><name pos:start="193:31" pos:end="193:38">MODE_MOV</name><operator pos:start="193:39" pos:end="193:39">|</operator><name pos:start="193:40" pos:end="193:48">MODE_IPOD</name><operator pos:start="193:49" pos:end="193:49">)</operator> <operator pos:start="193:51" pos:end="193:52">&amp;&amp;</operator> <name pos:start="193:54" pos:end="193:67"><name pos:start="193:54" pos:end="193:54">s</name><operator pos:start="193:55" pos:end="193:56">-&gt;</operator><name pos:start="193:57" pos:end="193:67">nb_chapters</name></name></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:47"><block_content pos:start="195:9" pos:end="195:47">

        <expr_stmt pos:start="195:9" pos:end="195:47"><expr pos:start="195:9" pos:end="195:46"><name pos:start="195:9" pos:end="195:26"><name pos:start="195:9" pos:end="195:11">mov</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:26">chapter_track</name></name> <operator pos:start="195:28" pos:end="195:28">=</operator> <name pos:start="195:30" pos:end="195:44"><name pos:start="195:30" pos:end="195:32">mov</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:44">nb_streams</name></name><operator pos:start="195:45" pos:end="195:46">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="199:5" pos:end="219:5"><if pos:start="199:5" pos:end="219:5">if <condition pos:start="199:8" pos:end="199:42">(<expr pos:start="199:9" pos:end="199:41"><name pos:start="199:9" pos:end="199:18"><name pos:start="199:9" pos:end="199:11">mov</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:18">flags</name></name> <operator pos:start="199:20" pos:end="199:20">&amp;</operator> <name pos:start="199:22" pos:end="199:41">FF_MOV_FLAG_RTP_HINT</name></expr>)</condition> <block pos:start="199:44" pos:end="219:5">{<block_content pos:start="203:9" pos:end="217:9">

        <comment type="block" pos:start="201:9" pos:end="201:61">/* Add hint tracks for each audio and video stream */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:37"><expr pos:start="203:9" pos:end="203:36"><name pos:start="203:9" pos:end="203:18">hint_track</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <name pos:start="203:22" pos:end="203:36"><name pos:start="203:22" pos:end="203:24">mov</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:36">nb_streams</name></name></expr>;</expr_stmt>

        <for pos:start="205:9" pos:end="217:9">for <control pos:start="205:13" pos:end="205:43">(<init pos:start="205:14" pos:end="205:19"><expr pos:start="205:14" pos:end="205:18"><name pos:start="205:14" pos:end="205:14">i</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <literal type="number" pos:start="205:18" pos:end="205:18">0</literal></expr>;</init> <condition pos:start="205:21" pos:end="205:38"><expr pos:start="205:21" pos:end="205:37"><name pos:start="205:21" pos:end="205:21">i</name> <operator pos:start="205:23" pos:end="205:23">&lt;</operator> <name pos:start="205:25" pos:end="205:37"><name pos:start="205:25" pos:end="205:25">s</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:37">nb_streams</name></name></expr>;</condition> <incr pos:start="205:40" pos:end="205:42"><expr pos:start="205:40" pos:end="205:42"><name pos:start="205:40" pos:end="205:40">i</name><operator pos:start="205:41" pos:end="205:42">++</operator></expr></incr>)</control> <block pos:start="205:45" pos:end="217:9">{<block_content pos:start="207:13" pos:end="215:13">

            <decl_stmt pos:start="207:13" pos:end="207:41"><decl pos:start="207:13" pos:end="207:40"><type pos:start="207:13" pos:end="207:22"><name pos:start="207:13" pos:end="207:20">AVStream</name> <modifier pos:start="207:22" pos:end="207:22">*</modifier></type><name pos:start="207:23" pos:end="207:24">st</name> <init pos:start="207:26" pos:end="207:40">= <expr pos:start="207:28" pos:end="207:40"><name pos:start="207:28" pos:end="207:40"><name pos:start="207:28" pos:end="207:28">s</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:37">streams</name><index pos:start="207:38" pos:end="207:40">[<expr pos:start="207:39" pos:end="207:39"><name pos:start="207:39" pos:end="207:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="209:13" pos:end="215:13"><if pos:start="209:13" pos:end="215:13">if <condition pos:start="209:16" pos:end="211:60">(<expr pos:start="209:17" pos:end="211:59"><name pos:start="209:17" pos:end="209:37"><name pos:start="209:17" pos:end="209:18">st</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:25">codec</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:37">codec_type</name></name> <operator pos:start="209:39" pos:end="209:40">==</operator> <name pos:start="209:42" pos:end="209:59">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="209:61" pos:end="209:62">||</operator>

                <name pos:start="211:17" pos:end="211:37"><name pos:start="211:17" pos:end="211:18">st</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:25">codec</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:37">codec_type</name></name> <operator pos:start="211:39" pos:end="211:40">==</operator> <name pos:start="211:42" pos:end="211:59">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="211:62" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:34">

                <expr_stmt pos:start="213:17" pos:end="213:34"><expr pos:start="213:17" pos:end="213:33"><name pos:start="213:17" pos:end="213:31"><name pos:start="213:17" pos:end="213:19">mov</name><operator pos:start="213:20" pos:end="213:21">-&gt;</operator><name pos:start="213:22" pos:end="213:31">nb_streams</name></name><operator pos:start="213:32" pos:end="213:33">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="271:5"><if pos:start="223:5" pos:end="271:5">if <condition pos:start="223:8" pos:end="223:30">(<expr pos:start="223:9" pos:end="223:29"><name pos:start="223:9" pos:end="223:17"><name pos:start="223:9" pos:end="223:11">mov</name><operator pos:start="223:12" pos:end="223:13">-&gt;</operator><name pos:start="223:14" pos:end="223:17">mode</name></name> <operator pos:start="223:19" pos:end="223:20">==</operator> <name pos:start="223:22" pos:end="223:29">MODE_MOV</name></expr>)</condition> <block pos:start="223:32" pos:end="271:5">{<block_content pos:start="225:9" pos:end="269:45">

        <expr_stmt pos:start="225:9" pos:end="225:37"><expr pos:start="225:9" pos:end="225:36"><name pos:start="225:9" pos:end="225:18">tmcd_track</name> <operator pos:start="225:20" pos:end="225:20">=</operator> <name pos:start="225:22" pos:end="225:36"><name pos:start="225:22" pos:end="225:24">mov</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:36">nb_streams</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="229:9" pos:end="229:65">/* +1 tmcd track for each video stream with a timecode */</comment>

        <for pos:start="231:9" pos:end="241:9">for <control pos:start="231:13" pos:end="231:43">(<init pos:start="231:14" pos:end="231:19"><expr pos:start="231:14" pos:end="231:18"><name pos:start="231:14" pos:end="231:14">i</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <literal type="number" pos:start="231:18" pos:end="231:18">0</literal></expr>;</init> <condition pos:start="231:21" pos:end="231:38"><expr pos:start="231:21" pos:end="231:37"><name pos:start="231:21" pos:end="231:21">i</name> <operator pos:start="231:23" pos:end="231:23">&lt;</operator> <name pos:start="231:25" pos:end="231:37"><name pos:start="231:25" pos:end="231:25">s</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:37">nb_streams</name></name></expr>;</condition> <incr pos:start="231:40" pos:end="231:42"><expr pos:start="231:40" pos:end="231:42"><name pos:start="231:40" pos:end="231:40">i</name><operator pos:start="231:41" pos:end="231:42">++</operator></expr></incr>)</control> <block pos:start="231:45" pos:end="241:9">{<block_content pos:start="233:13" pos:end="239:36">

            <decl_stmt pos:start="233:13" pos:end="233:41"><decl pos:start="233:13" pos:end="233:40"><type pos:start="233:13" pos:end="233:22"><name pos:start="233:13" pos:end="233:20">AVStream</name> <modifier pos:start="233:22" pos:end="233:22">*</modifier></type><name pos:start="233:23" pos:end="233:24">st</name> <init pos:start="233:26" pos:end="233:40">= <expr pos:start="233:28" pos:end="233:40"><name pos:start="233:28" pos:end="233:40"><name pos:start="233:28" pos:end="233:28">s</name><operator pos:start="233:29" pos:end="233:30">-&gt;</operator><name pos:start="233:31" pos:end="233:37">streams</name><index pos:start="233:38" pos:end="233:40">[<expr pos:start="233:39" pos:end="233:39"><name pos:start="233:39" pos:end="233:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="235:13" pos:end="239:36"><if pos:start="235:13" pos:end="239:36">if <condition pos:start="235:16" pos:end="237:79">(<expr pos:start="235:17" pos:end="237:78"><name pos:start="235:17" pos:end="235:37"><name pos:start="235:17" pos:end="235:18">st</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:25">codec</name><operator pos:start="235:26" pos:end="235:27">-&gt;</operator><name pos:start="235:28" pos:end="235:37">codec_type</name></name> <operator pos:start="235:39" pos:end="235:40">==</operator> <name pos:start="235:42" pos:end="235:59">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="235:61" pos:end="235:62">&amp;&amp;</operator>

                <operator pos:start="237:17" pos:end="237:17">(</operator><name pos:start="237:18" pos:end="237:27">global_tcr</name> <operator pos:start="237:29" pos:end="237:30">||</operator> <call pos:start="237:32" pos:end="237:77"><name pos:start="237:32" pos:end="237:42">av_dict_get</name><argument_list pos:start="237:43" pos:end="237:77">(<argument pos:start="237:44" pos:end="237:55"><expr pos:start="237:44" pos:end="237:55"><name pos:start="237:44" pos:end="237:55"><name pos:start="237:44" pos:end="237:45">st</name><operator pos:start="237:46" pos:end="237:47">-&gt;</operator><name pos:start="237:48" pos:end="237:55">metadata</name></name></expr></argument>, <argument pos:start="237:58" pos:end="237:67"><expr pos:start="237:58" pos:end="237:67"><literal type="string" pos:start="237:58" pos:end="237:67">"timecode"</literal></expr></argument>, <argument pos:start="237:70" pos:end="237:73"><expr pos:start="237:70" pos:end="237:73"><name pos:start="237:70" pos:end="237:73">NULL</name></expr></argument>, <argument pos:start="237:76" pos:end="237:76"><expr pos:start="237:76" pos:end="237:76"><literal type="number" pos:start="237:76" pos:end="237:76">0</literal></expr></argument>)</argument_list></call><operator pos:start="237:78" pos:end="237:78">)</operator></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:36"><block_content pos:start="239:17" pos:end="239:36">

                <expr_stmt pos:start="239:17" pos:end="239:36"><expr pos:start="239:17" pos:end="239:35"><name pos:start="239:17" pos:end="239:33"><name pos:start="239:17" pos:end="239:19">mov</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:33">nb_meta_tmcd</name></name><operator pos:start="239:34" pos:end="239:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="245:9" pos:end="245:61">/* check if there is already a tmcd track to remux */</comment>

        <if_stmt pos:start="247:9" pos:end="265:9"><if pos:start="247:9" pos:end="265:9">if <condition pos:start="247:12" pos:end="247:30">(<expr pos:start="247:13" pos:end="247:29"><name pos:start="247:13" pos:end="247:29"><name pos:start="247:13" pos:end="247:15">mov</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:29">nb_meta_tmcd</name></name></expr>)</condition> <block pos:start="247:32" pos:end="265:9">{<block_content pos:start="249:13" pos:end="263:13">

            <for pos:start="249:13" pos:end="263:13">for <control pos:start="249:17" pos:end="249:47">(<init pos:start="249:18" pos:end="249:23"><expr pos:start="249:18" pos:end="249:22"><name pos:start="249:18" pos:end="249:18">i</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <literal type="number" pos:start="249:22" pos:end="249:22">0</literal></expr>;</init> <condition pos:start="249:25" pos:end="249:42"><expr pos:start="249:25" pos:end="249:41"><name pos:start="249:25" pos:end="249:25">i</name> <operator pos:start="249:27" pos:end="249:27">&lt;</operator> <name pos:start="249:29" pos:end="249:41"><name pos:start="249:29" pos:end="249:29">s</name><operator pos:start="249:30" pos:end="249:31">-&gt;</operator><name pos:start="249:32" pos:end="249:41">nb_streams</name></name></expr>;</condition> <incr pos:start="249:44" pos:end="249:46"><expr pos:start="249:44" pos:end="249:46"><name pos:start="249:44" pos:end="249:44">i</name><operator pos:start="249:45" pos:end="249:46">++</operator></expr></incr>)</control> <block pos:start="249:49" pos:end="263:13">{<block_content pos:start="251:17" pos:end="261:17">

                <decl_stmt pos:start="251:17" pos:end="251:45"><decl pos:start="251:17" pos:end="251:44"><type pos:start="251:17" pos:end="251:26"><name pos:start="251:17" pos:end="251:24">AVStream</name> <modifier pos:start="251:26" pos:end="251:26">*</modifier></type><name pos:start="251:27" pos:end="251:28">st</name> <init pos:start="251:30" pos:end="251:44">= <expr pos:start="251:32" pos:end="251:44"><name pos:start="251:32" pos:end="251:44"><name pos:start="251:32" pos:end="251:32">s</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:41">streams</name><index pos:start="251:42" pos:end="251:44">[<expr pos:start="251:43" pos:end="251:43"><name pos:start="251:43" pos:end="251:43">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="253:17" pos:end="261:17"><if pos:start="253:17" pos:end="261:17">if <condition pos:start="253:20" pos:end="253:67">(<expr pos:start="253:21" pos:end="253:66"><name pos:start="253:21" pos:end="253:40"><name pos:start="253:21" pos:end="253:22">st</name><operator pos:start="253:23" pos:end="253:24">-&gt;</operator><name pos:start="253:25" pos:end="253:29">codec</name><operator pos:start="253:30" pos:end="253:31">-&gt;</operator><name pos:start="253:32" pos:end="253:40">codec_tag</name></name> <operator pos:start="253:42" pos:end="253:43">==</operator> <call pos:start="253:45" pos:end="253:66"><name pos:start="253:45" pos:end="253:49">MKTAG</name><argument_list pos:start="253:50" pos:end="253:66">(<argument pos:start="253:51" pos:end="253:53"><expr pos:start="253:51" pos:end="253:53"><literal type="char" pos:start="253:51" pos:end="253:53">'t'</literal></expr></argument>,<argument pos:start="253:55" pos:end="253:57"><expr pos:start="253:55" pos:end="253:57"><literal type="char" pos:start="253:55" pos:end="253:57">'m'</literal></expr></argument>,<argument pos:start="253:59" pos:end="253:61"><expr pos:start="253:59" pos:end="253:61"><literal type="char" pos:start="253:59" pos:end="253:61">'c'</literal></expr></argument>,<argument pos:start="253:63" pos:end="253:65"><expr pos:start="253:63" pos:end="253:65"><literal type="char" pos:start="253:63" pos:end="253:65">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="253:69" pos:end="261:17">{<block_content pos:start="255:21" pos:end="259:42">

                    <expr_stmt pos:start="255:21" pos:end="257:69"><expr pos:start="255:21" pos:end="257:68"><call pos:start="255:21" pos:end="257:68"><name pos:start="255:21" pos:end="255:26">av_log</name><argument_list pos:start="255:27" pos:end="257:68">(<argument pos:start="255:28" pos:end="255:28"><expr pos:start="255:28" pos:end="255:28"><name pos:start="255:28" pos:end="255:28">s</name></expr></argument>, <argument pos:start="255:31" pos:end="255:44"><expr pos:start="255:31" pos:end="255:44"><name pos:start="255:31" pos:end="255:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="255:47" pos:end="257:67"><expr pos:start="255:47" pos:end="257:67"><literal type="string" pos:start="255:47" pos:end="255:100">"You requested a copy of the original timecode track "</literal>

                           <literal type="string" pos:start="257:28" pos:end="257:67">"so timecode metadata are now ignored\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:42"><expr pos:start="259:21" pos:end="259:41"><name pos:start="259:21" pos:end="259:37"><name pos:start="259:21" pos:end="259:23">mov</name><operator pos:start="259:24" pos:end="259:25">-&gt;</operator><name pos:start="259:26" pos:end="259:37">nb_meta_tmcd</name></name> <operator pos:start="259:39" pos:end="259:39">=</operator> <literal type="number" pos:start="259:41" pos:end="259:41">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:45"><expr pos:start="269:9" pos:end="269:44"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:11">mov</name><operator pos:start="269:12" pos:end="269:13">-&gt;</operator><name pos:start="269:14" pos:end="269:23">nb_streams</name></name> <operator pos:start="269:25" pos:end="269:26">+=</operator> <name pos:start="269:28" pos:end="269:44"><name pos:start="269:28" pos:end="269:30">mov</name><operator pos:start="269:31" pos:end="269:32">-&gt;</operator><name pos:start="269:33" pos:end="269:44">nb_meta_tmcd</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="275:5" pos:end="275:71">// Reserve an extra stream for chapters for the case where chapters</comment>

    <comment type="line" pos:start="277:5" pos:end="277:33">// are written in the trailer</comment>

    <expr_stmt pos:start="279:5" pos:end="279:80"><expr pos:start="279:5" pos:end="279:79"><name pos:start="279:5" pos:end="279:15"><name pos:start="279:5" pos:end="279:7">mov</name><operator pos:start="279:8" pos:end="279:9">-&gt;</operator><name pos:start="279:10" pos:end="279:15">tracks</name></name> <operator pos:start="279:17" pos:end="279:17">=</operator> <call pos:start="279:19" pos:end="279:79"><name pos:start="279:19" pos:end="279:34">av_mallocz_array</name><argument_list pos:start="279:35" pos:end="279:79">(<argument pos:start="279:36" pos:end="279:56"><expr pos:start="279:36" pos:end="279:56"><operator pos:start="279:36" pos:end="279:36">(</operator><name pos:start="279:37" pos:end="279:51"><name pos:start="279:37" pos:end="279:39">mov</name><operator pos:start="279:40" pos:end="279:41">-&gt;</operator><name pos:start="279:42" pos:end="279:51">nb_streams</name></name> <operator pos:start="279:53" pos:end="279:53">+</operator> <literal type="number" pos:start="279:55" pos:end="279:55">1</literal><operator pos:start="279:56" pos:end="279:56">)</operator></expr></argument>, <argument pos:start="279:59" pos:end="279:78"><expr pos:start="279:59" pos:end="279:78"><sizeof pos:start="279:59" pos:end="279:78">sizeof<argument_list pos:start="279:65" pos:end="279:78">(<argument pos:start="279:66" pos:end="279:77"><expr pos:start="279:66" pos:end="279:77"><operator pos:start="279:66" pos:end="279:66">*</operator><name pos:start="279:67" pos:end="279:77"><name pos:start="279:67" pos:end="279:69">mov</name><operator pos:start="279:70" pos:end="279:71">-&gt;</operator><name pos:start="279:72" pos:end="279:77">tracks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="281:5" pos:end="283:31"><if pos:start="281:5" pos:end="283:31">if <condition pos:start="281:8" pos:end="281:21">(<expr pos:start="281:9" pos:end="281:20"><operator pos:start="281:9" pos:end="281:9">!</operator><name pos:start="281:10" pos:end="281:20"><name pos:start="281:10" pos:end="281:12">mov</name><operator pos:start="281:13" pos:end="281:14">-&gt;</operator><name pos:start="281:15" pos:end="281:20">tracks</name></name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:31"><block_content pos:start="283:9" pos:end="283:31">

        <return pos:start="283:9" pos:end="283:31">return <expr pos:start="283:16" pos:end="283:30"><call pos:start="283:16" pos:end="283:30"><name pos:start="283:16" pos:end="283:22">AVERROR</name><argument_list pos:start="283:23" pos:end="283:30">(<argument pos:start="283:24" pos:end="283:29"><expr pos:start="283:24" pos:end="283:29"><name pos:start="283:24" pos:end="283:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="287:5" pos:end="523:5">for <control pos:start="287:9" pos:end="287:39">(<init pos:start="287:10" pos:end="287:15"><expr pos:start="287:10" pos:end="287:14"><name pos:start="287:10" pos:end="287:10">i</name> <operator pos:start="287:12" pos:end="287:12">=</operator> <literal type="number" pos:start="287:14" pos:end="287:14">0</literal></expr>;</init> <condition pos:start="287:17" pos:end="287:34"><expr pos:start="287:17" pos:end="287:33"><name pos:start="287:17" pos:end="287:17">i</name> <operator pos:start="287:19" pos:end="287:19">&lt;</operator> <name pos:start="287:21" pos:end="287:33"><name pos:start="287:21" pos:end="287:21">s</name><operator pos:start="287:22" pos:end="287:23">-&gt;</operator><name pos:start="287:24" pos:end="287:33">nb_streams</name></name></expr>;</condition> <incr pos:start="287:36" pos:end="287:38"><expr pos:start="287:36" pos:end="287:38"><name pos:start="287:36" pos:end="287:36">i</name><operator pos:start="287:37" pos:end="287:38">++</operator></expr></incr>)</control> <block pos:start="287:41" pos:end="523:5">{<block_content pos:start="289:9" pos:end="521:9">

        <decl_stmt pos:start="289:9" pos:end="289:36"><decl pos:start="289:9" pos:end="289:35"><type pos:start="289:9" pos:end="289:18"><name pos:start="289:9" pos:end="289:16">AVStream</name> <modifier pos:start="289:18" pos:end="289:18">*</modifier></type><name pos:start="289:19" pos:end="289:20">st</name><init pos:start="289:21" pos:end="289:35">= <expr pos:start="289:23" pos:end="289:35"><name pos:start="289:23" pos:end="289:35"><name pos:start="289:23" pos:end="289:23">s</name><operator pos:start="289:24" pos:end="289:25">-&gt;</operator><name pos:start="289:26" pos:end="289:32">streams</name><index pos:start="289:33" pos:end="289:35">[<expr pos:start="289:34" pos:end="289:34"><name pos:start="289:34" pos:end="289:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="291:9" pos:end="291:41"><decl pos:start="291:9" pos:end="291:40"><type pos:start="291:9" pos:end="291:18"><name pos:start="291:9" pos:end="291:16">MOVTrack</name> <modifier pos:start="291:18" pos:end="291:18">*</modifier></type><name pos:start="291:19" pos:end="291:23">track</name><init pos:start="291:24" pos:end="291:40">= <expr pos:start="291:26" pos:end="291:40"><operator pos:start="291:26" pos:end="291:26">&amp;</operator><name pos:start="291:27" pos:end="291:40"><name pos:start="291:27" pos:end="291:29">mov</name><operator pos:start="291:30" pos:end="291:31">-&gt;</operator><name pos:start="291:32" pos:end="291:37">tracks</name><index pos:start="291:38" pos:end="291:40">[<expr pos:start="291:39" pos:end="291:39"><name pos:start="291:39" pos:end="291:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="293:9" pos:end="293:80"><decl pos:start="293:9" pos:end="293:79"><type pos:start="293:9" pos:end="293:27"><name pos:start="293:9" pos:end="293:25">AVDictionaryEntry</name> <modifier pos:start="293:27" pos:end="293:27">*</modifier></type><name pos:start="293:28" pos:end="293:31">lang</name> <init pos:start="293:33" pos:end="293:79">= <expr pos:start="293:35" pos:end="293:79"><call pos:start="293:35" pos:end="293:79"><name pos:start="293:35" pos:end="293:45">av_dict_get</name><argument_list pos:start="293:46" pos:end="293:79">(<argument pos:start="293:47" pos:end="293:58"><expr pos:start="293:47" pos:end="293:58"><name pos:start="293:47" pos:end="293:58"><name pos:start="293:47" pos:end="293:48">st</name><operator pos:start="293:49" pos:end="293:50">-&gt;</operator><name pos:start="293:51" pos:end="293:58">metadata</name></name></expr></argument>, <argument pos:start="293:61" pos:end="293:70"><expr pos:start="293:61" pos:end="293:70"><literal type="string" pos:start="293:61" pos:end="293:70">"language"</literal></expr></argument>, <argument pos:start="293:73" pos:end="293:76"><expr pos:start="293:73" pos:end="293:76"><name pos:start="293:73" pos:end="293:76">NULL</name></expr></argument>,<argument pos:start="293:78" pos:end="293:78"><expr pos:start="293:78" pos:end="293:78"><literal type="number" pos:start="293:78" pos:end="293:78">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="297:9" pos:end="297:24"><expr pos:start="297:9" pos:end="297:23"><name pos:start="297:9" pos:end="297:17"><name pos:start="297:9" pos:end="297:13">track</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:17">st</name></name>  <operator pos:start="297:20" pos:end="297:20">=</operator> <name pos:start="297:22" pos:end="297:23">st</name></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:31"><expr pos:start="299:9" pos:end="299:30"><name pos:start="299:9" pos:end="299:18"><name pos:start="299:9" pos:end="299:13">track</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:18">enc</name></name> <operator pos:start="299:20" pos:end="299:20">=</operator> <name pos:start="299:22" pos:end="299:30"><name pos:start="299:22" pos:end="299:23">st</name><operator pos:start="299:24" pos:end="299:25">-&gt;</operator><name pos:start="299:26" pos:end="299:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:93"><expr pos:start="301:9" pos:end="301:92"><name pos:start="301:9" pos:end="301:23"><name pos:start="301:9" pos:end="301:13">track</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:23">language</name></name> <operator pos:start="301:25" pos:end="301:25">=</operator> <call pos:start="301:27" pos:end="301:92"><name pos:start="301:27" pos:end="301:47">ff_mov_iso639_to_lang</name><argument_list pos:start="301:48" pos:end="301:92">(<argument pos:start="301:49" pos:end="301:70"><expr pos:start="301:49" pos:end="301:70"><ternary pos:start="301:49" pos:end="301:70"><condition pos:start="301:49" pos:end="301:53"><expr pos:start="301:49" pos:end="301:52"><name pos:start="301:49" pos:end="301:52">lang</name></expr>?</condition><then pos:start="301:54" pos:end="301:64"><expr pos:start="301:54" pos:end="301:64"><name pos:start="301:54" pos:end="301:64"><name pos:start="301:54" pos:end="301:57">lang</name><operator pos:start="301:58" pos:end="301:59">-&gt;</operator><name pos:start="301:60" pos:end="301:64">value</name></name></expr></then><else pos:start="301:65" pos:end="301:70">:<expr pos:start="301:66" pos:end="301:70"><literal type="string" pos:start="301:66" pos:end="301:70">"und"</literal></expr></else></ternary></expr></argument>, <argument pos:start="301:73" pos:end="301:91"><expr pos:start="301:73" pos:end="301:91"><name pos:start="301:73" pos:end="301:81"><name pos:start="301:73" pos:end="301:75">mov</name><operator pos:start="301:76" pos:end="301:77">-&gt;</operator><name pos:start="301:78" pos:end="301:81">mode</name></name><operator pos:start="301:82" pos:end="301:83">!=</operator><name pos:start="301:84" pos:end="301:91">MODE_MOV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="303:9" pos:end="305:32"><if pos:start="303:9" pos:end="305:32">if <condition pos:start="303:12" pos:end="303:32">(<expr pos:start="303:13" pos:end="303:31"><name pos:start="303:13" pos:end="303:27"><name pos:start="303:13" pos:end="303:17">track</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:27">language</name></name> <operator pos:start="303:29" pos:end="303:29">&lt;</operator> <literal type="number" pos:start="303:31" pos:end="303:31">0</literal></expr>)</condition><block type="pseudo" pos:start="305:13" pos:end="305:32"><block_content pos:start="305:13" pos:end="305:32">

            <expr_stmt pos:start="305:13" pos:end="305:32"><expr pos:start="305:13" pos:end="305:31"><name pos:start="305:13" pos:end="305:27"><name pos:start="305:13" pos:end="305:17">track</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:27">language</name></name> <operator pos:start="305:29" pos:end="305:29">=</operator> <literal type="number" pos:start="305:31" pos:end="305:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:32"><expr pos:start="307:9" pos:end="307:31"><name pos:start="307:9" pos:end="307:19"><name pos:start="307:9" pos:end="307:13">track</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:19">mode</name></name> <operator pos:start="307:21" pos:end="307:21">=</operator> <name pos:start="307:23" pos:end="307:31"><name pos:start="307:23" pos:end="307:25">mov</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:31">mode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:51"><expr pos:start="309:9" pos:end="309:50"><name pos:start="309:9" pos:end="309:18"><name pos:start="309:9" pos:end="309:13">track</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:18">tag</name></name>  <operator pos:start="309:21" pos:end="309:21">=</operator> <call pos:start="309:23" pos:end="309:50"><name pos:start="309:23" pos:end="309:40">mov_find_codec_tag</name><argument_list pos:start="309:41" pos:end="309:50">(<argument pos:start="309:42" pos:end="309:42"><expr pos:start="309:42" pos:end="309:42"><name pos:start="309:42" pos:end="309:42">s</name></expr></argument>, <argument pos:start="309:45" pos:end="309:49"><expr pos:start="309:45" pos:end="309:49"><name pos:start="309:45" pos:end="309:49">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="311:9" pos:end="323:9"><if pos:start="311:9" pos:end="323:9">if <condition pos:start="311:12" pos:end="311:24">(<expr pos:start="311:13" pos:end="311:23"><operator pos:start="311:13" pos:end="311:13">!</operator><name pos:start="311:14" pos:end="311:23"><name pos:start="311:14" pos:end="311:18">track</name><operator pos:start="311:19" pos:end="311:20">-&gt;</operator><name pos:start="311:21" pos:end="311:23">tag</name></name></expr>)</condition> <block pos:start="311:26" pos:end="323:9">{<block_content pos:start="313:13" pos:end="321:23">

            <expr_stmt pos:start="313:13" pos:end="317:61"><expr pos:start="313:13" pos:end="317:60"><call pos:start="313:13" pos:end="317:60"><name pos:start="313:13" pos:end="313:18">av_log</name><argument_list pos:start="313:19" pos:end="317:60">(<argument pos:start="313:20" pos:end="313:20"><expr pos:start="313:20" pos:end="313:20"><name pos:start="313:20" pos:end="313:20">s</name></expr></argument>, <argument pos:start="313:23" pos:end="313:34"><expr pos:start="313:23" pos:end="313:34"><name pos:start="313:23" pos:end="313:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:37" pos:end="315:65"><expr pos:start="313:37" pos:end="315:65"><literal type="string" pos:start="313:37" pos:end="313:85">"Could not find tag for codec %s in stream #%d, "</literal>

                   <literal type="string" pos:start="315:20" pos:end="315:65">"codec not currently supported in container\n"</literal></expr></argument>,

                   <argument pos:start="317:20" pos:end="317:56"><expr pos:start="317:20" pos:end="317:56"><call pos:start="317:20" pos:end="317:56"><name pos:start="317:20" pos:end="317:35">avcodec_get_name</name><argument_list pos:start="317:36" pos:end="317:56">(<argument pos:start="317:37" pos:end="317:55"><expr pos:start="317:37" pos:end="317:55"><name pos:start="317:37" pos:end="317:55"><name pos:start="317:37" pos:end="317:38">st</name><operator pos:start="317:39" pos:end="317:40">-&gt;</operator><name pos:start="317:41" pos:end="317:45">codec</name><operator pos:start="317:46" pos:end="317:47">-&gt;</operator><name pos:start="317:48" pos:end="317:55">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="317:59" pos:end="317:59"><expr pos:start="317:59" pos:end="317:59"><name pos:start="317:59" pos:end="317:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:34"><expr pos:start="319:13" pos:end="319:33"><name pos:start="319:13" pos:end="319:15">ret</name> <operator pos:start="319:17" pos:end="319:17">=</operator> <call pos:start="319:19" pos:end="319:33"><name pos:start="319:19" pos:end="319:25">AVERROR</name><argument_list pos:start="319:26" pos:end="319:33">(<argument pos:start="319:27" pos:end="319:32"><expr pos:start="319:27" pos:end="319:32"><name pos:start="319:27" pos:end="319:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="321:13" pos:end="321:23">goto <name pos:start="321:18" pos:end="321:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="325:9" pos:end="327:30">/* If hinting of this track is enabled by a later hint track,

         * this is updated. */</comment>

        <expr_stmt pos:start="329:9" pos:end="329:31"><expr pos:start="329:9" pos:end="329:30"><name pos:start="329:9" pos:end="329:25"><name pos:start="329:9" pos:end="329:13">track</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:25">hint_track</name></name> <operator pos:start="329:27" pos:end="329:27">=</operator> <operator pos:start="329:29" pos:end="329:29">-</operator><literal type="number" pos:start="329:30" pos:end="329:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:43"><expr pos:start="331:9" pos:end="331:42"><name pos:start="331:9" pos:end="331:24"><name pos:start="331:9" pos:end="331:13">track</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:24">start_dts</name></name>  <operator pos:start="331:27" pos:end="331:27">=</operator> <name pos:start="331:29" pos:end="331:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:43"><expr pos:start="333:9" pos:end="333:42"><name pos:start="333:9" pos:end="333:24"><name pos:start="333:9" pos:end="333:13">track</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:24">start_cts</name></name>  <operator pos:start="333:27" pos:end="333:27">=</operator> <name pos:start="333:29" pos:end="333:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:43"><expr pos:start="335:9" pos:end="335:42"><name pos:start="335:9" pos:end="335:22"><name pos:start="335:9" pos:end="335:13">track</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:22">end_pts</name></name>    <operator pos:start="335:27" pos:end="335:27">=</operator> <name pos:start="335:29" pos:end="335:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <if_stmt pos:start="337:9" pos:end="475:9"><if pos:start="337:9" pos:end="393:9">if <condition pos:start="337:12" pos:end="337:56">(<expr pos:start="337:13" pos:end="337:55"><name pos:start="337:13" pos:end="337:33"><name pos:start="337:13" pos:end="337:14">st</name><operator pos:start="337:15" pos:end="337:16">-&gt;</operator><name pos:start="337:17" pos:end="337:21">codec</name><operator pos:start="337:22" pos:end="337:23">-&gt;</operator><name pos:start="337:24" pos:end="337:33">codec_type</name></name> <operator pos:start="337:35" pos:end="337:36">==</operator> <name pos:start="337:38" pos:end="337:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="337:58" pos:end="393:9">{<block_content pos:start="339:13" pos:end="391:59">

            <if_stmt pos:start="339:13" pos:end="357:13"><if pos:start="339:13" pos:end="357:13">if <condition pos:start="339:16" pos:end="343:93">(<expr pos:start="339:17" pos:end="343:92"><name pos:start="339:17" pos:end="339:26"><name pos:start="339:17" pos:end="339:21">track</name><operator pos:start="339:22" pos:end="339:23">-&gt;</operator><name pos:start="339:24" pos:end="339:26">tag</name></name> <operator pos:start="339:28" pos:end="339:29">==</operator> <call pos:start="339:31" pos:end="339:52"><name pos:start="339:31" pos:end="339:35">MKTAG</name><argument_list pos:start="339:36" pos:end="339:52">(<argument pos:start="339:37" pos:end="339:39"><expr pos:start="339:37" pos:end="339:39"><literal type="char" pos:start="339:37" pos:end="339:39">'m'</literal></expr></argument>,<argument pos:start="339:41" pos:end="339:43"><expr pos:start="339:41" pos:end="339:43"><literal type="char" pos:start="339:41" pos:end="339:43">'x'</literal></expr></argument>,<argument pos:start="339:45" pos:end="339:47"><expr pos:start="339:45" pos:end="339:47"><literal type="char" pos:start="339:45" pos:end="339:47">'3'</literal></expr></argument>,<argument pos:start="339:49" pos:end="339:51"><expr pos:start="339:49" pos:end="339:51"><literal type="char" pos:start="339:49" pos:end="339:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="339:54" pos:end="339:55">||</operator> <name pos:start="339:57" pos:end="339:66"><name pos:start="339:57" pos:end="339:61">track</name><operator pos:start="339:62" pos:end="339:63">-&gt;</operator><name pos:start="339:64" pos:end="339:66">tag</name></name> <operator pos:start="339:68" pos:end="339:69">==</operator> <call pos:start="339:71" pos:end="339:92"><name pos:start="339:71" pos:end="339:75">MKTAG</name><argument_list pos:start="339:76" pos:end="339:92">(<argument pos:start="339:77" pos:end="339:79"><expr pos:start="339:77" pos:end="339:79"><literal type="char" pos:start="339:77" pos:end="339:79">'m'</literal></expr></argument>,<argument pos:start="339:81" pos:end="339:83"><expr pos:start="339:81" pos:end="339:83"><literal type="char" pos:start="339:81" pos:end="339:83">'x'</literal></expr></argument>,<argument pos:start="339:85" pos:end="339:87"><expr pos:start="339:85" pos:end="339:87"><literal type="char" pos:start="339:85" pos:end="339:87">'3'</literal></expr></argument>,<argument pos:start="339:89" pos:end="339:91"><expr pos:start="339:89" pos:end="339:91"><literal type="char" pos:start="339:89" pos:end="339:91">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="339:94" pos:end="339:95">||</operator>

                <name pos:start="341:17" pos:end="341:26"><name pos:start="341:17" pos:end="341:21">track</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:26">tag</name></name> <operator pos:start="341:28" pos:end="341:29">==</operator> <call pos:start="341:31" pos:end="341:52"><name pos:start="341:31" pos:end="341:35">MKTAG</name><argument_list pos:start="341:36" pos:end="341:52">(<argument pos:start="341:37" pos:end="341:39"><expr pos:start="341:37" pos:end="341:39"><literal type="char" pos:start="341:37" pos:end="341:39">'m'</literal></expr></argument>,<argument pos:start="341:41" pos:end="341:43"><expr pos:start="341:41" pos:end="341:43"><literal type="char" pos:start="341:41" pos:end="341:43">'x'</literal></expr></argument>,<argument pos:start="341:45" pos:end="341:47"><expr pos:start="341:45" pos:end="341:47"><literal type="char" pos:start="341:45" pos:end="341:47">'4'</literal></expr></argument>,<argument pos:start="341:49" pos:end="341:51"><expr pos:start="341:49" pos:end="341:51"><literal type="char" pos:start="341:49" pos:end="341:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="341:54" pos:end="341:55">||</operator> <name pos:start="341:57" pos:end="341:66"><name pos:start="341:57" pos:end="341:61">track</name><operator pos:start="341:62" pos:end="341:63">-&gt;</operator><name pos:start="341:64" pos:end="341:66">tag</name></name> <operator pos:start="341:68" pos:end="341:69">==</operator> <call pos:start="341:71" pos:end="341:92"><name pos:start="341:71" pos:end="341:75">MKTAG</name><argument_list pos:start="341:76" pos:end="341:92">(<argument pos:start="341:77" pos:end="341:79"><expr pos:start="341:77" pos:end="341:79"><literal type="char" pos:start="341:77" pos:end="341:79">'m'</literal></expr></argument>,<argument pos:start="341:81" pos:end="341:83"><expr pos:start="341:81" pos:end="341:83"><literal type="char" pos:start="341:81" pos:end="341:83">'x'</literal></expr></argument>,<argument pos:start="341:85" pos:end="341:87"><expr pos:start="341:85" pos:end="341:87"><literal type="char" pos:start="341:85" pos:end="341:87">'4'</literal></expr></argument>,<argument pos:start="341:89" pos:end="341:91"><expr pos:start="341:89" pos:end="341:91"><literal type="char" pos:start="341:89" pos:end="341:91">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="341:94" pos:end="341:95">||</operator>

                <name pos:start="343:17" pos:end="343:26"><name pos:start="343:17" pos:end="343:21">track</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:26">tag</name></name> <operator pos:start="343:28" pos:end="343:29">==</operator> <call pos:start="343:31" pos:end="343:52"><name pos:start="343:31" pos:end="343:35">MKTAG</name><argument_list pos:start="343:36" pos:end="343:52">(<argument pos:start="343:37" pos:end="343:39"><expr pos:start="343:37" pos:end="343:39"><literal type="char" pos:start="343:37" pos:end="343:39">'m'</literal></expr></argument>,<argument pos:start="343:41" pos:end="343:43"><expr pos:start="343:41" pos:end="343:43"><literal type="char" pos:start="343:41" pos:end="343:43">'x'</literal></expr></argument>,<argument pos:start="343:45" pos:end="343:47"><expr pos:start="343:45" pos:end="343:47"><literal type="char" pos:start="343:45" pos:end="343:47">'5'</literal></expr></argument>,<argument pos:start="343:49" pos:end="343:51"><expr pos:start="343:49" pos:end="343:51"><literal type="char" pos:start="343:49" pos:end="343:51">'p'</literal></expr></argument>)</argument_list></call> <operator pos:start="343:54" pos:end="343:55">||</operator> <name pos:start="343:57" pos:end="343:66"><name pos:start="343:57" pos:end="343:61">track</name><operator pos:start="343:62" pos:end="343:63">-&gt;</operator><name pos:start="343:64" pos:end="343:66">tag</name></name> <operator pos:start="343:68" pos:end="343:69">==</operator> <call pos:start="343:71" pos:end="343:92"><name pos:start="343:71" pos:end="343:75">MKTAG</name><argument_list pos:start="343:76" pos:end="343:92">(<argument pos:start="343:77" pos:end="343:79"><expr pos:start="343:77" pos:end="343:79"><literal type="char" pos:start="343:77" pos:end="343:79">'m'</literal></expr></argument>,<argument pos:start="343:81" pos:end="343:83"><expr pos:start="343:81" pos:end="343:83"><literal type="char" pos:start="343:81" pos:end="343:83">'x'</literal></expr></argument>,<argument pos:start="343:85" pos:end="343:87"><expr pos:start="343:85" pos:end="343:87"><literal type="char" pos:start="343:85" pos:end="343:87">'5'</literal></expr></argument>,<argument pos:start="343:89" pos:end="343:91"><expr pos:start="343:89" pos:end="343:91"><literal type="char" pos:start="343:89" pos:end="343:91">'n'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="343:95" pos:end="357:13">{<block_content pos:start="345:17" pos:end="355:68">

                <if_stmt pos:start="345:17" pos:end="353:17"><if pos:start="345:17" pos:end="353:17">if <condition pos:start="345:20" pos:end="345:102">(<expr pos:start="345:21" pos:end="345:101"><name pos:start="345:21" pos:end="345:36"><name pos:start="345:21" pos:end="345:22">st</name><operator pos:start="345:23" pos:end="345:24">-&gt;</operator><name pos:start="345:25" pos:end="345:29">codec</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:36">width</name></name> <operator pos:start="345:38" pos:end="345:39">!=</operator> <literal type="number" pos:start="345:41" pos:end="345:43">720</literal> <operator pos:start="345:45" pos:end="345:46">||</operator> <operator pos:start="345:48" pos:end="345:48">(</operator><name pos:start="345:49" pos:end="345:65"><name pos:start="345:49" pos:end="345:50">st</name><operator pos:start="345:51" pos:end="345:52">-&gt;</operator><name pos:start="345:53" pos:end="345:57">codec</name><operator pos:start="345:58" pos:end="345:59">-&gt;</operator><name pos:start="345:60" pos:end="345:65">height</name></name> <operator pos:start="345:67" pos:end="345:68">!=</operator> <literal type="number" pos:start="345:70" pos:end="345:72">608</literal> <operator pos:start="345:74" pos:end="345:75">&amp;&amp;</operator> <name pos:start="345:77" pos:end="345:93"><name pos:start="345:77" pos:end="345:78">st</name><operator pos:start="345:79" pos:end="345:80">-&gt;</operator><name pos:start="345:81" pos:end="345:85">codec</name><operator pos:start="345:86" pos:end="345:87">-&gt;</operator><name pos:start="345:88" pos:end="345:93">height</name></name> <operator pos:start="345:95" pos:end="345:96">!=</operator> <literal type="number" pos:start="345:98" pos:end="345:100">512</literal><operator pos:start="345:101" pos:end="345:101">)</operator></expr>)</condition> <block pos:start="345:104" pos:end="353:17">{<block_content pos:start="347:21" pos:end="351:31">

                    <expr_stmt pos:start="347:21" pos:end="347:103"><expr pos:start="347:21" pos:end="347:102"><call pos:start="347:21" pos:end="347:102"><name pos:start="347:21" pos:end="347:26">av_log</name><argument_list pos:start="347:27" pos:end="347:102">(<argument pos:start="347:28" pos:end="347:28"><expr pos:start="347:28" pos:end="347:28"><name pos:start="347:28" pos:end="347:28">s</name></expr></argument>, <argument pos:start="347:31" pos:end="347:42"><expr pos:start="347:31" pos:end="347:42"><name pos:start="347:31" pos:end="347:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="347:45" pos:end="347:101"><expr pos:start="347:45" pos:end="347:101"><literal type="string" pos:start="347:45" pos:end="347:101">"D-10/IMX must use 720x608 or 720x512 video resolution\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="349:21" pos:end="349:42"><expr pos:start="349:21" pos:end="349:41"><name pos:start="349:21" pos:end="349:23">ret</name> <operator pos:start="349:25" pos:end="349:25">=</operator> <call pos:start="349:27" pos:end="349:41"><name pos:start="349:27" pos:end="349:33">AVERROR</name><argument_list pos:start="349:34" pos:end="349:41">(<argument pos:start="349:35" pos:end="349:40"><expr pos:start="349:35" pos:end="349:40"><name pos:start="349:35" pos:end="349:40">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="351:21" pos:end="351:31">goto <name pos:start="351:26" pos:end="351:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:68"><expr pos:start="355:17" pos:end="355:67"><name pos:start="355:17" pos:end="355:29"><name pos:start="355:17" pos:end="355:21">track</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:29">height</name></name> <operator pos:start="355:31" pos:end="355:31">=</operator> <ternary pos:start="355:33" pos:end="355:67"><condition pos:start="355:33" pos:end="355:57"><expr pos:start="355:33" pos:end="355:55"><name pos:start="355:33" pos:end="355:42"><name pos:start="355:33" pos:end="355:37">track</name><operator pos:start="355:38" pos:end="355:39">-&gt;</operator><name pos:start="355:40" pos:end="355:42">tag</name></name> <operator pos:start="355:44" pos:end="355:45">&gt;&gt;</operator> <literal type="number" pos:start="355:47" pos:end="355:48">24</literal> <operator pos:start="355:50" pos:end="355:51">==</operator> <literal type="char" pos:start="355:53" pos:end="355:55">'n'</literal></expr> ?</condition><then pos:start="355:59" pos:end="355:61"> <expr pos:start="355:59" pos:end="355:61"><literal type="number" pos:start="355:59" pos:end="355:61">486</literal></expr> </then><else pos:start="355:63" pos:end="355:67">: <expr pos:start="355:65" pos:end="355:67"><literal type="number" pos:start="355:65" pos:end="355:67">576</literal></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="359:13" pos:end="371:13"><if pos:start="359:13" pos:end="363:13">if <condition pos:start="359:16" pos:end="359:43">(<expr pos:start="359:17" pos:end="359:42"><name pos:start="359:17" pos:end="359:42"><name pos:start="359:17" pos:end="359:19">mov</name><operator pos:start="359:20" pos:end="359:21">-&gt;</operator><name pos:start="359:22" pos:end="359:42">video_track_timescale</name></name></expr>)</condition> <block pos:start="359:45" pos:end="363:13">{<block_content pos:start="361:17" pos:end="361:62">

                <expr_stmt pos:start="361:17" pos:end="361:62"><expr pos:start="361:17" pos:end="361:61"><name pos:start="361:17" pos:end="361:32"><name pos:start="361:17" pos:end="361:21">track</name><operator pos:start="361:22" pos:end="361:23">-&gt;</operator><name pos:start="361:24" pos:end="361:32">timescale</name></name> <operator pos:start="361:34" pos:end="361:34">=</operator> <name pos:start="361:36" pos:end="361:61"><name pos:start="361:36" pos:end="361:38">mov</name><operator pos:start="361:39" pos:end="361:40">-&gt;</operator><name pos:start="361:41" pos:end="361:61">video_track_timescale</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="363:15" pos:end="371:13">else <block pos:start="363:20" pos:end="371:13">{<block_content pos:start="365:17" pos:end="369:42">

                <expr_stmt pos:start="365:17" pos:end="365:53"><expr pos:start="365:17" pos:end="365:52"><name pos:start="365:17" pos:end="365:32"><name pos:start="365:17" pos:end="365:21">track</name><operator pos:start="365:22" pos:end="365:23">-&gt;</operator><name pos:start="365:24" pos:end="365:32">timescale</name></name> <operator pos:start="365:34" pos:end="365:34">=</operator> <name pos:start="365:36" pos:end="365:52"><name pos:start="365:36" pos:end="365:37">st</name><operator pos:start="365:38" pos:end="365:39">-&gt;</operator><name pos:start="365:40" pos:end="365:48">time_base</name><operator pos:start="365:49" pos:end="365:49">.</operator><name pos:start="365:50" pos:end="365:52">den</name></name></expr>;</expr_stmt>

                <while pos:start="367:17" pos:end="369:42">while<condition pos:start="367:22" pos:end="367:47">(<expr pos:start="367:23" pos:end="367:46"><name pos:start="367:23" pos:end="367:38"><name pos:start="367:23" pos:end="367:27">track</name><operator pos:start="367:28" pos:end="367:29">-&gt;</operator><name pos:start="367:30" pos:end="367:38">timescale</name></name> <operator pos:start="367:40" pos:end="367:40">&lt;</operator> <literal type="number" pos:start="367:42" pos:end="367:46">10000</literal></expr>)</condition><block type="pseudo" pos:start="369:21" pos:end="369:42"><block_content pos:start="369:21" pos:end="369:42">

                    <expr_stmt pos:start="369:21" pos:end="369:42"><expr pos:start="369:21" pos:end="369:41"><name pos:start="369:21" pos:end="369:36"><name pos:start="369:21" pos:end="369:25">track</name><operator pos:start="369:26" pos:end="369:27">-&gt;</operator><name pos:start="369:28" pos:end="369:36">timescale</name></name> <operator pos:start="369:38" pos:end="369:39">*=</operator> <literal type="number" pos:start="369:41" pos:end="369:41">2</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="373:13" pos:end="381:13"><if pos:start="373:13" pos:end="381:13">if <condition pos:start="373:16" pos:end="373:70">(<expr pos:start="373:17" pos:end="373:69"><name pos:start="373:17" pos:end="373:32"><name pos:start="373:17" pos:end="373:18">st</name><operator pos:start="373:19" pos:end="373:20">-&gt;</operator><name pos:start="373:21" pos:end="373:25">codec</name><operator pos:start="373:26" pos:end="373:27">-&gt;</operator><name pos:start="373:28" pos:end="373:32">width</name></name> <operator pos:start="373:34" pos:end="373:34">&gt;</operator> <literal type="number" pos:start="373:36" pos:end="373:40">65535</literal> <operator pos:start="373:42" pos:end="373:43">||</operator> <name pos:start="373:45" pos:end="373:61"><name pos:start="373:45" pos:end="373:46">st</name><operator pos:start="373:47" pos:end="373:48">-&gt;</operator><name pos:start="373:49" pos:end="373:53">codec</name><operator pos:start="373:54" pos:end="373:55">-&gt;</operator><name pos:start="373:56" pos:end="373:61">height</name></name> <operator pos:start="373:63" pos:end="373:63">&gt;</operator> <literal type="number" pos:start="373:65" pos:end="373:69">65535</literal></expr>)</condition> <block pos:start="373:72" pos:end="381:13">{<block_content pos:start="375:17" pos:end="379:27">

                <expr_stmt pos:start="375:17" pos:end="375:121"><expr pos:start="375:17" pos:end="375:120"><call pos:start="375:17" pos:end="375:120"><name pos:start="375:17" pos:end="375:22">av_log</name><argument_list pos:start="375:23" pos:end="375:120">(<argument pos:start="375:24" pos:end="375:24"><expr pos:start="375:24" pos:end="375:24"><name pos:start="375:24" pos:end="375:24">s</name></expr></argument>, <argument pos:start="375:27" pos:end="375:38"><expr pos:start="375:27" pos:end="375:38"><name pos:start="375:27" pos:end="375:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="375:41" pos:end="375:82"><expr pos:start="375:41" pos:end="375:82"><literal type="string" pos:start="375:41" pos:end="375:82">"Resolution %dx%d too large for mov/mp4\n"</literal></expr></argument>, <argument pos:start="375:85" pos:end="375:100"><expr pos:start="375:85" pos:end="375:100"><name pos:start="375:85" pos:end="375:100"><name pos:start="375:85" pos:end="375:86">st</name><operator pos:start="375:87" pos:end="375:88">-&gt;</operator><name pos:start="375:89" pos:end="375:93">codec</name><operator pos:start="375:94" pos:end="375:95">-&gt;</operator><name pos:start="375:96" pos:end="375:100">width</name></name></expr></argument>, <argument pos:start="375:103" pos:end="375:119"><expr pos:start="375:103" pos:end="375:119"><name pos:start="375:103" pos:end="375:119"><name pos:start="375:103" pos:end="375:104">st</name><operator pos:start="375:105" pos:end="375:106">-&gt;</operator><name pos:start="375:107" pos:end="375:111">codec</name><operator pos:start="375:112" pos:end="375:113">-&gt;</operator><name pos:start="375:114" pos:end="375:119">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:38"><expr pos:start="377:17" pos:end="377:37"><name pos:start="377:17" pos:end="377:19">ret</name> <operator pos:start="377:21" pos:end="377:21">=</operator> <call pos:start="377:23" pos:end="377:37"><name pos:start="377:23" pos:end="377:29">AVERROR</name><argument_list pos:start="377:30" pos:end="377:37">(<argument pos:start="377:31" pos:end="377:36"><expr pos:start="377:31" pos:end="377:36"><name pos:start="377:31" pos:end="377:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="379:17" pos:end="379:27">goto <name pos:start="379:22" pos:end="379:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="383:13" pos:end="391:59"><if pos:start="383:13" pos:end="391:59">if <condition pos:start="383:16" pos:end="383:69">(<expr pos:start="383:17" pos:end="383:68"><name pos:start="383:17" pos:end="383:27"><name pos:start="383:17" pos:end="383:21">track</name><operator pos:start="383:22" pos:end="383:23">-&gt;</operator><name pos:start="383:24" pos:end="383:27">mode</name></name> <operator pos:start="383:29" pos:end="383:30">==</operator> <name pos:start="383:32" pos:end="383:39">MODE_MOV</name> <operator pos:start="383:41" pos:end="383:42">&amp;&amp;</operator> <name pos:start="383:44" pos:end="383:59"><name pos:start="383:44" pos:end="383:48">track</name><operator pos:start="383:49" pos:end="383:50">-&gt;</operator><name pos:start="383:51" pos:end="383:59">timescale</name></name> <operator pos:start="383:61" pos:end="383:61">&gt;</operator> <literal type="number" pos:start="383:63" pos:end="383:68">100000</literal></expr>)</condition><block type="pseudo" pos:start="385:17" pos:end="391:59"><block_content pos:start="385:17" pos:end="391:59">

                <expr_stmt pos:start="385:17" pos:end="391:59"><expr pos:start="385:17" pos:end="391:58"><call pos:start="385:17" pos:end="391:58"><name pos:start="385:17" pos:end="385:22">av_log</name><argument_list pos:start="385:23" pos:end="391:58">(<argument pos:start="385:24" pos:end="385:24"><expr pos:start="385:24" pos:end="385:24"><name pos:start="385:24" pos:end="385:24">s</name></expr></argument>, <argument pos:start="385:27" pos:end="385:40"><expr pos:start="385:27" pos:end="385:40"><name pos:start="385:27" pos:end="385:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="387:24" pos:end="391:57"><expr pos:start="387:24" pos:end="391:57"><literal type="string" pos:start="387:24" pos:end="387:88">"WARNING codec timebase is very high. If duration is too long,\n"</literal>

                       <literal type="string" pos:start="389:24" pos:end="389:92">"file may not be playable by quicktime. Specify a shorter timebase\n"</literal>

                       <literal type="string" pos:start="391:24" pos:end="391:57">"or choose different container.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="393:11" pos:end="463:9">else if <condition pos:start="393:19" pos:end="393:63">(<expr pos:start="393:20" pos:end="393:62"><name pos:start="393:20" pos:end="393:40"><name pos:start="393:20" pos:end="393:21">st</name><operator pos:start="393:22" pos:end="393:23">-&gt;</operator><name pos:start="393:24" pos:end="393:28">codec</name><operator pos:start="393:29" pos:end="393:30">-&gt;</operator><name pos:start="393:31" pos:end="393:40">codec_type</name></name> <operator pos:start="393:42" pos:end="393:43">==</operator> <name pos:start="393:45" pos:end="393:62">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="393:65" pos:end="463:9">{<block_content pos:start="395:13" pos:end="461:13">

            <expr_stmt pos:start="395:13" pos:end="395:54"><expr pos:start="395:13" pos:end="395:53"><name pos:start="395:13" pos:end="395:28"><name pos:start="395:13" pos:end="395:17">track</name><operator pos:start="395:18" pos:end="395:19">-&gt;</operator><name pos:start="395:20" pos:end="395:28">timescale</name></name> <operator pos:start="395:30" pos:end="395:30">=</operator> <name pos:start="395:32" pos:end="395:53"><name pos:start="395:32" pos:end="395:33">st</name><operator pos:start="395:34" pos:end="395:35">-&gt;</operator><name pos:start="395:36" pos:end="395:40">codec</name><operator pos:start="395:41" pos:end="395:42">-&gt;</operator><name pos:start="395:43" pos:end="395:53">sample_rate</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="397:13" pos:end="429:13"><if pos:start="397:13" pos:end="403:13">if <condition pos:start="397:16" pos:end="397:87">(<expr pos:start="397:17" pos:end="397:86"><operator pos:start="397:17" pos:end="397:17">!</operator><name pos:start="397:18" pos:end="397:38"><name pos:start="397:18" pos:end="397:19">st</name><operator pos:start="397:20" pos:end="397:21">-&gt;</operator><name pos:start="397:22" pos:end="397:26">codec</name><operator pos:start="397:27" pos:end="397:28">-&gt;</operator><name pos:start="397:29" pos:end="397:38">frame_size</name></name> <operator pos:start="397:40" pos:end="397:41">&amp;&amp;</operator> <operator pos:start="397:43" pos:end="397:43">!</operator><call pos:start="397:44" pos:end="397:86"><name pos:start="397:44" pos:end="397:65">av_get_bits_per_sample</name><argument_list pos:start="397:66" pos:end="397:86">(<argument pos:start="397:67" pos:end="397:85"><expr pos:start="397:67" pos:end="397:85"><name pos:start="397:67" pos:end="397:85"><name pos:start="397:67" pos:end="397:68">st</name><operator pos:start="397:69" pos:end="397:70">-&gt;</operator><name pos:start="397:71" pos:end="397:75">codec</name><operator pos:start="397:76" pos:end="397:77">-&gt;</operator><name pos:start="397:78" pos:end="397:85">codec_id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="397:89" pos:end="403:13">{<block_content pos:start="399:17" pos:end="401:37">

                <expr_stmt pos:start="399:17" pos:end="399:88"><expr pos:start="399:17" pos:end="399:87"><call pos:start="399:17" pos:end="399:87"><name pos:start="399:17" pos:end="399:22">av_log</name><argument_list pos:start="399:23" pos:end="399:87">(<argument pos:start="399:24" pos:end="399:24"><expr pos:start="399:24" pos:end="399:24"><name pos:start="399:24" pos:end="399:24">s</name></expr></argument>, <argument pos:start="399:27" pos:end="399:40"><expr pos:start="399:27" pos:end="399:40"><name pos:start="399:27" pos:end="399:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="399:43" pos:end="399:83"><expr pos:start="399:43" pos:end="399:83"><literal type="string" pos:start="399:43" pos:end="399:83">"track %d: codec frame size is not set\n"</literal></expr></argument>, <argument pos:start="399:86" pos:end="399:86"><expr pos:start="399:86" pos:end="399:86"><name pos:start="399:86" pos:end="399:86">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:37"><expr pos:start="401:17" pos:end="401:36"><name pos:start="401:17" pos:end="401:32"><name pos:start="401:17" pos:end="401:21">track</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:32">audio_vbr</name></name> <operator pos:start="401:34" pos:end="401:34">=</operator> <literal type="number" pos:start="401:36" pos:end="401:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="403:14" pos:end="421:13">else if <condition pos:start="403:22" pos:end="407:61">(<expr pos:start="403:23" pos:end="407:60"><name pos:start="403:23" pos:end="403:41"><name pos:start="403:23" pos:end="403:24">st</name><operator pos:start="403:25" pos:end="403:26">-&gt;</operator><name pos:start="403:27" pos:end="403:31">codec</name><operator pos:start="403:32" pos:end="403:33">-&gt;</operator><name pos:start="403:34" pos:end="403:41">codec_id</name></name> <operator pos:start="403:43" pos:end="403:44">==</operator> <name pos:start="403:46" pos:end="403:65">AV_CODEC_ID_ADPCM_MS</name> <operator pos:start="403:67" pos:end="403:68">||</operator>

                     <name pos:start="405:22" pos:end="405:40"><name pos:start="405:22" pos:end="405:23">st</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:30">codec</name><operator pos:start="405:31" pos:end="405:32">-&gt;</operator><name pos:start="405:33" pos:end="405:40">codec_id</name></name> <operator pos:start="405:42" pos:end="405:43">==</operator> <name pos:start="405:45" pos:end="405:69">AV_CODEC_ID_ADPCM_IMA_WAV</name> <operator pos:start="405:71" pos:end="405:72">||</operator>

                     <name pos:start="407:22" pos:end="407:40"><name pos:start="407:22" pos:end="407:23">st</name><operator pos:start="407:24" pos:end="407:25">-&gt;</operator><name pos:start="407:26" pos:end="407:30">codec</name><operator pos:start="407:31" pos:end="407:32">-&gt;</operator><name pos:start="407:33" pos:end="407:40">codec_id</name></name> <operator pos:start="407:42" pos:end="407:43">==</operator> <name pos:start="407:45" pos:end="407:60">AV_CODEC_ID_ILBC</name></expr>)</condition><block pos:start="407:62" pos:end="421:13">{<block_content pos:start="409:17" pos:end="419:60">

                <if_stmt pos:start="409:17" pos:end="417:17"><if pos:start="409:17" pos:end="417:17">if <condition pos:start="409:20" pos:end="409:44">(<expr pos:start="409:21" pos:end="409:43"><operator pos:start="409:21" pos:end="409:21">!</operator><name pos:start="409:22" pos:end="409:43"><name pos:start="409:22" pos:end="409:23">st</name><operator pos:start="409:24" pos:end="409:25">-&gt;</operator><name pos:start="409:26" pos:end="409:30">codec</name><operator pos:start="409:31" pos:end="409:32">-&gt;</operator><name pos:start="409:33" pos:end="409:43">block_align</name></name></expr>)</condition> <block pos:start="409:46" pos:end="417:17">{<block_content pos:start="411:21" pos:end="415:31">

                    <expr_stmt pos:start="411:21" pos:end="411:101"><expr pos:start="411:21" pos:end="411:100"><call pos:start="411:21" pos:end="411:100"><name pos:start="411:21" pos:end="411:26">av_log</name><argument_list pos:start="411:27" pos:end="411:100">(<argument pos:start="411:28" pos:end="411:28"><expr pos:start="411:28" pos:end="411:28"><name pos:start="411:28" pos:end="411:28">s</name></expr></argument>, <argument pos:start="411:31" pos:end="411:42"><expr pos:start="411:31" pos:end="411:42"><name pos:start="411:31" pos:end="411:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="411:45" pos:end="411:96"><expr pos:start="411:45" pos:end="411:96"><literal type="string" pos:start="411:45" pos:end="411:96">"track %d: codec block align is not set for adpcm\n"</literal></expr></argument>, <argument pos:start="411:99" pos:end="411:99"><expr pos:start="411:99" pos:end="411:99"><name pos:start="411:99" pos:end="411:99">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="413:21" pos:end="413:42"><expr pos:start="413:21" pos:end="413:41"><name pos:start="413:21" pos:end="413:23">ret</name> <operator pos:start="413:25" pos:end="413:25">=</operator> <call pos:start="413:27" pos:end="413:41"><name pos:start="413:27" pos:end="413:33">AVERROR</name><argument_list pos:start="413:34" pos:end="413:41">(<argument pos:start="413:35" pos:end="413:40"><expr pos:start="413:35" pos:end="413:40"><name pos:start="413:35" pos:end="413:40">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="415:21" pos:end="415:31">goto <name pos:start="415:26" pos:end="415:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:60"><expr pos:start="419:17" pos:end="419:59"><name pos:start="419:17" pos:end="419:34"><name pos:start="419:17" pos:end="419:21">track</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:34">sample_size</name></name> <operator pos:start="419:36" pos:end="419:36">=</operator> <name pos:start="419:38" pos:end="419:59"><name pos:start="419:38" pos:end="419:39">st</name><operator pos:start="419:40" pos:end="419:41">-&gt;</operator><name pos:start="419:42" pos:end="419:46">codec</name><operator pos:start="419:47" pos:end="419:48">-&gt;</operator><name pos:start="419:49" pos:end="419:59">block_align</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="421:14" pos:end="425:13">else if <condition pos:start="421:22" pos:end="421:48">(<expr pos:start="421:23" pos:end="421:47"><name pos:start="421:23" pos:end="421:43"><name pos:start="421:23" pos:end="421:24">st</name><operator pos:start="421:25" pos:end="421:26">-&gt;</operator><name pos:start="421:27" pos:end="421:31">codec</name><operator pos:start="421:32" pos:end="421:33">-&gt;</operator><name pos:start="421:34" pos:end="421:43">frame_size</name></name> <operator pos:start="421:45" pos:end="421:45">&gt;</operator> <literal type="number" pos:start="421:47" pos:end="421:47">1</literal></expr>)</condition><block pos:start="421:49" pos:end="425:13">{<block_content pos:start="423:17" pos:end="423:37"> <comment type="block" pos:start="421:51" pos:end="421:79">/* assume compressed audio */</comment>

                <expr_stmt pos:start="423:17" pos:end="423:37"><expr pos:start="423:17" pos:end="423:36"><name pos:start="423:17" pos:end="423:32"><name pos:start="423:17" pos:end="423:21">track</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:32">audio_vbr</name></name> <operator pos:start="423:34" pos:end="423:34">=</operator> <literal type="number" pos:start="423:36" pos:end="423:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="425:14" pos:end="429:13">else<block pos:start="425:18" pos:end="429:13">{<block_content pos:start="427:17" pos:end="427:110">

                <expr_stmt pos:start="427:17" pos:end="427:110"><expr pos:start="427:17" pos:end="427:109"><name pos:start="427:17" pos:end="427:34"><name pos:start="427:17" pos:end="427:21">track</name><operator pos:start="427:22" pos:end="427:23">-&gt;</operator><name pos:start="427:24" pos:end="427:34">sample_size</name></name> <operator pos:start="427:36" pos:end="427:36">=</operator> <operator pos:start="427:38" pos:end="427:38">(</operator><call pos:start="427:39" pos:end="427:81"><name pos:start="427:39" pos:end="427:60">av_get_bits_per_sample</name><argument_list pos:start="427:61" pos:end="427:81">(<argument pos:start="427:62" pos:end="427:80"><expr pos:start="427:62" pos:end="427:80"><name pos:start="427:62" pos:end="427:80"><name pos:start="427:62" pos:end="427:63">st</name><operator pos:start="427:64" pos:end="427:65">-&gt;</operator><name pos:start="427:66" pos:end="427:70">codec</name><operator pos:start="427:71" pos:end="427:72">-&gt;</operator><name pos:start="427:73" pos:end="427:80">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="427:83" pos:end="427:84">&gt;&gt;</operator> <literal type="number" pos:start="427:86" pos:end="427:86">3</literal><operator pos:start="427:87" pos:end="427:87">)</operator> <operator pos:start="427:89" pos:end="427:89">*</operator> <name pos:start="427:91" pos:end="427:109"><name pos:start="427:91" pos:end="427:92">st</name><operator pos:start="427:93" pos:end="427:94">-&gt;</operator><name pos:start="427:95" pos:end="427:99">codec</name><operator pos:start="427:100" pos:end="427:101">-&gt;</operator><name pos:start="427:102" pos:end="427:109">channels</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="431:13" pos:end="437:13"><if pos:start="431:13" pos:end="437:13">if <condition pos:start="431:16" pos:end="433:64">(<expr pos:start="431:17" pos:end="433:63"><name pos:start="431:17" pos:end="431:35"><name pos:start="431:17" pos:end="431:18">st</name><operator pos:start="431:19" pos:end="431:20">-&gt;</operator><name pos:start="431:21" pos:end="431:25">codec</name><operator pos:start="431:26" pos:end="431:27">-&gt;</operator><name pos:start="431:28" pos:end="431:35">codec_id</name></name> <operator pos:start="431:37" pos:end="431:38">==</operator> <name pos:start="431:40" pos:end="431:55">AV_CODEC_ID_ILBC</name> <operator pos:start="431:57" pos:end="431:58">||</operator>

                <name pos:start="433:17" pos:end="433:35"><name pos:start="433:17" pos:end="433:18">st</name><operator pos:start="433:19" pos:end="433:20">-&gt;</operator><name pos:start="433:21" pos:end="433:25">codec</name><operator pos:start="433:26" pos:end="433:27">-&gt;</operator><name pos:start="433:28" pos:end="433:35">codec_id</name></name> <operator pos:start="433:37" pos:end="433:38">==</operator> <name pos:start="433:40" pos:end="433:63">AV_CODEC_ID_ADPCM_IMA_QT</name></expr>)</condition> <block pos:start="433:66" pos:end="437:13">{<block_content pos:start="435:17" pos:end="435:37">

                <expr_stmt pos:start="435:17" pos:end="435:37"><expr pos:start="435:17" pos:end="435:36"><name pos:start="435:17" pos:end="435:32"><name pos:start="435:17" pos:end="435:21">track</name><operator pos:start="435:22" pos:end="435:23">-&gt;</operator><name pos:start="435:24" pos:end="435:32">audio_vbr</name></name> <operator pos:start="435:34" pos:end="435:34">=</operator> <literal type="number" pos:start="435:36" pos:end="435:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="439:13" pos:end="461:13"><if pos:start="439:13" pos:end="461:13">if <condition pos:start="439:16" pos:end="441:84">(<expr pos:start="439:17" pos:end="441:83"><name pos:start="439:17" pos:end="439:27"><name pos:start="439:17" pos:end="439:21">track</name><operator pos:start="439:22" pos:end="439:23">-&gt;</operator><name pos:start="439:24" pos:end="439:27">mode</name></name> <operator pos:start="439:29" pos:end="439:30">!=</operator> <name pos:start="439:32" pos:end="439:39">MODE_MOV</name> <operator pos:start="439:41" pos:end="439:42">&amp;&amp;</operator>

                <name pos:start="441:17" pos:end="441:36"><name pos:start="441:17" pos:end="441:21">track</name><operator pos:start="441:22" pos:end="441:23">-&gt;</operator><name pos:start="441:24" pos:end="441:26">enc</name><operator pos:start="441:27" pos:end="441:28">-&gt;</operator><name pos:start="441:29" pos:end="441:36">codec_id</name></name> <operator pos:start="441:38" pos:end="441:39">==</operator> <name pos:start="441:41" pos:end="441:55">AV_CODEC_ID_MP3</name> <operator pos:start="441:57" pos:end="441:58">&amp;&amp;</operator> <name pos:start="441:60" pos:end="441:75"><name pos:start="441:60" pos:end="441:64">track</name><operator pos:start="441:65" pos:end="441:66">-&gt;</operator><name pos:start="441:67" pos:end="441:75">timescale</name></name> <operator pos:start="441:77" pos:end="441:77">&lt;</operator> <literal type="number" pos:start="441:79" pos:end="441:83">16000</literal></expr>)</condition> <block pos:start="441:86" pos:end="461:13">{<block_content pos:start="443:17" pos:end="459:17">

                <if_stmt pos:start="443:17" pos:end="459:17"><if pos:start="443:17" pos:end="453:17">if <condition pos:start="443:20" pos:end="443:78">(<expr pos:start="443:21" pos:end="443:77"><name pos:start="443:21" pos:end="443:53"><name pos:start="443:21" pos:end="443:25">track</name><operator pos:start="443:26" pos:end="443:27">-&gt;</operator><name pos:start="443:28" pos:end="443:30">enc</name><operator pos:start="443:31" pos:end="443:32">-&gt;</operator><name pos:start="443:33" pos:end="443:53">strict_std_compliance</name></name> <operator pos:start="443:55" pos:end="443:56">&gt;=</operator> <name pos:start="443:58" pos:end="443:77">FF_COMPLIANCE_NORMAL</name></expr>)</condition> <block pos:start="443:80" pos:end="453:17">{<block_content pos:start="445:21" pos:end="451:31">

                    <expr_stmt pos:start="445:21" pos:end="447:52"><expr pos:start="445:21" pos:end="447:51"><call pos:start="445:21" pos:end="447:51"><name pos:start="445:21" pos:end="445:26">av_log</name><argument_list pos:start="445:27" pos:end="447:51">(<argument pos:start="445:28" pos:end="445:28"><expr pos:start="445:28" pos:end="445:28"><name pos:start="445:28" pos:end="445:28">s</name></expr></argument>, <argument pos:start="445:31" pos:end="445:42"><expr pos:start="445:31" pos:end="445:42"><name pos:start="445:31" pos:end="445:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="445:45" pos:end="445:124"><expr pos:start="445:45" pos:end="445:124"><literal type="string" pos:start="445:45" pos:end="445:124">"track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n"</literal></expr></argument>,

                        <argument pos:start="447:25" pos:end="447:25"><expr pos:start="447:25" pos:end="447:25"><name pos:start="447:25" pos:end="447:25">i</name></expr></argument>, <argument pos:start="447:28" pos:end="447:50"><expr pos:start="447:28" pos:end="447:50"><name pos:start="447:28" pos:end="447:50"><name pos:start="447:28" pos:end="447:32">track</name><operator pos:start="447:33" pos:end="447:34">-&gt;</operator><name pos:start="447:35" pos:end="447:37">enc</name><operator pos:start="447:38" pos:end="447:39">-&gt;</operator><name pos:start="447:40" pos:end="447:50">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="449:21" pos:end="449:42"><expr pos:start="449:21" pos:end="449:41"><name pos:start="449:21" pos:end="449:23">ret</name> <operator pos:start="449:25" pos:end="449:25">=</operator> <call pos:start="449:27" pos:end="449:41"><name pos:start="449:27" pos:end="449:33">AVERROR</name><argument_list pos:start="449:34" pos:end="449:41">(<argument pos:start="449:35" pos:end="449:40"><expr pos:start="449:35" pos:end="449:40"><name pos:start="449:35" pos:end="449:40">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="451:21" pos:end="451:31">goto <name pos:start="451:26" pos:end="451:30">error</name>;</goto>

                </block_content>}</block></if> <else pos:start="453:19" pos:end="459:17">else <block pos:start="453:24" pos:end="459:17">{<block_content pos:start="455:21" pos:end="457:55">

                    <expr_stmt pos:start="455:21" pos:end="457:55"><expr pos:start="455:21" pos:end="457:54"><call pos:start="455:21" pos:end="457:54"><name pos:start="455:21" pos:end="455:26">av_log</name><argument_list pos:start="455:27" pos:end="457:54">(<argument pos:start="455:28" pos:end="455:28"><expr pos:start="455:28" pos:end="455:28"><name pos:start="455:28" pos:end="455:28">s</name></expr></argument>, <argument pos:start="455:31" pos:end="455:44"><expr pos:start="455:31" pos:end="455:44"><name pos:start="455:31" pos:end="455:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="455:47" pos:end="455:101"><expr pos:start="455:47" pos:end="455:101"><literal type="string" pos:start="455:47" pos:end="455:101">"track %d: muxing mp3 at %dhz is not standard in MP4\n"</literal></expr></argument>,

                           <argument pos:start="457:28" pos:end="457:28"><expr pos:start="457:28" pos:end="457:28"><name pos:start="457:28" pos:end="457:28">i</name></expr></argument>, <argument pos:start="457:31" pos:end="457:53"><expr pos:start="457:31" pos:end="457:53"><name pos:start="457:31" pos:end="457:53"><name pos:start="457:31" pos:end="457:35">track</name><operator pos:start="457:36" pos:end="457:37">-&gt;</operator><name pos:start="457:38" pos:end="457:40">enc</name><operator pos:start="457:41" pos:end="457:42">-&gt;</operator><name pos:start="457:43" pos:end="457:53">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="463:11" pos:end="467:9">else if <condition pos:start="463:19" pos:end="463:66">(<expr pos:start="463:20" pos:end="463:65"><name pos:start="463:20" pos:end="463:40"><name pos:start="463:20" pos:end="463:21">st</name><operator pos:start="463:22" pos:end="463:23">-&gt;</operator><name pos:start="463:24" pos:end="463:28">codec</name><operator pos:start="463:29" pos:end="463:30">-&gt;</operator><name pos:start="463:31" pos:end="463:40">codec_type</name></name> <operator pos:start="463:42" pos:end="463:43">==</operator> <name pos:start="463:45" pos:end="463:65">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="463:68" pos:end="467:9">{<block_content pos:start="465:13" pos:end="465:49">

            <expr_stmt pos:start="465:13" pos:end="465:49"><expr pos:start="465:13" pos:end="465:48"><name pos:start="465:13" pos:end="465:28"><name pos:start="465:13" pos:end="465:17">track</name><operator pos:start="465:18" pos:end="465:19">-&gt;</operator><name pos:start="465:20" pos:end="465:28">timescale</name></name> <operator pos:start="465:30" pos:end="465:30">=</operator> <name pos:start="465:32" pos:end="465:48"><name pos:start="465:32" pos:end="465:33">st</name><operator pos:start="465:34" pos:end="465:35">-&gt;</operator><name pos:start="465:36" pos:end="465:44">time_base</name><operator pos:start="465:45" pos:end="465:45">.</operator><name pos:start="465:46" pos:end="465:48">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="467:11" pos:end="471:9">else if <condition pos:start="467:19" pos:end="467:62">(<expr pos:start="467:20" pos:end="467:61"><name pos:start="467:20" pos:end="467:40"><name pos:start="467:20" pos:end="467:21">st</name><operator pos:start="467:22" pos:end="467:23">-&gt;</operator><name pos:start="467:24" pos:end="467:28">codec</name><operator pos:start="467:29" pos:end="467:30">-&gt;</operator><name pos:start="467:31" pos:end="467:40">codec_type</name></name> <operator pos:start="467:42" pos:end="467:43">==</operator> <name pos:start="467:45" pos:end="467:61">AVMEDIA_TYPE_DATA</name></expr>)</condition> <block pos:start="467:64" pos:end="471:9">{<block_content pos:start="469:13" pos:end="469:49">

            <expr_stmt pos:start="469:13" pos:end="469:49"><expr pos:start="469:13" pos:end="469:48"><name pos:start="469:13" pos:end="469:28"><name pos:start="469:13" pos:end="469:17">track</name><operator pos:start="469:18" pos:end="469:19">-&gt;</operator><name pos:start="469:20" pos:end="469:28">timescale</name></name> <operator pos:start="469:30" pos:end="469:30">=</operator> <name pos:start="469:32" pos:end="469:48"><name pos:start="469:32" pos:end="469:33">st</name><operator pos:start="469:34" pos:end="469:35">-&gt;</operator><name pos:start="469:36" pos:end="469:44">time_base</name><operator pos:start="469:45" pos:end="469:45">.</operator><name pos:start="469:46" pos:end="469:48">den</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="471:11" pos:end="475:9">else <block pos:start="471:16" pos:end="475:9">{<block_content pos:start="473:13" pos:end="473:45">

            <expr_stmt pos:start="473:13" pos:end="473:45"><expr pos:start="473:13" pos:end="473:44"><name pos:start="473:13" pos:end="473:28"><name pos:start="473:13" pos:end="473:17">track</name><operator pos:start="473:18" pos:end="473:19">-&gt;</operator><name pos:start="473:20" pos:end="473:28">timescale</name></name> <operator pos:start="473:30" pos:end="473:30">=</operator> <name pos:start="473:32" pos:end="473:44">MOV_TIMESCALE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="477:9" pos:end="479:46"><if pos:start="477:9" pos:end="479:46">if <condition pos:start="477:12" pos:end="477:27">(<expr pos:start="477:13" pos:end="477:26"><operator pos:start="477:13" pos:end="477:13">!</operator><name pos:start="477:14" pos:end="477:26"><name pos:start="477:14" pos:end="477:18">track</name><operator pos:start="477:19" pos:end="477:20">-&gt;</operator><name pos:start="477:21" pos:end="477:26">height</name></name></expr>)</condition><block type="pseudo" pos:start="479:13" pos:end="479:46"><block_content pos:start="479:13" pos:end="479:46">

            <expr_stmt pos:start="479:13" pos:end="479:46"><expr pos:start="479:13" pos:end="479:45"><name pos:start="479:13" pos:end="479:25"><name pos:start="479:13" pos:end="479:17">track</name><operator pos:start="479:18" pos:end="479:19">-&gt;</operator><name pos:start="479:20" pos:end="479:25">height</name></name> <operator pos:start="479:27" pos:end="479:27">=</operator> <name pos:start="479:29" pos:end="479:45"><name pos:start="479:29" pos:end="479:30">st</name><operator pos:start="479:31" pos:end="479:32">-&gt;</operator><name pos:start="479:33" pos:end="479:37">codec</name><operator pos:start="479:38" pos:end="479:39">-&gt;</operator><name pos:start="479:40" pos:end="479:45">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="481:9" pos:end="483:43">/* The ism specific timescale isn't mandatory, but is assumed by

         * some tools, such as mp4split. */</comment>

        <if_stmt pos:start="485:9" pos:end="487:40"><if pos:start="485:9" pos:end="487:40">if <condition pos:start="485:12" pos:end="485:34">(<expr pos:start="485:13" pos:end="485:33"><name pos:start="485:13" pos:end="485:21"><name pos:start="485:13" pos:end="485:15">mov</name><operator pos:start="485:16" pos:end="485:17">-&gt;</operator><name pos:start="485:18" pos:end="485:21">mode</name></name> <operator pos:start="485:23" pos:end="485:24">==</operator> <name pos:start="485:26" pos:end="485:33">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="487:13" pos:end="487:40"><block_content pos:start="487:13" pos:end="487:40">

            <expr_stmt pos:start="487:13" pos:end="487:40"><expr pos:start="487:13" pos:end="487:39"><name pos:start="487:13" pos:end="487:28"><name pos:start="487:13" pos:end="487:17">track</name><operator pos:start="487:18" pos:end="487:19">-&gt;</operator><name pos:start="487:20" pos:end="487:28">timescale</name></name> <operator pos:start="487:30" pos:end="487:30">=</operator> <literal type="number" pos:start="487:32" pos:end="487:39">10000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="491:9" pos:end="491:57"><expr pos:start="491:9" pos:end="491:56"><call pos:start="491:9" pos:end="491:56"><name pos:start="491:9" pos:end="491:27">avpriv_set_pts_info</name><argument_list pos:start="491:28" pos:end="491:56">(<argument pos:start="491:29" pos:end="491:30"><expr pos:start="491:29" pos:end="491:30"><name pos:start="491:29" pos:end="491:30">st</name></expr></argument>, <argument pos:start="491:33" pos:end="491:34"><expr pos:start="491:33" pos:end="491:34"><literal type="number" pos:start="491:33" pos:end="491:34">64</literal></expr></argument>, <argument pos:start="491:37" pos:end="491:37"><expr pos:start="491:37" pos:end="491:37"><literal type="number" pos:start="491:37" pos:end="491:37">1</literal></expr></argument>, <argument pos:start="491:40" pos:end="491:55"><expr pos:start="491:40" pos:end="491:55"><name pos:start="491:40" pos:end="491:55"><name pos:start="491:40" pos:end="491:44">track</name><operator pos:start="491:45" pos:end="491:46">-&gt;</operator><name pos:start="491:47" pos:end="491:55">timescale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="495:9" pos:end="495:41">/* copy extradata if it exists */</comment>

        <if_stmt pos:start="497:9" pos:end="521:9"><if pos:start="497:9" pos:end="521:9">if <condition pos:start="497:12" pos:end="497:38">(<expr pos:start="497:13" pos:end="497:37"><name pos:start="497:13" pos:end="497:37"><name pos:start="497:13" pos:end="497:14">st</name><operator pos:start="497:15" pos:end="497:16">-&gt;</operator><name pos:start="497:17" pos:end="497:21">codec</name><operator pos:start="497:22" pos:end="497:23">-&gt;</operator><name pos:start="497:24" pos:end="497:37">extradata_size</name></name></expr>)</condition> <block pos:start="497:40" pos:end="521:9">{<block_content pos:start="499:13" pos:end="519:13">

            <if_stmt pos:start="499:13" pos:end="519:13"><if pos:start="499:13" pos:end="501:68">if <condition pos:start="499:16" pos:end="499:64">(<expr pos:start="499:17" pos:end="499:63"><name pos:start="499:17" pos:end="499:35"><name pos:start="499:17" pos:end="499:18">st</name><operator pos:start="499:19" pos:end="499:20">-&gt;</operator><name pos:start="499:21" pos:end="499:25">codec</name><operator pos:start="499:26" pos:end="499:27">-&gt;</operator><name pos:start="499:28" pos:end="499:35">codec_id</name></name> <operator pos:start="499:37" pos:end="499:38">==</operator> <name pos:start="499:40" pos:end="499:63">AV_CODEC_ID_DVD_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="501:17" pos:end="501:68"><block_content pos:start="501:17" pos:end="501:68">

                <expr_stmt pos:start="501:17" pos:end="501:68"><expr pos:start="501:17" pos:end="501:67"><call pos:start="501:17" pos:end="501:67"><name pos:start="501:17" pos:end="501:56">mov_create_dvd_sub_decoder_specific_info</name><argument_list pos:start="501:57" pos:end="501:67">(<argument pos:start="501:58" pos:end="501:62"><expr pos:start="501:58" pos:end="501:62"><name pos:start="501:58" pos:end="501:62">track</name></expr></argument>, <argument pos:start="501:65" pos:end="501:66"><expr pos:start="501:65" pos:end="501:66"><name pos:start="501:65" pos:end="501:66">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="503:13" pos:end="519:13">else if <condition pos:start="503:21" pos:end="503:90">(<expr pos:start="503:22" pos:end="503:89"><operator pos:start="503:22" pos:end="503:22">!</operator><call pos:start="503:23" pos:end="503:45"><name pos:start="503:23" pos:end="503:33">TAG_IS_AVCI</name><argument_list pos:start="503:34" pos:end="503:45">(<argument pos:start="503:35" pos:end="503:44"><expr pos:start="503:35" pos:end="503:44"><name pos:start="503:35" pos:end="503:44"><name pos:start="503:35" pos:end="503:39">track</name><operator pos:start="503:40" pos:end="503:41">-&gt;</operator><name pos:start="503:42" pos:end="503:44">tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="503:47" pos:end="503:48">&amp;&amp;</operator> <name pos:start="503:50" pos:end="503:68"><name pos:start="503:50" pos:end="503:51">st</name><operator pos:start="503:52" pos:end="503:53">-&gt;</operator><name pos:start="503:54" pos:end="503:58">codec</name><operator pos:start="503:59" pos:end="503:60">-&gt;</operator><name pos:start="503:61" pos:end="503:68">codec_id</name></name> <operator pos:start="503:70" pos:end="503:71">!=</operator> <name pos:start="503:73" pos:end="503:89">AV_CODEC_ID_DNXHD</name></expr>)</condition> <block pos:start="503:92" pos:end="519:13">{<block_content pos:start="505:17" pos:end="517:78">

                <expr_stmt pos:start="505:17" pos:end="505:60"><expr pos:start="505:17" pos:end="505:59"><name pos:start="505:17" pos:end="505:30"><name pos:start="505:17" pos:end="505:21">track</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:30">vos_len</name></name>  <operator pos:start="505:33" pos:end="505:33">=</operator> <name pos:start="505:35" pos:end="505:59"><name pos:start="505:35" pos:end="505:36">st</name><operator pos:start="505:37" pos:end="505:38">-&gt;</operator><name pos:start="505:39" pos:end="505:43">codec</name><operator pos:start="505:44" pos:end="505:45">-&gt;</operator><name pos:start="505:46" pos:end="505:59">extradata_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="507:17" pos:end="507:60"><expr pos:start="507:17" pos:end="507:59"><name pos:start="507:17" pos:end="507:31"><name pos:start="507:17" pos:end="507:21">track</name><operator pos:start="507:22" pos:end="507:23">-&gt;</operator><name pos:start="507:24" pos:end="507:31">vos_data</name></name> <operator pos:start="507:33" pos:end="507:33">=</operator> <call pos:start="507:35" pos:end="507:59"><name pos:start="507:35" pos:end="507:43">av_malloc</name><argument_list pos:start="507:44" pos:end="507:59">(<argument pos:start="507:45" pos:end="507:58"><expr pos:start="507:45" pos:end="507:58"><name pos:start="507:45" pos:end="507:58"><name pos:start="507:45" pos:end="507:49">track</name><operator pos:start="507:50" pos:end="507:51">-&gt;</operator><name pos:start="507:52" pos:end="507:58">vos_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="509:17" pos:end="515:17"><if pos:start="509:17" pos:end="515:17">if <condition pos:start="509:20" pos:end="509:37">(<expr pos:start="509:21" pos:end="509:36"><operator pos:start="509:21" pos:end="509:21">!</operator><name pos:start="509:22" pos:end="509:36"><name pos:start="509:22" pos:end="509:26">track</name><operator pos:start="509:27" pos:end="509:28">-&gt;</operator><name pos:start="509:29" pos:end="509:36">vos_data</name></name></expr>)</condition> <block pos:start="509:39" pos:end="515:17">{<block_content pos:start="511:21" pos:end="513:31">

                    <expr_stmt pos:start="511:21" pos:end="511:42"><expr pos:start="511:21" pos:end="511:41"><name pos:start="511:21" pos:end="511:23">ret</name> <operator pos:start="511:25" pos:end="511:25">=</operator> <call pos:start="511:27" pos:end="511:41"><name pos:start="511:27" pos:end="511:33">AVERROR</name><argument_list pos:start="511:34" pos:end="511:41">(<argument pos:start="511:35" pos:end="511:40"><expr pos:start="511:35" pos:end="511:40"><name pos:start="511:35" pos:end="511:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="513:21" pos:end="513:31">goto <name pos:start="513:26" pos:end="513:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="517:17" pos:end="517:78"><expr pos:start="517:17" pos:end="517:77"><call pos:start="517:17" pos:end="517:77"><name pos:start="517:17" pos:end="517:22">memcpy</name><argument_list pos:start="517:23" pos:end="517:77">(<argument pos:start="517:24" pos:end="517:38"><expr pos:start="517:24" pos:end="517:38"><name pos:start="517:24" pos:end="517:38"><name pos:start="517:24" pos:end="517:28">track</name><operator pos:start="517:29" pos:end="517:30">-&gt;</operator><name pos:start="517:31" pos:end="517:38">vos_data</name></name></expr></argument>, <argument pos:start="517:41" pos:end="517:60"><expr pos:start="517:41" pos:end="517:60"><name pos:start="517:41" pos:end="517:60"><name pos:start="517:41" pos:end="517:42">st</name><operator pos:start="517:43" pos:end="517:44">-&gt;</operator><name pos:start="517:45" pos:end="517:49">codec</name><operator pos:start="517:50" pos:end="517:51">-&gt;</operator><name pos:start="517:52" pos:end="517:60">extradata</name></name></expr></argument>, <argument pos:start="517:63" pos:end="517:76"><expr pos:start="517:63" pos:end="517:76"><name pos:start="517:63" pos:end="517:76"><name pos:start="517:63" pos:end="517:67">track</name><operator pos:start="517:68" pos:end="517:69">-&gt;</operator><name pos:start="517:70" pos:end="517:76">vos_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="527:5" pos:end="573:5">for <control pos:start="527:9" pos:end="527:39">(<init pos:start="527:10" pos:end="527:15"><expr pos:start="527:10" pos:end="527:14"><name pos:start="527:10" pos:end="527:10">i</name> <operator pos:start="527:12" pos:end="527:12">=</operator> <literal type="number" pos:start="527:14" pos:end="527:14">0</literal></expr>;</init> <condition pos:start="527:17" pos:end="527:34"><expr pos:start="527:17" pos:end="527:33"><name pos:start="527:17" pos:end="527:17">i</name> <operator pos:start="527:19" pos:end="527:19">&lt;</operator> <name pos:start="527:21" pos:end="527:33"><name pos:start="527:21" pos:end="527:21">s</name><operator pos:start="527:22" pos:end="527:23">-&gt;</operator><name pos:start="527:24" pos:end="527:33">nb_streams</name></name></expr>;</condition> <incr pos:start="527:36" pos:end="527:38"><expr pos:start="527:36" pos:end="527:38"><name pos:start="527:36" pos:end="527:36">i</name><operator pos:start="527:37" pos:end="527:38">++</operator></expr></incr>)</control> <block pos:start="527:41" pos:end="573:5">{<block_content pos:start="529:9" pos:end="571:9">

        <decl_stmt pos:start="529:9" pos:end="529:14"><decl pos:start="529:9" pos:end="529:13"><type pos:start="529:9" pos:end="529:11"><name pos:start="529:9" pos:end="529:11">int</name></type> <name pos:start="529:13" pos:end="529:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="531:9" pos:end="531:36"><decl pos:start="531:9" pos:end="531:35"><type pos:start="531:9" pos:end="531:18"><name pos:start="531:9" pos:end="531:16">AVStream</name> <modifier pos:start="531:18" pos:end="531:18">*</modifier></type><name pos:start="531:19" pos:end="531:20">st</name><init pos:start="531:21" pos:end="531:35">= <expr pos:start="531:23" pos:end="531:35"><name pos:start="531:23" pos:end="531:35"><name pos:start="531:23" pos:end="531:23">s</name><operator pos:start="531:24" pos:end="531:25">-&gt;</operator><name pos:start="531:26" pos:end="531:32">streams</name><index pos:start="531:33" pos:end="531:35">[<expr pos:start="531:34" pos:end="531:34"><name pos:start="531:34" pos:end="531:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="533:9" pos:end="533:41"><decl pos:start="533:9" pos:end="533:40"><type pos:start="533:9" pos:end="533:18"><name pos:start="533:9" pos:end="533:16">MOVTrack</name> <modifier pos:start="533:18" pos:end="533:18">*</modifier></type><name pos:start="533:19" pos:end="533:23">track</name><init pos:start="533:24" pos:end="533:40">= <expr pos:start="533:26" pos:end="533:40"><operator pos:start="533:26" pos:end="533:26">&amp;</operator><name pos:start="533:27" pos:end="533:40"><name pos:start="533:27" pos:end="533:29">mov</name><operator pos:start="533:30" pos:end="533:31">-&gt;</operator><name pos:start="533:32" pos:end="533:37">tracks</name><index pos:start="533:38" pos:end="533:40">[<expr pos:start="533:39" pos:end="533:39"><name pos:start="533:39" pos:end="533:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="537:9" pos:end="541:21"><if pos:start="537:9" pos:end="541:21">if <condition pos:start="537:12" pos:end="539:60">(<expr pos:start="537:13" pos:end="539:59"><name pos:start="537:13" pos:end="537:33"><name pos:start="537:13" pos:end="537:14">st</name><operator pos:start="537:15" pos:end="537:16">-&gt;</operator><name pos:start="537:17" pos:end="537:21">codec</name><operator pos:start="537:22" pos:end="537:23">-&gt;</operator><name pos:start="537:24" pos:end="537:33">codec_type</name></name> <operator pos:start="537:35" pos:end="537:36">!=</operator> <name pos:start="537:38" pos:end="537:55">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="537:57" pos:end="537:58">||</operator>

            <name pos:start="539:13" pos:end="539:38"><name pos:start="539:13" pos:end="539:17">track</name><operator pos:start="539:18" pos:end="539:19">-&gt;</operator><name pos:start="539:20" pos:end="539:22">enc</name><operator pos:start="539:23" pos:end="539:24">-&gt;</operator><name pos:start="539:25" pos:end="539:38">channel_layout</name></name> <operator pos:start="539:40" pos:end="539:41">!=</operator> <name pos:start="539:43" pos:end="539:59">AV_CH_LAYOUT_MONO</name></expr>)</condition><block type="pseudo" pos:start="541:13" pos:end="541:21"><block_content pos:start="541:13" pos:end="541:21">

            <continue pos:start="541:13" pos:end="541:21">continue;</continue></block_content></block></if></if_stmt>



        <for pos:start="545:9" pos:end="571:9">for <control pos:start="545:13" pos:end="545:43">(<init pos:start="545:14" pos:end="545:19"><expr pos:start="545:14" pos:end="545:18"><name pos:start="545:14" pos:end="545:14">j</name> <operator pos:start="545:16" pos:end="545:16">=</operator> <literal type="number" pos:start="545:18" pos:end="545:18">0</literal></expr>;</init> <condition pos:start="545:21" pos:end="545:38"><expr pos:start="545:21" pos:end="545:37"><name pos:start="545:21" pos:end="545:21">j</name> <operator pos:start="545:23" pos:end="545:23">&lt;</operator> <name pos:start="545:25" pos:end="545:37"><name pos:start="545:25" pos:end="545:25">s</name><operator pos:start="545:26" pos:end="545:27">-&gt;</operator><name pos:start="545:28" pos:end="545:37">nb_streams</name></name></expr>;</condition> <incr pos:start="545:40" pos:end="545:42"><expr pos:start="545:40" pos:end="545:42"><name pos:start="545:40" pos:end="545:40">j</name><operator pos:start="545:41" pos:end="545:42">++</operator></expr></incr>)</control> <block pos:start="545:45" pos:end="571:9">{<block_content pos:start="547:13" pos:end="569:42">

            <decl_stmt pos:start="547:13" pos:end="547:41"><decl pos:start="547:13" pos:end="547:40"><type pos:start="547:13" pos:end="547:22"><name pos:start="547:13" pos:end="547:20">AVStream</name> <modifier pos:start="547:22" pos:end="547:22">*</modifier></type><name pos:start="547:23" pos:end="547:25">stj</name><init pos:start="547:26" pos:end="547:40">= <expr pos:start="547:28" pos:end="547:40"><name pos:start="547:28" pos:end="547:40"><name pos:start="547:28" pos:end="547:28">s</name><operator pos:start="547:29" pos:end="547:30">-&gt;</operator><name pos:start="547:31" pos:end="547:37">streams</name><index pos:start="547:38" pos:end="547:40">[<expr pos:start="547:39" pos:end="547:39"><name pos:start="547:39" pos:end="547:39">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="549:13" pos:end="549:46"><decl pos:start="549:13" pos:end="549:45"><type pos:start="549:13" pos:end="549:22"><name pos:start="549:13" pos:end="549:20">MOVTrack</name> <modifier pos:start="549:22" pos:end="549:22">*</modifier></type><name pos:start="549:23" pos:end="549:28">trackj</name><init pos:start="549:29" pos:end="549:45">= <expr pos:start="549:31" pos:end="549:45"><operator pos:start="549:31" pos:end="549:31">&amp;</operator><name pos:start="549:32" pos:end="549:45"><name pos:start="549:32" pos:end="549:34">mov</name><operator pos:start="549:35" pos:end="549:36">-&gt;</operator><name pos:start="549:37" pos:end="549:42">tracks</name><index pos:start="549:43" pos:end="549:45">[<expr pos:start="549:44" pos:end="549:44"><name pos:start="549:44" pos:end="549:44">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="551:13" pos:end="553:25"><if pos:start="551:13" pos:end="553:25">if <condition pos:start="551:16" pos:end="551:23">(<expr pos:start="551:17" pos:end="551:22"><name pos:start="551:17" pos:end="551:17">j</name> <operator pos:start="551:19" pos:end="551:20">==</operator> <name pos:start="551:22" pos:end="551:22">i</name></expr>)</condition><block type="pseudo" pos:start="553:17" pos:end="553:25"><block_content pos:start="553:17" pos:end="553:25">

                <continue pos:start="553:17" pos:end="553:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="557:13" pos:end="567:25"><if pos:start="557:13" pos:end="567:25">if <condition pos:start="557:16" pos:end="565:13">(<expr pos:start="557:17" pos:end="563:41"><name pos:start="557:17" pos:end="557:38"><name pos:start="557:17" pos:end="557:19">stj</name><operator pos:start="557:20" pos:end="557:21">-&gt;</operator><name pos:start="557:22" pos:end="557:26">codec</name><operator pos:start="557:27" pos:end="557:28">-&gt;</operator><name pos:start="557:29" pos:end="557:38">codec_type</name></name> <operator pos:start="557:40" pos:end="557:41">!=</operator> <name pos:start="557:43" pos:end="557:60">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="557:62" pos:end="557:63">||</operator>

                <name pos:start="559:17" pos:end="559:43"><name pos:start="559:17" pos:end="559:22">trackj</name><operator pos:start="559:23" pos:end="559:24">-&gt;</operator><name pos:start="559:25" pos:end="559:27">enc</name><operator pos:start="559:28" pos:end="559:29">-&gt;</operator><name pos:start="559:30" pos:end="559:43">channel_layout</name></name> <operator pos:start="559:45" pos:end="559:46">!=</operator> <name pos:start="559:48" pos:end="559:64">AV_CH_LAYOUT_MONO</name> <operator pos:start="559:66" pos:end="559:67">||</operator>

                <name pos:start="561:17" pos:end="561:32"><name pos:start="561:17" pos:end="561:22">trackj</name><operator pos:start="561:23" pos:end="561:24">-&gt;</operator><name pos:start="561:25" pos:end="561:32">language</name></name> <operator pos:start="561:34" pos:end="561:35">!=</operator> <name pos:start="561:37" pos:end="561:51"><name pos:start="561:37" pos:end="561:41">track</name><operator pos:start="561:42" pos:end="561:43">-&gt;</operator><name pos:start="561:44" pos:end="561:51">language</name></name> <operator pos:start="561:53" pos:end="561:54">||</operator>

                <name pos:start="563:17" pos:end="563:27"><name pos:start="563:17" pos:end="563:22">trackj</name><operator pos:start="563:23" pos:end="563:24">-&gt;</operator><name pos:start="563:25" pos:end="563:27">tag</name></name> <operator pos:start="563:29" pos:end="563:30">!=</operator> <name pos:start="563:32" pos:end="563:41"><name pos:start="563:32" pos:end="563:36">track</name><operator pos:start="563:37" pos:end="563:38">-&gt;</operator><name pos:start="563:39" pos:end="563:41">tag</name></name></expr>

            )</condition><block type="pseudo" pos:start="567:17" pos:end="567:25"><block_content pos:start="567:17" pos:end="567:25">

                <continue pos:start="567:17" pos:end="567:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:42"><expr pos:start="569:13" pos:end="569:41"><name pos:start="569:13" pos:end="569:39"><name pos:start="569:13" pos:end="569:17">track</name><operator pos:start="569:18" pos:end="569:19">-&gt;</operator><name pos:start="569:20" pos:end="569:39">multichannel_as_mono</name></name><operator pos:start="569:40" pos:end="569:41">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="577:5" pos:end="577:21"><expr pos:start="577:5" pos:end="577:20"><call pos:start="577:5" pos:end="577:20"><name pos:start="577:5" pos:end="577:17">enable_tracks</name><argument_list pos:start="577:18" pos:end="577:20">(<argument pos:start="577:19" pos:end="577:19"><expr pos:start="577:19" pos:end="577:19"><name pos:start="577:19" pos:end="577:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="583:5" pos:end="591:5"><if pos:start="583:5" pos:end="591:5">if <condition pos:start="583:8" pos:end="583:32">(<expr pos:start="583:9" pos:end="583:31"><name pos:start="583:9" pos:end="583:31"><name pos:start="583:9" pos:end="583:11">mov</name><operator pos:start="583:12" pos:end="583:13">-&gt;</operator><name pos:start="583:14" pos:end="583:31">reserved_moov_size</name></name></expr>)</condition><block pos:start="583:33" pos:end="591:5">{<block_content pos:start="585:9" pos:end="589:51">

        <expr_stmt pos:start="585:9" pos:end="585:46"><expr pos:start="585:9" pos:end="585:45"><name pos:start="585:9" pos:end="585:30"><name pos:start="585:9" pos:end="585:11">mov</name><operator pos:start="585:12" pos:end="585:13">-&gt;</operator><name pos:start="585:14" pos:end="585:30">reserved_moov_pos</name></name><operator pos:start="585:31" pos:end="585:31">=</operator> <call pos:start="585:33" pos:end="585:45"><name pos:start="585:33" pos:end="585:41">avio_tell</name><argument_list pos:start="585:42" pos:end="585:45">(<argument pos:start="585:43" pos:end="585:44"><expr pos:start="585:43" pos:end="585:44"><name pos:start="585:43" pos:end="585:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="587:9" pos:end="589:51"><if pos:start="587:9" pos:end="589:51">if <condition pos:start="587:12" pos:end="587:40">(<expr pos:start="587:13" pos:end="587:39"><name pos:start="587:13" pos:end="587:35"><name pos:start="587:13" pos:end="587:15">mov</name><operator pos:start="587:16" pos:end="587:17">-&gt;</operator><name pos:start="587:18" pos:end="587:35">reserved_moov_size</name></name> <operator pos:start="587:37" pos:end="587:37">&gt;</operator> <literal type="number" pos:start="587:39" pos:end="587:39">0</literal></expr>)</condition><block type="pseudo" pos:start="589:13" pos:end="589:51"><block_content pos:start="589:13" pos:end="589:51">

            <expr_stmt pos:start="589:13" pos:end="589:51"><expr pos:start="589:13" pos:end="589:50"><call pos:start="589:13" pos:end="589:50"><name pos:start="589:13" pos:end="589:21">avio_skip</name><argument_list pos:start="589:22" pos:end="589:50">(<argument pos:start="589:23" pos:end="589:24"><expr pos:start="589:23" pos:end="589:24"><name pos:start="589:23" pos:end="589:24">pb</name></expr></argument>, <argument pos:start="589:27" pos:end="589:49"><expr pos:start="589:27" pos:end="589:49"><name pos:start="589:27" pos:end="589:49"><name pos:start="589:27" pos:end="589:29">mov</name><operator pos:start="589:30" pos:end="589:31">-&gt;</operator><name pos:start="589:32" pos:end="589:49">reserved_moov_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="595:5" pos:end="615:5"><if pos:start="595:5" pos:end="607:5">if <condition pos:start="595:8" pos:end="595:42">(<expr pos:start="595:9" pos:end="595:41"><name pos:start="595:9" pos:end="595:18"><name pos:start="595:9" pos:end="595:11">mov</name><operator pos:start="595:12" pos:end="595:13">-&gt;</operator><name pos:start="595:14" pos:end="595:18">flags</name></name> <operator pos:start="595:20" pos:end="595:20">&amp;</operator> <name pos:start="595:22" pos:end="595:41">FF_MOV_FLAG_FRAGMENT</name></expr>)</condition> <block pos:start="595:44" pos:end="607:5">{<block_content pos:start="599:9" pos:end="605:52">

        <comment type="block" pos:start="597:9" pos:end="597:71">/* If no fragmentation options have been set, set a default. */</comment>

        <if_stmt pos:start="599:9" pos:end="605:52"><if pos:start="599:9" pos:end="605:52">if <condition pos:start="599:12" pos:end="603:67">(<expr pos:start="599:13" pos:end="603:66"><operator pos:start="599:13" pos:end="599:13">!</operator><operator pos:start="599:14" pos:end="599:14">(</operator><name pos:start="599:15" pos:end="599:24"><name pos:start="599:15" pos:end="599:17">mov</name><operator pos:start="599:18" pos:end="599:19">-&gt;</operator><name pos:start="599:20" pos:end="599:24">flags</name></name> <operator pos:start="599:26" pos:end="599:26">&amp;</operator> <operator pos:start="599:28" pos:end="599:28">(</operator><name pos:start="599:29" pos:end="599:53">FF_MOV_FLAG_FRAG_KEYFRAME</name> <operator pos:start="599:55" pos:end="599:55">|</operator>

                            <name pos:start="601:29" pos:end="601:51">FF_MOV_FLAG_FRAG_CUSTOM</name><operator pos:start="601:52" pos:end="601:52">)</operator><operator pos:start="601:53" pos:end="601:53">)</operator> <operator pos:start="601:55" pos:end="601:56">&amp;&amp;</operator>

            <operator pos:start="603:13" pos:end="603:13">!</operator><name pos:start="603:14" pos:end="603:39"><name pos:start="603:14" pos:end="603:16">mov</name><operator pos:start="603:17" pos:end="603:18">-&gt;</operator><name pos:start="603:19" pos:end="603:39">max_fragment_duration</name></name> <operator pos:start="603:41" pos:end="603:42">&amp;&amp;</operator> <operator pos:start="603:44" pos:end="603:44">!</operator><name pos:start="603:45" pos:end="603:66"><name pos:start="603:45" pos:end="603:47">mov</name><operator pos:start="603:48" pos:end="603:49">-&gt;</operator><name pos:start="603:50" pos:end="603:66">max_fragment_size</name></name></expr>)</condition><block type="pseudo" pos:start="605:13" pos:end="605:52"><block_content pos:start="605:13" pos:end="605:52">

            <expr_stmt pos:start="605:13" pos:end="605:52"><expr pos:start="605:13" pos:end="605:51"><name pos:start="605:13" pos:end="605:22"><name pos:start="605:13" pos:end="605:15">mov</name><operator pos:start="605:16" pos:end="605:17">-&gt;</operator><name pos:start="605:18" pos:end="605:22">flags</name></name> <operator pos:start="605:24" pos:end="605:25">|=</operator> <name pos:start="605:27" pos:end="605:51">FF_MOV_FLAG_FRAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="607:7" pos:end="615:5">else <block pos:start="607:12" pos:end="615:5">{<block_content pos:start="609:9" pos:end="613:36">

        <if_stmt pos:start="609:9" pos:end="611:51"><if pos:start="609:9" pos:end="611:51">if <condition pos:start="609:12" pos:end="609:47">(<expr pos:start="609:13" pos:end="609:46"><name pos:start="609:13" pos:end="609:22"><name pos:start="609:13" pos:end="609:15">mov</name><operator pos:start="609:16" pos:end="609:17">-&gt;</operator><name pos:start="609:18" pos:end="609:22">flags</name></name> <operator pos:start="609:24" pos:end="609:24">&amp;</operator> <name pos:start="609:26" pos:end="609:46">FF_MOV_FLAG_FASTSTART</name></expr>)</condition><block type="pseudo" pos:start="611:13" pos:end="611:51"><block_content pos:start="611:13" pos:end="611:51">

            <expr_stmt pos:start="611:13" pos:end="611:51"><expr pos:start="611:13" pos:end="611:50"><name pos:start="611:13" pos:end="611:34"><name pos:start="611:13" pos:end="611:15">mov</name><operator pos:start="611:16" pos:end="611:17">-&gt;</operator><name pos:start="611:18" pos:end="611:34">reserved_moov_pos</name></name> <operator pos:start="611:36" pos:end="611:36">=</operator> <call pos:start="611:38" pos:end="611:50"><name pos:start="611:38" pos:end="611:46">avio_tell</name><argument_list pos:start="611:47" pos:end="611:50">(<argument pos:start="611:48" pos:end="611:49"><expr pos:start="611:48" pos:end="611:49"><name pos:start="611:48" pos:end="611:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="613:9" pos:end="613:36"><expr pos:start="613:9" pos:end="613:35"><call pos:start="613:9" pos:end="613:35"><name pos:start="613:9" pos:end="613:26">mov_write_mdat_tag</name><argument_list pos:start="613:27" pos:end="613:35">(<argument pos:start="613:28" pos:end="613:29"><expr pos:start="613:28" pos:end="613:29"><name pos:start="613:28" pos:end="613:29">pb</name></expr></argument>, <argument pos:start="613:32" pos:end="613:34"><expr pos:start="613:32" pos:end="613:34"><name pos:start="613:32" pos:end="613:34">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="619:5" pos:end="621:54"><if pos:start="619:5" pos:end="621:54">if <condition pos:start="619:8" pos:end="619:63">(<expr pos:start="619:9" pos:end="619:62"><name pos:start="619:9" pos:end="619:9">t</name> <operator pos:start="619:11" pos:end="619:11">=</operator> <call pos:start="619:13" pos:end="619:62"><name pos:start="619:13" pos:end="619:23">av_dict_get</name><argument_list pos:start="619:24" pos:end="619:62">(<argument pos:start="619:25" pos:end="619:35"><expr pos:start="619:25" pos:end="619:35"><name pos:start="619:25" pos:end="619:35"><name pos:start="619:25" pos:end="619:25">s</name><operator pos:start="619:26" pos:end="619:27">-&gt;</operator><name pos:start="619:28" pos:end="619:35">metadata</name></name></expr></argument>, <argument pos:start="619:38" pos:end="619:52"><expr pos:start="619:38" pos:end="619:52"><literal type="string" pos:start="619:38" pos:end="619:52">"creation_time"</literal></expr></argument>, <argument pos:start="619:55" pos:end="619:58"><expr pos:start="619:55" pos:end="619:58"><name pos:start="619:55" pos:end="619:58">NULL</name></expr></argument>, <argument pos:start="619:61" pos:end="619:61"><expr pos:start="619:61" pos:end="619:61"><literal type="number" pos:start="619:61" pos:end="619:61">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="621:9" pos:end="621:54"><block_content pos:start="621:9" pos:end="621:54">

        <expr_stmt pos:start="621:9" pos:end="621:54"><expr pos:start="621:9" pos:end="621:53"><name pos:start="621:9" pos:end="621:17"><name pos:start="621:9" pos:end="621:11">mov</name><operator pos:start="621:12" pos:end="621:13">-&gt;</operator><name pos:start="621:14" pos:end="621:17">time</name></name> <operator pos:start="621:19" pos:end="621:19">=</operator> <call pos:start="621:21" pos:end="621:53"><name pos:start="621:21" pos:end="621:43">ff_iso8601_to_unix_time</name><argument_list pos:start="621:44" pos:end="621:53">(<argument pos:start="621:45" pos:end="621:52"><expr pos:start="621:45" pos:end="621:52"><name pos:start="621:45" pos:end="621:52"><name pos:start="621:45" pos:end="621:45">t</name><operator pos:start="621:46" pos:end="621:47">-&gt;</operator><name pos:start="621:48" pos:end="621:52">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="623:5" pos:end="625:32"><if pos:start="623:5" pos:end="625:32">if <condition pos:start="623:8" pos:end="623:18">(<expr pos:start="623:9" pos:end="623:17"><name pos:start="623:9" pos:end="623:17"><name pos:start="623:9" pos:end="623:11">mov</name><operator pos:start="623:12" pos:end="623:13">-&gt;</operator><name pos:start="623:14" pos:end="623:17">time</name></name></expr>)</condition><block type="pseudo" pos:start="625:9" pos:end="625:32"><block_content pos:start="625:9" pos:end="625:32">

        <expr_stmt pos:start="625:9" pos:end="625:32"><expr pos:start="625:9" pos:end="625:31"><name pos:start="625:9" pos:end="625:17"><name pos:start="625:9" pos:end="625:11">mov</name><operator pos:start="625:12" pos:end="625:13">-&gt;</operator><name pos:start="625:14" pos:end="625:17">time</name></name> <operator pos:start="625:19" pos:end="625:20">+=</operator> <literal type="number" pos:start="625:22" pos:end="625:31">0x7C25B080</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="625:34" pos:end="625:60">// 1970 based -&gt; 1904 based</comment>



    <if_stmt pos:start="629:5" pos:end="633:23"><if pos:start="629:5" pos:end="633:23">if <condition pos:start="629:8" pos:end="629:27">(<expr pos:start="629:9" pos:end="629:26"><name pos:start="629:9" pos:end="629:26"><name pos:start="629:9" pos:end="629:11">mov</name><operator pos:start="629:12" pos:end="629:13">-&gt;</operator><name pos:start="629:14" pos:end="629:26">chapter_track</name></name></expr>)</condition><block type="pseudo" pos:start="631:9" pos:end="633:23"><block_content pos:start="631:9" pos:end="633:23">

        <if_stmt pos:start="631:9" pos:end="633:23"><if pos:start="631:9" pos:end="633:23">if <condition pos:start="631:12" pos:end="631:72">(<expr pos:start="631:13" pos:end="631:71"><operator pos:start="631:13" pos:end="631:13">(</operator><name pos:start="631:14" pos:end="631:16">ret</name> <operator pos:start="631:18" pos:end="631:18">=</operator> <call pos:start="631:20" pos:end="631:66"><name pos:start="631:20" pos:end="631:43">mov_create_chapter_track</name><argument_list pos:start="631:44" pos:end="631:66">(<argument pos:start="631:45" pos:end="631:45"><expr pos:start="631:45" pos:end="631:45"><name pos:start="631:45" pos:end="631:45">s</name></expr></argument>, <argument pos:start="631:48" pos:end="631:65"><expr pos:start="631:48" pos:end="631:65"><name pos:start="631:48" pos:end="631:65"><name pos:start="631:48" pos:end="631:50">mov</name><operator pos:start="631:51" pos:end="631:52">-&gt;</operator><name pos:start="631:53" pos:end="631:65">chapter_track</name></name></expr></argument>)</argument_list></call><operator pos:start="631:67" pos:end="631:67">)</operator> <operator pos:start="631:69" pos:end="631:69">&lt;</operator> <literal type="number" pos:start="631:71" pos:end="631:71">0</literal></expr>)</condition><block type="pseudo" pos:start="633:13" pos:end="633:23"><block_content pos:start="633:13" pos:end="633:23">

            <goto pos:start="633:13" pos:end="633:23">goto <name pos:start="633:18" pos:end="633:22">error</name>;</goto></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="637:5" pos:end="659:5"><if pos:start="637:5" pos:end="659:5">if <condition pos:start="637:8" pos:end="637:42">(<expr pos:start="637:9" pos:end="637:41"><name pos:start="637:9" pos:end="637:18"><name pos:start="637:9" pos:end="637:11">mov</name><operator pos:start="637:12" pos:end="637:13">-&gt;</operator><name pos:start="637:14" pos:end="637:18">flags</name></name> <operator pos:start="637:20" pos:end="637:20">&amp;</operator> <name pos:start="637:22" pos:end="637:41">FF_MOV_FLAG_RTP_HINT</name></expr>)</condition> <block pos:start="637:44" pos:end="659:5">{<block_content pos:start="641:9" pos:end="657:9">

        <comment type="block" pos:start="639:9" pos:end="639:72">/* Initialize the hint tracks for each audio and video stream */</comment>

        <for pos:start="641:9" pos:end="657:9">for <control pos:start="641:13" pos:end="641:43">(<init pos:start="641:14" pos:end="641:19"><expr pos:start="641:14" pos:end="641:18"><name pos:start="641:14" pos:end="641:14">i</name> <operator pos:start="641:16" pos:end="641:16">=</operator> <literal type="number" pos:start="641:18" pos:end="641:18">0</literal></expr>;</init> <condition pos:start="641:21" pos:end="641:38"><expr pos:start="641:21" pos:end="641:37"><name pos:start="641:21" pos:end="641:21">i</name> <operator pos:start="641:23" pos:end="641:23">&lt;</operator> <name pos:start="641:25" pos:end="641:37"><name pos:start="641:25" pos:end="641:25">s</name><operator pos:start="641:26" pos:end="641:27">-&gt;</operator><name pos:start="641:28" pos:end="641:37">nb_streams</name></name></expr>;</condition> <incr pos:start="641:40" pos:end="641:42"><expr pos:start="641:40" pos:end="641:42"><name pos:start="641:40" pos:end="641:40">i</name><operator pos:start="641:41" pos:end="641:42">++</operator></expr></incr>)</control> <block pos:start="641:45" pos:end="657:9">{<block_content pos:start="643:13" pos:end="655:13">

            <decl_stmt pos:start="643:13" pos:end="643:41"><decl pos:start="643:13" pos:end="643:40"><type pos:start="643:13" pos:end="643:22"><name pos:start="643:13" pos:end="643:20">AVStream</name> <modifier pos:start="643:22" pos:end="643:22">*</modifier></type><name pos:start="643:23" pos:end="643:24">st</name> <init pos:start="643:26" pos:end="643:40">= <expr pos:start="643:28" pos:end="643:40"><name pos:start="643:28" pos:end="643:40"><name pos:start="643:28" pos:end="643:28">s</name><operator pos:start="643:29" pos:end="643:30">-&gt;</operator><name pos:start="643:31" pos:end="643:37">streams</name><index pos:start="643:38" pos:end="643:40">[<expr pos:start="643:39" pos:end="643:39"><name pos:start="643:39" pos:end="643:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="645:13" pos:end="655:13"><if pos:start="645:13" pos:end="655:13">if <condition pos:start="645:16" pos:end="647:60">(<expr pos:start="645:17" pos:end="647:59"><name pos:start="645:17" pos:end="645:37"><name pos:start="645:17" pos:end="645:18">st</name><operator pos:start="645:19" pos:end="645:20">-&gt;</operator><name pos:start="645:21" pos:end="645:25">codec</name><operator pos:start="645:26" pos:end="645:27">-&gt;</operator><name pos:start="645:28" pos:end="645:37">codec_type</name></name> <operator pos:start="645:39" pos:end="645:40">==</operator> <name pos:start="645:42" pos:end="645:59">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="645:61" pos:end="645:62">||</operator>

                <name pos:start="647:17" pos:end="647:37"><name pos:start="647:17" pos:end="647:18">st</name><operator pos:start="647:19" pos:end="647:20">-&gt;</operator><name pos:start="647:21" pos:end="647:25">codec</name><operator pos:start="647:26" pos:end="647:27">-&gt;</operator><name pos:start="647:28" pos:end="647:37">codec_type</name></name> <operator pos:start="647:39" pos:end="647:40">==</operator> <name pos:start="647:42" pos:end="647:59">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="647:62" pos:end="655:13">{<block_content pos:start="649:17" pos:end="653:29">

                <if_stmt pos:start="649:17" pos:end="651:31"><if pos:start="649:17" pos:end="651:31">if <condition pos:start="649:20" pos:end="649:70">(<expr pos:start="649:21" pos:end="649:69"><operator pos:start="649:21" pos:end="649:21">(</operator><name pos:start="649:22" pos:end="649:24">ret</name> <operator pos:start="649:26" pos:end="649:26">=</operator> <call pos:start="649:28" pos:end="649:64"><name pos:start="649:28" pos:end="649:46">ff_mov_init_hinting</name><argument_list pos:start="649:47" pos:end="649:64">(<argument pos:start="649:48" pos:end="649:48"><expr pos:start="649:48" pos:end="649:48"><name pos:start="649:48" pos:end="649:48">s</name></expr></argument>, <argument pos:start="649:51" pos:end="649:60"><expr pos:start="649:51" pos:end="649:60"><name pos:start="649:51" pos:end="649:60">hint_track</name></expr></argument>, <argument pos:start="649:63" pos:end="649:63"><expr pos:start="649:63" pos:end="649:63"><name pos:start="649:63" pos:end="649:63">i</name></expr></argument>)</argument_list></call><operator pos:start="649:65" pos:end="649:65">)</operator> <operator pos:start="649:67" pos:end="649:67">&lt;</operator> <literal type="number" pos:start="649:69" pos:end="649:69">0</literal></expr>)</condition><block type="pseudo" pos:start="651:21" pos:end="651:31"><block_content pos:start="651:21" pos:end="651:31">

                    <goto pos:start="651:21" pos:end="651:31">goto <name pos:start="651:26" pos:end="651:30">error</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="653:17" pos:end="653:29"><expr pos:start="653:17" pos:end="653:28"><name pos:start="653:17" pos:end="653:26">hint_track</name><operator pos:start="653:27" pos:end="653:28">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="663:5" pos:end="695:5"><if pos:start="663:5" pos:end="695:5">if <condition pos:start="663:8" pos:end="663:26">(<expr pos:start="663:9" pos:end="663:25"><name pos:start="663:9" pos:end="663:25"><name pos:start="663:9" pos:end="663:11">mov</name><operator pos:start="663:12" pos:end="663:13">-&gt;</operator><name pos:start="663:14" pos:end="663:25">nb_meta_tmcd</name></name></expr>)</condition> <block pos:start="663:28" pos:end="695:5">{<block_content pos:start="667:9" pos:end="693:9">

        <comment type="block" pos:start="665:9" pos:end="665:40">/* Initialize the tmcd tracks */</comment>

        <for pos:start="667:9" pos:end="693:9">for <control pos:start="667:13" pos:end="667:43">(<init pos:start="667:14" pos:end="667:19"><expr pos:start="667:14" pos:end="667:18"><name pos:start="667:14" pos:end="667:14">i</name> <operator pos:start="667:16" pos:end="667:16">=</operator> <literal type="number" pos:start="667:18" pos:end="667:18">0</literal></expr>;</init> <condition pos:start="667:21" pos:end="667:38"><expr pos:start="667:21" pos:end="667:37"><name pos:start="667:21" pos:end="667:21">i</name> <operator pos:start="667:23" pos:end="667:23">&lt;</operator> <name pos:start="667:25" pos:end="667:37"><name pos:start="667:25" pos:end="667:25">s</name><operator pos:start="667:26" pos:end="667:27">-&gt;</operator><name pos:start="667:28" pos:end="667:37">nb_streams</name></name></expr>;</condition> <incr pos:start="667:40" pos:end="667:42"><expr pos:start="667:40" pos:end="667:42"><name pos:start="667:40" pos:end="667:40">i</name><operator pos:start="667:41" pos:end="667:42">++</operator></expr></incr>)</control> <block pos:start="667:45" pos:end="693:9">{<block_content pos:start="669:13" pos:end="691:13">

            <decl_stmt pos:start="669:13" pos:end="669:41"><decl pos:start="669:13" pos:end="669:40"><type pos:start="669:13" pos:end="669:22"><name pos:start="669:13" pos:end="669:20">AVStream</name> <modifier pos:start="669:22" pos:end="669:22">*</modifier></type><name pos:start="669:23" pos:end="669:24">st</name> <init pos:start="669:26" pos:end="669:40">= <expr pos:start="669:28" pos:end="669:40"><name pos:start="669:28" pos:end="669:40"><name pos:start="669:28" pos:end="669:28">s</name><operator pos:start="669:29" pos:end="669:30">-&gt;</operator><name pos:start="669:31" pos:end="669:37">streams</name><index pos:start="669:38" pos:end="669:40">[<expr pos:start="669:39" pos:end="669:39"><name pos:start="669:39" pos:end="669:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:27"><expr pos:start="671:13" pos:end="671:26"><name pos:start="671:13" pos:end="671:13">t</name> <operator pos:start="671:15" pos:end="671:15">=</operator> <name pos:start="671:17" pos:end="671:26">global_tcr</name></expr>;</expr_stmt>



            <if_stmt pos:start="675:13" pos:end="691:13"><if pos:start="675:13" pos:end="691:13">if <condition pos:start="675:16" pos:end="675:60">(<expr pos:start="675:17" pos:end="675:59"><name pos:start="675:17" pos:end="675:37"><name pos:start="675:17" pos:end="675:18">st</name><operator pos:start="675:19" pos:end="675:20">-&gt;</operator><name pos:start="675:21" pos:end="675:25">codec</name><operator pos:start="675:26" pos:end="675:27">-&gt;</operator><name pos:start="675:28" pos:end="675:37">codec_type</name></name> <operator pos:start="675:39" pos:end="675:40">==</operator> <name pos:start="675:42" pos:end="675:59">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="675:62" pos:end="691:13">{<block_content pos:start="677:17" pos:end="689:29">

                <if_stmt pos:start="677:17" pos:end="679:71"><if pos:start="677:17" pos:end="679:71">if <condition pos:start="677:20" pos:end="677:23">(<expr pos:start="677:21" pos:end="677:22"><operator pos:start="677:21" pos:end="677:21">!</operator><name pos:start="677:22" pos:end="677:22">t</name></expr>)</condition><block type="pseudo" pos:start="679:21" pos:end="679:71"><block_content pos:start="679:21" pos:end="679:71">

                    <expr_stmt pos:start="679:21" pos:end="679:71"><expr pos:start="679:21" pos:end="679:70"><name pos:start="679:21" pos:end="679:21">t</name> <operator pos:start="679:23" pos:end="679:23">=</operator> <call pos:start="679:25" pos:end="679:70"><name pos:start="679:25" pos:end="679:35">av_dict_get</name><argument_list pos:start="679:36" pos:end="679:70">(<argument pos:start="679:37" pos:end="679:48"><expr pos:start="679:37" pos:end="679:48"><name pos:start="679:37" pos:end="679:48"><name pos:start="679:37" pos:end="679:38">st</name><operator pos:start="679:39" pos:end="679:40">-&gt;</operator><name pos:start="679:41" pos:end="679:48">metadata</name></name></expr></argument>, <argument pos:start="679:51" pos:end="679:60"><expr pos:start="679:51" pos:end="679:60"><literal type="string" pos:start="679:51" pos:end="679:60">"timecode"</literal></expr></argument>, <argument pos:start="679:63" pos:end="679:66"><expr pos:start="679:63" pos:end="679:66"><name pos:start="679:63" pos:end="679:66">NULL</name></expr></argument>, <argument pos:start="679:69" pos:end="679:69"><expr pos:start="679:69" pos:end="679:69"><literal type="number" pos:start="679:69" pos:end="679:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="681:17" pos:end="683:29"><if pos:start="681:17" pos:end="683:29">if <condition pos:start="681:20" pos:end="681:23">(<expr pos:start="681:21" pos:end="681:22"><operator pos:start="681:21" pos:end="681:21">!</operator><name pos:start="681:22" pos:end="681:22">t</name></expr>)</condition><block type="pseudo" pos:start="683:21" pos:end="683:29"><block_content pos:start="683:21" pos:end="683:29">

                    <continue pos:start="683:21" pos:end="683:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="685:17" pos:end="687:31"><if pos:start="685:17" pos:end="687:31">if <condition pos:start="685:20" pos:end="685:86">(<expr pos:start="685:21" pos:end="685:85"><operator pos:start="685:21" pos:end="685:21">(</operator><name pos:start="685:22" pos:end="685:24">ret</name> <operator pos:start="685:26" pos:end="685:26">=</operator> <call pos:start="685:28" pos:end="685:80"><name pos:start="685:28" pos:end="685:52">mov_create_timecode_track</name><argument_list pos:start="685:53" pos:end="685:80">(<argument pos:start="685:54" pos:end="685:54"><expr pos:start="685:54" pos:end="685:54"><name pos:start="685:54" pos:end="685:54">s</name></expr></argument>, <argument pos:start="685:57" pos:end="685:66"><expr pos:start="685:57" pos:end="685:66"><name pos:start="685:57" pos:end="685:66">tmcd_track</name></expr></argument>, <argument pos:start="685:69" pos:end="685:69"><expr pos:start="685:69" pos:end="685:69"><name pos:start="685:69" pos:end="685:69">i</name></expr></argument>, <argument pos:start="685:72" pos:end="685:79"><expr pos:start="685:72" pos:end="685:79"><name pos:start="685:72" pos:end="685:79"><name pos:start="685:72" pos:end="685:72">t</name><operator pos:start="685:73" pos:end="685:74">-&gt;</operator><name pos:start="685:75" pos:end="685:79">value</name></name></expr></argument>)</argument_list></call><operator pos:start="685:81" pos:end="685:81">)</operator> <operator pos:start="685:83" pos:end="685:83">&lt;</operator> <literal type="number" pos:start="685:85" pos:end="685:85">0</literal></expr>)</condition><block type="pseudo" pos:start="687:21" pos:end="687:31"><block_content pos:start="687:21" pos:end="687:31">

                    <goto pos:start="687:21" pos:end="687:31">goto <name pos:start="687:26" pos:end="687:30">error</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="689:17" pos:end="689:29"><expr pos:start="689:17" pos:end="689:28"><name pos:start="689:17" pos:end="689:26">tmcd_track</name><operator pos:start="689:27" pos:end="689:28">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="699:5" pos:end="699:19"><expr pos:start="699:5" pos:end="699:18"><call pos:start="699:5" pos:end="699:18"><name pos:start="699:5" pos:end="699:14">avio_flush</name><argument_list pos:start="699:15" pos:end="699:18">(<argument pos:start="699:16" pos:end="699:17"><expr pos:start="699:16" pos:end="699:17"><name pos:start="699:16" pos:end="699:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="703:5" pos:end="705:41"><if pos:start="703:5" pos:end="705:41">if <condition pos:start="703:8" pos:end="703:38">(<expr pos:start="703:9" pos:end="703:37"><name pos:start="703:9" pos:end="703:18"><name pos:start="703:9" pos:end="703:11">mov</name><operator pos:start="703:12" pos:end="703:13">-&gt;</operator><name pos:start="703:14" pos:end="703:18">flags</name></name> <operator pos:start="703:20" pos:end="703:20">&amp;</operator> <name pos:start="703:22" pos:end="703:37">FF_MOV_FLAG_ISML</name></expr>)</condition><block type="pseudo" pos:start="705:9" pos:end="705:41"><block_content pos:start="705:9" pos:end="705:41">

        <expr_stmt pos:start="705:9" pos:end="705:41"><expr pos:start="705:9" pos:end="705:40"><call pos:start="705:9" pos:end="705:40"><name pos:start="705:9" pos:end="705:31">mov_write_isml_manifest</name><argument_list pos:start="705:32" pos:end="705:40">(<argument pos:start="705:33" pos:end="705:34"><expr pos:start="705:33" pos:end="705:34"><name pos:start="705:33" pos:end="705:34">pb</name></expr></argument>, <argument pos:start="705:37" pos:end="705:39"><expr pos:start="705:37" pos:end="705:39"><name pos:start="705:37" pos:end="705:39">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="709:5" pos:end="723:5"><if pos:start="709:5" pos:end="723:5">if <condition pos:start="709:8" pos:end="711:47">(<expr pos:start="709:9" pos:end="711:46"><name pos:start="709:9" pos:end="709:18"><name pos:start="709:9" pos:end="709:11">mov</name><operator pos:start="709:12" pos:end="709:13">-&gt;</operator><name pos:start="709:14" pos:end="709:18">flags</name></name> <operator pos:start="709:20" pos:end="709:20">&amp;</operator> <name pos:start="709:22" pos:end="709:43">FF_MOV_FLAG_EMPTY_MOOV</name> <operator pos:start="709:45" pos:end="709:46">&amp;&amp;</operator>

        <operator pos:start="711:9" pos:end="711:9">!</operator><operator pos:start="711:10" pos:end="711:10">(</operator><name pos:start="711:11" pos:end="711:20"><name pos:start="711:11" pos:end="711:13">mov</name><operator pos:start="711:14" pos:end="711:15">-&gt;</operator><name pos:start="711:16" pos:end="711:20">flags</name></name> <operator pos:start="711:22" pos:end="711:22">&amp;</operator> <name pos:start="711:24" pos:end="711:45">FF_MOV_FLAG_DELAY_MOOV</name><operator pos:start="711:46" pos:end="711:46">)</operator></expr>)</condition> <block pos:start="711:49" pos:end="723:5">{<block_content pos:start="713:9" pos:end="721:51">

        <if_stmt pos:start="713:9" pos:end="715:23"><if pos:start="713:9" pos:end="715:23">if <condition pos:start="713:12" pos:end="713:55">(<expr pos:start="713:13" pos:end="713:54"><operator pos:start="713:13" pos:end="713:13">(</operator><name pos:start="713:14" pos:end="713:16">ret</name> <operator pos:start="713:18" pos:end="713:18">=</operator> <call pos:start="713:20" pos:end="713:49"><name pos:start="713:20" pos:end="713:37">mov_write_moov_tag</name><argument_list pos:start="713:38" pos:end="713:49">(<argument pos:start="713:39" pos:end="713:40"><expr pos:start="713:39" pos:end="713:40"><name pos:start="713:39" pos:end="713:40">pb</name></expr></argument>, <argument pos:start="713:43" pos:end="713:45"><expr pos:start="713:43" pos:end="713:45"><name pos:start="713:43" pos:end="713:45">mov</name></expr></argument>, <argument pos:start="713:48" pos:end="713:48"><expr pos:start="713:48" pos:end="713:48"><name pos:start="713:48" pos:end="713:48">s</name></expr></argument>)</argument_list></call><operator pos:start="713:50" pos:end="713:50">)</operator> <operator pos:start="713:52" pos:end="713:52">&lt;</operator> <literal type="number" pos:start="713:54" pos:end="713:54">0</literal></expr>)</condition><block type="pseudo" pos:start="715:13" pos:end="715:23"><block_content pos:start="715:13" pos:end="715:23">

            <return pos:start="715:13" pos:end="715:23">return <expr pos:start="715:20" pos:end="715:22"><name pos:start="715:20" pos:end="715:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="717:9" pos:end="717:30"><expr pos:start="717:9" pos:end="717:29"><name pos:start="717:9" pos:end="717:25"><name pos:start="717:9" pos:end="717:11">mov</name><operator pos:start="717:12" pos:end="717:13">-&gt;</operator><name pos:start="717:14" pos:end="717:25">moov_written</name></name> <operator pos:start="717:27" pos:end="717:27">=</operator> <literal type="number" pos:start="717:29" pos:end="717:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="719:9" pos:end="721:51"><if pos:start="719:9" pos:end="721:51">if <condition pos:start="719:12" pos:end="719:47">(<expr pos:start="719:13" pos:end="719:46"><name pos:start="719:13" pos:end="719:22"><name pos:start="719:13" pos:end="719:15">mov</name><operator pos:start="719:16" pos:end="719:17">-&gt;</operator><name pos:start="719:18" pos:end="719:22">flags</name></name> <operator pos:start="719:24" pos:end="719:24">&amp;</operator> <name pos:start="719:26" pos:end="719:46">FF_MOV_FLAG_FASTSTART</name></expr>)</condition><block type="pseudo" pos:start="721:13" pos:end="721:51"><block_content pos:start="721:13" pos:end="721:51">

            <expr_stmt pos:start="721:13" pos:end="721:51"><expr pos:start="721:13" pos:end="721:50"><name pos:start="721:13" pos:end="721:34"><name pos:start="721:13" pos:end="721:15">mov</name><operator pos:start="721:16" pos:end="721:17">-&gt;</operator><name pos:start="721:18" pos:end="721:34">reserved_moov_pos</name></name> <operator pos:start="721:36" pos:end="721:36">=</operator> <call pos:start="721:38" pos:end="721:50"><name pos:start="721:38" pos:end="721:46">avio_tell</name><argument_list pos:start="721:47" pos:end="721:50">(<argument pos:start="721:48" pos:end="721:49"><expr pos:start="721:48" pos:end="721:49"><name pos:start="721:48" pos:end="721:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="727:5" pos:end="727:13">return <expr pos:start="727:12" pos:end="727:12"><literal type="number" pos:start="727:12" pos:end="727:12">0</literal></expr>;</return>

 <label pos:start="729:2" pos:end="729:7"><name pos:start="729:2" pos:end="729:6">error</name>:</label>

    <expr_stmt pos:start="731:5" pos:end="731:16"><expr pos:start="731:5" pos:end="731:15"><call pos:start="731:5" pos:end="731:15"><name pos:start="731:5" pos:end="731:12">mov_free</name><argument_list pos:start="731:13" pos:end="731:15">(<argument pos:start="731:14" pos:end="731:14"><expr pos:start="731:14" pos:end="731:14"><name pos:start="731:14" pos:end="731:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="733:5" pos:end="733:15">return <expr pos:start="733:12" pos:end="733:14"><name pos:start="733:12" pos:end="733:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
