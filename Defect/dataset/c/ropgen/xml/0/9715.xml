<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9715.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">parse_str</name><parameter_list pos:start="1:21" pos:end="1:77">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:39">StringInputVisitor</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">siv</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">name</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:69">Error</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier><modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:14">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">str</name> <init pos:start="5:15" pos:end="5:36">= <expr pos:start="5:17" pos:end="5:36"><operator pos:start="5:17" pos:end="5:17">(</operator><name pos:start="5:18" pos:end="5:21">char</name> <operator pos:start="5:23" pos:end="5:23">*</operator><operator pos:start="5:24" pos:end="5:24">)</operator> <name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:28">siv</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:36">string</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:8">long</name> <name pos:start="7:10" pos:end="7:13">long</name></type> <name pos:start="7:15" pos:end="7:19">start</name></decl>, <decl pos:start="7:22" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:13"/><name pos:start="7:22" pos:end="7:24">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Range</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">cur</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">endptr</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">siv</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">ranges</name></name></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <do pos:start="23:5" pos:end="125:18">do <block pos:start="23:8" pos:end="125:5">{<block_content pos:start="25:9" pos:end="123:9">

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:13">errno</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:13">start</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:23">strtoll</name><argument_list pos:start="27:24" pos:end="27:40">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">str</name></expr></argument>, <argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:36">endptr</name></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="123:9"><if pos:start="29:9" pos:end="119:9">if <condition pos:start="29:12" pos:end="29:39">(<expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:17">errno</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal> <operator pos:start="29:24" pos:end="29:25">&amp;&amp;</operator> <name pos:start="29:27" pos:end="29:32">endptr</name> <operator pos:start="29:34" pos:end="29:34">&gt;</operator> <name pos:start="29:36" pos:end="29:38">str</name></expr>)</condition> <block pos:start="29:41" pos:end="119:9">{<block_content pos:start="31:13" pos:end="117:13">

            <if_stmt pos:start="31:13" pos:end="117:13"><if pos:start="31:13" pos:end="45:13">if <condition pos:start="31:16" pos:end="31:32">(<expr pos:start="31:17" pos:end="31:31"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:23">endptr</name> <operator pos:start="31:25" pos:end="31:26">==</operator> <literal type="char" pos:start="31:28" pos:end="31:31">'\0'</literal></expr>)</condition> <block pos:start="31:34" pos:end="45:13">{<block_content pos:start="33:17" pos:end="43:27">

                <expr_stmt pos:start="33:17" pos:end="33:46"><expr pos:start="33:17" pos:end="33:45"><name pos:start="33:17" pos:end="33:19">cur</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:45"><name pos:start="33:23" pos:end="33:31">g_malloc0</name><argument_list pos:start="33:32" pos:end="33:45">(<argument pos:start="33:33" pos:end="33:44"><expr pos:start="33:33" pos:end="33:44"><sizeof pos:start="33:33" pos:end="33:44">sizeof<argument_list pos:start="33:39" pos:end="33:44">(<argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><operator pos:start="33:40" pos:end="33:40">*</operator><name pos:start="33:41" pos:end="33:43">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:35"><expr pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:19">cur</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:26">begin</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:34">start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:37"><expr pos:start="37:17" pos:end="37:36"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">cur</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">end</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:32">start</name> <operator pos:start="37:34" pos:end="37:34">+</operator> <literal type="number" pos:start="37:36" pos:end="37:36">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:66"><expr pos:start="39:17" pos:end="39:65"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:19">siv</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:27">ranges</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <call pos:start="39:31" pos:end="39:65"><name pos:start="39:31" pos:end="39:47">range_list_insert</name><argument_list pos:start="39:48" pos:end="39:65">(<argument pos:start="39:49" pos:end="39:59"><expr pos:start="39:49" pos:end="39:59"><name pos:start="39:49" pos:end="39:59"><name pos:start="39:49" pos:end="39:51">siv</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:59">ranges</name></name></expr></argument>, <argument pos:start="39:62" pos:end="39:64"><expr pos:start="39:62" pos:end="39:64"><name pos:start="39:62" pos:end="39:64">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:27"><expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:19">cur</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:26">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:27"><expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:19">str</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="99:13">else if <condition pos:start="45:23" pos:end="45:38">(<expr pos:start="45:24" pos:end="45:37"><operator pos:start="45:24" pos:end="45:24">*</operator><name pos:start="45:25" pos:end="45:30">endptr</name> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="char" pos:start="45:35" pos:end="45:37">'-'</literal></expr>)</condition> <block pos:start="45:40" pos:end="99:13">{<block_content pos:start="47:17" pos:end="97:17">

                <expr_stmt pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:19">str</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:28">endptr</name> <operator pos:start="47:30" pos:end="47:30">+</operator> <literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:26"><expr pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:21">errno</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:47"><expr pos:start="51:17" pos:end="51:46"><name pos:start="51:17" pos:end="51:19">end</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:46"><name pos:start="51:23" pos:end="51:29">strtoll</name><argument_list pos:start="51:30" pos:end="51:46">(<argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:33">str</name></expr></argument>, <argument pos:start="51:36" pos:end="51:42"><expr pos:start="51:36" pos:end="51:42"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:42">endptr</name></expr></argument>, <argument pos:start="51:45" pos:end="51:45"><expr pos:start="51:45" pos:end="51:45"><literal type="number" pos:start="51:45" pos:end="51:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="53:17" pos:end="97:17"><if pos:start="53:17" pos:end="93:17">if <condition pos:start="53:20" pos:end="57:42">(<expr pos:start="53:21" pos:end="57:41"><name pos:start="53:21" pos:end="53:25">errno</name> <operator pos:start="53:27" pos:end="53:28">==</operator> <literal type="number" pos:start="53:30" pos:end="53:30">0</literal> <operator pos:start="53:32" pos:end="53:33">&amp;&amp;</operator> <name pos:start="53:35" pos:end="53:40">endptr</name> <operator pos:start="53:42" pos:end="53:42">&gt;</operator> <name pos:start="53:44" pos:end="53:46">str</name> <operator pos:start="53:48" pos:end="53:49">&amp;&amp;</operator> <name pos:start="53:51" pos:end="53:55">start</name> <operator pos:start="53:57" pos:end="53:58">&lt;=</operator> <name pos:start="53:60" pos:end="53:62">end</name> <operator pos:start="53:64" pos:end="53:65">&amp;&amp;</operator>

                    <operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:26">start</name> <operator pos:start="55:28" pos:end="55:28">&gt;</operator> <name pos:start="55:30" pos:end="55:38">INT64_MAX</name> <operator pos:start="55:40" pos:end="55:40">-</operator> <literal type="number" pos:start="55:42" pos:end="55:46">65536</literal> <operator pos:start="55:48" pos:end="55:49">||</operator>

                     <name pos:start="57:22" pos:end="57:24">end</name> <operator pos:start="57:26" pos:end="57:26">&lt;</operator> <name pos:start="57:28" pos:end="57:32">start</name> <operator pos:start="57:34" pos:end="57:34">+</operator> <literal type="number" pos:start="57:36" pos:end="57:40">65536</literal><operator pos:start="57:41" pos:end="57:41">)</operator></expr>)</condition> <block pos:start="57:44" pos:end="93:17">{<block_content pos:start="59:21" pos:end="91:21">

                    <if_stmt pos:start="59:21" pos:end="91:21"><if pos:start="59:21" pos:end="73:21">if <condition pos:start="59:24" pos:end="59:40">(<expr pos:start="59:25" pos:end="59:39"><operator pos:start="59:25" pos:end="59:25">*</operator><name pos:start="59:26" pos:end="59:31">endptr</name> <operator pos:start="59:33" pos:end="59:34">==</operator> <literal type="char" pos:start="59:36" pos:end="59:39">'\0'</literal></expr>)</condition> <block pos:start="59:42" pos:end="73:21">{<block_content pos:start="61:25" pos:end="71:35">

                        <expr_stmt pos:start="61:25" pos:end="61:54"><expr pos:start="61:25" pos:end="61:53"><name pos:start="61:25" pos:end="61:27">cur</name> <operator pos:start="61:29" pos:end="61:29">=</operator> <call pos:start="61:31" pos:end="61:53"><name pos:start="61:31" pos:end="61:39">g_malloc0</name><argument_list pos:start="61:40" pos:end="61:53">(<argument pos:start="61:41" pos:end="61:52"><expr pos:start="61:41" pos:end="61:52"><sizeof pos:start="61:41" pos:end="61:52">sizeof<argument_list pos:start="61:47" pos:end="61:52">(<argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><operator pos:start="61:48" pos:end="61:48">*</operator><name pos:start="61:49" pos:end="61:51">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="63:25" pos:end="63:43"><expr pos:start="63:25" pos:end="63:42"><name pos:start="63:25" pos:end="63:34"><name pos:start="63:25" pos:end="63:27">cur</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:34">begin</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <name pos:start="63:38" pos:end="63:42">start</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="65:25" pos:end="65:43"><expr pos:start="65:25" pos:end="65:42"><name pos:start="65:25" pos:end="65:32"><name pos:start="65:25" pos:end="65:27">cur</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:32">end</name></name> <operator pos:start="65:34" pos:end="65:34">=</operator> <name pos:start="65:36" pos:end="65:38">end</name> <operator pos:start="65:40" pos:end="65:40">+</operator> <literal type="number" pos:start="65:42" pos:end="65:42">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="67:25" pos:end="67:74"><expr pos:start="67:25" pos:end="67:73"><name pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:27">siv</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:35">ranges</name></name> <operator pos:start="67:37" pos:end="67:37">=</operator> <call pos:start="67:39" pos:end="67:73"><name pos:start="67:39" pos:end="67:55">range_list_insert</name><argument_list pos:start="67:56" pos:end="67:73">(<argument pos:start="67:57" pos:end="67:67"><expr pos:start="67:57" pos:end="67:67"><name pos:start="67:57" pos:end="67:67"><name pos:start="67:57" pos:end="67:59">siv</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:67">ranges</name></name></expr></argument>, <argument pos:start="67:70" pos:end="67:72"><expr pos:start="67:70" pos:end="67:72"><name pos:start="67:70" pos:end="67:72">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="69:25" pos:end="69:35"><expr pos:start="69:25" pos:end="69:34"><name pos:start="69:25" pos:end="69:27">cur</name> <operator pos:start="69:29" pos:end="69:29">=</operator> <name pos:start="69:31" pos:end="69:34">NULL</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="71:25" pos:end="71:35"><expr pos:start="71:25" pos:end="71:34"><name pos:start="71:25" pos:end="71:27">str</name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:34">NULL</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="73:23" pos:end="87:21">else if <condition pos:start="73:31" pos:end="73:46">(<expr pos:start="73:32" pos:end="73:45"><operator pos:start="73:32" pos:end="73:32">*</operator><name pos:start="73:33" pos:end="73:38">endptr</name> <operator pos:start="73:40" pos:end="73:41">==</operator> <literal type="char" pos:start="73:43" pos:end="73:45">','</literal></expr>)</condition> <block pos:start="73:48" pos:end="87:21">{<block_content pos:start="75:25" pos:end="85:35">

                        <expr_stmt pos:start="75:25" pos:end="75:41"><expr pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:27">str</name> <operator pos:start="75:29" pos:end="75:29">=</operator> <name pos:start="75:31" pos:end="75:36">endptr</name> <operator pos:start="75:38" pos:end="75:38">+</operator> <literal type="number" pos:start="75:40" pos:end="75:40">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="77:25" pos:end="77:54"><expr pos:start="77:25" pos:end="77:53"><name pos:start="77:25" pos:end="77:27">cur</name> <operator pos:start="77:29" pos:end="77:29">=</operator> <call pos:start="77:31" pos:end="77:53"><name pos:start="77:31" pos:end="77:39">g_malloc0</name><argument_list pos:start="77:40" pos:end="77:53">(<argument pos:start="77:41" pos:end="77:52"><expr pos:start="77:41" pos:end="77:52"><sizeof pos:start="77:41" pos:end="77:52">sizeof<argument_list pos:start="77:47" pos:end="77:52">(<argument pos:start="77:48" pos:end="77:51"><expr pos:start="77:48" pos:end="77:51"><operator pos:start="77:48" pos:end="77:48">*</operator><name pos:start="77:49" pos:end="77:51">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="79:25" pos:end="79:43"><expr pos:start="79:25" pos:end="79:42"><name pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:27">cur</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:34">begin</name></name> <operator pos:start="79:36" pos:end="79:36">=</operator> <name pos:start="79:38" pos:end="79:42">start</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="81:25" pos:end="81:43"><expr pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:32"><name pos:start="81:25" pos:end="81:27">cur</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:32">end</name></name> <operator pos:start="81:34" pos:end="81:34">=</operator> <name pos:start="81:36" pos:end="81:38">end</name> <operator pos:start="81:40" pos:end="81:40">+</operator> <literal type="number" pos:start="81:42" pos:end="81:42">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:74"><expr pos:start="83:25" pos:end="83:73"><name pos:start="83:25" pos:end="83:35"><name pos:start="83:25" pos:end="83:27">siv</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:35">ranges</name></name> <operator pos:start="83:37" pos:end="83:37">=</operator> <call pos:start="83:39" pos:end="83:73"><name pos:start="83:39" pos:end="83:55">range_list_insert</name><argument_list pos:start="83:56" pos:end="83:73">(<argument pos:start="83:57" pos:end="83:67"><expr pos:start="83:57" pos:end="83:67"><name pos:start="83:57" pos:end="83:67"><name pos:start="83:57" pos:end="83:59">siv</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:67">ranges</name></name></expr></argument>, <argument pos:start="83:70" pos:end="83:72"><expr pos:start="83:70" pos:end="83:72"><name pos:start="83:70" pos:end="83:72">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="85:25" pos:end="85:35"><expr pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:27">cur</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="85:34">NULL</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="87:23" pos:end="91:21">else <block pos:start="87:28" pos:end="91:21">{<block_content pos:start="89:25" pos:end="89:35">

                        <goto pos:start="89:25" pos:end="89:35">goto <name pos:start="89:30" pos:end="89:34">error</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="93:19" pos:end="97:17">else <block pos:start="93:24" pos:end="97:17">{<block_content pos:start="95:21" pos:end="95:31">

                    <goto pos:start="95:21" pos:end="95:31">goto <name pos:start="95:26" pos:end="95:30">error</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="99:15" pos:end="113:13">else if <condition pos:start="99:23" pos:end="99:38">(<expr pos:start="99:24" pos:end="99:37"><operator pos:start="99:24" pos:end="99:24">*</operator><name pos:start="99:25" pos:end="99:30">endptr</name> <operator pos:start="99:32" pos:end="99:33">==</operator> <literal type="char" pos:start="99:35" pos:end="99:37">','</literal></expr>)</condition> <block pos:start="99:40" pos:end="113:13">{<block_content pos:start="101:17" pos:end="111:27">

                <expr_stmt pos:start="101:17" pos:end="101:33"><expr pos:start="101:17" pos:end="101:32"><name pos:start="101:17" pos:end="101:19">str</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:28">endptr</name> <operator pos:start="101:30" pos:end="101:30">+</operator> <literal type="number" pos:start="101:32" pos:end="101:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:46"><expr pos:start="103:17" pos:end="103:45"><name pos:start="103:17" pos:end="103:19">cur</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:45"><name pos:start="103:23" pos:end="103:31">g_malloc0</name><argument_list pos:start="103:32" pos:end="103:45">(<argument pos:start="103:33" pos:end="103:44"><expr pos:start="103:33" pos:end="103:44"><sizeof pos:start="103:33" pos:end="103:44">sizeof<argument_list pos:start="103:39" pos:end="103:44">(<argument pos:start="103:40" pos:end="103:43"><expr pos:start="103:40" pos:end="103:43"><operator pos:start="103:40" pos:end="103:40">*</operator><name pos:start="103:41" pos:end="103:43">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:35"><expr pos:start="105:17" pos:end="105:34"><name pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:19">cur</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:26">begin</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:34">start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:37"><expr pos:start="107:17" pos:end="107:36"><name pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:19">cur</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:24">end</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:32">start</name> <operator pos:start="107:34" pos:end="107:34">+</operator> <literal type="number" pos:start="107:36" pos:end="107:36">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:66"><expr pos:start="109:17" pos:end="109:65"><name pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:19">siv</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:27">ranges</name></name> <operator pos:start="109:29" pos:end="109:29">=</operator> <call pos:start="109:31" pos:end="109:65"><name pos:start="109:31" pos:end="109:47">range_list_insert</name><argument_list pos:start="109:48" pos:end="109:65">(<argument pos:start="109:49" pos:end="109:59"><expr pos:start="109:49" pos:end="109:59"><name pos:start="109:49" pos:end="109:59"><name pos:start="109:49" pos:end="109:51">siv</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:59">ranges</name></name></expr></argument>, <argument pos:start="109:62" pos:end="109:64"><expr pos:start="109:62" pos:end="109:64"><name pos:start="109:62" pos:end="109:64">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:27"><expr pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:19">cur</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="113:15" pos:end="117:13">else <block pos:start="113:20" pos:end="117:13">{<block_content pos:start="115:17" pos:end="115:27">

                <goto pos:start="115:17" pos:end="115:27">goto <name pos:start="115:22" pos:end="115:26">error</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="123:9">else <block pos:start="119:16" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:23">

            <goto pos:start="121:13" pos:end="121:23">goto <name pos:start="121:18" pos:end="121:22">error</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> while <condition pos:start="125:13" pos:end="125:17">(<expr pos:start="125:14" pos:end="125:16"><name pos:start="125:14" pos:end="125:16">str</name></expr>)</condition>;</do>



    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

<label pos:start="131:1" pos:end="131:6"><name pos:start="131:1" pos:end="131:5">error</name>:</label>

    <expr_stmt pos:start="133:5" pos:end="133:50"><expr pos:start="133:5" pos:end="133:49"><call pos:start="133:5" pos:end="133:49"><name pos:start="133:5" pos:end="133:18">g_list_foreach</name><argument_list pos:start="133:19" pos:end="133:49">(<argument pos:start="133:20" pos:end="133:30"><expr pos:start="133:20" pos:end="133:30"><name pos:start="133:20" pos:end="133:30"><name pos:start="133:20" pos:end="133:22">siv</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:30">ranges</name></name></expr></argument>, <argument pos:start="133:33" pos:end="133:42"><expr pos:start="133:33" pos:end="133:42"><name pos:start="133:33" pos:end="133:42">free_range</name></expr></argument>, <argument pos:start="133:45" pos:end="133:48"><expr pos:start="133:45" pos:end="133:48"><name pos:start="133:45" pos:end="133:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:29"><expr pos:start="135:5" pos:end="135:28"><call pos:start="135:5" pos:end="135:28"><name pos:start="135:5" pos:end="135:15">g_list_free</name><argument_list pos:start="135:16" pos:end="135:28">(<argument pos:start="135:17" pos:end="135:27"><expr pos:start="135:17" pos:end="135:27"><name pos:start="135:17" pos:end="135:27"><name pos:start="135:17" pos:end="135:19">siv</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:27">ranges</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:23"><expr pos:start="137:5" pos:end="137:22"><name pos:start="137:5" pos:end="137:15"><name pos:start="137:5" pos:end="137:7">siv</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:15">ranges</name></name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="141:42"><expr pos:start="139:5" pos:end="141:41"><call pos:start="139:5" pos:end="141:41"><name pos:start="139:5" pos:end="139:14">error_setg</name><argument_list pos:start="139:15" pos:end="141:41">(<argument pos:start="139:16" pos:end="139:19"><expr pos:start="139:16" pos:end="139:19"><name pos:start="139:16" pos:end="139:19">errp</name></expr></argument>, <argument pos:start="139:22" pos:end="139:49"><expr pos:start="139:22" pos:end="139:49"><name pos:start="139:22" pos:end="139:49">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="139:52" pos:end="139:71"><expr pos:start="139:52" pos:end="139:71"><ternary pos:start="139:52" pos:end="139:71"><condition pos:start="139:52" pos:end="139:57"><expr pos:start="139:52" pos:end="139:55"><name pos:start="139:52" pos:end="139:55">name</name></expr> ?</condition><then pos:start="139:59" pos:end="139:62"> <expr pos:start="139:59" pos:end="139:62"><name pos:start="139:59" pos:end="139:62">name</name></expr> </then><else pos:start="139:64" pos:end="139:71">: <expr pos:start="139:66" pos:end="139:71"><literal type="string" pos:start="139:66" pos:end="139:71">"null"</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="141:16" pos:end="141:40"><expr pos:start="141:16" pos:end="141:40"><literal type="string" pos:start="141:16" pos:end="141:40">"an int64 value or range"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:14">return <expr pos:start="143:12" pos:end="143:13"><operator pos:start="143:12" pos:end="143:12">-</operator><literal type="number" pos:start="143:13" pos:end="143:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
