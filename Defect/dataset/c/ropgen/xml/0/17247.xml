<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17247.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">fill_note_info</name><parameter_list pos:start="1:26" pos:end="3:36">(<parameter pos:start="1:27" pos:end="1:52"><decl pos:start="1:27" pos:end="1:52"><type pos:start="1:27" pos:end="1:52"><name pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:32">struct</name> <name pos:start="1:34" pos:end="1:46">elf_note_info</name></name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">info</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:14"><decl pos:start="3:5" pos:end="3:14"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:8">long</name></type> <name pos:start="3:10" pos:end="3:14">signr</name></decl></parameter>, <parameter pos:start="3:17" pos:end="3:35"><decl pos:start="3:17" pos:end="3:35"><type pos:start="3:17" pos:end="3:35"><specifier pos:start="3:17" pos:end="3:21">const</specifier> <name pos:start="3:23" pos:end="3:30">CPUState</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:35">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="9:5" pos:end="99:15">

<cpp:define pos:start="7:1" pos:end="7:18">#<cpp:directive pos:start="7:2" pos:end="7:7">define</cpp:directive> <cpp:macro pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:16">NUMNOTES</name></cpp:macro> <cpp:value pos:start="7:18" pos:end="7:18">3</cpp:value></cpp:define>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">cpu</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">TaskState</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">ts</name> <init pos:start="11:19" pos:end="11:44">= <expr pos:start="11:21" pos:end="11:44"><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:30">TaskState</name> <operator pos:start="11:32" pos:end="11:32">*</operator><operator pos:start="11:33" pos:end="11:33">)</operator><name pos:start="11:34" pos:end="11:44"><name pos:start="11:34" pos:end="11:36">env</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:44">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><operator pos:start="17:5" pos:end="17:5">(</operator><name pos:start="17:6" pos:end="17:9">void</name><operator pos:start="17:10" pos:end="17:10">)</operator> <call pos:start="17:12" pos:end="17:42"><name pos:start="17:12" pos:end="17:17">memset</name><argument_list pos:start="17:18" pos:end="17:42">(<argument pos:start="17:19" pos:end="17:22"><expr pos:start="17:19" pos:end="17:22"><name pos:start="17:19" pos:end="17:22">info</name></expr></argument>, <argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr></argument>, <argument pos:start="17:28" pos:end="17:41"><expr pos:start="17:28" pos:end="17:41"><sizeof pos:start="17:28" pos:end="17:41">sizeof <argument_list pos:start="17:35" pos:end="17:41">(<argument pos:start="17:36" pos:end="17:40"><expr pos:start="17:36" pos:end="17:40"><operator pos:start="17:36" pos:end="17:36">*</operator><name pos:start="17:37" pos:end="17:40">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><call pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:14">TAILQ_INIT</name><argument_list pos:start="21:15" pos:end="21:34">(<argument pos:start="21:16" pos:end="21:33"><expr pos:start="21:16" pos:end="21:33"><operator pos:start="21:16" pos:end="21:16">&amp;</operator><name pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:20">info</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:33">thread_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:8">info</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:15">notes</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:69"><name pos:start="25:19" pos:end="25:30">qemu_mallocz</name><argument_list pos:start="25:31" pos:end="25:69">(<argument pos:start="25:32" pos:end="25:68"><expr pos:start="25:32" pos:end="25:68"><name pos:start="25:32" pos:end="25:39">NUMNOTES</name> <operator pos:start="25:41" pos:end="25:41">*</operator> <sizeof pos:start="25:43" pos:end="25:68">sizeof <argument_list pos:start="25:50" pos:end="25:68">(<argument pos:start="25:51" pos:end="25:67"><expr pos:start="25:51" pos:end="25:67">struct <name pos:start="25:58" pos:end="25:67">memelfnote</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:25"><if pos:start="27:5" pos:end="29:25">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:12">info</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:19">notes</name></name> <operator pos:start="27:21" pos:end="27:22">==</operator> <name pos:start="27:24" pos:end="27:27">NULL</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:25"><block_content pos:start="29:9" pos:end="29:25">

        <return pos:start="29:9" pos:end="29:25">return <expr pos:start="29:16" pos:end="29:24"><operator pos:start="29:16" pos:end="29:16">(</operator><operator pos:start="29:17" pos:end="29:17">-</operator><name pos:start="29:18" pos:end="29:23">ENOMEM</name><operator pos:start="29:24" pos:end="29:24">)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:60"><expr pos:start="31:5" pos:end="31:59"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:8">info</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:18">prstatus</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:59"><name pos:start="31:22" pos:end="31:33">qemu_mallocz</name><argument_list pos:start="31:34" pos:end="31:59">(<argument pos:start="31:35" pos:end="31:58"><expr pos:start="31:35" pos:end="31:58"><sizeof pos:start="31:35" pos:end="31:58">sizeof <argument_list pos:start="31:42" pos:end="31:58">(<argument pos:start="31:43" pos:end="31:57"><expr pos:start="31:43" pos:end="31:57"><operator pos:start="31:43" pos:end="31:43">*</operator><name pos:start="31:44" pos:end="31:57"><name pos:start="31:44" pos:end="31:47">info</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:57">prstatus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:25"><if pos:start="33:5" pos:end="35:25">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:12">info</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:22">prstatus</name></name> <operator pos:start="33:24" pos:end="33:25">==</operator> <name pos:start="33:27" pos:end="33:30">NULL</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:25"><block_content pos:start="35:9" pos:end="35:25">

        <return pos:start="35:9" pos:end="35:25">return <expr pos:start="35:16" pos:end="35:24"><operator pos:start="35:16" pos:end="35:16">(</operator><operator pos:start="35:17" pos:end="35:17">-</operator><name pos:start="35:18" pos:end="35:23">ENOMEM</name><operator pos:start="35:24" pos:end="35:24">)</operator></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:8">info</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:16">psinfo</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:55"><name pos:start="37:20" pos:end="37:31">qemu_mallocz</name><argument_list pos:start="37:32" pos:end="37:55">(<argument pos:start="37:33" pos:end="37:54"><expr pos:start="37:33" pos:end="37:54"><sizeof pos:start="37:33" pos:end="37:54">sizeof <argument_list pos:start="37:40" pos:end="37:54">(<argument pos:start="37:41" pos:end="37:53"><expr pos:start="37:41" pos:end="37:53"><operator pos:start="37:41" pos:end="37:41">*</operator><name pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:45">info</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:53">psinfo</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:25"><if pos:start="39:5" pos:end="41:25">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:12">info</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:22">prstatus</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <name pos:start="39:27" pos:end="39:30">NULL</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:25"><block_content pos:start="41:9" pos:end="41:25">

        <return pos:start="41:9" pos:end="41:25">return <expr pos:start="41:16" pos:end="41:24"><operator pos:start="41:16" pos:end="41:16">(</operator><operator pos:start="41:17" pos:end="41:17">-</operator><name pos:start="41:18" pos:end="41:23">ENOMEM</name><operator pos:start="41:24" pos:end="41:24">)</operator></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="51:7">/*

     * First fill in status (and registers) of current thread

     * including process info &amp; aux vector.

     */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:17">fill_prstatus</name><argument_list pos:start="53:18" pos:end="53:44">(<argument pos:start="53:19" pos:end="53:32"><expr pos:start="53:19" pos:end="53:32"><name pos:start="53:19" pos:end="53:32"><name pos:start="53:19" pos:end="53:22">info</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:32">prstatus</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:36"><expr pos:start="53:35" pos:end="53:36"><name pos:start="53:35" pos:end="53:36">ts</name></expr></argument>, <argument pos:start="53:39" pos:end="53:43"><expr pos:start="53:39" pos:end="53:43"><name pos:start="53:39" pos:end="53:43">signr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><call pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:22">elf_core_copy_regs</name><argument_list pos:start="55:23" pos:end="55:52">(<argument pos:start="55:24" pos:end="55:46"><expr pos:start="55:24" pos:end="55:46"><operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:46"><name pos:start="55:25" pos:end="55:28">info</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:38">prstatus</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:46">pr_reg</name></name></expr></argument>, <argument pos:start="55:49" pos:end="55:51"><expr pos:start="55:49" pos:end="55:51"><name pos:start="55:49" pos:end="55:51">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:50"><expr pos:start="57:5" pos:end="59:49"><call pos:start="57:5" pos:end="59:49"><name pos:start="57:5" pos:end="57:13">fill_note</name><argument_list pos:start="57:14" pos:end="59:49">(<argument pos:start="57:15" pos:end="57:29"><expr pos:start="57:15" pos:end="57:29"><operator pos:start="57:15" pos:end="57:15">&amp;</operator><name pos:start="57:16" pos:end="57:29"><name pos:start="57:16" pos:end="57:19">info</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:26">notes</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:32" pos:end="57:37"><expr pos:start="57:32" pos:end="57:37"><literal type="string" pos:start="57:32" pos:end="57:37">"CORE"</literal></expr></argument>, <argument pos:start="57:40" pos:end="57:50"><expr pos:start="57:40" pos:end="57:50"><name pos:start="57:40" pos:end="57:50">NT_PRSTATUS</name></expr></argument>,

        <argument pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:32"><sizeof pos:start="59:9" pos:end="59:32">sizeof <argument_list pos:start="59:16" pos:end="59:32">(<argument pos:start="59:17" pos:end="59:31"><expr pos:start="59:17" pos:end="59:31"><operator pos:start="59:17" pos:end="59:17">*</operator><name pos:start="59:18" pos:end="59:31"><name pos:start="59:18" pos:end="59:21">info</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">prstatus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="59:35" pos:end="59:48"><expr pos:start="59:35" pos:end="59:48"><name pos:start="59:35" pos:end="59:48"><name pos:start="59:35" pos:end="59:38">info</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:48">prstatus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><call pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:15">fill_psinfo</name><argument_list pos:start="61:16" pos:end="61:33">(<argument pos:start="61:17" pos:end="61:28"><expr pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:20">info</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:28">psinfo</name></name></expr></argument>, <argument pos:start="61:31" pos:end="61:32"><expr pos:start="61:31" pos:end="61:32"><name pos:start="61:31" pos:end="61:32">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:46"><expr pos:start="63:5" pos:end="65:45"><call pos:start="63:5" pos:end="65:45"><name pos:start="63:5" pos:end="63:13">fill_note</name><argument_list pos:start="63:14" pos:end="65:45">(<argument pos:start="63:15" pos:end="63:29"><expr pos:start="63:15" pos:end="63:29"><operator pos:start="63:15" pos:end="63:15">&amp;</operator><name pos:start="63:16" pos:end="63:29"><name pos:start="63:16" pos:end="63:19">info</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:26">notes</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><literal type="string" pos:start="63:32" pos:end="63:37">"CORE"</literal></expr></argument>, <argument pos:start="63:40" pos:end="63:50"><expr pos:start="63:40" pos:end="63:50"><name pos:start="63:40" pos:end="63:50">NT_PRPSINFO</name></expr></argument>,

        <argument pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:30"><sizeof pos:start="65:9" pos:end="65:30">sizeof <argument_list pos:start="65:16" pos:end="65:30">(<argument pos:start="65:17" pos:end="65:29"><expr pos:start="65:17" pos:end="65:29"><operator pos:start="65:17" pos:end="65:17">*</operator><name pos:start="65:18" pos:end="65:29"><name pos:start="65:18" pos:end="65:21">info</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:29">psinfo</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:33" pos:end="65:44"><expr pos:start="65:33" pos:end="65:44"><name pos:start="65:33" pos:end="65:44"><name pos:start="65:33" pos:end="65:36">info</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:44">psinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><call pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:18">fill_auxv_note</name><argument_list pos:start="67:19" pos:end="67:39">(<argument pos:start="67:20" pos:end="67:34"><expr pos:start="67:20" pos:end="67:34"><operator pos:start="67:20" pos:end="67:20">&amp;</operator><name pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:24">info</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">notes</name><index pos:start="67:32" pos:end="67:34">[<expr pos:start="67:33" pos:end="67:33"><literal type="number" pos:start="67:33" pos:end="67:33">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:37" pos:end="67:38"><expr pos:start="67:37" pos:end="67:38"><name pos:start="67:37" pos:end="67:38">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:8">info</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:17">numnote</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:21">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:8">info</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:20">notes_size</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="77:55">for <control pos:start="75:9" pos:end="75:39">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:34"><expr pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <name pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:24">info</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:33">numnote</name></name></expr>;</condition> <incr pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:36">i</name><operator pos:start="75:37" pos:end="75:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:9" pos:end="77:55"><block_content pos:start="77:9" pos:end="77:55">

        <expr_stmt pos:start="77:9" pos:end="77:55"><expr pos:start="77:9" pos:end="77:54"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:12">info</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:24">notes_size</name></name> <operator pos:start="77:26" pos:end="77:27">+=</operator> <call pos:start="77:29" pos:end="77:54"><name pos:start="77:29" pos:end="77:37">note_size</name><argument_list pos:start="77:38" pos:end="77:54">(<argument pos:start="77:39" pos:end="77:53"><expr pos:start="77:39" pos:end="77:53"><operator pos:start="77:39" pos:end="77:39">&amp;</operator><name pos:start="77:40" pos:end="77:53"><name pos:start="77:40" pos:end="77:43">info</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:50">notes</name><index pos:start="77:51" pos:end="77:53">[<expr pos:start="77:52" pos:end="77:52"><name pos:start="77:52" pos:end="77:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="81:5" pos:end="81:45">/* read and fill status of all threads */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:20"><expr pos:start="83:5" pos:end="83:19"><call pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:17">cpu_list_lock</name><argument_list pos:start="83:18" pos:end="83:19">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="93:5">for <control pos:start="85:9" pos:end="85:59">(<init pos:start="85:10" pos:end="85:25"><expr pos:start="85:10" pos:end="85:24"><name pos:start="85:10" pos:end="85:12">cpu</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:24">first_cpu</name></expr>;</init> <condition pos:start="85:27" pos:end="85:38"><expr pos:start="85:27" pos:end="85:37"><name pos:start="85:27" pos:end="85:29">cpu</name> <operator pos:start="85:31" pos:end="85:32">!=</operator> <name pos:start="85:34" pos:end="85:37">NULL</name></expr>;</condition> <incr pos:start="85:40" pos:end="85:58"><expr pos:start="85:40" pos:end="85:58"><name pos:start="85:40" pos:end="85:42">cpu</name> <operator pos:start="85:44" pos:end="85:44">=</operator> <name pos:start="85:46" pos:end="85:58"><name pos:start="85:46" pos:end="85:48">cpu</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="85:61" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:36">

        <if_stmt pos:start="87:9" pos:end="89:21"><if pos:start="87:9" pos:end="89:21">if <condition pos:start="87:12" pos:end="87:30">(<expr pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:15">cpu</name> <operator pos:start="87:17" pos:end="87:18">==</operator> <name pos:start="87:20" pos:end="87:29">thread_env</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:21"><block_content pos:start="89:13" pos:end="89:21">

            <continue pos:start="89:13" pos:end="89:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:36"><expr pos:start="91:9" pos:end="91:35"><call pos:start="91:9" pos:end="91:35"><name pos:start="91:9" pos:end="91:24">fill_thread_info</name><argument_list pos:start="91:25" pos:end="91:35">(<argument pos:start="91:26" pos:end="91:29"><expr pos:start="91:26" pos:end="91:29"><name pos:start="91:26" pos:end="91:29">info</name></expr></argument>, <argument pos:start="91:32" pos:end="91:34"><expr pos:start="91:32" pos:end="91:34"><name pos:start="91:32" pos:end="91:34">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="95:22"><expr pos:start="95:5" pos:end="95:21"><call pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:19">cpu_list_unlock</name><argument_list pos:start="95:20" pos:end="95:21">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:15">return <expr pos:start="99:12" pos:end="99:14"><operator pos:start="99:12" pos:end="99:12">(</operator><literal type="number" pos:start="99:13" pos:end="99:13">0</literal><operator pos:start="99:14" pos:end="99:14">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
