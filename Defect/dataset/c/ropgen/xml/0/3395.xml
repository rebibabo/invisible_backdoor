<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3395.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">read_restart_header</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">MLPDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">m</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:65">GetBitContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">gbp</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:44">uint8_t</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">buf</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:59">unsigned</name> <name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">substr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="325:1">{<block_content pos:start="7:5" pos:end="323:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SubStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:21">m</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">substream</name><index pos:start="7:33" pos:end="7:40">[<expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">substr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:19">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">sync_word</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:22">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:20">checksum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:26">lossless_check</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">start_count</name> <init pos:start="17:21" pos:end="17:41">= <expr pos:start="17:23" pos:end="17:41"><call pos:start="17:23" pos:end="17:41"><name pos:start="17:23" pos:end="17:36">get_bits_count</name><argument_list pos:start="17:37" pos:end="17:41">(<argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">gbp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="23:61"><decl pos:start="19:5" pos:end="23:60"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:32">max_matrix_channel</name> <init pos:start="19:34" pos:end="23:60">= <expr pos:start="19:36" pos:end="23:60"><ternary pos:start="19:36" pos:end="23:60"><condition pos:start="19:36" pos:end="21:34"><expr pos:start="19:36" pos:end="19:69"><name pos:start="19:36" pos:end="19:53"><name pos:start="19:36" pos:end="19:36">m</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:43">avctx</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:53">codec_id</name></name> <operator pos:start="19:55" pos:end="19:56">==</operator> <name pos:start="19:58" pos:end="19:69">CODEC_ID_MLP</name></expr>

                                 ?</condition><then pos:start="21:36" pos:end="21:57"> <expr pos:start="21:36" pos:end="21:57"><name pos:start="21:36" pos:end="21:57">MAX_MATRIX_CHANNEL_MLP</name></expr>

                                 </then><else pos:start="23:34" pos:end="23:60">: <expr pos:start="23:36" pos:end="23:60"><name pos:start="23:36" pos:end="23:60">MAX_MATRIX_CHANNEL_TRUEHD</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:13">sync_word</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:24">get_bits</name><argument_list pos:start="27:25" pos:end="27:33">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">gbp</name></expr></argument>, <argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><literal type="number" pos:start="27:31" pos:end="27:32">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:17">sync_word</name> <operator pos:start="31:19" pos:end="31:20">!=</operator> <literal type="number" pos:start="31:22" pos:end="31:27">0x31ea</literal> <operator pos:start="31:29" pos:end="31:30">&gt;&gt;</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>)</condition> <block pos:start="31:35" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:35">

        <expr_stmt pos:start="33:9" pos:end="35:74"><expr pos:start="33:9" pos:end="35:73"><call pos:start="33:9" pos:end="35:73"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:73">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">m</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:61"><expr pos:start="35:16" pos:end="35:61"><literal type="string" pos:start="35:16" pos:end="35:61">"restart header sync incorrect (got 0x%04x)\n"</literal></expr></argument>, <argument pos:start="35:64" pos:end="35:72"><expr pos:start="35:64" pos:end="35:72"><name pos:start="35:64" pos:end="35:72">sync_word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:35">return <expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:17">noise_type</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:34"><name pos:start="43:21" pos:end="43:29">get_bits1</name><argument_list pos:start="43:30" pos:end="43:34">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">gbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:60">(<expr pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:9">m</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:26">codec_id</name></name> <operator pos:start="47:28" pos:end="47:29">==</operator> <name pos:start="47:31" pos:end="47:42">CODEC_ID_MLP</name> <operator pos:start="47:44" pos:end="47:45">&amp;&amp;</operator> <name pos:start="47:47" pos:end="47:59"><name pos:start="47:47" pos:end="47:47">s</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:59">noise_type</name></name></expr>)</condition> <block pos:start="47:62" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:76"><expr pos:start="49:9" pos:end="49:75"><call pos:start="49:9" pos:end="49:75"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:75">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">m</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:74"><expr pos:start="49:40" pos:end="49:74"><literal type="string" pos:start="49:40" pos:end="49:74">"MLP must have 0x31ea sync word.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><call pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:13">skip_bits</name><argument_list pos:start="57:14" pos:end="57:22">(<argument pos:start="57:15" pos:end="57:17"><expr pos:start="57:15" pos:end="57:17"><name pos:start="57:15" pos:end="57:17">gbp</name></expr></argument>, <argument pos:start="57:20" pos:end="57:21"><expr pos:start="57:20" pos:end="57:21"><literal type="number" pos:start="57:20" pos:end="57:21">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:25" pos:end="57:46">/* Output timestamp */</comment>



    <expr_stmt pos:start="61:5" pos:end="61:45"><expr pos:start="61:5" pos:end="61:44"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:18">min_channel</name></name>        <operator pos:start="61:27" pos:end="61:27">=</operator> <call pos:start="61:29" pos:end="61:44"><name pos:start="61:29" pos:end="61:36">get_bits</name><argument_list pos:start="61:37" pos:end="61:44">(<argument pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:40">gbp</name></expr></argument>, <argument pos:start="61:43" pos:end="61:43"><expr pos:start="61:43" pos:end="61:43"><literal type="number" pos:start="61:43" pos:end="61:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:18">max_channel</name></name>        <operator pos:start="63:27" pos:end="63:27">=</operator> <call pos:start="63:29" pos:end="63:44"><name pos:start="63:29" pos:end="63:36">get_bits</name><argument_list pos:start="63:37" pos:end="63:44">(<argument pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:40">gbp</name></expr></argument>, <argument pos:start="63:43" pos:end="63:43"><expr pos:start="63:43" pos:end="63:43"><literal type="number" pos:start="63:43" pos:end="63:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:25">max_matrix_channel</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <call pos:start="65:29" pos:end="65:44"><name pos:start="65:29" pos:end="65:36">get_bits</name><argument_list pos:start="65:37" pos:end="65:44">(<argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:40">gbp</name></expr></argument>, <argument pos:start="65:43" pos:end="65:43"><expr pos:start="65:43" pos:end="65:43"><literal type="number" pos:start="65:43" pos:end="65:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:51">(<expr pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:29">max_matrix_channel</name></name> <operator pos:start="69:31" pos:end="69:31">&gt;</operator> <name pos:start="69:33" pos:end="69:50">max_matrix_channel</name></expr>)</condition> <block pos:start="69:53" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:35">

        <expr_stmt pos:start="71:9" pos:end="75:35"><expr pos:start="71:9" pos:end="75:34"><call pos:start="71:9" pos:end="75:34"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="75:34">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">m</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="73:16" pos:end="73:64"><expr pos:start="73:16" pos:end="73:64"><literal type="string" pos:start="73:16" pos:end="73:64">"Max matrix channel cannot be greater than %d.\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:33"><expr pos:start="75:16" pos:end="75:33"><name pos:start="75:16" pos:end="75:33">max_matrix_channel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:35">return <expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:48">(<expr pos:start="83:9" pos:end="83:47"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:22">max_channel</name></name> <operator pos:start="83:24" pos:end="83:25">!=</operator> <name pos:start="83:27" pos:end="83:47"><name pos:start="83:27" pos:end="83:27">s</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:47">max_matrix_channel</name></name></expr>)</condition> <block pos:start="83:50" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:35">

        <expr_stmt pos:start="85:9" pos:end="87:66"><expr pos:start="85:9" pos:end="87:65"><call pos:start="85:9" pos:end="87:65"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="87:65">(<argument pos:start="85:16" pos:end="85:23"><expr pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:16">m</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:23">avctx</name></name></expr></argument>, <argument pos:start="85:26" pos:end="85:37"><expr pos:start="85:26" pos:end="85:37"><name pos:start="85:26" pos:end="85:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="87:16" pos:end="87:64"><expr pos:start="87:16" pos:end="87:64"><literal type="string" pos:start="87:16" pos:end="87:64">"Max channel must be equal max matrix channel.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:35">return <expr pos:start="89:16" pos:end="89:34"><name pos:start="89:16" pos:end="89:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="97:55">/* This should happen for TrueHD streams with &gt;6 channels and MLP's noise

     * type. It is not yet known if this is allowed. */</comment>

    <if_stmt pos:start="99:5" pos:end="109:5"><if pos:start="99:5" pos:end="109:5">if <condition pos:start="99:8" pos:end="99:66">(<expr pos:start="99:9" pos:end="99:65"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:22">max_channel</name></name> <operator pos:start="99:24" pos:end="99:24">&gt;</operator> <name pos:start="99:26" pos:end="99:47">MAX_MATRIX_CHANNEL_MLP</name> <operator pos:start="99:49" pos:end="99:50">&amp;&amp;</operator> <operator pos:start="99:52" pos:end="99:52">!</operator><name pos:start="99:53" pos:end="99:65"><name pos:start="99:53" pos:end="99:53">s</name><operator pos:start="99:54" pos:end="99:55">-&gt;</operator><name pos:start="99:56" pos:end="99:65">noise_type</name></name></expr>)</condition> <block pos:start="99:68" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:36">

        <expr_stmt pos:start="101:9" pos:end="105:56"><expr pos:start="101:9" pos:end="105:55"><call pos:start="101:9" pos:end="105:55"><name pos:start="101:9" pos:end="101:29">av_log_ask_for_sample</name><argument_list pos:start="101:30" pos:end="105:55">(<argument pos:start="101:31" pos:end="101:38"><expr pos:start="101:31" pos:end="101:38"><name pos:start="101:31" pos:end="101:38"><name pos:start="101:31" pos:end="101:31">m</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:38">avctx</name></name></expr></argument>,

               <argument pos:start="103:16" pos:end="105:34"><expr pos:start="103:16" pos:end="105:34"><literal type="string" pos:start="103:16" pos:end="103:76">"Number of channels %d is larger than the maximum supported "</literal>

               <literal type="string" pos:start="105:16" pos:end="105:34">"by the decoder.\n"</literal></expr></argument>, <argument pos:start="105:37" pos:end="105:54"><expr pos:start="105:37" pos:end="105:54"><name pos:start="105:37" pos:end="105:50"><name pos:start="105:37" pos:end="105:37">s</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:50">max_channel</name></name> <operator pos:start="105:52" pos:end="105:52">+</operator> <literal type="number" pos:start="105:54" pos:end="105:54">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:36">return <expr pos:start="107:16" pos:end="107:35"><name pos:start="107:16" pos:end="107:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:40">(<expr pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:22">min_channel</name></name> <operator pos:start="113:24" pos:end="113:24">&gt;</operator> <name pos:start="113:26" pos:end="113:39"><name pos:start="113:26" pos:end="113:26">s</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:39">max_channel</name></name></expr>)</condition> <block pos:start="113:42" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:35">

        <expr_stmt pos:start="115:9" pos:end="117:78"><expr pos:start="115:9" pos:end="117:77"><call pos:start="115:9" pos:end="117:77"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="117:77">(<argument pos:start="115:16" pos:end="115:23"><expr pos:start="115:16" pos:end="115:23"><name pos:start="115:16" pos:end="115:23"><name pos:start="115:16" pos:end="115:16">m</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:23">avctx</name></name></expr></argument>, <argument pos:start="115:26" pos:end="115:37"><expr pos:start="115:26" pos:end="115:37"><name pos:start="115:26" pos:end="115:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="117:16" pos:end="117:76"><expr pos:start="117:16" pos:end="117:76"><literal type="string" pos:start="117:16" pos:end="117:76">"Substream min channel cannot be greater than max channel.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:35">return <expr pos:start="119:16" pos:end="119:34"><name pos:start="119:16" pos:end="119:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="141:5"><if pos:start="125:5" pos:end="141:5">if <condition pos:start="125:8" pos:end="129:45">(<expr pos:start="125:9" pos:end="129:44"><name pos:start="125:9" pos:end="125:34"><name pos:start="125:9" pos:end="125:9">m</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:16">avctx</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:34">request_channels</name></name> <operator pos:start="125:36" pos:end="125:36">&gt;</operator> <literal type="number" pos:start="125:38" pos:end="125:38">0</literal>

        <operator pos:start="127:9" pos:end="127:10">&amp;&amp;</operator> <name pos:start="127:12" pos:end="127:25"><name pos:start="127:12" pos:end="127:12">s</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:25">max_channel</name></name> <operator pos:start="127:27" pos:end="127:27">+</operator> <literal type="number" pos:start="127:29" pos:end="127:29">1</literal> <operator pos:start="127:31" pos:end="127:32">&gt;=</operator> <name pos:start="127:34" pos:end="127:59"><name pos:start="127:34" pos:end="127:34">m</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:41">avctx</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:59">request_channels</name></name>

        <operator pos:start="129:9" pos:end="129:10">&amp;&amp;</operator> <name pos:start="129:12" pos:end="129:17">substr</name> <operator pos:start="129:19" pos:end="129:19">&lt;</operator> <name pos:start="129:21" pos:end="129:44"><name pos:start="129:21" pos:end="129:21">m</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:44">max_decoded_substream</name></name></expr>)</condition> <block pos:start="129:47" pos:end="141:5">{<block_content pos:start="131:9" pos:end="139:42">

        <expr_stmt pos:start="131:9" pos:end="137:43"><expr pos:start="131:9" pos:end="137:42"><call pos:start="131:9" pos:end="137:42"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="137:42">(<argument pos:start="131:16" pos:end="131:23"><expr pos:start="131:16" pos:end="131:23"><name pos:start="131:16" pos:end="131:23"><name pos:start="131:16" pos:end="131:16">m</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:23">avctx</name></name></expr></argument>, <argument pos:start="131:26" pos:end="131:37"><expr pos:start="131:26" pos:end="131:37"><name pos:start="131:26" pos:end="131:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="133:16" pos:end="135:54"><expr pos:start="133:16" pos:end="135:54"><literal type="string" pos:start="133:16" pos:end="133:66">"Extracting %d channel downmix from substream %d. "</literal>

               <literal type="string" pos:start="135:16" pos:end="135:54">"Further substreams will be skipped.\n"</literal></expr></argument>,

               <argument pos:start="137:16" pos:end="137:33"><expr pos:start="137:16" pos:end="137:33"><name pos:start="137:16" pos:end="137:29"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:29">max_channel</name></name> <operator pos:start="137:31" pos:end="137:31">+</operator> <literal type="number" pos:start="137:33" pos:end="137:33">1</literal></expr></argument>, <argument pos:start="137:36" pos:end="137:41"><expr pos:start="137:36" pos:end="137:41"><name pos:start="137:36" pos:end="137:41">substr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:42"><expr pos:start="139:9" pos:end="139:41"><name pos:start="139:9" pos:end="139:32"><name pos:start="139:9" pos:end="139:9">m</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:32">max_decoded_substream</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:41">substr</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:41"><expr pos:start="145:5" pos:end="145:40"><name pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:18">noise_shift</name></name>   <operator pos:start="145:22" pos:end="145:22">=</operator> <call pos:start="145:24" pos:end="145:40"><name pos:start="145:24" pos:end="145:31">get_bits</name><argument_list pos:start="145:32" pos:end="145:40">(<argument pos:start="145:33" pos:end="145:35"><expr pos:start="145:33" pos:end="145:35"><name pos:start="145:33" pos:end="145:35">gbp</name></expr></argument>,  <argument pos:start="145:39" pos:end="145:39"><expr pos:start="145:39" pos:end="145:39"><literal type="number" pos:start="145:39" pos:end="145:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:41"><expr pos:start="147:5" pos:end="147:40"><name pos:start="147:5" pos:end="147:20"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:20">noisegen_seed</name></name> <operator pos:start="147:22" pos:end="147:22">=</operator> <call pos:start="147:24" pos:end="147:40"><name pos:start="147:24" pos:end="147:31">get_bits</name><argument_list pos:start="147:32" pos:end="147:40">(<argument pos:start="147:33" pos:end="147:35"><expr pos:start="147:33" pos:end="147:35"><name pos:start="147:33" pos:end="147:35">gbp</name></expr></argument>, <argument pos:start="147:38" pos:end="147:39"><expr pos:start="147:38" pos:end="147:39"><literal type="number" pos:start="147:38" pos:end="147:39">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:23"><expr pos:start="151:5" pos:end="151:22"><call pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:13">skip_bits</name><argument_list pos:start="151:14" pos:end="151:22">(<argument pos:start="151:15" pos:end="151:17"><expr pos:start="151:15" pos:end="151:17"><name pos:start="151:15" pos:end="151:17">gbp</name></expr></argument>, <argument pos:start="151:20" pos:end="151:21"><expr pos:start="151:20" pos:end="151:21"><literal type="number" pos:start="151:20" pos:end="151:21">19</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:43"><expr pos:start="155:5" pos:end="155:42"><name pos:start="155:5" pos:end="155:25"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:25">data_check_present</name></name> <operator pos:start="155:27" pos:end="155:27">=</operator> <call pos:start="155:29" pos:end="155:42"><name pos:start="155:29" pos:end="155:37">get_bits1</name><argument_list pos:start="155:38" pos:end="155:42">(<argument pos:start="155:39" pos:end="155:41"><expr pos:start="155:39" pos:end="155:41"><name pos:start="155:39" pos:end="155:41">gbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:38"><expr pos:start="157:5" pos:end="157:37"><name pos:start="157:5" pos:end="157:18">lossless_check</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <call pos:start="157:22" pos:end="157:37"><name pos:start="157:22" pos:end="157:29">get_bits</name><argument_list pos:start="157:30" pos:end="157:37">(<argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">gbp</name></expr></argument>, <argument pos:start="157:36" pos:end="157:36"><expr pos:start="157:36" pos:end="157:36"><literal type="number" pos:start="157:36" pos:end="157:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="173:5"><if pos:start="159:5" pos:end="173:5">if <condition pos:start="159:8" pos:end="161:48">(<expr pos:start="159:9" pos:end="161:47"><name pos:start="159:9" pos:end="159:14">substr</name> <operator pos:start="159:16" pos:end="159:17">==</operator> <name pos:start="159:19" pos:end="159:42"><name pos:start="159:19" pos:end="159:19">m</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:42">max_decoded_substream</name></name>

        <operator pos:start="161:9" pos:end="161:10">&amp;&amp;</operator> <name pos:start="161:12" pos:end="161:33"><name pos:start="161:12" pos:end="161:12">s</name><operator pos:start="161:13" pos:end="161:14">-&gt;</operator><name pos:start="161:15" pos:end="161:33">lossless_check_data</name></name> <operator pos:start="161:35" pos:end="161:36">!=</operator> <literal type="number" pos:start="161:38" pos:end="161:47">0xffffffff</literal></expr>)</condition> <block pos:start="161:50" pos:end="173:5">{<block_content pos:start="163:9" pos:end="171:40">

        <expr_stmt pos:start="163:9" pos:end="163:50"><expr pos:start="163:9" pos:end="163:49"><name pos:start="163:9" pos:end="163:11">tmp</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:49"><name pos:start="163:15" pos:end="163:25">xor_32_to_8</name><argument_list pos:start="163:26" pos:end="163:49">(<argument pos:start="163:27" pos:end="163:48"><expr pos:start="163:27" pos:end="163:48"><name pos:start="163:27" pos:end="163:48"><name pos:start="163:27" pos:end="163:27">s</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:48">lossless_check_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:40"><if pos:start="165:9" pos:end="171:40">if <condition pos:start="165:12" pos:end="165:34">(<expr pos:start="165:13" pos:end="165:33"><name pos:start="165:13" pos:end="165:15">tmp</name> <operator pos:start="165:17" pos:end="165:18">!=</operator> <name pos:start="165:20" pos:end="165:33">lossless_check</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="171:40"><block_content pos:start="167:13" pos:end="171:40">

            <expr_stmt pos:start="167:13" pos:end="171:40"><expr pos:start="167:13" pos:end="171:39"><call pos:start="167:13" pos:end="171:39"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="171:39">(<argument pos:start="167:20" pos:end="167:27"><expr pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:20">m</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:27">avctx</name></name></expr></argument>, <argument pos:start="167:30" pos:end="167:43"><expr pos:start="167:30" pos:end="167:43"><name pos:start="167:30" pos:end="167:43">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="169:20" pos:end="169:78"><expr pos:start="169:20" pos:end="169:78"><literal type="string" pos:start="169:20" pos:end="169:78">"Lossless check failed - expected %02x, calculated %02x.\n"</literal></expr></argument>,

                   <argument pos:start="171:20" pos:end="171:33"><expr pos:start="171:20" pos:end="171:33"><name pos:start="171:20" pos:end="171:33">lossless_check</name></expr></argument>, <argument pos:start="171:36" pos:end="171:38"><expr pos:start="171:36" pos:end="171:38"><name pos:start="171:36" pos:end="171:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:23"><expr pos:start="177:5" pos:end="177:22"><call pos:start="177:5" pos:end="177:22"><name pos:start="177:5" pos:end="177:13">skip_bits</name><argument_list pos:start="177:14" pos:end="177:22">(<argument pos:start="177:15" pos:end="177:17"><expr pos:start="177:15" pos:end="177:17"><name pos:start="177:15" pos:end="177:17">gbp</name></expr></argument>, <argument pos:start="177:20" pos:end="177:21"><expr pos:start="177:20" pos:end="177:21"><literal type="number" pos:start="177:20" pos:end="177:21">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:50"><expr pos:start="181:5" pos:end="181:49"><call pos:start="181:5" pos:end="181:49"><name pos:start="181:5" pos:end="181:10">memset</name><argument_list pos:start="181:11" pos:end="181:49">(<argument pos:start="181:12" pos:end="181:23"><expr pos:start="181:12" pos:end="181:23"><name pos:start="181:12" pos:end="181:23"><name pos:start="181:12" pos:end="181:12">s</name><operator pos:start="181:13" pos:end="181:14">-&gt;</operator><name pos:start="181:15" pos:end="181:23">ch_assign</name></name></expr></argument>, <argument pos:start="181:26" pos:end="181:26"><expr pos:start="181:26" pos:end="181:26"><literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr></argument>, <argument pos:start="181:29" pos:end="181:48"><expr pos:start="181:29" pos:end="181:48"><sizeof pos:start="181:29" pos:end="181:48">sizeof<argument_list pos:start="181:35" pos:end="181:48">(<argument pos:start="181:36" pos:end="181:47"><expr pos:start="181:36" pos:end="181:47"><name pos:start="181:36" pos:end="181:47"><name pos:start="181:36" pos:end="181:36">s</name><operator pos:start="181:37" pos:end="181:38">-&gt;</operator><name pos:start="181:39" pos:end="181:47">ch_assign</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="185:5" pos:end="203:5">for <control pos:start="185:9" pos:end="185:51">(<init pos:start="185:10" pos:end="185:16"><expr pos:start="185:10" pos:end="185:15"><name pos:start="185:10" pos:end="185:11">ch</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <literal type="number" pos:start="185:15" pos:end="185:15">0</literal></expr>;</init> <condition pos:start="185:18" pos:end="185:45"><expr pos:start="185:18" pos:end="185:44"><name pos:start="185:18" pos:end="185:19">ch</name> <operator pos:start="185:21" pos:end="185:22">&lt;=</operator> <name pos:start="185:24" pos:end="185:44"><name pos:start="185:24" pos:end="185:24">s</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:44">max_matrix_channel</name></name></expr>;</condition> <incr pos:start="185:47" pos:end="185:50"><expr pos:start="185:47" pos:end="185:50"><name pos:start="185:47" pos:end="185:48">ch</name><operator pos:start="185:49" pos:end="185:50">++</operator></expr></incr>)</control> <block pos:start="185:53" pos:end="203:5">{<block_content pos:start="187:9" pos:end="201:37">

        <decl_stmt pos:start="187:9" pos:end="187:41"><decl pos:start="187:9" pos:end="187:40"><type pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:11">int</name></type> <name pos:start="187:13" pos:end="187:21">ch_assign</name> <init pos:start="187:23" pos:end="187:40">= <expr pos:start="187:25" pos:end="187:40"><call pos:start="187:25" pos:end="187:40"><name pos:start="187:25" pos:end="187:32">get_bits</name><argument_list pos:start="187:33" pos:end="187:40">(<argument pos:start="187:34" pos:end="187:36"><expr pos:start="187:34" pos:end="187:36"><name pos:start="187:34" pos:end="187:36">gbp</name></expr></argument>, <argument pos:start="187:39" pos:end="187:39"><expr pos:start="187:39" pos:end="187:39"><literal type="number" pos:start="187:39" pos:end="187:39">6</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="189:9" pos:end="199:9"><if pos:start="189:9" pos:end="199:9">if <condition pos:start="189:12" pos:end="189:46">(<expr pos:start="189:13" pos:end="189:45"><name pos:start="189:13" pos:end="189:21">ch_assign</name> <operator pos:start="189:23" pos:end="189:23">&gt;</operator> <name pos:start="189:25" pos:end="189:45"><name pos:start="189:25" pos:end="189:25">s</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:45">max_matrix_channel</name></name></expr>)</condition> <block pos:start="189:48" pos:end="199:9">{<block_content pos:start="191:13" pos:end="197:40">

            <expr_stmt pos:start="191:13" pos:end="195:34"><expr pos:start="191:13" pos:end="195:33"><call pos:start="191:13" pos:end="195:33"><name pos:start="191:13" pos:end="191:33">av_log_ask_for_sample</name><argument_list pos:start="191:34" pos:end="195:33">(<argument pos:start="191:35" pos:end="191:42"><expr pos:start="191:35" pos:end="191:42"><name pos:start="191:35" pos:end="191:42"><name pos:start="191:35" pos:end="191:35">m</name><operator pos:start="191:36" pos:end="191:37">-&gt;</operator><name pos:start="191:38" pos:end="191:42">avctx</name></name></expr></argument>,

                   <argument pos:start="193:20" pos:end="193:84"><expr pos:start="193:20" pos:end="193:84"><literal type="string" pos:start="193:20" pos:end="193:84">"Assignment of matrix channel %d to invalid output channel %d.\n"</literal></expr></argument>,

                   <argument pos:start="195:20" pos:end="195:21"><expr pos:start="195:20" pos:end="195:21"><name pos:start="195:20" pos:end="195:21">ch</name></expr></argument>, <argument pos:start="195:24" pos:end="195:32"><expr pos:start="195:24" pos:end="195:32"><name pos:start="195:24" pos:end="195:32">ch_assign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="197:13" pos:end="197:40">return <expr pos:start="197:20" pos:end="197:39"><name pos:start="197:20" pos:end="197:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:37"><expr pos:start="201:9" pos:end="201:36"><name pos:start="201:9" pos:end="201:31"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:20">ch_assign</name><index pos:start="201:21" pos:end="201:31">[<expr pos:start="201:22" pos:end="201:30"><name pos:start="201:22" pos:end="201:30">ch_assign</name></expr>]</index></name> <operator pos:start="201:33" pos:end="201:33">=</operator> <name pos:start="201:35" pos:end="201:36">ch</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="207:5" pos:end="229:5"><if pos:start="207:5" pos:end="229:5">if <condition pos:start="207:8" pos:end="207:66">(<expr pos:start="207:9" pos:end="207:65"><name pos:start="207:9" pos:end="207:26"><name pos:start="207:9" pos:end="207:9">m</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:16">avctx</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:26">codec_id</name></name> <operator pos:start="207:28" pos:end="207:29">==</operator> <name pos:start="207:31" pos:end="207:42">CODEC_ID_MLP</name> <operator pos:start="207:44" pos:end="207:45">&amp;&amp;</operator> <name pos:start="207:47" pos:end="207:65"><name pos:start="207:47" pos:end="207:47">m</name><operator pos:start="207:48" pos:end="207:49">-&gt;</operator><name pos:start="207:50" pos:end="207:65">needs_reordering</name></name></expr>)</condition> <block pos:start="207:68" pos:end="229:5">{<block_content pos:start="209:9" pos:end="227:9">

        <if_stmt pos:start="209:9" pos:end="227:9"><if pos:start="209:9" pos:end="221:9">if <condition pos:start="209:12" pos:end="211:66">(<expr pos:start="209:13" pos:end="211:65"><name pos:start="209:13" pos:end="209:36"><name pos:start="209:13" pos:end="209:13">m</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">avctx</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:36">channel_layout</name></name> <operator pos:start="209:38" pos:end="209:39">==</operator> <operator pos:start="209:41" pos:end="209:41">(</operator><name pos:start="209:42" pos:end="209:58">AV_CH_LAYOUT_QUAD</name><operator pos:start="209:59" pos:end="209:59">|</operator><name pos:start="209:60" pos:end="209:78">AV_CH_LOW_FREQUENCY</name><operator pos:start="209:79" pos:end="209:79">)</operator> <operator pos:start="209:81" pos:end="209:82">||</operator>

            <name pos:start="211:13" pos:end="211:36"><name pos:start="211:13" pos:end="211:13">m</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:20">avctx</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:36">channel_layout</name></name> <operator pos:start="211:38" pos:end="211:39">==</operator> <name pos:start="211:41" pos:end="211:65">AV_CH_LAYOUT_5POINT0_BACK</name></expr>)</condition> <block pos:start="211:68" pos:end="221:9">{<block_content pos:start="213:13" pos:end="219:32">

            <decl_stmt pos:start="213:13" pos:end="213:36"><decl pos:start="213:13" pos:end="213:35"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:17">i</name> <init pos:start="213:19" pos:end="213:35">= <expr pos:start="213:21" pos:end="213:35"><name pos:start="213:21" pos:end="213:35"><name pos:start="213:21" pos:end="213:21">s</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:32">ch_assign</name><index pos:start="213:33" pos:end="213:35">[<expr pos:start="213:34" pos:end="213:34"><literal type="number" pos:start="213:34" pos:end="213:34">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:46"><expr pos:start="215:13" pos:end="215:45"><name pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:24">ch_assign</name><index pos:start="215:25" pos:end="215:27">[<expr pos:start="215:26" pos:end="215:26"><literal type="number" pos:start="215:26" pos:end="215:26">4</literal></expr>]</index></name> <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:45"><name pos:start="215:31" pos:end="215:31">s</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:42">ch_assign</name><index pos:start="215:43" pos:end="215:45">[<expr pos:start="215:44" pos:end="215:44"><literal type="number" pos:start="215:44" pos:end="215:44">3</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:46"><expr pos:start="217:13" pos:end="217:45"><name pos:start="217:13" pos:end="217:27"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:24">ch_assign</name><index pos:start="217:25" pos:end="217:27">[<expr pos:start="217:26" pos:end="217:26"><literal type="number" pos:start="217:26" pos:end="217:26">3</literal></expr>]</index></name> <operator pos:start="217:29" pos:end="217:29">=</operator> <name pos:start="217:31" pos:end="217:45"><name pos:start="217:31" pos:end="217:31">s</name><operator pos:start="217:32" pos:end="217:33">-&gt;</operator><name pos:start="217:34" pos:end="217:42">ch_assign</name><index pos:start="217:43" pos:end="217:45">[<expr pos:start="217:44" pos:end="217:44"><literal type="number" pos:start="217:44" pos:end="217:44">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:32"><expr pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:27"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:24">ch_assign</name><index pos:start="219:25" pos:end="219:27">[<expr pos:start="219:26" pos:end="219:26"><literal type="number" pos:start="219:26" pos:end="219:26">2</literal></expr>]</index></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <name pos:start="219:31" pos:end="219:31">i</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="221:11" pos:end="227:9">else if <condition pos:start="221:19" pos:end="221:73">(<expr pos:start="221:20" pos:end="221:72"><name pos:start="221:20" pos:end="221:43"><name pos:start="221:20" pos:end="221:20">m</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:27">avctx</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:43">channel_layout</name></name> <operator pos:start="221:45" pos:end="221:46">==</operator> <name pos:start="221:48" pos:end="221:72">AV_CH_LAYOUT_5POINT1_BACK</name></expr>)</condition> <block pos:start="221:75" pos:end="227:9">{<block_content pos:start="223:13" pos:end="225:58">

            <expr_stmt pos:start="223:13" pos:end="223:58"><expr pos:start="223:13" pos:end="223:57"><call pos:start="223:13" pos:end="223:57"><name pos:start="223:13" pos:end="223:18">FFSWAP</name><argument_list pos:start="223:19" pos:end="223:57">(<argument pos:start="223:20" pos:end="223:22"><expr pos:start="223:20" pos:end="223:22"><name pos:start="223:20" pos:end="223:22">int</name></expr></argument>, <argument pos:start="223:25" pos:end="223:39"><expr pos:start="223:25" pos:end="223:39"><name pos:start="223:25" pos:end="223:39"><name pos:start="223:25" pos:end="223:25">s</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:36">ch_assign</name><index pos:start="223:37" pos:end="223:39">[<expr pos:start="223:38" pos:end="223:38"><literal type="number" pos:start="223:38" pos:end="223:38">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:42" pos:end="223:56"><expr pos:start="223:42" pos:end="223:56"><name pos:start="223:42" pos:end="223:56"><name pos:start="223:42" pos:end="223:42">s</name><operator pos:start="223:43" pos:end="223:44">-&gt;</operator><name pos:start="223:45" pos:end="223:53">ch_assign</name><index pos:start="223:54" pos:end="223:56">[<expr pos:start="223:55" pos:end="223:55"><literal type="number" pos:start="223:55" pos:end="223:55">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:58"><expr pos:start="225:13" pos:end="225:57"><call pos:start="225:13" pos:end="225:57"><name pos:start="225:13" pos:end="225:18">FFSWAP</name><argument_list pos:start="225:19" pos:end="225:57">(<argument pos:start="225:20" pos:end="225:22"><expr pos:start="225:20" pos:end="225:22"><name pos:start="225:20" pos:end="225:22">int</name></expr></argument>, <argument pos:start="225:25" pos:end="225:39"><expr pos:start="225:25" pos:end="225:39"><name pos:start="225:25" pos:end="225:39"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:36">ch_assign</name><index pos:start="225:37" pos:end="225:39">[<expr pos:start="225:38" pos:end="225:38"><literal type="number" pos:start="225:38" pos:end="225:38">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:42" pos:end="225:56"><expr pos:start="225:42" pos:end="225:56"><name pos:start="225:42" pos:end="225:56"><name pos:start="225:42" pos:end="225:42">s</name><operator pos:start="225:43" pos:end="225:44">-&gt;</operator><name pos:start="225:45" pos:end="225:53">ch_assign</name><index pos:start="225:54" pos:end="225:56">[<expr pos:start="225:55" pos:end="225:55"><literal type="number" pos:start="225:55" pos:end="225:55">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="231:5" pos:end="257:5"><if pos:start="231:5" pos:end="241:5">if <condition pos:start="231:8" pos:end="235:63">(<expr pos:start="231:9" pos:end="235:62"><name pos:start="231:9" pos:end="231:26"><name pos:start="231:9" pos:end="231:9">m</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:16">avctx</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:26">codec_id</name></name> <operator pos:start="231:28" pos:end="231:29">==</operator> <name pos:start="231:31" pos:end="231:45">CODEC_ID_TRUEHD</name> <operator pos:start="231:47" pos:end="231:48">&amp;&amp;</operator>

        <operator pos:start="233:9" pos:end="233:9">(</operator><name pos:start="233:10" pos:end="233:33"><name pos:start="233:10" pos:end="233:10">m</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:17">avctx</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:33">channel_layout</name></name> <operator pos:start="233:35" pos:end="233:36">==</operator> <name pos:start="233:38" pos:end="233:57">AV_CH_LAYOUT_7POINT1</name> <operator pos:start="233:59" pos:end="233:60">||</operator>

        <name pos:start="235:9" pos:end="235:32"><name pos:start="235:9" pos:end="235:9">m</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:16">avctx</name><operator pos:start="235:17" pos:end="235:18">-&gt;</operator><name pos:start="235:19" pos:end="235:32">channel_layout</name></name> <operator pos:start="235:34" pos:end="235:35">==</operator> <name pos:start="235:37" pos:end="235:61">AV_CH_LAYOUT_7POINT1_WIDE</name><operator pos:start="235:62" pos:end="235:62">)</operator></expr>)</condition> <block pos:start="235:65" pos:end="241:5">{<block_content pos:start="237:9" pos:end="239:54">

        <expr_stmt pos:start="237:9" pos:end="237:54"><expr pos:start="237:9" pos:end="237:53"><call pos:start="237:9" pos:end="237:53"><name pos:start="237:9" pos:end="237:14">FFSWAP</name><argument_list pos:start="237:15" pos:end="237:53">(<argument pos:start="237:16" pos:end="237:18"><expr pos:start="237:16" pos:end="237:18"><name pos:start="237:16" pos:end="237:18">int</name></expr></argument>, <argument pos:start="237:21" pos:end="237:35"><expr pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:21">s</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:32">ch_assign</name><index pos:start="237:33" pos:end="237:35">[<expr pos:start="237:34" pos:end="237:34"><literal type="number" pos:start="237:34" pos:end="237:34">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="237:38" pos:end="237:52"><expr pos:start="237:38" pos:end="237:52"><name pos:start="237:38" pos:end="237:52"><name pos:start="237:38" pos:end="237:38">s</name><operator pos:start="237:39" pos:end="237:40">-&gt;</operator><name pos:start="237:41" pos:end="237:49">ch_assign</name><index pos:start="237:50" pos:end="237:52">[<expr pos:start="237:51" pos:end="237:51"><literal type="number" pos:start="237:51" pos:end="237:51">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:54"><expr pos:start="239:9" pos:end="239:53"><call pos:start="239:9" pos:end="239:53"><name pos:start="239:9" pos:end="239:14">FFSWAP</name><argument_list pos:start="239:15" pos:end="239:53">(<argument pos:start="239:16" pos:end="239:18"><expr pos:start="239:16" pos:end="239:18"><name pos:start="239:16" pos:end="239:18">int</name></expr></argument>, <argument pos:start="239:21" pos:end="239:35"><expr pos:start="239:21" pos:end="239:35"><name pos:start="239:21" pos:end="239:35"><name pos:start="239:21" pos:end="239:21">s</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:32">ch_assign</name><index pos:start="239:33" pos:end="239:35">[<expr pos:start="239:34" pos:end="239:34"><literal type="number" pos:start="239:34" pos:end="239:34">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="239:38" pos:end="239:52"><expr pos:start="239:38" pos:end="239:52"><name pos:start="239:38" pos:end="239:52"><name pos:start="239:38" pos:end="239:38">s</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:49">ch_assign</name><index pos:start="239:50" pos:end="239:52">[<expr pos:start="239:51" pos:end="239:51"><literal type="number" pos:start="239:51" pos:end="239:51">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="241:7" pos:end="257:5">else if <condition pos:start="241:15" pos:end="247:85">(<expr pos:start="241:16" pos:end="247:84"><name pos:start="241:16" pos:end="241:33"><name pos:start="241:16" pos:end="241:16">m</name><operator pos:start="241:17" pos:end="241:18">-&gt;</operator><name pos:start="241:19" pos:end="241:23">avctx</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:33">codec_id</name></name> <operator pos:start="241:35" pos:end="241:36">==</operator> <name pos:start="241:38" pos:end="241:52">CODEC_ID_TRUEHD</name> <operator pos:start="241:54" pos:end="241:55">&amp;&amp;</operator>

        <operator pos:start="243:9" pos:end="243:9">(</operator><name pos:start="243:10" pos:end="243:33"><name pos:start="243:10" pos:end="243:10">m</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:17">avctx</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:33">channel_layout</name></name> <operator pos:start="243:35" pos:end="243:36">==</operator> <name pos:start="243:38" pos:end="243:57">AV_CH_LAYOUT_6POINT1</name> <operator pos:start="243:59" pos:end="243:60">||</operator>

        <name pos:start="245:9" pos:end="245:32"><name pos:start="245:9" pos:end="245:9">m</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:16">avctx</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:32">channel_layout</name></name> <operator pos:start="245:34" pos:end="245:35">==</operator> <operator pos:start="245:37" pos:end="245:37">(</operator><name pos:start="245:38" pos:end="245:57">AV_CH_LAYOUT_6POINT1</name> <operator pos:start="245:59" pos:end="245:59">|</operator> <name pos:start="245:61" pos:end="245:76">AV_CH_TOP_CENTER</name><operator pos:start="245:77" pos:end="245:77">)</operator> <operator pos:start="245:79" pos:end="245:80">||</operator>

        <name pos:start="247:9" pos:end="247:32"><name pos:start="247:9" pos:end="247:9">m</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:16">avctx</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:32">channel_layout</name></name> <operator pos:start="247:34" pos:end="247:35">==</operator> <operator pos:start="247:37" pos:end="247:37">(</operator><name pos:start="247:38" pos:end="247:57">AV_CH_LAYOUT_6POINT1</name> <operator pos:start="247:59" pos:end="247:59">|</operator> <name pos:start="247:61" pos:end="247:82">AV_CH_TOP_FRONT_CENTER</name><operator pos:start="247:83" pos:end="247:83">)</operator><operator pos:start="247:84" pos:end="247:84">)</operator></expr>)</condition> <block pos:start="247:87" pos:end="257:5">{<block_content pos:start="249:9" pos:end="255:28">

        <decl_stmt pos:start="249:9" pos:end="249:32"><decl pos:start="249:9" pos:end="249:31"><type pos:start="249:9" pos:end="249:11"><name pos:start="249:9" pos:end="249:11">int</name></type> <name pos:start="249:13" pos:end="249:13">i</name> <init pos:start="249:15" pos:end="249:31">= <expr pos:start="249:17" pos:end="249:31"><name pos:start="249:17" pos:end="249:31"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:28">ch_assign</name><index pos:start="249:29" pos:end="249:31">[<expr pos:start="249:30" pos:end="249:30"><literal type="number" pos:start="249:30" pos:end="249:30">6</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:42"><expr pos:start="251:9" pos:end="251:41"><name pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:20">ch_assign</name><index pos:start="251:21" pos:end="251:23">[<expr pos:start="251:22" pos:end="251:22"><literal type="number" pos:start="251:22" pos:end="251:22">6</literal></expr>]</index></name> <operator pos:start="251:25" pos:end="251:25">=</operator> <name pos:start="251:27" pos:end="251:41"><name pos:start="251:27" pos:end="251:27">s</name><operator pos:start="251:28" pos:end="251:29">-&gt;</operator><name pos:start="251:30" pos:end="251:38">ch_assign</name><index pos:start="251:39" pos:end="251:41">[<expr pos:start="251:40" pos:end="251:40"><literal type="number" pos:start="251:40" pos:end="251:40">5</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:42"><expr pos:start="253:9" pos:end="253:41"><name pos:start="253:9" pos:end="253:23"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:20">ch_assign</name><index pos:start="253:21" pos:end="253:23">[<expr pos:start="253:22" pos:end="253:22"><literal type="number" pos:start="253:22" pos:end="253:22">5</literal></expr>]</index></name> <operator pos:start="253:25" pos:end="253:25">=</operator> <name pos:start="253:27" pos:end="253:41"><name pos:start="253:27" pos:end="253:27">s</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:38">ch_assign</name><index pos:start="253:39" pos:end="253:41">[<expr pos:start="253:40" pos:end="253:40"><literal type="number" pos:start="253:40" pos:end="253:40">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:28"><expr pos:start="255:9" pos:end="255:27"><name pos:start="255:9" pos:end="255:23"><name pos:start="255:9" pos:end="255:9">s</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:20">ch_assign</name><index pos:start="255:21" pos:end="255:23">[<expr pos:start="255:22" pos:end="255:22"><literal type="number" pos:start="255:22" pos:end="255:22">4</literal></expr>]</index></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <name pos:start="255:27" pos:end="255:27">i</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:79"><expr pos:start="261:5" pos:end="261:78"><name pos:start="261:5" pos:end="261:12">checksum</name> <operator pos:start="261:14" pos:end="261:14">=</operator> <call pos:start="261:16" pos:end="261:78"><name pos:start="261:16" pos:end="261:38">ff_mlp_restart_checksum</name><argument_list pos:start="261:39" pos:end="261:78">(<argument pos:start="261:40" pos:end="261:42"><expr pos:start="261:40" pos:end="261:42"><name pos:start="261:40" pos:end="261:42">buf</name></expr></argument>, <argument pos:start="261:45" pos:end="261:77"><expr pos:start="261:45" pos:end="261:77"><call pos:start="261:45" pos:end="261:63"><name pos:start="261:45" pos:end="261:58">get_bits_count</name><argument_list pos:start="261:59" pos:end="261:63">(<argument pos:start="261:60" pos:end="261:62"><expr pos:start="261:60" pos:end="261:62"><name pos:start="261:60" pos:end="261:62">gbp</name></expr></argument>)</argument_list></call> <operator pos:start="261:65" pos:end="261:65">-</operator> <name pos:start="261:67" pos:end="261:77">start_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="265:5" pos:end="267:74"><if pos:start="265:5" pos:end="267:74">if <condition pos:start="265:8" pos:end="265:37">(<expr pos:start="265:9" pos:end="265:36"><name pos:start="265:9" pos:end="265:16">checksum</name> <operator pos:start="265:18" pos:end="265:19">!=</operator> <call pos:start="265:21" pos:end="265:36"><name pos:start="265:21" pos:end="265:28">get_bits</name><argument_list pos:start="265:29" pos:end="265:36">(<argument pos:start="265:30" pos:end="265:32"><expr pos:start="265:30" pos:end="265:32"><name pos:start="265:30" pos:end="265:32">gbp</name></expr></argument>, <argument pos:start="265:35" pos:end="265:35"><expr pos:start="265:35" pos:end="265:35"><literal type="number" pos:start="265:35" pos:end="265:35">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:74"><block_content pos:start="267:9" pos:end="267:74">

        <expr_stmt pos:start="267:9" pos:end="267:74"><expr pos:start="267:9" pos:end="267:73"><call pos:start="267:9" pos:end="267:73"><name pos:start="267:9" pos:end="267:14">av_log</name><argument_list pos:start="267:15" pos:end="267:73">(<argument pos:start="267:16" pos:end="267:23"><expr pos:start="267:16" pos:end="267:23"><name pos:start="267:16" pos:end="267:23"><name pos:start="267:16" pos:end="267:16">m</name><operator pos:start="267:17" pos:end="267:18">-&gt;</operator><name pos:start="267:19" pos:end="267:23">avctx</name></name></expr></argument>, <argument pos:start="267:26" pos:end="267:37"><expr pos:start="267:26" pos:end="267:37"><name pos:start="267:26" pos:end="267:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="267:40" pos:end="267:72"><expr pos:start="267:40" pos:end="267:72"><literal type="string" pos:start="267:40" pos:end="267:72">"restart header checksum error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="271:5" pos:end="271:42">/* Set default decoding parameters. */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:37"><expr pos:start="273:5" pos:end="273:36"><name pos:start="273:5" pos:end="273:27"><name pos:start="273:5" pos:end="273:5">s</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:27">param_presence_flags</name></name>   <operator pos:start="273:31" pos:end="273:31">=</operator> <literal type="number" pos:start="273:33" pos:end="273:36">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:34"><expr pos:start="275:5" pos:end="275:33"><name pos:start="275:5" pos:end="275:29"><name pos:start="275:5" pos:end="275:5">s</name><operator pos:start="275:6" pos:end="275:7">-&gt;</operator><name pos:start="275:8" pos:end="275:29">num_primitive_matrices</name></name> <operator pos:start="275:31" pos:end="275:31">=</operator> <literal type="number" pos:start="275:33" pos:end="275:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:34"><expr pos:start="277:5" pos:end="277:33"><name pos:start="277:5" pos:end="277:16"><name pos:start="277:5" pos:end="277:5">s</name><operator pos:start="277:6" pos:end="277:7">-&gt;</operator><name pos:start="277:8" pos:end="277:16">blocksize</name></name>              <operator pos:start="277:31" pos:end="277:31">=</operator> <literal type="number" pos:start="277:33" pos:end="277:33">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:34"><expr pos:start="279:5" pos:end="279:33"><name pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:5">s</name><operator pos:start="279:6" pos:end="279:7">-&gt;</operator><name pos:start="279:8" pos:end="279:26">lossless_check_data</name></name>    <operator pos:start="279:31" pos:end="279:31">=</operator> <literal type="number" pos:start="279:33" pos:end="279:33">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:62"><expr pos:start="283:5" pos:end="283:61"><call pos:start="283:5" pos:end="283:61"><name pos:start="283:5" pos:end="283:10">memset</name><argument_list pos:start="283:11" pos:end="283:61">(<argument pos:start="283:12" pos:end="283:26"><expr pos:start="283:12" pos:end="283:26"><name pos:start="283:12" pos:end="283:26"><name pos:start="283:12" pos:end="283:12">s</name><operator pos:start="283:13" pos:end="283:14">-&gt;</operator><name pos:start="283:15" pos:end="283:26">output_shift</name></name></expr></argument>   , <argument pos:start="283:32" pos:end="283:32"><expr pos:start="283:32" pos:end="283:32"><literal type="number" pos:start="283:32" pos:end="283:32">0</literal></expr></argument>, <argument pos:start="283:35" pos:end="283:60"><expr pos:start="283:35" pos:end="283:60"><sizeof pos:start="283:35" pos:end="283:60">sizeof<argument_list pos:start="283:41" pos:end="283:60">(<argument pos:start="283:42" pos:end="283:56"><expr pos:start="283:42" pos:end="283:56"><name pos:start="283:42" pos:end="283:56"><name pos:start="283:42" pos:end="283:42">s</name><operator pos:start="283:43" pos:end="283:44">-&gt;</operator><name pos:start="283:45" pos:end="283:56">output_shift</name></name></expr></argument>   )</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:62"><expr pos:start="285:5" pos:end="285:61"><call pos:start="285:5" pos:end="285:61"><name pos:start="285:5" pos:end="285:10">memset</name><argument_list pos:start="285:11" pos:end="285:61">(<argument pos:start="285:12" pos:end="285:29"><expr pos:start="285:12" pos:end="285:29"><name pos:start="285:12" pos:end="285:29"><name pos:start="285:12" pos:end="285:12">s</name><operator pos:start="285:13" pos:end="285:14">-&gt;</operator><name pos:start="285:15" pos:end="285:29">quant_step_size</name></name></expr></argument>, <argument pos:start="285:32" pos:end="285:32"><expr pos:start="285:32" pos:end="285:32"><literal type="number" pos:start="285:32" pos:end="285:32">0</literal></expr></argument>, <argument pos:start="285:35" pos:end="285:60"><expr pos:start="285:35" pos:end="285:60"><sizeof pos:start="285:35" pos:end="285:60">sizeof<argument_list pos:start="285:41" pos:end="285:60">(<argument pos:start="285:42" pos:end="285:59"><expr pos:start="285:42" pos:end="285:59"><name pos:start="285:42" pos:end="285:59"><name pos:start="285:42" pos:end="285:42">s</name><operator pos:start="285:43" pos:end="285:44">-&gt;</operator><name pos:start="285:45" pos:end="285:59">quant_step_size</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="289:5" pos:end="313:5">for <control pos:start="289:9" pos:end="289:57">(<init pos:start="289:10" pos:end="289:29"><expr pos:start="289:10" pos:end="289:28"><name pos:start="289:10" pos:end="289:11">ch</name> <operator pos:start="289:13" pos:end="289:13">=</operator> <name pos:start="289:15" pos:end="289:28"><name pos:start="289:15" pos:end="289:15">s</name><operator pos:start="289:16" pos:end="289:17">-&gt;</operator><name pos:start="289:18" pos:end="289:28">min_channel</name></name></expr>;</init> <condition pos:start="289:31" pos:end="289:51"><expr pos:start="289:31" pos:end="289:50"><name pos:start="289:31" pos:end="289:32">ch</name> <operator pos:start="289:34" pos:end="289:35">&lt;=</operator> <name pos:start="289:37" pos:end="289:50"><name pos:start="289:37" pos:end="289:37">s</name><operator pos:start="289:38" pos:end="289:39">-&gt;</operator><name pos:start="289:40" pos:end="289:50">max_channel</name></name></expr>;</condition> <incr pos:start="289:53" pos:end="289:56"><expr pos:start="289:53" pos:end="289:56"><name pos:start="289:53" pos:end="289:54">ch</name><operator pos:start="289:55" pos:end="289:56">++</operator></expr></incr>)</control> <block pos:start="289:59" pos:end="313:5">{<block_content pos:start="291:9" pos:end="311:34">

        <decl_stmt pos:start="291:9" pos:end="291:51"><decl pos:start="291:9" pos:end="291:50"><type pos:start="291:9" pos:end="291:23"><name pos:start="291:9" pos:end="291:21">ChannelParams</name> <modifier pos:start="291:23" pos:end="291:23">*</modifier></type><name pos:start="291:24" pos:end="291:25">cp</name> <init pos:start="291:27" pos:end="291:50">= <expr pos:start="291:29" pos:end="291:50"><operator pos:start="291:29" pos:end="291:29">&amp;</operator><name pos:start="291:30" pos:end="291:50"><name pos:start="291:30" pos:end="291:30">s</name><operator pos:start="291:31" pos:end="291:32">-&gt;</operator><name pos:start="291:33" pos:end="291:46">channel_params</name><index pos:start="291:47" pos:end="291:50">[<expr pos:start="291:48" pos:end="291:49"><name pos:start="291:48" pos:end="291:49">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:41"><expr pos:start="293:9" pos:end="293:40"><name pos:start="293:9" pos:end="293:30"><name pos:start="293:9" pos:end="293:10">cp</name><operator pos:start="293:11" pos:end="293:12">-&gt;</operator><name pos:start="293:13" pos:end="293:25">filter_params</name><index pos:start="293:26" pos:end="293:30">[<expr pos:start="293:27" pos:end="293:29"><name pos:start="293:27" pos:end="293:29">FIR</name></expr>]</index></name><operator pos:start="293:31" pos:end="293:31">.</operator><name pos:start="293:32" pos:end="293:36">order</name> <operator pos:start="293:38" pos:end="293:38">=</operator> <literal type="number" pos:start="293:40" pos:end="293:40">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:41"><expr pos:start="295:9" pos:end="295:40"><name pos:start="295:9" pos:end="295:30"><name pos:start="295:9" pos:end="295:10">cp</name><operator pos:start="295:11" pos:end="295:12">-&gt;</operator><name pos:start="295:13" pos:end="295:25">filter_params</name><index pos:start="295:26" pos:end="295:30">[<expr pos:start="295:27" pos:end="295:29"><name pos:start="295:27" pos:end="295:29">IIR</name></expr>]</index></name><operator pos:start="295:31" pos:end="295:31">.</operator><name pos:start="295:32" pos:end="295:36">order</name> <operator pos:start="295:38" pos:end="295:38">=</operator> <literal type="number" pos:start="295:40" pos:end="295:40">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:41"><expr pos:start="297:9" pos:end="297:40"><name pos:start="297:9" pos:end="297:30"><name pos:start="297:9" pos:end="297:10">cp</name><operator pos:start="297:11" pos:end="297:12">-&gt;</operator><name pos:start="297:13" pos:end="297:25">filter_params</name><index pos:start="297:26" pos:end="297:30">[<expr pos:start="297:27" pos:end="297:29"><name pos:start="297:27" pos:end="297:29">FIR</name></expr>]</index></name><operator pos:start="297:31" pos:end="297:31">.</operator><name pos:start="297:32" pos:end="297:36">shift</name> <operator pos:start="297:38" pos:end="297:38">=</operator> <literal type="number" pos:start="297:40" pos:end="297:40">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:41"><expr pos:start="299:9" pos:end="299:40"><name pos:start="299:9" pos:end="299:30"><name pos:start="299:9" pos:end="299:10">cp</name><operator pos:start="299:11" pos:end="299:12">-&gt;</operator><name pos:start="299:13" pos:end="299:25">filter_params</name><index pos:start="299:26" pos:end="299:30">[<expr pos:start="299:27" pos:end="299:29"><name pos:start="299:27" pos:end="299:29">IIR</name></expr>]</index></name><operator pos:start="299:31" pos:end="299:31">.</operator><name pos:start="299:32" pos:end="299:36">shift</name> <operator pos:start="299:38" pos:end="299:38">=</operator> <literal type="number" pos:start="299:40" pos:end="299:40">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="303:9" pos:end="303:53">/* Default audio coding is 24-bit raw PCM. */</comment>

        <expr_stmt pos:start="305:9" pos:end="305:33"><expr pos:start="305:9" pos:end="305:32"><name pos:start="305:9" pos:end="305:23"><name pos:start="305:9" pos:end="305:10">cp</name><operator pos:start="305:11" pos:end="305:12">-&gt;</operator><name pos:start="305:13" pos:end="305:23">huff_offset</name></name>      <operator pos:start="305:30" pos:end="305:30">=</operator> <literal type="number" pos:start="305:32" pos:end="305:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:42"><expr pos:start="307:9" pos:end="307:41"><name pos:start="307:9" pos:end="307:28"><name pos:start="307:9" pos:end="307:10">cp</name><operator pos:start="307:11" pos:end="307:12">-&gt;</operator><name pos:start="307:13" pos:end="307:28">sign_huff_offset</name></name> <operator pos:start="307:30" pos:end="307:30">=</operator> <operator pos:start="307:32" pos:end="307:32">(</operator><operator pos:start="307:33" pos:end="307:33">-</operator><literal type="number" pos:start="307:34" pos:end="307:34">1</literal><operator pos:start="307:35" pos:end="307:35">)</operator> <operator pos:start="307:37" pos:end="307:38">&lt;&lt;</operator> <literal type="number" pos:start="307:40" pos:end="307:41">23</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:33"><expr pos:start="309:9" pos:end="309:32"><name pos:start="309:9" pos:end="309:20"><name pos:start="309:9" pos:end="309:10">cp</name><operator pos:start="309:11" pos:end="309:12">-&gt;</operator><name pos:start="309:13" pos:end="309:20">codebook</name></name>         <operator pos:start="309:30" pos:end="309:30">=</operator> <literal type="number" pos:start="309:32" pos:end="309:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:34"><expr pos:start="311:9" pos:end="311:33"><name pos:start="311:9" pos:end="311:21"><name pos:start="311:9" pos:end="311:10">cp</name><operator pos:start="311:11" pos:end="311:12">-&gt;</operator><name pos:start="311:13" pos:end="311:21">huff_lsbs</name></name>        <operator pos:start="311:30" pos:end="311:30">=</operator> <literal type="number" pos:start="311:32" pos:end="311:33">24</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="317:5" pos:end="319:55"><if pos:start="317:5" pos:end="319:55">if <condition pos:start="317:8" pos:end="317:43">(<expr pos:start="317:9" pos:end="317:42"><name pos:start="317:9" pos:end="317:14">substr</name> <operator pos:start="317:16" pos:end="317:17">==</operator> <name pos:start="317:19" pos:end="317:42"><name pos:start="317:19" pos:end="317:19">m</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:42">max_decoded_substream</name></name></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:55"><block_content pos:start="319:9" pos:end="319:55">

        <expr_stmt pos:start="319:9" pos:end="319:55"><expr pos:start="319:9" pos:end="319:54"><name pos:start="319:9" pos:end="319:26"><name pos:start="319:9" pos:end="319:9">m</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:16">avctx</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:26">channels</name></name> <operator pos:start="319:28" pos:end="319:28">=</operator> <name pos:start="319:30" pos:end="319:50"><name pos:start="319:30" pos:end="319:30">s</name><operator pos:start="319:31" pos:end="319:32">-&gt;</operator><name pos:start="319:33" pos:end="319:50">max_matrix_channel</name></name> <operator pos:start="319:52" pos:end="319:52">+</operator> <literal type="number" pos:start="319:54" pos:end="319:54">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="323:5" pos:end="323:13">return <expr pos:start="323:12" pos:end="323:12"><literal type="number" pos:start="323:12" pos:end="323:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
