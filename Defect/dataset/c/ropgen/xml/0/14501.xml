<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14501.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">gen_test_cc</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:30"><decl pos:start="1:25" pos:end="1:30"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:30">cc</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:41"><decl pos:start="1:33" pos:end="1:41"><type pos:start="1:33" pos:end="1:41"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:41">label</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:18">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:13">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">inv</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="189:5">switch <condition pos:start="13:12" pos:end="13:15">(<expr pos:start="13:13" pos:end="13:14"><name pos:start="13:13" pos:end="13:14">cc</name></expr>)</condition> <block pos:start="13:17" pos:end="189:5">{<block_content pos:start="15:5" pos:end="187:16">

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">0</literal></expr>:</case> <comment type="block" pos:start="15:13" pos:end="15:23">/* eq: Z */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:33"><expr pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:11">tmp</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:32"><name pos:start="17:15" pos:end="17:28">load_cpu_field</name><argument_list pos:start="17:29" pos:end="17:32">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">ZF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><call pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:27">tcg_gen_brcondi_i32</name><argument_list pos:start="19:28" pos:end="19:55">(<argument pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:44">tmp</name></expr></argument>, <argument pos:start="19:47" pos:end="19:47"><expr pos:start="19:47" pos:end="19:47"><literal type="number" pos:start="19:47" pos:end="19:47">0</literal></expr></argument>, <argument pos:start="19:50" pos:end="19:54"><expr pos:start="19:50" pos:end="19:54"><name pos:start="19:50" pos:end="19:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">1</literal></expr>:</case> <comment type="block" pos:start="23:13" pos:end="23:24">/* ne: !Z */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:11">tmp</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:32"><name pos:start="25:15" pos:end="25:28">load_cpu_field</name><argument_list pos:start="25:29" pos:end="25:32">(<argument pos:start="25:30" pos:end="25:31"><expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">ZF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:56"><expr pos:start="27:9" pos:end="27:55"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:27">tcg_gen_brcondi_i32</name><argument_list pos:start="27:28" pos:end="27:55">(<argument pos:start="27:29" pos:end="27:39"><expr pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">tmp</name></expr></argument>, <argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><literal type="number" pos:start="27:47" pos:end="27:47">0</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:54"><expr pos:start="27:50" pos:end="27:54"><name pos:start="27:50" pos:end="27:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">2</literal></expr>:</case> <comment type="block" pos:start="31:13" pos:end="31:23">/* cs: C */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:11">tmp</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:32"><name pos:start="33:15" pos:end="33:28">load_cpu_field</name><argument_list pos:start="33:29" pos:end="33:32">(<argument pos:start="33:30" pos:end="33:31"><expr pos:start="33:30" pos:end="33:31"><name pos:start="33:30" pos:end="33:31">CF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:56"><expr pos:start="35:9" pos:end="35:55"><call pos:start="35:9" pos:end="35:55"><name pos:start="35:9" pos:end="35:27">tcg_gen_brcondi_i32</name><argument_list pos:start="35:28" pos:end="35:55">(<argument pos:start="35:29" pos:end="35:39"><expr pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><name pos:start="35:42" pos:end="35:44">tmp</name></expr></argument>, <argument pos:start="35:47" pos:end="35:47"><expr pos:start="35:47" pos:end="35:47"><literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr></argument>, <argument pos:start="35:50" pos:end="35:54"><expr pos:start="35:50" pos:end="35:54"><name pos:start="35:50" pos:end="35:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">3</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:24">/* cc: !C */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:11">tmp</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:32"><name pos:start="41:15" pos:end="41:28">load_cpu_field</name><argument_list pos:start="41:29" pos:end="41:32">(<argument pos:start="41:30" pos:end="41:31"><expr pos:start="41:30" pos:end="41:31"><name pos:start="41:30" pos:end="41:31">CF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><call pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:27">tcg_gen_brcondi_i32</name><argument_list pos:start="43:28" pos:end="43:55">(<argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">tmp</name></expr></argument>, <argument pos:start="43:47" pos:end="43:47"><expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr></argument>, <argument pos:start="43:50" pos:end="43:54"><expr pos:start="43:50" pos:end="43:54"><name pos:start="43:50" pos:end="43:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">4</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:23">/* mi: N */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:11">tmp</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:32"><name pos:start="49:15" pos:end="49:28">load_cpu_field</name><argument_list pos:start="49:29" pos:end="49:32">(<argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:56"><expr pos:start="51:9" pos:end="51:55"><call pos:start="51:9" pos:end="51:55"><name pos:start="51:9" pos:end="51:27">tcg_gen_brcondi_i32</name><argument_list pos:start="51:28" pos:end="51:55">(<argument pos:start="51:29" pos:end="51:39"><expr pos:start="51:29" pos:end="51:39"><name pos:start="51:29" pos:end="51:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:44">tmp</name></expr></argument>, <argument pos:start="51:47" pos:end="51:47"><expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">0</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:54"><expr pos:start="51:50" pos:end="51:54"><name pos:start="51:50" pos:end="51:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">5</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:24">/* pl: !N */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:11">tmp</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:32"><name pos:start="57:15" pos:end="57:28">load_cpu_field</name><argument_list pos:start="57:29" pos:end="57:32">(<argument pos:start="57:30" pos:end="57:31"><expr pos:start="57:30" pos:end="57:31"><name pos:start="57:30" pos:end="57:31">NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:27">tcg_gen_brcondi_i32</name><argument_list pos:start="59:28" pos:end="59:55">(<argument pos:start="59:29" pos:end="59:39"><expr pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">tmp</name></expr></argument>, <argument pos:start="59:47" pos:end="59:47"><expr pos:start="59:47" pos:end="59:47"><literal type="number" pos:start="59:47" pos:end="59:47">0</literal></expr></argument>, <argument pos:start="59:50" pos:end="59:54"><expr pos:start="59:50" pos:end="59:54"><name pos:start="59:50" pos:end="59:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">6</literal></expr>:</case> <comment type="block" pos:start="63:13" pos:end="63:23">/* vs: V */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:11">tmp</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:32"><name pos:start="65:15" pos:end="65:28">load_cpu_field</name><argument_list pos:start="65:29" pos:end="65:32">(<argument pos:start="65:30" pos:end="65:31"><expr pos:start="65:30" pos:end="65:31"><name pos:start="65:30" pos:end="65:31">VF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><call pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:27">tcg_gen_brcondi_i32</name><argument_list pos:start="67:28" pos:end="67:55">(<argument pos:start="67:29" pos:end="67:39"><expr pos:start="67:29" pos:end="67:39"><name pos:start="67:29" pos:end="67:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="67:42" pos:end="67:44"><expr pos:start="67:42" pos:end="67:44"><name pos:start="67:42" pos:end="67:44">tmp</name></expr></argument>, <argument pos:start="67:47" pos:end="67:47"><expr pos:start="67:47" pos:end="67:47"><literal type="number" pos:start="67:47" pos:end="67:47">0</literal></expr></argument>, <argument pos:start="67:50" pos:end="67:54"><expr pos:start="67:50" pos:end="67:54"><name pos:start="67:50" pos:end="67:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">7</literal></expr>:</case> <comment type="block" pos:start="71:13" pos:end="71:24">/* vc: !V */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:11">tmp</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:32"><name pos:start="73:15" pos:end="73:28">load_cpu_field</name><argument_list pos:start="73:29" pos:end="73:32">(<argument pos:start="73:30" pos:end="73:31"><expr pos:start="73:30" pos:end="73:31"><name pos:start="73:30" pos:end="73:31">VF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:56"><expr pos:start="75:9" pos:end="75:55"><call pos:start="75:9" pos:end="75:55"><name pos:start="75:9" pos:end="75:27">tcg_gen_brcondi_i32</name><argument_list pos:start="75:28" pos:end="75:55">(<argument pos:start="75:29" pos:end="75:39"><expr pos:start="75:29" pos:end="75:39"><name pos:start="75:29" pos:end="75:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="75:42" pos:end="75:44"><expr pos:start="75:42" pos:end="75:44"><name pos:start="75:42" pos:end="75:44">tmp</name></expr></argument>, <argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr></argument>, <argument pos:start="75:50" pos:end="75:54"><expr pos:start="75:50" pos:end="75:54"><name pos:start="75:50" pos:end="75:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">8</literal></expr>:</case> <comment type="block" pos:start="79:13" pos:end="79:29">/* hi: C &amp;&amp; !Z */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:11">inv</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:29"><name pos:start="81:15" pos:end="81:27">gen_new_label</name><argument_list pos:start="81:28" pos:end="81:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:11">tmp</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:32"><name pos:start="83:15" pos:end="83:28">load_cpu_field</name><argument_list pos:start="83:29" pos:end="83:32">(<argument pos:start="83:30" pos:end="83:31"><expr pos:start="83:30" pos:end="83:31"><name pos:start="83:30" pos:end="83:31">CF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:54"><expr pos:start="85:9" pos:end="85:53"><call pos:start="85:9" pos:end="85:53"><name pos:start="85:9" pos:end="85:27">tcg_gen_brcondi_i32</name><argument_list pos:start="85:28" pos:end="85:53">(<argument pos:start="85:29" pos:end="85:39"><expr pos:start="85:29" pos:end="85:39"><name pos:start="85:29" pos:end="85:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:44">tmp</name></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr></argument>, <argument pos:start="85:50" pos:end="85:52"><expr pos:start="85:50" pos:end="85:52"><name pos:start="85:50" pos:end="85:52">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:22"><expr pos:start="87:9" pos:end="87:21"><call pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:16">dead_tmp</name><argument_list pos:start="87:17" pos:end="87:21">(<argument pos:start="87:18" pos:end="87:20"><expr pos:start="87:18" pos:end="87:20"><name pos:start="87:18" pos:end="87:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:33"><expr pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:11">tmp</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:32"><name pos:start="89:15" pos:end="89:28">load_cpu_field</name><argument_list pos:start="89:29" pos:end="89:32">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">ZF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:56"><expr pos:start="91:9" pos:end="91:55"><call pos:start="91:9" pos:end="91:55"><name pos:start="91:9" pos:end="91:27">tcg_gen_brcondi_i32</name><argument_list pos:start="91:28" pos:end="91:55">(<argument pos:start="91:29" pos:end="91:39"><expr pos:start="91:29" pos:end="91:39"><name pos:start="91:29" pos:end="91:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="91:42" pos:end="91:44"><expr pos:start="91:42" pos:end="91:44"><name pos:start="91:42" pos:end="91:44">tmp</name></expr></argument>, <argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><literal type="number" pos:start="91:47" pos:end="91:47">0</literal></expr></argument>, <argument pos:start="91:50" pos:end="91:54"><expr pos:start="91:50" pos:end="91:54"><name pos:start="91:50" pos:end="91:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><call pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:21">gen_set_label</name><argument_list pos:start="93:22" pos:end="93:26">(<argument pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><name pos:start="93:23" pos:end="93:25">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:11">case <expr pos:start="97:10" pos:end="97:10"><literal type="number" pos:start="97:10" pos:end="97:10">9</literal></expr>:</case> <comment type="block" pos:start="97:13" pos:end="97:29">/* ls: !C || Z */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:11">tmp</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:32"><name pos:start="99:15" pos:end="99:28">load_cpu_field</name><argument_list pos:start="99:29" pos:end="99:32">(<argument pos:start="99:30" pos:end="99:31"><expr pos:start="99:30" pos:end="99:31"><name pos:start="99:30" pos:end="99:31">CF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><call pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:27">tcg_gen_brcondi_i32</name><argument_list pos:start="101:28" pos:end="101:55">(<argument pos:start="101:29" pos:end="101:39"><expr pos:start="101:29" pos:end="101:39"><name pos:start="101:29" pos:end="101:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="101:42" pos:end="101:44"><expr pos:start="101:42" pos:end="101:44"><name pos:start="101:42" pos:end="101:44">tmp</name></expr></argument>, <argument pos:start="101:47" pos:end="101:47"><expr pos:start="101:47" pos:end="101:47"><literal type="number" pos:start="101:47" pos:end="101:47">0</literal></expr></argument>, <argument pos:start="101:50" pos:end="101:54"><expr pos:start="101:50" pos:end="101:54"><name pos:start="101:50" pos:end="101:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:22"><expr pos:start="103:9" pos:end="103:21"><call pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:16">dead_tmp</name><argument_list pos:start="103:17" pos:end="103:21">(<argument pos:start="103:18" pos:end="103:20"><expr pos:start="103:18" pos:end="103:20"><name pos:start="103:18" pos:end="103:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:33"><expr pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:11">tmp</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:32"><name pos:start="105:15" pos:end="105:28">load_cpu_field</name><argument_list pos:start="105:29" pos:end="105:32">(<argument pos:start="105:30" pos:end="105:31"><expr pos:start="105:30" pos:end="105:31"><name pos:start="105:30" pos:end="105:31">ZF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><call pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:27">tcg_gen_brcondi_i32</name><argument_list pos:start="107:28" pos:end="107:55">(<argument pos:start="107:29" pos:end="107:39"><expr pos:start="107:29" pos:end="107:39"><name pos:start="107:29" pos:end="107:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="107:42" pos:end="107:44"><expr pos:start="107:42" pos:end="107:44"><name pos:start="107:42" pos:end="107:44">tmp</name></expr></argument>, <argument pos:start="107:47" pos:end="107:47"><expr pos:start="107:47" pos:end="107:47"><literal type="number" pos:start="107:47" pos:end="107:47">0</literal></expr></argument>, <argument pos:start="107:50" pos:end="107:54"><expr pos:start="107:50" pos:end="107:54"><name pos:start="107:50" pos:end="107:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:12">case <expr pos:start="111:10" pos:end="111:11"><literal type="number" pos:start="111:10" pos:end="111:11">10</literal></expr>:</case> <comment type="block" pos:start="111:14" pos:end="111:43">/* ge: N == V -&gt; N ^ V == 0 */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:33"><expr pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:11">tmp</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:32"><name pos:start="113:15" pos:end="113:28">load_cpu_field</name><argument_list pos:start="113:29" pos:end="113:32">(<argument pos:start="113:30" pos:end="113:31"><expr pos:start="113:30" pos:end="113:31"><name pos:start="113:30" pos:end="113:31">VF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:34"><expr pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:12">tmp2</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:33"><name pos:start="115:16" pos:end="115:29">load_cpu_field</name><argument_list pos:start="115:30" pos:end="115:33">(<argument pos:start="115:31" pos:end="115:32"><expr pos:start="115:31" pos:end="115:32"><name pos:start="115:31" pos:end="115:32">NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:40"><expr pos:start="117:9" pos:end="117:39"><call pos:start="117:9" pos:end="117:39"><name pos:start="117:9" pos:end="117:23">tcg_gen_xor_i32</name><argument_list pos:start="117:24" pos:end="117:39">(<argument pos:start="117:25" pos:end="117:27"><expr pos:start="117:25" pos:end="117:27"><name pos:start="117:25" pos:end="117:27">tmp</name></expr></argument>, <argument pos:start="117:30" pos:end="117:32"><expr pos:start="117:30" pos:end="117:32"><name pos:start="117:30" pos:end="117:32">tmp</name></expr></argument>, <argument pos:start="117:35" pos:end="117:38"><expr pos:start="117:35" pos:end="117:38"><name pos:start="117:35" pos:end="117:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:23"><expr pos:start="119:9" pos:end="119:22"><call pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:16">dead_tmp</name><argument_list pos:start="119:17" pos:end="119:22">(<argument pos:start="119:18" pos:end="119:21"><expr pos:start="119:18" pos:end="119:21"><name pos:start="119:18" pos:end="119:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:56"><expr pos:start="121:9" pos:end="121:55"><call pos:start="121:9" pos:end="121:55"><name pos:start="121:9" pos:end="121:27">tcg_gen_brcondi_i32</name><argument_list pos:start="121:28" pos:end="121:55">(<argument pos:start="121:29" pos:end="121:39"><expr pos:start="121:29" pos:end="121:39"><name pos:start="121:29" pos:end="121:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">tmp</name></expr></argument>, <argument pos:start="121:47" pos:end="121:47"><expr pos:start="121:47" pos:end="121:47"><literal type="number" pos:start="121:47" pos:end="121:47">0</literal></expr></argument>, <argument pos:start="121:50" pos:end="121:54"><expr pos:start="121:50" pos:end="121:54"><name pos:start="121:50" pos:end="121:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:12">case <expr pos:start="125:10" pos:end="125:11"><literal type="number" pos:start="125:10" pos:end="125:11">11</literal></expr>:</case> <comment type="block" pos:start="125:14" pos:end="125:43">/* lt: N != V -&gt; N ^ V != 0 */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:11">tmp</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:32"><name pos:start="127:15" pos:end="127:28">load_cpu_field</name><argument_list pos:start="127:29" pos:end="127:32">(<argument pos:start="127:30" pos:end="127:31"><expr pos:start="127:30" pos:end="127:31"><name pos:start="127:30" pos:end="127:31">VF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:34"><expr pos:start="129:9" pos:end="129:33"><name pos:start="129:9" pos:end="129:12">tmp2</name> <operator pos:start="129:14" pos:end="129:14">=</operator> <call pos:start="129:16" pos:end="129:33"><name pos:start="129:16" pos:end="129:29">load_cpu_field</name><argument_list pos:start="129:30" pos:end="129:33">(<argument pos:start="129:31" pos:end="129:32"><expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:40"><expr pos:start="131:9" pos:end="131:39"><call pos:start="131:9" pos:end="131:39"><name pos:start="131:9" pos:end="131:23">tcg_gen_xor_i32</name><argument_list pos:start="131:24" pos:end="131:39">(<argument pos:start="131:25" pos:end="131:27"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:27">tmp</name></expr></argument>, <argument pos:start="131:30" pos:end="131:32"><expr pos:start="131:30" pos:end="131:32"><name pos:start="131:30" pos:end="131:32">tmp</name></expr></argument>, <argument pos:start="131:35" pos:end="131:38"><expr pos:start="131:35" pos:end="131:38"><name pos:start="131:35" pos:end="131:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:23"><expr pos:start="133:9" pos:end="133:22"><call pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:16">dead_tmp</name><argument_list pos:start="133:17" pos:end="133:22">(<argument pos:start="133:18" pos:end="133:21"><expr pos:start="133:18" pos:end="133:21"><name pos:start="133:18" pos:end="133:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:56"><expr pos:start="135:9" pos:end="135:55"><call pos:start="135:9" pos:end="135:55"><name pos:start="135:9" pos:end="135:27">tcg_gen_brcondi_i32</name><argument_list pos:start="135:28" pos:end="135:55">(<argument pos:start="135:29" pos:end="135:39"><expr pos:start="135:29" pos:end="135:39"><name pos:start="135:29" pos:end="135:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="135:42" pos:end="135:44"><expr pos:start="135:42" pos:end="135:44"><name pos:start="135:42" pos:end="135:44">tmp</name></expr></argument>, <argument pos:start="135:47" pos:end="135:47"><expr pos:start="135:47" pos:end="135:47"><literal type="number" pos:start="135:47" pos:end="135:47">0</literal></expr></argument>, <argument pos:start="135:50" pos:end="135:54"><expr pos:start="135:50" pos:end="135:54"><name pos:start="135:50" pos:end="135:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:12">case <expr pos:start="139:10" pos:end="139:11"><literal type="number" pos:start="139:10" pos:end="139:11">12</literal></expr>:</case> <comment type="block" pos:start="139:14" pos:end="139:35">/* gt: !Z &amp;&amp; N == V */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:11">inv</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:29"><name pos:start="141:15" pos:end="141:27">gen_new_label</name><argument_list pos:start="141:28" pos:end="141:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:33"><expr pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:11">tmp</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <call pos:start="143:15" pos:end="143:32"><name pos:start="143:15" pos:end="143:28">load_cpu_field</name><argument_list pos:start="143:29" pos:end="143:32">(<argument pos:start="143:30" pos:end="143:31"><expr pos:start="143:30" pos:end="143:31"><name pos:start="143:30" pos:end="143:31">ZF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:54"><expr pos:start="145:9" pos:end="145:53"><call pos:start="145:9" pos:end="145:53"><name pos:start="145:9" pos:end="145:27">tcg_gen_brcondi_i32</name><argument_list pos:start="145:28" pos:end="145:53">(<argument pos:start="145:29" pos:end="145:39"><expr pos:start="145:29" pos:end="145:39"><name pos:start="145:29" pos:end="145:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="145:42" pos:end="145:44"><expr pos:start="145:42" pos:end="145:44"><name pos:start="145:42" pos:end="145:44">tmp</name></expr></argument>, <argument pos:start="145:47" pos:end="145:47"><expr pos:start="145:47" pos:end="145:47"><literal type="number" pos:start="145:47" pos:end="145:47">0</literal></expr></argument>, <argument pos:start="145:50" pos:end="145:52"><expr pos:start="145:50" pos:end="145:52"><name pos:start="145:50" pos:end="145:52">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:22"><expr pos:start="147:9" pos:end="147:21"><call pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:16">dead_tmp</name><argument_list pos:start="147:17" pos:end="147:21">(<argument pos:start="147:18" pos:end="147:20"><expr pos:start="147:18" pos:end="147:20"><name pos:start="147:18" pos:end="147:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:33"><expr pos:start="149:9" pos:end="149:32"><name pos:start="149:9" pos:end="149:11">tmp</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <call pos:start="149:15" pos:end="149:32"><name pos:start="149:15" pos:end="149:28">load_cpu_field</name><argument_list pos:start="149:29" pos:end="149:32">(<argument pos:start="149:30" pos:end="149:31"><expr pos:start="149:30" pos:end="149:31"><name pos:start="149:30" pos:end="149:31">VF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:34"><expr pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:12">tmp2</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:33"><name pos:start="151:16" pos:end="151:29">load_cpu_field</name><argument_list pos:start="151:30" pos:end="151:33">(<argument pos:start="151:31" pos:end="151:32"><expr pos:start="151:31" pos:end="151:32"><name pos:start="151:31" pos:end="151:32">NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:40"><expr pos:start="153:9" pos:end="153:39"><call pos:start="153:9" pos:end="153:39"><name pos:start="153:9" pos:end="153:23">tcg_gen_xor_i32</name><argument_list pos:start="153:24" pos:end="153:39">(<argument pos:start="153:25" pos:end="153:27"><expr pos:start="153:25" pos:end="153:27"><name pos:start="153:25" pos:end="153:27">tmp</name></expr></argument>, <argument pos:start="153:30" pos:end="153:32"><expr pos:start="153:30" pos:end="153:32"><name pos:start="153:30" pos:end="153:32">tmp</name></expr></argument>, <argument pos:start="153:35" pos:end="153:38"><expr pos:start="153:35" pos:end="153:38"><name pos:start="153:35" pos:end="153:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:23"><expr pos:start="155:9" pos:end="155:22"><call pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:16">dead_tmp</name><argument_list pos:start="155:17" pos:end="155:22">(<argument pos:start="155:18" pos:end="155:21"><expr pos:start="155:18" pos:end="155:21"><name pos:start="155:18" pos:end="155:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:56"><expr pos:start="157:9" pos:end="157:55"><call pos:start="157:9" pos:end="157:55"><name pos:start="157:9" pos:end="157:27">tcg_gen_brcondi_i32</name><argument_list pos:start="157:28" pos:end="157:55">(<argument pos:start="157:29" pos:end="157:39"><expr pos:start="157:29" pos:end="157:39"><name pos:start="157:29" pos:end="157:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><name pos:start="157:42" pos:end="157:44">tmp</name></expr></argument>, <argument pos:start="157:47" pos:end="157:47"><expr pos:start="157:47" pos:end="157:47"><literal type="number" pos:start="157:47" pos:end="157:47">0</literal></expr></argument>, <argument pos:start="157:50" pos:end="157:54"><expr pos:start="157:50" pos:end="157:54"><name pos:start="157:50" pos:end="157:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:27"><expr pos:start="159:9" pos:end="159:26"><call pos:start="159:9" pos:end="159:26"><name pos:start="159:9" pos:end="159:21">gen_set_label</name><argument_list pos:start="159:22" pos:end="159:26">(<argument pos:start="159:23" pos:end="159:25"><expr pos:start="159:23" pos:end="159:25"><name pos:start="159:23" pos:end="159:25">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:12">case <expr pos:start="163:10" pos:end="163:11"><literal type="number" pos:start="163:10" pos:end="163:11">13</literal></expr>:</case> <comment type="block" pos:start="163:14" pos:end="163:34">/* le: Z || N != V */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:33"><expr pos:start="165:9" pos:end="165:32"><name pos:start="165:9" pos:end="165:11">tmp</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:32"><name pos:start="165:15" pos:end="165:28">load_cpu_field</name><argument_list pos:start="165:29" pos:end="165:32">(<argument pos:start="165:30" pos:end="165:31"><expr pos:start="165:30" pos:end="165:31"><name pos:start="165:30" pos:end="165:31">ZF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:56"><expr pos:start="167:9" pos:end="167:55"><call pos:start="167:9" pos:end="167:55"><name pos:start="167:9" pos:end="167:27">tcg_gen_brcondi_i32</name><argument_list pos:start="167:28" pos:end="167:55">(<argument pos:start="167:29" pos:end="167:39"><expr pos:start="167:29" pos:end="167:39"><name pos:start="167:29" pos:end="167:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="167:42" pos:end="167:44"><expr pos:start="167:42" pos:end="167:44"><name pos:start="167:42" pos:end="167:44">tmp</name></expr></argument>, <argument pos:start="167:47" pos:end="167:47"><expr pos:start="167:47" pos:end="167:47"><literal type="number" pos:start="167:47" pos:end="167:47">0</literal></expr></argument>, <argument pos:start="167:50" pos:end="167:54"><expr pos:start="167:50" pos:end="167:54"><name pos:start="167:50" pos:end="167:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:22"><expr pos:start="169:9" pos:end="169:21"><call pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:16">dead_tmp</name><argument_list pos:start="169:17" pos:end="169:21">(<argument pos:start="169:18" pos:end="169:20"><expr pos:start="169:18" pos:end="169:20"><name pos:start="169:18" pos:end="169:20">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:33"><expr pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:11">tmp</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:32"><name pos:start="171:15" pos:end="171:28">load_cpu_field</name><argument_list pos:start="171:29" pos:end="171:32">(<argument pos:start="171:30" pos:end="171:31"><expr pos:start="171:30" pos:end="171:31"><name pos:start="171:30" pos:end="171:31">VF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:34"><expr pos:start="173:9" pos:end="173:33"><name pos:start="173:9" pos:end="173:12">tmp2</name> <operator pos:start="173:14" pos:end="173:14">=</operator> <call pos:start="173:16" pos:end="173:33"><name pos:start="173:16" pos:end="173:29">load_cpu_field</name><argument_list pos:start="173:30" pos:end="173:33">(<argument pos:start="173:31" pos:end="173:32"><expr pos:start="173:31" pos:end="173:32"><name pos:start="173:31" pos:end="173:32">NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:40"><expr pos:start="175:9" pos:end="175:39"><call pos:start="175:9" pos:end="175:39"><name pos:start="175:9" pos:end="175:23">tcg_gen_xor_i32</name><argument_list pos:start="175:24" pos:end="175:39">(<argument pos:start="175:25" pos:end="175:27"><expr pos:start="175:25" pos:end="175:27"><name pos:start="175:25" pos:end="175:27">tmp</name></expr></argument>, <argument pos:start="175:30" pos:end="175:32"><expr pos:start="175:30" pos:end="175:32"><name pos:start="175:30" pos:end="175:32">tmp</name></expr></argument>, <argument pos:start="175:35" pos:end="175:38"><expr pos:start="175:35" pos:end="175:38"><name pos:start="175:35" pos:end="175:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:23"><expr pos:start="177:9" pos:end="177:22"><call pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:16">dead_tmp</name><argument_list pos:start="177:17" pos:end="177:22">(<argument pos:start="177:18" pos:end="177:21"><expr pos:start="177:18" pos:end="177:21"><name pos:start="177:18" pos:end="177:21">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:56"><expr pos:start="179:9" pos:end="179:55"><call pos:start="179:9" pos:end="179:55"><name pos:start="179:9" pos:end="179:27">tcg_gen_brcondi_i32</name><argument_list pos:start="179:28" pos:end="179:55">(<argument pos:start="179:29" pos:end="179:39"><expr pos:start="179:29" pos:end="179:39"><name pos:start="179:29" pos:end="179:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="179:42" pos:end="179:44"><expr pos:start="179:42" pos:end="179:44"><name pos:start="179:42" pos:end="179:44">tmp</name></expr></argument>, <argument pos:start="179:47" pos:end="179:47"><expr pos:start="179:47" pos:end="179:47"><literal type="number" pos:start="179:47" pos:end="179:47">0</literal></expr></argument>, <argument pos:start="179:50" pos:end="179:54"><expr pos:start="179:50" pos:end="179:54"><name pos:start="179:50" pos:end="179:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <default pos:start="183:5" pos:end="183:12">default:</default>

        <expr_stmt pos:start="185:9" pos:end="185:57"><expr pos:start="185:9" pos:end="185:56"><call pos:start="185:9" pos:end="185:56"><name pos:start="185:9" pos:end="185:15">fprintf</name><argument_list pos:start="185:16" pos:end="185:56">(<argument pos:start="185:17" pos:end="185:22"><expr pos:start="185:17" pos:end="185:22"><name pos:start="185:17" pos:end="185:22">stderr</name></expr></argument>, <argument pos:start="185:25" pos:end="185:51"><expr pos:start="185:25" pos:end="185:51"><literal type="string" pos:start="185:25" pos:end="185:51">"Bad condition code 0x%x\n"</literal></expr></argument>, <argument pos:start="185:54" pos:end="185:55"><expr pos:start="185:54" pos:end="185:55"><name pos:start="185:54" pos:end="185:55">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:16"><expr pos:start="187:9" pos:end="187:15"><call pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:13">abort</name><argument_list pos:start="187:14" pos:end="187:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="191:5" pos:end="191:18"><expr pos:start="191:5" pos:end="191:17"><call pos:start="191:5" pos:end="191:17"><name pos:start="191:5" pos:end="191:12">dead_tmp</name><argument_list pos:start="191:13" pos:end="191:17">(<argument pos:start="191:14" pos:end="191:16"><expr pos:start="191:14" pos:end="191:16"><name pos:start="191:14" pos:end="191:16">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
