<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14869.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">blend_image</name><parameter_list pos:start="1:24" pos:end="5:37">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AVFilterContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:46"><decl pos:start="3:25" pos:end="3:46"><type pos:start="3:25" pos:end="3:46"><name pos:start="3:25" pos:end="3:41">AVFilterBufferRef</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">dst</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:70"><decl pos:start="3:49" pos:end="3:70"><type pos:start="3:49" pos:end="3:70"><name pos:start="3:49" pos:end="3:65">AVFilterBufferRef</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:70">src</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:29"><decl pos:start="5:25" pos:end="5:29"><type pos:start="5:25" pos:end="5:29"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:29">x</name></decl></parameter>, <parameter pos:start="5:32" pos:end="5:36"><decl pos:start="5:32" pos:end="5:36"><type pos:start="5:32" pos:end="5:36"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:36">y</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="313:1">{<block_content pos:start="9:5" pos:end="311:5">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">OverlayContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">over</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:30">ctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">width</name>   <init pos:start="13:17" pos:end="13:31">= <expr pos:start="13:19" pos:end="13:31"><name pos:start="13:19" pos:end="13:31"><name pos:start="13:19" pos:end="13:21">src</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:28">video</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:31">w</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">height</name>  <init pos:start="15:17" pos:end="15:31">= <expr pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:21">src</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:28">video</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:31">h</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="311:5"><if pos:start="19:5" pos:end="141:5">if <condition pos:start="19:8" pos:end="19:33">(<expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:12">over</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:32">main_is_packed_rgb</name></name></expr>)</condition> <block pos:start="19:35" pos:end="141:5">{<block_content pos:start="21:9" pos:end="139:9">

        <decl_stmt pos:start="21:9" pos:end="23:43"><decl pos:start="21:9" pos:end="23:42"><type pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:15">uint8_t</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:19">dp</name> <init pos:start="21:21" pos:end="23:42">= <expr pos:start="21:23" pos:end="23:42"><name pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:25">dst</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:31">data</name><index pos:start="21:32" pos:end="21:34">[<expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">0</literal></expr>]</index></name> <operator pos:start="21:36" pos:end="21:36">+</operator> <name pos:start="21:38" pos:end="21:38">x</name> <operator pos:start="21:40" pos:end="21:40">*</operator> <name pos:start="21:42" pos:end="21:63"><name pos:start="21:42" pos:end="21:45">over</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:60">main_pix_step</name><index pos:start="21:61" pos:end="21:63">[<expr pos:start="21:62" pos:end="21:62"><literal type="number" pos:start="21:62" pos:end="21:62">0</literal></expr>]</index></name> <operator pos:start="21:65" pos:end="21:65">+</operator>

                      <name pos:start="23:23" pos:end="23:23">y</name> <operator pos:start="23:25" pos:end="23:25">*</operator> <name pos:start="23:27" pos:end="23:42"><name pos:start="23:27" pos:end="23:29">dst</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:39">linesize</name><index pos:start="23:40" pos:end="23:42">[<expr pos:start="23:41" pos:end="23:41"><literal type="number" pos:start="23:41" pos:end="23:41">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:35"><decl pos:start="25:9" pos:end="25:34"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">uint8_t</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:19">sp</name> <init pos:start="25:21" pos:end="25:34">= <expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:25">src</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">data</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:22"><decl pos:start="27:9" pos:end="27:21"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">uint8_t</name></type> <name pos:start="27:17" pos:end="27:21">alpha</name></decl>;</decl_stmt>          <comment type="line" format="doxygen" pos:start="27:33" pos:end="27:78">///&lt; the amount of overlay to blend on to main</comment>

        <decl_stmt pos:start="29:9" pos:end="29:46"><decl pos:start="29:9" pos:end="29:45"><type pos:start="29:9" pos:end="29:17"><specifier pos:start="29:9" pos:end="29:13">const</specifier> <name pos:start="29:15" pos:end="29:17">int</name></type> <name pos:start="29:19" pos:end="29:20">dr</name> <init pos:start="29:22" pos:end="29:45">= <expr pos:start="29:24" pos:end="29:45"><name pos:start="29:24" pos:end="29:45"><name pos:start="29:24" pos:end="29:27">over</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:42">main_rgba_map</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><name pos:start="29:44" pos:end="29:44">R</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:46"><decl pos:start="31:9" pos:end="31:45"><type pos:start="31:9" pos:end="31:17"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:17">int</name></type> <name pos:start="31:19" pos:end="31:20">dg</name> <init pos:start="31:22" pos:end="31:45">= <expr pos:start="31:24" pos:end="31:45"><name pos:start="31:24" pos:end="31:45"><name pos:start="31:24" pos:end="31:27">over</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:42">main_rgba_map</name><index pos:start="31:43" pos:end="31:45">[<expr pos:start="31:44" pos:end="31:44"><name pos:start="31:44" pos:end="31:44">G</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:46"><decl pos:start="33:9" pos:end="33:45"><type pos:start="33:9" pos:end="33:17"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:17">int</name></type> <name pos:start="33:19" pos:end="33:20">db</name> <init pos:start="33:22" pos:end="33:45">= <expr pos:start="33:24" pos:end="33:45"><name pos:start="33:24" pos:end="33:45"><name pos:start="33:24" pos:end="33:27">over</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:42">main_rgba_map</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">B</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:46"><decl pos:start="35:9" pos:end="35:45"><type pos:start="35:9" pos:end="35:17"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:17">int</name></type> <name pos:start="35:19" pos:end="35:20">da</name> <init pos:start="35:22" pos:end="35:45">= <expr pos:start="35:24" pos:end="35:45"><name pos:start="35:24" pos:end="35:45"><name pos:start="35:24" pos:end="35:27">over</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:42">main_rgba_map</name><index pos:start="35:43" pos:end="35:45">[<expr pos:start="35:44" pos:end="35:44"><name pos:start="35:44" pos:end="35:44">A</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:49"><decl pos:start="37:9" pos:end="37:48"><type pos:start="37:9" pos:end="37:17"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:17">int</name></type> <name pos:start="37:19" pos:end="37:23">dstep</name> <init pos:start="37:25" pos:end="37:48">= <expr pos:start="37:27" pos:end="37:48"><name pos:start="37:27" pos:end="37:48"><name pos:start="37:27" pos:end="37:30">over</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:45">main_pix_step</name><index pos:start="37:46" pos:end="37:48">[<expr pos:start="37:47" pos:end="37:47"><literal type="number" pos:start="37:47" pos:end="37:47">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:49"><decl pos:start="39:9" pos:end="39:48"><type pos:start="39:9" pos:end="39:17"><specifier pos:start="39:9" pos:end="39:13">const</specifier> <name pos:start="39:15" pos:end="39:17">int</name></type> <name pos:start="39:19" pos:end="39:20">sr</name> <init pos:start="39:22" pos:end="39:48">= <expr pos:start="39:24" pos:end="39:48"><name pos:start="39:24" pos:end="39:48"><name pos:start="39:24" pos:end="39:27">over</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:45">overlay_rgba_map</name><index pos:start="39:46" pos:end="39:48">[<expr pos:start="39:47" pos:end="39:47"><name pos:start="39:47" pos:end="39:47">R</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:49"><decl pos:start="41:9" pos:end="41:48"><type pos:start="41:9" pos:end="41:17"><specifier pos:start="41:9" pos:end="41:13">const</specifier> <name pos:start="41:15" pos:end="41:17">int</name></type> <name pos:start="41:19" pos:end="41:20">sg</name> <init pos:start="41:22" pos:end="41:48">= <expr pos:start="41:24" pos:end="41:48"><name pos:start="41:24" pos:end="41:48"><name pos:start="41:24" pos:end="41:27">over</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:45">overlay_rgba_map</name><index pos:start="41:46" pos:end="41:48">[<expr pos:start="41:47" pos:end="41:47"><name pos:start="41:47" pos:end="41:47">G</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:49"><decl pos:start="43:9" pos:end="43:48"><type pos:start="43:9" pos:end="43:17"><specifier pos:start="43:9" pos:end="43:13">const</specifier> <name pos:start="43:15" pos:end="43:17">int</name></type> <name pos:start="43:19" pos:end="43:20">sb</name> <init pos:start="43:22" pos:end="43:48">= <expr pos:start="43:24" pos:end="43:48"><name pos:start="43:24" pos:end="43:48"><name pos:start="43:24" pos:end="43:27">over</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:45">overlay_rgba_map</name><index pos:start="43:46" pos:end="43:48">[<expr pos:start="43:47" pos:end="43:47"><name pos:start="43:47" pos:end="43:47">B</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:49"><decl pos:start="45:9" pos:end="45:48"><type pos:start="45:9" pos:end="45:17"><specifier pos:start="45:9" pos:end="45:13">const</specifier> <name pos:start="45:15" pos:end="45:17">int</name></type> <name pos:start="45:19" pos:end="45:20">sa</name> <init pos:start="45:22" pos:end="45:48">= <expr pos:start="45:24" pos:end="45:48"><name pos:start="45:24" pos:end="45:48"><name pos:start="45:24" pos:end="45:27">over</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:45">overlay_rgba_map</name><index pos:start="45:46" pos:end="45:48">[<expr pos:start="45:47" pos:end="45:47"><name pos:start="45:47" pos:end="45:47">A</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:52"><decl pos:start="47:9" pos:end="47:51"><type pos:start="47:9" pos:end="47:17"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:17">int</name></type> <name pos:start="47:19" pos:end="47:23">sstep</name> <init pos:start="47:25" pos:end="47:51">= <expr pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:30">over</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:48">overlay_pix_step</name><index pos:start="47:49" pos:end="47:51">[<expr pos:start="47:50" pos:end="47:50"><literal type="number" pos:start="47:50" pos:end="47:50">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:56"><decl pos:start="49:9" pos:end="49:55"><type pos:start="49:9" pos:end="49:17"><specifier pos:start="49:9" pos:end="49:13">const</specifier> <name pos:start="49:15" pos:end="49:17">int</name></type> <name pos:start="49:19" pos:end="49:32">main_has_alpha</name> <init pos:start="49:34" pos:end="49:55">= <expr pos:start="49:36" pos:end="49:55"><name pos:start="49:36" pos:end="49:55"><name pos:start="49:36" pos:end="49:39">over</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:55">main_has_alpha</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="51:9" pos:end="139:9">for <control pos:start="51:13" pos:end="51:36">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:31"><expr pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:30">height</name></expr>;</condition> <incr pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:33">i</name><operator pos:start="51:34" pos:end="51:35">++</operator></expr></incr>)</control> <block pos:start="51:38" pos:end="139:9">{<block_content pos:start="53:13" pos:end="137:35">

            <decl_stmt pos:start="53:13" pos:end="53:37"><decl pos:start="53:13" pos:end="53:27"><type pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:19">uint8_t</name> <modifier pos:start="53:21" pos:end="53:21">*</modifier></type><name pos:start="53:22" pos:end="53:22">d</name> <init pos:start="53:24" pos:end="53:27">= <expr pos:start="53:26" pos:end="53:27"><name pos:start="53:26" pos:end="53:27">dp</name></expr></init></decl>, <decl pos:start="53:30" pos:end="53:36"><type ref="prev" pos:start="53:13" pos:end="53:21"><modifier pos:start="53:30" pos:end="53:30">*</modifier></type><name pos:start="53:31" pos:end="53:31">s</name> <init pos:start="53:33" pos:end="53:36">= <expr pos:start="53:35" pos:end="53:36"><name pos:start="53:35" pos:end="53:36">sp</name></expr></init></decl>;</decl_stmt>

            <for pos:start="55:13" pos:end="133:13">for <control pos:start="55:17" pos:end="55:39">(<init pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:18">j</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</init> <condition pos:start="55:25" pos:end="55:34"><expr pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:25">j</name> <operator pos:start="55:27" pos:end="55:27">&lt;</operator> <name pos:start="55:29" pos:end="55:33">width</name></expr>;</condition> <incr pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">j</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></incr>)</control> <block pos:start="55:41" pos:end="133:13">{<block_content pos:start="57:17" pos:end="131:27">

                <expr_stmt pos:start="57:17" pos:end="57:30"><expr pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:21">alpha</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:25">s</name><index pos:start="57:26" pos:end="57:29">[<expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">sa</name></expr>]</index></name></expr>;</expr_stmt>



                <comment type="line" pos:start="61:17" pos:end="61:87">// if the main channel has an alpha channel, alpha has to be calculated</comment>

                <comment type="line" pos:start="63:17" pos:end="63:71">// to create an un-premultiplied (straight) alpha value</comment>

                <if_stmt pos:start="65:17" pos:end="71:17"><if pos:start="65:17" pos:end="71:17">if <condition pos:start="65:20" pos:end="65:65">(<expr pos:start="65:21" pos:end="65:64"><name pos:start="65:21" pos:end="65:34">main_has_alpha</name> <operator pos:start="65:36" pos:end="65:37">&amp;&amp;</operator> <name pos:start="65:39" pos:end="65:43">alpha</name> <operator pos:start="65:45" pos:end="65:46">!=</operator> <literal type="number" pos:start="65:48" pos:end="65:48">0</literal> <operator pos:start="65:50" pos:end="65:51">&amp;&amp;</operator> <name pos:start="65:53" pos:end="65:57">alpha</name> <operator pos:start="65:59" pos:end="65:60">!=</operator> <literal type="number" pos:start="65:62" pos:end="65:64">255</literal></expr>)</condition> <block pos:start="65:67" pos:end="71:17">{<block_content pos:start="67:21" pos:end="69:64">

                    <decl_stmt pos:start="67:21" pos:end="67:44"><decl pos:start="67:21" pos:end="67:43"><type pos:start="67:21" pos:end="67:27"><name pos:start="67:21" pos:end="67:27">uint8_t</name></type> <name pos:start="67:29" pos:end="67:35">alpha_d</name> <init pos:start="67:37" pos:end="67:43">= <expr pos:start="67:39" pos:end="67:43"><name pos:start="67:39" pos:end="67:43"><name pos:start="67:39" pos:end="67:39">d</name><index pos:start="67:40" pos:end="67:43">[<expr pos:start="67:41" pos:end="67:42"><name pos:start="67:41" pos:end="67:42">da</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:64"><expr pos:start="69:21" pos:end="69:63"><name pos:start="69:21" pos:end="69:25">alpha</name> <operator pos:start="69:27" pos:end="69:27">=</operator> <call pos:start="69:29" pos:end="69:63"><name pos:start="69:29" pos:end="69:47">UNPREMULTIPLY_ALPHA</name><argument_list pos:start="69:48" pos:end="69:63">(<argument pos:start="69:49" pos:end="69:53"><expr pos:start="69:49" pos:end="69:53"><name pos:start="69:49" pos:end="69:53">alpha</name></expr></argument>, <argument pos:start="69:56" pos:end="69:62"><expr pos:start="69:56" pos:end="69:62"><name pos:start="69:56" pos:end="69:62">alpha_d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <switch pos:start="75:17" pos:end="103:17">switch <condition pos:start="75:24" pos:end="75:30">(<expr pos:start="75:25" pos:end="75:29"><name pos:start="75:25" pos:end="75:29">alpha</name></expr>)</condition> <block pos:start="75:32" pos:end="103:17">{<block_content pos:start="77:17" pos:end="101:79">

                <case pos:start="77:17" pos:end="77:23">case <expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>:</case>

                    <break pos:start="79:21" pos:end="79:26">break;</break>

                <case pos:start="81:17" pos:end="81:25">case <expr pos:start="81:22" pos:end="81:24"><literal type="number" pos:start="81:22" pos:end="81:24">255</literal></expr>:</case>

                    <expr_stmt pos:start="83:21" pos:end="83:34"><expr pos:start="83:21" pos:end="83:33"><name pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">d</name><index pos:start="83:22" pos:end="83:25">[<expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">dr</name></expr>]</index></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:33"><name pos:start="83:29" pos:end="83:29">s</name><index pos:start="83:30" pos:end="83:33">[<expr pos:start="83:31" pos:end="83:32"><name pos:start="83:31" pos:end="83:32">sr</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:34"><expr pos:start="85:21" pos:end="85:33"><name pos:start="85:21" pos:end="85:25"><name pos:start="85:21" pos:end="85:21">d</name><index pos:start="85:22" pos:end="85:25">[<expr pos:start="85:23" pos:end="85:24"><name pos:start="85:23" pos:end="85:24">dg</name></expr>]</index></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:33"><name pos:start="85:29" pos:end="85:29">s</name><index pos:start="85:30" pos:end="85:33">[<expr pos:start="85:31" pos:end="85:32"><name pos:start="85:31" pos:end="85:32">sg</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:34"><expr pos:start="87:21" pos:end="87:33"><name pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:21">d</name><index pos:start="87:22" pos:end="87:25">[<expr pos:start="87:23" pos:end="87:24"><name pos:start="87:23" pos:end="87:24">db</name></expr>]</index></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:29">s</name><index pos:start="87:30" pos:end="87:33">[<expr pos:start="87:31" pos:end="87:32"><name pos:start="87:31" pos:end="87:32">sb</name></expr>]</index></name></expr>;</expr_stmt>

                    <break pos:start="89:21" pos:end="89:26">break;</break>

                <default pos:start="91:17" pos:end="91:24">default:</default>

                    <comment type="line" pos:start="93:21" pos:end="93:84">// main_value = main_value * (1 - alpha) + overlay_value * alpha</comment>

                    <comment type="line" pos:start="95:21" pos:end="95:88">// since alpha is in the range 0-255, the result must divided by 255</comment>

                    <expr_stmt pos:start="97:21" pos:end="97:79"><expr pos:start="97:21" pos:end="97:78"><name pos:start="97:21" pos:end="97:25"><name pos:start="97:21" pos:end="97:21">d</name><index pos:start="97:22" pos:end="97:25">[<expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">dr</name></expr>]</index></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <call pos:start="97:29" pos:end="97:78"><name pos:start="97:29" pos:end="97:39">FAST_DIV255</name><argument_list pos:start="97:40" pos:end="97:78">(<argument pos:start="97:41" pos:end="97:77"><expr pos:start="97:41" pos:end="97:77"><name pos:start="97:41" pos:end="97:45"><name pos:start="97:41" pos:end="97:41">d</name><index pos:start="97:42" pos:end="97:45">[<expr pos:start="97:43" pos:end="97:44"><name pos:start="97:43" pos:end="97:44">dr</name></expr>]</index></name> <operator pos:start="97:47" pos:end="97:47">*</operator> <operator pos:start="97:49" pos:end="97:49">(</operator><literal type="number" pos:start="97:50" pos:end="97:54">255</literal> <operator pos:start="97:54" pos:end="97:54">-</operator> <name pos:start="97:56" pos:end="97:60">alpha</name><operator pos:start="97:61" pos:end="97:61">)</operator> <operator pos:start="97:63" pos:end="97:63">+</operator> <name pos:start="97:65" pos:end="97:69"><name pos:start="97:65" pos:end="97:65">s</name><index pos:start="97:66" pos:end="97:69">[<expr pos:start="97:67" pos:end="97:68"><name pos:start="97:67" pos:end="97:68">sr</name></expr>]</index></name> <operator pos:start="97:71" pos:end="97:71">*</operator> <name pos:start="97:73" pos:end="97:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:79"><expr pos:start="99:21" pos:end="99:78"><name pos:start="99:21" pos:end="99:25"><name pos:start="99:21" pos:end="99:21">d</name><index pos:start="99:22" pos:end="99:25">[<expr pos:start="99:23" pos:end="99:24"><name pos:start="99:23" pos:end="99:24">dg</name></expr>]</index></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <call pos:start="99:29" pos:end="99:78"><name pos:start="99:29" pos:end="99:39">FAST_DIV255</name><argument_list pos:start="99:40" pos:end="99:78">(<argument pos:start="99:41" pos:end="99:77"><expr pos:start="99:41" pos:end="99:77"><name pos:start="99:41" pos:end="99:45"><name pos:start="99:41" pos:end="99:41">d</name><index pos:start="99:42" pos:end="99:45">[<expr pos:start="99:43" pos:end="99:44"><name pos:start="99:43" pos:end="99:44">dg</name></expr>]</index></name> <operator pos:start="99:47" pos:end="99:47">*</operator> <operator pos:start="99:49" pos:end="99:49">(</operator><literal type="number" pos:start="99:50" pos:end="99:54">255</literal> <operator pos:start="99:54" pos:end="99:54">-</operator> <name pos:start="99:56" pos:end="99:60">alpha</name><operator pos:start="99:61" pos:end="99:61">)</operator> <operator pos:start="99:63" pos:end="99:63">+</operator> <name pos:start="99:65" pos:end="99:69"><name pos:start="99:65" pos:end="99:65">s</name><index pos:start="99:66" pos:end="99:69">[<expr pos:start="99:67" pos:end="99:68"><name pos:start="99:67" pos:end="99:68">sg</name></expr>]</index></name> <operator pos:start="99:71" pos:end="99:71">*</operator> <name pos:start="99:73" pos:end="99:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:79"><expr pos:start="101:21" pos:end="101:78"><name pos:start="101:21" pos:end="101:25"><name pos:start="101:21" pos:end="101:21">d</name><index pos:start="101:22" pos:end="101:25">[<expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">db</name></expr>]</index></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <call pos:start="101:29" pos:end="101:78"><name pos:start="101:29" pos:end="101:39">FAST_DIV255</name><argument_list pos:start="101:40" pos:end="101:78">(<argument pos:start="101:41" pos:end="101:77"><expr pos:start="101:41" pos:end="101:77"><name pos:start="101:41" pos:end="101:45"><name pos:start="101:41" pos:end="101:41">d</name><index pos:start="101:42" pos:end="101:45">[<expr pos:start="101:43" pos:end="101:44"><name pos:start="101:43" pos:end="101:44">db</name></expr>]</index></name> <operator pos:start="101:47" pos:end="101:47">*</operator> <operator pos:start="101:49" pos:end="101:49">(</operator><literal type="number" pos:start="101:50" pos:end="101:54">255</literal> <operator pos:start="101:54" pos:end="101:54">-</operator> <name pos:start="101:56" pos:end="101:60">alpha</name><operator pos:start="101:61" pos:end="101:61">)</operator> <operator pos:start="101:63" pos:end="101:63">+</operator> <name pos:start="101:65" pos:end="101:69"><name pos:start="101:65" pos:end="101:65">s</name><index pos:start="101:66" pos:end="101:69">[<expr pos:start="101:67" pos:end="101:68"><name pos:start="101:67" pos:end="101:68">sb</name></expr>]</index></name> <operator pos:start="101:71" pos:end="101:71">*</operator> <name pos:start="101:73" pos:end="101:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <if_stmt pos:start="105:17" pos:end="127:17"><if pos:start="105:17" pos:end="127:17">if <condition pos:start="105:20" pos:end="105:35">(<expr pos:start="105:21" pos:end="105:34"><name pos:start="105:21" pos:end="105:34">main_has_alpha</name></expr>)</condition> <block pos:start="105:37" pos:end="127:17">{<block_content pos:start="107:21" pos:end="125:21">

                    <switch pos:start="107:21" pos:end="125:21">switch <condition pos:start="107:28" pos:end="107:34">(<expr pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:33">alpha</name></expr>)</condition> <block pos:start="107:36" pos:end="125:21">{<block_content pos:start="109:21" pos:end="123:68">

                    <case pos:start="109:21" pos:end="109:27">case <expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr>:</case>

                        <break pos:start="111:25" pos:end="111:30">break;</break>

                    <case pos:start="113:21" pos:end="113:29">case <expr pos:start="113:26" pos:end="113:28"><literal type="number" pos:start="113:26" pos:end="113:28">255</literal></expr>:</case>

                        <expr_stmt pos:start="115:25" pos:end="115:38"><expr pos:start="115:25" pos:end="115:37"><name pos:start="115:25" pos:end="115:29"><name pos:start="115:25" pos:end="115:25">d</name><index pos:start="115:26" pos:end="115:29">[<expr pos:start="115:27" pos:end="115:28"><name pos:start="115:27" pos:end="115:28">da</name></expr>]</index></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:37"><name pos:start="115:33" pos:end="115:33">s</name><index pos:start="115:34" pos:end="115:37">[<expr pos:start="115:35" pos:end="115:36"><name pos:start="115:35" pos:end="115:36">sa</name></expr>]</index></name></expr>;</expr_stmt>

                        <break pos:start="117:25" pos:end="117:30">break;</break>

                    <default pos:start="119:21" pos:end="119:28">default:</default>

                        <comment type="line" pos:start="121:25" pos:end="121:96">// apply alpha compositing: main_alpha += (1-main_alpha) * overlay_alpha</comment>

                        <expr_stmt pos:start="123:25" pos:end="123:68"><expr pos:start="123:25" pos:end="123:67"><name pos:start="123:25" pos:end="123:29"><name pos:start="123:25" pos:end="123:25">d</name><index pos:start="123:26" pos:end="123:29">[<expr pos:start="123:27" pos:end="123:28"><name pos:start="123:27" pos:end="123:28">da</name></expr>]</index></name> <operator pos:start="123:31" pos:end="123:32">+=</operator> <call pos:start="123:34" pos:end="123:67"><name pos:start="123:34" pos:end="123:44">FAST_DIV255</name><argument_list pos:start="123:45" pos:end="123:67">(<argument pos:start="123:46" pos:end="123:66"><expr pos:start="123:46" pos:end="123:66"><operator pos:start="123:46" pos:end="123:46">(</operator><literal type="number" pos:start="123:47" pos:end="123:51">255</literal> <operator pos:start="123:51" pos:end="123:51">-</operator> <name pos:start="123:53" pos:end="123:57"><name pos:start="123:53" pos:end="123:53">d</name><index pos:start="123:54" pos:end="123:57">[<expr pos:start="123:55" pos:end="123:56"><name pos:start="123:55" pos:end="123:56">da</name></expr>]</index></name><operator pos:start="123:58" pos:end="123:58">)</operator> <operator pos:start="123:60" pos:end="123:60">*</operator> <name pos:start="123:62" pos:end="123:66"><name pos:start="123:62" pos:end="123:62">s</name><index pos:start="123:63" pos:end="123:66">[<expr pos:start="123:64" pos:end="123:65"><name pos:start="123:64" pos:end="123:65">sa</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></switch>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:27"><expr pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:17">d</name> <operator pos:start="129:19" pos:end="129:20">+=</operator> <name pos:start="129:22" pos:end="129:26">dstep</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:27"><expr pos:start="131:17" pos:end="131:26"><name pos:start="131:17" pos:end="131:17">s</name> <operator pos:start="131:19" pos:end="131:20">+=</operator> <name pos:start="131:22" pos:end="131:26">sstep</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="135:13" pos:end="135:35"><expr pos:start="135:13" pos:end="135:34"><name pos:start="135:13" pos:end="135:14">dp</name> <operator pos:start="135:16" pos:end="135:17">+=</operator> <name pos:start="135:19" pos:end="135:34"><name pos:start="135:19" pos:end="135:21">dst</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:31">linesize</name><index pos:start="135:32" pos:end="135:34">[<expr pos:start="135:33" pos:end="135:33"><literal type="number" pos:start="135:33" pos:end="135:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:35"><expr pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:14">sp</name> <operator pos:start="137:16" pos:end="137:17">+=</operator> <name pos:start="137:19" pos:end="137:34"><name pos:start="137:19" pos:end="137:21">src</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:31">linesize</name><index pos:start="137:32" pos:end="137:34">[<expr pos:start="137:33" pos:end="137:33"><literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="141:7" pos:end="311:5">else <block pos:start="141:12" pos:end="311:5">{<block_content pos:start="143:9" pos:end="309:9">

        <decl_stmt pos:start="143:9" pos:end="143:56"><decl pos:start="143:9" pos:end="143:55"><type pos:start="143:9" pos:end="143:17"><specifier pos:start="143:9" pos:end="143:13">const</specifier> <name pos:start="143:15" pos:end="143:17">int</name></type> <name pos:start="143:19" pos:end="143:32">main_has_alpha</name> <init pos:start="143:34" pos:end="143:55">= <expr pos:start="143:36" pos:end="143:55"><name pos:start="143:36" pos:end="143:55"><name pos:start="143:36" pos:end="143:39">over</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:55">main_has_alpha</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="145:9" pos:end="203:9"><if pos:start="145:9" pos:end="203:9">if <condition pos:start="145:12" pos:end="145:27">(<expr pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:26">main_has_alpha</name></expr>)</condition> <block pos:start="145:29" pos:end="203:9">{<block_content pos:start="147:13" pos:end="201:13">

            <decl_stmt pos:start="147:13" pos:end="149:47"><decl pos:start="147:13" pos:end="149:46"><type pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:19">uint8_t</name> <modifier pos:start="147:21" pos:end="147:21">*</modifier></type><name pos:start="147:22" pos:end="147:23">da</name> <init pos:start="147:25" pos:end="149:46">= <expr pos:start="147:27" pos:end="149:46"><name pos:start="147:27" pos:end="147:38"><name pos:start="147:27" pos:end="147:29">dst</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:35">data</name><index pos:start="147:36" pos:end="147:38">[<expr pos:start="147:37" pos:end="147:37"><literal type="number" pos:start="147:37" pos:end="147:37">3</literal></expr>]</index></name> <operator pos:start="147:40" pos:end="147:40">+</operator> <name pos:start="147:42" pos:end="147:42">x</name> <operator pos:start="147:44" pos:end="147:44">*</operator> <name pos:start="147:46" pos:end="147:67"><name pos:start="147:46" pos:end="147:49">over</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:64">main_pix_step</name><index pos:start="147:65" pos:end="147:67">[<expr pos:start="147:66" pos:end="147:66"><literal type="number" pos:start="147:66" pos:end="147:66">3</literal></expr>]</index></name> <operator pos:start="147:69" pos:end="147:69">+</operator>

                          <name pos:start="149:27" pos:end="149:27">y</name> <operator pos:start="149:29" pos:end="149:29">*</operator> <name pos:start="149:31" pos:end="149:46"><name pos:start="149:31" pos:end="149:33">dst</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:43">linesize</name><index pos:start="149:44" pos:end="149:46">[<expr pos:start="149:45" pos:end="149:45"><literal type="number" pos:start="149:45" pos:end="149:45">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="151:13" pos:end="151:39"><decl pos:start="151:13" pos:end="151:38"><type pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:19">uint8_t</name> <modifier pos:start="151:21" pos:end="151:21">*</modifier></type><name pos:start="151:22" pos:end="151:23">sa</name> <init pos:start="151:25" pos:end="151:38">= <expr pos:start="151:27" pos:end="151:38"><name pos:start="151:27" pos:end="151:38"><name pos:start="151:27" pos:end="151:29">src</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:35">data</name><index pos:start="151:36" pos:end="151:38">[<expr pos:start="151:37" pos:end="151:37"><literal type="number" pos:start="151:37" pos:end="151:37">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="153:13" pos:end="153:26"><decl pos:start="153:13" pos:end="153:25"><type pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:19">uint8_t</name></type> <name pos:start="153:21" pos:end="153:25">alpha</name></decl>;</decl_stmt>          <comment type="line" format="doxygen" pos:start="153:37" pos:end="153:82">///&lt; the amount of overlay to blend on to main</comment>

            <for pos:start="155:13" pos:end="201:13">for <control pos:start="155:17" pos:end="155:40">(<init pos:start="155:18" pos:end="155:23"><expr pos:start="155:18" pos:end="155:22"><name pos:start="155:18" pos:end="155:18">i</name> <operator pos:start="155:20" pos:end="155:20">=</operator> <literal type="number" pos:start="155:22" pos:end="155:22">0</literal></expr>;</init> <condition pos:start="155:25" pos:end="155:35"><expr pos:start="155:25" pos:end="155:34"><name pos:start="155:25" pos:end="155:25">i</name> <operator pos:start="155:27" pos:end="155:27">&lt;</operator> <name pos:start="155:29" pos:end="155:34">height</name></expr>;</condition> <incr pos:start="155:37" pos:end="155:39"><expr pos:start="155:37" pos:end="155:39"><name pos:start="155:37" pos:end="155:37">i</name><operator pos:start="155:38" pos:end="155:39">++</operator></expr></incr>)</control> <block pos:start="155:42" pos:end="201:13">{<block_content pos:start="157:17" pos:end="199:39">

                <decl_stmt pos:start="157:17" pos:end="157:41"><decl pos:start="157:17" pos:end="157:31"><type pos:start="157:17" pos:end="157:25"><name pos:start="157:17" pos:end="157:23">uint8_t</name> <modifier pos:start="157:25" pos:end="157:25">*</modifier></type><name pos:start="157:26" pos:end="157:26">d</name> <init pos:start="157:28" pos:end="157:31">= <expr pos:start="157:30" pos:end="157:31"><name pos:start="157:30" pos:end="157:31">da</name></expr></init></decl>, <decl pos:start="157:34" pos:end="157:40"><type ref="prev" pos:start="157:17" pos:end="157:25"><modifier pos:start="157:34" pos:end="157:34">*</modifier></type><name pos:start="157:35" pos:end="157:35">s</name> <init pos:start="157:37" pos:end="157:40">= <expr pos:start="157:39" pos:end="157:40"><name pos:start="157:39" pos:end="157:40">sa</name></expr></init></decl>;</decl_stmt>

                <for pos:start="159:17" pos:end="195:17">for <control pos:start="159:21" pos:end="159:43">(<init pos:start="159:22" pos:end="159:27"><expr pos:start="159:22" pos:end="159:26"><name pos:start="159:22" pos:end="159:22">j</name> <operator pos:start="159:24" pos:end="159:24">=</operator> <literal type="number" pos:start="159:26" pos:end="159:26">0</literal></expr>;</init> <condition pos:start="159:29" pos:end="159:38"><expr pos:start="159:29" pos:end="159:37"><name pos:start="159:29" pos:end="159:29">j</name> <operator pos:start="159:31" pos:end="159:31">&lt;</operator> <name pos:start="159:33" pos:end="159:37">width</name></expr>;</condition> <incr pos:start="159:40" pos:end="159:42"><expr pos:start="159:40" pos:end="159:42"><name pos:start="159:40" pos:end="159:40">j</name><operator pos:start="159:41" pos:end="159:42">++</operator></expr></incr>)</control> <block pos:start="159:45" pos:end="195:17">{<block_content pos:start="161:21" pos:end="193:27">

                    <expr_stmt pos:start="161:21" pos:end="161:31"><expr pos:start="161:21" pos:end="161:30"><name pos:start="161:21" pos:end="161:25">alpha</name> <operator pos:start="161:27" pos:end="161:27">=</operator> <operator pos:start="161:29" pos:end="161:29">*</operator><name pos:start="161:30" pos:end="161:30">s</name></expr>;</expr_stmt>

                    <if_stmt pos:start="163:21" pos:end="169:21"><if pos:start="163:21" pos:end="169:21">if <condition pos:start="163:24" pos:end="163:51">(<expr pos:start="163:25" pos:end="163:50"><name pos:start="163:25" pos:end="163:29">alpha</name> <operator pos:start="163:31" pos:end="163:32">!=</operator> <literal type="number" pos:start="163:34" pos:end="163:34">0</literal> <operator pos:start="163:36" pos:end="163:37">&amp;&amp;</operator> <name pos:start="163:39" pos:end="163:43">alpha</name> <operator pos:start="163:45" pos:end="163:46">!=</operator> <literal type="number" pos:start="163:48" pos:end="163:50">255</literal></expr>)</condition> <block pos:start="163:53" pos:end="169:21">{<block_content pos:start="165:25" pos:end="167:68">

                        <decl_stmt pos:start="165:25" pos:end="165:45"><decl pos:start="165:25" pos:end="165:44"><type pos:start="165:25" pos:end="165:31"><name pos:start="165:25" pos:end="165:31">uint8_t</name></type> <name pos:start="165:33" pos:end="165:39">alpha_d</name> <init pos:start="165:41" pos:end="165:44">= <expr pos:start="165:43" pos:end="165:44"><operator pos:start="165:43" pos:end="165:43">*</operator><name pos:start="165:44" pos:end="165:44">d</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="167:25" pos:end="167:68"><expr pos:start="167:25" pos:end="167:67"><name pos:start="167:25" pos:end="167:29">alpha</name> <operator pos:start="167:31" pos:end="167:31">=</operator> <call pos:start="167:33" pos:end="167:67"><name pos:start="167:33" pos:end="167:51">UNPREMULTIPLY_ALPHA</name><argument_list pos:start="167:52" pos:end="167:67">(<argument pos:start="167:53" pos:end="167:57"><expr pos:start="167:53" pos:end="167:57"><name pos:start="167:53" pos:end="167:57">alpha</name></expr></argument>, <argument pos:start="167:60" pos:end="167:66"><expr pos:start="167:60" pos:end="167:66"><name pos:start="167:60" pos:end="167:66">alpha_d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <switch pos:start="171:21" pos:end="189:21">switch <condition pos:start="171:28" pos:end="171:34">(<expr pos:start="171:29" pos:end="171:33"><name pos:start="171:29" pos:end="171:33">alpha</name></expr>)</condition> <block pos:start="171:36" pos:end="189:21">{<block_content pos:start="173:21" pos:end="187:59">

                    <case pos:start="173:21" pos:end="173:27">case <expr pos:start="173:26" pos:end="173:26"><literal type="number" pos:start="173:26" pos:end="173:26">0</literal></expr>:</case>

                        <break pos:start="175:25" pos:end="175:30">break;</break>

                    <case pos:start="177:21" pos:end="177:29">case <expr pos:start="177:26" pos:end="177:28"><literal type="number" pos:start="177:26" pos:end="177:28">255</literal></expr>:</case>

                        <expr_stmt pos:start="179:25" pos:end="179:32"><expr pos:start="179:25" pos:end="179:31"><operator pos:start="179:25" pos:end="179:25">*</operator><name pos:start="179:26" pos:end="179:26">d</name> <operator pos:start="179:28" pos:end="179:28">=</operator> <operator pos:start="179:30" pos:end="179:30">*</operator><name pos:start="179:31" pos:end="179:31">s</name></expr>;</expr_stmt>

                        <break pos:start="181:25" pos:end="181:30">break;</break>

                    <default pos:start="183:21" pos:end="183:28">default:</default>

                        <comment type="line" pos:start="185:25" pos:end="185:96">// apply alpha compositing: main_alpha += (1-main_alpha) * overlay_alpha</comment>

                        <expr_stmt pos:start="187:25" pos:end="187:59"><expr pos:start="187:25" pos:end="187:58"><operator pos:start="187:25" pos:end="187:25">*</operator><name pos:start="187:26" pos:end="187:26">d</name> <operator pos:start="187:28" pos:end="187:29">+=</operator> <call pos:start="187:31" pos:end="187:58"><name pos:start="187:31" pos:end="187:41">FAST_DIV255</name><argument_list pos:start="187:42" pos:end="187:58">(<argument pos:start="187:43" pos:end="187:57"><expr pos:start="187:43" pos:end="187:57"><operator pos:start="187:43" pos:end="187:43">(</operator><literal type="number" pos:start="187:44" pos:end="187:48">255</literal> <operator pos:start="187:48" pos:end="187:48">-</operator> <operator pos:start="187:50" pos:end="187:50">*</operator><name pos:start="187:51" pos:end="187:51">d</name><operator pos:start="187:52" pos:end="187:52">)</operator> <operator pos:start="187:54" pos:end="187:54">*</operator> <operator pos:start="187:56" pos:end="187:56">*</operator><name pos:start="187:57" pos:end="187:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="191:21" pos:end="191:27"><expr pos:start="191:21" pos:end="191:26"><name pos:start="191:21" pos:end="191:21">d</name> <operator pos:start="191:23" pos:end="191:24">+=</operator> <literal type="number" pos:start="191:26" pos:end="191:26">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:27"><expr pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:21">s</name> <operator pos:start="193:23" pos:end="193:24">+=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="197:17" pos:end="197:39"><expr pos:start="197:17" pos:end="197:38"><name pos:start="197:17" pos:end="197:18">da</name> <operator pos:start="197:20" pos:end="197:21">+=</operator> <name pos:start="197:23" pos:end="197:38"><name pos:start="197:23" pos:end="197:25">dst</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:35">linesize</name><index pos:start="197:36" pos:end="197:38">[<expr pos:start="197:37" pos:end="197:37"><literal type="number" pos:start="197:37" pos:end="197:37">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:39"><expr pos:start="199:17" pos:end="199:38"><name pos:start="199:17" pos:end="199:18">sa</name> <operator pos:start="199:20" pos:end="199:21">+=</operator> <name pos:start="199:23" pos:end="199:38"><name pos:start="199:23" pos:end="199:25">src</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:35">linesize</name><index pos:start="199:36" pos:end="199:38">[<expr pos:start="199:37" pos:end="199:37"><literal type="number" pos:start="199:37" pos:end="199:37">3</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <for pos:start="205:9" pos:end="309:9">for <control pos:start="205:13" pos:end="205:31">(<init pos:start="205:14" pos:end="205:19"><expr pos:start="205:14" pos:end="205:18"><name pos:start="205:14" pos:end="205:14">i</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <literal type="number" pos:start="205:18" pos:end="205:18">0</literal></expr>;</init> <condition pos:start="205:21" pos:end="205:26"><expr pos:start="205:21" pos:end="205:25"><name pos:start="205:21" pos:end="205:21">i</name> <operator pos:start="205:23" pos:end="205:23">&lt;</operator> <literal type="number" pos:start="205:25" pos:end="205:25">3</literal></expr>;</condition> <incr pos:start="205:28" pos:end="205:30"><expr pos:start="205:28" pos:end="205:30"><name pos:start="205:28" pos:end="205:28">i</name><operator pos:start="205:29" pos:end="205:30">++</operator></expr></incr>)</control> <block pos:start="205:33" pos:end="309:9">{<block_content pos:start="207:13" pos:end="307:13">

            <decl_stmt pos:start="207:13" pos:end="207:42"><decl pos:start="207:13" pos:end="207:41"><type pos:start="207:13" pos:end="207:15"><name pos:start="207:13" pos:end="207:15">int</name></type> <name pos:start="207:17" pos:end="207:20">hsub</name> <init pos:start="207:22" pos:end="207:41">= <expr pos:start="207:24" pos:end="207:41"><ternary pos:start="207:24" pos:end="207:41"><condition pos:start="207:24" pos:end="207:26"><expr pos:start="207:24" pos:end="207:24"><name pos:start="207:24" pos:end="207:24">i</name></expr> ?</condition><then pos:start="207:28" pos:end="207:37"> <expr pos:start="207:28" pos:end="207:37"><name pos:start="207:28" pos:end="207:37"><name pos:start="207:28" pos:end="207:31">over</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:37">hsub</name></name></expr> </then><else pos:start="207:39" pos:end="207:41">: <expr pos:start="207:41" pos:end="207:41"><literal type="number" pos:start="207:41" pos:end="207:41">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="209:13" pos:end="209:42"><decl pos:start="209:13" pos:end="209:41"><type pos:start="209:13" pos:end="209:15"><name pos:start="209:13" pos:end="209:15">int</name></type> <name pos:start="209:17" pos:end="209:20">vsub</name> <init pos:start="209:22" pos:end="209:41">= <expr pos:start="209:24" pos:end="209:41"><ternary pos:start="209:24" pos:end="209:41"><condition pos:start="209:24" pos:end="209:26"><expr pos:start="209:24" pos:end="209:24"><name pos:start="209:24" pos:end="209:24">i</name></expr> ?</condition><then pos:start="209:28" pos:end="209:37"> <expr pos:start="209:28" pos:end="209:37"><name pos:start="209:28" pos:end="209:37"><name pos:start="209:28" pos:end="209:31">over</name><operator pos:start="209:32" pos:end="209:33">-&gt;</operator><name pos:start="209:34" pos:end="209:37">vsub</name></name></expr> </then><else pos:start="209:39" pos:end="209:41">: <expr pos:start="209:41" pos:end="209:41"><literal type="number" pos:start="209:41" pos:end="209:41">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="211:13" pos:end="213:47"><decl pos:start="211:13" pos:end="213:46"><type pos:start="211:13" pos:end="211:21"><name pos:start="211:13" pos:end="211:19">uint8_t</name> <modifier pos:start="211:21" pos:end="211:21">*</modifier></type><name pos:start="211:22" pos:end="211:23">dp</name> <init pos:start="211:25" pos:end="213:46">= <expr pos:start="211:27" pos:end="213:46"><name pos:start="211:27" pos:end="211:38"><name pos:start="211:27" pos:end="211:29">dst</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:35">data</name><index pos:start="211:36" pos:end="211:38">[<expr pos:start="211:37" pos:end="211:37"><name pos:start="211:37" pos:end="211:37">i</name></expr>]</index></name> <operator pos:start="211:40" pos:end="211:40">+</operator> <operator pos:start="211:42" pos:end="211:42">(</operator><name pos:start="211:43" pos:end="211:43">x</name> <operator pos:start="211:45" pos:end="211:46">&gt;&gt;</operator> <name pos:start="211:48" pos:end="211:51">hsub</name><operator pos:start="211:52" pos:end="211:52">)</operator> <operator pos:start="211:54" pos:end="211:54">+</operator>

                <operator pos:start="213:17" pos:end="213:17">(</operator><name pos:start="213:18" pos:end="213:18">y</name> <operator pos:start="213:20" pos:end="213:21">&gt;&gt;</operator> <name pos:start="213:23" pos:end="213:26">vsub</name><operator pos:start="213:27" pos:end="213:27">)</operator> <operator pos:start="213:29" pos:end="213:29">*</operator> <name pos:start="213:31" pos:end="213:46"><name pos:start="213:31" pos:end="213:33">dst</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:43">linesize</name><index pos:start="213:44" pos:end="213:46">[<expr pos:start="213:45" pos:end="213:45"><name pos:start="213:45" pos:end="213:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="215:13" pos:end="215:39"><decl pos:start="215:13" pos:end="215:38"><type pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:19">uint8_t</name> <modifier pos:start="215:21" pos:end="215:21">*</modifier></type><name pos:start="215:22" pos:end="215:23">sp</name> <init pos:start="215:25" pos:end="215:38">= <expr pos:start="215:27" pos:end="215:38"><name pos:start="215:27" pos:end="215:38"><name pos:start="215:27" pos:end="215:29">src</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:35">data</name><index pos:start="215:36" pos:end="215:38">[<expr pos:start="215:37" pos:end="215:37"><name pos:start="215:37" pos:end="215:37">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="217:13" pos:end="217:39"><decl pos:start="217:13" pos:end="217:38"><type pos:start="217:13" pos:end="217:21"><name pos:start="217:13" pos:end="217:19">uint8_t</name> <modifier pos:start="217:21" pos:end="217:21">*</modifier></type><name pos:start="217:22" pos:end="217:23">ap</name> <init pos:start="217:25" pos:end="217:38">= <expr pos:start="217:27" pos:end="217:38"><name pos:start="217:27" pos:end="217:38"><name pos:start="217:27" pos:end="217:29">src</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:35">data</name><index pos:start="217:36" pos:end="217:38">[<expr pos:start="217:37" pos:end="217:37"><literal type="number" pos:start="217:37" pos:end="217:37">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="219:13" pos:end="219:53"><decl pos:start="219:13" pos:end="219:52"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:18">wp</name> <init pos:start="219:20" pos:end="219:52">= <expr pos:start="219:22" pos:end="219:52"><call pos:start="219:22" pos:end="219:44"><name pos:start="219:22" pos:end="219:28">FFALIGN</name><argument_list pos:start="219:29" pos:end="219:44">(<argument pos:start="219:30" pos:end="219:34"><expr pos:start="219:30" pos:end="219:34"><name pos:start="219:30" pos:end="219:34">width</name></expr></argument>, <argument pos:start="219:37" pos:end="219:43"><expr pos:start="219:37" pos:end="219:43"><literal type="number" pos:start="219:37" pos:end="219:37">1</literal><operator pos:start="219:38" pos:end="219:39">&lt;&lt;</operator><name pos:start="219:40" pos:end="219:43">hsub</name></expr></argument>)</argument_list></call> <operator pos:start="219:46" pos:end="219:47">&gt;&gt;</operator> <name pos:start="219:49" pos:end="219:52">hsub</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="221:13" pos:end="221:54"><decl pos:start="221:13" pos:end="221:53"><type pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">int</name></type> <name pos:start="221:17" pos:end="221:18">hp</name> <init pos:start="221:20" pos:end="221:53">= <expr pos:start="221:22" pos:end="221:53"><call pos:start="221:22" pos:end="221:45"><name pos:start="221:22" pos:end="221:28">FFALIGN</name><argument_list pos:start="221:29" pos:end="221:45">(<argument pos:start="221:30" pos:end="221:35"><expr pos:start="221:30" pos:end="221:35"><name pos:start="221:30" pos:end="221:35">height</name></expr></argument>, <argument pos:start="221:38" pos:end="221:44"><expr pos:start="221:38" pos:end="221:44"><literal type="number" pos:start="221:38" pos:end="221:38">1</literal><operator pos:start="221:39" pos:end="221:40">&lt;&lt;</operator><name pos:start="221:41" pos:end="221:44">vsub</name></expr></argument>)</argument_list></call> <operator pos:start="221:47" pos:end="221:48">&gt;&gt;</operator> <name pos:start="221:50" pos:end="221:53">vsub</name></expr></init></decl>;</decl_stmt>

            <for pos:start="223:13" pos:end="307:13">for <control pos:start="223:17" pos:end="223:36">(<init pos:start="223:18" pos:end="223:23"><expr pos:start="223:18" pos:end="223:22"><name pos:start="223:18" pos:end="223:18">j</name> <operator pos:start="223:20" pos:end="223:20">=</operator> <literal type="number" pos:start="223:22" pos:end="223:22">0</literal></expr>;</init> <condition pos:start="223:25" pos:end="223:31"><expr pos:start="223:25" pos:end="223:30"><name pos:start="223:25" pos:end="223:25">j</name> <operator pos:start="223:27" pos:end="223:27">&lt;</operator> <name pos:start="223:29" pos:end="223:30">hp</name></expr>;</condition> <incr pos:start="223:33" pos:end="223:35"><expr pos:start="223:33" pos:end="223:35"><name pos:start="223:33" pos:end="223:33">j</name><operator pos:start="223:34" pos:end="223:35">++</operator></expr></incr>)</control> <block pos:start="223:38" pos:end="307:13">{<block_content pos:start="225:17" pos:end="305:53">

                <decl_stmt pos:start="225:17" pos:end="225:50"><decl pos:start="225:17" pos:end="225:31"><type pos:start="225:17" pos:end="225:25"><name pos:start="225:17" pos:end="225:23">uint8_t</name> <modifier pos:start="225:25" pos:end="225:25">*</modifier></type><name pos:start="225:26" pos:end="225:26">d</name> <init pos:start="225:28" pos:end="225:31">= <expr pos:start="225:30" pos:end="225:31"><name pos:start="225:30" pos:end="225:31">dp</name></expr></init></decl>, <decl pos:start="225:34" pos:end="225:40"><type ref="prev" pos:start="225:17" pos:end="225:25"><modifier pos:start="225:34" pos:end="225:34">*</modifier></type><name pos:start="225:35" pos:end="225:35">s</name> <init pos:start="225:37" pos:end="225:40">= <expr pos:start="225:39" pos:end="225:40"><name pos:start="225:39" pos:end="225:40">sp</name></expr></init></decl>, <decl pos:start="225:43" pos:end="225:49"><type ref="prev" pos:start="225:17" pos:end="225:25"><modifier pos:start="225:43" pos:end="225:43">*</modifier></type><name pos:start="225:44" pos:end="225:44">a</name> <init pos:start="225:46" pos:end="225:49">= <expr pos:start="225:48" pos:end="225:49"><name pos:start="225:48" pos:end="225:49">ap</name></expr></init></decl>;</decl_stmt>

                <for pos:start="227:17" pos:end="299:17">for <control pos:start="227:21" pos:end="227:40">(<init pos:start="227:22" pos:end="227:27"><expr pos:start="227:22" pos:end="227:26"><name pos:start="227:22" pos:end="227:22">k</name> <operator pos:start="227:24" pos:end="227:24">=</operator> <literal type="number" pos:start="227:26" pos:end="227:26">0</literal></expr>;</init> <condition pos:start="227:29" pos:end="227:35"><expr pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:29">k</name> <operator pos:start="227:31" pos:end="227:31">&lt;</operator> <name pos:start="227:33" pos:end="227:34">wp</name></expr>;</condition> <incr pos:start="227:37" pos:end="227:39"><expr pos:start="227:37" pos:end="227:39"><name pos:start="227:37" pos:end="227:37">k</name><operator pos:start="227:38" pos:end="227:39">++</operator></expr></incr>)</control> <block pos:start="227:42" pos:end="299:17">{<block_content pos:start="231:21" pos:end="297:35">

                    <comment type="line" pos:start="229:21" pos:end="229:74">// average alpha for color components, improve quality</comment>

                    <decl_stmt pos:start="231:21" pos:end="231:48"><decl pos:start="231:21" pos:end="231:31"><type pos:start="231:21" pos:end="231:23"><name pos:start="231:21" pos:end="231:23">int</name></type> <name pos:start="231:25" pos:end="231:31">alpha_v</name></decl>, <decl pos:start="231:34" pos:end="231:40"><type ref="prev" pos:start="231:21" pos:end="231:23"/><name pos:start="231:34" pos:end="231:40">alpha_h</name></decl>, <decl pos:start="231:43" pos:end="231:47"><type ref="prev" pos:start="231:21" pos:end="231:23"/><name pos:start="231:43" pos:end="231:47">alpha</name></decl>;</decl_stmt>

                    <if_stmt pos:start="233:21" pos:end="253:37"><if pos:start="233:21" pos:end="239:21">if <condition pos:start="233:24" pos:end="233:61">(<expr pos:start="233:25" pos:end="233:60"><name pos:start="233:25" pos:end="233:28">hsub</name> <operator pos:start="233:30" pos:end="233:31">&amp;&amp;</operator> <name pos:start="233:33" pos:end="233:36">vsub</name> <operator pos:start="233:38" pos:end="233:39">&amp;&amp;</operator> <name pos:start="233:41" pos:end="233:41">j</name><operator pos:start="233:42" pos:end="233:42">+</operator><literal type="number" pos:start="233:43" pos:end="233:43">1</literal> <operator pos:start="233:45" pos:end="233:45">&lt;</operator> <name pos:start="233:47" pos:end="233:48">hp</name> <operator pos:start="233:50" pos:end="233:51">&amp;&amp;</operator> <name pos:start="233:53" pos:end="233:53">k</name><operator pos:start="233:54" pos:end="233:54">+</operator><literal type="number" pos:start="233:55" pos:end="233:55">1</literal> <operator pos:start="233:57" pos:end="233:57">&lt;</operator> <name pos:start="233:59" pos:end="233:60">wp</name></expr>)</condition> <block pos:start="233:63" pos:end="239:21">{<block_content pos:start="235:25" pos:end="237:68">

                        <expr_stmt pos:start="235:25" pos:end="237:68"><expr pos:start="235:25" pos:end="237:67"><name pos:start="235:25" pos:end="235:29">alpha</name> <operator pos:start="235:31" pos:end="235:31">=</operator> <operator pos:start="235:33" pos:end="235:33">(</operator><name pos:start="235:34" pos:end="235:37"><name pos:start="235:34" pos:end="235:34">a</name><index pos:start="235:35" pos:end="235:37">[<expr pos:start="235:36" pos:end="235:36"><literal type="number" pos:start="235:36" pos:end="235:36">0</literal></expr>]</index></name> <operator pos:start="235:39" pos:end="235:39">+</operator> <name pos:start="235:41" pos:end="235:59"><name pos:start="235:41" pos:end="235:41">a</name><index pos:start="235:42" pos:end="235:59">[<expr pos:start="235:43" pos:end="235:58"><name pos:start="235:43" pos:end="235:58"><name pos:start="235:43" pos:end="235:45">src</name><operator pos:start="235:46" pos:end="235:47">-&gt;</operator><name pos:start="235:48" pos:end="235:55">linesize</name><index pos:start="235:56" pos:end="235:58">[<expr pos:start="235:57" pos:end="235:57"><literal type="number" pos:start="235:57" pos:end="235:57">3</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="235:61" pos:end="235:61">+</operator>

                                 <name pos:start="237:34" pos:end="237:37"><name pos:start="237:34" pos:end="237:34">a</name><index pos:start="237:35" pos:end="237:37">[<expr pos:start="237:36" pos:end="237:36"><literal type="number" pos:start="237:36" pos:end="237:36">1</literal></expr>]</index></name> <operator pos:start="237:39" pos:end="237:39">+</operator> <name pos:start="237:41" pos:end="237:61"><name pos:start="237:41" pos:end="237:41">a</name><index pos:start="237:42" pos:end="237:61">[<expr pos:start="237:43" pos:end="237:60"><name pos:start="237:43" pos:end="237:58"><name pos:start="237:43" pos:end="237:45">src</name><operator pos:start="237:46" pos:end="237:47">-&gt;</operator><name pos:start="237:48" pos:end="237:55">linesize</name><index pos:start="237:56" pos:end="237:58">[<expr pos:start="237:57" pos:end="237:57"><literal type="number" pos:start="237:57" pos:end="237:57">3</literal></expr>]</index></name><operator pos:start="237:59" pos:end="237:59">+</operator><literal type="number" pos:start="237:60" pos:end="237:60">1</literal></expr>]</index></name><operator pos:start="237:62" pos:end="237:62">)</operator> <operator pos:start="237:64" pos:end="237:65">&gt;&gt;</operator> <literal type="number" pos:start="237:67" pos:end="237:67">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="239:23" pos:end="251:21">else if <condition pos:start="239:31" pos:end="239:44">(<expr pos:start="239:32" pos:end="239:43"><name pos:start="239:32" pos:end="239:35">hsub</name> <operator pos:start="239:37" pos:end="239:38">||</operator> <name pos:start="239:40" pos:end="239:43">vsub</name></expr>)</condition> <block pos:start="239:46" pos:end="251:21">{<block_content pos:start="241:25" pos:end="249:57">

                        <expr_stmt pos:start="241:25" pos:end="243:54"><expr pos:start="241:25" pos:end="243:53"><name pos:start="241:25" pos:end="241:31">alpha_h</name> <operator pos:start="241:33" pos:end="241:33">=</operator> <ternary pos:start="241:35" pos:end="243:53"><condition pos:start="241:35" pos:end="241:52"><expr pos:start="241:35" pos:end="241:50"><name pos:start="241:35" pos:end="241:38">hsub</name> <operator pos:start="241:40" pos:end="241:41">&amp;&amp;</operator> <name pos:start="241:43" pos:end="241:43">k</name><operator pos:start="241:44" pos:end="241:44">+</operator><literal type="number" pos:start="241:45" pos:end="241:45">1</literal> <operator pos:start="241:47" pos:end="241:47">&lt;</operator> <name pos:start="241:49" pos:end="241:50">wp</name></expr> ?</condition><then pos:start="243:29" pos:end="243:46">

                            <expr pos:start="243:29" pos:end="243:46"><operator pos:start="243:29" pos:end="243:29">(</operator><name pos:start="243:30" pos:end="243:33"><name pos:start="243:30" pos:end="243:30">a</name><index pos:start="243:31" pos:end="243:33">[<expr pos:start="243:32" pos:end="243:32"><literal type="number" pos:start="243:32" pos:end="243:32">0</literal></expr>]</index></name> <operator pos:start="243:35" pos:end="243:35">+</operator> <name pos:start="243:37" pos:end="243:40"><name pos:start="243:37" pos:end="243:37">a</name><index pos:start="243:38" pos:end="243:40">[<expr pos:start="243:39" pos:end="243:39"><literal type="number" pos:start="243:39" pos:end="243:39">1</literal></expr>]</index></name><operator pos:start="243:41" pos:end="243:41">)</operator> <operator pos:start="243:43" pos:end="243:44">&gt;&gt;</operator> <literal type="number" pos:start="243:46" pos:end="243:46">1</literal></expr> </then><else pos:start="243:48" pos:end="243:53">: <expr pos:start="243:50" pos:end="243:53"><name pos:start="243:50" pos:end="243:53"><name pos:start="243:50" pos:end="243:50">a</name><index pos:start="243:51" pos:end="243:53">[<expr pos:start="243:52" pos:end="243:52"><literal type="number" pos:start="243:52" pos:end="243:52">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="245:25" pos:end="247:69"><expr pos:start="245:25" pos:end="247:68"><name pos:start="245:25" pos:end="245:31">alpha_v</name> <operator pos:start="245:33" pos:end="245:33">=</operator> <ternary pos:start="245:35" pos:end="247:68"><condition pos:start="245:35" pos:end="245:52"><expr pos:start="245:35" pos:end="245:50"><name pos:start="245:35" pos:end="245:38">vsub</name> <operator pos:start="245:40" pos:end="245:41">&amp;&amp;</operator> <name pos:start="245:43" pos:end="245:43">j</name><operator pos:start="245:44" pos:end="245:44">+</operator><literal type="number" pos:start="245:45" pos:end="245:45">1</literal> <operator pos:start="245:47" pos:end="245:47">&lt;</operator> <name pos:start="245:49" pos:end="245:50">hp</name></expr> ?</condition><then pos:start="247:29" pos:end="247:61">

                            <expr pos:start="247:29" pos:end="247:61"><operator pos:start="247:29" pos:end="247:29">(</operator><name pos:start="247:30" pos:end="247:33"><name pos:start="247:30" pos:end="247:30">a</name><index pos:start="247:31" pos:end="247:33">[<expr pos:start="247:32" pos:end="247:32"><literal type="number" pos:start="247:32" pos:end="247:32">0</literal></expr>]</index></name> <operator pos:start="247:35" pos:end="247:35">+</operator> <name pos:start="247:37" pos:end="247:55"><name pos:start="247:37" pos:end="247:37">a</name><index pos:start="247:38" pos:end="247:55">[<expr pos:start="247:39" pos:end="247:54"><name pos:start="247:39" pos:end="247:54"><name pos:start="247:39" pos:end="247:41">src</name><operator pos:start="247:42" pos:end="247:43">-&gt;</operator><name pos:start="247:44" pos:end="247:51">linesize</name><index pos:start="247:52" pos:end="247:54">[<expr pos:start="247:53" pos:end="247:53"><literal type="number" pos:start="247:53" pos:end="247:53">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="247:56" pos:end="247:56">)</operator> <operator pos:start="247:58" pos:end="247:59">&gt;&gt;</operator> <literal type="number" pos:start="247:61" pos:end="247:61">1</literal></expr> </then><else pos:start="247:63" pos:end="247:68">: <expr pos:start="247:65" pos:end="247:68"><name pos:start="247:65" pos:end="247:68"><name pos:start="247:65" pos:end="247:65">a</name><index pos:start="247:66" pos:end="247:68">[<expr pos:start="247:67" pos:end="247:67"><literal type="number" pos:start="247:67" pos:end="247:67">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                        <expr_stmt pos:start="249:25" pos:end="249:57"><expr pos:start="249:25" pos:end="249:56"><name pos:start="249:25" pos:end="249:29">alpha</name> <operator pos:start="249:31" pos:end="249:31">=</operator> <operator pos:start="249:33" pos:end="249:33">(</operator><name pos:start="249:34" pos:end="249:40">alpha_v</name> <operator pos:start="249:42" pos:end="249:42">+</operator> <name pos:start="249:44" pos:end="249:50">alpha_h</name><operator pos:start="249:51" pos:end="249:51">)</operator> <operator pos:start="249:53" pos:end="249:54">&gt;&gt;</operator> <literal type="number" pos:start="249:56" pos:end="249:56">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="251:23" pos:end="253:37">else<block type="pseudo" pos:start="253:25" pos:end="253:37"><block_content pos:start="253:25" pos:end="253:37">

                        <expr_stmt pos:start="253:25" pos:end="253:37"><expr pos:start="253:25" pos:end="253:36"><name pos:start="253:25" pos:end="253:29">alpha</name> <operator pos:start="253:31" pos:end="253:31">=</operator> <name pos:start="253:33" pos:end="253:36"><name pos:start="253:33" pos:end="253:33">a</name><index pos:start="253:34" pos:end="253:36">[<expr pos:start="253:35" pos:end="253:35"><literal type="number" pos:start="253:35" pos:end="253:35">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <comment type="line" pos:start="255:21" pos:end="255:91">// if the main channel has an alpha channel, alpha has to be calculated</comment>

                    <comment type="line" pos:start="257:21" pos:end="257:75">// to create an un-premultiplied (straight) alpha value</comment>

                    <if_stmt pos:start="259:21" pos:end="289:21"><if pos:start="259:21" pos:end="289:21">if <condition pos:start="259:24" pos:end="259:69">(<expr pos:start="259:25" pos:end="259:68"><name pos:start="259:25" pos:end="259:38">main_has_alpha</name> <operator pos:start="259:40" pos:end="259:41">&amp;&amp;</operator> <name pos:start="259:43" pos:end="259:47">alpha</name> <operator pos:start="259:49" pos:end="259:50">!=</operator> <literal type="number" pos:start="259:52" pos:end="259:52">0</literal> <operator pos:start="259:54" pos:end="259:55">&amp;&amp;</operator> <name pos:start="259:57" pos:end="259:61">alpha</name> <operator pos:start="259:63" pos:end="259:64">!=</operator> <literal type="number" pos:start="259:66" pos:end="259:68">255</literal></expr>)</condition> <block pos:start="259:71" pos:end="289:21">{<block_content pos:start="263:25" pos:end="287:68">

                        <comment type="line" pos:start="261:25" pos:end="261:78">// average alpha for color components, improve quality</comment>

                        <decl_stmt pos:start="263:25" pos:end="263:40"><decl pos:start="263:25" pos:end="263:39"><type pos:start="263:25" pos:end="263:31"><name pos:start="263:25" pos:end="263:31">uint8_t</name></type> <name pos:start="263:33" pos:end="263:39">alpha_d</name></decl>;</decl_stmt>

                        <if_stmt pos:start="265:25" pos:end="285:43"><if pos:start="265:25" pos:end="271:25">if <condition pos:start="265:28" pos:end="265:65">(<expr pos:start="265:29" pos:end="265:64"><name pos:start="265:29" pos:end="265:32">hsub</name> <operator pos:start="265:34" pos:end="265:35">&amp;&amp;</operator> <name pos:start="265:37" pos:end="265:40">vsub</name> <operator pos:start="265:42" pos:end="265:43">&amp;&amp;</operator> <name pos:start="265:45" pos:end="265:45">j</name><operator pos:start="265:46" pos:end="265:46">+</operator><literal type="number" pos:start="265:47" pos:end="265:47">1</literal> <operator pos:start="265:49" pos:end="265:49">&lt;</operator> <name pos:start="265:51" pos:end="265:52">hp</name> <operator pos:start="265:54" pos:end="265:55">&amp;&amp;</operator> <name pos:start="265:57" pos:end="265:57">k</name><operator pos:start="265:58" pos:end="265:58">+</operator><literal type="number" pos:start="265:59" pos:end="265:59">1</literal> <operator pos:start="265:61" pos:end="265:61">&lt;</operator> <name pos:start="265:63" pos:end="265:64">wp</name></expr>)</condition> <block pos:start="265:67" pos:end="271:25">{<block_content pos:start="267:29" pos:end="269:74">

                            <expr_stmt pos:start="267:29" pos:end="269:74"><expr pos:start="267:29" pos:end="269:73"><name pos:start="267:29" pos:end="267:35">alpha_d</name> <operator pos:start="267:37" pos:end="267:37">=</operator> <operator pos:start="267:39" pos:end="267:39">(</operator><name pos:start="267:40" pos:end="267:43"><name pos:start="267:40" pos:end="267:40">d</name><index pos:start="267:41" pos:end="267:43">[<expr pos:start="267:42" pos:end="267:42"><literal type="number" pos:start="267:42" pos:end="267:42">0</literal></expr>]</index></name> <operator pos:start="267:45" pos:end="267:45">+</operator> <name pos:start="267:47" pos:end="267:65"><name pos:start="267:47" pos:end="267:47">d</name><index pos:start="267:48" pos:end="267:65">[<expr pos:start="267:49" pos:end="267:64"><name pos:start="267:49" pos:end="267:64"><name pos:start="267:49" pos:end="267:51">src</name><operator pos:start="267:52" pos:end="267:53">-&gt;</operator><name pos:start="267:54" pos:end="267:61">linesize</name><index pos:start="267:62" pos:end="267:64">[<expr pos:start="267:63" pos:end="267:63"><literal type="number" pos:start="267:63" pos:end="267:63">3</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="267:67" pos:end="267:67">+</operator>

                                       <name pos:start="269:40" pos:end="269:43"><name pos:start="269:40" pos:end="269:40">d</name><index pos:start="269:41" pos:end="269:43">[<expr pos:start="269:42" pos:end="269:42"><literal type="number" pos:start="269:42" pos:end="269:42">1</literal></expr>]</index></name> <operator pos:start="269:45" pos:end="269:45">+</operator> <name pos:start="269:47" pos:end="269:67"><name pos:start="269:47" pos:end="269:47">d</name><index pos:start="269:48" pos:end="269:67">[<expr pos:start="269:49" pos:end="269:66"><name pos:start="269:49" pos:end="269:64"><name pos:start="269:49" pos:end="269:51">src</name><operator pos:start="269:52" pos:end="269:53">-&gt;</operator><name pos:start="269:54" pos:end="269:61">linesize</name><index pos:start="269:62" pos:end="269:64">[<expr pos:start="269:63" pos:end="269:63"><literal type="number" pos:start="269:63" pos:end="269:63">3</literal></expr>]</index></name><operator pos:start="269:65" pos:end="269:65">+</operator><literal type="number" pos:start="269:66" pos:end="269:66">1</literal></expr>]</index></name><operator pos:start="269:68" pos:end="269:68">)</operator> <operator pos:start="269:70" pos:end="269:71">&gt;&gt;</operator> <literal type="number" pos:start="269:73" pos:end="269:73">2</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="271:27" pos:end="283:25">else if <condition pos:start="271:35" pos:end="271:48">(<expr pos:start="271:36" pos:end="271:47"><name pos:start="271:36" pos:end="271:39">hsub</name> <operator pos:start="271:41" pos:end="271:42">||</operator> <name pos:start="271:44" pos:end="271:47">vsub</name></expr>)</condition> <block pos:start="271:50" pos:end="283:25">{<block_content pos:start="273:29" pos:end="281:63">

                            <expr_stmt pos:start="273:29" pos:end="275:58"><expr pos:start="273:29" pos:end="275:57"><name pos:start="273:29" pos:end="273:35">alpha_h</name> <operator pos:start="273:37" pos:end="273:37">=</operator> <ternary pos:start="273:39" pos:end="275:57"><condition pos:start="273:39" pos:end="273:56"><expr pos:start="273:39" pos:end="273:54"><name pos:start="273:39" pos:end="273:42">hsub</name> <operator pos:start="273:44" pos:end="273:45">&amp;&amp;</operator> <name pos:start="273:47" pos:end="273:47">k</name><operator pos:start="273:48" pos:end="273:48">+</operator><literal type="number" pos:start="273:49" pos:end="273:49">1</literal> <operator pos:start="273:51" pos:end="273:51">&lt;</operator> <name pos:start="273:53" pos:end="273:54">wp</name></expr> ?</condition><then pos:start="275:33" pos:end="275:50">

                                <expr pos:start="275:33" pos:end="275:50"><operator pos:start="275:33" pos:end="275:33">(</operator><name pos:start="275:34" pos:end="275:37"><name pos:start="275:34" pos:end="275:34">d</name><index pos:start="275:35" pos:end="275:37">[<expr pos:start="275:36" pos:end="275:36"><literal type="number" pos:start="275:36" pos:end="275:36">0</literal></expr>]</index></name> <operator pos:start="275:39" pos:end="275:39">+</operator> <name pos:start="275:41" pos:end="275:44"><name pos:start="275:41" pos:end="275:41">d</name><index pos:start="275:42" pos:end="275:44">[<expr pos:start="275:43" pos:end="275:43"><literal type="number" pos:start="275:43" pos:end="275:43">1</literal></expr>]</index></name><operator pos:start="275:45" pos:end="275:45">)</operator> <operator pos:start="275:47" pos:end="275:48">&gt;&gt;</operator> <literal type="number" pos:start="275:50" pos:end="275:50">1</literal></expr> </then><else pos:start="275:52" pos:end="275:57">: <expr pos:start="275:54" pos:end="275:57"><name pos:start="275:54" pos:end="275:57"><name pos:start="275:54" pos:end="275:54">d</name><index pos:start="275:55" pos:end="275:57">[<expr pos:start="275:56" pos:end="275:56"><literal type="number" pos:start="275:56" pos:end="275:56">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                            <expr_stmt pos:start="277:29" pos:end="279:73"><expr pos:start="277:29" pos:end="279:72"><name pos:start="277:29" pos:end="277:35">alpha_v</name> <operator pos:start="277:37" pos:end="277:37">=</operator> <ternary pos:start="277:39" pos:end="279:72"><condition pos:start="277:39" pos:end="277:56"><expr pos:start="277:39" pos:end="277:54"><name pos:start="277:39" pos:end="277:42">vsub</name> <operator pos:start="277:44" pos:end="277:45">&amp;&amp;</operator> <name pos:start="277:47" pos:end="277:47">j</name><operator pos:start="277:48" pos:end="277:48">+</operator><literal type="number" pos:start="277:49" pos:end="277:49">1</literal> <operator pos:start="277:51" pos:end="277:51">&lt;</operator> <name pos:start="277:53" pos:end="277:54">hp</name></expr> ?</condition><then pos:start="279:33" pos:end="279:65">

                                <expr pos:start="279:33" pos:end="279:65"><operator pos:start="279:33" pos:end="279:33">(</operator><name pos:start="279:34" pos:end="279:37"><name pos:start="279:34" pos:end="279:34">d</name><index pos:start="279:35" pos:end="279:37">[<expr pos:start="279:36" pos:end="279:36"><literal type="number" pos:start="279:36" pos:end="279:36">0</literal></expr>]</index></name> <operator pos:start="279:39" pos:end="279:39">+</operator> <name pos:start="279:41" pos:end="279:59"><name pos:start="279:41" pos:end="279:41">d</name><index pos:start="279:42" pos:end="279:59">[<expr pos:start="279:43" pos:end="279:58"><name pos:start="279:43" pos:end="279:58"><name pos:start="279:43" pos:end="279:45">src</name><operator pos:start="279:46" pos:end="279:47">-&gt;</operator><name pos:start="279:48" pos:end="279:55">linesize</name><index pos:start="279:56" pos:end="279:58">[<expr pos:start="279:57" pos:end="279:57"><literal type="number" pos:start="279:57" pos:end="279:57">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="279:60" pos:end="279:60">)</operator> <operator pos:start="279:62" pos:end="279:63">&gt;&gt;</operator> <literal type="number" pos:start="279:65" pos:end="279:65">1</literal></expr> </then><else pos:start="279:67" pos:end="279:72">: <expr pos:start="279:69" pos:end="279:72"><name pos:start="279:69" pos:end="279:72"><name pos:start="279:69" pos:end="279:69">d</name><index pos:start="279:70" pos:end="279:72">[<expr pos:start="279:71" pos:end="279:71"><literal type="number" pos:start="279:71" pos:end="279:71">0</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

                            <expr_stmt pos:start="281:29" pos:end="281:63"><expr pos:start="281:29" pos:end="281:62"><name pos:start="281:29" pos:end="281:35">alpha_d</name> <operator pos:start="281:37" pos:end="281:37">=</operator> <operator pos:start="281:39" pos:end="281:39">(</operator><name pos:start="281:40" pos:end="281:46">alpha_v</name> <operator pos:start="281:48" pos:end="281:48">+</operator> <name pos:start="281:50" pos:end="281:56">alpha_h</name><operator pos:start="281:57" pos:end="281:57">)</operator> <operator pos:start="281:59" pos:end="281:60">&gt;&gt;</operator> <literal type="number" pos:start="281:62" pos:end="281:62">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="283:27" pos:end="285:43">else<block type="pseudo" pos:start="285:29" pos:end="285:43"><block_content pos:start="285:29" pos:end="285:43">

                            <expr_stmt pos:start="285:29" pos:end="285:43"><expr pos:start="285:29" pos:end="285:42"><name pos:start="285:29" pos:end="285:35">alpha_d</name> <operator pos:start="285:37" pos:end="285:37">=</operator> <name pos:start="285:39" pos:end="285:42"><name pos:start="285:39" pos:end="285:39">d</name><index pos:start="285:40" pos:end="285:42">[<expr pos:start="285:41" pos:end="285:41"><literal type="number" pos:start="285:41" pos:end="285:41">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="287:25" pos:end="287:68"><expr pos:start="287:25" pos:end="287:67"><name pos:start="287:25" pos:end="287:29">alpha</name> <operator pos:start="287:31" pos:end="287:31">=</operator> <call pos:start="287:33" pos:end="287:67"><name pos:start="287:33" pos:end="287:51">UNPREMULTIPLY_ALPHA</name><argument_list pos:start="287:52" pos:end="287:67">(<argument pos:start="287:53" pos:end="287:57"><expr pos:start="287:53" pos:end="287:57"><name pos:start="287:53" pos:end="287:57">alpha</name></expr></argument>, <argument pos:start="287:60" pos:end="287:66"><expr pos:start="287:60" pos:end="287:66"><name pos:start="287:60" pos:end="287:66">alpha_d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="291:21" pos:end="291:70"><expr pos:start="291:21" pos:end="291:69"><operator pos:start="291:21" pos:end="291:21">*</operator><name pos:start="291:22" pos:end="291:22">d</name> <operator pos:start="291:24" pos:end="291:24">=</operator> <call pos:start="291:26" pos:end="291:69"><name pos:start="291:26" pos:end="291:36">FAST_DIV255</name><argument_list pos:start="291:37" pos:end="291:69">(<argument pos:start="291:38" pos:end="291:68"><expr pos:start="291:38" pos:end="291:68"><operator pos:start="291:38" pos:end="291:38">*</operator><name pos:start="291:39" pos:end="291:39">d</name> <operator pos:start="291:41" pos:end="291:41">*</operator> <operator pos:start="291:43" pos:end="291:43">(</operator><literal type="number" pos:start="291:44" pos:end="291:48">255</literal> <operator pos:start="291:48" pos:end="291:48">-</operator> <name pos:start="291:50" pos:end="291:54">alpha</name><operator pos:start="291:55" pos:end="291:55">)</operator> <operator pos:start="291:57" pos:end="291:57">+</operator> <operator pos:start="291:59" pos:end="291:59">*</operator><name pos:start="291:60" pos:end="291:60">s</name> <operator pos:start="291:62" pos:end="291:62">*</operator> <name pos:start="291:64" pos:end="291:68">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="293:21" pos:end="293:24"><expr pos:start="293:21" pos:end="293:23"><name pos:start="293:21" pos:end="293:21">s</name><operator pos:start="293:22" pos:end="293:23">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="295:21" pos:end="295:24"><expr pos:start="295:21" pos:end="295:23"><name pos:start="295:21" pos:end="295:21">d</name><operator pos:start="295:22" pos:end="295:23">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:35"><expr pos:start="297:21" pos:end="297:34"><name pos:start="297:21" pos:end="297:21">a</name> <operator pos:start="297:23" pos:end="297:24">+=</operator> <literal type="number" pos:start="297:26" pos:end="297:26">1</literal> <operator pos:start="297:28" pos:end="297:29">&lt;&lt;</operator> <name pos:start="297:31" pos:end="297:34">hsub</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="301:17" pos:end="301:39"><expr pos:start="301:17" pos:end="301:38"><name pos:start="301:17" pos:end="301:18">dp</name> <operator pos:start="301:20" pos:end="301:21">+=</operator> <name pos:start="301:23" pos:end="301:38"><name pos:start="301:23" pos:end="301:25">dst</name><operator pos:start="301:26" pos:end="301:27">-&gt;</operator><name pos:start="301:28" pos:end="301:35">linesize</name><index pos:start="301:36" pos:end="301:38">[<expr pos:start="301:37" pos:end="301:37"><name pos:start="301:37" pos:end="301:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:39"><expr pos:start="303:17" pos:end="303:38"><name pos:start="303:17" pos:end="303:18">sp</name> <operator pos:start="303:20" pos:end="303:21">+=</operator> <name pos:start="303:23" pos:end="303:38"><name pos:start="303:23" pos:end="303:25">src</name><operator pos:start="303:26" pos:end="303:27">-&gt;</operator><name pos:start="303:28" pos:end="303:35">linesize</name><index pos:start="303:36" pos:end="303:38">[<expr pos:start="303:37" pos:end="303:37"><name pos:start="303:37" pos:end="303:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:53"><expr pos:start="305:17" pos:end="305:52"><name pos:start="305:17" pos:end="305:18">ap</name> <operator pos:start="305:20" pos:end="305:21">+=</operator> <operator pos:start="305:23" pos:end="305:23">(</operator><literal type="number" pos:start="305:24" pos:end="305:24">1</literal> <operator pos:start="305:26" pos:end="305:27">&lt;&lt;</operator> <name pos:start="305:29" pos:end="305:32">vsub</name><operator pos:start="305:33" pos:end="305:33">)</operator> <operator pos:start="305:35" pos:end="305:35">*</operator> <name pos:start="305:37" pos:end="305:52"><name pos:start="305:37" pos:end="305:39">src</name><operator pos:start="305:40" pos:end="305:41">-&gt;</operator><name pos:start="305:42" pos:end="305:49">linesize</name><index pos:start="305:50" pos:end="305:52">[<expr pos:start="305:51" pos:end="305:51"><literal type="number" pos:start="305:51" pos:end="305:51">3</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
