<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15484.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">usb_audio_handle_data</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">USBDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:58">USBPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">USBAudioState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:37">USBAudioState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator> <name pos:start="5:42" pos:end="5:44">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="41:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:13">p</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">pid</name></name></expr>)</condition> <block pos:start="11:21" pos:end="41:5">{<block_content pos:start="13:5" pos:end="39:14">

    <case pos:start="13:5" pos:end="13:23">case <expr pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:22">USB_TOKEN_OUT</name></expr>:</case>

        <switch pos:start="15:9" pos:end="27:9">switch <condition pos:start="15:16" pos:end="15:25">(<expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">p</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">devep</name></name></expr>)</condition> <block pos:start="15:27" pos:end="27:9">{<block_content pos:start="17:9" pos:end="25:22">

        <case pos:start="17:9" pos:end="17:15">case <expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:49"><expr pos:start="19:13" pos:end="19:48"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:48"><name pos:start="19:19" pos:end="19:42">usb_audio_handle_dataout</name><argument_list pos:start="19:43" pos:end="19:48">(<argument pos:start="19:44" pos:end="19:44"><expr pos:start="19:44" pos:end="19:44"><name pos:start="19:44" pos:end="19:44">s</name></expr></argument>, <argument pos:start="19:47" pos:end="19:47"><expr pos:start="19:47" pos:end="19:47"><name pos:start="19:47" pos:end="19:47">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <default pos:start="23:9" pos:end="23:16">default:</default>

            <goto pos:start="25:13" pos:end="25:22">goto <name pos:start="25:18" pos:end="25:21">fail</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="29:9" pos:end="29:14">break;</break>



    <default pos:start="33:5" pos:end="33:12">default:</default>

<label pos:start="35:1" pos:end="35:5"><name pos:start="35:1" pos:end="35:4">fail</name>:</label>

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:14">==</operator> <name pos:start="43:16" pos:end="43:28">USB_RET_STALL</name> <operator pos:start="43:30" pos:end="43:31">&amp;&amp;</operator> <name pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:33">s</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:40">debug</name></name></expr>)</condition> <block pos:start="43:43" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:55">

        <expr_stmt pos:start="45:9" pos:end="49:55"><expr pos:start="45:9" pos:end="49:54"><call pos:start="45:9" pos:end="49:54"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="49:54">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="47:54"><expr pos:start="45:25" pos:end="47:54"><literal type="string" pos:start="45:25" pos:end="45:62">"usb-audio: failed data transaction: "</literal>

                        <literal type="string" pos:start="47:25" pos:end="47:54">"pid 0x%x ep 0x%x len 0x%zx\n"</literal></expr></argument>,

                        <argument pos:start="49:25" pos:end="49:30"><expr pos:start="49:25" pos:end="49:30"><name pos:start="49:25" pos:end="49:30"><name pos:start="49:25" pos:end="49:25">p</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:30">pid</name></name></expr></argument>, <argument pos:start="49:33" pos:end="49:40"><expr pos:start="49:33" pos:end="49:40"><name pos:start="49:33" pos:end="49:40"><name pos:start="49:33" pos:end="49:33">p</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:40">devep</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:53"><expr pos:start="49:43" pos:end="49:53"><name pos:start="49:43" pos:end="49:53"><name pos:start="49:43" pos:end="49:43">p</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:48">iov</name><operator pos:start="49:49" pos:end="49:49">.</operator><name pos:start="49:50" pos:end="49:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
