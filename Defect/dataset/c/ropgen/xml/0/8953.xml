<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8953.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">exynos4210_rtc_write</name><parameter_list pos:start="1:33" pos:end="3:38">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:22"><decl pos:start="3:9" pos:end="3:22"><type pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:16">uint64_t</name></type> <name pos:start="3:18" pos:end="3:22">value</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:32">unsigned</name></type> <name pos:start="3:34" pos:end="3:37">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="251:1">{<block_content pos:start="7:5" pos:end="249:5">

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">Exynos4210RTCState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:56">= <expr pos:start="7:29" pos:end="7:56"><operator pos:start="7:29" pos:end="7:29">(</operator><name pos:start="7:30" pos:end="7:47">Exynos4210RTCState</name> <operator pos:start="7:49" pos:end="7:49">*</operator><operator pos:start="7:50" pos:end="7:50">)</operator><name pos:start="7:51" pos:end="7:56">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="249:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="249:5">{<block_content pos:start="13:5" pos:end="245:14">

    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><name pos:start="13:10" pos:end="13:13">INTP</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:36">(<expr pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:17">value</name> <operator pos:start="15:19" pos:end="15:19">&amp;</operator> <name pos:start="15:21" pos:end="15:35">INTP_ALM_ENABLE</name></expr>)</condition> <block pos:start="15:38" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:46">

            <expr_stmt pos:start="17:13" pos:end="17:39"><expr pos:start="17:13" pos:end="17:38"><call pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:26">qemu_irq_lower</name><argument_list pos:start="17:27" pos:end="17:38">(<argument pos:start="17:28" pos:end="17:37"><expr pos:start="17:28" pos:end="17:37"><name pos:start="17:28" pos:end="17:37"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:37">alm_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:46"><expr pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">reg_intp</name></name> <operator pos:start="19:25" pos:end="19:26">&amp;=</operator> <operator pos:start="19:28" pos:end="19:28">(</operator><operator pos:start="19:29" pos:end="19:29">~</operator><name pos:start="19:30" pos:end="19:44">INTP_ALM_ENABLE</name><operator pos:start="19:45" pos:end="19:45">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:37">(<expr pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:17">value</name> <operator pos:start="23:19" pos:end="23:19">&amp;</operator> <name pos:start="23:21" pos:end="23:36">INTP_TICK_ENABLE</name></expr>)</condition> <block pos:start="23:39" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:47">

            <expr_stmt pos:start="25:13" pos:end="25:40"><expr pos:start="25:13" pos:end="25:39"><call pos:start="25:13" pos:end="25:39"><name pos:start="25:13" pos:end="25:26">qemu_irq_lower</name><argument_list pos:start="25:27" pos:end="25:39">(<argument pos:start="25:28" pos:end="25:38"><expr pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:38">tick_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">reg_intp</name></name> <operator pos:start="27:25" pos:end="27:26">&amp;=</operator> <operator pos:start="27:28" pos:end="27:28">(</operator><operator pos:start="27:29" pos:end="27:29">~</operator><name pos:start="27:30" pos:end="27:45">INTP_TICK_ENABLE</name><operator pos:start="27:46" pos:end="27:46">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:16">case <expr pos:start="33:10" pos:end="33:15"><name pos:start="33:10" pos:end="33:15">RTCCON</name></expr>:</case>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:31">(<expr pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:17">value</name> <operator pos:start="35:19" pos:end="35:19">&amp;</operator> <name pos:start="35:21" pos:end="35:30">RTC_ENABLE</name></expr>)</condition> <block pos:start="35:33" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:49">

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><call pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:38">exynos4210_rtc_update_freq</name><argument_list pos:start="37:39" pos:end="37:48">(<argument pos:start="37:40" pos:end="37:40"><expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">s</name></expr></argument>, <argument pos:start="37:43" pos:end="37:47"><expr pos:start="37:43" pos:end="37:47"><name pos:start="37:43" pos:end="37:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:64">(<expr pos:start="41:13" pos:end="41:63"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:18">value</name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <name pos:start="41:22" pos:end="41:31">RTC_ENABLE</name><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">&gt;</operator> <operator pos:start="41:36" pos:end="41:36">(</operator><name pos:start="41:37" pos:end="41:49"><name pos:start="41:37" pos:end="41:37">s</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:49">reg_rtccon</name></name> <operator pos:start="41:51" pos:end="41:51">&amp;</operator> <name pos:start="41:53" pos:end="41:62">RTC_ENABLE</name><operator pos:start="41:63" pos:end="41:63">)</operator></expr>)</condition> <block pos:start="41:66" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:41">

            <comment type="block" pos:start="43:13" pos:end="43:29">/* clock timer */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:59"><expr pos:start="45:13" pos:end="45:58"><call pos:start="45:13" pos:end="45:58"><name pos:start="45:13" pos:end="45:28">ptimer_set_count</name><argument_list pos:start="45:29" pos:end="45:58">(<argument pos:start="45:30" pos:end="45:42"><expr pos:start="45:30" pos:end="45:42"><name pos:start="45:30" pos:end="45:42"><name pos:start="45:30" pos:end="45:30">s</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:42">ptimer_1Hz</name></name></expr></argument>, <argument pos:start="45:45" pos:end="45:57"><expr pos:start="45:45" pos:end="45:57"><name pos:start="45:45" pos:end="45:57">RTC_BASE_FREQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><call pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:22">ptimer_run</name><argument_list pos:start="47:23" pos:end="47:40">(<argument pos:start="47:24" pos:end="47:36"><expr pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:36">ptimer_1Hz</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><call pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:19">DPRINTF</name><argument_list pos:start="49:20" pos:end="49:40">(<argument pos:start="49:21" pos:end="49:39"><expr pos:start="49:21" pos:end="49:39"><literal type="string" pos:start="49:21" pos:end="49:39">"run clock timer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="65:9"><if pos:start="53:9" pos:end="65:9">if <condition pos:start="53:12" pos:end="53:64">(<expr pos:start="53:13" pos:end="53:63"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:18">value</name> <operator pos:start="53:20" pos:end="53:20">&amp;</operator> <name pos:start="53:22" pos:end="53:31">RTC_ENABLE</name><operator pos:start="53:32" pos:end="53:32">)</operator> <operator pos:start="53:34" pos:end="53:34">&lt;</operator> <operator pos:start="53:36" pos:end="53:36">(</operator><name pos:start="53:37" pos:end="53:49"><name pos:start="53:37" pos:end="53:37">s</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:49">reg_rtccon</name></name> <operator pos:start="53:51" pos:end="53:51">&amp;</operator> <name pos:start="53:53" pos:end="53:62">RTC_ENABLE</name><operator pos:start="53:63" pos:end="53:63">)</operator></expr>)</condition> <block pos:start="53:66" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:41">

            <comment type="block" pos:start="55:13" pos:end="55:28">/* tick timer */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><call pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:23">ptimer_stop</name><argument_list pos:start="57:24" pos:end="57:34">(<argument pos:start="57:25" pos:end="57:33"><expr pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">ptimer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="59:13" pos:end="59:29">/* clock timer */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:39"><expr pos:start="61:13" pos:end="61:38"><call pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:23">ptimer_stop</name><argument_list pos:start="61:24" pos:end="61:38">(<argument pos:start="61:25" pos:end="61:37"><expr pos:start="61:25" pos:end="61:37"><name pos:start="61:25" pos:end="61:37"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:37">ptimer_1Hz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:41"><expr pos:start="63:13" pos:end="63:40"><call pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:19">DPRINTF</name><argument_list pos:start="63:20" pos:end="63:40">(<argument pos:start="63:21" pos:end="63:39"><expr pos:start="63:21" pos:end="63:39"><literal type="string" pos:start="63:21" pos:end="63:39">"stop all timers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="91:9"><if pos:start="67:9" pos:end="91:9">if <condition pos:start="67:12" pos:end="67:31">(<expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:17">value</name> <operator pos:start="67:19" pos:end="67:19">&amp;</operator> <name pos:start="67:21" pos:end="67:30">RTC_ENABLE</name></expr>)</condition> <block pos:start="67:33" pos:end="91:9">{<block_content pos:start="69:13" pos:end="89:13">

            <if_stmt pos:start="69:13" pos:end="81:13"><if pos:start="69:13" pos:end="81:13">if <condition pos:start="69:16" pos:end="73:32">(<expr pos:start="69:17" pos:end="73:31"><operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:22">value</name> <operator pos:start="69:24" pos:end="69:24">&amp;</operator> <name pos:start="69:26" pos:end="69:42">TICK_TIMER_ENABLE</name><operator pos:start="69:43" pos:end="69:43">)</operator> <operator pos:start="69:45" pos:end="69:45">&gt;</operator>

                <operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:30"><name pos:start="71:18" pos:end="71:18">s</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:30">reg_rtccon</name></name> <operator pos:start="71:32" pos:end="71:32">&amp;</operator> <name pos:start="71:34" pos:end="71:50">TICK_TIMER_ENABLE</name><operator pos:start="71:51" pos:end="71:51">)</operator> <operator pos:start="71:53" pos:end="71:54">&amp;&amp;</operator>

                <operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:30"><name pos:start="73:18" pos:end="73:18">s</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:30">reg_ticcnt</name></name><operator pos:start="73:31" pos:end="73:31">)</operator></expr>)</condition> <block pos:start="73:34" pos:end="81:13">{<block_content pos:start="75:17" pos:end="79:44">

                <expr_stmt pos:start="75:17" pos:end="75:59"><expr pos:start="75:17" pos:end="75:58"><call pos:start="75:17" pos:end="75:58"><name pos:start="75:17" pos:end="75:32">ptimer_set_count</name><argument_list pos:start="75:33" pos:end="75:58">(<argument pos:start="75:34" pos:end="75:42"><expr pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:34">s</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:42">ptimer</name></name></expr></argument>, <argument pos:start="75:45" pos:end="75:57"><expr pos:start="75:45" pos:end="75:57"><name pos:start="75:45" pos:end="75:57"><name pos:start="75:45" pos:end="75:45">s</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:57">reg_ticcnt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:41"><expr pos:start="77:17" pos:end="77:40"><call pos:start="77:17" pos:end="77:40"><name pos:start="77:17" pos:end="77:26">ptimer_run</name><argument_list pos:start="77:27" pos:end="77:40">(<argument pos:start="77:28" pos:end="77:36"><expr pos:start="77:28" pos:end="77:36"><name pos:start="77:28" pos:end="77:36"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:36">ptimer</name></name></expr></argument>, <argument pos:start="77:39" pos:end="77:39"><expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:44"><expr pos:start="79:17" pos:end="79:43"><call pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:23">DPRINTF</name><argument_list pos:start="79:24" pos:end="79:43">(<argument pos:start="79:25" pos:end="79:42"><expr pos:start="79:25" pos:end="79:42"><literal type="string" pos:start="79:25" pos:end="79:42">"run tick timer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="85:52">(<expr pos:start="83:17" pos:end="85:51"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:22">value</name> <operator pos:start="83:24" pos:end="83:24">&amp;</operator> <name pos:start="83:26" pos:end="83:42">TICK_TIMER_ENABLE</name><operator pos:start="83:43" pos:end="83:43">)</operator> <operator pos:start="83:45" pos:end="83:45">&lt;</operator>

                <operator pos:start="85:17" pos:end="85:17">(</operator><name pos:start="85:18" pos:end="85:30"><name pos:start="85:18" pos:end="85:18">s</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:30">reg_rtccon</name></name> <operator pos:start="85:32" pos:end="85:32">&amp;</operator> <name pos:start="85:34" pos:end="85:50">TICK_TIMER_ENABLE</name><operator pos:start="85:51" pos:end="85:51">)</operator></expr>)</condition> <block pos:start="85:54" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:39">

                <expr_stmt pos:start="87:17" pos:end="87:39"><expr pos:start="87:17" pos:end="87:38"><call pos:start="87:17" pos:end="87:38"><name pos:start="87:17" pos:end="87:27">ptimer_stop</name><argument_list pos:start="87:28" pos:end="87:38">(<argument pos:start="87:29" pos:end="87:37"><expr pos:start="87:29" pos:end="87:37"><name pos:start="87:29" pos:end="87:37"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:37">ptimer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:21">reg_rtccon</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:29">value</name></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:16">case <expr pos:start="97:10" pos:end="97:15"><name pos:start="97:10" pos:end="97:15">TICCNT</name></expr>:</case>

        <if_stmt pos:start="99:9" pos:end="111:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:37">(<expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:17">value</name> <operator pos:start="99:19" pos:end="99:19">&gt;</operator> <name pos:start="99:21" pos:end="99:36">TICNT_THRESHHOLD</name></expr>)</condition> <block pos:start="99:39" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:34">

            <expr_stmt pos:start="101:13" pos:end="101:34"><expr pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:25">reg_ticcnt</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:33">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="111:9">else <block pos:start="103:16" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:37">

            <expr_stmt pos:start="105:13" pos:end="109:37"><expr pos:start="105:13" pos:end="109:36"><call pos:start="105:13" pos:end="109:36"><name pos:start="105:13" pos:end="105:19">fprintf</name><argument_list pos:start="105:20" pos:end="109:36">(<argument pos:start="105:21" pos:end="105:26"><expr pos:start="105:21" pos:end="105:26"><name pos:start="105:21" pos:end="105:26">stderr</name></expr></argument>,

                    <argument pos:start="107:21" pos:end="107:61"><expr pos:start="107:21" pos:end="107:61"><literal type="string" pos:start="107:21" pos:end="107:61">"[exynos4210.rtc: bad TICNT value %u ]\n"</literal></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:35"><expr pos:start="109:21" pos:end="109:35"><operator pos:start="109:21" pos:end="109:21">(</operator><name pos:start="109:22" pos:end="109:29">uint32_t</name><operator pos:start="109:30" pos:end="109:30">)</operator><name pos:start="109:31" pos:end="109:35">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>



    <case pos:start="117:5" pos:end="117:16">case <expr pos:start="117:10" pos:end="117:15"><name pos:start="117:10" pos:end="117:15">RTCALM</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:30"><expr pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:21">reg_rtcalm</name></name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:29">value</name></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:16">case <expr pos:start="123:10" pos:end="123:15"><name pos:start="123:10" pos:end="123:15">ALMSEC</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:39"><expr pos:start="125:9" pos:end="125:38"><name pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:21">reg_almsec</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <operator pos:start="125:25" pos:end="125:25">(</operator><name pos:start="125:26" pos:end="125:30">value</name> <operator pos:start="125:32" pos:end="125:32">&amp;</operator> <literal type="number" pos:start="125:34" pos:end="125:37">0x7f</literal><operator pos:start="125:38" pos:end="125:38">)</operator></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:16">case <expr pos:start="129:10" pos:end="129:15"><name pos:start="129:10" pos:end="129:15">ALMMIN</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:39"><expr pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:21">reg_almmin</name></name> <operator pos:start="131:23" pos:end="131:23">=</operator> <operator pos:start="131:25" pos:end="131:25">(</operator><name pos:start="131:26" pos:end="131:30">value</name> <operator pos:start="131:32" pos:end="131:32">&amp;</operator> <literal type="number" pos:start="131:34" pos:end="131:37">0x7f</literal><operator pos:start="131:38" pos:end="131:38">)</operator></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:17">case <expr pos:start="135:10" pos:end="135:16"><name pos:start="135:10" pos:end="135:16">ALMHOUR</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:40"><expr pos:start="137:9" pos:end="137:39"><name pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:22">reg_almhour</name></name> <operator pos:start="137:24" pos:end="137:24">=</operator> <operator pos:start="137:26" pos:end="137:26">(</operator><name pos:start="137:27" pos:end="137:31">value</name> <operator pos:start="137:33" pos:end="137:33">&amp;</operator> <literal type="number" pos:start="137:35" pos:end="137:38">0x3f</literal><operator pos:start="137:39" pos:end="137:39">)</operator></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:16">case <expr pos:start="141:10" pos:end="141:15"><name pos:start="141:10" pos:end="141:15">ALMDAY</name></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:21">reg_almday</name></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <operator pos:start="143:25" pos:end="143:25">(</operator><name pos:start="143:26" pos:end="143:30">value</name> <operator pos:start="143:32" pos:end="143:32">&amp;</operator> <literal type="number" pos:start="143:34" pos:end="143:37">0x3f</literal><operator pos:start="143:38" pos:end="143:38">)</operator></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    <case pos:start="147:5" pos:end="147:16">case <expr pos:start="147:10" pos:end="147:15"><name pos:start="147:10" pos:end="147:15">ALMMON</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:39"><expr pos:start="149:9" pos:end="149:38"><name pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:21">reg_almmon</name></name> <operator pos:start="149:23" pos:end="149:23">=</operator> <operator pos:start="149:25" pos:end="149:25">(</operator><name pos:start="149:26" pos:end="149:30">value</name> <operator pos:start="149:32" pos:end="149:32">&amp;</operator> <literal type="number" pos:start="149:34" pos:end="149:37">0x1f</literal><operator pos:start="149:38" pos:end="149:38">)</operator></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="153:17">case <expr pos:start="153:10" pos:end="153:16"><name pos:start="153:10" pos:end="153:16">ALMYEAR</name></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:42"><expr pos:start="155:9" pos:end="155:41"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:22">reg_almyear</name></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <operator pos:start="155:26" pos:end="155:26">(</operator><name pos:start="155:27" pos:end="155:31">value</name> <operator pos:start="155:33" pos:end="155:33">&amp;</operator> <literal type="number" pos:start="155:35" pos:end="155:40">0x0fff</literal><operator pos:start="155:41" pos:end="155:41">)</operator></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>



    <case pos:start="161:5" pos:end="161:16">case <expr pos:start="161:10" pos:end="161:15"><name pos:start="161:10" pos:end="161:15">BCDSEC</name></expr>:</case>

        <if_stmt pos:start="163:9" pos:end="167:9"><if pos:start="163:9" pos:end="167:9">if <condition pos:start="163:12" pos:end="163:39">(<expr pos:start="163:13" pos:end="163:38"><name pos:start="163:13" pos:end="163:25"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:25">reg_rtccon</name></name> <operator pos:start="163:27" pos:end="163:27">&amp;</operator> <name pos:start="163:29" pos:end="163:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="163:41" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:65">

            <expr_stmt pos:start="165:13" pos:end="165:65"><expr pos:start="165:13" pos:end="165:64"><name pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:25">current_tm</name><operator pos:start="165:26" pos:end="165:26">.</operator><name pos:start="165:27" pos:end="165:32">tm_sec</name></name> <operator pos:start="165:34" pos:end="165:34">=</operator> <operator pos:start="165:36" pos:end="165:36">(</operator><name pos:start="165:37" pos:end="165:39">int</name><operator pos:start="165:40" pos:end="165:40">)</operator><call pos:start="165:41" pos:end="165:64"><name pos:start="165:41" pos:end="165:48">from_bcd</name><argument_list pos:start="165:49" pos:end="165:64">(<argument pos:start="165:50" pos:end="165:63"><expr pos:start="165:50" pos:end="165:63"><operator pos:start="165:50" pos:end="165:50">(</operator><name pos:start="165:51" pos:end="165:57">uint8_t</name><operator pos:start="165:58" pos:end="165:58">)</operator><name pos:start="165:59" pos:end="165:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:16">case <expr pos:start="171:10" pos:end="171:15"><name pos:start="171:10" pos:end="171:15">BCDMIN</name></expr>:</case>

        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:39">(<expr pos:start="173:13" pos:end="173:38"><name pos:start="173:13" pos:end="173:25"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:25">reg_rtccon</name></name> <operator pos:start="173:27" pos:end="173:27">&amp;</operator> <name pos:start="173:29" pos:end="173:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="173:41" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:65">

            <expr_stmt pos:start="175:13" pos:end="175:65"><expr pos:start="175:13" pos:end="175:64"><name pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:25">current_tm</name><operator pos:start="175:26" pos:end="175:26">.</operator><name pos:start="175:27" pos:end="175:32">tm_min</name></name> <operator pos:start="175:34" pos:end="175:34">=</operator> <operator pos:start="175:36" pos:end="175:36">(</operator><name pos:start="175:37" pos:end="175:39">int</name><operator pos:start="175:40" pos:end="175:40">)</operator><call pos:start="175:41" pos:end="175:64"><name pos:start="175:41" pos:end="175:48">from_bcd</name><argument_list pos:start="175:49" pos:end="175:64">(<argument pos:start="175:50" pos:end="175:63"><expr pos:start="175:50" pos:end="175:63"><operator pos:start="175:50" pos:end="175:50">(</operator><name pos:start="175:51" pos:end="175:57">uint8_t</name><operator pos:start="175:58" pos:end="175:58">)</operator><name pos:start="175:59" pos:end="175:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:17">case <expr pos:start="181:10" pos:end="181:16"><name pos:start="181:10" pos:end="181:16">BCDHOUR</name></expr>:</case>

        <if_stmt pos:start="183:9" pos:end="187:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:39">(<expr pos:start="183:13" pos:end="183:38"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:25">reg_rtccon</name></name> <operator pos:start="183:27" pos:end="183:27">&amp;</operator> <name pos:start="183:29" pos:end="183:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="183:41" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:66">

            <expr_stmt pos:start="185:13" pos:end="185:66"><expr pos:start="185:13" pos:end="185:65"><name pos:start="185:13" pos:end="185:33"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:25">current_tm</name><operator pos:start="185:26" pos:end="185:26">.</operator><name pos:start="185:27" pos:end="185:33">tm_hour</name></name> <operator pos:start="185:35" pos:end="185:35">=</operator> <operator pos:start="185:37" pos:end="185:37">(</operator><name pos:start="185:38" pos:end="185:40">int</name><operator pos:start="185:41" pos:end="185:41">)</operator><call pos:start="185:42" pos:end="185:65"><name pos:start="185:42" pos:end="185:49">from_bcd</name><argument_list pos:start="185:50" pos:end="185:65">(<argument pos:start="185:51" pos:end="185:64"><expr pos:start="185:51" pos:end="185:64"><operator pos:start="185:51" pos:end="185:51">(</operator><name pos:start="185:52" pos:end="185:58">uint8_t</name><operator pos:start="185:59" pos:end="185:59">)</operator><name pos:start="185:60" pos:end="185:64">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    <case pos:start="191:5" pos:end="191:20">case <expr pos:start="191:10" pos:end="191:19"><name pos:start="191:10" pos:end="191:19">BCDDAYWEEK</name></expr>:</case>

        <if_stmt pos:start="193:9" pos:end="197:9"><if pos:start="193:9" pos:end="197:9">if <condition pos:start="193:12" pos:end="193:39">(<expr pos:start="193:13" pos:end="193:38"><name pos:start="193:13" pos:end="193:25"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:25">reg_rtccon</name></name> <operator pos:start="193:27" pos:end="193:27">&amp;</operator> <name pos:start="193:29" pos:end="193:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="193:41" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:66">

            <expr_stmt pos:start="195:13" pos:end="195:66"><expr pos:start="195:13" pos:end="195:65"><name pos:start="195:13" pos:end="195:33"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:25">current_tm</name><operator pos:start="195:26" pos:end="195:26">.</operator><name pos:start="195:27" pos:end="195:33">tm_wday</name></name> <operator pos:start="195:35" pos:end="195:35">=</operator> <operator pos:start="195:37" pos:end="195:37">(</operator><name pos:start="195:38" pos:end="195:40">int</name><operator pos:start="195:41" pos:end="195:41">)</operator><call pos:start="195:42" pos:end="195:65"><name pos:start="195:42" pos:end="195:49">from_bcd</name><argument_list pos:start="195:50" pos:end="195:65">(<argument pos:start="195:51" pos:end="195:64"><expr pos:start="195:51" pos:end="195:64"><operator pos:start="195:51" pos:end="195:51">(</operator><name pos:start="195:52" pos:end="195:58">uint8_t</name><operator pos:start="195:59" pos:end="195:59">)</operator><name pos:start="195:60" pos:end="195:64">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:16">case <expr pos:start="201:10" pos:end="201:15"><name pos:start="201:10" pos:end="201:15">BCDDAY</name></expr>:</case>

        <if_stmt pos:start="203:9" pos:end="207:9"><if pos:start="203:9" pos:end="207:9">if <condition pos:start="203:12" pos:end="203:39">(<expr pos:start="203:13" pos:end="203:38"><name pos:start="203:13" pos:end="203:25"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:25">reg_rtccon</name></name> <operator pos:start="203:27" pos:end="203:27">&amp;</operator> <name pos:start="203:29" pos:end="203:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="203:41" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:66">

            <expr_stmt pos:start="205:13" pos:end="205:66"><expr pos:start="205:13" pos:end="205:65"><name pos:start="205:13" pos:end="205:33"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:25">current_tm</name><operator pos:start="205:26" pos:end="205:26">.</operator><name pos:start="205:27" pos:end="205:33">tm_mday</name></name> <operator pos:start="205:35" pos:end="205:35">=</operator> <operator pos:start="205:37" pos:end="205:37">(</operator><name pos:start="205:38" pos:end="205:40">int</name><operator pos:start="205:41" pos:end="205:41">)</operator><call pos:start="205:42" pos:end="205:65"><name pos:start="205:42" pos:end="205:49">from_bcd</name><argument_list pos:start="205:50" pos:end="205:65">(<argument pos:start="205:51" pos:end="205:64"><expr pos:start="205:51" pos:end="205:64"><operator pos:start="205:51" pos:end="205:51">(</operator><name pos:start="205:52" pos:end="205:58">uint8_t</name><operator pos:start="205:59" pos:end="205:59">)</operator><name pos:start="205:60" pos:end="205:64">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="209:9" pos:end="209:14">break;</break>

    <case pos:start="211:5" pos:end="211:16">case <expr pos:start="211:10" pos:end="211:15"><name pos:start="211:10" pos:end="211:15">BCDMON</name></expr>:</case>

        <if_stmt pos:start="213:9" pos:end="217:9"><if pos:start="213:9" pos:end="217:9">if <condition pos:start="213:12" pos:end="213:39">(<expr pos:start="213:13" pos:end="213:38"><name pos:start="213:13" pos:end="213:25"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:25">reg_rtccon</name></name> <operator pos:start="213:27" pos:end="213:27">&amp;</operator> <name pos:start="213:29" pos:end="213:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="213:41" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:69">

            <expr_stmt pos:start="215:13" pos:end="215:69"><expr pos:start="215:13" pos:end="215:68"><name pos:start="215:13" pos:end="215:32"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:25">current_tm</name><operator pos:start="215:26" pos:end="215:26">.</operator><name pos:start="215:27" pos:end="215:32">tm_mon</name></name> <operator pos:start="215:34" pos:end="215:34">=</operator> <operator pos:start="215:36" pos:end="215:36">(</operator><name pos:start="215:37" pos:end="215:39">int</name><operator pos:start="215:40" pos:end="215:40">)</operator><call pos:start="215:41" pos:end="215:64"><name pos:start="215:41" pos:end="215:48">from_bcd</name><argument_list pos:start="215:49" pos:end="215:64">(<argument pos:start="215:50" pos:end="215:63"><expr pos:start="215:50" pos:end="215:63"><operator pos:start="215:50" pos:end="215:50">(</operator><name pos:start="215:51" pos:end="215:57">uint8_t</name><operator pos:start="215:58" pos:end="215:58">)</operator><name pos:start="215:59" pos:end="215:63">value</name></expr></argument>)</argument_list></call> <operator pos:start="215:66" pos:end="215:66">-</operator> <literal type="number" pos:start="215:68" pos:end="215:68">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    <case pos:start="221:5" pos:end="221:17">case <expr pos:start="221:10" pos:end="221:16"><name pos:start="221:10" pos:end="221:16">BCDYEAR</name></expr>:</case>

        <if_stmt pos:start="223:9" pos:end="231:9"><if pos:start="223:9" pos:end="231:9">if <condition pos:start="223:12" pos:end="223:39">(<expr pos:start="223:13" pos:end="223:38"><name pos:start="223:13" pos:end="223:25"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:25">reg_rtccon</name></name> <operator pos:start="223:27" pos:end="223:27">&amp;</operator> <name pos:start="223:29" pos:end="223:38">RTC_ENABLE</name></expr>)</condition> <block pos:start="223:41" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:72">

            <comment type="block" pos:start="225:13" pos:end="225:26">/* 3 digits */</comment>

            <expr_stmt pos:start="227:13" pos:end="229:72"><expr pos:start="227:13" pos:end="229:71"><name pos:start="227:13" pos:end="227:33"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:25">current_tm</name><operator pos:start="227:26" pos:end="227:26">.</operator><name pos:start="227:27" pos:end="227:33">tm_year</name></name> <operator pos:start="227:35" pos:end="227:35">=</operator> <operator pos:start="227:37" pos:end="227:37">(</operator><name pos:start="227:38" pos:end="227:40">int</name><operator pos:start="227:41" pos:end="227:41">)</operator><call pos:start="227:42" pos:end="227:65"><name pos:start="227:42" pos:end="227:49">from_bcd</name><argument_list pos:start="227:50" pos:end="227:65">(<argument pos:start="227:51" pos:end="227:64"><expr pos:start="227:51" pos:end="227:64"><operator pos:start="227:51" pos:end="227:51">(</operator><name pos:start="227:52" pos:end="227:58">uint8_t</name><operator pos:start="227:59" pos:end="227:59">)</operator><name pos:start="227:60" pos:end="227:64">value</name></expr></argument>)</argument_list></call> <operator pos:start="227:67" pos:end="227:67">+</operator>

                    <operator pos:start="229:21" pos:end="229:21">(</operator><name pos:start="229:22" pos:end="229:24">int</name><operator pos:start="229:25" pos:end="229:25">)</operator><call pos:start="229:26" pos:end="229:65"><name pos:start="229:26" pos:end="229:33">from_bcd</name><argument_list pos:start="229:34" pos:end="229:65">(<argument pos:start="229:35" pos:end="229:64"><expr pos:start="229:35" pos:end="229:64"><operator pos:start="229:35" pos:end="229:35">(</operator><name pos:start="229:36" pos:end="229:42">uint8_t</name><operator pos:start="229:43" pos:end="229:43">)</operator><operator pos:start="229:44" pos:end="229:44">(</operator><operator pos:start="229:45" pos:end="229:45">(</operator><name pos:start="229:46" pos:end="229:50">value</name> <operator pos:start="229:52" pos:end="229:53">&gt;&gt;</operator> <literal type="number" pos:start="229:55" pos:end="229:55">8</literal><operator pos:start="229:56" pos:end="229:56">)</operator> <operator pos:start="229:58" pos:end="229:58">&amp;</operator> <literal type="number" pos:start="229:60" pos:end="229:63">0x0f</literal><operator pos:start="229:64" pos:end="229:64">)</operator></expr></argument>)</argument_list></call> <operator pos:start="229:67" pos:end="229:67">*</operator> <literal type="number" pos:start="229:69" pos:end="229:71">100</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="233:9" pos:end="233:14">break;</break>



    <default pos:start="237:5" pos:end="237:12">default:</default>

        <expr_stmt pos:start="239:9" pos:end="243:24"><expr pos:start="239:9" pos:end="243:23"><call pos:start="239:9" pos:end="243:23"><name pos:start="239:9" pos:end="239:15">fprintf</name><argument_list pos:start="239:16" pos:end="243:23">(<argument pos:start="239:17" pos:end="239:22"><expr pos:start="239:17" pos:end="239:22"><name pos:start="239:17" pos:end="239:22">stderr</name></expr></argument>,

                <argument pos:start="241:17" pos:end="241:73"><expr pos:start="241:17" pos:end="241:73"><literal type="string" pos:start="241:17" pos:end="241:52">"[exynos4210.rtc: bad write offset "</literal> <name pos:start="241:54" pos:end="241:67">TARGET_FMT_plx</name> <literal type="string" pos:start="241:69" pos:end="241:73">"]\n"</literal></expr></argument>,

                <argument pos:start="243:17" pos:end="243:22"><expr pos:start="243:17" pos:end="243:22"><name pos:start="243:17" pos:end="243:22">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>



    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
