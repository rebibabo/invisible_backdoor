<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2859.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_mov_iso639_to_lang</name><parameter_list pos:start="1:26" pos:end="1:52">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">lang</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">mp4</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:16">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:15">code</name> <init pos:start="5:17" pos:end="5:19">= <expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:31">/* old way, only for QT? */</comment>

    <for pos:start="11:5" pos:end="17:5">for <control pos:start="11:9" pos:end="11:71">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:66"><expr pos:start="11:17" pos:end="11:65"><operator pos:start="11:17" pos:end="11:17">!</operator><name pos:start="11:18" pos:end="11:20">mp4</name> <operator pos:start="11:22" pos:end="11:23">&amp;&amp;</operator> <name pos:start="11:25" pos:end="11:25">i</name> <operator pos:start="11:27" pos:end="11:27">&lt;</operator> <call pos:start="11:29" pos:end="11:65"><name pos:start="11:29" pos:end="11:42">FF_ARRAY_ELEMS</name><argument_list pos:start="11:43" pos:end="11:65">(<argument pos:start="11:44" pos:end="11:64"><expr pos:start="11:44" pos:end="11:64"><name pos:start="11:44" pos:end="11:64">mov_mdhd_language_map</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="11:68" pos:end="11:70"><expr pos:start="11:68" pos:end="11:70"><name pos:start="11:68" pos:end="11:68">i</name><operator pos:start="11:69" pos:end="11:70">++</operator></expr></incr>)</control> <block pos:start="11:73" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:21">

        <if_stmt pos:start="13:9" pos:end="15:21"><if pos:start="13:9" pos:end="15:21">if <condition pos:start="13:12" pos:end="13:80">(<expr pos:start="13:13" pos:end="13:79"><name pos:start="13:13" pos:end="13:36"><name pos:start="13:13" pos:end="13:33">mov_mdhd_language_map</name><index pos:start="13:34" pos:end="13:36">[<expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">i</name></expr>]</index></name> <operator pos:start="13:38" pos:end="13:39">&amp;&amp;</operator> <operator pos:start="13:41" pos:end="13:41">!</operator><call pos:start="13:42" pos:end="13:79"><name pos:start="13:42" pos:end="13:47">strcmp</name><argument_list pos:start="13:48" pos:end="13:79">(<argument pos:start="13:49" pos:end="13:52"><expr pos:start="13:49" pos:end="13:52"><name pos:start="13:49" pos:end="13:52">lang</name></expr></argument>, <argument pos:start="13:55" pos:end="13:78"><expr pos:start="13:55" pos:end="13:78"><name pos:start="13:55" pos:end="13:78"><name pos:start="13:55" pos:end="13:75">mov_mdhd_language_map</name><index pos:start="13:76" pos:end="13:78">[<expr pos:start="13:77" pos:end="13:77"><name pos:start="13:77" pos:end="13:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:21"><block_content pos:start="15:13" pos:end="15:21">

            <return pos:start="15:13" pos:end="15:21">return <expr pos:start="15:20" pos:end="15:20"><name pos:start="15:20" pos:end="15:20">i</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="19:5" pos:end="19:40">/* XXX:can we do that in mov too? */</comment>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">mp4</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:34">/* handle undefined as such */</comment>

    <if_stmt pos:start="27:5" pos:end="29:21"><if pos:start="27:5" pos:end="29:21">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">lang</name><index pos:start="27:13" pos:end="27:15">[<expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>]</index></name> <operator pos:start="27:17" pos:end="27:18">==</operator> <literal type="char" pos:start="27:20" pos:end="27:23">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:21"><block_content pos:start="29:9" pos:end="29:21">

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">lang</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <literal type="string" pos:start="29:16" pos:end="29:20">"und"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:20">/* 5bit ascii */</comment>

    <for pos:start="33:5" pos:end="49:5">for <control pos:start="33:9" pos:end="33:27">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:21">3</literal></expr>;</condition> <incr pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:24">i</name><operator pos:start="33:25" pos:end="33:26">++</operator></expr></incr>)</control> <block pos:start="33:29" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:27">

        <decl_stmt pos:start="35:9" pos:end="35:49"><decl pos:start="35:9" pos:end="35:48"><type pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:16">unsigned</name> <name pos:start="35:18" pos:end="35:21">char</name></type> <name pos:start="35:23" pos:end="35:23">c</name> <init pos:start="35:25" pos:end="35:48">= <expr pos:start="35:27" pos:end="35:48"><operator pos:start="35:27" pos:end="35:27">(</operator><name pos:start="35:28" pos:end="35:35">unsigned</name> <name pos:start="35:37" pos:end="35:40">char</name><operator pos:start="35:41" pos:end="35:41">)</operator><name pos:start="35:42" pos:end="35:48"><name pos:start="35:42" pos:end="35:45">lang</name><index pos:start="35:46" pos:end="35:48">[<expr pos:start="35:47" pos:end="35:47"><name pos:start="35:47" pos:end="35:47">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:13">c</name> <operator pos:start="37:15" pos:end="37:15">&lt;</operator> <literal type="number" pos:start="37:17" pos:end="37:20">0x60</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:13">c</name> <operator pos:start="41:15" pos:end="41:15">&gt;</operator> <literal type="number" pos:start="41:17" pos:end="41:22">0x60</literal> <operator pos:start="41:22" pos:end="41:22">+</operator> <literal type="number" pos:start="41:24" pos:end="41:27">0x1f</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:19"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:12">code</name> <operator pos:start="45:14" pos:end="45:16">&lt;&lt;=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:12">code</name> <operator pos:start="47:14" pos:end="47:15">|=</operator> <operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:18">c</name> <operator pos:start="47:20" pos:end="47:20">-</operator> <literal type="number" pos:start="47:22" pos:end="47:25">0x60</literal><operator pos:start="47:26" pos:end="47:26">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">code</name></expr>;</return>

</block_content>}</block></function>
</unit>
