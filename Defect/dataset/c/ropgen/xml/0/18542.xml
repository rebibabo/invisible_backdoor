<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18542.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">ratecontrol_1pass</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">SnowContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:52">AVFrame</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">pict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="11:5" pos:end="95:22">

    <comment type="block" pos:start="5:5" pos:end="9:55">/* estimate the frame's complexity as a sum of weighted dwt coefs.

     * FIXME we know exact mv bits at this point,

     * but ratecontrol isn't set up to include them. */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">coef_sum</name><init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">level</name></decl>, <decl pos:start="13:16" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:26">orientation</name></decl>, <decl pos:start="13:29" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:38">delta_qlog</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="55:5">for<control pos:start="17:8" pos:end="17:63">(<init pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:13">level</name><operator pos:start="17:14" pos:end="17:14">=</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</init> <condition pos:start="17:18" pos:end="17:54"><expr pos:start="17:18" pos:end="17:53"><name pos:start="17:18" pos:end="17:22">level</name><operator pos:start="17:23" pos:end="17:23">&lt;</operator><name pos:start="17:24" pos:end="17:53"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:53">spatial_decomposition_count</name></name></expr>;</condition> <incr pos:start="17:56" pos:end="17:62"><expr pos:start="17:56" pos:end="17:62"><name pos:start="17:56" pos:end="17:60">level</name><operator pos:start="17:61" pos:end="17:62">++</operator></expr></incr>)</control><block pos:start="17:64" pos:end="55:5">{<block_content pos:start="19:9" pos:end="53:9">

        <for pos:start="19:9" pos:end="53:9">for<control pos:start="19:12" pos:end="19:68">(<init pos:start="19:13" pos:end="19:38"><expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:23">orientation</name><operator pos:start="19:24" pos:end="19:24">=</operator><ternary pos:start="19:25" pos:end="19:37"><condition pos:start="19:25" pos:end="19:31"><expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:29">level</name></expr> ?</condition><then pos:start="19:33" pos:end="19:33"> <expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr> </then><else pos:start="19:35" pos:end="19:37">: <expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr></else></ternary></expr>;</init> <condition pos:start="19:40" pos:end="19:53"><expr pos:start="19:40" pos:end="19:52"><name pos:start="19:40" pos:end="19:50">orientation</name><operator pos:start="19:51" pos:end="19:51">&lt;</operator><literal type="number" pos:start="19:52" pos:end="19:52">4</literal></expr>;</condition> <incr pos:start="19:55" pos:end="19:67"><expr pos:start="19:55" pos:end="19:67"><name pos:start="19:55" pos:end="19:65">orientation</name><operator pos:start="19:66" pos:end="19:67">++</operator></expr></incr>)</control><block pos:start="19:69" pos:end="53:9">{<block_content pos:start="21:13" pos:end="51:51">

            <decl_stmt pos:start="21:13" pos:end="21:62"><decl pos:start="21:13" pos:end="21:61"><type pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:19">SubBand</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:22">b</name><init pos:start="21:23" pos:end="21:61">= <expr pos:start="21:25" pos:end="21:61"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:33">plane</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>]</index></name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:61"><name pos:start="21:38" pos:end="21:41">band</name><index pos:start="21:42" pos:end="21:48">[<expr pos:start="21:43" pos:end="21:47"><name pos:start="21:43" pos:end="21:47">level</name></expr>]</index><index pos:start="21:49" pos:end="21:61">[<expr pos:start="21:50" pos:end="21:60"><name pos:start="21:50" pos:end="21:60">orientation</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:33"><decl pos:start="23:13" pos:end="23:32"><type pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:19">DWTELEM</name> <modifier pos:start="23:21" pos:end="23:21">*</modifier></type><name pos:start="23:22" pos:end="23:24">buf</name><init pos:start="23:25" pos:end="23:32">= <expr pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:27">b</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">buf</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:34"><decl pos:start="25:13" pos:end="25:33"><type pos:start="25:13" pos:end="25:21"><specifier pos:start="25:13" pos:end="25:17">const</specifier> <name pos:start="25:19" pos:end="25:21">int</name></type> <name pos:start="25:23" pos:end="25:23">w</name><init pos:start="25:24" pos:end="25:33">= <expr pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:26">b</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:33">width</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:35"><decl pos:start="27:13" pos:end="27:34"><type pos:start="27:13" pos:end="27:21"><specifier pos:start="27:13" pos:end="27:17">const</specifier> <name pos:start="27:19" pos:end="27:21">int</name></type> <name pos:start="27:23" pos:end="27:23">h</name><init pos:start="27:24" pos:end="27:34">= <expr pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:26">b</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:34">height</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:40"><decl pos:start="29:13" pos:end="29:39"><type pos:start="29:13" pos:end="29:21"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:21">int</name></type> <name pos:start="29:23" pos:end="29:28">stride</name><init pos:start="29:29" pos:end="29:39">= <expr pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:31">b</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:39">stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:65"><decl pos:start="31:13" pos:end="31:64"><type pos:start="31:13" pos:end="31:21"><specifier pos:start="31:13" pos:end="31:17">const</specifier> <name pos:start="31:19" pos:end="31:21">int</name></type> <name pos:start="31:23" pos:end="31:26">qlog</name><init pos:start="31:27" pos:end="31:64">= <expr pos:start="31:29" pos:end="31:64"><call pos:start="31:29" pos:end="31:64"><name pos:start="31:29" pos:end="31:32">clip</name><argument_list pos:start="31:33" pos:end="31:64">(<argument pos:start="31:34" pos:end="31:50"><expr pos:start="31:34" pos:end="31:50"><literal type="number" pos:start="31:34" pos:end="31:34">2</literal><operator pos:start="31:35" pos:end="31:35">*</operator><name pos:start="31:36" pos:end="31:40">QROOT</name> <operator pos:start="31:42" pos:end="31:42">+</operator> <name pos:start="31:44" pos:end="31:50"><name pos:start="31:44" pos:end="31:44">b</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:50">qlog</name></name></expr></argument>, <argument pos:start="31:53" pos:end="31:53"><expr pos:start="31:53" pos:end="31:53"><literal type="number" pos:start="31:53" pos:end="31:53">0</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:63"><expr pos:start="31:56" pos:end="31:63"><name pos:start="31:56" pos:end="31:60">QROOT</name><operator pos:start="31:61" pos:end="31:61">*</operator><literal type="number" pos:start="31:62" pos:end="31:63">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:65"><decl pos:start="33:13" pos:end="33:64"><type pos:start="33:13" pos:end="33:21"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:21">int</name></type> <name pos:start="33:23" pos:end="33:26">qmul</name><init pos:start="33:27" pos:end="33:64">= <expr pos:start="33:29" pos:end="33:64"><name pos:start="33:29" pos:end="33:48"><name pos:start="33:29" pos:end="33:32">qexp</name><index pos:start="33:33" pos:end="33:48">[<expr pos:start="33:34" pos:end="33:47"><name pos:start="33:34" pos:end="33:37">qlog</name><operator pos:start="33:38" pos:end="33:38">&amp;</operator><operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:44">QROOT</name><operator pos:start="33:45" pos:end="33:45">-</operator><literal type="number" pos:start="33:46" pos:end="33:46">1</literal><operator pos:start="33:47" pos:end="33:47">)</operator></expr>]</index></name><operator pos:start="33:49" pos:end="33:50">&lt;&lt;</operator><operator pos:start="33:51" pos:end="33:51">(</operator><name pos:start="33:52" pos:end="33:55">qlog</name><operator pos:start="33:56" pos:end="33:57">&gt;&gt;</operator><name pos:start="33:58" pos:end="33:63">QSHIFT</name><operator pos:start="33:64" pos:end="33:64">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:41"><decl pos:start="35:13" pos:end="35:40"><type pos:start="35:13" pos:end="35:21"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:21">int</name></type> <name pos:start="35:23" pos:end="35:26">qdiv</name><init pos:start="35:27" pos:end="35:40">= <expr pos:start="35:29" pos:end="35:40"><operator pos:start="35:29" pos:end="35:29">(</operator><literal type="number" pos:start="35:30" pos:end="35:30">1</literal><operator pos:start="35:31" pos:end="35:32">&lt;&lt;</operator><literal type="number" pos:start="35:33" pos:end="35:34">16</literal><operator pos:start="35:35" pos:end="35:35">)</operator><operator pos:start="35:36" pos:end="35:36">/</operator><name pos:start="35:37" pos:end="35:40">qmul</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:21"><decl pos:start="37:13" pos:end="37:17"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:17">x</name></decl>, <decl pos:start="37:20" pos:end="37:20"><type ref="prev" pos:start="37:13" pos:end="37:15"/><name pos:start="37:20" pos:end="37:20">y</name></decl>;</decl_stmt>

            <if_stmt pos:start="39:13" pos:end="41:53"><if pos:start="39:13" pos:end="41:53">if<condition pos:start="39:15" pos:end="39:30">(<expr pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:26">orientation</name><operator pos:start="39:27" pos:end="39:28">==</operator><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:53"><block_content pos:start="41:17" pos:end="41:53">

                <expr_stmt pos:start="41:17" pos:end="41:53"><expr pos:start="41:17" pos:end="41:52"><call pos:start="41:17" pos:end="41:52"><name pos:start="41:17" pos:end="41:27">decorrelate</name><argument_list pos:start="41:28" pos:end="41:52">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">s</name></expr></argument>, <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">b</name></expr></argument>, <argument pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:37">buf</name></expr></argument>, <argument pos:start="41:40" pos:end="41:45"><expr pos:start="41:40" pos:end="41:45"><name pos:start="41:40" pos:end="41:45">stride</name></expr></argument>, <argument pos:start="41:48" pos:end="41:48"><expr pos:start="41:48" pos:end="41:48"><literal type="number" pos:start="41:48" pos:end="41:48">1</literal></expr></argument>, <argument pos:start="41:51" pos:end="41:51"><expr pos:start="41:51" pos:end="41:51"><literal type="number" pos:start="41:51" pos:end="41:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="43:13" pos:end="47:65">for<control pos:start="43:16" pos:end="43:30">(<init pos:start="43:17" pos:end="43:20"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:17">y</name><operator pos:start="43:18" pos:end="43:18">=</operator><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>;</init> <condition pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:22">y</name><operator pos:start="43:23" pos:end="43:23">&lt;</operator><name pos:start="43:24" pos:end="43:24">h</name></expr>;</condition> <incr pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:27">y</name><operator pos:start="43:28" pos:end="43:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:17" pos:end="47:65"><block_content pos:start="45:17" pos:end="47:65">

                <for pos:start="45:17" pos:end="47:65">for<control pos:start="45:20" pos:end="45:34">(<init pos:start="45:21" pos:end="45:24"><expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:21">x</name><operator pos:start="45:22" pos:end="45:22">=</operator><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>;</init> <condition pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:26">x</name><operator pos:start="45:27" pos:end="45:27">&lt;</operator><name pos:start="45:28" pos:end="45:28">w</name></expr>;</condition> <incr pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:31">x</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:21" pos:end="47:65"><block_content pos:start="47:21" pos:end="47:65">

                    <expr_stmt pos:start="47:21" pos:end="47:65"><expr pos:start="47:21" pos:end="47:64"><name pos:start="47:21" pos:end="47:28">coef_sum</name><operator pos:start="47:29" pos:end="47:30">+=</operator> <call pos:start="47:32" pos:end="47:51"><name pos:start="47:32" pos:end="47:34">abs</name><argument_list pos:start="47:35" pos:end="47:51">(<argument pos:start="47:36" pos:end="47:50"><expr pos:start="47:36" pos:end="47:50"><name pos:start="47:36" pos:end="47:50"><name pos:start="47:36" pos:end="47:38">buf</name><index pos:start="47:39" pos:end="47:50">[<expr pos:start="47:40" pos:end="47:49"><name pos:start="47:40" pos:end="47:40">x</name><operator pos:start="47:41" pos:end="47:41">+</operator><name pos:start="47:42" pos:end="47:42">y</name><operator pos:start="47:43" pos:end="47:43">*</operator><name pos:start="47:44" pos:end="47:49">stride</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="47:53" pos:end="47:53">*</operator> <name pos:start="47:55" pos:end="47:58">qdiv</name> <operator pos:start="47:60" pos:end="47:61">&gt;&gt;</operator> <literal type="number" pos:start="47:63" pos:end="47:64">16</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

            <if_stmt pos:start="49:13" pos:end="51:51"><if pos:start="49:13" pos:end="51:51">if<condition pos:start="49:15" pos:end="49:30">(<expr pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:26">orientation</name><operator pos:start="49:27" pos:end="49:28">==</operator><literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:51"><block_content pos:start="51:17" pos:end="51:51">

                <expr_stmt pos:start="51:17" pos:end="51:51"><expr pos:start="51:17" pos:end="51:50"><call pos:start="51:17" pos:end="51:50"><name pos:start="51:17" pos:end="51:25">correlate</name><argument_list pos:start="51:26" pos:end="51:50">(<argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">s</name></expr></argument>, <argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">b</name></expr></argument>, <argument pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:35">buf</name></expr></argument>, <argument pos:start="51:38" pos:end="51:43"><expr pos:start="51:38" pos:end="51:43"><name pos:start="51:38" pos:end="51:43">stride</name></expr></argument>, <argument pos:start="51:46" pos:end="51:46"><expr pos:start="51:46" pos:end="51:46"><literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr></argument>, <argument pos:start="51:49" pos:end="51:49"><expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="59:5" pos:end="59:51">/* ugly, ratecontrol just takes a sqrt again */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:12">coef_sum</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:24">uint64_t</name><operator pos:start="61:25" pos:end="61:25">)</operator><name pos:start="61:26" pos:end="61:33">coef_sum</name> <operator pos:start="61:35" pos:end="61:35">*</operator> <name pos:start="61:37" pos:end="61:44">coef_sum</name> <operator pos:start="61:46" pos:end="61:47">&gt;&gt;</operator> <literal type="number" pos:start="61:49" pos:end="61:50">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><call pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:10">assert</name><argument_list pos:start="63:11" pos:end="63:30">(<argument pos:start="63:12" pos:end="63:29"><expr pos:start="63:12" pos:end="63:29"><name pos:start="63:12" pos:end="63:19">coef_sum</name> <operator pos:start="63:21" pos:end="63:21">&lt;</operator> <name pos:start="63:23" pos:end="63:29">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="79:5"><if pos:start="67:5" pos:end="73:5">if<condition pos:start="67:7" pos:end="67:33">(<expr pos:start="67:8" pos:end="67:32"><name pos:start="67:8" pos:end="67:22"><name pos:start="67:8" pos:end="67:11">pict</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:22">pict_type</name></name> <operator pos:start="67:24" pos:end="67:25">==</operator> <name pos:start="67:27" pos:end="67:32">I_TYPE</name></expr>)</condition><block pos:start="67:34" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:46">

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:12">m</name><operator pos:start="69:13" pos:end="69:13">.</operator><name pos:start="69:14" pos:end="69:28">current_picture</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:39">mb_var_sum</name></name><operator pos:start="69:40" pos:end="69:40">=</operator> <name pos:start="69:42" pos:end="69:49">coef_sum</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:46"><expr pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:12">m</name><operator pos:start="71:13" pos:end="71:13">.</operator><name pos:start="71:14" pos:end="71:28">current_picture</name><operator pos:start="71:29" pos:end="71:29">.</operator><name pos:start="71:30" pos:end="71:42">mc_mb_var_sum</name></name><operator pos:start="71:43" pos:end="71:43">=</operator> <literal type="number" pos:start="71:45" pos:end="71:45">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="73:6" pos:end="79:5">else<block pos:start="73:10" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:43">

        <expr_stmt pos:start="75:9" pos:end="75:53"><expr pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:12">m</name><operator pos:start="75:13" pos:end="75:13">.</operator><name pos:start="75:14" pos:end="75:28">current_picture</name><operator pos:start="75:29" pos:end="75:29">.</operator><name pos:start="75:30" pos:end="75:42">mc_mb_var_sum</name></name><operator pos:start="75:43" pos:end="75:43">=</operator> <name pos:start="75:45" pos:end="75:52">coef_sum</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:43"><expr pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:12">m</name><operator pos:start="77:13" pos:end="77:13">.</operator><name pos:start="77:14" pos:end="77:28">current_picture</name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:39">mb_var_sum</name></name><operator pos:start="77:40" pos:end="77:40">=</operator> <literal type="number" pos:start="77:42" pos:end="77:42">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:53"><expr pos:start="83:5" pos:end="83:52"><name pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:8">pict</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:17">quality</name></name><operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:52"><name pos:start="83:20" pos:end="83:42">ff_rate_estimate_qscale</name><argument_list pos:start="83:43" pos:end="83:52">(<argument pos:start="83:44" pos:end="83:48"><expr pos:start="83:44" pos:end="83:48"><operator pos:start="83:44" pos:end="83:44">&amp;</operator><name pos:start="83:45" pos:end="83:48"><name pos:start="83:45" pos:end="83:45">s</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:48">m</name></name></expr></argument>, <argument pos:start="83:51" pos:end="83:51"><expr pos:start="83:51" pos:end="83:51"><literal type="number" pos:start="83:51" pos:end="83:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:18"><if pos:start="85:5" pos:end="87:18">if <condition pos:start="85:8" pos:end="85:26">(<expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:12">pict</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:21">quality</name></name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <literal type="number" pos:start="85:25" pos:end="85:25">0</literal></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:18"><block_content pos:start="87:9" pos:end="87:18">

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:13"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:13">lambda</name></name><operator pos:start="89:14" pos:end="89:14">=</operator> <name pos:start="89:16" pos:end="89:28"><name pos:start="89:16" pos:end="89:19">pict</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:28">quality</name></name> <operator pos:start="89:30" pos:end="89:30">*</operator> <literal type="number" pos:start="89:32" pos:end="89:32">3</literal><operator pos:start="89:33" pos:end="89:33">/</operator><literal type="number" pos:start="89:34" pos:end="89:34">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:53"><expr pos:start="91:5" pos:end="91:52"><name pos:start="91:5" pos:end="91:14">delta_qlog</name><operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:42"><name pos:start="91:17" pos:end="91:27">qscale2qlog</name><argument_list pos:start="91:28" pos:end="91:42">(<argument pos:start="91:29" pos:end="91:41"><expr pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:32">pict</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:41">quality</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:44" pos:end="91:44">-</operator> <name pos:start="91:46" pos:end="91:52"><name pos:start="91:46" pos:end="91:46">s</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:52">qlog</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:11"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:11">qlog</name></name><operator pos:start="93:12" pos:end="93:13">+=</operator> <name pos:start="93:15" pos:end="93:24">delta_qlog</name></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:22">return <expr pos:start="95:12" pos:end="95:21"><name pos:start="95:12" pos:end="95:21">delta_qlog</name></expr>;</return>

</block_content>}</block></function>
</unit>
