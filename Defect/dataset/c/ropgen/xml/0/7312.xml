<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7312.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">qemu_input_key_value_to_scancode</name><parameter_list pos:start="1:37" pos:end="3:48">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:58"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:51">KeyValue</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">value</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:69"><decl pos:start="1:61" pos:end="1:69"><type pos:start="1:61" pos:end="1:69"><name pos:start="1:61" pos:end="1:64">bool</name></type> <name pos:start="1:66" pos:end="1:69">down</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:47"><decl pos:start="3:38" pos:end="3:47"><type pos:start="3:38" pos:end="3:47"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">codes</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:17">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">keycode</name> <init pos:start="7:17" pos:end="7:55">= <expr pos:start="7:19" pos:end="7:55"><call pos:start="7:19" pos:end="7:55"><name pos:start="7:19" pos:end="7:48">qemu_input_key_value_to_number</name><argument_list pos:start="7:49" pos:end="7:55">(<argument pos:start="7:50" pos:end="7:54"><expr pos:start="7:50" pos:end="7:54"><name pos:start="7:50" pos:end="7:54">value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">count</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="15:43">(<expr pos:start="13:9" pos:end="15:42"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:13">value</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:19">type</name></name> <operator pos:start="13:21" pos:end="13:22">==</operator> <name pos:start="13:24" pos:end="13:43">KEY_VALUE_KIND_QCODE</name> <operator pos:start="13:45" pos:end="13:46">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:13">value</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:16">u</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:22">qcode</name></name> <operator pos:start="15:24" pos:end="15:25">==</operator> <name pos:start="15:27" pos:end="15:42">Q_KEY_CODE_PAUSE</name></expr>)</condition> <block pos:start="15:45" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:21">

        <comment type="block" pos:start="17:9" pos:end="17:27">/* specific case */</comment>

        <decl_stmt pos:start="19:9" pos:end="19:32"><decl pos:start="19:9" pos:end="19:31"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">v</name> <init pos:start="19:15" pos:end="19:31">= <expr pos:start="19:17" pos:end="19:31"><ternary pos:start="19:17" pos:end="19:31"><condition pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">down</name></expr> ?</condition><then pos:start="19:24" pos:end="19:24"> <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr> </then><else pos:start="19:26" pos:end="19:31">: <expr pos:start="19:28" pos:end="19:31"><literal type="number" pos:start="19:28" pos:end="19:31">0x80</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:13">codes</name><index pos:start="21:14" pos:end="21:22">[<expr pos:start="21:15" pos:end="21:21"><name pos:start="21:15" pos:end="21:19">count</name><operator pos:start="21:20" pos:end="21:21">++</operator></expr>]</index></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:29">0xe1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">codes</name><index pos:start="23:14" pos:end="23:22">[<expr pos:start="23:15" pos:end="23:21"><name pos:start="23:15" pos:end="23:19">count</name><operator pos:start="23:20" pos:end="23:21">++</operator></expr>]</index></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <literal type="number" pos:start="23:26" pos:end="23:29">0x1d</literal> <operator pos:start="23:31" pos:end="23:31">|</operator> <name pos:start="23:33" pos:end="23:33">v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">codes</name><index pos:start="25:14" pos:end="25:22">[<expr pos:start="25:15" pos:end="25:21"><name pos:start="25:15" pos:end="25:19">count</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr>]</index></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:29">0x45</literal> <operator pos:start="25:31" pos:end="25:31">|</operator> <name pos:start="25:33" pos:end="25:33">v</name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:21">return <expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">count</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:15">keycode</name> <operator pos:start="31:17" pos:end="31:17">&amp;</operator> <name pos:start="31:19" pos:end="31:31">SCANCODE_GREY</name></expr>)</condition> <block pos:start="31:34" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:34">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:13">codes</name><index pos:start="33:14" pos:end="33:22">[<expr pos:start="33:15" pos:end="33:21"><name pos:start="33:15" pos:end="33:19">count</name><operator pos:start="33:20" pos:end="33:21">++</operator></expr>]</index></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:39">SCANCODE_EMUL0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:15">keycode</name> <operator pos:start="35:17" pos:end="35:18">&amp;=</operator> <operator pos:start="35:20" pos:end="35:20">~</operator><name pos:start="35:21" pos:end="35:33">SCANCODE_GREY</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:14">(<expr pos:start="39:9" pos:end="39:13"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:13">down</name></expr>)</condition> <block pos:start="39:16" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:31">

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:15">keycode</name> <operator pos:start="41:17" pos:end="41:18">|=</operator> <name pos:start="41:20" pos:end="41:30">SCANCODE_UP</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:9">codes</name><index pos:start="45:10" pos:end="45:18">[<expr pos:start="45:11" pos:end="45:17"><name pos:start="45:11" pos:end="45:15">count</name><operator pos:start="45:16" pos:end="45:17">++</operator></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:28">keycode</name></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:17">return <expr pos:start="49:12" pos:end="49:16"><name pos:start="49:12" pos:end="49:16">count</name></expr>;</return>

</block_content>}</block></function>
</unit>
