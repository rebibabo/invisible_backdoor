<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22107.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">bool</name></type> <name pos:start="1:20" pos:end="1:34">fp_access_check</name><parameter_list pos:start="1:35" pos:end="1:51">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:47">DisasContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:17">

    <expr_stmt pos:start="5:5" pos:end="5:34"><expr pos:start="5:5" pos:end="5:33"><call pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:33">(<argument pos:start="5:12" pos:end="5:32"><expr pos:start="5:12" pos:end="5:32"><operator pos:start="5:12" pos:end="5:12">!</operator><name pos:start="5:13" pos:end="5:32"><name pos:start="5:13" pos:end="5:13">s</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:32">fp_access_checked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:24">fp_access_checked</name></name> <operator pos:start="7:26" pos:end="7:26">=</operator> <name pos:start="7:28" pos:end="7:31">true</name></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:21">cpacr_fpen</name></name></expr>)</condition> <block pos:start="11:24" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:48"><expr pos:start="19:5" pos:end="21:47"><call pos:start="19:5" pos:end="21:47"><name pos:start="19:5" pos:end="19:22">gen_exception_insn</name><argument_list pos:start="19:23" pos:end="21:47">(<argument pos:start="19:24" pos:end="19:24"><expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">s</name></expr></argument>, <argument pos:start="19:27" pos:end="19:27"><expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">4</literal></expr></argument>, <argument pos:start="19:30" pos:end="19:38"><expr pos:start="19:30" pos:end="19:38"><name pos:start="19:30" pos:end="19:38">EXCP_UDEF</name></expr></argument>, <argument pos:start="19:41" pos:end="19:73"><expr pos:start="19:41" pos:end="19:73"><call pos:start="19:41" pos:end="19:73"><name pos:start="19:41" pos:end="19:58">syn_fp_access_trap</name><argument_list pos:start="19:59" pos:end="19:73">(<argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">1</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:65"><expr pos:start="19:63" pos:end="19:65"><literal type="number" pos:start="19:63" pos:end="19:65">0xe</literal></expr></argument>, <argument pos:start="19:68" pos:end="19:72"><expr pos:start="19:68" pos:end="19:72"><name pos:start="19:68" pos:end="19:72">false</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="21:24" pos:end="21:46"><expr pos:start="21:24" pos:end="21:46"><call pos:start="21:24" pos:end="21:46"><name pos:start="21:24" pos:end="21:43">default_exception_el</name><argument_list pos:start="21:44" pos:end="21:46">(<argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><name pos:start="21:45" pos:end="21:45">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="23:5" pos:end="23:17">return <expr pos:start="23:12" pos:end="23:16"><name pos:start="23:12" pos:end="23:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
