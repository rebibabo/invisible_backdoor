<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10265.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">RxFilterInfoList</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:37">qmp_query_rx_filter</name><parameter_list pos:start="1:38" pos:end="3:51">(<parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:42">bool</name></type> <name pos:start="1:44" pos:end="1:51">has_name</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">name</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:43">Error</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier><modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:23">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">NetClientState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">RxFilterInfoList</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:33">filter_list</name> <init pos:start="9:35" pos:end="9:40">= <expr pos:start="9:37" pos:end="9:40"><name pos:start="9:37" pos:end="9:40">NULL</name></expr></init></decl>, <decl pos:start="9:43" pos:end="9:60"><type ref="prev" pos:start="9:5" pos:end="9:22"><modifier pos:start="9:43" pos:end="9:43">*</modifier></type><name pos:start="9:44" pos:end="9:53">last_entry</name> <init pos:start="9:55" pos:end="9:60">= <expr pos:start="9:57" pos:end="9:60"><name pos:start="9:57" pos:end="9:60">NULL</name></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:42">(<argument pos:start="13:20" pos:end="13:21">nc</argument>, <argument pos:start="13:24" pos:end="13:35">&amp;net_clients</argument>, <argument pos:start="13:38" pos:end="13:41">next</argument>)</argument_list></macro> <block pos:start="13:44" pos:end="87:5">{<block_content pos:start="15:9" pos:end="85:9">

        <decl_stmt pos:start="15:9" pos:end="15:32"><decl pos:start="15:9" pos:end="15:31"><type pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:24">RxFilterInfoList</name> <modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:31">entry</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:27"><decl pos:start="17:9" pos:end="17:26"><type pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">RxFilterInfo</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:26">info</name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:52">(<expr pos:start="21:13" pos:end="21:51"><name pos:start="21:13" pos:end="21:20">has_name</name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <call pos:start="21:25" pos:end="21:46"><name pos:start="21:25" pos:end="21:30">strcmp</name><argument_list pos:start="21:31" pos:end="21:46">(<argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:33">nc</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">name</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">name</name></expr></argument>)</argument_list></call> <operator pos:start="21:48" pos:end="21:49">!=</operator> <literal type="number" pos:start="21:51" pos:end="21:51">0</literal></expr>)</condition> <block pos:start="21:54" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:53">/* only query rx-filter information of NIC */</comment>

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:58">(<expr pos:start="31:13" pos:end="31:57"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:14">nc</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">info</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:26">type</name></name> <operator pos:start="31:28" pos:end="31:29">!=</operator> <name pos:start="31:31" pos:end="31:57">NET_CLIENT_OPTIONS_KIND_NIC</name></expr>)</condition> <block pos:start="31:60" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:21">

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:25">(<expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:24">has_name</name></expr>)</condition> <block pos:start="33:27" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:22">

                <expr_stmt pos:start="35:17" pos:end="35:69"><expr pos:start="35:17" pos:end="35:68"><call pos:start="35:17" pos:end="35:68"><name pos:start="35:17" pos:end="35:26">error_setg</name><argument_list pos:start="35:27" pos:end="35:68">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">errp</name></expr></argument>, <argument pos:start="35:34" pos:end="35:61"><expr pos:start="35:34" pos:end="35:61"><literal type="string" pos:start="35:34" pos:end="35:61">"net client(%s) isn't a NIC"</literal></expr></argument>, <argument pos:start="35:64" pos:end="35:67"><expr pos:start="35:64" pos:end="35:67"><name pos:start="35:64" pos:end="35:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <continue pos:start="41:13" pos:end="41:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="77:9"><if pos:start="47:9" pos:end="69:9">if <condition pos:start="47:12" pos:end="47:38">(<expr pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:14">nc</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:20">info</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:37">query_rx_filter</name></name></expr>)</condition> <block pos:start="47:40" pos:end="69:9">{<block_content pos:start="49:13" pos:end="67:31">

            <expr_stmt pos:start="49:13" pos:end="49:49"><expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:16">info</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:48"><name pos:start="49:20" pos:end="49:44"><name pos:start="49:20" pos:end="49:21">nc</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:27">info</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:44">query_rx_filter</name></name><argument_list pos:start="49:45" pos:end="49:48">(<argument pos:start="49:46" pos:end="49:47"><expr pos:start="49:46" pos:end="49:47"><name pos:start="49:46" pos:end="49:47">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:46"><expr pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:17">entry</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:45"><name pos:start="51:21" pos:end="51:29">g_malloc0</name><argument_list pos:start="51:30" pos:end="51:45">(<argument pos:start="51:31" pos:end="51:44"><expr pos:start="51:31" pos:end="51:44"><sizeof pos:start="51:31" pos:end="51:44">sizeof<argument_list pos:start="51:37" pos:end="51:44">(<argument pos:start="51:38" pos:end="51:43"><expr pos:start="51:38" pos:end="51:43"><operator pos:start="51:38" pos:end="51:38">*</operator><name pos:start="51:39" pos:end="51:43">entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:17">entry</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">value</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:31">info</name></expr>;</expr_stmt>



            <if_stmt pos:start="57:13" pos:end="65:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:29">(<expr pos:start="57:17" pos:end="57:28"><operator pos:start="57:17" pos:end="57:17">!</operator><name pos:start="57:18" pos:end="57:28">filter_list</name></expr>)</condition> <block pos:start="57:31" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:36">

                <expr_stmt pos:start="59:17" pos:end="59:36"><expr pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:27">filter_list</name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:35">entry</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="65:13">else <block pos:start="61:20" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:41">

                <expr_stmt pos:start="63:17" pos:end="63:41"><expr pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:26">last_entry</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:32">next</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <name pos:start="63:36" pos:end="63:40">entry</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:22">last_entry</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:30">entry</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="77:9">else if <condition pos:start="69:19" pos:end="69:28">(<expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27">has_name</name></expr>)</condition> <block pos:start="69:30" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:18">

            <expr_stmt pos:start="71:13" pos:end="73:52"><expr pos:start="71:13" pos:end="73:51"><call pos:start="71:13" pos:end="73:51"><name pos:start="71:13" pos:end="71:22">error_setg</name><argument_list pos:start="71:23" pos:end="73:51">(<argument pos:start="71:24" pos:end="71:27"><expr pos:start="71:24" pos:end="71:27"><name pos:start="71:24" pos:end="71:27">errp</name></expr></argument>, <argument pos:start="71:30" pos:end="73:44"><expr pos:start="71:30" pos:end="73:44"><literal type="string" pos:start="71:30" pos:end="71:61">"net client(%s) doesn't support"</literal>

                       <literal type="string" pos:start="73:24" pos:end="73:44">" rx-filter querying"</literal></expr></argument>, <argument pos:start="73:47" pos:end="73:50"><expr pos:start="73:47" pos:end="73:50"><name pos:start="73:47" pos:end="73:50">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:21">(<expr pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:20">has_name</name></expr>)</condition> <block pos:start="81:23" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:18">

            <break pos:start="83:13" pos:end="83:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:63">(<expr pos:start="91:9" pos:end="91:62"><name pos:start="91:9" pos:end="91:19">filter_list</name> <operator pos:start="91:21" pos:end="91:22">==</operator> <name pos:start="91:24" pos:end="91:27">NULL</name> <operator pos:start="91:29" pos:end="91:30">&amp;&amp;</operator> <operator pos:start="91:32" pos:end="91:32">!</operator><call pos:start="91:33" pos:end="91:50"><name pos:start="91:33" pos:end="91:44">error_is_set</name><argument_list pos:start="91:45" pos:end="91:50">(<argument pos:start="91:46" pos:end="91:49"><expr pos:start="91:46" pos:end="91:49"><name pos:start="91:46" pos:end="91:49">errp</name></expr></argument>)</argument_list></call> <operator pos:start="91:52" pos:end="91:53">&amp;&amp;</operator> <name pos:start="91:55" pos:end="91:62">has_name</name></expr>)</condition> <block pos:start="91:65" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:62">

        <expr_stmt pos:start="93:9" pos:end="93:62"><expr pos:start="93:9" pos:end="93:61"><call pos:start="93:9" pos:end="93:61"><name pos:start="93:9" pos:end="93:18">error_setg</name><argument_list pos:start="93:19" pos:end="93:61">(<argument pos:start="93:20" pos:end="93:23"><expr pos:start="93:20" pos:end="93:23"><name pos:start="93:20" pos:end="93:23">errp</name></expr></argument>, <argument pos:start="93:26" pos:end="93:54"><expr pos:start="93:26" pos:end="93:54"><literal type="string" pos:start="93:26" pos:end="93:54">"invalid net client name: %s"</literal></expr></argument>, <argument pos:start="93:57" pos:end="93:60"><expr pos:start="93:57" pos:end="93:60"><name pos:start="93:57" pos:end="93:60">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:23">return <expr pos:start="99:12" pos:end="99:22"><name pos:start="99:12" pos:end="99:22">filter_list</name></expr>;</return>

</block_content>}</block></function>
</unit>
