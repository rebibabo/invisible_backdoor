<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17714.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:53"><name pos:start="1:1" pos:end="1:27">cac_applet_pki_process_apdu</name><argument_list pos:start="1:28" pos:end="3:53">(<argument pos:start="1:29" pos:end="1:39">VCard *card</argument>, <argument pos:start="1:42" pos:end="1:56">VCardAPDU *apdu</argument>,

                            <argument pos:start="3:29" pos:end="3:52">VCardResponse **response</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="219:1">{<block_content pos:start="7:5" pos:end="217:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">CACPKIAppletData</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:32">pki_applet</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">VCardAppletPrivate</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:38">applet_private</name> <init pos:start="9:40" pos:end="9:45">= <expr pos:start="9:42" pos:end="9:45"><name pos:start="9:42" pos:end="9:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name></decl>, <decl pos:start="11:15" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:18">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:30">sign_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:23">vcard_7816_status_t</name></type> <name pos:start="15:25" pos:end="15:30">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">VCardStatus</name></type> <name pos:start="17:17" pos:end="17:19">ret</name> <init pos:start="17:21" pos:end="17:32">= <expr pos:start="17:23" pos:end="17:32"><name pos:start="17:23" pos:end="17:32">VCARD_FAIL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:77"><expr pos:start="21:5" pos:end="21:76"><name pos:start="21:5" pos:end="21:18">applet_private</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:76"><name pos:start="21:22" pos:end="21:53">vcard_get_current_applet_private</name><argument_list pos:start="21:54" pos:end="21:76">(<argument pos:start="21:55" pos:end="21:58"><expr pos:start="21:55" pos:end="21:58"><name pos:start="21:55" pos:end="21:58">card</name></expr></argument>, <argument pos:start="21:61" pos:end="21:75"><expr pos:start="21:61" pos:end="21:75"><name pos:start="21:61" pos:end="21:75"><name pos:start="21:61" pos:end="21:64">apdu</name><operator pos:start="21:65" pos:end="21:66">-&gt;</operator><name pos:start="21:67" pos:end="21:75">a_channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:26">(<argument pos:start="23:12" pos:end="23:25"><expr pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:25">applet_private</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:14">pki_applet</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <operator pos:start="25:18" pos:end="25:18">&amp;</operator><operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:45"><name pos:start="25:20" pos:end="25:33">applet_private</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:36">u</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:45">pki_data</name></name><operator pos:start="25:46" pos:end="25:46">)</operator></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="215:5">switch <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:16">apdu</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">a_ins</name></name></expr>)</condition> <block pos:start="29:26" pos:end="215:5">{<block_content pos:start="31:5" pos:end="213:14">

    <case pos:start="31:5" pos:end="31:27">case <expr pos:start="31:10" pos:end="31:26"><name pos:start="31:10" pos:end="31:26">CAC_UPDATE_BUFFER</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="35:60"><expr pos:start="33:9" pos:end="35:59"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:17">response</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="35:59"><name pos:start="33:21" pos:end="33:39">vcard_make_response</name><argument_list pos:start="33:40" pos:end="35:59">(

            <argument pos:start="35:13" pos:end="35:58"><expr pos:start="35:13" pos:end="35:58"><name pos:start="35:13" pos:end="35:58">VCARD7816_STATUS_ERROR_CONDITION_NOT_SATISFIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:24">VCARD_DONE</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:29">case <expr pos:start="41:10" pos:end="41:28"><name pos:start="41:10" pos:end="41:28">CAC_GET_CERTIFICATE</name></expr>:</case>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:51">(<expr pos:start="43:13" pos:end="43:50"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:23"><name pos:start="43:14" pos:end="43:17">apdu</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:23">a_p2</name></name> <operator pos:start="43:25" pos:end="43:26">!=</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal><operator pos:start="43:29" pos:end="43:29">)</operator> <operator pos:start="43:31" pos:end="43:32">||</operator> <operator pos:start="43:34" pos:end="43:34">(</operator><name pos:start="43:35" pos:end="43:44"><name pos:start="43:35" pos:end="43:38">apdu</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:44">a_p1</name></name> <operator pos:start="43:46" pos:end="43:47">!=</operator> <literal type="number" pos:start="43:49" pos:end="43:49">0</literal><operator pos:start="43:50" pos:end="43:50">)</operator></expr>)</condition> <block pos:start="43:53" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:18">

            <expr_stmt pos:start="45:13" pos:end="47:69"><expr pos:start="45:13" pos:end="47:68"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:21">response</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <call pos:start="45:25" pos:end="47:68"><name pos:start="45:25" pos:end="45:43">vcard_make_response</name><argument_list pos:start="45:44" pos:end="47:68">(

                             <argument pos:start="47:30" pos:end="47:67"><expr pos:start="47:30" pos:end="47:67"><name pos:start="47:30" pos:end="47:67">VCARD7816_STATUS_ERROR_P1_P2_INCORRECT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:41"><expr pos:start="53:9" pos:end="53:40"><call pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:14">assert</name><argument_list pos:start="53:15" pos:end="53:40">(<argument pos:start="53:16" pos:end="53:39"><expr pos:start="53:16" pos:end="53:39"><name pos:start="53:16" pos:end="53:31"><name pos:start="53:16" pos:end="53:25">pki_applet</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:31">cert</name></name> <operator pos:start="53:33" pos:end="53:34">!=</operator> <name pos:start="53:36" pos:end="53:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:12">size</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:19">apdu</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">a_Le</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:44">(<expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:22">pki_applet</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:35">cert_buffer</name></name> <operator pos:start="57:37" pos:end="57:38">==</operator> <name pos:start="57:40" pos:end="57:43">NULL</name></expr>)</condition> <block pos:start="57:46" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:63">

            <expr_stmt pos:start="59:13" pos:end="59:55"><expr pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:22">pki_applet</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:35">cert_buffer</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <name pos:start="59:39" pos:end="59:54"><name pos:start="59:39" pos:end="59:48">pki_applet</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:54">cert</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:63"><expr pos:start="61:13" pos:end="61:62"><name pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:22">pki_applet</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:39">cert_buffer_len</name></name> <operator pos:start="61:41" pos:end="61:41">=</operator> <name pos:start="61:43" pos:end="61:62"><name pos:start="61:43" pos:end="61:52">pki_applet</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:62">cert_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:54"><expr pos:start="65:9" pos:end="65:53"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:53"><name pos:start="65:16" pos:end="65:18">MIN</name><argument_list pos:start="65:19" pos:end="65:53">(<argument pos:start="65:20" pos:end="65:23"><expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">size</name></expr></argument>, <argument pos:start="65:26" pos:end="65:52"><expr pos:start="65:26" pos:end="65:52"><name pos:start="65:26" pos:end="65:52"><name pos:start="65:26" pos:end="65:35">pki_applet</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:52">cert_buffer_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:60"><expr pos:start="67:9" pos:end="67:59"><name pos:start="67:9" pos:end="67:12">next</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:59"><name pos:start="67:16" pos:end="67:18">MIN</name><argument_list pos:start="67:19" pos:end="67:59">(<argument pos:start="67:20" pos:end="67:22"><expr pos:start="67:20" pos:end="67:22"><literal type="number" pos:start="67:20" pos:end="67:22">255</literal></expr></argument>, <argument pos:start="67:25" pos:end="67:58"><expr pos:start="67:25" pos:end="67:58"><name pos:start="67:25" pos:end="67:51"><name pos:start="67:25" pos:end="67:34">pki_applet</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:51">cert_buffer_len</name></name> <operator pos:start="67:53" pos:end="67:53">-</operator> <name pos:start="67:55" pos:end="67:58">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="79:30"><expr pos:start="69:9" pos:end="79:29"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:17">response</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="79:29"><name pos:start="69:21" pos:end="69:44">vcard_response_new_bytes</name><argument_list pos:start="69:45" pos:end="79:29">(

                        <argument pos:start="71:25" pos:end="71:28"><expr pos:start="71:25" pos:end="71:28"><name pos:start="71:25" pos:end="71:28">card</name></expr></argument>, <argument pos:start="71:31" pos:end="71:53"><expr pos:start="71:31" pos:end="71:53"><name pos:start="71:31" pos:end="71:53"><name pos:start="71:31" pos:end="71:40">pki_applet</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:53">cert_buffer</name></name></expr></argument>, <argument pos:start="71:56" pos:end="71:59"><expr pos:start="71:56" pos:end="71:59"><name pos:start="71:56" pos:end="71:59">size</name></expr></argument>,

                        <argument pos:start="73:25" pos:end="73:34"><expr pos:start="73:25" pos:end="73:34"><name pos:start="73:25" pos:end="73:34"><name pos:start="73:25" pos:end="73:28">apdu</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:34">a_Le</name></name></expr></argument>, <argument pos:start="73:37" pos:end="77:45"><expr pos:start="73:37" pos:end="77:45"><ternary pos:start="73:37" pos:end="77:45"><condition pos:start="73:37" pos:end="73:42"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">next</name></expr> ?</condition><then pos:start="75:25" pos:end="75:52">

                        <expr pos:start="75:25" pos:end="75:52"><name pos:start="75:25" pos:end="75:52">VCARD7816_SW1_WARNING_CHANGE</name></expr> </then><else pos:start="75:54" pos:end="77:45">:

                        <expr pos:start="77:25" pos:end="77:45"><name pos:start="77:25" pos:end="77:45">VCARD7816_SW1_SUCCESS</name></expr></else></ternary></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:28"><expr pos:start="79:25" pos:end="79:28"><name pos:start="79:25" pos:end="79:28">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:40"><expr pos:start="81:9" pos:end="81:39"><name pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:18">pki_applet</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:31">cert_buffer</name></name> <operator pos:start="81:33" pos:end="81:34">+=</operator> <name pos:start="81:36" pos:end="81:39">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:35"><name pos:start="83:9" pos:end="83:18">pki_applet</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:35">cert_buffer_len</name></name> <operator pos:start="83:37" pos:end="83:38">-=</operator> <name pos:start="83:40" pos:end="83:43">size</name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:47">(<expr pos:start="85:13" pos:end="85:46"><operator pos:start="85:13" pos:end="85:13">(</operator><operator pos:start="85:14" pos:end="85:14">*</operator><name pos:start="85:15" pos:end="85:22">response</name> <operator pos:start="85:24" pos:end="85:25">==</operator> <name pos:start="85:27" pos:end="85:30">NULL</name><operator pos:start="85:31" pos:end="85:31">)</operator> <operator pos:start="85:33" pos:end="85:34">||</operator> <operator pos:start="85:36" pos:end="85:36">(</operator><name pos:start="85:37" pos:end="85:40">next</name> <operator pos:start="85:42" pos:end="85:43">==</operator> <literal type="number" pos:start="85:45" pos:end="85:45">0</literal><operator pos:start="85:46" pos:end="85:46">)</operator></expr>)</condition> <block pos:start="85:49" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:43">

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:35"><name pos:start="87:13" pos:end="87:22">pki_applet</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:35">cert_buffer</name></name> <operator pos:start="87:37" pos:end="87:37">=</operator> <name pos:start="87:39" pos:end="87:42">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:30">(<expr pos:start="91:13" pos:end="91:29"><operator pos:start="91:13" pos:end="91:13">*</operator><name pos:start="91:14" pos:end="91:21">response</name> <operator pos:start="91:23" pos:end="91:24">==</operator> <name pos:start="91:26" pos:end="91:29">NULL</name></expr>)</condition> <block pos:start="91:32" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:71">

            <expr_stmt pos:start="93:13" pos:end="95:71"><expr pos:start="93:13" pos:end="95:70"><operator pos:start="93:13" pos:end="93:13">*</operator><name pos:start="93:14" pos:end="93:21">response</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="95:70"><name pos:start="93:25" pos:end="93:43">vcard_make_response</name><argument_list pos:start="93:44" pos:end="95:70">(

                            <argument pos:start="95:29" pos:end="95:69"><expr pos:start="95:29" pos:end="95:69"><name pos:start="95:29" pos:end="95:69">VCARD7816_STATUS_EXC_ERROR_MEMORY_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <name pos:start="99:15" pos:end="99:24">VCARD_DONE</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:26">case <expr pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:25">CAC_SIGN_DECRYPT</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="105:28">(<expr pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:16">apdu</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:22">a_p2</name></name> <operator pos:start="105:24" pos:end="105:25">!=</operator> <literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr>)</condition> <block pos:start="105:30" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:18">

            <expr_stmt pos:start="107:13" pos:end="109:69"><expr pos:start="107:13" pos:end="109:68"><operator pos:start="107:13" pos:end="107:13">*</operator><name pos:start="107:14" pos:end="107:21">response</name> <operator pos:start="107:23" pos:end="107:23">=</operator> <call pos:start="107:25" pos:end="109:68"><name pos:start="107:25" pos:end="107:43">vcard_make_response</name><argument_list pos:start="107:44" pos:end="109:68">(

                             <argument pos:start="109:30" pos:end="109:67"><expr pos:start="109:30" pos:end="109:67"><name pos:start="109:30" pos:end="109:67">VCARD7816_STATUS_ERROR_P1_P2_INCORRECT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:26"><expr pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:12">size</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:25"><name pos:start="115:16" pos:end="115:19">apdu</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:25">a_Lc</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="121:68"><expr pos:start="119:9" pos:end="121:67"><name pos:start="119:9" pos:end="119:19">sign_buffer</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="121:67"><name pos:start="119:23" pos:end="119:31">g_realloc</name><argument_list pos:start="119:32" pos:end="121:67">(<argument pos:start="119:33" pos:end="119:55"><expr pos:start="119:33" pos:end="119:55"><name pos:start="119:33" pos:end="119:55"><name pos:start="119:33" pos:end="119:42">pki_applet</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:55">sign_buffer</name></name></expr></argument>,

                                <argument pos:start="121:33" pos:end="121:66"><expr pos:start="121:33" pos:end="121:66"><name pos:start="121:33" pos:end="121:59"><name pos:start="121:33" pos:end="121:42">pki_applet</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:59">sign_buffer_len</name></name> <operator pos:start="121:61" pos:end="121:61">+</operator> <name pos:start="121:63" pos:end="121:66">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:76"><expr pos:start="123:9" pos:end="123:75"><call pos:start="123:9" pos:end="123:75"><name pos:start="123:9" pos:end="123:14">memcpy</name><argument_list pos:start="123:15" pos:end="123:75">(<argument pos:start="123:16" pos:end="123:54"><expr pos:start="123:16" pos:end="123:54"><name pos:start="123:16" pos:end="123:26">sign_buffer</name><operator pos:start="123:27" pos:end="123:27">+</operator><name pos:start="123:28" pos:end="123:54"><name pos:start="123:28" pos:end="123:37">pki_applet</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:54">sign_buffer_len</name></name></expr></argument>, <argument pos:start="123:57" pos:end="123:68"><expr pos:start="123:57" pos:end="123:68"><name pos:start="123:57" pos:end="123:68"><name pos:start="123:57" pos:end="123:60">apdu</name><operator pos:start="123:61" pos:end="123:62">-&gt;</operator><name pos:start="123:63" pos:end="123:68">a_body</name></name></expr></argument>, <argument pos:start="123:71" pos:end="123:74"><expr pos:start="123:71" pos:end="123:74"><name pos:start="123:71" pos:end="123:74">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:44"><expr pos:start="125:9" pos:end="125:43"><name pos:start="125:9" pos:end="125:12">size</name> <operator pos:start="125:14" pos:end="125:15">+=</operator> <name pos:start="125:17" pos:end="125:43"><name pos:start="125:17" pos:end="125:26">pki_applet</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:43">sign_buffer_len</name></name></expr>;</expr_stmt>

        <switch pos:start="127:9" pos:end="183:9">switch <condition pos:start="127:16" pos:end="127:27">(<expr pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:20">apdu</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:26">a_p1</name></name></expr>)</condition> <block pos:start="127:29" pos:end="183:9">{<block_content pos:start="129:9" pos:end="181:18">

        <case pos:start="129:9" pos:end="129:19">case  <expr pos:start="129:15" pos:end="129:18"><literal type="number" pos:start="129:15" pos:end="129:18">0x80</literal></expr>:</case>

            <comment type="block" pos:start="131:13" pos:end="133:26">/* p1 == 0x80 means we haven't yet sent the whole buffer, wait for

             * the rest */</comment>

            <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:35"><name pos:start="135:13" pos:end="135:22">pki_applet</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:35">sign_buffer</name></name> <operator pos:start="135:37" pos:end="135:37">=</operator> <name pos:start="135:39" pos:end="135:49">sign_buffer</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:47"><expr pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:39"><name pos:start="137:13" pos:end="137:22">pki_applet</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:39">sign_buffer_len</name></name> <operator pos:start="137:41" pos:end="137:41">=</operator> <name pos:start="137:43" pos:end="137:46">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:70"><expr pos:start="139:13" pos:end="139:69"><operator pos:start="139:13" pos:end="139:13">*</operator><name pos:start="139:14" pos:end="139:21">response</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <call pos:start="139:25" pos:end="139:69"><name pos:start="139:25" pos:end="139:43">vcard_make_response</name><argument_list pos:start="139:44" pos:end="139:69">(<argument pos:start="139:45" pos:end="139:68"><expr pos:start="139:45" pos:end="139:68"><name pos:start="139:45" pos:end="139:68">VCARD7816_STATUS_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:18">case <expr pos:start="143:14" pos:end="143:17"><literal type="number" pos:start="143:14" pos:end="143:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="145:13" pos:end="147:36">/* we now have the whole buffer, do the operation, result will be

             * in the sign_buffer */</comment>

            <expr_stmt pos:start="149:13" pos:end="151:58"><expr pos:start="149:13" pos:end="151:57"><name pos:start="149:13" pos:end="149:18">status</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <call pos:start="149:22" pos:end="151:57"><name pos:start="149:22" pos:end="149:38">vcard_emul_rsa_op</name><argument_list pos:start="149:39" pos:end="151:57">(<argument pos:start="149:40" pos:end="149:43"><expr pos:start="149:40" pos:end="149:43"><name pos:start="149:40" pos:end="149:43">card</name></expr></argument>, <argument pos:start="149:46" pos:end="149:60"><expr pos:start="149:46" pos:end="149:60"><name pos:start="149:46" pos:end="149:60"><name pos:start="149:46" pos:end="149:55">pki_applet</name><operator pos:start="149:56" pos:end="149:57">-&gt;</operator><name pos:start="149:58" pos:end="149:60">key</name></name></expr></argument>,

                                       <argument pos:start="151:40" pos:end="151:50"><expr pos:start="151:40" pos:end="151:50"><name pos:start="151:40" pos:end="151:50">sign_buffer</name></expr></argument>, <argument pos:start="151:53" pos:end="151:56"><expr pos:start="151:53" pos:end="151:56"><name pos:start="151:53" pos:end="151:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="159:13"><if pos:start="153:13" pos:end="159:13">if <condition pos:start="153:16" pos:end="153:51">(<expr pos:start="153:17" pos:end="153:50"><name pos:start="153:17" pos:end="153:22">status</name> <operator pos:start="153:24" pos:end="153:25">!=</operator> <name pos:start="153:27" pos:end="153:50">VCARD7816_STATUS_SUCCESS</name></expr>)</condition> <block pos:start="153:53" pos:end="159:13">{<block_content pos:start="155:17" pos:end="157:22">

                <expr_stmt pos:start="155:17" pos:end="155:56"><expr pos:start="155:17" pos:end="155:55"><operator pos:start="155:17" pos:end="155:17">*</operator><name pos:start="155:18" pos:end="155:25">response</name> <operator pos:start="155:27" pos:end="155:27">=</operator> <call pos:start="155:29" pos:end="155:55"><name pos:start="155:29" pos:end="155:47">vcard_make_response</name><argument_list pos:start="155:48" pos:end="155:55">(<argument pos:start="155:49" pos:end="155:54"><expr pos:start="155:49" pos:end="155:54"><name pos:start="155:49" pos:end="155:54">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="157:17" pos:end="157:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="163:79"><expr pos:start="161:13" pos:end="163:78"><operator pos:start="161:13" pos:end="161:13">*</operator><name pos:start="161:14" pos:end="161:21">response</name> <operator pos:start="161:23" pos:end="161:23">=</operator> <call pos:start="161:25" pos:end="163:78"><name pos:start="161:25" pos:end="161:42">vcard_response_new</name><argument_list pos:start="161:43" pos:end="163:78">(<argument pos:start="161:44" pos:end="161:47"><expr pos:start="161:44" pos:end="161:47"><name pos:start="161:44" pos:end="161:47">card</name></expr></argument>, <argument pos:start="161:50" pos:end="161:60"><expr pos:start="161:50" pos:end="161:60"><name pos:start="161:50" pos:end="161:60">sign_buffer</name></expr></argument>, <argument pos:start="161:63" pos:end="161:66"><expr pos:start="161:63" pos:end="161:66"><name pos:start="161:63" pos:end="161:66">size</name></expr></argument>, <argument pos:start="161:69" pos:end="161:78"><expr pos:start="161:69" pos:end="161:78"><name pos:start="161:69" pos:end="161:78"><name pos:start="161:69" pos:end="161:72">apdu</name><operator pos:start="161:73" pos:end="161:74">-&gt;</operator><name pos:start="161:75" pos:end="161:78">a_Le</name></name></expr></argument>,

                                                     <argument pos:start="163:54" pos:end="163:77"><expr pos:start="163:54" pos:end="163:77"><name pos:start="163:54" pos:end="163:77">VCARD7816_STATUS_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="171:13"><if pos:start="165:13" pos:end="171:13">if <condition pos:start="165:16" pos:end="165:34">(<expr pos:start="165:17" pos:end="165:33"><operator pos:start="165:17" pos:end="165:17">*</operator><name pos:start="165:18" pos:end="165:25">response</name> <operator pos:start="165:27" pos:end="165:28">==</operator> <name pos:start="165:30" pos:end="165:33">NULL</name></expr>)</condition> <block pos:start="165:36" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:75">

                <expr_stmt pos:start="167:17" pos:end="169:75"><expr pos:start="167:17" pos:end="169:74"><operator pos:start="167:17" pos:end="167:17">*</operator><name pos:start="167:18" pos:end="167:25">response</name> <operator pos:start="167:27" pos:end="167:27">=</operator> <call pos:start="167:29" pos:end="169:74"><name pos:start="167:29" pos:end="167:47">vcard_make_response</name><argument_list pos:start="167:48" pos:end="169:74">(

                                <argument pos:start="169:33" pos:end="169:73"><expr pos:start="169:33" pos:end="169:73"><name pos:start="169:33" pos:end="169:73">VCARD7816_STATUS_EXC_ERROR_MEMORY_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <default pos:start="175:9" pos:end="175:16">default:</default>

           <expr_stmt pos:start="177:12" pos:end="179:72"><expr pos:start="177:12" pos:end="179:71"><operator pos:start="177:12" pos:end="177:12">*</operator><name pos:start="177:13" pos:end="177:20">response</name> <operator pos:start="177:22" pos:end="177:22">=</operator> <call pos:start="177:24" pos:end="179:71"><name pos:start="177:24" pos:end="177:42">vcard_make_response</name><argument_list pos:start="177:43" pos:end="179:71">(

                                <argument pos:start="179:33" pos:end="179:70"><expr pos:start="179:33" pos:end="179:70"><name pos:start="179:33" pos:end="179:70">VCARD7816_STATUS_ERROR_P1_P2_INCORRECT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="185:9" pos:end="185:28"><expr pos:start="185:9" pos:end="185:27"><call pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:14">g_free</name><argument_list pos:start="185:15" pos:end="185:27">(<argument pos:start="185:16" pos:end="185:26"><expr pos:start="185:16" pos:end="185:26"><name pos:start="185:16" pos:end="185:26">sign_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:39"><expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:18">pki_applet</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:31">sign_buffer</name></name> <operator pos:start="187:33" pos:end="187:33">=</operator> <name pos:start="187:35" pos:end="187:38">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:40"><expr pos:start="189:9" pos:end="189:39"><name pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:18">pki_applet</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:35">sign_buffer_len</name></name> <operator pos:start="189:37" pos:end="189:37">=</operator> <literal type="number" pos:start="189:39" pos:end="189:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:25"><expr pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <name pos:start="191:15" pos:end="191:24">VCARD_DONE</name></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:25">case <expr pos:start="195:10" pos:end="195:24"><name pos:start="195:10" pos:end="195:24">CAC_READ_BUFFER</name></expr>:</case>

        <comment type="block" pos:start="197:9" pos:end="197:68">/* new CAC call, go ahead and use the old version for now */</comment>

        <comment type="block" pos:start="199:9" pos:end="199:29">/* TODO: implement */</comment>

        <expr_stmt pos:start="201:9" pos:end="203:78"><expr pos:start="201:9" pos:end="203:77"><operator pos:start="201:9" pos:end="201:9">*</operator><name pos:start="201:10" pos:end="201:17">response</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <call pos:start="201:21" pos:end="203:77"><name pos:start="201:21" pos:end="201:39">vcard_make_response</name><argument_list pos:start="201:40" pos:end="203:77">(

                                <argument pos:start="203:33" pos:end="203:76"><expr pos:start="203:33" pos:end="203:76"><name pos:start="203:33" pos:end="203:76">VCARD7816_STATUS_ERROR_COMMAND_NOT_SUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:25"><expr pos:start="205:9" pos:end="205:24"><name pos:start="205:9" pos:end="205:11">ret</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <name pos:start="205:15" pos:end="205:24">VCARD_DONE</name></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    <default pos:start="209:5" pos:end="209:12">default:</default>

        <expr_stmt pos:start="211:9" pos:end="211:60"><expr pos:start="211:9" pos:end="211:59"><name pos:start="211:9" pos:end="211:11">ret</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:59"><name pos:start="211:15" pos:end="211:37">cac_common_process_apdu</name><argument_list pos:start="211:38" pos:end="211:59">(<argument pos:start="211:39" pos:end="211:42"><expr pos:start="211:39" pos:end="211:42"><name pos:start="211:39" pos:end="211:42">card</name></expr></argument>, <argument pos:start="211:45" pos:end="211:48"><expr pos:start="211:45" pos:end="211:48"><name pos:start="211:45" pos:end="211:48">apdu</name></expr></argument>, <argument pos:start="211:51" pos:end="211:58"><expr pos:start="211:51" pos:end="211:58"><name pos:start="211:51" pos:end="211:58">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="217:5" pos:end="217:15">return <expr pos:start="217:12" pos:end="217:14"><name pos:start="217:12" pos:end="217:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
