<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3439.c" pos:tabs="8"><function pos:start="1:1" pos:end="719:9"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">tcg_constant_folding</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">TCGContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="719:9">{<block_content pos:start="5:5" pos:end="717:18">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">oi</name></decl>, <decl pos:start="5:13" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:19">oi_next</name></decl>, <decl pos:start="5:22" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:29">nb_temps</name></decl>, <decl pos:start="5:32" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:41">nb_globals</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="15:60">/* Array VALS has an element for each temp.

       If this temp holds a constant then its value is kept in VALS' element.

       If this temp is a copy of other ones then the other copies are

       available through the doubly linked circular list. */</comment>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:12">nb_temps</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">nb_temps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:14">nb_globals</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:30">nb_globals</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><call pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:19">reset_all_temps</name><argument_list pos:start="23:20" pos:end="23:29">(<argument pos:start="23:21" pos:end="23:28"><expr pos:start="23:21" pos:end="23:28"><name pos:start="23:21" pos:end="23:28">nb_temps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="389:9">for <control pos:start="27:9" pos:end="27:57">(<init pos:start="27:10" pos:end="27:34"><expr pos:start="27:10" pos:end="27:33"><name pos:start="27:10" pos:end="27:11">oi</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:33"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:33">gen_first_op_idx</name></name></expr>;</init> <condition pos:start="27:36" pos:end="27:43"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:37">oi</name> <operator pos:start="27:39" pos:end="27:40">&gt;=</operator> <literal type="number" pos:start="27:42" pos:end="27:42">0</literal></expr>;</condition> <incr pos:start="27:45" pos:end="27:56"><expr pos:start="27:45" pos:end="27:56"><name pos:start="27:45" pos:end="27:46">oi</name> <operator pos:start="27:48" pos:end="27:48">=</operator> <name pos:start="27:50" pos:end="27:56">oi_next</name></expr></incr>)</control> <block pos:start="27:59" pos:end="389:9">{<block_content pos:start="29:9" pos:end="387:18">

        <decl_stmt pos:start="29:9" pos:end="29:50"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:24">tcg_target_ulong</name></type> <name pos:start="29:26" pos:end="29:29">mask</name></decl>, <decl pos:start="29:32" pos:end="29:39"><type ref="prev" pos:start="29:9" pos:end="29:24"/><name pos:start="29:32" pos:end="29:39">partmask</name></decl>, <decl pos:start="29:42" pos:end="29:49"><type ref="prev" pos:start="29:9" pos:end="29:24"/><name pos:start="29:42" pos:end="29:49">affected</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:34"><decl pos:start="31:9" pos:end="31:20"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:20">nb_oargs</name></decl>, <decl pos:start="31:23" pos:end="31:30"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:23" pos:end="31:30">nb_iargs</name></decl>, <decl pos:start="31:33" pos:end="31:33"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:33" pos:end="31:33">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:19"><decl pos:start="33:9" pos:end="33:18"><type pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">TCGArg</name></type> <name pos:start="33:16" pos:end="33:18">tmp</name></decl>;</decl_stmt>



        <decl_stmt pos:start="37:9" pos:end="37:46"><decl pos:start="37:9" pos:end="37:45"><type pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:13">TCGOp</name> <modifier pos:start="37:15" pos:end="37:15">*</modifier> <specifier pos:start="37:17" pos:end="37:21">const</specifier></type> <name pos:start="37:23" pos:end="37:24">op</name> <init pos:start="37:26" pos:end="37:45">= <expr pos:start="37:28" pos:end="37:45"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:45"><name pos:start="37:29" pos:end="37:29">s</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:41">gen_op_buf</name><index pos:start="37:42" pos:end="37:45">[<expr pos:start="37:43" pos:end="37:44"><name pos:start="37:43" pos:end="37:44">oi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:60"><decl pos:start="39:9" pos:end="39:59"><type pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:14">TCGArg</name> <modifier pos:start="39:16" pos:end="39:16">*</modifier> <specifier pos:start="39:18" pos:end="39:22">const</specifier></type> <name pos:start="39:24" pos:end="39:27">args</name> <init pos:start="39:29" pos:end="39:59">= <expr pos:start="39:31" pos:end="39:59"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:59"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:49">gen_opparam_buf</name><index pos:start="39:50" pos:end="39:59">[<expr pos:start="39:51" pos:end="39:58"><name pos:start="39:51" pos:end="39:58"><name pos:start="39:51" pos:end="39:52">op</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:58">args</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:32"><decl pos:start="41:9" pos:end="41:31"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">TCGOpcode</name></type> <name pos:start="41:19" pos:end="41:21">opc</name> <init pos:start="41:23" pos:end="41:31">= <expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:26">op</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">opc</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:48"><decl pos:start="43:9" pos:end="43:47"><type pos:start="43:9" pos:end="43:24"><specifier pos:start="43:9" pos:end="43:13">const</specifier> <name pos:start="43:15" pos:end="43:22">TCGOpDef</name> <modifier pos:start="43:24" pos:end="43:24">*</modifier></type><name pos:start="43:25" pos:end="43:27">def</name> <init pos:start="43:29" pos:end="43:47">= <expr pos:start="43:31" pos:end="43:47"><operator pos:start="43:31" pos:end="43:31">&amp;</operator><name pos:start="43:32" pos:end="43:47"><name pos:start="43:32" pos:end="43:42">tcg_op_defs</name><index pos:start="43:43" pos:end="43:47">[<expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:46">opc</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:15">oi_next</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:26"><name pos:start="47:19" pos:end="47:20">op</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:26">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:33">(<expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:15">opc</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <name pos:start="49:20" pos:end="49:32">INDEX_op_call</name></expr>)</condition> <block pos:start="49:35" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:33">

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:20">nb_oargs</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:32"><name pos:start="51:24" pos:end="51:25">op</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">callo</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:20">nb_iargs</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:25">op</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:32">calli</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="61:9">else <block pos:start="55:16" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:37">

            <expr_stmt pos:start="57:13" pos:end="57:37"><expr pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:20">nb_oargs</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:26">def</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:36">nb_oargs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:20">nb_iargs</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:26">def</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:36">nb_iargs</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="65:9" pos:end="65:33">/* Do copy propagation */</comment>

        <for pos:start="67:9" pos:end="75:9">for <control pos:start="67:13" pos:end="67:56">(<init pos:start="67:14" pos:end="67:26"><expr pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:25">nb_oargs</name></expr>;</init> <condition pos:start="67:28" pos:end="67:51"><expr pos:start="67:28" pos:end="67:50"><name pos:start="67:28" pos:end="67:28">i</name> <operator pos:start="67:30" pos:end="67:30">&lt;</operator> <name pos:start="67:32" pos:end="67:39">nb_oargs</name> <operator pos:start="67:41" pos:end="67:41">+</operator> <name pos:start="67:43" pos:end="67:50">nb_iargs</name></expr>;</condition> <incr pos:start="67:53" pos:end="67:55"><expr pos:start="67:53" pos:end="67:55"><name pos:start="67:53" pos:end="67:53">i</name><operator pos:start="67:54" pos:end="67:55">++</operator></expr></incr>)</control> <block pos:start="67:58" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:13">

            <if_stmt pos:start="69:13" pos:end="73:13"><if pos:start="69:13" pos:end="73:13">if <condition pos:start="69:16" pos:end="69:54">(<expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:21">temps</name><index pos:start="69:22" pos:end="69:30">[<expr pos:start="69:23" pos:end="69:29"><name pos:start="69:23" pos:end="69:29"><name pos:start="69:23" pos:end="69:26">args</name><index pos:start="69:27" pos:end="69:29">[<expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="69:31" pos:end="69:31">.</operator><name pos:start="69:32" pos:end="69:36">state</name> <operator pos:start="69:38" pos:end="69:39">==</operator> <name pos:start="69:41" pos:end="69:53">TCG_TEMP_COPY</name></expr>)</condition> <block pos:start="69:56" pos:end="73:13">{<block_content pos:start="71:17" pos:end="71:55">

                <expr_stmt pos:start="71:17" pos:end="71:55"><expr pos:start="71:17" pos:end="71:54"><name pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:20">args</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><name pos:start="71:22" pos:end="71:22">i</name></expr>]</index></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:54"><name pos:start="71:27" pos:end="71:42">find_better_copy</name><argument_list pos:start="71:43" pos:end="71:54">(<argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><name pos:start="71:44" pos:end="71:44">s</name></expr></argument>, <argument pos:start="71:47" pos:end="71:53"><expr pos:start="71:47" pos:end="71:53"><name pos:start="71:47" pos:end="71:53"><name pos:start="71:47" pos:end="71:50">args</name><index pos:start="71:51" pos:end="71:53">[<expr pos:start="71:52" pos:end="71:52"><name pos:start="71:52" pos:end="71:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="79:9" pos:end="79:70">/* For commutative operations make constant second argument */</comment>

        <switch pos:start="81:9" pos:end="189:9">switch <condition pos:start="81:16" pos:end="81:20">(<expr pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">opc</name></expr>)</condition> <block pos:start="81:22" pos:end="189:9">{<block_content pos:start="83:9" pos:end="187:18">

        <expr_stmt pos:start="83:9" pos:end="103:58"><expr pos:start="83:9" pos:end="103:57"><call pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:21">CASE_OP_32_64</name><argument_list pos:start="83:22" pos:end="83:26">(<argument pos:start="83:23" pos:end="83:25"><expr pos:start="83:23" pos:end="83:25"><name pos:start="83:23" pos:end="83:25">add</name></expr></argument>)</argument_list></call><operator pos:start="83:27" pos:end="83:27">:</operator>

        <call pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:21">CASE_OP_32_64</name><argument_list pos:start="85:22" pos:end="85:26">(<argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="85:27" pos:end="85:27">:</operator>

        <call pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:21">CASE_OP_32_64</name><argument_list pos:start="87:22" pos:end="87:26">(<argument pos:start="87:23" pos:end="87:25"><expr pos:start="87:23" pos:end="87:25"><name pos:start="87:23" pos:end="87:25">and</name></expr></argument>)</argument_list></call><operator pos:start="87:27" pos:end="87:27">:</operator>

        <call pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:21">CASE_OP_32_64</name><argument_list pos:start="89:22" pos:end="89:25">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">or</name></expr></argument>)</argument_list></call><operator pos:start="89:26" pos:end="89:26">:</operator>

        <call pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:21">CASE_OP_32_64</name><argument_list pos:start="91:22" pos:end="91:26">(<argument pos:start="91:23" pos:end="91:25"><expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="91:27" pos:end="91:27">:</operator>

        <call pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:21">CASE_OP_32_64</name><argument_list pos:start="93:22" pos:end="93:26">(<argument pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><name pos:start="93:23" pos:end="93:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="93:27" pos:end="93:27">:</operator>

        <call pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:21">CASE_OP_32_64</name><argument_list pos:start="95:22" pos:end="95:27">(<argument pos:start="95:23" pos:end="95:26"><expr pos:start="95:23" pos:end="95:26"><name pos:start="95:23" pos:end="95:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="95:28" pos:end="95:28">:</operator>

        <call pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:21">CASE_OP_32_64</name><argument_list pos:start="97:22" pos:end="97:26">(<argument pos:start="97:23" pos:end="97:25"><expr pos:start="97:23" pos:end="97:25"><name pos:start="97:23" pos:end="97:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="97:27" pos:end="97:27">:</operator>

        <call pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:21">CASE_OP_32_64</name><argument_list pos:start="99:22" pos:end="99:28">(<argument pos:start="99:23" pos:end="99:27"><expr pos:start="99:23" pos:end="99:27"><name pos:start="99:23" pos:end="99:27">muluh</name></expr></argument>)</argument_list></call><operator pos:start="99:29" pos:end="99:29">:</operator>

        <call pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:21">CASE_OP_32_64</name><argument_list pos:start="101:22" pos:end="101:28">(<argument pos:start="101:23" pos:end="101:27"><expr pos:start="101:23" pos:end="101:27"><name pos:start="101:23" pos:end="101:27">mulsh</name></expr></argument>)</argument_list></call><operator pos:start="101:29" pos:end="101:29">:</operator>

            <call pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:28">swap_commutative</name><argument_list pos:start="103:29" pos:end="103:57">(<argument pos:start="103:30" pos:end="103:36"><expr pos:start="103:30" pos:end="103:36"><name pos:start="103:30" pos:end="103:36"><name pos:start="103:30" pos:end="103:33">args</name><index pos:start="103:34" pos:end="103:36">[<expr pos:start="103:35" pos:end="103:35"><literal type="number" pos:start="103:35" pos:end="103:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:39" pos:end="103:46"><expr pos:start="103:39" pos:end="103:46"><operator pos:start="103:39" pos:end="103:39">&amp;</operator><name pos:start="103:40" pos:end="103:46"><name pos:start="103:40" pos:end="103:43">args</name><index pos:start="103:44" pos:end="103:46">[<expr pos:start="103:45" pos:end="103:45"><literal type="number" pos:start="103:45" pos:end="103:45">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:49" pos:end="103:56"><expr pos:start="103:49" pos:end="103:56"><operator pos:start="103:49" pos:end="103:49">&amp;</operator><name pos:start="103:50" pos:end="103:56"><name pos:start="103:50" pos:end="103:53">args</name><index pos:start="103:54" pos:end="103:56">[<expr pos:start="103:55" pos:end="103:55"><literal type="number" pos:start="103:55" pos:end="103:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:21">CASE_OP_32_64</name><argument_list pos:start="107:22" pos:end="107:29">(<argument pos:start="107:23" pos:end="107:28"><expr pos:start="107:23" pos:end="107:28"><name pos:start="107:23" pos:end="107:28">brcond</name></expr></argument>)</argument_list></call><operator pos:start="107:30" pos:end="107:30">:</operator></expr></expr_stmt>

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:57">(<expr pos:start="109:17" pos:end="109:56"><call pos:start="109:17" pos:end="109:56"><name pos:start="109:17" pos:end="109:32">swap_commutative</name><argument_list pos:start="109:33" pos:end="109:56">(<argument pos:start="109:34" pos:end="109:35"><expr pos:start="109:34" pos:end="109:35"><operator pos:start="109:34" pos:end="109:34">-</operator><literal type="number" pos:start="109:35" pos:end="109:35">1</literal></expr></argument>, <argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><operator pos:start="109:38" pos:end="109:38">&amp;</operator><name pos:start="109:39" pos:end="109:45"><name pos:start="109:39" pos:end="109:42">args</name><index pos:start="109:43" pos:end="109:45">[<expr pos:start="109:44" pos:end="109:44"><literal type="number" pos:start="109:44" pos:end="109:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:48" pos:end="109:55"><expr pos:start="109:48" pos:end="109:55"><operator pos:start="109:48" pos:end="109:48">&amp;</operator><name pos:start="109:49" pos:end="109:55"><name pos:start="109:49" pos:end="109:52">args</name><index pos:start="109:53" pos:end="109:55">[<expr pos:start="109:54" pos:end="109:54"><literal type="number" pos:start="109:54" pos:end="109:54">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:59" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:49">

                <expr_stmt pos:start="111:17" pos:end="111:49"><expr pos:start="111:17" pos:end="111:48"><name pos:start="111:17" pos:end="111:23"><name pos:start="111:17" pos:end="111:20">args</name><index pos:start="111:21" pos:end="111:23">[<expr pos:start="111:22" pos:end="111:22"><literal type="number" pos:start="111:22" pos:end="111:22">2</literal></expr>]</index></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <call pos:start="111:27" pos:end="111:48"><name pos:start="111:27" pos:end="111:39">tcg_swap_cond</name><argument_list pos:start="111:40" pos:end="111:48">(<argument pos:start="111:41" pos:end="111:47"><expr pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:44">args</name><index pos:start="111:45" pos:end="111:47">[<expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:31"><call pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:21">CASE_OP_32_64</name><argument_list pos:start="117:22" pos:end="117:30">(<argument pos:start="117:23" pos:end="117:29"><expr pos:start="117:23" pos:end="117:29"><name pos:start="117:23" pos:end="117:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="117:31" pos:end="117:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="119:13" pos:end="123:13"><if pos:start="119:13" pos:end="123:13">if <condition pos:start="119:16" pos:end="119:62">(<expr pos:start="119:17" pos:end="119:61"><call pos:start="119:17" pos:end="119:61"><name pos:start="119:17" pos:end="119:32">swap_commutative</name><argument_list pos:start="119:33" pos:end="119:61">(<argument pos:start="119:34" pos:end="119:40"><expr pos:start="119:34" pos:end="119:40"><name pos:start="119:34" pos:end="119:40"><name pos:start="119:34" pos:end="119:37">args</name><index pos:start="119:38" pos:end="119:40">[<expr pos:start="119:39" pos:end="119:39"><literal type="number" pos:start="119:39" pos:end="119:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:43" pos:end="119:50"><expr pos:start="119:43" pos:end="119:50"><operator pos:start="119:43" pos:end="119:43">&amp;</operator><name pos:start="119:44" pos:end="119:50"><name pos:start="119:44" pos:end="119:47">args</name><index pos:start="119:48" pos:end="119:50">[<expr pos:start="119:49" pos:end="119:49"><literal type="number" pos:start="119:49" pos:end="119:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:53" pos:end="119:60"><expr pos:start="119:53" pos:end="119:60"><operator pos:start="119:53" pos:end="119:53">&amp;</operator><name pos:start="119:54" pos:end="119:60"><name pos:start="119:54" pos:end="119:57">args</name><index pos:start="119:58" pos:end="119:60">[<expr pos:start="119:59" pos:end="119:59"><literal type="number" pos:start="119:59" pos:end="119:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:64" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:49">

                <expr_stmt pos:start="121:17" pos:end="121:49"><expr pos:start="121:17" pos:end="121:48"><name pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:20">args</name><index pos:start="121:21" pos:end="121:23">[<expr pos:start="121:22" pos:end="121:22"><literal type="number" pos:start="121:22" pos:end="121:22">3</literal></expr>]</index></name> <operator pos:start="121:25" pos:end="121:25">=</operator> <call pos:start="121:27" pos:end="121:48"><name pos:start="121:27" pos:end="121:39">tcg_swap_cond</name><argument_list pos:start="121:40" pos:end="121:48">(<argument pos:start="121:41" pos:end="121:47"><expr pos:start="121:41" pos:end="121:47"><name pos:start="121:41" pos:end="121:47"><name pos:start="121:41" pos:end="121:44">args</name><index pos:start="121:45" pos:end="121:47">[<expr pos:start="121:46" pos:end="121:46"><literal type="number" pos:start="121:46" pos:end="121:46">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <expr_stmt pos:start="127:9" pos:end="127:31"><expr pos:start="127:9" pos:end="127:31"><call pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:21">CASE_OP_32_64</name><argument_list pos:start="127:22" pos:end="127:30">(<argument pos:start="127:23" pos:end="127:29"><expr pos:start="127:23" pos:end="127:29"><name pos:start="127:23" pos:end="127:29">movcond</name></expr></argument>)</argument_list></call><operator pos:start="127:31" pos:end="127:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="129:13" pos:end="133:13"><if pos:start="129:13" pos:end="133:13">if <condition pos:start="129:16" pos:end="129:57">(<expr pos:start="129:17" pos:end="129:56"><call pos:start="129:17" pos:end="129:56"><name pos:start="129:17" pos:end="129:32">swap_commutative</name><argument_list pos:start="129:33" pos:end="129:56">(<argument pos:start="129:34" pos:end="129:35"><expr pos:start="129:34" pos:end="129:35"><operator pos:start="129:34" pos:end="129:34">-</operator><literal type="number" pos:start="129:35" pos:end="129:35">1</literal></expr></argument>, <argument pos:start="129:38" pos:end="129:45"><expr pos:start="129:38" pos:end="129:45"><operator pos:start="129:38" pos:end="129:38">&amp;</operator><name pos:start="129:39" pos:end="129:45"><name pos:start="129:39" pos:end="129:42">args</name><index pos:start="129:43" pos:end="129:45">[<expr pos:start="129:44" pos:end="129:44"><literal type="number" pos:start="129:44" pos:end="129:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="129:48" pos:end="129:55"><expr pos:start="129:48" pos:end="129:55"><operator pos:start="129:48" pos:end="129:48">&amp;</operator><name pos:start="129:49" pos:end="129:55"><name pos:start="129:49" pos:end="129:52">args</name><index pos:start="129:53" pos:end="129:55">[<expr pos:start="129:54" pos:end="129:54"><literal type="number" pos:start="129:54" pos:end="129:54">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:59" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:49">

                <expr_stmt pos:start="131:17" pos:end="131:49"><expr pos:start="131:17" pos:end="131:48"><name pos:start="131:17" pos:end="131:23"><name pos:start="131:17" pos:end="131:20">args</name><index pos:start="131:21" pos:end="131:23">[<expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">5</literal></expr>]</index></name> <operator pos:start="131:25" pos:end="131:25">=</operator> <call pos:start="131:27" pos:end="131:48"><name pos:start="131:27" pos:end="131:39">tcg_swap_cond</name><argument_list pos:start="131:40" pos:end="131:48">(<argument pos:start="131:41" pos:end="131:47"><expr pos:start="131:41" pos:end="131:47"><name pos:start="131:41" pos:end="131:47"><name pos:start="131:41" pos:end="131:44">args</name><index pos:start="131:45" pos:end="131:47">[<expr pos:start="131:46" pos:end="131:46"><literal type="number" pos:start="131:46" pos:end="131:46">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="135:13" pos:end="139:46">/* For movcond, we canonicalize the "false" input reg to match

               the destination reg so that the tcg backend can implement

               a "move if true" operation.  */</comment>

            <if_stmt pos:start="141:13" pos:end="145:13"><if pos:start="141:13" pos:end="145:13">if <condition pos:start="141:16" pos:end="141:62">(<expr pos:start="141:17" pos:end="141:61"><call pos:start="141:17" pos:end="141:61"><name pos:start="141:17" pos:end="141:32">swap_commutative</name><argument_list pos:start="141:33" pos:end="141:61">(<argument pos:start="141:34" pos:end="141:40"><expr pos:start="141:34" pos:end="141:40"><name pos:start="141:34" pos:end="141:40"><name pos:start="141:34" pos:end="141:37">args</name><index pos:start="141:38" pos:end="141:40">[<expr pos:start="141:39" pos:end="141:39"><literal type="number" pos:start="141:39" pos:end="141:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:43" pos:end="141:50"><expr pos:start="141:43" pos:end="141:50"><operator pos:start="141:43" pos:end="141:43">&amp;</operator><name pos:start="141:44" pos:end="141:50"><name pos:start="141:44" pos:end="141:47">args</name><index pos:start="141:48" pos:end="141:50">[<expr pos:start="141:49" pos:end="141:49"><literal type="number" pos:start="141:49" pos:end="141:49">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:53" pos:end="141:60"><expr pos:start="141:53" pos:end="141:60"><operator pos:start="141:53" pos:end="141:53">&amp;</operator><name pos:start="141:54" pos:end="141:60"><name pos:start="141:54" pos:end="141:57">args</name><index pos:start="141:58" pos:end="141:60">[<expr pos:start="141:59" pos:end="141:59"><literal type="number" pos:start="141:59" pos:end="141:59">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:64" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:51">

                <expr_stmt pos:start="143:17" pos:end="143:51"><expr pos:start="143:17" pos:end="143:50"><name pos:start="143:17" pos:end="143:23"><name pos:start="143:17" pos:end="143:20">args</name><index pos:start="143:21" pos:end="143:23">[<expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">5</literal></expr>]</index></name> <operator pos:start="143:25" pos:end="143:25">=</operator> <call pos:start="143:27" pos:end="143:50"><name pos:start="143:27" pos:end="143:41">tcg_invert_cond</name><argument_list pos:start="143:42" pos:end="143:50">(<argument pos:start="143:43" pos:end="143:49"><expr pos:start="143:43" pos:end="143:49"><name pos:start="143:43" pos:end="143:49"><name pos:start="143:43" pos:end="143:46">args</name><index pos:start="143:47" pos:end="143:49">[<expr pos:start="143:48" pos:end="143:48"><literal type="number" pos:start="143:48" pos:end="143:48">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <expr_stmt pos:start="149:9" pos:end="151:58"><expr pos:start="149:9" pos:end="151:57"><call pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:21">CASE_OP_32_64</name><argument_list pos:start="149:22" pos:end="149:27">(<argument pos:start="149:23" pos:end="149:26"><expr pos:start="149:23" pos:end="149:26"><name pos:start="149:23" pos:end="149:26">add2</name></expr></argument>)</argument_list></call><operator pos:start="149:28" pos:end="149:28">:</operator>

            <call pos:start="151:13" pos:end="151:57"><name pos:start="151:13" pos:end="151:28">swap_commutative</name><argument_list pos:start="151:29" pos:end="151:57">(<argument pos:start="151:30" pos:end="151:36"><expr pos:start="151:30" pos:end="151:36"><name pos:start="151:30" pos:end="151:36"><name pos:start="151:30" pos:end="151:33">args</name><index pos:start="151:34" pos:end="151:36">[<expr pos:start="151:35" pos:end="151:35"><literal type="number" pos:start="151:35" pos:end="151:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:39" pos:end="151:46"><expr pos:start="151:39" pos:end="151:46"><operator pos:start="151:39" pos:end="151:39">&amp;</operator><name pos:start="151:40" pos:end="151:46"><name pos:start="151:40" pos:end="151:43">args</name><index pos:start="151:44" pos:end="151:46">[<expr pos:start="151:45" pos:end="151:45"><literal type="number" pos:start="151:45" pos:end="151:45">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:49" pos:end="151:56"><expr pos:start="151:49" pos:end="151:56"><operator pos:start="151:49" pos:end="151:49">&amp;</operator><name pos:start="151:50" pos:end="151:56"><name pos:start="151:50" pos:end="151:53">args</name><index pos:start="151:54" pos:end="151:56">[<expr pos:start="151:55" pos:end="151:55"><literal type="number" pos:start="151:55" pos:end="151:55">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:58"><expr pos:start="153:13" pos:end="153:57"><call pos:start="153:13" pos:end="153:57"><name pos:start="153:13" pos:end="153:28">swap_commutative</name><argument_list pos:start="153:29" pos:end="153:57">(<argument pos:start="153:30" pos:end="153:36"><expr pos:start="153:30" pos:end="153:36"><name pos:start="153:30" pos:end="153:36"><name pos:start="153:30" pos:end="153:33">args</name><index pos:start="153:34" pos:end="153:36">[<expr pos:start="153:35" pos:end="153:35"><literal type="number" pos:start="153:35" pos:end="153:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:39" pos:end="153:46"><expr pos:start="153:39" pos:end="153:46"><operator pos:start="153:39" pos:end="153:39">&amp;</operator><name pos:start="153:40" pos:end="153:46"><name pos:start="153:40" pos:end="153:43">args</name><index pos:start="153:44" pos:end="153:46">[<expr pos:start="153:45" pos:end="153:45"><literal type="number" pos:start="153:45" pos:end="153:45">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:49" pos:end="153:56"><expr pos:start="153:49" pos:end="153:56"><operator pos:start="153:49" pos:end="153:49">&amp;</operator><name pos:start="153:50" pos:end="153:56"><name pos:start="153:50" pos:end="153:53">args</name><index pos:start="153:54" pos:end="153:56">[<expr pos:start="153:55" pos:end="153:55"><literal type="number" pos:start="153:55" pos:end="153:55">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <expr_stmt pos:start="157:9" pos:end="161:58"><expr pos:start="157:9" pos:end="161:57"><call pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:21">CASE_OP_32_64</name><argument_list pos:start="157:22" pos:end="157:28">(<argument pos:start="157:23" pos:end="157:27"><expr pos:start="157:23" pos:end="157:27"><name pos:start="157:23" pos:end="157:27">mulu2</name></expr></argument>)</argument_list></call><operator pos:start="157:29" pos:end="157:29">:</operator>

        <call pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:21">CASE_OP_32_64</name><argument_list pos:start="159:22" pos:end="159:28">(<argument pos:start="159:23" pos:end="159:27"><expr pos:start="159:23" pos:end="159:27"><name pos:start="159:23" pos:end="159:27">muls2</name></expr></argument>)</argument_list></call><operator pos:start="159:29" pos:end="159:29">:</operator>

            <call pos:start="161:13" pos:end="161:57"><name pos:start="161:13" pos:end="161:28">swap_commutative</name><argument_list pos:start="161:29" pos:end="161:57">(<argument pos:start="161:30" pos:end="161:36"><expr pos:start="161:30" pos:end="161:36"><name pos:start="161:30" pos:end="161:36"><name pos:start="161:30" pos:end="161:33">args</name><index pos:start="161:34" pos:end="161:36">[<expr pos:start="161:35" pos:end="161:35"><literal type="number" pos:start="161:35" pos:end="161:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:39" pos:end="161:46"><expr pos:start="161:39" pos:end="161:46"><operator pos:start="161:39" pos:end="161:39">&amp;</operator><name pos:start="161:40" pos:end="161:46"><name pos:start="161:40" pos:end="161:43">args</name><index pos:start="161:44" pos:end="161:46">[<expr pos:start="161:45" pos:end="161:45"><literal type="number" pos:start="161:45" pos:end="161:45">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:49" pos:end="161:56"><expr pos:start="161:49" pos:end="161:56"><operator pos:start="161:49" pos:end="161:49">&amp;</operator><name pos:start="161:50" pos:end="161:56"><name pos:start="161:50" pos:end="161:53">args</name><index pos:start="161:54" pos:end="161:56">[<expr pos:start="161:55" pos:end="161:55"><literal type="number" pos:start="161:55" pos:end="161:55">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:34">case <expr pos:start="165:14" pos:end="165:33"><name pos:start="165:14" pos:end="165:33">INDEX_op_brcond2_i32</name></expr>:</case>

            <if_stmt pos:start="167:13" pos:end="171:13"><if pos:start="167:13" pos:end="171:13">if <condition pos:start="167:16" pos:end="167:54">(<expr pos:start="167:17" pos:end="167:53"><call pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:33">swap_commutative2</name><argument_list pos:start="167:34" pos:end="167:53">(<argument pos:start="167:35" pos:end="167:42"><expr pos:start="167:35" pos:end="167:42"><operator pos:start="167:35" pos:end="167:35">&amp;</operator><name pos:start="167:36" pos:end="167:42"><name pos:start="167:36" pos:end="167:39">args</name><index pos:start="167:40" pos:end="167:42">[<expr pos:start="167:41" pos:end="167:41"><literal type="number" pos:start="167:41" pos:end="167:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="167:45" pos:end="167:52"><expr pos:start="167:45" pos:end="167:52"><operator pos:start="167:45" pos:end="167:45">&amp;</operator><name pos:start="167:46" pos:end="167:52"><name pos:start="167:46" pos:end="167:49">args</name><index pos:start="167:50" pos:end="167:52">[<expr pos:start="167:51" pos:end="167:51"><literal type="number" pos:start="167:51" pos:end="167:51">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:56" pos:end="171:13">{<block_content pos:start="169:17" pos:end="169:49">

                <expr_stmt pos:start="169:17" pos:end="169:49"><expr pos:start="169:17" pos:end="169:48"><name pos:start="169:17" pos:end="169:23"><name pos:start="169:17" pos:end="169:20">args</name><index pos:start="169:21" pos:end="169:23">[<expr pos:start="169:22" pos:end="169:22"><literal type="number" pos:start="169:22" pos:end="169:22">4</literal></expr>]</index></name> <operator pos:start="169:25" pos:end="169:25">=</operator> <call pos:start="169:27" pos:end="169:48"><name pos:start="169:27" pos:end="169:39">tcg_swap_cond</name><argument_list pos:start="169:40" pos:end="169:48">(<argument pos:start="169:41" pos:end="169:47"><expr pos:start="169:41" pos:end="169:47"><name pos:start="169:41" pos:end="169:47"><name pos:start="169:41" pos:end="169:44">args</name><index pos:start="169:45" pos:end="169:47">[<expr pos:start="169:46" pos:end="169:46"><literal type="number" pos:start="169:46" pos:end="169:46">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:35">case <expr pos:start="175:14" pos:end="175:34"><name pos:start="175:14" pos:end="175:34">INDEX_op_setcond2_i32</name></expr>:</case>

            <if_stmt pos:start="177:13" pos:end="181:13"><if pos:start="177:13" pos:end="181:13">if <condition pos:start="177:16" pos:end="177:54">(<expr pos:start="177:17" pos:end="177:53"><call pos:start="177:17" pos:end="177:53"><name pos:start="177:17" pos:end="177:33">swap_commutative2</name><argument_list pos:start="177:34" pos:end="177:53">(<argument pos:start="177:35" pos:end="177:42"><expr pos:start="177:35" pos:end="177:42"><operator pos:start="177:35" pos:end="177:35">&amp;</operator><name pos:start="177:36" pos:end="177:42"><name pos:start="177:36" pos:end="177:39">args</name><index pos:start="177:40" pos:end="177:42">[<expr pos:start="177:41" pos:end="177:41"><literal type="number" pos:start="177:41" pos:end="177:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:45" pos:end="177:52"><expr pos:start="177:45" pos:end="177:52"><operator pos:start="177:45" pos:end="177:45">&amp;</operator><name pos:start="177:46" pos:end="177:52"><name pos:start="177:46" pos:end="177:49">args</name><index pos:start="177:50" pos:end="177:52">[<expr pos:start="177:51" pos:end="177:51"><literal type="number" pos:start="177:51" pos:end="177:51">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:56" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:49">

                <expr_stmt pos:start="179:17" pos:end="179:49"><expr pos:start="179:17" pos:end="179:48"><name pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:20">args</name><index pos:start="179:21" pos:end="179:23">[<expr pos:start="179:22" pos:end="179:22"><literal type="number" pos:start="179:22" pos:end="179:22">5</literal></expr>]</index></name> <operator pos:start="179:25" pos:end="179:25">=</operator> <call pos:start="179:27" pos:end="179:48"><name pos:start="179:27" pos:end="179:39">tcg_swap_cond</name><argument_list pos:start="179:40" pos:end="179:48">(<argument pos:start="179:41" pos:end="179:47"><expr pos:start="179:41" pos:end="179:47"><name pos:start="179:41" pos:end="179:47"><name pos:start="179:41" pos:end="179:44">args</name><index pos:start="179:45" pos:end="179:47">[<expr pos:start="179:46" pos:end="179:46"><literal type="number" pos:start="179:46" pos:end="179:46">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <default pos:start="185:9" pos:end="185:16">default:</default>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="193:9" pos:end="195:50">/* Simplify expressions for "shift/rot r, 0, a =&gt; movi r, 0",

           and "sub r, 0, a =&gt; neg r, a" case.  */</comment>

        <switch pos:start="197:9" pos:end="273:13">switch <condition pos:start="197:16" pos:end="197:20">(<expr pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:19">opc</name></expr>)</condition> <block pos:start="197:22" pos:end="273:13">{<block_content pos:start="199:9" pos:end="271:17">

        <expr_stmt pos:start="199:9" pos:end="207:28"><expr pos:start="199:9" pos:end="207:28"><call pos:start="199:9" pos:end="199:26"><name pos:start="199:9" pos:end="199:21">CASE_OP_32_64</name><argument_list pos:start="199:22" pos:end="199:26">(<argument pos:start="199:23" pos:end="199:25"><expr pos:start="199:23" pos:end="199:25"><name pos:start="199:23" pos:end="199:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="199:27" pos:end="199:27">:</operator>

        <call pos:start="201:9" pos:end="201:26"><name pos:start="201:9" pos:end="201:21">CASE_OP_32_64</name><argument_list pos:start="201:22" pos:end="201:26">(<argument pos:start="201:23" pos:end="201:25"><expr pos:start="201:23" pos:end="201:25"><name pos:start="201:23" pos:end="201:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="201:27" pos:end="201:27">:</operator>

        <call pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:21">CASE_OP_32_64</name><argument_list pos:start="203:22" pos:end="203:26">(<argument pos:start="203:23" pos:end="203:25"><expr pos:start="203:23" pos:end="203:25"><name pos:start="203:23" pos:end="203:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="203:27" pos:end="203:27">:</operator>

        <call pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:21">CASE_OP_32_64</name><argument_list pos:start="205:22" pos:end="205:27">(<argument pos:start="205:23" pos:end="205:26"><expr pos:start="205:23" pos:end="205:26"><name pos:start="205:23" pos:end="205:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="205:28" pos:end="205:28">:</operator>

        <call pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:21">CASE_OP_32_64</name><argument_list pos:start="207:22" pos:end="207:27">(<argument pos:start="207:23" pos:end="207:26"><expr pos:start="207:23" pos:end="207:26"><name pos:start="207:23" pos:end="207:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="207:28" pos:end="207:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="209:13" pos:end="217:13"><if pos:start="209:13" pos:end="217:13">if <condition pos:start="209:16" pos:end="211:43">(<expr pos:start="209:17" pos:end="211:42"><name pos:start="209:17" pos:end="209:30"><name pos:start="209:17" pos:end="209:21">temps</name><index pos:start="209:22" pos:end="209:30">[<expr pos:start="209:23" pos:end="209:29"><name pos:start="209:23" pos:end="209:29"><name pos:start="209:23" pos:end="209:26">args</name><index pos:start="209:27" pos:end="209:29">[<expr pos:start="209:28" pos:end="209:28"><literal type="number" pos:start="209:28" pos:end="209:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="209:31" pos:end="209:31">.</operator><name pos:start="209:32" pos:end="209:36">state</name> <operator pos:start="209:38" pos:end="209:39">==</operator> <name pos:start="209:41" pos:end="209:54">TCG_TEMP_CONST</name>

                <operator pos:start="211:17" pos:end="211:18">&amp;&amp;</operator> <name pos:start="211:20" pos:end="211:33"><name pos:start="211:20" pos:end="211:24">temps</name><index pos:start="211:25" pos:end="211:33">[<expr pos:start="211:26" pos:end="211:32"><name pos:start="211:26" pos:end="211:32"><name pos:start="211:26" pos:end="211:29">args</name><index pos:start="211:30" pos:end="211:32">[<expr pos:start="211:31" pos:end="211:31"><literal type="number" pos:start="211:31" pos:end="211:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="211:34" pos:end="211:34">.</operator><name pos:start="211:35" pos:end="211:37">val</name> <operator pos:start="211:39" pos:end="211:40">==</operator> <literal type="number" pos:start="211:42" pos:end="211:42">0</literal></expr>)</condition> <block pos:start="211:45" pos:end="217:13">{<block_content pos:start="213:17" pos:end="215:25">

                <expr_stmt pos:start="213:17" pos:end="213:58"><expr pos:start="213:17" pos:end="213:57"><call pos:start="213:17" pos:end="213:57"><name pos:start="213:17" pos:end="213:32">tcg_opt_gen_movi</name><argument_list pos:start="213:33" pos:end="213:57">(<argument pos:start="213:34" pos:end="213:34"><expr pos:start="213:34" pos:end="213:34"><name pos:start="213:34" pos:end="213:34">s</name></expr></argument>, <argument pos:start="213:37" pos:end="213:38"><expr pos:start="213:37" pos:end="213:38"><name pos:start="213:37" pos:end="213:38">op</name></expr></argument>, <argument pos:start="213:41" pos:end="213:44"><expr pos:start="213:41" pos:end="213:44"><name pos:start="213:41" pos:end="213:44">args</name></expr></argument>, <argument pos:start="213:47" pos:end="213:53"><expr pos:start="213:47" pos:end="213:53"><name pos:start="213:47" pos:end="213:53"><name pos:start="213:47" pos:end="213:50">args</name><index pos:start="213:51" pos:end="213:53">[<expr pos:start="213:52" pos:end="213:52"><literal type="number" pos:start="213:52" pos:end="213:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:56" pos:end="213:56"><expr pos:start="213:56" pos:end="213:56"><literal type="number" pos:start="213:56" pos:end="213:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="215:17" pos:end="215:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <expr_stmt pos:start="221:9" pos:end="237:17"><expr pos:start="221:9" pos:end="237:17"><call pos:start="221:9" pos:end="221:26"><name pos:start="221:9" pos:end="221:21">CASE_OP_32_64</name><argument_list pos:start="221:22" pos:end="221:26">(<argument pos:start="221:23" pos:end="221:25"><expr pos:start="221:23" pos:end="221:25"><name pos:start="221:23" pos:end="221:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="221:27" pos:end="221:27">:</operator>

            <block pos:start="223:13" pos:end="237:17">{

                <expr pos:start="225:17" pos:end="225:32"><name pos:start="225:17" pos:end="225:25">TCGOpcode</name> <name pos:start="225:27" pos:end="225:32">neg_op</name></expr>;

                <expr pos:start="227:17" pos:end="227:29"><name pos:start="227:17" pos:end="227:20">bool</name> <name pos:start="227:22" pos:end="227:29">have_neg</name></expr>;



                <if_stmt pos:start="231:17" pos:end="235:26"><if pos:start="231:17" pos:end="235:26">if <condition pos:start="231:20" pos:end="231:59">(<expr pos:start="231:21" pos:end="231:58"><name pos:start="231:21" pos:end="231:34"><name pos:start="231:21" pos:end="231:25">temps</name><index pos:start="231:26" pos:end="231:34">[<expr pos:start="231:27" pos:end="231:33"><name pos:start="231:27" pos:end="231:33"><name pos:start="231:27" pos:end="231:30">args</name><index pos:start="231:31" pos:end="231:33">[<expr pos:start="231:32" pos:end="231:32"><literal type="number" pos:start="231:32" pos:end="231:32">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="231:35" pos:end="231:35">.</operator><name pos:start="231:36" pos:end="231:40">state</name> <operator pos:start="231:42" pos:end="231:43">==</operator> <name pos:start="231:45" pos:end="231:58">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="231:61" pos:end="235:26">{<block_content pos:start="235:21" pos:end="235:26">

                    <comment type="block" pos:start="233:21" pos:end="233:65">/* Proceed with possible constant folding. */</comment>

                    <break pos:start="235:21" pos:end="235:26">break;</break>

                <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>

                <if_stmt pos:start="239:17" pos:end="251:17"><if pos:start="239:17" pos:end="245:17">if <condition pos:start="239:20" pos:end="239:44">(<expr pos:start="239:21" pos:end="239:43"><name pos:start="239:21" pos:end="239:23">opc</name> <operator pos:start="239:25" pos:end="239:26">==</operator> <name pos:start="239:28" pos:end="239:43">INDEX_op_sub_i32</name></expr>)</condition> <block pos:start="239:46" pos:end="245:17">{<block_content pos:start="241:21" pos:end="243:54">

                    <expr_stmt pos:start="241:21" pos:end="241:46"><expr pos:start="241:21" pos:end="241:45"><name pos:start="241:21" pos:end="241:26">neg_op</name> <operator pos:start="241:28" pos:end="241:28">=</operator> <name pos:start="241:30" pos:end="241:45">INDEX_op_neg_i32</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:54"><expr pos:start="243:21" pos:end="243:53"><name pos:start="243:21" pos:end="243:28">have_neg</name> <operator pos:start="243:30" pos:end="243:30">=</operator> <name pos:start="243:32" pos:end="243:53">TCG_TARGET_HAS_neg_i32</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="245:19" pos:end="251:17">else <block pos:start="245:24" pos:end="251:17">{<block_content pos:start="247:21" pos:end="249:54">

                    <expr_stmt pos:start="247:21" pos:end="247:46"><expr pos:start="247:21" pos:end="247:45"><name pos:start="247:21" pos:end="247:26">neg_op</name> <operator pos:start="247:28" pos:end="247:28">=</operator> <name pos:start="247:30" pos:end="247:45">INDEX_op_neg_i64</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="249:21" pos:end="249:54"><expr pos:start="249:21" pos:end="249:53"><name pos:start="249:21" pos:end="249:28">have_neg</name> <operator pos:start="249:30" pos:end="249:30">=</operator> <name pos:start="249:32" pos:end="249:53">TCG_TARGET_HAS_neg_i64</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="253:17" pos:end="257:17"><if pos:start="253:17" pos:end="257:17">if <condition pos:start="253:20" pos:end="253:30">(<expr pos:start="253:21" pos:end="253:29"><operator pos:start="253:21" pos:end="253:21">!</operator><name pos:start="253:22" pos:end="253:29">have_neg</name></expr>)</condition> <block pos:start="253:32" pos:end="257:17">{<block_content pos:start="255:21" pos:end="255:26">

                    <break pos:start="255:21" pos:end="255:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="259:17" pos:end="271:17"><if pos:start="259:17" pos:end="271:17">if <condition pos:start="259:20" pos:end="261:47">(<expr pos:start="259:21" pos:end="261:46"><name pos:start="259:21" pos:end="259:34"><name pos:start="259:21" pos:end="259:25">temps</name><index pos:start="259:26" pos:end="259:34">[<expr pos:start="259:27" pos:end="259:33"><name pos:start="259:27" pos:end="259:33"><name pos:start="259:27" pos:end="259:30">args</name><index pos:start="259:31" pos:end="259:33">[<expr pos:start="259:32" pos:end="259:32"><literal type="number" pos:start="259:32" pos:end="259:32">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="259:35" pos:end="259:35">.</operator><name pos:start="259:36" pos:end="259:40">state</name> <operator pos:start="259:42" pos:end="259:43">==</operator> <name pos:start="259:45" pos:end="259:58">TCG_TEMP_CONST</name>

                    <operator pos:start="261:21" pos:end="261:22">&amp;&amp;</operator> <name pos:start="261:24" pos:end="261:37"><name pos:start="261:24" pos:end="261:28">temps</name><index pos:start="261:29" pos:end="261:37">[<expr pos:start="261:30" pos:end="261:36"><name pos:start="261:30" pos:end="261:36"><name pos:start="261:30" pos:end="261:33">args</name><index pos:start="261:34" pos:end="261:36">[<expr pos:start="261:35" pos:end="261:35"><literal type="number" pos:start="261:35" pos:end="261:35">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="261:38" pos:end="261:38">.</operator><name pos:start="261:39" pos:end="261:41">val</name> <operator pos:start="261:43" pos:end="261:44">==</operator> <literal type="number" pos:start="261:46" pos:end="261:46">0</literal></expr>)</condition> <block pos:start="261:49" pos:end="271:17">{<block_content pos:start="263:21" pos:end="269:29">

                    <expr_stmt pos:start="263:21" pos:end="263:37"><expr pos:start="263:21" pos:end="263:36"><name pos:start="263:21" pos:end="263:27"><name pos:start="263:21" pos:end="263:22">op</name><operator pos:start="263:23" pos:end="263:24">-&gt;</operator><name pos:start="263:25" pos:end="263:27">opc</name></name> <operator pos:start="263:29" pos:end="263:29">=</operator> <name pos:start="263:31" pos:end="263:36">neg_op</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="265:40"><expr pos:start="265:21" pos:end="265:39"><call pos:start="265:21" pos:end="265:39"><name pos:start="265:21" pos:end="265:30">reset_temp</name><argument_list pos:start="265:31" pos:end="265:39">(<argument pos:start="265:32" pos:end="265:38"><expr pos:start="265:32" pos:end="265:38"><name pos:start="265:32" pos:end="265:38"><name pos:start="265:32" pos:end="265:35">args</name><index pos:start="265:36" pos:end="265:38">[<expr pos:start="265:37" pos:end="265:37"><literal type="number" pos:start="265:37" pos:end="265:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:38"><expr pos:start="267:21" pos:end="267:37"><name pos:start="267:21" pos:end="267:27"><name pos:start="267:21" pos:end="267:24">args</name><index pos:start="267:25" pos:end="267:27">[<expr pos:start="267:26" pos:end="267:26"><literal type="number" pos:start="267:26" pos:end="267:26">1</literal></expr>]</index></name> <operator pos:start="267:29" pos:end="267:29">=</operator> <name pos:start="267:31" pos:end="267:37"><name pos:start="267:31" pos:end="267:34">args</name><index pos:start="267:35" pos:end="267:37">[<expr pos:start="267:36" pos:end="267:36"><literal type="number" pos:start="267:36" pos:end="267:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    <continue pos:start="269:21" pos:end="269:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></switch>

            <break pos:start="275:13" pos:end="275:18">break;</break>

        <expr_stmt pos:start="277:9" pos:end="279:28"><expr pos:start="277:9" pos:end="279:28"><call pos:start="277:9" pos:end="277:26"><name pos:start="277:9" pos:end="277:21">CASE_OP_32_64</name><argument_list pos:start="277:22" pos:end="277:26">(<argument pos:start="277:23" pos:end="277:25"><expr pos:start="277:23" pos:end="277:25"><name pos:start="277:23" pos:end="277:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="277:27" pos:end="277:27">:</operator>

        <call pos:start="279:9" pos:end="279:27"><name pos:start="279:9" pos:end="279:21">CASE_OP_32_64</name><argument_list pos:start="279:22" pos:end="279:27">(<argument pos:start="279:23" pos:end="279:26"><expr pos:start="279:23" pos:end="279:26"><name pos:start="279:23" pos:end="279:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="279:28" pos:end="279:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="281:13" pos:end="291:13"><if pos:start="281:13" pos:end="291:13">if <condition pos:start="281:16" pos:end="285:44">(<expr pos:start="281:17" pos:end="285:43"><name pos:start="281:17" pos:end="281:30"><name pos:start="281:17" pos:end="281:21">temps</name><index pos:start="281:22" pos:end="281:30">[<expr pos:start="281:23" pos:end="281:29"><name pos:start="281:23" pos:end="281:29"><name pos:start="281:23" pos:end="281:26">args</name><index pos:start="281:27" pos:end="281:29">[<expr pos:start="281:28" pos:end="281:28"><literal type="number" pos:start="281:28" pos:end="281:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="281:31" pos:end="281:31">.</operator><name pos:start="281:32" pos:end="281:36">state</name> <operator pos:start="281:38" pos:end="281:39">!=</operator> <name pos:start="281:41" pos:end="281:54">TCG_TEMP_CONST</name>

                <operator pos:start="283:17" pos:end="283:18">&amp;&amp;</operator> <name pos:start="283:20" pos:end="283:33"><name pos:start="283:20" pos:end="283:24">temps</name><index pos:start="283:25" pos:end="283:33">[<expr pos:start="283:26" pos:end="283:32"><name pos:start="283:26" pos:end="283:32"><name pos:start="283:26" pos:end="283:29">args</name><index pos:start="283:30" pos:end="283:32">[<expr pos:start="283:31" pos:end="283:31"><literal type="number" pos:start="283:31" pos:end="283:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="283:34" pos:end="283:34">.</operator><name pos:start="283:35" pos:end="283:39">state</name> <operator pos:start="283:41" pos:end="283:42">==</operator> <name pos:start="283:44" pos:end="283:57">TCG_TEMP_CONST</name>

                <operator pos:start="285:17" pos:end="285:18">&amp;&amp;</operator> <name pos:start="285:20" pos:end="285:33"><name pos:start="285:20" pos:end="285:24">temps</name><index pos:start="285:25" pos:end="285:33">[<expr pos:start="285:26" pos:end="285:32"><name pos:start="285:26" pos:end="285:32"><name pos:start="285:26" pos:end="285:29">args</name><index pos:start="285:30" pos:end="285:32">[<expr pos:start="285:31" pos:end="285:31"><literal type="number" pos:start="285:31" pos:end="285:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="285:34" pos:end="285:34">.</operator><name pos:start="285:35" pos:end="285:37">val</name> <operator pos:start="285:39" pos:end="285:40">==</operator> <operator pos:start="285:42" pos:end="285:42">-</operator><literal type="number" pos:start="285:43" pos:end="285:43">1</literal></expr>)</condition> <block pos:start="285:46" pos:end="291:13">{<block_content pos:start="287:17" pos:end="289:29">

                <expr_stmt pos:start="287:17" pos:end="287:22"><expr pos:start="287:17" pos:end="287:21"><name pos:start="287:17" pos:end="287:17">i</name> <operator pos:start="287:19" pos:end="287:19">=</operator> <literal type="number" pos:start="287:21" pos:end="287:21">1</literal></expr>;</expr_stmt>

                <goto pos:start="289:17" pos:end="289:29">goto <name pos:start="289:22" pos:end="289:28">try_not</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="293:13" pos:end="293:18">break;</break>

        <expr_stmt pos:start="295:9" pos:end="295:27"><expr pos:start="295:9" pos:end="295:27"><call pos:start="295:9" pos:end="295:26"><name pos:start="295:9" pos:end="295:21">CASE_OP_32_64</name><argument_list pos:start="295:22" pos:end="295:26">(<argument pos:start="295:23" pos:end="295:25"><expr pos:start="295:23" pos:end="295:25"><name pos:start="295:23" pos:end="295:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="295:27" pos:end="295:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="297:13" pos:end="307:13"><if pos:start="297:13" pos:end="307:13">if <condition pos:start="297:16" pos:end="301:43">(<expr pos:start="297:17" pos:end="301:42"><name pos:start="297:17" pos:end="297:30"><name pos:start="297:17" pos:end="297:21">temps</name><index pos:start="297:22" pos:end="297:30">[<expr pos:start="297:23" pos:end="297:29"><name pos:start="297:23" pos:end="297:29"><name pos:start="297:23" pos:end="297:26">args</name><index pos:start="297:27" pos:end="297:29">[<expr pos:start="297:28" pos:end="297:28"><literal type="number" pos:start="297:28" pos:end="297:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="297:31" pos:end="297:31">.</operator><name pos:start="297:32" pos:end="297:36">state</name> <operator pos:start="297:38" pos:end="297:39">!=</operator> <name pos:start="297:41" pos:end="297:54">TCG_TEMP_CONST</name>

                <operator pos:start="299:17" pos:end="299:18">&amp;&amp;</operator> <name pos:start="299:20" pos:end="299:33"><name pos:start="299:20" pos:end="299:24">temps</name><index pos:start="299:25" pos:end="299:33">[<expr pos:start="299:26" pos:end="299:32"><name pos:start="299:26" pos:end="299:32"><name pos:start="299:26" pos:end="299:29">args</name><index pos:start="299:30" pos:end="299:32">[<expr pos:start="299:31" pos:end="299:31"><literal type="number" pos:start="299:31" pos:end="299:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="299:34" pos:end="299:34">.</operator><name pos:start="299:35" pos:end="299:39">state</name> <operator pos:start="299:41" pos:end="299:42">==</operator> <name pos:start="299:44" pos:end="299:57">TCG_TEMP_CONST</name>

                <operator pos:start="301:17" pos:end="301:18">&amp;&amp;</operator> <name pos:start="301:20" pos:end="301:33"><name pos:start="301:20" pos:end="301:24">temps</name><index pos:start="301:25" pos:end="301:33">[<expr pos:start="301:26" pos:end="301:32"><name pos:start="301:26" pos:end="301:32"><name pos:start="301:26" pos:end="301:29">args</name><index pos:start="301:30" pos:end="301:32">[<expr pos:start="301:31" pos:end="301:31"><literal type="number" pos:start="301:31" pos:end="301:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="301:34" pos:end="301:34">.</operator><name pos:start="301:35" pos:end="301:37">val</name> <operator pos:start="301:39" pos:end="301:40">==</operator> <literal type="number" pos:start="301:42" pos:end="301:42">0</literal></expr>)</condition> <block pos:start="301:45" pos:end="307:13">{<block_content pos:start="303:17" pos:end="305:29">

                <expr_stmt pos:start="303:17" pos:end="303:22"><expr pos:start="303:17" pos:end="303:21"><name pos:start="303:17" pos:end="303:17">i</name> <operator pos:start="303:19" pos:end="303:19">=</operator> <literal type="number" pos:start="303:21" pos:end="303:21">1</literal></expr>;</expr_stmt>

                <goto pos:start="305:17" pos:end="305:29">goto <name pos:start="305:22" pos:end="305:28">try_not</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="309:13" pos:end="309:18">break;</break>

        <expr_stmt pos:start="311:9" pos:end="311:28"><expr pos:start="311:9" pos:end="311:28"><call pos:start="311:9" pos:end="311:27"><name pos:start="311:9" pos:end="311:21">CASE_OP_32_64</name><argument_list pos:start="311:22" pos:end="311:27">(<argument pos:start="311:23" pos:end="311:26"><expr pos:start="311:23" pos:end="311:26"><name pos:start="311:23" pos:end="311:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="311:28" pos:end="311:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="313:13" pos:end="323:13"><if pos:start="313:13" pos:end="323:13">if <condition pos:start="313:16" pos:end="317:44">(<expr pos:start="313:17" pos:end="317:43"><name pos:start="313:17" pos:end="313:30"><name pos:start="313:17" pos:end="313:21">temps</name><index pos:start="313:22" pos:end="313:30">[<expr pos:start="313:23" pos:end="313:29"><name pos:start="313:23" pos:end="313:29"><name pos:start="313:23" pos:end="313:26">args</name><index pos:start="313:27" pos:end="313:29">[<expr pos:start="313:28" pos:end="313:28"><literal type="number" pos:start="313:28" pos:end="313:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="313:31" pos:end="313:31">.</operator><name pos:start="313:32" pos:end="313:36">state</name> <operator pos:start="313:38" pos:end="313:39">!=</operator> <name pos:start="313:41" pos:end="313:54">TCG_TEMP_CONST</name>

                <operator pos:start="315:17" pos:end="315:18">&amp;&amp;</operator> <name pos:start="315:20" pos:end="315:33"><name pos:start="315:20" pos:end="315:24">temps</name><index pos:start="315:25" pos:end="315:33">[<expr pos:start="315:26" pos:end="315:32"><name pos:start="315:26" pos:end="315:32"><name pos:start="315:26" pos:end="315:29">args</name><index pos:start="315:30" pos:end="315:32">[<expr pos:start="315:31" pos:end="315:31"><literal type="number" pos:start="315:31" pos:end="315:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="315:34" pos:end="315:34">.</operator><name pos:start="315:35" pos:end="315:39">state</name> <operator pos:start="315:41" pos:end="315:42">==</operator> <name pos:start="315:44" pos:end="315:57">TCG_TEMP_CONST</name>

                <operator pos:start="317:17" pos:end="317:18">&amp;&amp;</operator> <name pos:start="317:20" pos:end="317:33"><name pos:start="317:20" pos:end="317:24">temps</name><index pos:start="317:25" pos:end="317:33">[<expr pos:start="317:26" pos:end="317:32"><name pos:start="317:26" pos:end="317:32"><name pos:start="317:26" pos:end="317:29">args</name><index pos:start="317:30" pos:end="317:32">[<expr pos:start="317:31" pos:end="317:31"><literal type="number" pos:start="317:31" pos:end="317:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="317:34" pos:end="317:34">.</operator><name pos:start="317:35" pos:end="317:37">val</name> <operator pos:start="317:39" pos:end="317:40">==</operator> <operator pos:start="317:42" pos:end="317:42">-</operator><literal type="number" pos:start="317:43" pos:end="317:43">1</literal></expr>)</condition> <block pos:start="317:46" pos:end="323:13">{<block_content pos:start="319:17" pos:end="321:29">

                <expr_stmt pos:start="319:17" pos:end="319:22"><expr pos:start="319:17" pos:end="319:21"><name pos:start="319:17" pos:end="319:17">i</name> <operator pos:start="319:19" pos:end="319:19">=</operator> <literal type="number" pos:start="319:21" pos:end="319:21">2</literal></expr>;</expr_stmt>

                <goto pos:start="321:17" pos:end="321:29">goto <name pos:start="321:22" pos:end="321:28">try_not</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <expr_stmt pos:start="327:9" pos:end="329:27"><expr pos:start="327:9" pos:end="329:27"><call pos:start="327:9" pos:end="327:26"><name pos:start="327:9" pos:end="327:21">CASE_OP_32_64</name><argument_list pos:start="327:22" pos:end="327:26">(<argument pos:start="327:23" pos:end="327:25"><expr pos:start="327:23" pos:end="327:25"><name pos:start="327:23" pos:end="327:25">orc</name></expr></argument>)</argument_list></call><operator pos:start="327:27" pos:end="327:27">:</operator>

        <call pos:start="329:9" pos:end="329:26"><name pos:start="329:9" pos:end="329:21">CASE_OP_32_64</name><argument_list pos:start="329:22" pos:end="329:26">(<argument pos:start="329:23" pos:end="329:25"><expr pos:start="329:23" pos:end="329:25"><name pos:start="329:23" pos:end="329:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="329:27" pos:end="329:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="331:13" pos:end="341:13"><if pos:start="331:13" pos:end="341:13">if <condition pos:start="331:16" pos:end="335:43">(<expr pos:start="331:17" pos:end="335:42"><name pos:start="331:17" pos:end="331:30"><name pos:start="331:17" pos:end="331:21">temps</name><index pos:start="331:22" pos:end="331:30">[<expr pos:start="331:23" pos:end="331:29"><name pos:start="331:23" pos:end="331:29"><name pos:start="331:23" pos:end="331:26">args</name><index pos:start="331:27" pos:end="331:29">[<expr pos:start="331:28" pos:end="331:28"><literal type="number" pos:start="331:28" pos:end="331:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="331:31" pos:end="331:31">.</operator><name pos:start="331:32" pos:end="331:36">state</name> <operator pos:start="331:38" pos:end="331:39">!=</operator> <name pos:start="331:41" pos:end="331:54">TCG_TEMP_CONST</name>

                <operator pos:start="333:17" pos:end="333:18">&amp;&amp;</operator> <name pos:start="333:20" pos:end="333:33"><name pos:start="333:20" pos:end="333:24">temps</name><index pos:start="333:25" pos:end="333:33">[<expr pos:start="333:26" pos:end="333:32"><name pos:start="333:26" pos:end="333:32"><name pos:start="333:26" pos:end="333:29">args</name><index pos:start="333:30" pos:end="333:32">[<expr pos:start="333:31" pos:end="333:31"><literal type="number" pos:start="333:31" pos:end="333:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="333:34" pos:end="333:34">.</operator><name pos:start="333:35" pos:end="333:39">state</name> <operator pos:start="333:41" pos:end="333:42">==</operator> <name pos:start="333:44" pos:end="333:57">TCG_TEMP_CONST</name>

                <operator pos:start="335:17" pos:end="335:18">&amp;&amp;</operator> <name pos:start="335:20" pos:end="335:33"><name pos:start="335:20" pos:end="335:24">temps</name><index pos:start="335:25" pos:end="335:33">[<expr pos:start="335:26" pos:end="335:32"><name pos:start="335:26" pos:end="335:32"><name pos:start="335:26" pos:end="335:29">args</name><index pos:start="335:30" pos:end="335:32">[<expr pos:start="335:31" pos:end="335:31"><literal type="number" pos:start="335:31" pos:end="335:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="335:34" pos:end="335:34">.</operator><name pos:start="335:35" pos:end="335:37">val</name> <operator pos:start="335:39" pos:end="335:40">==</operator> <literal type="number" pos:start="335:42" pos:end="335:42">0</literal></expr>)</condition> <block pos:start="335:45" pos:end="341:13">{<block_content pos:start="337:17" pos:end="339:29">

                <expr_stmt pos:start="337:17" pos:end="337:22"><expr pos:start="337:17" pos:end="337:21"><name pos:start="337:17" pos:end="337:17">i</name> <operator pos:start="337:19" pos:end="337:19">=</operator> <literal type="number" pos:start="337:21" pos:end="337:21">2</literal></expr>;</expr_stmt>

                <goto pos:start="339:17" pos:end="339:29">goto <name pos:start="339:22" pos:end="339:28">try_not</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="343:13" pos:end="343:18">break;</break>

        <label pos:start="345:9" pos:end="345:16"><name pos:start="345:9" pos:end="345:15">try_not</name>:</label>

            <block pos:start="347:13" pos:end="383:13">{<block_content pos:start="349:17" pos:end="381:25">

                <decl_stmt pos:start="349:17" pos:end="349:33"><decl pos:start="349:17" pos:end="349:32"><type pos:start="349:17" pos:end="349:25"><name pos:start="349:17" pos:end="349:25">TCGOpcode</name></type> <name pos:start="349:27" pos:end="349:32">not_op</name></decl>;</decl_stmt>

                <decl_stmt pos:start="351:17" pos:end="351:30"><decl pos:start="351:17" pos:end="351:29"><type pos:start="351:17" pos:end="351:20"><name pos:start="351:17" pos:end="351:20">bool</name></type> <name pos:start="351:22" pos:end="351:29">have_not</name></decl>;</decl_stmt>



                <if_stmt pos:start="355:17" pos:end="367:17"><if pos:start="355:17" pos:end="361:17">if <condition pos:start="355:20" pos:end="355:47">(<expr pos:start="355:21" pos:end="355:46"><name pos:start="355:21" pos:end="355:30"><name pos:start="355:21" pos:end="355:23">def</name><operator pos:start="355:24" pos:end="355:25">-&gt;</operator><name pos:start="355:26" pos:end="355:30">flags</name></name> <operator pos:start="355:32" pos:end="355:32">&amp;</operator> <name pos:start="355:34" pos:end="355:46">TCG_OPF_64BIT</name></expr>)</condition> <block pos:start="355:49" pos:end="361:17">{<block_content pos:start="357:21" pos:end="359:54">

                    <expr_stmt pos:start="357:21" pos:end="357:46"><expr pos:start="357:21" pos:end="357:45"><name pos:start="357:21" pos:end="357:26">not_op</name> <operator pos:start="357:28" pos:end="357:28">=</operator> <name pos:start="357:30" pos:end="357:45">INDEX_op_not_i64</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="359:21" pos:end="359:54"><expr pos:start="359:21" pos:end="359:53"><name pos:start="359:21" pos:end="359:28">have_not</name> <operator pos:start="359:30" pos:end="359:30">=</operator> <name pos:start="359:32" pos:end="359:53">TCG_TARGET_HAS_not_i64</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="361:19" pos:end="367:17">else <block pos:start="361:24" pos:end="367:17">{<block_content pos:start="363:21" pos:end="365:54">

                    <expr_stmt pos:start="363:21" pos:end="363:46"><expr pos:start="363:21" pos:end="363:45"><name pos:start="363:21" pos:end="363:26">not_op</name> <operator pos:start="363:28" pos:end="363:28">=</operator> <name pos:start="363:30" pos:end="363:45">INDEX_op_not_i32</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="365:21" pos:end="365:54"><expr pos:start="365:21" pos:end="365:53"><name pos:start="365:21" pos:end="365:28">have_not</name> <operator pos:start="365:30" pos:end="365:30">=</operator> <name pos:start="365:32" pos:end="365:53">TCG_TARGET_HAS_not_i32</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="369:17" pos:end="373:17"><if pos:start="369:17" pos:end="373:17">if <condition pos:start="369:20" pos:end="369:30">(<expr pos:start="369:21" pos:end="369:29"><operator pos:start="369:21" pos:end="369:21">!</operator><name pos:start="369:22" pos:end="369:29">have_not</name></expr>)</condition> <block pos:start="369:32" pos:end="373:17">{<block_content pos:start="371:21" pos:end="371:26">

                    <break pos:start="371:21" pos:end="371:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="375:17" pos:end="375:33"><expr pos:start="375:17" pos:end="375:32"><name pos:start="375:17" pos:end="375:23"><name pos:start="375:17" pos:end="375:18">op</name><operator pos:start="375:19" pos:end="375:20">-&gt;</operator><name pos:start="375:21" pos:end="375:23">opc</name></name> <operator pos:start="375:25" pos:end="375:25">=</operator> <name pos:start="375:27" pos:end="375:32">not_op</name></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:36"><expr pos:start="377:17" pos:end="377:35"><call pos:start="377:17" pos:end="377:35"><name pos:start="377:17" pos:end="377:26">reset_temp</name><argument_list pos:start="377:27" pos:end="377:35">(<argument pos:start="377:28" pos:end="377:34"><expr pos:start="377:28" pos:end="377:34"><name pos:start="377:28" pos:end="377:34"><name pos:start="377:28" pos:end="377:31">args</name><index pos:start="377:32" pos:end="377:34">[<expr pos:start="377:33" pos:end="377:33"><literal type="number" pos:start="377:33" pos:end="377:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:34"><expr pos:start="379:17" pos:end="379:33"><name pos:start="379:17" pos:end="379:23"><name pos:start="379:17" pos:end="379:20">args</name><index pos:start="379:21" pos:end="379:23">[<expr pos:start="379:22" pos:end="379:22"><literal type="number" pos:start="379:22" pos:end="379:22">1</literal></expr>]</index></name> <operator pos:start="379:25" pos:end="379:25">=</operator> <name pos:start="379:27" pos:end="379:33"><name pos:start="379:27" pos:end="379:30">args</name><index pos:start="379:31" pos:end="379:33">[<expr pos:start="379:32" pos:end="379:32"><name pos:start="379:32" pos:end="379:32">i</name></expr>]</index></name></expr>;</expr_stmt>

                <continue pos:start="381:17" pos:end="381:25">continue;</continue>

            </block_content>}</block>

        <default pos:start="385:9" pos:end="385:16">default:</default>

            <break pos:start="387:13" pos:end="387:18">break;</break>

        </block_content>}</block></for>



        <comment type="block" pos:start="393:9" pos:end="393:72">/* Simplify expression for "op r, a, const =&gt; mov r, a" cases */</comment>

        <switch pos:start="395:9" pos:end="455:9">switch <condition pos:start="395:16" pos:end="395:20">(<expr pos:start="395:17" pos:end="395:19"><name pos:start="395:17" pos:end="395:19">opc</name></expr>)</condition> <block pos:start="395:22" pos:end="455:9">{<block_content pos:start="397:9" pos:end="453:18">

        <expr_stmt pos:start="397:9" pos:end="415:28"><expr pos:start="397:9" pos:end="415:28"><call pos:start="397:9" pos:end="397:26"><name pos:start="397:9" pos:end="397:21">CASE_OP_32_64</name><argument_list pos:start="397:22" pos:end="397:26">(<argument pos:start="397:23" pos:end="397:25"><expr pos:start="397:23" pos:end="397:25"><name pos:start="397:23" pos:end="397:25">add</name></expr></argument>)</argument_list></call><operator pos:start="397:27" pos:end="397:27">:</operator>

        <call pos:start="399:9" pos:end="399:26"><name pos:start="399:9" pos:end="399:21">CASE_OP_32_64</name><argument_list pos:start="399:22" pos:end="399:26">(<argument pos:start="399:23" pos:end="399:25"><expr pos:start="399:23" pos:end="399:25"><name pos:start="399:23" pos:end="399:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="399:27" pos:end="399:27">:</operator>

        <call pos:start="401:9" pos:end="401:26"><name pos:start="401:9" pos:end="401:21">CASE_OP_32_64</name><argument_list pos:start="401:22" pos:end="401:26">(<argument pos:start="401:23" pos:end="401:25"><expr pos:start="401:23" pos:end="401:25"><name pos:start="401:23" pos:end="401:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="401:27" pos:end="401:27">:</operator>

        <call pos:start="403:9" pos:end="403:26"><name pos:start="403:9" pos:end="403:21">CASE_OP_32_64</name><argument_list pos:start="403:22" pos:end="403:26">(<argument pos:start="403:23" pos:end="403:25"><expr pos:start="403:23" pos:end="403:25"><name pos:start="403:23" pos:end="403:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="403:27" pos:end="403:27">:</operator>

        <call pos:start="405:9" pos:end="405:26"><name pos:start="405:9" pos:end="405:21">CASE_OP_32_64</name><argument_list pos:start="405:22" pos:end="405:26">(<argument pos:start="405:23" pos:end="405:25"><expr pos:start="405:23" pos:end="405:25"><name pos:start="405:23" pos:end="405:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="405:27" pos:end="405:27">:</operator>

        <call pos:start="407:9" pos:end="407:27"><name pos:start="407:9" pos:end="407:21">CASE_OP_32_64</name><argument_list pos:start="407:22" pos:end="407:27">(<argument pos:start="407:23" pos:end="407:26"><expr pos:start="407:23" pos:end="407:26"><name pos:start="407:23" pos:end="407:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="407:28" pos:end="407:28">:</operator>

        <call pos:start="409:9" pos:end="409:27"><name pos:start="409:9" pos:end="409:21">CASE_OP_32_64</name><argument_list pos:start="409:22" pos:end="409:27">(<argument pos:start="409:23" pos:end="409:26"><expr pos:start="409:23" pos:end="409:26"><name pos:start="409:23" pos:end="409:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="409:28" pos:end="409:28">:</operator>

        <call pos:start="411:9" pos:end="411:25"><name pos:start="411:9" pos:end="411:21">CASE_OP_32_64</name><argument_list pos:start="411:22" pos:end="411:25">(<argument pos:start="411:23" pos:end="411:24"><expr pos:start="411:23" pos:end="411:24"><name pos:start="411:23" pos:end="411:24">or</name></expr></argument>)</argument_list></call><operator pos:start="411:26" pos:end="411:26">:</operator>

        <call pos:start="413:9" pos:end="413:26"><name pos:start="413:9" pos:end="413:21">CASE_OP_32_64</name><argument_list pos:start="413:22" pos:end="413:26">(<argument pos:start="413:23" pos:end="413:25"><expr pos:start="413:23" pos:end="413:25"><name pos:start="413:23" pos:end="413:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="413:27" pos:end="413:27">:</operator>

        <call pos:start="415:9" pos:end="415:27"><name pos:start="415:9" pos:end="415:21">CASE_OP_32_64</name><argument_list pos:start="415:22" pos:end="415:27">(<argument pos:start="415:23" pos:end="415:26"><expr pos:start="415:23" pos:end="415:26"><name pos:start="415:23" pos:end="415:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="415:28" pos:end="415:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="417:13" pos:end="427:13"><if pos:start="417:13" pos:end="427:13">if <condition pos:start="417:16" pos:end="421:43">(<expr pos:start="417:17" pos:end="421:42"><name pos:start="417:17" pos:end="417:30"><name pos:start="417:17" pos:end="417:21">temps</name><index pos:start="417:22" pos:end="417:30">[<expr pos:start="417:23" pos:end="417:29"><name pos:start="417:23" pos:end="417:29"><name pos:start="417:23" pos:end="417:26">args</name><index pos:start="417:27" pos:end="417:29">[<expr pos:start="417:28" pos:end="417:28"><literal type="number" pos:start="417:28" pos:end="417:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="417:31" pos:end="417:31">.</operator><name pos:start="417:32" pos:end="417:36">state</name> <operator pos:start="417:38" pos:end="417:39">!=</operator> <name pos:start="417:41" pos:end="417:54">TCG_TEMP_CONST</name>

                <operator pos:start="419:17" pos:end="419:18">&amp;&amp;</operator> <name pos:start="419:20" pos:end="419:33"><name pos:start="419:20" pos:end="419:24">temps</name><index pos:start="419:25" pos:end="419:33">[<expr pos:start="419:26" pos:end="419:32"><name pos:start="419:26" pos:end="419:32"><name pos:start="419:26" pos:end="419:29">args</name><index pos:start="419:30" pos:end="419:32">[<expr pos:start="419:31" pos:end="419:31"><literal type="number" pos:start="419:31" pos:end="419:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="419:34" pos:end="419:34">.</operator><name pos:start="419:35" pos:end="419:39">state</name> <operator pos:start="419:41" pos:end="419:42">==</operator> <name pos:start="419:44" pos:end="419:57">TCG_TEMP_CONST</name>

                <operator pos:start="421:17" pos:end="421:18">&amp;&amp;</operator> <name pos:start="421:20" pos:end="421:33"><name pos:start="421:20" pos:end="421:24">temps</name><index pos:start="421:25" pos:end="421:33">[<expr pos:start="421:26" pos:end="421:32"><name pos:start="421:26" pos:end="421:32"><name pos:start="421:26" pos:end="421:29">args</name><index pos:start="421:30" pos:end="421:32">[<expr pos:start="421:31" pos:end="421:31"><literal type="number" pos:start="421:31" pos:end="421:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="421:34" pos:end="421:34">.</operator><name pos:start="421:35" pos:end="421:37">val</name> <operator pos:start="421:39" pos:end="421:40">==</operator> <literal type="number" pos:start="421:42" pos:end="421:42">0</literal></expr>)</condition> <block pos:start="421:45" pos:end="427:13">{<block_content pos:start="423:17" pos:end="425:25">

                <expr_stmt pos:start="423:17" pos:end="423:63"><expr pos:start="423:17" pos:end="423:62"><call pos:start="423:17" pos:end="423:62"><name pos:start="423:17" pos:end="423:31">tcg_opt_gen_mov</name><argument_list pos:start="423:32" pos:end="423:62">(<argument pos:start="423:33" pos:end="423:33"><expr pos:start="423:33" pos:end="423:33"><name pos:start="423:33" pos:end="423:33">s</name></expr></argument>, <argument pos:start="423:36" pos:end="423:37"><expr pos:start="423:36" pos:end="423:37"><name pos:start="423:36" pos:end="423:37">op</name></expr></argument>, <argument pos:start="423:40" pos:end="423:43"><expr pos:start="423:40" pos:end="423:43"><name pos:start="423:40" pos:end="423:43">args</name></expr></argument>, <argument pos:start="423:46" pos:end="423:52"><expr pos:start="423:46" pos:end="423:52"><name pos:start="423:46" pos:end="423:52"><name pos:start="423:46" pos:end="423:49">args</name><index pos:start="423:50" pos:end="423:52">[<expr pos:start="423:51" pos:end="423:51"><literal type="number" pos:start="423:51" pos:end="423:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="423:55" pos:end="423:61"><expr pos:start="423:55" pos:end="423:61"><name pos:start="423:55" pos:end="423:61"><name pos:start="423:55" pos:end="423:58">args</name><index pos:start="423:59" pos:end="423:61">[<expr pos:start="423:60" pos:end="423:60"><literal type="number" pos:start="423:60" pos:end="423:60">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="425:17" pos:end="425:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <expr_stmt pos:start="431:9" pos:end="435:27"><expr pos:start="431:9" pos:end="435:27"><call pos:start="431:9" pos:end="431:26"><name pos:start="431:9" pos:end="431:21">CASE_OP_32_64</name><argument_list pos:start="431:22" pos:end="431:26">(<argument pos:start="431:23" pos:end="431:25"><expr pos:start="431:23" pos:end="431:25"><name pos:start="431:23" pos:end="431:25">and</name></expr></argument>)</argument_list></call><operator pos:start="431:27" pos:end="431:27">:</operator>

        <call pos:start="433:9" pos:end="433:26"><name pos:start="433:9" pos:end="433:21">CASE_OP_32_64</name><argument_list pos:start="433:22" pos:end="433:26">(<argument pos:start="433:23" pos:end="433:25"><expr pos:start="433:23" pos:end="433:25"><name pos:start="433:23" pos:end="433:25">orc</name></expr></argument>)</argument_list></call><operator pos:start="433:27" pos:end="433:27">:</operator>

        <call pos:start="435:9" pos:end="435:26"><name pos:start="435:9" pos:end="435:21">CASE_OP_32_64</name><argument_list pos:start="435:22" pos:end="435:26">(<argument pos:start="435:23" pos:end="435:25"><expr pos:start="435:23" pos:end="435:25"><name pos:start="435:23" pos:end="435:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="435:27" pos:end="435:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="437:13" pos:end="447:13"><if pos:start="437:13" pos:end="447:13">if <condition pos:start="437:16" pos:end="441:44">(<expr pos:start="437:17" pos:end="441:43"><name pos:start="437:17" pos:end="437:30"><name pos:start="437:17" pos:end="437:21">temps</name><index pos:start="437:22" pos:end="437:30">[<expr pos:start="437:23" pos:end="437:29"><name pos:start="437:23" pos:end="437:29"><name pos:start="437:23" pos:end="437:26">args</name><index pos:start="437:27" pos:end="437:29">[<expr pos:start="437:28" pos:end="437:28"><literal type="number" pos:start="437:28" pos:end="437:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="437:31" pos:end="437:31">.</operator><name pos:start="437:32" pos:end="437:36">state</name> <operator pos:start="437:38" pos:end="437:39">!=</operator> <name pos:start="437:41" pos:end="437:54">TCG_TEMP_CONST</name>

                <operator pos:start="439:17" pos:end="439:18">&amp;&amp;</operator> <name pos:start="439:20" pos:end="439:33"><name pos:start="439:20" pos:end="439:24">temps</name><index pos:start="439:25" pos:end="439:33">[<expr pos:start="439:26" pos:end="439:32"><name pos:start="439:26" pos:end="439:32"><name pos:start="439:26" pos:end="439:29">args</name><index pos:start="439:30" pos:end="439:32">[<expr pos:start="439:31" pos:end="439:31"><literal type="number" pos:start="439:31" pos:end="439:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="439:34" pos:end="439:34">.</operator><name pos:start="439:35" pos:end="439:39">state</name> <operator pos:start="439:41" pos:end="439:42">==</operator> <name pos:start="439:44" pos:end="439:57">TCG_TEMP_CONST</name>

                <operator pos:start="441:17" pos:end="441:18">&amp;&amp;</operator> <name pos:start="441:20" pos:end="441:33"><name pos:start="441:20" pos:end="441:24">temps</name><index pos:start="441:25" pos:end="441:33">[<expr pos:start="441:26" pos:end="441:32"><name pos:start="441:26" pos:end="441:32"><name pos:start="441:26" pos:end="441:29">args</name><index pos:start="441:30" pos:end="441:32">[<expr pos:start="441:31" pos:end="441:31"><literal type="number" pos:start="441:31" pos:end="441:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="441:34" pos:end="441:34">.</operator><name pos:start="441:35" pos:end="441:37">val</name> <operator pos:start="441:39" pos:end="441:40">==</operator> <operator pos:start="441:42" pos:end="441:42">-</operator><literal type="number" pos:start="441:43" pos:end="441:43">1</literal></expr>)</condition> <block pos:start="441:46" pos:end="447:13">{<block_content pos:start="443:17" pos:end="445:25">

                <expr_stmt pos:start="443:17" pos:end="443:63"><expr pos:start="443:17" pos:end="443:62"><call pos:start="443:17" pos:end="443:62"><name pos:start="443:17" pos:end="443:31">tcg_opt_gen_mov</name><argument_list pos:start="443:32" pos:end="443:62">(<argument pos:start="443:33" pos:end="443:33"><expr pos:start="443:33" pos:end="443:33"><name pos:start="443:33" pos:end="443:33">s</name></expr></argument>, <argument pos:start="443:36" pos:end="443:37"><expr pos:start="443:36" pos:end="443:37"><name pos:start="443:36" pos:end="443:37">op</name></expr></argument>, <argument pos:start="443:40" pos:end="443:43"><expr pos:start="443:40" pos:end="443:43"><name pos:start="443:40" pos:end="443:43">args</name></expr></argument>, <argument pos:start="443:46" pos:end="443:52"><expr pos:start="443:46" pos:end="443:52"><name pos:start="443:46" pos:end="443:52"><name pos:start="443:46" pos:end="443:49">args</name><index pos:start="443:50" pos:end="443:52">[<expr pos:start="443:51" pos:end="443:51"><literal type="number" pos:start="443:51" pos:end="443:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="443:55" pos:end="443:61"><expr pos:start="443:55" pos:end="443:61"><name pos:start="443:55" pos:end="443:61"><name pos:start="443:55" pos:end="443:58">args</name><index pos:start="443:59" pos:end="443:61">[<expr pos:start="443:60" pos:end="443:60"><literal type="number" pos:start="443:60" pos:end="443:60">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="445:17" pos:end="445:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <default pos:start="451:9" pos:end="451:16">default:</default>

            <break pos:start="453:13" pos:end="453:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="459:9" pos:end="461:43">/* Simplify using known-zero bits. Currently only ops with a single

           output argument is supported. */</comment>

        <expr_stmt pos:start="463:9" pos:end="463:18"><expr pos:start="463:9" pos:end="463:17"><name pos:start="463:9" pos:end="463:12">mask</name> <operator pos:start="463:14" pos:end="463:14">=</operator> <operator pos:start="463:16" pos:end="463:16">-</operator><literal type="number" pos:start="463:17" pos:end="463:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:22"><expr pos:start="465:9" pos:end="465:21"><name pos:start="465:9" pos:end="465:16">affected</name> <operator pos:start="465:18" pos:end="465:18">=</operator> <operator pos:start="465:20" pos:end="465:20">-</operator><literal type="number" pos:start="465:21" pos:end="465:21">1</literal></expr>;</expr_stmt>

        <switch pos:start="467:9" pos:end="709:13">switch <condition pos:start="467:16" pos:end="467:20">(<expr pos:start="467:17" pos:end="467:19"><name pos:start="467:17" pos:end="467:19">opc</name></expr>)</condition> <block pos:start="467:22" pos:end="709:13">{<block_content pos:start="469:9" pos:end="707:17">

        <expr_stmt pos:start="469:9" pos:end="469:29"><expr pos:start="469:9" pos:end="469:29"><call pos:start="469:9" pos:end="469:28"><name pos:start="469:9" pos:end="469:21">CASE_OP_32_64</name><argument_list pos:start="469:22" pos:end="469:28">(<argument pos:start="469:23" pos:end="469:27"><expr pos:start="469:23" pos:end="469:27"><name pos:start="469:23" pos:end="469:27">ext8s</name></expr></argument>)</argument_list></call><operator pos:start="469:29" pos:end="469:29">:</operator></expr></expr_stmt>

            <if_stmt pos:start="471:13" pos:end="475:13"><if pos:start="471:13" pos:end="475:13">if <condition pos:start="471:16" pos:end="471:50">(<expr pos:start="471:17" pos:end="471:49"><operator pos:start="471:17" pos:end="471:17">(</operator><name pos:start="471:18" pos:end="471:31"><name pos:start="471:18" pos:end="471:22">temps</name><index pos:start="471:23" pos:end="471:31">[<expr pos:start="471:24" pos:end="471:30"><name pos:start="471:24" pos:end="471:30"><name pos:start="471:24" pos:end="471:27">args</name><index pos:start="471:28" pos:end="471:30">[<expr pos:start="471:29" pos:end="471:29"><literal type="number" pos:start="471:29" pos:end="471:29">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="471:32" pos:end="471:32">.</operator><name pos:start="471:33" pos:end="471:36">mask</name> <operator pos:start="471:38" pos:end="471:38">&amp;</operator> <literal type="number" pos:start="471:40" pos:end="471:43">0x80</literal><operator pos:start="471:44" pos:end="471:44">)</operator> <operator pos:start="471:46" pos:end="471:47">!=</operator> <literal type="number" pos:start="471:49" pos:end="471:49">0</literal></expr>)</condition> <block pos:start="471:52" pos:end="475:13">{<block_content pos:start="473:17" pos:end="473:22">

                <break pos:start="473:17" pos:end="473:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="477:9" pos:end="479:24"><expr pos:start="477:9" pos:end="479:23"><call pos:start="477:9" pos:end="477:28"><name pos:start="477:9" pos:end="477:21">CASE_OP_32_64</name><argument_list pos:start="477:22" pos:end="477:28">(<argument pos:start="477:23" pos:end="477:27"><expr pos:start="477:23" pos:end="477:27"><name pos:start="477:23" pos:end="477:27">ext8u</name></expr></argument>)</argument_list></call><operator pos:start="477:29" pos:end="477:29">:</operator>

            <name pos:start="479:13" pos:end="479:16">mask</name> <operator pos:start="479:18" pos:end="479:18">=</operator> <literal type="number" pos:start="479:20" pos:end="479:23">0xff</literal></expr>;</expr_stmt>

            <goto pos:start="481:13" pos:end="481:27">goto <name pos:start="481:18" pos:end="481:26">and_const</name>;</goto>

        <expr_stmt pos:start="483:9" pos:end="483:30"><expr pos:start="483:9" pos:end="483:30"><call pos:start="483:9" pos:end="483:29"><name pos:start="483:9" pos:end="483:21">CASE_OP_32_64</name><argument_list pos:start="483:22" pos:end="483:29">(<argument pos:start="483:23" pos:end="483:28"><expr pos:start="483:23" pos:end="483:28"><name pos:start="483:23" pos:end="483:28">ext16s</name></expr></argument>)</argument_list></call><operator pos:start="483:30" pos:end="483:30">:</operator></expr></expr_stmt>

            <if_stmt pos:start="485:13" pos:end="489:13"><if pos:start="485:13" pos:end="489:13">if <condition pos:start="485:16" pos:end="485:52">(<expr pos:start="485:17" pos:end="485:51"><operator pos:start="485:17" pos:end="485:17">(</operator><name pos:start="485:18" pos:end="485:31"><name pos:start="485:18" pos:end="485:22">temps</name><index pos:start="485:23" pos:end="485:31">[<expr pos:start="485:24" pos:end="485:30"><name pos:start="485:24" pos:end="485:30"><name pos:start="485:24" pos:end="485:27">args</name><index pos:start="485:28" pos:end="485:30">[<expr pos:start="485:29" pos:end="485:29"><literal type="number" pos:start="485:29" pos:end="485:29">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="485:32" pos:end="485:32">.</operator><name pos:start="485:33" pos:end="485:36">mask</name> <operator pos:start="485:38" pos:end="485:38">&amp;</operator> <literal type="number" pos:start="485:40" pos:end="485:45">0x8000</literal><operator pos:start="485:46" pos:end="485:46">)</operator> <operator pos:start="485:48" pos:end="485:49">!=</operator> <literal type="number" pos:start="485:51" pos:end="485:51">0</literal></expr>)</condition> <block pos:start="485:54" pos:end="489:13">{<block_content pos:start="487:17" pos:end="487:22">

                <break pos:start="487:17" pos:end="487:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="491:9" pos:end="493:26"><expr pos:start="491:9" pos:end="493:25"><call pos:start="491:9" pos:end="491:29"><name pos:start="491:9" pos:end="491:21">CASE_OP_32_64</name><argument_list pos:start="491:22" pos:end="491:29">(<argument pos:start="491:23" pos:end="491:28"><expr pos:start="491:23" pos:end="491:28"><name pos:start="491:23" pos:end="491:28">ext16u</name></expr></argument>)</argument_list></call><operator pos:start="491:30" pos:end="491:30">:</operator>

            <name pos:start="493:13" pos:end="493:16">mask</name> <operator pos:start="493:18" pos:end="493:18">=</operator> <literal type="number" pos:start="493:20" pos:end="493:25">0xffff</literal></expr>;</expr_stmt>

            <goto pos:start="495:13" pos:end="495:27">goto <name pos:start="495:18" pos:end="495:26">and_const</name>;</goto>

        <case pos:start="497:9" pos:end="497:33">case <expr pos:start="497:14" pos:end="497:32"><name pos:start="497:14" pos:end="497:32">INDEX_op_ext32s_i64</name></expr>:</case>

            <if_stmt pos:start="499:13" pos:end="503:13"><if pos:start="499:13" pos:end="503:13">if <condition pos:start="499:16" pos:end="499:56">(<expr pos:start="499:17" pos:end="499:55"><operator pos:start="499:17" pos:end="499:17">(</operator><name pos:start="499:18" pos:end="499:31"><name pos:start="499:18" pos:end="499:22">temps</name><index pos:start="499:23" pos:end="499:31">[<expr pos:start="499:24" pos:end="499:30"><name pos:start="499:24" pos:end="499:30"><name pos:start="499:24" pos:end="499:27">args</name><index pos:start="499:28" pos:end="499:30">[<expr pos:start="499:29" pos:end="499:29"><literal type="number" pos:start="499:29" pos:end="499:29">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="499:32" pos:end="499:32">.</operator><name pos:start="499:33" pos:end="499:36">mask</name> <operator pos:start="499:38" pos:end="499:38">&amp;</operator> <literal type="number" pos:start="499:40" pos:end="499:49">0x80000000</literal><operator pos:start="499:50" pos:end="499:50">)</operator> <operator pos:start="499:52" pos:end="499:53">!=</operator> <literal type="number" pos:start="499:55" pos:end="499:55">0</literal></expr>)</condition> <block pos:start="499:58" pos:end="503:13">{<block_content pos:start="501:17" pos:end="501:22">

                <break pos:start="501:17" pos:end="501:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <case pos:start="505:9" pos:end="505:33">case <expr pos:start="505:14" pos:end="505:32"><name pos:start="505:14" pos:end="505:32">INDEX_op_ext32u_i64</name></expr>:</case>

            <expr_stmt pos:start="507:13" pos:end="507:31"><expr pos:start="507:13" pos:end="507:30"><name pos:start="507:13" pos:end="507:16">mask</name> <operator pos:start="507:18" pos:end="507:18">=</operator> <literal type="number" pos:start="507:20" pos:end="507:30">0xffffffffU</literal></expr>;</expr_stmt>

            <goto pos:start="509:13" pos:end="509:27">goto <name pos:start="509:18" pos:end="509:26">and_const</name>;</goto>



        <expr_stmt pos:start="513:9" pos:end="515:39"><expr pos:start="513:9" pos:end="515:38"><call pos:start="513:9" pos:end="513:26"><name pos:start="513:9" pos:end="513:21">CASE_OP_32_64</name><argument_list pos:start="513:22" pos:end="513:26">(<argument pos:start="513:23" pos:end="513:25"><expr pos:start="513:23" pos:end="513:25"><name pos:start="513:23" pos:end="513:25">and</name></expr></argument>)</argument_list></call><operator pos:start="513:27" pos:end="513:27">:</operator>

            <name pos:start="515:13" pos:end="515:16">mask</name> <operator pos:start="515:18" pos:end="515:18">=</operator> <name pos:start="515:20" pos:end="515:33"><name pos:start="515:20" pos:end="515:24">temps</name><index pos:start="515:25" pos:end="515:33">[<expr pos:start="515:26" pos:end="515:32"><name pos:start="515:26" pos:end="515:32"><name pos:start="515:26" pos:end="515:29">args</name><index pos:start="515:30" pos:end="515:32">[<expr pos:start="515:31" pos:end="515:31"><literal type="number" pos:start="515:31" pos:end="515:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="515:34" pos:end="515:34">.</operator><name pos:start="515:35" pos:end="515:38">mask</name></expr>;</expr_stmt>

            <if_stmt pos:start="517:13" pos:end="523:13"><if pos:start="517:13" pos:end="523:13">if <condition pos:start="517:16" pos:end="517:55">(<expr pos:start="517:17" pos:end="517:54"><name pos:start="517:17" pos:end="517:30"><name pos:start="517:17" pos:end="517:21">temps</name><index pos:start="517:22" pos:end="517:30">[<expr pos:start="517:23" pos:end="517:29"><name pos:start="517:23" pos:end="517:29"><name pos:start="517:23" pos:end="517:26">args</name><index pos:start="517:27" pos:end="517:29">[<expr pos:start="517:28" pos:end="517:28"><literal type="number" pos:start="517:28" pos:end="517:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="517:31" pos:end="517:31">.</operator><name pos:start="517:32" pos:end="517:36">state</name> <operator pos:start="517:38" pos:end="517:39">==</operator> <name pos:start="517:41" pos:end="517:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="517:57" pos:end="523:13">{<block_content pos:start="519:9" pos:end="521:55">

        <label pos:start="519:9" pos:end="519:18"><name pos:start="519:9" pos:end="519:17">and_const</name>:</label>

                <expr_stmt pos:start="521:17" pos:end="521:55"><expr pos:start="521:17" pos:end="521:54"><name pos:start="521:17" pos:end="521:24">affected</name> <operator pos:start="521:26" pos:end="521:26">=</operator> <name pos:start="521:28" pos:end="521:41"><name pos:start="521:28" pos:end="521:32">temps</name><index pos:start="521:33" pos:end="521:41">[<expr pos:start="521:34" pos:end="521:40"><name pos:start="521:34" pos:end="521:40"><name pos:start="521:34" pos:end="521:37">args</name><index pos:start="521:38" pos:end="521:40">[<expr pos:start="521:39" pos:end="521:39"><literal type="number" pos:start="521:39" pos:end="521:39">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="521:42" pos:end="521:42">.</operator><name pos:start="521:43" pos:end="521:46">mask</name> <operator pos:start="521:48" pos:end="521:48">&amp;</operator> <operator pos:start="521:50" pos:end="521:50">~</operator><name pos:start="521:51" pos:end="521:54">mask</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:46"><expr pos:start="525:13" pos:end="525:45"><name pos:start="525:13" pos:end="525:16">mask</name> <operator pos:start="525:18" pos:end="525:18">=</operator> <name pos:start="525:20" pos:end="525:33"><name pos:start="525:20" pos:end="525:24">temps</name><index pos:start="525:25" pos:end="525:33">[<expr pos:start="525:26" pos:end="525:32"><name pos:start="525:26" pos:end="525:32"><name pos:start="525:26" pos:end="525:29">args</name><index pos:start="525:30" pos:end="525:32">[<expr pos:start="525:31" pos:end="525:31"><literal type="number" pos:start="525:31" pos:end="525:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="525:34" pos:end="525:34">.</operator><name pos:start="525:35" pos:end="525:38">mask</name> <operator pos:start="525:40" pos:end="525:40">&amp;</operator> <name pos:start="525:42" pos:end="525:45">mask</name></expr>;</expr_stmt>

            <break pos:start="527:13" pos:end="527:18">break;</break>



        <expr_stmt pos:start="531:9" pos:end="531:28"><expr pos:start="531:9" pos:end="531:28"><call pos:start="531:9" pos:end="531:27"><name pos:start="531:9" pos:end="531:21">CASE_OP_32_64</name><argument_list pos:start="531:22" pos:end="531:27">(<argument pos:start="531:23" pos:end="531:26"><expr pos:start="531:23" pos:end="531:26"><name pos:start="531:23" pos:end="531:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="531:28" pos:end="531:28">:</operator></expr></expr_stmt>

            <comment type="block" pos:start="533:13" pos:end="535:72">/* Known-zeros does not imply known-ones.  Therefore unless

               args[2] is constant, we can't infer anything from it.  */</comment>

            <if_stmt pos:start="537:13" pos:end="543:13"><if pos:start="537:13" pos:end="543:13">if <condition pos:start="537:16" pos:end="537:55">(<expr pos:start="537:17" pos:end="537:54"><name pos:start="537:17" pos:end="537:30"><name pos:start="537:17" pos:end="537:21">temps</name><index pos:start="537:22" pos:end="537:30">[<expr pos:start="537:23" pos:end="537:29"><name pos:start="537:23" pos:end="537:29"><name pos:start="537:23" pos:end="537:26">args</name><index pos:start="537:27" pos:end="537:29">[<expr pos:start="537:28" pos:end="537:28"><literal type="number" pos:start="537:28" pos:end="537:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="537:31" pos:end="537:31">.</operator><name pos:start="537:32" pos:end="537:36">state</name> <operator pos:start="537:38" pos:end="537:39">==</operator> <name pos:start="537:41" pos:end="537:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="537:57" pos:end="543:13">{<block_content pos:start="539:17" pos:end="541:31">

                <expr_stmt pos:start="539:17" pos:end="539:44"><expr pos:start="539:17" pos:end="539:43"><name pos:start="539:17" pos:end="539:20">mask</name> <operator pos:start="539:22" pos:end="539:22">=</operator> <operator pos:start="539:24" pos:end="539:24">~</operator><name pos:start="539:25" pos:end="539:38"><name pos:start="539:25" pos:end="539:29">temps</name><index pos:start="539:30" pos:end="539:38">[<expr pos:start="539:31" pos:end="539:37"><name pos:start="539:31" pos:end="539:37"><name pos:start="539:31" pos:end="539:34">args</name><index pos:start="539:35" pos:end="539:37">[<expr pos:start="539:36" pos:end="539:36"><literal type="number" pos:start="539:36" pos:end="539:36">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="539:39" pos:end="539:39">.</operator><name pos:start="539:40" pos:end="539:43">mask</name></expr>;</expr_stmt>

                <goto pos:start="541:17" pos:end="541:31">goto <name pos:start="541:22" pos:end="541:30">and_const</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="545:13" pos:end="545:75">/* But we certainly know nothing outside args[1] may be set. */</comment>

            <expr_stmt pos:start="547:13" pos:end="547:39"><expr pos:start="547:13" pos:end="547:38"><name pos:start="547:13" pos:end="547:16">mask</name> <operator pos:start="547:18" pos:end="547:18">=</operator> <name pos:start="547:20" pos:end="547:33"><name pos:start="547:20" pos:end="547:24">temps</name><index pos:start="547:25" pos:end="547:33">[<expr pos:start="547:26" pos:end="547:32"><name pos:start="547:26" pos:end="547:32"><name pos:start="547:26" pos:end="547:29">args</name><index pos:start="547:30" pos:end="547:32">[<expr pos:start="547:31" pos:end="547:31"><literal type="number" pos:start="547:31" pos:end="547:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="547:34" pos:end="547:34">.</operator><name pos:start="547:35" pos:end="547:38">mask</name></expr>;</expr_stmt>

            <break pos:start="549:13" pos:end="549:18">break;</break>



        <case pos:start="553:9" pos:end="553:30">case <expr pos:start="553:14" pos:end="553:29"><name pos:start="553:14" pos:end="553:29">INDEX_op_sar_i32</name></expr>:</case>

            <if_stmt pos:start="555:13" pos:end="561:13"><if pos:start="555:13" pos:end="561:13">if <condition pos:start="555:16" pos:end="555:55">(<expr pos:start="555:17" pos:end="555:54"><name pos:start="555:17" pos:end="555:30"><name pos:start="555:17" pos:end="555:21">temps</name><index pos:start="555:22" pos:end="555:30">[<expr pos:start="555:23" pos:end="555:29"><name pos:start="555:23" pos:end="555:29"><name pos:start="555:23" pos:end="555:26">args</name><index pos:start="555:27" pos:end="555:29">[<expr pos:start="555:28" pos:end="555:28"><literal type="number" pos:start="555:28" pos:end="555:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="555:31" pos:end="555:31">.</operator><name pos:start="555:32" pos:end="555:36">state</name> <operator pos:start="555:38" pos:end="555:39">==</operator> <name pos:start="555:41" pos:end="555:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="555:57" pos:end="561:13">{<block_content pos:start="557:17" pos:end="559:59">

                <expr_stmt pos:start="557:17" pos:end="557:46"><expr pos:start="557:17" pos:end="557:45"><name pos:start="557:17" pos:end="557:19">tmp</name> <operator pos:start="557:21" pos:end="557:21">=</operator> <name pos:start="557:23" pos:end="557:36"><name pos:start="557:23" pos:end="557:27">temps</name><index pos:start="557:28" pos:end="557:36">[<expr pos:start="557:29" pos:end="557:35"><name pos:start="557:29" pos:end="557:35"><name pos:start="557:29" pos:end="557:32">args</name><index pos:start="557:33" pos:end="557:35">[<expr pos:start="557:34" pos:end="557:34"><literal type="number" pos:start="557:34" pos:end="557:34">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="557:37" pos:end="557:37">.</operator><name pos:start="557:38" pos:end="557:40">val</name> <operator pos:start="557:42" pos:end="557:42">&amp;</operator> <literal type="number" pos:start="557:44" pos:end="557:45">31</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="559:17" pos:end="559:59"><expr pos:start="559:17" pos:end="559:58"><name pos:start="559:17" pos:end="559:20">mask</name> <operator pos:start="559:22" pos:end="559:22">=</operator> <operator pos:start="559:24" pos:end="559:24">(</operator><name pos:start="559:25" pos:end="559:31">int32_t</name><operator pos:start="559:32" pos:end="559:32">)</operator><name pos:start="559:33" pos:end="559:46"><name pos:start="559:33" pos:end="559:37">temps</name><index pos:start="559:38" pos:end="559:46">[<expr pos:start="559:39" pos:end="559:45"><name pos:start="559:39" pos:end="559:45"><name pos:start="559:39" pos:end="559:42">args</name><index pos:start="559:43" pos:end="559:45">[<expr pos:start="559:44" pos:end="559:44"><literal type="number" pos:start="559:44" pos:end="559:44">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="559:47" pos:end="559:47">.</operator><name pos:start="559:48" pos:end="559:51">mask</name> <operator pos:start="559:53" pos:end="559:54">&gt;&gt;</operator> <name pos:start="559:56" pos:end="559:58">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="563:13" pos:end="563:18">break;</break>

        <case pos:start="565:9" pos:end="565:30">case <expr pos:start="565:14" pos:end="565:29"><name pos:start="565:14" pos:end="565:29">INDEX_op_sar_i64</name></expr>:</case>

            <if_stmt pos:start="567:13" pos:end="573:13"><if pos:start="567:13" pos:end="573:13">if <condition pos:start="567:16" pos:end="567:55">(<expr pos:start="567:17" pos:end="567:54"><name pos:start="567:17" pos:end="567:30"><name pos:start="567:17" pos:end="567:21">temps</name><index pos:start="567:22" pos:end="567:30">[<expr pos:start="567:23" pos:end="567:29"><name pos:start="567:23" pos:end="567:29"><name pos:start="567:23" pos:end="567:26">args</name><index pos:start="567:27" pos:end="567:29">[<expr pos:start="567:28" pos:end="567:28"><literal type="number" pos:start="567:28" pos:end="567:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="567:31" pos:end="567:31">.</operator><name pos:start="567:32" pos:end="567:36">state</name> <operator pos:start="567:38" pos:end="567:39">==</operator> <name pos:start="567:41" pos:end="567:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="567:57" pos:end="573:13">{<block_content pos:start="569:17" pos:end="571:59">

                <expr_stmt pos:start="569:17" pos:end="569:46"><expr pos:start="569:17" pos:end="569:45"><name pos:start="569:17" pos:end="569:19">tmp</name> <operator pos:start="569:21" pos:end="569:21">=</operator> <name pos:start="569:23" pos:end="569:36"><name pos:start="569:23" pos:end="569:27">temps</name><index pos:start="569:28" pos:end="569:36">[<expr pos:start="569:29" pos:end="569:35"><name pos:start="569:29" pos:end="569:35"><name pos:start="569:29" pos:end="569:32">args</name><index pos:start="569:33" pos:end="569:35">[<expr pos:start="569:34" pos:end="569:34"><literal type="number" pos:start="569:34" pos:end="569:34">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="569:37" pos:end="569:37">.</operator><name pos:start="569:38" pos:end="569:40">val</name> <operator pos:start="569:42" pos:end="569:42">&amp;</operator> <literal type="number" pos:start="569:44" pos:end="569:45">63</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="571:17" pos:end="571:59"><expr pos:start="571:17" pos:end="571:58"><name pos:start="571:17" pos:end="571:20">mask</name> <operator pos:start="571:22" pos:end="571:22">=</operator> <operator pos:start="571:24" pos:end="571:24">(</operator><name pos:start="571:25" pos:end="571:31">int64_t</name><operator pos:start="571:32" pos:end="571:32">)</operator><name pos:start="571:33" pos:end="571:46"><name pos:start="571:33" pos:end="571:37">temps</name><index pos:start="571:38" pos:end="571:46">[<expr pos:start="571:39" pos:end="571:45"><name pos:start="571:39" pos:end="571:45"><name pos:start="571:39" pos:end="571:42">args</name><index pos:start="571:43" pos:end="571:45">[<expr pos:start="571:44" pos:end="571:44"><literal type="number" pos:start="571:44" pos:end="571:44">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="571:47" pos:end="571:47">.</operator><name pos:start="571:48" pos:end="571:51">mask</name> <operator pos:start="571:53" pos:end="571:54">&gt;&gt;</operator> <name pos:start="571:56" pos:end="571:58">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="575:13" pos:end="575:18">break;</break>



        <case pos:start="579:9" pos:end="579:30">case <expr pos:start="579:14" pos:end="579:29"><name pos:start="579:14" pos:end="579:29">INDEX_op_shr_i32</name></expr>:</case>

            <if_stmt pos:start="581:13" pos:end="587:13"><if pos:start="581:13" pos:end="587:13">if <condition pos:start="581:16" pos:end="581:55">(<expr pos:start="581:17" pos:end="581:54"><name pos:start="581:17" pos:end="581:30"><name pos:start="581:17" pos:end="581:21">temps</name><index pos:start="581:22" pos:end="581:30">[<expr pos:start="581:23" pos:end="581:29"><name pos:start="581:23" pos:end="581:29"><name pos:start="581:23" pos:end="581:26">args</name><index pos:start="581:27" pos:end="581:29">[<expr pos:start="581:28" pos:end="581:28"><literal type="number" pos:start="581:28" pos:end="581:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="581:31" pos:end="581:31">.</operator><name pos:start="581:32" pos:end="581:36">state</name> <operator pos:start="581:38" pos:end="581:39">==</operator> <name pos:start="581:41" pos:end="581:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="581:57" pos:end="587:13">{<block_content pos:start="583:17" pos:end="585:60">

                <expr_stmt pos:start="583:17" pos:end="583:46"><expr pos:start="583:17" pos:end="583:45"><name pos:start="583:17" pos:end="583:19">tmp</name> <operator pos:start="583:21" pos:end="583:21">=</operator> <name pos:start="583:23" pos:end="583:36"><name pos:start="583:23" pos:end="583:27">temps</name><index pos:start="583:28" pos:end="583:36">[<expr pos:start="583:29" pos:end="583:35"><name pos:start="583:29" pos:end="583:35"><name pos:start="583:29" pos:end="583:32">args</name><index pos:start="583:33" pos:end="583:35">[<expr pos:start="583:34" pos:end="583:34"><literal type="number" pos:start="583:34" pos:end="583:34">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="583:37" pos:end="583:37">.</operator><name pos:start="583:38" pos:end="583:40">val</name> <operator pos:start="583:42" pos:end="583:42">&amp;</operator> <literal type="number" pos:start="583:44" pos:end="583:45">31</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="585:17" pos:end="585:60"><expr pos:start="585:17" pos:end="585:59"><name pos:start="585:17" pos:end="585:20">mask</name> <operator pos:start="585:22" pos:end="585:22">=</operator> <operator pos:start="585:24" pos:end="585:24">(</operator><name pos:start="585:25" pos:end="585:32">uint32_t</name><operator pos:start="585:33" pos:end="585:33">)</operator><name pos:start="585:34" pos:end="585:47"><name pos:start="585:34" pos:end="585:38">temps</name><index pos:start="585:39" pos:end="585:47">[<expr pos:start="585:40" pos:end="585:46"><name pos:start="585:40" pos:end="585:46"><name pos:start="585:40" pos:end="585:43">args</name><index pos:start="585:44" pos:end="585:46">[<expr pos:start="585:45" pos:end="585:45"><literal type="number" pos:start="585:45" pos:end="585:45">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="585:48" pos:end="585:48">.</operator><name pos:start="585:49" pos:end="585:52">mask</name> <operator pos:start="585:54" pos:end="585:55">&gt;&gt;</operator> <name pos:start="585:57" pos:end="585:59">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="589:13" pos:end="589:18">break;</break>

        <case pos:start="591:9" pos:end="591:30">case <expr pos:start="591:14" pos:end="591:29"><name pos:start="591:14" pos:end="591:29">INDEX_op_shr_i64</name></expr>:</case>

            <if_stmt pos:start="593:13" pos:end="599:13"><if pos:start="593:13" pos:end="599:13">if <condition pos:start="593:16" pos:end="593:55">(<expr pos:start="593:17" pos:end="593:54"><name pos:start="593:17" pos:end="593:30"><name pos:start="593:17" pos:end="593:21">temps</name><index pos:start="593:22" pos:end="593:30">[<expr pos:start="593:23" pos:end="593:29"><name pos:start="593:23" pos:end="593:29"><name pos:start="593:23" pos:end="593:26">args</name><index pos:start="593:27" pos:end="593:29">[<expr pos:start="593:28" pos:end="593:28"><literal type="number" pos:start="593:28" pos:end="593:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="593:31" pos:end="593:31">.</operator><name pos:start="593:32" pos:end="593:36">state</name> <operator pos:start="593:38" pos:end="593:39">==</operator> <name pos:start="593:41" pos:end="593:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="593:57" pos:end="599:13">{<block_content pos:start="595:17" pos:end="597:60">

                <expr_stmt pos:start="595:17" pos:end="595:46"><expr pos:start="595:17" pos:end="595:45"><name pos:start="595:17" pos:end="595:19">tmp</name> <operator pos:start="595:21" pos:end="595:21">=</operator> <name pos:start="595:23" pos:end="595:36"><name pos:start="595:23" pos:end="595:27">temps</name><index pos:start="595:28" pos:end="595:36">[<expr pos:start="595:29" pos:end="595:35"><name pos:start="595:29" pos:end="595:35"><name pos:start="595:29" pos:end="595:32">args</name><index pos:start="595:33" pos:end="595:35">[<expr pos:start="595:34" pos:end="595:34"><literal type="number" pos:start="595:34" pos:end="595:34">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="595:37" pos:end="595:37">.</operator><name pos:start="595:38" pos:end="595:40">val</name> <operator pos:start="595:42" pos:end="595:42">&amp;</operator> <literal type="number" pos:start="595:44" pos:end="595:45">63</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:60"><expr pos:start="597:17" pos:end="597:59"><name pos:start="597:17" pos:end="597:20">mask</name> <operator pos:start="597:22" pos:end="597:22">=</operator> <operator pos:start="597:24" pos:end="597:24">(</operator><name pos:start="597:25" pos:end="597:32">uint64_t</name><operator pos:start="597:33" pos:end="597:33">)</operator><name pos:start="597:34" pos:end="597:47"><name pos:start="597:34" pos:end="597:38">temps</name><index pos:start="597:39" pos:end="597:47">[<expr pos:start="597:40" pos:end="597:46"><name pos:start="597:40" pos:end="597:46"><name pos:start="597:40" pos:end="597:43">args</name><index pos:start="597:44" pos:end="597:46">[<expr pos:start="597:45" pos:end="597:45"><literal type="number" pos:start="597:45" pos:end="597:45">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="597:48" pos:end="597:48">.</operator><name pos:start="597:49" pos:end="597:52">mask</name> <operator pos:start="597:54" pos:end="597:55">&gt;&gt;</operator> <name pos:start="597:57" pos:end="597:59">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="601:13" pos:end="601:18">break;</break>



        <case pos:start="605:9" pos:end="605:36">case <expr pos:start="605:14" pos:end="605:35"><name pos:start="605:14" pos:end="605:35">INDEX_op_trunc_shr_i32</name></expr>:</case>

            <expr_stmt pos:start="607:13" pos:end="607:60"><expr pos:start="607:13" pos:end="607:59"><name pos:start="607:13" pos:end="607:16">mask</name> <operator pos:start="607:18" pos:end="607:18">=</operator> <operator pos:start="607:20" pos:end="607:20">(</operator><name pos:start="607:21" pos:end="607:28">uint64_t</name><operator pos:start="607:29" pos:end="607:29">)</operator><name pos:start="607:30" pos:end="607:43"><name pos:start="607:30" pos:end="607:34">temps</name><index pos:start="607:35" pos:end="607:43">[<expr pos:start="607:36" pos:end="607:42"><name pos:start="607:36" pos:end="607:42"><name pos:start="607:36" pos:end="607:39">args</name><index pos:start="607:40" pos:end="607:42">[<expr pos:start="607:41" pos:end="607:41"><literal type="number" pos:start="607:41" pos:end="607:41">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="607:44" pos:end="607:44">.</operator><name pos:start="607:45" pos:end="607:48">mask</name> <operator pos:start="607:50" pos:end="607:51">&gt;&gt;</operator> <name pos:start="607:53" pos:end="607:59"><name pos:start="607:53" pos:end="607:56">args</name><index pos:start="607:57" pos:end="607:59">[<expr pos:start="607:58" pos:end="607:58"><literal type="number" pos:start="607:58" pos:end="607:58">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="609:13" pos:end="609:18">break;</break>



        <expr_stmt pos:start="613:9" pos:end="613:27"><expr pos:start="613:9" pos:end="613:27"><call pos:start="613:9" pos:end="613:26"><name pos:start="613:9" pos:end="613:21">CASE_OP_32_64</name><argument_list pos:start="613:22" pos:end="613:26">(<argument pos:start="613:23" pos:end="613:25"><expr pos:start="613:23" pos:end="613:25"><name pos:start="613:23" pos:end="613:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="613:27" pos:end="613:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="615:13" pos:end="621:13"><if pos:start="615:13" pos:end="621:13">if <condition pos:start="615:16" pos:end="615:55">(<expr pos:start="615:17" pos:end="615:54"><name pos:start="615:17" pos:end="615:30"><name pos:start="615:17" pos:end="615:21">temps</name><index pos:start="615:22" pos:end="615:30">[<expr pos:start="615:23" pos:end="615:29"><name pos:start="615:23" pos:end="615:29"><name pos:start="615:23" pos:end="615:26">args</name><index pos:start="615:27" pos:end="615:29">[<expr pos:start="615:28" pos:end="615:28"><literal type="number" pos:start="615:28" pos:end="615:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="615:31" pos:end="615:31">.</operator><name pos:start="615:32" pos:end="615:36">state</name> <operator pos:start="615:38" pos:end="615:39">==</operator> <name pos:start="615:41" pos:end="615:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="615:57" pos:end="621:13">{<block_content pos:start="617:17" pos:end="619:50">

                <expr_stmt pos:start="617:17" pos:end="617:69"><expr pos:start="617:17" pos:end="617:68"><name pos:start="617:17" pos:end="617:19">tmp</name> <operator pos:start="617:21" pos:end="617:21">=</operator> <name pos:start="617:23" pos:end="617:36"><name pos:start="617:23" pos:end="617:27">temps</name><index pos:start="617:28" pos:end="617:36">[<expr pos:start="617:29" pos:end="617:35"><name pos:start="617:29" pos:end="617:35"><name pos:start="617:29" pos:end="617:32">args</name><index pos:start="617:33" pos:end="617:35">[<expr pos:start="617:34" pos:end="617:34"><literal type="number" pos:start="617:34" pos:end="617:34">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="617:37" pos:end="617:37">.</operator><name pos:start="617:38" pos:end="617:40">val</name> <operator pos:start="617:42" pos:end="617:42">&amp;</operator> <operator pos:start="617:44" pos:end="617:44">(</operator><name pos:start="617:45" pos:end="617:63">TCG_TARGET_REG_BITS</name> <operator pos:start="617:65" pos:end="617:65">-</operator> <literal type="number" pos:start="617:67" pos:end="617:67">1</literal><operator pos:start="617:68" pos:end="617:68">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="619:17" pos:end="619:50"><expr pos:start="619:17" pos:end="619:49"><name pos:start="619:17" pos:end="619:20">mask</name> <operator pos:start="619:22" pos:end="619:22">=</operator> <name pos:start="619:24" pos:end="619:37"><name pos:start="619:24" pos:end="619:28">temps</name><index pos:start="619:29" pos:end="619:37">[<expr pos:start="619:30" pos:end="619:36"><name pos:start="619:30" pos:end="619:36"><name pos:start="619:30" pos:end="619:33">args</name><index pos:start="619:34" pos:end="619:36">[<expr pos:start="619:35" pos:end="619:35"><literal type="number" pos:start="619:35" pos:end="619:35">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="619:38" pos:end="619:38">.</operator><name pos:start="619:39" pos:end="619:42">mask</name> <operator pos:start="619:44" pos:end="619:45">&lt;&lt;</operator> <name pos:start="619:47" pos:end="619:49">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="623:13" pos:end="623:18">break;</break>



        <expr_stmt pos:start="627:9" pos:end="631:65"><expr pos:start="627:9" pos:end="631:64"><call pos:start="627:9" pos:end="627:26"><name pos:start="627:9" pos:end="627:21">CASE_OP_32_64</name><argument_list pos:start="627:22" pos:end="627:26">(<argument pos:start="627:23" pos:end="627:25"><expr pos:start="627:23" pos:end="627:25"><name pos:start="627:23" pos:end="627:25">neg</name></expr></argument>)</argument_list></call><operator pos:start="627:27" pos:end="627:27">:</operator>

            <comment type="block" pos:start="629:13" pos:end="629:66">/* Set to 1 all bits to the left of the rightmost.  */</comment>

            <name pos:start="631:13" pos:end="631:16">mask</name> <operator pos:start="631:18" pos:end="631:18">=</operator> <operator pos:start="631:20" pos:end="631:20">-</operator><operator pos:start="631:21" pos:end="631:21">(</operator><name pos:start="631:22" pos:end="631:35"><name pos:start="631:22" pos:end="631:26">temps</name><index pos:start="631:27" pos:end="631:35">[<expr pos:start="631:28" pos:end="631:34"><name pos:start="631:28" pos:end="631:34"><name pos:start="631:28" pos:end="631:31">args</name><index pos:start="631:32" pos:end="631:34">[<expr pos:start="631:33" pos:end="631:33"><literal type="number" pos:start="631:33" pos:end="631:33">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="631:36" pos:end="631:36">.</operator><name pos:start="631:37" pos:end="631:40">mask</name> <operator pos:start="631:42" pos:end="631:42">&amp;</operator> <operator pos:start="631:44" pos:end="631:44">-</operator><name pos:start="631:45" pos:end="631:58"><name pos:start="631:45" pos:end="631:49">temps</name><index pos:start="631:50" pos:end="631:58">[<expr pos:start="631:51" pos:end="631:57"><name pos:start="631:51" pos:end="631:57"><name pos:start="631:51" pos:end="631:54">args</name><index pos:start="631:55" pos:end="631:57">[<expr pos:start="631:56" pos:end="631:56"><literal type="number" pos:start="631:56" pos:end="631:56">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="631:59" pos:end="631:59">.</operator><name pos:start="631:60" pos:end="631:63">mask</name><operator pos:start="631:64" pos:end="631:64">)</operator></expr>;</expr_stmt>

            <break pos:start="633:13" pos:end="633:18">break;</break>



        <expr_stmt pos:start="637:9" pos:end="641:50"><expr pos:start="637:9" pos:end="641:49"><call pos:start="637:9" pos:end="637:30"><name pos:start="637:9" pos:end="637:21">CASE_OP_32_64</name><argument_list pos:start="637:22" pos:end="637:30">(<argument pos:start="637:23" pos:end="637:29"><expr pos:start="637:23" pos:end="637:29"><name pos:start="637:23" pos:end="637:29">deposit</name></expr></argument>)</argument_list></call><operator pos:start="637:31" pos:end="637:31">:</operator>

            <name pos:start="639:13" pos:end="639:16">mask</name> <operator pos:start="639:18" pos:end="639:18">=</operator> <call pos:start="639:20" pos:end="641:49"><name pos:start="639:20" pos:end="639:28">deposit64</name><argument_list pos:start="639:29" pos:end="641:49">(<argument pos:start="639:30" pos:end="639:48"><expr pos:start="639:30" pos:end="639:48"><name pos:start="639:30" pos:end="639:43"><name pos:start="639:30" pos:end="639:34">temps</name><index pos:start="639:35" pos:end="639:43">[<expr pos:start="639:36" pos:end="639:42"><name pos:start="639:36" pos:end="639:42"><name pos:start="639:36" pos:end="639:39">args</name><index pos:start="639:40" pos:end="639:42">[<expr pos:start="639:41" pos:end="639:41"><literal type="number" pos:start="639:41" pos:end="639:41">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="639:44" pos:end="639:44">.</operator><name pos:start="639:45" pos:end="639:48">mask</name></expr></argument>, <argument pos:start="639:51" pos:end="639:57"><expr pos:start="639:51" pos:end="639:57"><name pos:start="639:51" pos:end="639:57"><name pos:start="639:51" pos:end="639:54">args</name><index pos:start="639:55" pos:end="639:57">[<expr pos:start="639:56" pos:end="639:56"><literal type="number" pos:start="639:56" pos:end="639:56">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="639:60" pos:end="639:66"><expr pos:start="639:60" pos:end="639:66"><name pos:start="639:60" pos:end="639:66"><name pos:start="639:60" pos:end="639:63">args</name><index pos:start="639:64" pos:end="639:66">[<expr pos:start="639:65" pos:end="639:65"><literal type="number" pos:start="639:65" pos:end="639:65">4</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="641:30" pos:end="641:48"><expr pos:start="641:30" pos:end="641:48"><name pos:start="641:30" pos:end="641:43"><name pos:start="641:30" pos:end="641:34">temps</name><index pos:start="641:35" pos:end="641:43">[<expr pos:start="641:36" pos:end="641:42"><name pos:start="641:36" pos:end="641:42"><name pos:start="641:36" pos:end="641:39">args</name><index pos:start="641:40" pos:end="641:42">[<expr pos:start="641:41" pos:end="641:41"><literal type="number" pos:start="641:41" pos:end="641:41">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="641:44" pos:end="641:44">.</operator><name pos:start="641:45" pos:end="641:48">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="643:13" pos:end="643:18">break;</break>



        <expr_stmt pos:start="647:9" pos:end="651:61"><expr pos:start="647:9" pos:end="651:60"><call pos:start="647:9" pos:end="647:25"><name pos:start="647:9" pos:end="647:21">CASE_OP_32_64</name><argument_list pos:start="647:22" pos:end="647:25">(<argument pos:start="647:23" pos:end="647:24"><expr pos:start="647:23" pos:end="647:24"><name pos:start="647:23" pos:end="647:24">or</name></expr></argument>)</argument_list></call><operator pos:start="647:26" pos:end="647:26">:</operator>

        <call pos:start="649:9" pos:end="649:26"><name pos:start="649:9" pos:end="649:21">CASE_OP_32_64</name><argument_list pos:start="649:22" pos:end="649:26">(<argument pos:start="649:23" pos:end="649:25"><expr pos:start="649:23" pos:end="649:25"><name pos:start="649:23" pos:end="649:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="649:27" pos:end="649:27">:</operator>

            <name pos:start="651:13" pos:end="651:16">mask</name> <operator pos:start="651:18" pos:end="651:18">=</operator> <name pos:start="651:20" pos:end="651:33"><name pos:start="651:20" pos:end="651:24">temps</name><index pos:start="651:25" pos:end="651:33">[<expr pos:start="651:26" pos:end="651:32"><name pos:start="651:26" pos:end="651:32"><name pos:start="651:26" pos:end="651:29">args</name><index pos:start="651:30" pos:end="651:32">[<expr pos:start="651:31" pos:end="651:31"><literal type="number" pos:start="651:31" pos:end="651:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="651:34" pos:end="651:34">.</operator><name pos:start="651:35" pos:end="651:38">mask</name> <operator pos:start="651:40" pos:end="651:40">|</operator> <name pos:start="651:42" pos:end="651:55"><name pos:start="651:42" pos:end="651:46">temps</name><index pos:start="651:47" pos:end="651:55">[<expr pos:start="651:48" pos:end="651:54"><name pos:start="651:48" pos:end="651:54"><name pos:start="651:48" pos:end="651:51">args</name><index pos:start="651:52" pos:end="651:54">[<expr pos:start="651:53" pos:end="651:53"><literal type="number" pos:start="651:53" pos:end="651:53">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="651:56" pos:end="651:56">.</operator><name pos:start="651:57" pos:end="651:60">mask</name></expr>;</expr_stmt>

            <break pos:start="653:13" pos:end="653:18">break;</break>



        <expr_stmt pos:start="657:9" pos:end="657:31"><expr pos:start="657:9" pos:end="657:31"><call pos:start="657:9" pos:end="657:30"><name pos:start="657:9" pos:end="657:21">CASE_OP_32_64</name><argument_list pos:start="657:22" pos:end="657:30">(<argument pos:start="657:23" pos:end="657:29"><expr pos:start="657:23" pos:end="657:29"><name pos:start="657:23" pos:end="657:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="657:31" pos:end="657:31">:</operator></expr></expr_stmt>

        <case pos:start="659:9" pos:end="659:35">case <expr pos:start="659:14" pos:end="659:34"><name pos:start="659:14" pos:end="659:34">INDEX_op_setcond2_i32</name></expr>:</case>

            <expr_stmt pos:start="661:13" pos:end="661:21"><expr pos:start="661:13" pos:end="661:20"><name pos:start="661:13" pos:end="661:16">mask</name> <operator pos:start="661:18" pos:end="661:18">=</operator> <literal type="number" pos:start="661:20" pos:end="661:20">1</literal></expr>;</expr_stmt>

            <break pos:start="663:13" pos:end="663:18">break;</break>



        <expr_stmt pos:start="667:9" pos:end="669:61"><expr pos:start="667:9" pos:end="669:60"><call pos:start="667:9" pos:end="667:30"><name pos:start="667:9" pos:end="667:21">CASE_OP_32_64</name><argument_list pos:start="667:22" pos:end="667:30">(<argument pos:start="667:23" pos:end="667:29"><expr pos:start="667:23" pos:end="667:29"><name pos:start="667:23" pos:end="667:29">movcond</name></expr></argument>)</argument_list></call><operator pos:start="667:31" pos:end="667:31">:</operator>

            <name pos:start="669:13" pos:end="669:16">mask</name> <operator pos:start="669:18" pos:end="669:18">=</operator> <name pos:start="669:20" pos:end="669:33"><name pos:start="669:20" pos:end="669:24">temps</name><index pos:start="669:25" pos:end="669:33">[<expr pos:start="669:26" pos:end="669:32"><name pos:start="669:26" pos:end="669:32"><name pos:start="669:26" pos:end="669:29">args</name><index pos:start="669:30" pos:end="669:32">[<expr pos:start="669:31" pos:end="669:31"><literal type="number" pos:start="669:31" pos:end="669:31">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="669:34" pos:end="669:34">.</operator><name pos:start="669:35" pos:end="669:38">mask</name> <operator pos:start="669:40" pos:end="669:40">|</operator> <name pos:start="669:42" pos:end="669:55"><name pos:start="669:42" pos:end="669:46">temps</name><index pos:start="669:47" pos:end="669:55">[<expr pos:start="669:48" pos:end="669:54"><name pos:start="669:48" pos:end="669:54"><name pos:start="669:48" pos:end="669:51">args</name><index pos:start="669:52" pos:end="669:54">[<expr pos:start="669:53" pos:end="669:53"><literal type="number" pos:start="669:53" pos:end="669:53">4</literal></expr>]</index></name></expr>]</index></name><operator pos:start="669:56" pos:end="669:56">.</operator><name pos:start="669:57" pos:end="669:60">mask</name></expr>;</expr_stmt>

            <break pos:start="671:13" pos:end="671:18">break;</break>



        <expr_stmt pos:start="675:9" pos:end="677:24"><expr pos:start="675:9" pos:end="677:23"><call pos:start="675:9" pos:end="675:27"><name pos:start="675:9" pos:end="675:21">CASE_OP_32_64</name><argument_list pos:start="675:22" pos:end="675:27">(<argument pos:start="675:23" pos:end="675:26"><expr pos:start="675:23" pos:end="675:26"><name pos:start="675:23" pos:end="675:26">ld8u</name></expr></argument>)</argument_list></call><operator pos:start="675:28" pos:end="675:28">:</operator>

            <name pos:start="677:13" pos:end="677:16">mask</name> <operator pos:start="677:18" pos:end="677:18">=</operator> <literal type="number" pos:start="677:20" pos:end="677:23">0xff</literal></expr>;</expr_stmt>

            <break pos:start="679:13" pos:end="679:18">break;</break>

        <expr_stmt pos:start="681:9" pos:end="683:26"><expr pos:start="681:9" pos:end="683:25"><call pos:start="681:9" pos:end="681:28"><name pos:start="681:9" pos:end="681:21">CASE_OP_32_64</name><argument_list pos:start="681:22" pos:end="681:28">(<argument pos:start="681:23" pos:end="681:27"><expr pos:start="681:23" pos:end="681:27"><name pos:start="681:23" pos:end="681:27">ld16u</name></expr></argument>)</argument_list></call><operator pos:start="681:29" pos:end="681:29">:</operator>

            <name pos:start="683:13" pos:end="683:16">mask</name> <operator pos:start="683:18" pos:end="683:18">=</operator> <literal type="number" pos:start="683:20" pos:end="683:25">0xffff</literal></expr>;</expr_stmt>

            <break pos:start="685:13" pos:end="685:18">break;</break>

        <case pos:start="687:9" pos:end="687:32">case <expr pos:start="687:14" pos:end="687:31"><name pos:start="687:14" pos:end="687:31">INDEX_op_ld32u_i64</name></expr>:</case>

            <expr_stmt pos:start="689:13" pos:end="689:31"><expr pos:start="689:13" pos:end="689:30"><name pos:start="689:13" pos:end="689:16">mask</name> <operator pos:start="689:18" pos:end="689:18">=</operator> <literal type="number" pos:start="689:20" pos:end="689:30">0xffffffffu</literal></expr>;</expr_stmt>

            <break pos:start="691:13" pos:end="691:18">break;</break>



        <expr_stmt pos:start="695:9" pos:end="707:17"><expr pos:start="695:9" pos:end="707:17"><call pos:start="695:9" pos:end="695:30"><name pos:start="695:9" pos:end="695:21">CASE_OP_32_64</name><argument_list pos:start="695:22" pos:end="695:30">(<argument pos:start="695:23" pos:end="695:29"><expr pos:start="695:23" pos:end="695:29"><name pos:start="695:23" pos:end="695:29">qemu_ld</name></expr></argument>)</argument_list></call><operator pos:start="695:31" pos:end="695:31">:</operator>

            <block pos:start="697:13" pos:end="707:17">{

                <expr pos:start="699:17" pos:end="699:58"><name pos:start="699:17" pos:end="699:27">TCGMemOpIdx</name> <name pos:start="699:29" pos:end="699:30">oi</name> <operator pos:start="699:32" pos:end="699:32">=</operator> <name pos:start="699:34" pos:end="699:58"><name pos:start="699:34" pos:end="699:37">args</name><index pos:start="699:38" pos:end="699:58">[<expr pos:start="699:39" pos:end="699:57"><name pos:start="699:39" pos:end="699:46">nb_oargs</name> <operator pos:start="699:48" pos:end="699:48">+</operator> <name pos:start="699:50" pos:end="699:57">nb_iargs</name></expr>]</index></name></expr>;

                <expr pos:start="701:17" pos:end="701:44"><name pos:start="701:17" pos:end="701:24">TCGMemOp</name> <name pos:start="701:26" pos:end="701:28">mop</name> <operator pos:start="701:30" pos:end="701:30">=</operator> <call pos:start="701:32" pos:end="701:44"><name pos:start="701:32" pos:end="701:40">get_memop</name><argument_list pos:start="701:41" pos:end="701:44">(<argument pos:start="701:42" pos:end="701:43"><expr pos:start="701:42" pos:end="701:43"><name pos:start="701:42" pos:end="701:43">oi</name></expr></argument>)</argument_list></call></expr>;

                <if_stmt pos:start="703:17" pos:end="705:70"><if pos:start="703:17" pos:end="705:70">if <condition pos:start="703:20" pos:end="703:37">(<expr pos:start="703:21" pos:end="703:36"><operator pos:start="703:21" pos:end="703:21">!</operator><operator pos:start="703:22" pos:end="703:22">(</operator><name pos:start="703:23" pos:end="703:25">mop</name> <operator pos:start="703:27" pos:end="703:27">&amp;</operator> <name pos:start="703:29" pos:end="703:35">MO_SIGN</name><operator pos:start="703:36" pos:end="703:36">)</operator></expr>)</condition> <block pos:start="703:39" pos:end="705:70">{<block_content pos:start="705:21" pos:end="705:70">

                    <expr_stmt pos:start="705:21" pos:end="705:70"><expr pos:start="705:21" pos:end="705:69"><name pos:start="705:21" pos:end="705:24">mask</name> <operator pos:start="705:26" pos:end="705:26">=</operator> <operator pos:start="705:28" pos:end="705:28">(</operator><literal type="number" pos:start="705:29" pos:end="705:32">2ULL</literal> <operator pos:start="705:34" pos:end="705:35">&lt;&lt;</operator> <operator pos:start="705:37" pos:end="705:37">(</operator><operator pos:start="705:38" pos:end="705:38">(</operator><literal type="number" pos:start="705:39" pos:end="705:39">8</literal> <operator pos:start="705:41" pos:end="705:42">&lt;&lt;</operator> <operator pos:start="705:44" pos:end="705:44">(</operator><name pos:start="705:45" pos:end="705:47">mop</name> <operator pos:start="705:49" pos:end="705:49">&amp;</operator> <name pos:start="705:51" pos:end="705:57">MO_SIZE</name><operator pos:start="705:58" pos:end="705:58">)</operator><operator pos:start="705:59" pos:end="705:59">)</operator> <operator pos:start="705:61" pos:end="705:61">-</operator> <literal type="number" pos:start="705:63" pos:end="705:63">1</literal><operator pos:start="705:64" pos:end="705:64">)</operator><operator pos:start="705:65" pos:end="705:65">)</operator> <operator pos:start="705:67" pos:end="705:67">-</operator> <literal type="number" pos:start="705:69" pos:end="705:69">1</literal></expr>;</expr_stmt>

                <expr_stmt/></block_content></block></if></if_stmt>}</block></expr></expr_stmt>

            </block_content>}</block></switch>

            <break pos:start="711:13" pos:end="711:18">break;</break>



        <default pos:start="715:9" pos:end="715:16">default:</default>

            <break pos:start="717:13" pos:end="717:18">break;</break>

        </block_content>}</block></function>



        <comment type="block" pos:start="723:9" pos:end="727:65">/* 32-bit ops generate 32-bit results.  For the result is zero test

           below, we can ignore high bits, but for further optimizations we

           need to record that the high bits contain garbage.  */</comment>

        <expr_stmt pos:start="729:9" pos:end="729:24"><expr pos:start="729:9" pos:end="729:23"><name pos:start="729:9" pos:end="729:16">partmask</name> <operator pos:start="729:18" pos:end="729:18">=</operator> <name pos:start="729:20" pos:end="729:23">mask</name></expr>;</expr_stmt>

        <if_stmt pos:start="731:9" pos:end="739:9"><if pos:start="731:9" pos:end="739:9">if <condition pos:start="731:12" pos:end="731:42">(<expr pos:start="731:13" pos:end="731:41"><operator pos:start="731:13" pos:end="731:13">!</operator><operator pos:start="731:14" pos:end="731:14">(</operator><name pos:start="731:15" pos:end="731:24"><name pos:start="731:15" pos:end="731:17">def</name><operator pos:start="731:18" pos:end="731:19">-&gt;</operator><name pos:start="731:20" pos:end="731:24">flags</name></name> <operator pos:start="731:26" pos:end="731:26">&amp;</operator> <name pos:start="731:28" pos:end="731:40">TCG_OPF_64BIT</name><operator pos:start="731:41" pos:end="731:41">)</operator></expr>)</condition> <block pos:start="731:44" pos:end="739:9">{<block_content pos:start="733:13" pos:end="737:36">

            <expr_stmt pos:start="733:13" pos:end="733:51"><expr pos:start="733:13" pos:end="733:50"><name pos:start="733:13" pos:end="733:16">mask</name> <operator pos:start="733:18" pos:end="733:19">|=</operator> <operator pos:start="733:21" pos:end="733:21">~</operator><operator pos:start="733:22" pos:end="733:22">(</operator><name pos:start="733:23" pos:end="733:38">tcg_target_ulong</name><operator pos:start="733:39" pos:end="733:39">)</operator><literal type="number" pos:start="733:40" pos:end="733:50">0xffffffffu</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="735:13" pos:end="735:36"><expr pos:start="735:13" pos:end="735:35"><name pos:start="735:13" pos:end="735:20">partmask</name> <operator pos:start="735:22" pos:end="735:23">&amp;=</operator> <literal type="number" pos:start="735:25" pos:end="735:35">0xffffffffu</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="737:13" pos:end="737:36"><expr pos:start="737:13" pos:end="737:35"><name pos:start="737:13" pos:end="737:20">affected</name> <operator pos:start="737:22" pos:end="737:23">&amp;=</operator> <literal type="number" pos:start="737:25" pos:end="737:35">0xffffffffu</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="743:9" pos:end="751:9"><if pos:start="743:9" pos:end="751:9">if <condition pos:start="743:12" pos:end="743:26">(<expr pos:start="743:13" pos:end="743:25"><name pos:start="743:13" pos:end="743:20">partmask</name> <operator pos:start="743:22" pos:end="743:23">==</operator> <literal type="number" pos:start="743:25" pos:end="743:25">0</literal></expr>)</condition> <block pos:start="743:28" pos:end="751:9">{<block_content pos:start="745:13" pos:end="749:21">

            <expr_stmt pos:start="745:13" pos:end="745:34"><expr pos:start="745:13" pos:end="745:33"><call pos:start="745:13" pos:end="745:33"><name pos:start="745:13" pos:end="745:18">assert</name><argument_list pos:start="745:19" pos:end="745:33">(<argument pos:start="745:20" pos:end="745:32"><expr pos:start="745:20" pos:end="745:32"><name pos:start="745:20" pos:end="745:27">nb_oargs</name> <operator pos:start="745:29" pos:end="745:30">==</operator> <literal type="number" pos:start="745:32" pos:end="745:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="747:13" pos:end="747:54"><expr pos:start="747:13" pos:end="747:53"><call pos:start="747:13" pos:end="747:53"><name pos:start="747:13" pos:end="747:28">tcg_opt_gen_movi</name><argument_list pos:start="747:29" pos:end="747:53">(<argument pos:start="747:30" pos:end="747:30"><expr pos:start="747:30" pos:end="747:30"><name pos:start="747:30" pos:end="747:30">s</name></expr></argument>, <argument pos:start="747:33" pos:end="747:34"><expr pos:start="747:33" pos:end="747:34"><name pos:start="747:33" pos:end="747:34">op</name></expr></argument>, <argument pos:start="747:37" pos:end="747:40"><expr pos:start="747:37" pos:end="747:40"><name pos:start="747:37" pos:end="747:40">args</name></expr></argument>, <argument pos:start="747:43" pos:end="747:49"><expr pos:start="747:43" pos:end="747:49"><name pos:start="747:43" pos:end="747:49"><name pos:start="747:43" pos:end="747:46">args</name><index pos:start="747:47" pos:end="747:49">[<expr pos:start="747:48" pos:end="747:48"><literal type="number" pos:start="747:48" pos:end="747:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="747:52" pos:end="747:52"><expr pos:start="747:52" pos:end="747:52"><literal type="number" pos:start="747:52" pos:end="747:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="749:13" pos:end="749:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="753:9" pos:end="761:9"><if pos:start="753:9" pos:end="761:9">if <condition pos:start="753:12" pos:end="753:26">(<expr pos:start="753:13" pos:end="753:25"><name pos:start="753:13" pos:end="753:20">affected</name> <operator pos:start="753:22" pos:end="753:23">==</operator> <literal type="number" pos:start="753:25" pos:end="753:25">0</literal></expr>)</condition> <block pos:start="753:28" pos:end="761:9">{<block_content pos:start="755:13" pos:end="759:21">

            <expr_stmt pos:start="755:13" pos:end="755:34"><expr pos:start="755:13" pos:end="755:33"><call pos:start="755:13" pos:end="755:33"><name pos:start="755:13" pos:end="755:18">assert</name><argument_list pos:start="755:19" pos:end="755:33">(<argument pos:start="755:20" pos:end="755:32"><expr pos:start="755:20" pos:end="755:32"><name pos:start="755:20" pos:end="755:27">nb_oargs</name> <operator pos:start="755:29" pos:end="755:30">==</operator> <literal type="number" pos:start="755:32" pos:end="755:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="757:13" pos:end="757:59"><expr pos:start="757:13" pos:end="757:58"><call pos:start="757:13" pos:end="757:58"><name pos:start="757:13" pos:end="757:27">tcg_opt_gen_mov</name><argument_list pos:start="757:28" pos:end="757:58">(<argument pos:start="757:29" pos:end="757:29"><expr pos:start="757:29" pos:end="757:29"><name pos:start="757:29" pos:end="757:29">s</name></expr></argument>, <argument pos:start="757:32" pos:end="757:33"><expr pos:start="757:32" pos:end="757:33"><name pos:start="757:32" pos:end="757:33">op</name></expr></argument>, <argument pos:start="757:36" pos:end="757:39"><expr pos:start="757:36" pos:end="757:39"><name pos:start="757:36" pos:end="757:39">args</name></expr></argument>, <argument pos:start="757:42" pos:end="757:48"><expr pos:start="757:42" pos:end="757:48"><name pos:start="757:42" pos:end="757:48"><name pos:start="757:42" pos:end="757:45">args</name><index pos:start="757:46" pos:end="757:48">[<expr pos:start="757:47" pos:end="757:47"><literal type="number" pos:start="757:47" pos:end="757:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="757:51" pos:end="757:57"><expr pos:start="757:51" pos:end="757:57"><name pos:start="757:51" pos:end="757:57"><name pos:start="757:51" pos:end="757:54">args</name><index pos:start="757:55" pos:end="757:57">[<expr pos:start="757:56" pos:end="757:56"><literal type="number" pos:start="757:56" pos:end="757:56">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="759:13" pos:end="759:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="765:9" pos:end="765:69">/* Simplify expression for "op r, a, 0 =&gt; movi r, 0" cases */</comment>

        <switch pos:start="767:9" pos:end="793:9">switch <condition pos:start="767:16" pos:end="767:20">(<expr pos:start="767:17" pos:end="767:19"><name pos:start="767:17" pos:end="767:19">opc</name></expr>)</condition> <block pos:start="767:22" pos:end="793:9">{<block_content pos:start="769:9" pos:end="791:18">

        <expr_stmt pos:start="769:9" pos:end="775:29"><expr pos:start="769:9" pos:end="775:29"><call pos:start="769:9" pos:end="769:26"><name pos:start="769:9" pos:end="769:21">CASE_OP_32_64</name><argument_list pos:start="769:22" pos:end="769:26">(<argument pos:start="769:23" pos:end="769:25"><expr pos:start="769:23" pos:end="769:25"><name pos:start="769:23" pos:end="769:25">and</name></expr></argument>)</argument_list></call><operator pos:start="769:27" pos:end="769:27">:</operator>

        <call pos:start="771:9" pos:end="771:26"><name pos:start="771:9" pos:end="771:21">CASE_OP_32_64</name><argument_list pos:start="771:22" pos:end="771:26">(<argument pos:start="771:23" pos:end="771:25"><expr pos:start="771:23" pos:end="771:25"><name pos:start="771:23" pos:end="771:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="771:27" pos:end="771:27">:</operator>

        <call pos:start="773:9" pos:end="773:28"><name pos:start="773:9" pos:end="773:21">CASE_OP_32_64</name><argument_list pos:start="773:22" pos:end="773:28">(<argument pos:start="773:23" pos:end="773:27"><expr pos:start="773:23" pos:end="773:27"><name pos:start="773:23" pos:end="773:27">muluh</name></expr></argument>)</argument_list></call><operator pos:start="773:29" pos:end="773:29">:</operator>

        <call pos:start="775:9" pos:end="775:28"><name pos:start="775:9" pos:end="775:21">CASE_OP_32_64</name><argument_list pos:start="775:22" pos:end="775:28">(<argument pos:start="775:23" pos:end="775:27"><expr pos:start="775:23" pos:end="775:27"><name pos:start="775:23" pos:end="775:27">mulsh</name></expr></argument>)</argument_list></call><operator pos:start="775:29" pos:end="775:29">:</operator></expr></expr_stmt>

            <if_stmt pos:start="777:13" pos:end="785:13"><if pos:start="777:13" pos:end="785:13">if <condition pos:start="777:16" pos:end="779:44">(<expr pos:start="777:17" pos:end="779:43"><operator pos:start="777:17" pos:end="777:17">(</operator><name pos:start="777:18" pos:end="777:31"><name pos:start="777:18" pos:end="777:22">temps</name><index pos:start="777:23" pos:end="777:31">[<expr pos:start="777:24" pos:end="777:30"><name pos:start="777:24" pos:end="777:30"><name pos:start="777:24" pos:end="777:27">args</name><index pos:start="777:28" pos:end="777:30">[<expr pos:start="777:29" pos:end="777:29"><literal type="number" pos:start="777:29" pos:end="777:29">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="777:32" pos:end="777:32">.</operator><name pos:start="777:33" pos:end="777:37">state</name> <operator pos:start="777:39" pos:end="777:40">==</operator> <name pos:start="777:42" pos:end="777:55">TCG_TEMP_CONST</name>

                <operator pos:start="779:17" pos:end="779:18">&amp;&amp;</operator> <name pos:start="779:20" pos:end="779:33"><name pos:start="779:20" pos:end="779:24">temps</name><index pos:start="779:25" pos:end="779:33">[<expr pos:start="779:26" pos:end="779:32"><name pos:start="779:26" pos:end="779:32"><name pos:start="779:26" pos:end="779:29">args</name><index pos:start="779:30" pos:end="779:32">[<expr pos:start="779:31" pos:end="779:31"><literal type="number" pos:start="779:31" pos:end="779:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="779:34" pos:end="779:34">.</operator><name pos:start="779:35" pos:end="779:37">val</name> <operator pos:start="779:39" pos:end="779:40">==</operator> <literal type="number" pos:start="779:42" pos:end="779:42">0</literal><operator pos:start="779:43" pos:end="779:43">)</operator></expr>)</condition> <block pos:start="779:46" pos:end="785:13">{<block_content pos:start="781:17" pos:end="783:25">

                <expr_stmt pos:start="781:17" pos:end="781:58"><expr pos:start="781:17" pos:end="781:57"><call pos:start="781:17" pos:end="781:57"><name pos:start="781:17" pos:end="781:32">tcg_opt_gen_movi</name><argument_list pos:start="781:33" pos:end="781:57">(<argument pos:start="781:34" pos:end="781:34"><expr pos:start="781:34" pos:end="781:34"><name pos:start="781:34" pos:end="781:34">s</name></expr></argument>, <argument pos:start="781:37" pos:end="781:38"><expr pos:start="781:37" pos:end="781:38"><name pos:start="781:37" pos:end="781:38">op</name></expr></argument>, <argument pos:start="781:41" pos:end="781:44"><expr pos:start="781:41" pos:end="781:44"><name pos:start="781:41" pos:end="781:44">args</name></expr></argument>, <argument pos:start="781:47" pos:end="781:53"><expr pos:start="781:47" pos:end="781:53"><name pos:start="781:47" pos:end="781:53"><name pos:start="781:47" pos:end="781:50">args</name><index pos:start="781:51" pos:end="781:53">[<expr pos:start="781:52" pos:end="781:52"><literal type="number" pos:start="781:52" pos:end="781:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="781:56" pos:end="781:56"><expr pos:start="781:56" pos:end="781:56"><literal type="number" pos:start="781:56" pos:end="781:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="783:17" pos:end="783:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="787:13" pos:end="787:18">break;</break>

        <default pos:start="789:9" pos:end="789:16">default:</default>

            <break pos:start="791:13" pos:end="791:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="797:9" pos:end="797:68">/* Simplify expression for "op r, a, a =&gt; mov r, a" cases */</comment>

        <switch pos:start="799:9" pos:end="819:9">switch <condition pos:start="799:16" pos:end="799:20">(<expr pos:start="799:17" pos:end="799:19"><name pos:start="799:17" pos:end="799:19">opc</name></expr>)</condition> <block pos:start="799:22" pos:end="819:9">{<block_content pos:start="801:9" pos:end="817:18">

        <expr_stmt pos:start="801:9" pos:end="803:27"><expr pos:start="801:9" pos:end="803:27"><call pos:start="801:9" pos:end="801:25"><name pos:start="801:9" pos:end="801:21">CASE_OP_32_64</name><argument_list pos:start="801:22" pos:end="801:25">(<argument pos:start="801:23" pos:end="801:24"><expr pos:start="801:23" pos:end="801:24"><name pos:start="801:23" pos:end="801:24">or</name></expr></argument>)</argument_list></call><operator pos:start="801:26" pos:end="801:26">:</operator>

        <call pos:start="803:9" pos:end="803:26"><name pos:start="803:9" pos:end="803:21">CASE_OP_32_64</name><argument_list pos:start="803:22" pos:end="803:26">(<argument pos:start="803:23" pos:end="803:25"><expr pos:start="803:23" pos:end="803:25"><name pos:start="803:23" pos:end="803:25">and</name></expr></argument>)</argument_list></call><operator pos:start="803:27" pos:end="803:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="805:13" pos:end="811:13"><if pos:start="805:13" pos:end="811:13">if <condition pos:start="805:16" pos:end="805:51">(<expr pos:start="805:17" pos:end="805:50"><call pos:start="805:17" pos:end="805:50"><name pos:start="805:17" pos:end="805:32">temps_are_copies</name><argument_list pos:start="805:33" pos:end="805:50">(<argument pos:start="805:34" pos:end="805:40"><expr pos:start="805:34" pos:end="805:40"><name pos:start="805:34" pos:end="805:40"><name pos:start="805:34" pos:end="805:37">args</name><index pos:start="805:38" pos:end="805:40">[<expr pos:start="805:39" pos:end="805:39"><literal type="number" pos:start="805:39" pos:end="805:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="805:43" pos:end="805:49"><expr pos:start="805:43" pos:end="805:49"><name pos:start="805:43" pos:end="805:49"><name pos:start="805:43" pos:end="805:46">args</name><index pos:start="805:47" pos:end="805:49">[<expr pos:start="805:48" pos:end="805:48"><literal type="number" pos:start="805:48" pos:end="805:48">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="805:53" pos:end="811:13">{<block_content pos:start="807:17" pos:end="809:25">

                <expr_stmt pos:start="807:17" pos:end="807:63"><expr pos:start="807:17" pos:end="807:62"><call pos:start="807:17" pos:end="807:62"><name pos:start="807:17" pos:end="807:31">tcg_opt_gen_mov</name><argument_list pos:start="807:32" pos:end="807:62">(<argument pos:start="807:33" pos:end="807:33"><expr pos:start="807:33" pos:end="807:33"><name pos:start="807:33" pos:end="807:33">s</name></expr></argument>, <argument pos:start="807:36" pos:end="807:37"><expr pos:start="807:36" pos:end="807:37"><name pos:start="807:36" pos:end="807:37">op</name></expr></argument>, <argument pos:start="807:40" pos:end="807:43"><expr pos:start="807:40" pos:end="807:43"><name pos:start="807:40" pos:end="807:43">args</name></expr></argument>, <argument pos:start="807:46" pos:end="807:52"><expr pos:start="807:46" pos:end="807:52"><name pos:start="807:46" pos:end="807:52"><name pos:start="807:46" pos:end="807:49">args</name><index pos:start="807:50" pos:end="807:52">[<expr pos:start="807:51" pos:end="807:51"><literal type="number" pos:start="807:51" pos:end="807:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="807:55" pos:end="807:61"><expr pos:start="807:55" pos:end="807:61"><name pos:start="807:55" pos:end="807:61"><name pos:start="807:55" pos:end="807:58">args</name><index pos:start="807:59" pos:end="807:61">[<expr pos:start="807:60" pos:end="807:60"><literal type="number" pos:start="807:60" pos:end="807:60">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="809:17" pos:end="809:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="813:13" pos:end="813:18">break;</break>

        <default pos:start="815:9" pos:end="815:16">default:</default>

            <break pos:start="817:13" pos:end="817:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="823:9" pos:end="823:69">/* Simplify expression for "op r, a, a =&gt; movi r, 0" cases */</comment>

        <switch pos:start="825:9" pos:end="847:9">switch <condition pos:start="825:16" pos:end="825:20">(<expr pos:start="825:17" pos:end="825:19"><name pos:start="825:17" pos:end="825:19">opc</name></expr>)</condition> <block pos:start="825:22" pos:end="847:9">{<block_content pos:start="827:9" pos:end="845:18">

        <expr_stmt pos:start="827:9" pos:end="831:27"><expr pos:start="827:9" pos:end="831:27"><call pos:start="827:9" pos:end="827:27"><name pos:start="827:9" pos:end="827:21">CASE_OP_32_64</name><argument_list pos:start="827:22" pos:end="827:27">(<argument pos:start="827:23" pos:end="827:26"><expr pos:start="827:23" pos:end="827:26"><name pos:start="827:23" pos:end="827:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="827:28" pos:end="827:28">:</operator>

        <call pos:start="829:9" pos:end="829:26"><name pos:start="829:9" pos:end="829:21">CASE_OP_32_64</name><argument_list pos:start="829:22" pos:end="829:26">(<argument pos:start="829:23" pos:end="829:25"><expr pos:start="829:23" pos:end="829:25"><name pos:start="829:23" pos:end="829:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="829:27" pos:end="829:27">:</operator>

        <call pos:start="831:9" pos:end="831:26"><name pos:start="831:9" pos:end="831:21">CASE_OP_32_64</name><argument_list pos:start="831:22" pos:end="831:26">(<argument pos:start="831:23" pos:end="831:25"><expr pos:start="831:23" pos:end="831:25"><name pos:start="831:23" pos:end="831:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="831:27" pos:end="831:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="833:13" pos:end="839:13"><if pos:start="833:13" pos:end="839:13">if <condition pos:start="833:16" pos:end="833:51">(<expr pos:start="833:17" pos:end="833:50"><call pos:start="833:17" pos:end="833:50"><name pos:start="833:17" pos:end="833:32">temps_are_copies</name><argument_list pos:start="833:33" pos:end="833:50">(<argument pos:start="833:34" pos:end="833:40"><expr pos:start="833:34" pos:end="833:40"><name pos:start="833:34" pos:end="833:40"><name pos:start="833:34" pos:end="833:37">args</name><index pos:start="833:38" pos:end="833:40">[<expr pos:start="833:39" pos:end="833:39"><literal type="number" pos:start="833:39" pos:end="833:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="833:43" pos:end="833:49"><expr pos:start="833:43" pos:end="833:49"><name pos:start="833:43" pos:end="833:49"><name pos:start="833:43" pos:end="833:46">args</name><index pos:start="833:47" pos:end="833:49">[<expr pos:start="833:48" pos:end="833:48"><literal type="number" pos:start="833:48" pos:end="833:48">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="833:53" pos:end="839:13">{<block_content pos:start="835:17" pos:end="837:25">

                <expr_stmt pos:start="835:17" pos:end="835:58"><expr pos:start="835:17" pos:end="835:57"><call pos:start="835:17" pos:end="835:57"><name pos:start="835:17" pos:end="835:32">tcg_opt_gen_movi</name><argument_list pos:start="835:33" pos:end="835:57">(<argument pos:start="835:34" pos:end="835:34"><expr pos:start="835:34" pos:end="835:34"><name pos:start="835:34" pos:end="835:34">s</name></expr></argument>, <argument pos:start="835:37" pos:end="835:38"><expr pos:start="835:37" pos:end="835:38"><name pos:start="835:37" pos:end="835:38">op</name></expr></argument>, <argument pos:start="835:41" pos:end="835:44"><expr pos:start="835:41" pos:end="835:44"><name pos:start="835:41" pos:end="835:44">args</name></expr></argument>, <argument pos:start="835:47" pos:end="835:53"><expr pos:start="835:47" pos:end="835:53"><name pos:start="835:47" pos:end="835:53"><name pos:start="835:47" pos:end="835:50">args</name><index pos:start="835:51" pos:end="835:53">[<expr pos:start="835:52" pos:end="835:52"><literal type="number" pos:start="835:52" pos:end="835:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="835:56" pos:end="835:56"><expr pos:start="835:56" pos:end="835:56"><literal type="number" pos:start="835:56" pos:end="835:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="837:17" pos:end="837:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="841:13" pos:end="841:18">break;</break>

        <default pos:start="843:9" pos:end="843:16">default:</default>

            <break pos:start="845:13" pos:end="845:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="851:9" pos:end="855:71">/* Propagate constants through copy operations and do constant

           folding.  Constants will be substituted to arguments by register

           allocator where needed and possible.  Also detect copies. */</comment>

        <switch pos:start="857:9" pos:end="1503:9">switch <condition pos:start="857:16" pos:end="857:20">(<expr pos:start="857:17" pos:end="857:19"><name pos:start="857:17" pos:end="857:19">opc</name></expr>)</condition> <block pos:start="857:22" pos:end="1503:9">{<block_content pos:start="859:9" pos:end="1501:18">

        <expr_stmt pos:start="859:9" pos:end="861:59"><expr pos:start="859:9" pos:end="861:58"><call pos:start="859:9" pos:end="859:26"><name pos:start="859:9" pos:end="859:21">CASE_OP_32_64</name><argument_list pos:start="859:22" pos:end="859:26">(<argument pos:start="859:23" pos:end="859:25"><expr pos:start="859:23" pos:end="859:25"><name pos:start="859:23" pos:end="859:25">mov</name></expr></argument>)</argument_list></call><operator pos:start="859:27" pos:end="859:27">:</operator>

            <call pos:start="861:13" pos:end="861:58"><name pos:start="861:13" pos:end="861:27">tcg_opt_gen_mov</name><argument_list pos:start="861:28" pos:end="861:58">(<argument pos:start="861:29" pos:end="861:29"><expr pos:start="861:29" pos:end="861:29"><name pos:start="861:29" pos:end="861:29">s</name></expr></argument>, <argument pos:start="861:32" pos:end="861:33"><expr pos:start="861:32" pos:end="861:33"><name pos:start="861:32" pos:end="861:33">op</name></expr></argument>, <argument pos:start="861:36" pos:end="861:39"><expr pos:start="861:36" pos:end="861:39"><name pos:start="861:36" pos:end="861:39">args</name></expr></argument>, <argument pos:start="861:42" pos:end="861:48"><expr pos:start="861:42" pos:end="861:48"><name pos:start="861:42" pos:end="861:48"><name pos:start="861:42" pos:end="861:45">args</name><index pos:start="861:46" pos:end="861:48">[<expr pos:start="861:47" pos:end="861:47"><literal type="number" pos:start="861:47" pos:end="861:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="861:51" pos:end="861:57"><expr pos:start="861:51" pos:end="861:57"><name pos:start="861:51" pos:end="861:57"><name pos:start="861:51" pos:end="861:54">args</name><index pos:start="861:55" pos:end="861:57">[<expr pos:start="861:56" pos:end="861:56"><literal type="number" pos:start="861:56" pos:end="861:56">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="863:13" pos:end="863:18">break;</break>

        <expr_stmt pos:start="865:9" pos:end="867:60"><expr pos:start="865:9" pos:end="867:59"><call pos:start="865:9" pos:end="865:27"><name pos:start="865:9" pos:end="865:21">CASE_OP_32_64</name><argument_list pos:start="865:22" pos:end="865:27">(<argument pos:start="865:23" pos:end="865:26"><expr pos:start="865:23" pos:end="865:26"><name pos:start="865:23" pos:end="865:26">movi</name></expr></argument>)</argument_list></call><operator pos:start="865:28" pos:end="865:28">:</operator>

            <call pos:start="867:13" pos:end="867:59"><name pos:start="867:13" pos:end="867:28">tcg_opt_gen_movi</name><argument_list pos:start="867:29" pos:end="867:59">(<argument pos:start="867:30" pos:end="867:30"><expr pos:start="867:30" pos:end="867:30"><name pos:start="867:30" pos:end="867:30">s</name></expr></argument>, <argument pos:start="867:33" pos:end="867:34"><expr pos:start="867:33" pos:end="867:34"><name pos:start="867:33" pos:end="867:34">op</name></expr></argument>, <argument pos:start="867:37" pos:end="867:40"><expr pos:start="867:37" pos:end="867:40"><name pos:start="867:37" pos:end="867:40">args</name></expr></argument>, <argument pos:start="867:43" pos:end="867:49"><expr pos:start="867:43" pos:end="867:49"><name pos:start="867:43" pos:end="867:49"><name pos:start="867:43" pos:end="867:46">args</name><index pos:start="867:47" pos:end="867:49">[<expr pos:start="867:48" pos:end="867:48"><literal type="number" pos:start="867:48" pos:end="867:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="867:52" pos:end="867:58"><expr pos:start="867:52" pos:end="867:58"><name pos:start="867:52" pos:end="867:58"><name pos:start="867:52" pos:end="867:55">args</name><index pos:start="867:56" pos:end="867:58">[<expr pos:start="867:57" pos:end="867:57"><literal type="number" pos:start="867:57" pos:end="867:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="869:13" pos:end="869:18">break;</break>



        <expr_stmt pos:start="873:9" pos:end="883:30"><expr pos:start="873:9" pos:end="883:30"><call pos:start="873:9" pos:end="873:26"><name pos:start="873:9" pos:end="873:21">CASE_OP_32_64</name><argument_list pos:start="873:22" pos:end="873:26">(<argument pos:start="873:23" pos:end="873:25"><expr pos:start="873:23" pos:end="873:25"><name pos:start="873:23" pos:end="873:25">not</name></expr></argument>)</argument_list></call><operator pos:start="873:27" pos:end="873:27">:</operator>

        <call pos:start="875:9" pos:end="875:26"><name pos:start="875:9" pos:end="875:21">CASE_OP_32_64</name><argument_list pos:start="875:22" pos:end="875:26">(<argument pos:start="875:23" pos:end="875:25"><expr pos:start="875:23" pos:end="875:25"><name pos:start="875:23" pos:end="875:25">neg</name></expr></argument>)</argument_list></call><operator pos:start="875:27" pos:end="875:27">:</operator>

        <call pos:start="877:9" pos:end="877:28"><name pos:start="877:9" pos:end="877:21">CASE_OP_32_64</name><argument_list pos:start="877:22" pos:end="877:28">(<argument pos:start="877:23" pos:end="877:27"><expr pos:start="877:23" pos:end="877:27"><name pos:start="877:23" pos:end="877:27">ext8s</name></expr></argument>)</argument_list></call><operator pos:start="877:29" pos:end="877:29">:</operator>

        <call pos:start="879:9" pos:end="879:28"><name pos:start="879:9" pos:end="879:21">CASE_OP_32_64</name><argument_list pos:start="879:22" pos:end="879:28">(<argument pos:start="879:23" pos:end="879:27"><expr pos:start="879:23" pos:end="879:27"><name pos:start="879:23" pos:end="879:27">ext8u</name></expr></argument>)</argument_list></call><operator pos:start="879:29" pos:end="879:29">:</operator>

        <call pos:start="881:9" pos:end="881:29"><name pos:start="881:9" pos:end="881:21">CASE_OP_32_64</name><argument_list pos:start="881:22" pos:end="881:29">(<argument pos:start="881:23" pos:end="881:28"><expr pos:start="881:23" pos:end="881:28"><name pos:start="881:23" pos:end="881:28">ext16s</name></expr></argument>)</argument_list></call><operator pos:start="881:30" pos:end="881:30">:</operator>

        <call pos:start="883:9" pos:end="883:29"><name pos:start="883:9" pos:end="883:21">CASE_OP_32_64</name><argument_list pos:start="883:22" pos:end="883:29">(<argument pos:start="883:23" pos:end="883:28"><expr pos:start="883:23" pos:end="883:28"><name pos:start="883:23" pos:end="883:28">ext16u</name></expr></argument>)</argument_list></call><operator pos:start="883:30" pos:end="883:30">:</operator></expr></expr_stmt>

        <case pos:start="885:9" pos:end="885:33">case <expr pos:start="885:14" pos:end="885:32"><name pos:start="885:14" pos:end="885:32">INDEX_op_ext32s_i64</name></expr>:</case>

        <case pos:start="887:9" pos:end="887:33">case <expr pos:start="887:14" pos:end="887:32"><name pos:start="887:14" pos:end="887:32">INDEX_op_ext32u_i64</name></expr>:</case>

            <if_stmt pos:start="889:13" pos:end="897:13"><if pos:start="889:13" pos:end="897:13">if <condition pos:start="889:16" pos:end="889:55">(<expr pos:start="889:17" pos:end="889:54"><name pos:start="889:17" pos:end="889:30"><name pos:start="889:17" pos:end="889:21">temps</name><index pos:start="889:22" pos:end="889:30">[<expr pos:start="889:23" pos:end="889:29"><name pos:start="889:23" pos:end="889:29"><name pos:start="889:23" pos:end="889:26">args</name><index pos:start="889:27" pos:end="889:29">[<expr pos:start="889:28" pos:end="889:28"><literal type="number" pos:start="889:28" pos:end="889:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="889:31" pos:end="889:31">.</operator><name pos:start="889:32" pos:end="889:36">state</name> <operator pos:start="889:38" pos:end="889:39">==</operator> <name pos:start="889:41" pos:end="889:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="889:57" pos:end="897:13">{<block_content pos:start="891:17" pos:end="895:22">

                <expr_stmt pos:start="891:17" pos:end="891:70"><expr pos:start="891:17" pos:end="891:69"><name pos:start="891:17" pos:end="891:19">tmp</name> <operator pos:start="891:21" pos:end="891:21">=</operator> <call pos:start="891:23" pos:end="891:69"><name pos:start="891:23" pos:end="891:41">do_constant_folding</name><argument_list pos:start="891:42" pos:end="891:69">(<argument pos:start="891:43" pos:end="891:45"><expr pos:start="891:43" pos:end="891:45"><name pos:start="891:43" pos:end="891:45">opc</name></expr></argument>, <argument pos:start="891:48" pos:end="891:65"><expr pos:start="891:48" pos:end="891:65"><name pos:start="891:48" pos:end="891:61"><name pos:start="891:48" pos:end="891:52">temps</name><index pos:start="891:53" pos:end="891:61">[<expr pos:start="891:54" pos:end="891:60"><name pos:start="891:54" pos:end="891:60"><name pos:start="891:54" pos:end="891:57">args</name><index pos:start="891:58" pos:end="891:60">[<expr pos:start="891:59" pos:end="891:59"><literal type="number" pos:start="891:59" pos:end="891:59">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="891:62" pos:end="891:62">.</operator><name pos:start="891:63" pos:end="891:65">val</name></expr></argument>, <argument pos:start="891:68" pos:end="891:68"><expr pos:start="891:68" pos:end="891:68"><literal type="number" pos:start="891:68" pos:end="891:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="893:17" pos:end="893:60"><expr pos:start="893:17" pos:end="893:59"><call pos:start="893:17" pos:end="893:59"><name pos:start="893:17" pos:end="893:32">tcg_opt_gen_movi</name><argument_list pos:start="893:33" pos:end="893:59">(<argument pos:start="893:34" pos:end="893:34"><expr pos:start="893:34" pos:end="893:34"><name pos:start="893:34" pos:end="893:34">s</name></expr></argument>, <argument pos:start="893:37" pos:end="893:38"><expr pos:start="893:37" pos:end="893:38"><name pos:start="893:37" pos:end="893:38">op</name></expr></argument>, <argument pos:start="893:41" pos:end="893:44"><expr pos:start="893:41" pos:end="893:44"><name pos:start="893:41" pos:end="893:44">args</name></expr></argument>, <argument pos:start="893:47" pos:end="893:53"><expr pos:start="893:47" pos:end="893:53"><name pos:start="893:47" pos:end="893:53"><name pos:start="893:47" pos:end="893:50">args</name><index pos:start="893:51" pos:end="893:53">[<expr pos:start="893:52" pos:end="893:52"><literal type="number" pos:start="893:52" pos:end="893:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="893:56" pos:end="893:58"><expr pos:start="893:56" pos:end="893:58"><name pos:start="893:56" pos:end="893:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="895:17" pos:end="895:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="899:13" pos:end="899:28">goto <name pos:start="899:18" pos:end="899:27">do_default</name>;</goto>



        <case pos:start="903:9" pos:end="903:36">case <expr pos:start="903:14" pos:end="903:35"><name pos:start="903:14" pos:end="903:35">INDEX_op_trunc_shr_i32</name></expr>:</case>

            <if_stmt pos:start="905:13" pos:end="913:13"><if pos:start="905:13" pos:end="913:13">if <condition pos:start="905:16" pos:end="905:55">(<expr pos:start="905:17" pos:end="905:54"><name pos:start="905:17" pos:end="905:30"><name pos:start="905:17" pos:end="905:21">temps</name><index pos:start="905:22" pos:end="905:30">[<expr pos:start="905:23" pos:end="905:29"><name pos:start="905:23" pos:end="905:29"><name pos:start="905:23" pos:end="905:26">args</name><index pos:start="905:27" pos:end="905:29">[<expr pos:start="905:28" pos:end="905:28"><literal type="number" pos:start="905:28" pos:end="905:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="905:31" pos:end="905:31">.</operator><name pos:start="905:32" pos:end="905:36">state</name> <operator pos:start="905:38" pos:end="905:39">==</operator> <name pos:start="905:41" pos:end="905:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="905:57" pos:end="913:13">{<block_content pos:start="907:17" pos:end="911:22">

                <expr_stmt pos:start="907:17" pos:end="907:76"><expr pos:start="907:17" pos:end="907:75"><name pos:start="907:17" pos:end="907:19">tmp</name> <operator pos:start="907:21" pos:end="907:21">=</operator> <call pos:start="907:23" pos:end="907:75"><name pos:start="907:23" pos:end="907:41">do_constant_folding</name><argument_list pos:start="907:42" pos:end="907:75">(<argument pos:start="907:43" pos:end="907:45"><expr pos:start="907:43" pos:end="907:45"><name pos:start="907:43" pos:end="907:45">opc</name></expr></argument>, <argument pos:start="907:48" pos:end="907:65"><expr pos:start="907:48" pos:end="907:65"><name pos:start="907:48" pos:end="907:61"><name pos:start="907:48" pos:end="907:52">temps</name><index pos:start="907:53" pos:end="907:61">[<expr pos:start="907:54" pos:end="907:60"><name pos:start="907:54" pos:end="907:60"><name pos:start="907:54" pos:end="907:57">args</name><index pos:start="907:58" pos:end="907:60">[<expr pos:start="907:59" pos:end="907:59"><literal type="number" pos:start="907:59" pos:end="907:59">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="907:62" pos:end="907:62">.</operator><name pos:start="907:63" pos:end="907:65">val</name></expr></argument>, <argument pos:start="907:68" pos:end="907:74"><expr pos:start="907:68" pos:end="907:74"><name pos:start="907:68" pos:end="907:74"><name pos:start="907:68" pos:end="907:71">args</name><index pos:start="907:72" pos:end="907:74">[<expr pos:start="907:73" pos:end="907:73"><literal type="number" pos:start="907:73" pos:end="907:73">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="909:17" pos:end="909:60"><expr pos:start="909:17" pos:end="909:59"><call pos:start="909:17" pos:end="909:59"><name pos:start="909:17" pos:end="909:32">tcg_opt_gen_movi</name><argument_list pos:start="909:33" pos:end="909:59">(<argument pos:start="909:34" pos:end="909:34"><expr pos:start="909:34" pos:end="909:34"><name pos:start="909:34" pos:end="909:34">s</name></expr></argument>, <argument pos:start="909:37" pos:end="909:38"><expr pos:start="909:37" pos:end="909:38"><name pos:start="909:37" pos:end="909:38">op</name></expr></argument>, <argument pos:start="909:41" pos:end="909:44"><expr pos:start="909:41" pos:end="909:44"><name pos:start="909:41" pos:end="909:44">args</name></expr></argument>, <argument pos:start="909:47" pos:end="909:53"><expr pos:start="909:47" pos:end="909:53"><name pos:start="909:47" pos:end="909:53"><name pos:start="909:47" pos:end="909:50">args</name><index pos:start="909:51" pos:end="909:53">[<expr pos:start="909:52" pos:end="909:52"><literal type="number" pos:start="909:52" pos:end="909:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="909:56" pos:end="909:58"><expr pos:start="909:56" pos:end="909:58"><name pos:start="909:56" pos:end="909:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="911:17" pos:end="911:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="915:13" pos:end="915:28">goto <name pos:start="915:18" pos:end="915:27">do_default</name>;</goto>



        <expr_stmt pos:start="919:9" pos:end="961:28"><expr pos:start="919:9" pos:end="961:28"><call pos:start="919:9" pos:end="919:26"><name pos:start="919:9" pos:end="919:21">CASE_OP_32_64</name><argument_list pos:start="919:22" pos:end="919:26">(<argument pos:start="919:23" pos:end="919:25"><expr pos:start="919:23" pos:end="919:25"><name pos:start="919:23" pos:end="919:25">add</name></expr></argument>)</argument_list></call><operator pos:start="919:27" pos:end="919:27">:</operator>

        <call pos:start="921:9" pos:end="921:26"><name pos:start="921:9" pos:end="921:21">CASE_OP_32_64</name><argument_list pos:start="921:22" pos:end="921:26">(<argument pos:start="921:23" pos:end="921:25"><expr pos:start="921:23" pos:end="921:25"><name pos:start="921:23" pos:end="921:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="921:27" pos:end="921:27">:</operator>

        <call pos:start="923:9" pos:end="923:26"><name pos:start="923:9" pos:end="923:21">CASE_OP_32_64</name><argument_list pos:start="923:22" pos:end="923:26">(<argument pos:start="923:23" pos:end="923:25"><expr pos:start="923:23" pos:end="923:25"><name pos:start="923:23" pos:end="923:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="923:27" pos:end="923:27">:</operator>

        <call pos:start="925:9" pos:end="925:25"><name pos:start="925:9" pos:end="925:21">CASE_OP_32_64</name><argument_list pos:start="925:22" pos:end="925:25">(<argument pos:start="925:23" pos:end="925:24"><expr pos:start="925:23" pos:end="925:24"><name pos:start="925:23" pos:end="925:24">or</name></expr></argument>)</argument_list></call><operator pos:start="925:26" pos:end="925:26">:</operator>

        <call pos:start="927:9" pos:end="927:26"><name pos:start="927:9" pos:end="927:21">CASE_OP_32_64</name><argument_list pos:start="927:22" pos:end="927:26">(<argument pos:start="927:23" pos:end="927:25"><expr pos:start="927:23" pos:end="927:25"><name pos:start="927:23" pos:end="927:25">and</name></expr></argument>)</argument_list></call><operator pos:start="927:27" pos:end="927:27">:</operator>

        <call pos:start="929:9" pos:end="929:26"><name pos:start="929:9" pos:end="929:21">CASE_OP_32_64</name><argument_list pos:start="929:22" pos:end="929:26">(<argument pos:start="929:23" pos:end="929:25"><expr pos:start="929:23" pos:end="929:25"><name pos:start="929:23" pos:end="929:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="929:27" pos:end="929:27">:</operator>

        <call pos:start="931:9" pos:end="931:26"><name pos:start="931:9" pos:end="931:21">CASE_OP_32_64</name><argument_list pos:start="931:22" pos:end="931:26">(<argument pos:start="931:23" pos:end="931:25"><expr pos:start="931:23" pos:end="931:25"><name pos:start="931:23" pos:end="931:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="931:27" pos:end="931:27">:</operator>

        <call pos:start="933:9" pos:end="933:26"><name pos:start="933:9" pos:end="933:21">CASE_OP_32_64</name><argument_list pos:start="933:22" pos:end="933:26">(<argument pos:start="933:23" pos:end="933:25"><expr pos:start="933:23" pos:end="933:25"><name pos:start="933:23" pos:end="933:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="933:27" pos:end="933:27">:</operator>

        <call pos:start="935:9" pos:end="935:26"><name pos:start="935:9" pos:end="935:21">CASE_OP_32_64</name><argument_list pos:start="935:22" pos:end="935:26">(<argument pos:start="935:23" pos:end="935:25"><expr pos:start="935:23" pos:end="935:25"><name pos:start="935:23" pos:end="935:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="935:27" pos:end="935:27">:</operator>

        <call pos:start="937:9" pos:end="937:27"><name pos:start="937:9" pos:end="937:21">CASE_OP_32_64</name><argument_list pos:start="937:22" pos:end="937:27">(<argument pos:start="937:23" pos:end="937:26"><expr pos:start="937:23" pos:end="937:26"><name pos:start="937:23" pos:end="937:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="937:28" pos:end="937:28">:</operator>

        <call pos:start="939:9" pos:end="939:27"><name pos:start="939:9" pos:end="939:21">CASE_OP_32_64</name><argument_list pos:start="939:22" pos:end="939:27">(<argument pos:start="939:23" pos:end="939:26"><expr pos:start="939:23" pos:end="939:26"><name pos:start="939:23" pos:end="939:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="939:28" pos:end="939:28">:</operator>

        <call pos:start="941:9" pos:end="941:27"><name pos:start="941:9" pos:end="941:21">CASE_OP_32_64</name><argument_list pos:start="941:22" pos:end="941:27">(<argument pos:start="941:23" pos:end="941:26"><expr pos:start="941:23" pos:end="941:26"><name pos:start="941:23" pos:end="941:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="941:28" pos:end="941:28">:</operator>

        <call pos:start="943:9" pos:end="943:26"><name pos:start="943:9" pos:end="943:21">CASE_OP_32_64</name><argument_list pos:start="943:22" pos:end="943:26">(<argument pos:start="943:23" pos:end="943:25"><expr pos:start="943:23" pos:end="943:25"><name pos:start="943:23" pos:end="943:25">orc</name></expr></argument>)</argument_list></call><operator pos:start="943:27" pos:end="943:27">:</operator>

        <call pos:start="945:9" pos:end="945:26"><name pos:start="945:9" pos:end="945:21">CASE_OP_32_64</name><argument_list pos:start="945:22" pos:end="945:26">(<argument pos:start="945:23" pos:end="945:25"><expr pos:start="945:23" pos:end="945:25"><name pos:start="945:23" pos:end="945:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="945:27" pos:end="945:27">:</operator>

        <call pos:start="947:9" pos:end="947:27"><name pos:start="947:9" pos:end="947:21">CASE_OP_32_64</name><argument_list pos:start="947:22" pos:end="947:27">(<argument pos:start="947:23" pos:end="947:26"><expr pos:start="947:23" pos:end="947:26"><name pos:start="947:23" pos:end="947:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="947:28" pos:end="947:28">:</operator>

        <call pos:start="949:9" pos:end="949:26"><name pos:start="949:9" pos:end="949:21">CASE_OP_32_64</name><argument_list pos:start="949:22" pos:end="949:26">(<argument pos:start="949:23" pos:end="949:25"><expr pos:start="949:23" pos:end="949:25"><name pos:start="949:23" pos:end="949:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="949:27" pos:end="949:27">:</operator>

        <call pos:start="951:9" pos:end="951:28"><name pos:start="951:9" pos:end="951:21">CASE_OP_32_64</name><argument_list pos:start="951:22" pos:end="951:28">(<argument pos:start="951:23" pos:end="951:27"><expr pos:start="951:23" pos:end="951:27"><name pos:start="951:23" pos:end="951:27">muluh</name></expr></argument>)</argument_list></call><operator pos:start="951:29" pos:end="951:29">:</operator>

        <call pos:start="953:9" pos:end="953:28"><name pos:start="953:9" pos:end="953:21">CASE_OP_32_64</name><argument_list pos:start="953:22" pos:end="953:28">(<argument pos:start="953:23" pos:end="953:27"><expr pos:start="953:23" pos:end="953:27"><name pos:start="953:23" pos:end="953:27">mulsh</name></expr></argument>)</argument_list></call><operator pos:start="953:29" pos:end="953:29">:</operator>

        <call pos:start="955:9" pos:end="955:26"><name pos:start="955:9" pos:end="955:21">CASE_OP_32_64</name><argument_list pos:start="955:22" pos:end="955:26">(<argument pos:start="955:23" pos:end="955:25"><expr pos:start="955:23" pos:end="955:25"><name pos:start="955:23" pos:end="955:25">div</name></expr></argument>)</argument_list></call><operator pos:start="955:27" pos:end="955:27">:</operator>

        <call pos:start="957:9" pos:end="957:27"><name pos:start="957:9" pos:end="957:21">CASE_OP_32_64</name><argument_list pos:start="957:22" pos:end="957:27">(<argument pos:start="957:23" pos:end="957:26"><expr pos:start="957:23" pos:end="957:26"><name pos:start="957:23" pos:end="957:26">divu</name></expr></argument>)</argument_list></call><operator pos:start="957:28" pos:end="957:28">:</operator>

        <call pos:start="959:9" pos:end="959:26"><name pos:start="959:9" pos:end="959:21">CASE_OP_32_64</name><argument_list pos:start="959:22" pos:end="959:26">(<argument pos:start="959:23" pos:end="959:25"><expr pos:start="959:23" pos:end="959:25"><name pos:start="959:23" pos:end="959:25">rem</name></expr></argument>)</argument_list></call><operator pos:start="959:27" pos:end="959:27">:</operator>

        <call pos:start="961:9" pos:end="961:27"><name pos:start="961:9" pos:end="961:21">CASE_OP_32_64</name><argument_list pos:start="961:22" pos:end="961:27">(<argument pos:start="961:23" pos:end="961:26"><expr pos:start="961:23" pos:end="961:26"><name pos:start="961:23" pos:end="961:26">remu</name></expr></argument>)</argument_list></call><operator pos:start="961:28" pos:end="961:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="963:13" pos:end="975:13"><if pos:start="963:13" pos:end="975:13">if <condition pos:start="963:16" pos:end="965:58">(<expr pos:start="963:17" pos:end="965:57"><name pos:start="963:17" pos:end="963:30"><name pos:start="963:17" pos:end="963:21">temps</name><index pos:start="963:22" pos:end="963:30">[<expr pos:start="963:23" pos:end="963:29"><name pos:start="963:23" pos:end="963:29"><name pos:start="963:23" pos:end="963:26">args</name><index pos:start="963:27" pos:end="963:29">[<expr pos:start="963:28" pos:end="963:28"><literal type="number" pos:start="963:28" pos:end="963:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="963:31" pos:end="963:31">.</operator><name pos:start="963:32" pos:end="963:36">state</name> <operator pos:start="963:38" pos:end="963:39">==</operator> <name pos:start="963:41" pos:end="963:54">TCG_TEMP_CONST</name>

                <operator pos:start="965:17" pos:end="965:18">&amp;&amp;</operator> <name pos:start="965:20" pos:end="965:33"><name pos:start="965:20" pos:end="965:24">temps</name><index pos:start="965:25" pos:end="965:33">[<expr pos:start="965:26" pos:end="965:32"><name pos:start="965:26" pos:end="965:32"><name pos:start="965:26" pos:end="965:29">args</name><index pos:start="965:30" pos:end="965:32">[<expr pos:start="965:31" pos:end="965:31"><literal type="number" pos:start="965:31" pos:end="965:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="965:34" pos:end="965:34">.</operator><name pos:start="965:35" pos:end="965:39">state</name> <operator pos:start="965:41" pos:end="965:42">==</operator> <name pos:start="965:44" pos:end="965:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="965:60" pos:end="975:13">{<block_content pos:start="967:17" pos:end="973:22">

                <expr_stmt pos:start="967:17" pos:end="969:62"><expr pos:start="967:17" pos:end="969:61"><name pos:start="967:17" pos:end="967:19">tmp</name> <operator pos:start="967:21" pos:end="967:21">=</operator> <call pos:start="967:23" pos:end="969:61"><name pos:start="967:23" pos:end="967:41">do_constant_folding</name><argument_list pos:start="967:42" pos:end="969:61">(<argument pos:start="967:43" pos:end="967:45"><expr pos:start="967:43" pos:end="967:45"><name pos:start="967:43" pos:end="967:45">opc</name></expr></argument>, <argument pos:start="967:48" pos:end="967:65"><expr pos:start="967:48" pos:end="967:65"><name pos:start="967:48" pos:end="967:61"><name pos:start="967:48" pos:end="967:52">temps</name><index pos:start="967:53" pos:end="967:61">[<expr pos:start="967:54" pos:end="967:60"><name pos:start="967:54" pos:end="967:60"><name pos:start="967:54" pos:end="967:57">args</name><index pos:start="967:58" pos:end="967:60">[<expr pos:start="967:59" pos:end="967:59"><literal type="number" pos:start="967:59" pos:end="967:59">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="967:62" pos:end="967:62">.</operator><name pos:start="967:63" pos:end="967:65">val</name></expr></argument>,

                                          <argument pos:start="969:43" pos:end="969:60"><expr pos:start="969:43" pos:end="969:60"><name pos:start="969:43" pos:end="969:56"><name pos:start="969:43" pos:end="969:47">temps</name><index pos:start="969:48" pos:end="969:56">[<expr pos:start="969:49" pos:end="969:55"><name pos:start="969:49" pos:end="969:55"><name pos:start="969:49" pos:end="969:52">args</name><index pos:start="969:53" pos:end="969:55">[<expr pos:start="969:54" pos:end="969:54"><literal type="number" pos:start="969:54" pos:end="969:54">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="969:57" pos:end="969:57">.</operator><name pos:start="969:58" pos:end="969:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="971:17" pos:end="971:60"><expr pos:start="971:17" pos:end="971:59"><call pos:start="971:17" pos:end="971:59"><name pos:start="971:17" pos:end="971:32">tcg_opt_gen_movi</name><argument_list pos:start="971:33" pos:end="971:59">(<argument pos:start="971:34" pos:end="971:34"><expr pos:start="971:34" pos:end="971:34"><name pos:start="971:34" pos:end="971:34">s</name></expr></argument>, <argument pos:start="971:37" pos:end="971:38"><expr pos:start="971:37" pos:end="971:38"><name pos:start="971:37" pos:end="971:38">op</name></expr></argument>, <argument pos:start="971:41" pos:end="971:44"><expr pos:start="971:41" pos:end="971:44"><name pos:start="971:41" pos:end="971:44">args</name></expr></argument>, <argument pos:start="971:47" pos:end="971:53"><expr pos:start="971:47" pos:end="971:53"><name pos:start="971:47" pos:end="971:53"><name pos:start="971:47" pos:end="971:50">args</name><index pos:start="971:51" pos:end="971:53">[<expr pos:start="971:52" pos:end="971:52"><literal type="number" pos:start="971:52" pos:end="971:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="971:56" pos:end="971:58"><expr pos:start="971:56" pos:end="971:58"><name pos:start="971:56" pos:end="971:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="973:17" pos:end="973:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="977:13" pos:end="977:28">goto <name pos:start="977:18" pos:end="977:27">do_default</name>;</goto>



        <expr_stmt pos:start="981:9" pos:end="981:31"><expr pos:start="981:9" pos:end="981:31"><call pos:start="981:9" pos:end="981:30"><name pos:start="981:9" pos:end="981:21">CASE_OP_32_64</name><argument_list pos:start="981:22" pos:end="981:30">(<argument pos:start="981:23" pos:end="981:29"><expr pos:start="981:23" pos:end="981:29"><name pos:start="981:23" pos:end="981:29">deposit</name></expr></argument>)</argument_list></call><operator pos:start="981:31" pos:end="981:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="983:13" pos:end="995:13"><if pos:start="983:13" pos:end="995:13">if <condition pos:start="983:16" pos:end="985:58">(<expr pos:start="983:17" pos:end="985:57"><name pos:start="983:17" pos:end="983:30"><name pos:start="983:17" pos:end="983:21">temps</name><index pos:start="983:22" pos:end="983:30">[<expr pos:start="983:23" pos:end="983:29"><name pos:start="983:23" pos:end="983:29"><name pos:start="983:23" pos:end="983:26">args</name><index pos:start="983:27" pos:end="983:29">[<expr pos:start="983:28" pos:end="983:28"><literal type="number" pos:start="983:28" pos:end="983:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="983:31" pos:end="983:31">.</operator><name pos:start="983:32" pos:end="983:36">state</name> <operator pos:start="983:38" pos:end="983:39">==</operator> <name pos:start="983:41" pos:end="983:54">TCG_TEMP_CONST</name>

                <operator pos:start="985:17" pos:end="985:18">&amp;&amp;</operator> <name pos:start="985:20" pos:end="985:33"><name pos:start="985:20" pos:end="985:24">temps</name><index pos:start="985:25" pos:end="985:33">[<expr pos:start="985:26" pos:end="985:32"><name pos:start="985:26" pos:end="985:32"><name pos:start="985:26" pos:end="985:29">args</name><index pos:start="985:30" pos:end="985:32">[<expr pos:start="985:31" pos:end="985:31"><literal type="number" pos:start="985:31" pos:end="985:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="985:34" pos:end="985:34">.</operator><name pos:start="985:35" pos:end="985:39">state</name> <operator pos:start="985:41" pos:end="985:42">==</operator> <name pos:start="985:44" pos:end="985:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="985:60" pos:end="995:13">{<block_content pos:start="987:17" pos:end="993:22">

                <expr_stmt pos:start="987:17" pos:end="989:52"><expr pos:start="987:17" pos:end="989:51"><name pos:start="987:17" pos:end="987:19">tmp</name> <operator pos:start="987:21" pos:end="987:21">=</operator> <call pos:start="987:23" pos:end="989:51"><name pos:start="987:23" pos:end="987:31">deposit64</name><argument_list pos:start="987:32" pos:end="989:51">(<argument pos:start="987:33" pos:end="987:50"><expr pos:start="987:33" pos:end="987:50"><name pos:start="987:33" pos:end="987:46"><name pos:start="987:33" pos:end="987:37">temps</name><index pos:start="987:38" pos:end="987:46">[<expr pos:start="987:39" pos:end="987:45"><name pos:start="987:39" pos:end="987:45"><name pos:start="987:39" pos:end="987:42">args</name><index pos:start="987:43" pos:end="987:45">[<expr pos:start="987:44" pos:end="987:44"><literal type="number" pos:start="987:44" pos:end="987:44">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="987:47" pos:end="987:47">.</operator><name pos:start="987:48" pos:end="987:50">val</name></expr></argument>, <argument pos:start="987:53" pos:end="987:59"><expr pos:start="987:53" pos:end="987:59"><name pos:start="987:53" pos:end="987:59"><name pos:start="987:53" pos:end="987:56">args</name><index pos:start="987:57" pos:end="987:59">[<expr pos:start="987:58" pos:end="987:58"><literal type="number" pos:start="987:58" pos:end="987:58">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="987:62" pos:end="987:68"><expr pos:start="987:62" pos:end="987:68"><name pos:start="987:62" pos:end="987:68"><name pos:start="987:62" pos:end="987:65">args</name><index pos:start="987:66" pos:end="987:68">[<expr pos:start="987:67" pos:end="987:67"><literal type="number" pos:start="987:67" pos:end="987:67">4</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="989:33" pos:end="989:50"><expr pos:start="989:33" pos:end="989:50"><name pos:start="989:33" pos:end="989:46"><name pos:start="989:33" pos:end="989:37">temps</name><index pos:start="989:38" pos:end="989:46">[<expr pos:start="989:39" pos:end="989:45"><name pos:start="989:39" pos:end="989:45"><name pos:start="989:39" pos:end="989:42">args</name><index pos:start="989:43" pos:end="989:45">[<expr pos:start="989:44" pos:end="989:44"><literal type="number" pos:start="989:44" pos:end="989:44">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="989:47" pos:end="989:47">.</operator><name pos:start="989:48" pos:end="989:50">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="991:17" pos:end="991:60"><expr pos:start="991:17" pos:end="991:59"><call pos:start="991:17" pos:end="991:59"><name pos:start="991:17" pos:end="991:32">tcg_opt_gen_movi</name><argument_list pos:start="991:33" pos:end="991:59">(<argument pos:start="991:34" pos:end="991:34"><expr pos:start="991:34" pos:end="991:34"><name pos:start="991:34" pos:end="991:34">s</name></expr></argument>, <argument pos:start="991:37" pos:end="991:38"><expr pos:start="991:37" pos:end="991:38"><name pos:start="991:37" pos:end="991:38">op</name></expr></argument>, <argument pos:start="991:41" pos:end="991:44"><expr pos:start="991:41" pos:end="991:44"><name pos:start="991:41" pos:end="991:44">args</name></expr></argument>, <argument pos:start="991:47" pos:end="991:53"><expr pos:start="991:47" pos:end="991:53"><name pos:start="991:47" pos:end="991:53"><name pos:start="991:47" pos:end="991:50">args</name><index pos:start="991:51" pos:end="991:53">[<expr pos:start="991:52" pos:end="991:52"><literal type="number" pos:start="991:52" pos:end="991:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="991:56" pos:end="991:58"><expr pos:start="991:56" pos:end="991:58"><name pos:start="991:56" pos:end="991:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="993:17" pos:end="993:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="997:13" pos:end="997:28">goto <name pos:start="997:18" pos:end="997:27">do_default</name>;</goto>



        <expr_stmt pos:start="1001:9" pos:end="1003:75"><expr pos:start="1001:9" pos:end="1003:74"><call pos:start="1001:9" pos:end="1001:30"><name pos:start="1001:9" pos:end="1001:21">CASE_OP_32_64</name><argument_list pos:start="1001:22" pos:end="1001:30">(<argument pos:start="1001:23" pos:end="1001:29"><expr pos:start="1001:23" pos:end="1001:29"><name pos:start="1001:23" pos:end="1001:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="1001:31" pos:end="1001:31">:</operator>

            <name pos:start="1003:13" pos:end="1003:15">tmp</name> <operator pos:start="1003:17" pos:end="1003:17">=</operator> <call pos:start="1003:19" pos:end="1003:74"><name pos:start="1003:19" pos:end="1003:42">do_constant_folding_cond</name><argument_list pos:start="1003:43" pos:end="1003:74">(<argument pos:start="1003:44" pos:end="1003:46"><expr pos:start="1003:44" pos:end="1003:46"><name pos:start="1003:44" pos:end="1003:46">opc</name></expr></argument>, <argument pos:start="1003:49" pos:end="1003:55"><expr pos:start="1003:49" pos:end="1003:55"><name pos:start="1003:49" pos:end="1003:55"><name pos:start="1003:49" pos:end="1003:52">args</name><index pos:start="1003:53" pos:end="1003:55">[<expr pos:start="1003:54" pos:end="1003:54"><literal type="number" pos:start="1003:54" pos:end="1003:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1003:58" pos:end="1003:64"><expr pos:start="1003:58" pos:end="1003:64"><name pos:start="1003:58" pos:end="1003:64"><name pos:start="1003:58" pos:end="1003:61">args</name><index pos:start="1003:62" pos:end="1003:64">[<expr pos:start="1003:63" pos:end="1003:63"><literal type="number" pos:start="1003:63" pos:end="1003:63">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1003:67" pos:end="1003:73"><expr pos:start="1003:67" pos:end="1003:73"><name pos:start="1003:67" pos:end="1003:73"><name pos:start="1003:67" pos:end="1003:70">args</name><index pos:start="1003:71" pos:end="1003:73">[<expr pos:start="1003:72" pos:end="1003:72"><literal type="number" pos:start="1003:72" pos:end="1003:72">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1005:13" pos:end="1011:13"><if pos:start="1005:13" pos:end="1011:13">if <condition pos:start="1005:16" pos:end="1005:25">(<expr pos:start="1005:17" pos:end="1005:24"><name pos:start="1005:17" pos:end="1005:19">tmp</name> <operator pos:start="1005:21" pos:end="1005:22">!=</operator> <literal type="number" pos:start="1005:24" pos:end="1005:24">2</literal></expr>)</condition> <block pos:start="1005:27" pos:end="1011:13">{<block_content pos:start="1007:17" pos:end="1009:22">

                <expr_stmt pos:start="1007:17" pos:end="1007:60"><expr pos:start="1007:17" pos:end="1007:59"><call pos:start="1007:17" pos:end="1007:59"><name pos:start="1007:17" pos:end="1007:32">tcg_opt_gen_movi</name><argument_list pos:start="1007:33" pos:end="1007:59">(<argument pos:start="1007:34" pos:end="1007:34"><expr pos:start="1007:34" pos:end="1007:34"><name pos:start="1007:34" pos:end="1007:34">s</name></expr></argument>, <argument pos:start="1007:37" pos:end="1007:38"><expr pos:start="1007:37" pos:end="1007:38"><name pos:start="1007:37" pos:end="1007:38">op</name></expr></argument>, <argument pos:start="1007:41" pos:end="1007:44"><expr pos:start="1007:41" pos:end="1007:44"><name pos:start="1007:41" pos:end="1007:44">args</name></expr></argument>, <argument pos:start="1007:47" pos:end="1007:53"><expr pos:start="1007:47" pos:end="1007:53"><name pos:start="1007:47" pos:end="1007:53"><name pos:start="1007:47" pos:end="1007:50">args</name><index pos:start="1007:51" pos:end="1007:53">[<expr pos:start="1007:52" pos:end="1007:52"><literal type="number" pos:start="1007:52" pos:end="1007:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1007:56" pos:end="1007:58"><expr pos:start="1007:56" pos:end="1007:58"><name pos:start="1007:56" pos:end="1007:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1009:17" pos:end="1009:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="1013:13" pos:end="1013:28">goto <name pos:start="1013:18" pos:end="1013:27">do_default</name>;</goto>



        <expr_stmt pos:start="1017:9" pos:end="1019:75"><expr pos:start="1017:9" pos:end="1019:74"><call pos:start="1017:9" pos:end="1017:29"><name pos:start="1017:9" pos:end="1017:21">CASE_OP_32_64</name><argument_list pos:start="1017:22" pos:end="1017:29">(<argument pos:start="1017:23" pos:end="1017:28"><expr pos:start="1017:23" pos:end="1017:28"><name pos:start="1017:23" pos:end="1017:28">brcond</name></expr></argument>)</argument_list></call><operator pos:start="1017:30" pos:end="1017:30">:</operator>

            <name pos:start="1019:13" pos:end="1019:15">tmp</name> <operator pos:start="1019:17" pos:end="1019:17">=</operator> <call pos:start="1019:19" pos:end="1019:74"><name pos:start="1019:19" pos:end="1019:42">do_constant_folding_cond</name><argument_list pos:start="1019:43" pos:end="1019:74">(<argument pos:start="1019:44" pos:end="1019:46"><expr pos:start="1019:44" pos:end="1019:46"><name pos:start="1019:44" pos:end="1019:46">opc</name></expr></argument>, <argument pos:start="1019:49" pos:end="1019:55"><expr pos:start="1019:49" pos:end="1019:55"><name pos:start="1019:49" pos:end="1019:55"><name pos:start="1019:49" pos:end="1019:52">args</name><index pos:start="1019:53" pos:end="1019:55">[<expr pos:start="1019:54" pos:end="1019:54"><literal type="number" pos:start="1019:54" pos:end="1019:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1019:58" pos:end="1019:64"><expr pos:start="1019:58" pos:end="1019:64"><name pos:start="1019:58" pos:end="1019:64"><name pos:start="1019:58" pos:end="1019:61">args</name><index pos:start="1019:62" pos:end="1019:64">[<expr pos:start="1019:63" pos:end="1019:63"><literal type="number" pos:start="1019:63" pos:end="1019:63">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1019:67" pos:end="1019:73"><expr pos:start="1019:67" pos:end="1019:73"><name pos:start="1019:67" pos:end="1019:73"><name pos:start="1019:67" pos:end="1019:70">args</name><index pos:start="1019:71" pos:end="1019:73">[<expr pos:start="1019:72" pos:end="1019:72"><literal type="number" pos:start="1019:72" pos:end="1019:72">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1021:13" pos:end="1039:13"><if pos:start="1021:13" pos:end="1039:13">if <condition pos:start="1021:16" pos:end="1021:25">(<expr pos:start="1021:17" pos:end="1021:24"><name pos:start="1021:17" pos:end="1021:19">tmp</name> <operator pos:start="1021:21" pos:end="1021:22">!=</operator> <literal type="number" pos:start="1021:24" pos:end="1021:24">2</literal></expr>)</condition> <block pos:start="1021:27" pos:end="1039:13">{<block_content pos:start="1023:17" pos:end="1037:22">

                <if_stmt pos:start="1023:17" pos:end="1035:17"><if pos:start="1023:17" pos:end="1031:17">if <condition pos:start="1023:20" pos:end="1023:24">(<expr pos:start="1023:21" pos:end="1023:23"><name pos:start="1023:21" pos:end="1023:23">tmp</name></expr>)</condition> <block pos:start="1023:26" pos:end="1031:17">{<block_content pos:start="1025:21" pos:end="1029:38">

                    <expr_stmt pos:start="1025:21" pos:end="1025:46"><expr pos:start="1025:21" pos:end="1025:45"><call pos:start="1025:21" pos:end="1025:45"><name pos:start="1025:21" pos:end="1025:35">reset_all_temps</name><argument_list pos:start="1025:36" pos:end="1025:45">(<argument pos:start="1025:37" pos:end="1025:44"><expr pos:start="1025:37" pos:end="1025:44"><name pos:start="1025:37" pos:end="1025:44">nb_temps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1027:21" pos:end="1027:42"><expr pos:start="1027:21" pos:end="1027:41"><name pos:start="1027:21" pos:end="1027:27"><name pos:start="1027:21" pos:end="1027:22">op</name><operator pos:start="1027:23" pos:end="1027:24">-&gt;</operator><name pos:start="1027:25" pos:end="1027:27">opc</name></name> <operator pos:start="1027:29" pos:end="1027:29">=</operator> <name pos:start="1027:31" pos:end="1027:41">INDEX_op_br</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="1029:21" pos:end="1029:38"><expr pos:start="1029:21" pos:end="1029:37"><name pos:start="1029:21" pos:end="1029:27"><name pos:start="1029:21" pos:end="1029:24">args</name><index pos:start="1029:25" pos:end="1029:27">[<expr pos:start="1029:26" pos:end="1029:26"><literal type="number" pos:start="1029:26" pos:end="1029:26">0</literal></expr>]</index></name> <operator pos:start="1029:29" pos:end="1029:29">=</operator> <name pos:start="1029:31" pos:end="1029:37"><name pos:start="1029:31" pos:end="1029:34">args</name><index pos:start="1029:35" pos:end="1029:37">[<expr pos:start="1029:36" pos:end="1029:36"><literal type="number" pos:start="1029:36" pos:end="1029:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1031:19" pos:end="1035:17">else <block pos:start="1031:24" pos:end="1035:17">{<block_content pos:start="1033:21" pos:end="1033:41">

                    <expr_stmt pos:start="1033:21" pos:end="1033:41"><expr pos:start="1033:21" pos:end="1033:40"><call pos:start="1033:21" pos:end="1033:40"><name pos:start="1033:21" pos:end="1033:33">tcg_op_remove</name><argument_list pos:start="1033:34" pos:end="1033:40">(<argument pos:start="1033:35" pos:end="1033:35"><expr pos:start="1033:35" pos:end="1033:35"><name pos:start="1033:35" pos:end="1033:35">s</name></expr></argument>, <argument pos:start="1033:38" pos:end="1033:39"><expr pos:start="1033:38" pos:end="1033:39"><name pos:start="1033:38" pos:end="1033:39">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="1037:17" pos:end="1037:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="1041:13" pos:end="1041:28">goto <name pos:start="1041:18" pos:end="1041:27">do_default</name>;</goto>



        <expr_stmt pos:start="1045:9" pos:end="1047:75"><expr pos:start="1045:9" pos:end="1047:74"><call pos:start="1045:9" pos:end="1045:30"><name pos:start="1045:9" pos:end="1045:21">CASE_OP_32_64</name><argument_list pos:start="1045:22" pos:end="1045:30">(<argument pos:start="1045:23" pos:end="1045:29"><expr pos:start="1045:23" pos:end="1045:29"><name pos:start="1045:23" pos:end="1045:29">movcond</name></expr></argument>)</argument_list></call><operator pos:start="1045:31" pos:end="1045:31">:</operator>

            <name pos:start="1047:13" pos:end="1047:15">tmp</name> <operator pos:start="1047:17" pos:end="1047:17">=</operator> <call pos:start="1047:19" pos:end="1047:74"><name pos:start="1047:19" pos:end="1047:42">do_constant_folding_cond</name><argument_list pos:start="1047:43" pos:end="1047:74">(<argument pos:start="1047:44" pos:end="1047:46"><expr pos:start="1047:44" pos:end="1047:46"><name pos:start="1047:44" pos:end="1047:46">opc</name></expr></argument>, <argument pos:start="1047:49" pos:end="1047:55"><expr pos:start="1047:49" pos:end="1047:55"><name pos:start="1047:49" pos:end="1047:55"><name pos:start="1047:49" pos:end="1047:52">args</name><index pos:start="1047:53" pos:end="1047:55">[<expr pos:start="1047:54" pos:end="1047:54"><literal type="number" pos:start="1047:54" pos:end="1047:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1047:58" pos:end="1047:64"><expr pos:start="1047:58" pos:end="1047:64"><name pos:start="1047:58" pos:end="1047:64"><name pos:start="1047:58" pos:end="1047:61">args</name><index pos:start="1047:62" pos:end="1047:64">[<expr pos:start="1047:63" pos:end="1047:63"><literal type="number" pos:start="1047:63" pos:end="1047:63">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1047:67" pos:end="1047:73"><expr pos:start="1047:67" pos:end="1047:73"><name pos:start="1047:67" pos:end="1047:73"><name pos:start="1047:67" pos:end="1047:70">args</name><index pos:start="1047:71" pos:end="1047:73">[<expr pos:start="1047:72" pos:end="1047:72"><literal type="number" pos:start="1047:72" pos:end="1047:72">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1049:13" pos:end="1055:13"><if pos:start="1049:13" pos:end="1055:13">if <condition pos:start="1049:16" pos:end="1049:25">(<expr pos:start="1049:17" pos:end="1049:24"><name pos:start="1049:17" pos:end="1049:19">tmp</name> <operator pos:start="1049:21" pos:end="1049:22">!=</operator> <literal type="number" pos:start="1049:24" pos:end="1049:24">2</literal></expr>)</condition> <block pos:start="1049:27" pos:end="1055:13">{<block_content pos:start="1051:17" pos:end="1053:22">

                <expr_stmt pos:start="1051:17" pos:end="1051:67"><expr pos:start="1051:17" pos:end="1051:66"><call pos:start="1051:17" pos:end="1051:66"><name pos:start="1051:17" pos:end="1051:31">tcg_opt_gen_mov</name><argument_list pos:start="1051:32" pos:end="1051:66">(<argument pos:start="1051:33" pos:end="1051:33"><expr pos:start="1051:33" pos:end="1051:33"><name pos:start="1051:33" pos:end="1051:33">s</name></expr></argument>, <argument pos:start="1051:36" pos:end="1051:37"><expr pos:start="1051:36" pos:end="1051:37"><name pos:start="1051:36" pos:end="1051:37">op</name></expr></argument>, <argument pos:start="1051:40" pos:end="1051:43"><expr pos:start="1051:40" pos:end="1051:43"><name pos:start="1051:40" pos:end="1051:43">args</name></expr></argument>, <argument pos:start="1051:46" pos:end="1051:52"><expr pos:start="1051:46" pos:end="1051:52"><name pos:start="1051:46" pos:end="1051:52"><name pos:start="1051:46" pos:end="1051:49">args</name><index pos:start="1051:50" pos:end="1051:52">[<expr pos:start="1051:51" pos:end="1051:51"><literal type="number" pos:start="1051:51" pos:end="1051:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1051:55" pos:end="1051:65"><expr pos:start="1051:55" pos:end="1051:65"><name pos:start="1051:55" pos:end="1051:65"><name pos:start="1051:55" pos:end="1051:58">args</name><index pos:start="1051:59" pos:end="1051:65">[<expr pos:start="1051:60" pos:end="1051:64"><literal type="number" pos:start="1051:60" pos:end="1051:61">4</literal><operator pos:start="1051:61" pos:end="1051:61">-</operator><name pos:start="1051:62" pos:end="1051:64">tmp</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1053:17" pos:end="1053:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="1057:13" pos:end="1057:28">goto <name pos:start="1057:18" pos:end="1057:27">do_default</name>;</goto>



        <case pos:start="1061:9" pos:end="1061:31">case <expr pos:start="1061:14" pos:end="1061:30"><name pos:start="1061:14" pos:end="1061:30">INDEX_op_add2_i32</name></expr>:</case>

        <case pos:start="1063:9" pos:end="1063:31">case <expr pos:start="1063:14" pos:end="1063:30"><name pos:start="1063:14" pos:end="1063:30">INDEX_op_sub2_i32</name></expr>:</case>

            <if_stmt pos:start="1065:13" pos:end="1121:13"><if pos:start="1065:13" pos:end="1121:13">if <condition pos:start="1065:16" pos:end="1071:58">(<expr pos:start="1065:17" pos:end="1071:57"><name pos:start="1065:17" pos:end="1065:30"><name pos:start="1065:17" pos:end="1065:21">temps</name><index pos:start="1065:22" pos:end="1065:30">[<expr pos:start="1065:23" pos:end="1065:29"><name pos:start="1065:23" pos:end="1065:29"><name pos:start="1065:23" pos:end="1065:26">args</name><index pos:start="1065:27" pos:end="1065:29">[<expr pos:start="1065:28" pos:end="1065:28"><literal type="number" pos:start="1065:28" pos:end="1065:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1065:31" pos:end="1065:31">.</operator><name pos:start="1065:32" pos:end="1065:36">state</name> <operator pos:start="1065:38" pos:end="1065:39">==</operator> <name pos:start="1065:41" pos:end="1065:54">TCG_TEMP_CONST</name>

                <operator pos:start="1067:17" pos:end="1067:18">&amp;&amp;</operator> <name pos:start="1067:20" pos:end="1067:33"><name pos:start="1067:20" pos:end="1067:24">temps</name><index pos:start="1067:25" pos:end="1067:33">[<expr pos:start="1067:26" pos:end="1067:32"><name pos:start="1067:26" pos:end="1067:32"><name pos:start="1067:26" pos:end="1067:29">args</name><index pos:start="1067:30" pos:end="1067:32">[<expr pos:start="1067:31" pos:end="1067:31"><literal type="number" pos:start="1067:31" pos:end="1067:31">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1067:34" pos:end="1067:34">.</operator><name pos:start="1067:35" pos:end="1067:39">state</name> <operator pos:start="1067:41" pos:end="1067:42">==</operator> <name pos:start="1067:44" pos:end="1067:57">TCG_TEMP_CONST</name>

                <operator pos:start="1069:17" pos:end="1069:18">&amp;&amp;</operator> <name pos:start="1069:20" pos:end="1069:33"><name pos:start="1069:20" pos:end="1069:24">temps</name><index pos:start="1069:25" pos:end="1069:33">[<expr pos:start="1069:26" pos:end="1069:32"><name pos:start="1069:26" pos:end="1069:32"><name pos:start="1069:26" pos:end="1069:29">args</name><index pos:start="1069:30" pos:end="1069:32">[<expr pos:start="1069:31" pos:end="1069:31"><literal type="number" pos:start="1069:31" pos:end="1069:31">4</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1069:34" pos:end="1069:34">.</operator><name pos:start="1069:35" pos:end="1069:39">state</name> <operator pos:start="1069:41" pos:end="1069:42">==</operator> <name pos:start="1069:44" pos:end="1069:57">TCG_TEMP_CONST</name>

                <operator pos:start="1071:17" pos:end="1071:18">&amp;&amp;</operator> <name pos:start="1071:20" pos:end="1071:33"><name pos:start="1071:20" pos:end="1071:24">temps</name><index pos:start="1071:25" pos:end="1071:33">[<expr pos:start="1071:26" pos:end="1071:32"><name pos:start="1071:26" pos:end="1071:32"><name pos:start="1071:26" pos:end="1071:29">args</name><index pos:start="1071:30" pos:end="1071:32">[<expr pos:start="1071:31" pos:end="1071:31"><literal type="number" pos:start="1071:31" pos:end="1071:31">5</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1071:34" pos:end="1071:34">.</operator><name pos:start="1071:35" pos:end="1071:39">state</name> <operator pos:start="1071:41" pos:end="1071:42">==</operator> <name pos:start="1071:44" pos:end="1071:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="1071:60" pos:end="1121:13">{<block_content pos:start="1073:17" pos:end="1119:22">

                <decl_stmt pos:start="1073:17" pos:end="1073:49"><decl pos:start="1073:17" pos:end="1073:48"><type pos:start="1073:17" pos:end="1073:24"><name pos:start="1073:17" pos:end="1073:24">uint32_t</name></type> <name pos:start="1073:26" pos:end="1073:27">al</name> <init pos:start="1073:29" pos:end="1073:48">= <expr pos:start="1073:31" pos:end="1073:48"><name pos:start="1073:31" pos:end="1073:44"><name pos:start="1073:31" pos:end="1073:35">temps</name><index pos:start="1073:36" pos:end="1073:44">[<expr pos:start="1073:37" pos:end="1073:43"><name pos:start="1073:37" pos:end="1073:43"><name pos:start="1073:37" pos:end="1073:40">args</name><index pos:start="1073:41" pos:end="1073:43">[<expr pos:start="1073:42" pos:end="1073:42"><literal type="number" pos:start="1073:42" pos:end="1073:42">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1073:45" pos:end="1073:45">.</operator><name pos:start="1073:46" pos:end="1073:48">val</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1075:17" pos:end="1075:49"><decl pos:start="1075:17" pos:end="1075:48"><type pos:start="1075:17" pos:end="1075:24"><name pos:start="1075:17" pos:end="1075:24">uint32_t</name></type> <name pos:start="1075:26" pos:end="1075:27">ah</name> <init pos:start="1075:29" pos:end="1075:48">= <expr pos:start="1075:31" pos:end="1075:48"><name pos:start="1075:31" pos:end="1075:44"><name pos:start="1075:31" pos:end="1075:35">temps</name><index pos:start="1075:36" pos:end="1075:44">[<expr pos:start="1075:37" pos:end="1075:43"><name pos:start="1075:37" pos:end="1075:43"><name pos:start="1075:37" pos:end="1075:40">args</name><index pos:start="1075:41" pos:end="1075:43">[<expr pos:start="1075:42" pos:end="1075:42"><literal type="number" pos:start="1075:42" pos:end="1075:42">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1075:45" pos:end="1075:45">.</operator><name pos:start="1075:46" pos:end="1075:48">val</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1077:17" pos:end="1077:49"><decl pos:start="1077:17" pos:end="1077:48"><type pos:start="1077:17" pos:end="1077:24"><name pos:start="1077:17" pos:end="1077:24">uint32_t</name></type> <name pos:start="1077:26" pos:end="1077:27">bl</name> <init pos:start="1077:29" pos:end="1077:48">= <expr pos:start="1077:31" pos:end="1077:48"><name pos:start="1077:31" pos:end="1077:44"><name pos:start="1077:31" pos:end="1077:35">temps</name><index pos:start="1077:36" pos:end="1077:44">[<expr pos:start="1077:37" pos:end="1077:43"><name pos:start="1077:37" pos:end="1077:43"><name pos:start="1077:37" pos:end="1077:40">args</name><index pos:start="1077:41" pos:end="1077:43">[<expr pos:start="1077:42" pos:end="1077:42"><literal type="number" pos:start="1077:42" pos:end="1077:42">4</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1077:45" pos:end="1077:45">.</operator><name pos:start="1077:46" pos:end="1077:48">val</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1079:17" pos:end="1079:49"><decl pos:start="1079:17" pos:end="1079:48"><type pos:start="1079:17" pos:end="1079:24"><name pos:start="1079:17" pos:end="1079:24">uint32_t</name></type> <name pos:start="1079:26" pos:end="1079:27">bh</name> <init pos:start="1079:29" pos:end="1079:48">= <expr pos:start="1079:31" pos:end="1079:48"><name pos:start="1079:31" pos:end="1079:44"><name pos:start="1079:31" pos:end="1079:35">temps</name><index pos:start="1079:36" pos:end="1079:44">[<expr pos:start="1079:37" pos:end="1079:43"><name pos:start="1079:37" pos:end="1079:43"><name pos:start="1079:37" pos:end="1079:40">args</name><index pos:start="1079:41" pos:end="1079:43">[<expr pos:start="1079:42" pos:end="1079:42"><literal type="number" pos:start="1079:42" pos:end="1079:42">5</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1079:45" pos:end="1079:45">.</operator><name pos:start="1079:46" pos:end="1079:48">val</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1081:17" pos:end="1081:55"><decl pos:start="1081:17" pos:end="1081:54"><type pos:start="1081:17" pos:end="1081:24"><name pos:start="1081:17" pos:end="1081:24">uint64_t</name></type> <name pos:start="1081:26" pos:end="1081:26">a</name> <init pos:start="1081:28" pos:end="1081:54">= <expr pos:start="1081:30" pos:end="1081:54"><operator pos:start="1081:30" pos:end="1081:30">(</operator><operator pos:start="1081:31" pos:end="1081:31">(</operator><name pos:start="1081:32" pos:end="1081:39">uint64_t</name><operator pos:start="1081:40" pos:end="1081:40">)</operator><name pos:start="1081:41" pos:end="1081:42">ah</name> <operator pos:start="1081:44" pos:end="1081:45">&lt;&lt;</operator> <literal type="number" pos:start="1081:47" pos:end="1081:48">32</literal><operator pos:start="1081:49" pos:end="1081:49">)</operator> <operator pos:start="1081:51" pos:end="1081:51">|</operator> <name pos:start="1081:53" pos:end="1081:54">al</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1083:17" pos:end="1083:55"><decl pos:start="1083:17" pos:end="1083:54"><type pos:start="1083:17" pos:end="1083:24"><name pos:start="1083:17" pos:end="1083:24">uint64_t</name></type> <name pos:start="1083:26" pos:end="1083:26">b</name> <init pos:start="1083:28" pos:end="1083:54">= <expr pos:start="1083:30" pos:end="1083:54"><operator pos:start="1083:30" pos:end="1083:30">(</operator><operator pos:start="1083:31" pos:end="1083:31">(</operator><name pos:start="1083:32" pos:end="1083:39">uint64_t</name><operator pos:start="1083:40" pos:end="1083:40">)</operator><name pos:start="1083:41" pos:end="1083:42">bh</name> <operator pos:start="1083:44" pos:end="1083:45">&lt;&lt;</operator> <literal type="number" pos:start="1083:47" pos:end="1083:48">32</literal><operator pos:start="1083:49" pos:end="1083:49">)</operator> <operator pos:start="1083:51" pos:end="1083:51">|</operator> <name pos:start="1083:53" pos:end="1083:54">bl</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1085:17" pos:end="1085:30"><decl pos:start="1085:17" pos:end="1085:25"><type pos:start="1085:17" pos:end="1085:22"><name pos:start="1085:17" pos:end="1085:22">TCGArg</name></type> <name pos:start="1085:24" pos:end="1085:25">rl</name></decl>, <decl pos:start="1085:28" pos:end="1085:29"><type ref="prev" pos:start="1085:17" pos:end="1085:22"/><name pos:start="1085:28" pos:end="1085:29">rh</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1087:17" pos:end="1087:75"><decl pos:start="1087:17" pos:end="1087:74"><type pos:start="1087:17" pos:end="1087:23"><name pos:start="1087:17" pos:end="1087:21">TCGOp</name> <modifier pos:start="1087:23" pos:end="1087:23">*</modifier></type><name pos:start="1087:24" pos:end="1087:26">op2</name> <init pos:start="1087:28" pos:end="1087:74">= <expr pos:start="1087:30" pos:end="1087:74"><call pos:start="1087:30" pos:end="1087:74"><name pos:start="1087:30" pos:end="1087:45">insert_op_before</name><argument_list pos:start="1087:46" pos:end="1087:74">(<argument pos:start="1087:47" pos:end="1087:47"><expr pos:start="1087:47" pos:end="1087:47"><name pos:start="1087:47" pos:end="1087:47">s</name></expr></argument>, <argument pos:start="1087:50" pos:end="1087:51"><expr pos:start="1087:50" pos:end="1087:51"><name pos:start="1087:50" pos:end="1087:51">op</name></expr></argument>, <argument pos:start="1087:54" pos:end="1087:70"><expr pos:start="1087:54" pos:end="1087:70"><name pos:start="1087:54" pos:end="1087:70">INDEX_op_movi_i32</name></expr></argument>, <argument pos:start="1087:73" pos:end="1087:73"><expr pos:start="1087:73" pos:end="1087:73"><literal type="number" pos:start="1087:73" pos:end="1087:73">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1089:17" pos:end="1089:63"><decl pos:start="1089:17" pos:end="1089:62"><type pos:start="1089:17" pos:end="1089:24"><name pos:start="1089:17" pos:end="1089:22">TCGArg</name> <modifier pos:start="1089:24" pos:end="1089:24">*</modifier></type><name pos:start="1089:25" pos:end="1089:29">args2</name> <init pos:start="1089:31" pos:end="1089:62">= <expr pos:start="1089:33" pos:end="1089:62"><operator pos:start="1089:33" pos:end="1089:33">&amp;</operator><name pos:start="1089:34" pos:end="1089:62"><name pos:start="1089:34" pos:end="1089:34">s</name><operator pos:start="1089:35" pos:end="1089:36">-&gt;</operator><name pos:start="1089:37" pos:end="1089:51">gen_opparam_buf</name><index pos:start="1089:52" pos:end="1089:62">[<expr pos:start="1089:53" pos:end="1089:61"><name pos:start="1089:53" pos:end="1089:61"><name pos:start="1089:53" pos:end="1089:55">op2</name><operator pos:start="1089:56" pos:end="1089:57">-&gt;</operator><name pos:start="1089:58" pos:end="1089:61">args</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="1093:17" pos:end="1101:17"><if pos:start="1093:17" pos:end="1097:17">if <condition pos:start="1093:20" pos:end="1093:45">(<expr pos:start="1093:21" pos:end="1093:44"><name pos:start="1093:21" pos:end="1093:23">opc</name> <operator pos:start="1093:25" pos:end="1093:26">==</operator> <name pos:start="1093:28" pos:end="1093:44">INDEX_op_add2_i32</name></expr>)</condition> <block pos:start="1093:47" pos:end="1097:17">{<block_content pos:start="1095:21" pos:end="1095:27">

                    <expr_stmt pos:start="1095:21" pos:end="1095:27"><expr pos:start="1095:21" pos:end="1095:26"><name pos:start="1095:21" pos:end="1095:21">a</name> <operator pos:start="1095:23" pos:end="1095:24">+=</operator> <name pos:start="1095:26" pos:end="1095:26">b</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1097:19" pos:end="1101:17">else <block pos:start="1097:24" pos:end="1101:17">{<block_content pos:start="1099:21" pos:end="1099:27">

                    <expr_stmt pos:start="1099:21" pos:end="1099:27"><expr pos:start="1099:21" pos:end="1099:26"><name pos:start="1099:21" pos:end="1099:21">a</name> <operator pos:start="1099:23" pos:end="1099:24">-=</operator> <name pos:start="1099:26" pos:end="1099:26">b</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="1105:17" pos:end="1105:29"><expr pos:start="1105:17" pos:end="1105:28"><name pos:start="1105:17" pos:end="1105:18">rl</name> <operator pos:start="1105:20" pos:end="1105:20">=</operator> <name pos:start="1105:22" pos:end="1105:28"><name pos:start="1105:22" pos:end="1105:25">args</name><index pos:start="1105:26" pos:end="1105:28">[<expr pos:start="1105:27" pos:end="1105:27"><literal type="number" pos:start="1105:27" pos:end="1105:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1107:17" pos:end="1107:29"><expr pos:start="1107:17" pos:end="1107:28"><name pos:start="1107:17" pos:end="1107:18">rh</name> <operator pos:start="1107:20" pos:end="1107:20">=</operator> <name pos:start="1107:22" pos:end="1107:28"><name pos:start="1107:22" pos:end="1107:25">args</name><index pos:start="1107:26" pos:end="1107:28">[<expr pos:start="1107:27" pos:end="1107:27"><literal type="number" pos:start="1107:27" pos:end="1107:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1109:17" pos:end="1109:63"><expr pos:start="1109:17" pos:end="1109:62"><call pos:start="1109:17" pos:end="1109:62"><name pos:start="1109:17" pos:end="1109:32">tcg_opt_gen_movi</name><argument_list pos:start="1109:33" pos:end="1109:62">(<argument pos:start="1109:34" pos:end="1109:34"><expr pos:start="1109:34" pos:end="1109:34"><name pos:start="1109:34" pos:end="1109:34">s</name></expr></argument>, <argument pos:start="1109:37" pos:end="1109:38"><expr pos:start="1109:37" pos:end="1109:38"><name pos:start="1109:37" pos:end="1109:38">op</name></expr></argument>, <argument pos:start="1109:41" pos:end="1109:44"><expr pos:start="1109:41" pos:end="1109:44"><name pos:start="1109:41" pos:end="1109:44">args</name></expr></argument>, <argument pos:start="1109:47" pos:end="1109:48"><expr pos:start="1109:47" pos:end="1109:48"><name pos:start="1109:47" pos:end="1109:48">rl</name></expr></argument>, <argument pos:start="1109:51" pos:end="1109:61"><expr pos:start="1109:51" pos:end="1109:61"><operator pos:start="1109:51" pos:end="1109:51">(</operator><name pos:start="1109:52" pos:end="1109:59">uint32_t</name><operator pos:start="1109:60" pos:end="1109:60">)</operator><name pos:start="1109:61" pos:end="1109:61">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1111:17" pos:end="1111:73"><expr pos:start="1111:17" pos:end="1111:72"><call pos:start="1111:17" pos:end="1111:72"><name pos:start="1111:17" pos:end="1111:32">tcg_opt_gen_movi</name><argument_list pos:start="1111:33" pos:end="1111:72">(<argument pos:start="1111:34" pos:end="1111:34"><expr pos:start="1111:34" pos:end="1111:34"><name pos:start="1111:34" pos:end="1111:34">s</name></expr></argument>, <argument pos:start="1111:37" pos:end="1111:39"><expr pos:start="1111:37" pos:end="1111:39"><name pos:start="1111:37" pos:end="1111:39">op2</name></expr></argument>, <argument pos:start="1111:42" pos:end="1111:46"><expr pos:start="1111:42" pos:end="1111:46"><name pos:start="1111:42" pos:end="1111:46">args2</name></expr></argument>, <argument pos:start="1111:49" pos:end="1111:50"><expr pos:start="1111:49" pos:end="1111:50"><name pos:start="1111:49" pos:end="1111:50">rh</name></expr></argument>, <argument pos:start="1111:53" pos:end="1111:71"><expr pos:start="1111:53" pos:end="1111:71"><operator pos:start="1111:53" pos:end="1111:53">(</operator><name pos:start="1111:54" pos:end="1111:61">uint32_t</name><operator pos:start="1111:62" pos:end="1111:62">)</operator><operator pos:start="1111:63" pos:end="1111:63">(</operator><name pos:start="1111:64" pos:end="1111:64">a</name> <operator pos:start="1111:66" pos:end="1111:67">&gt;&gt;</operator> <literal type="number" pos:start="1111:69" pos:end="1111:70">32</literal><operator pos:start="1111:71" pos:end="1111:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="1115:17" pos:end="1115:76">/* We've done all we need to do with the movi.  Skip it.  */</comment>

                <expr_stmt pos:start="1117:17" pos:end="1117:36"><expr pos:start="1117:17" pos:end="1117:35"><name pos:start="1117:17" pos:end="1117:23">oi_next</name> <operator pos:start="1117:25" pos:end="1117:25">=</operator> <name pos:start="1117:27" pos:end="1117:35"><name pos:start="1117:27" pos:end="1117:29">op2</name><operator pos:start="1117:30" pos:end="1117:31">-&gt;</operator><name pos:start="1117:32" pos:end="1117:35">next</name></name></expr>;</expr_stmt>

                <break pos:start="1119:17" pos:end="1119:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="1123:13" pos:end="1123:28">goto <name pos:start="1123:18" pos:end="1123:27">do_default</name>;</goto>



        <case pos:start="1127:9" pos:end="1127:32">case <expr pos:start="1127:14" pos:end="1127:31"><name pos:start="1127:14" pos:end="1127:31">INDEX_op_mulu2_i32</name></expr>:</case>

            <if_stmt pos:start="1129:13" pos:end="1163:13"><if pos:start="1129:13" pos:end="1163:13">if <condition pos:start="1129:16" pos:end="1131:58">(<expr pos:start="1129:17" pos:end="1131:57"><name pos:start="1129:17" pos:end="1129:30"><name pos:start="1129:17" pos:end="1129:21">temps</name><index pos:start="1129:22" pos:end="1129:30">[<expr pos:start="1129:23" pos:end="1129:29"><name pos:start="1129:23" pos:end="1129:29"><name pos:start="1129:23" pos:end="1129:26">args</name><index pos:start="1129:27" pos:end="1129:29">[<expr pos:start="1129:28" pos:end="1129:28"><literal type="number" pos:start="1129:28" pos:end="1129:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1129:31" pos:end="1129:31">.</operator><name pos:start="1129:32" pos:end="1129:36">state</name> <operator pos:start="1129:38" pos:end="1129:39">==</operator> <name pos:start="1129:41" pos:end="1129:54">TCG_TEMP_CONST</name>

                <operator pos:start="1131:17" pos:end="1131:18">&amp;&amp;</operator> <name pos:start="1131:20" pos:end="1131:33"><name pos:start="1131:20" pos:end="1131:24">temps</name><index pos:start="1131:25" pos:end="1131:33">[<expr pos:start="1131:26" pos:end="1131:32"><name pos:start="1131:26" pos:end="1131:32"><name pos:start="1131:26" pos:end="1131:29">args</name><index pos:start="1131:30" pos:end="1131:32">[<expr pos:start="1131:31" pos:end="1131:31"><literal type="number" pos:start="1131:31" pos:end="1131:31">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1131:34" pos:end="1131:34">.</operator><name pos:start="1131:35" pos:end="1131:39">state</name> <operator pos:start="1131:41" pos:end="1131:42">==</operator> <name pos:start="1131:44" pos:end="1131:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="1131:60" pos:end="1163:13">{<block_content pos:start="1133:17" pos:end="1161:22">

                <decl_stmt pos:start="1133:17" pos:end="1133:48"><decl pos:start="1133:17" pos:end="1133:47"><type pos:start="1133:17" pos:end="1133:24"><name pos:start="1133:17" pos:end="1133:24">uint32_t</name></type> <name pos:start="1133:26" pos:end="1133:26">a</name> <init pos:start="1133:28" pos:end="1133:47">= <expr pos:start="1133:30" pos:end="1133:47"><name pos:start="1133:30" pos:end="1133:43"><name pos:start="1133:30" pos:end="1133:34">temps</name><index pos:start="1133:35" pos:end="1133:43">[<expr pos:start="1133:36" pos:end="1133:42"><name pos:start="1133:36" pos:end="1133:42"><name pos:start="1133:36" pos:end="1133:39">args</name><index pos:start="1133:40" pos:end="1133:42">[<expr pos:start="1133:41" pos:end="1133:41"><literal type="number" pos:start="1133:41" pos:end="1133:41">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1133:44" pos:end="1133:44">.</operator><name pos:start="1133:45" pos:end="1133:47">val</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1135:17" pos:end="1135:48"><decl pos:start="1135:17" pos:end="1135:47"><type pos:start="1135:17" pos:end="1135:24"><name pos:start="1135:17" pos:end="1135:24">uint32_t</name></type> <name pos:start="1135:26" pos:end="1135:26">b</name> <init pos:start="1135:28" pos:end="1135:47">= <expr pos:start="1135:30" pos:end="1135:47"><name pos:start="1135:30" pos:end="1135:43"><name pos:start="1135:30" pos:end="1135:34">temps</name><index pos:start="1135:35" pos:end="1135:43">[<expr pos:start="1135:36" pos:end="1135:42"><name pos:start="1135:36" pos:end="1135:42"><name pos:start="1135:36" pos:end="1135:39">args</name><index pos:start="1135:40" pos:end="1135:42">[<expr pos:start="1135:41" pos:end="1135:41"><literal type="number" pos:start="1135:41" pos:end="1135:41">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1135:44" pos:end="1135:44">.</operator><name pos:start="1135:45" pos:end="1135:47">val</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1137:17" pos:end="1137:45"><decl pos:start="1137:17" pos:end="1137:44"><type pos:start="1137:17" pos:end="1137:24"><name pos:start="1137:17" pos:end="1137:24">uint64_t</name></type> <name pos:start="1137:26" pos:end="1137:26">r</name> <init pos:start="1137:28" pos:end="1137:44">= <expr pos:start="1137:30" pos:end="1137:44"><operator pos:start="1137:30" pos:end="1137:30">(</operator><name pos:start="1137:31" pos:end="1137:38">uint64_t</name><operator pos:start="1137:39" pos:end="1137:39">)</operator><name pos:start="1137:40" pos:end="1137:40">a</name> <operator pos:start="1137:42" pos:end="1137:42">*</operator> <name pos:start="1137:44" pos:end="1137:44">b</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1139:17" pos:end="1139:30"><decl pos:start="1139:17" pos:end="1139:25"><type pos:start="1139:17" pos:end="1139:22"><name pos:start="1139:17" pos:end="1139:22">TCGArg</name></type> <name pos:start="1139:24" pos:end="1139:25">rl</name></decl>, <decl pos:start="1139:28" pos:end="1139:29"><type ref="prev" pos:start="1139:17" pos:end="1139:22"/><name pos:start="1139:28" pos:end="1139:29">rh</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1141:17" pos:end="1141:75"><decl pos:start="1141:17" pos:end="1141:74"><type pos:start="1141:17" pos:end="1141:23"><name pos:start="1141:17" pos:end="1141:21">TCGOp</name> <modifier pos:start="1141:23" pos:end="1141:23">*</modifier></type><name pos:start="1141:24" pos:end="1141:26">op2</name> <init pos:start="1141:28" pos:end="1141:74">= <expr pos:start="1141:30" pos:end="1141:74"><call pos:start="1141:30" pos:end="1141:74"><name pos:start="1141:30" pos:end="1141:45">insert_op_before</name><argument_list pos:start="1141:46" pos:end="1141:74">(<argument pos:start="1141:47" pos:end="1141:47"><expr pos:start="1141:47" pos:end="1141:47"><name pos:start="1141:47" pos:end="1141:47">s</name></expr></argument>, <argument pos:start="1141:50" pos:end="1141:51"><expr pos:start="1141:50" pos:end="1141:51"><name pos:start="1141:50" pos:end="1141:51">op</name></expr></argument>, <argument pos:start="1141:54" pos:end="1141:70"><expr pos:start="1141:54" pos:end="1141:70"><name pos:start="1141:54" pos:end="1141:70">INDEX_op_movi_i32</name></expr></argument>, <argument pos:start="1141:73" pos:end="1141:73"><expr pos:start="1141:73" pos:end="1141:73"><literal type="number" pos:start="1141:73" pos:end="1141:73">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="1143:17" pos:end="1143:63"><decl pos:start="1143:17" pos:end="1143:62"><type pos:start="1143:17" pos:end="1143:24"><name pos:start="1143:17" pos:end="1143:22">TCGArg</name> <modifier pos:start="1143:24" pos:end="1143:24">*</modifier></type><name pos:start="1143:25" pos:end="1143:29">args2</name> <init pos:start="1143:31" pos:end="1143:62">= <expr pos:start="1143:33" pos:end="1143:62"><operator pos:start="1143:33" pos:end="1143:33">&amp;</operator><name pos:start="1143:34" pos:end="1143:62"><name pos:start="1143:34" pos:end="1143:34">s</name><operator pos:start="1143:35" pos:end="1143:36">-&gt;</operator><name pos:start="1143:37" pos:end="1143:51">gen_opparam_buf</name><index pos:start="1143:52" pos:end="1143:62">[<expr pos:start="1143:53" pos:end="1143:61"><name pos:start="1143:53" pos:end="1143:61"><name pos:start="1143:53" pos:end="1143:55">op2</name><operator pos:start="1143:56" pos:end="1143:57">-&gt;</operator><name pos:start="1143:58" pos:end="1143:61">args</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="1147:17" pos:end="1147:29"><expr pos:start="1147:17" pos:end="1147:28"><name pos:start="1147:17" pos:end="1147:18">rl</name> <operator pos:start="1147:20" pos:end="1147:20">=</operator> <name pos:start="1147:22" pos:end="1147:28"><name pos:start="1147:22" pos:end="1147:25">args</name><index pos:start="1147:26" pos:end="1147:28">[<expr pos:start="1147:27" pos:end="1147:27"><literal type="number" pos:start="1147:27" pos:end="1147:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1149:17" pos:end="1149:29"><expr pos:start="1149:17" pos:end="1149:28"><name pos:start="1149:17" pos:end="1149:18">rh</name> <operator pos:start="1149:20" pos:end="1149:20">=</operator> <name pos:start="1149:22" pos:end="1149:28"><name pos:start="1149:22" pos:end="1149:25">args</name><index pos:start="1149:26" pos:end="1149:28">[<expr pos:start="1149:27" pos:end="1149:27"><literal type="number" pos:start="1149:27" pos:end="1149:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1151:17" pos:end="1151:63"><expr pos:start="1151:17" pos:end="1151:62"><call pos:start="1151:17" pos:end="1151:62"><name pos:start="1151:17" pos:end="1151:32">tcg_opt_gen_movi</name><argument_list pos:start="1151:33" pos:end="1151:62">(<argument pos:start="1151:34" pos:end="1151:34"><expr pos:start="1151:34" pos:end="1151:34"><name pos:start="1151:34" pos:end="1151:34">s</name></expr></argument>, <argument pos:start="1151:37" pos:end="1151:38"><expr pos:start="1151:37" pos:end="1151:38"><name pos:start="1151:37" pos:end="1151:38">op</name></expr></argument>, <argument pos:start="1151:41" pos:end="1151:44"><expr pos:start="1151:41" pos:end="1151:44"><name pos:start="1151:41" pos:end="1151:44">args</name></expr></argument>, <argument pos:start="1151:47" pos:end="1151:48"><expr pos:start="1151:47" pos:end="1151:48"><name pos:start="1151:47" pos:end="1151:48">rl</name></expr></argument>, <argument pos:start="1151:51" pos:end="1151:61"><expr pos:start="1151:51" pos:end="1151:61"><operator pos:start="1151:51" pos:end="1151:51">(</operator><name pos:start="1151:52" pos:end="1151:59">uint32_t</name><operator pos:start="1151:60" pos:end="1151:60">)</operator><name pos:start="1151:61" pos:end="1151:61">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1153:17" pos:end="1153:73"><expr pos:start="1153:17" pos:end="1153:72"><call pos:start="1153:17" pos:end="1153:72"><name pos:start="1153:17" pos:end="1153:32">tcg_opt_gen_movi</name><argument_list pos:start="1153:33" pos:end="1153:72">(<argument pos:start="1153:34" pos:end="1153:34"><expr pos:start="1153:34" pos:end="1153:34"><name pos:start="1153:34" pos:end="1153:34">s</name></expr></argument>, <argument pos:start="1153:37" pos:end="1153:39"><expr pos:start="1153:37" pos:end="1153:39"><name pos:start="1153:37" pos:end="1153:39">op2</name></expr></argument>, <argument pos:start="1153:42" pos:end="1153:46"><expr pos:start="1153:42" pos:end="1153:46"><name pos:start="1153:42" pos:end="1153:46">args2</name></expr></argument>, <argument pos:start="1153:49" pos:end="1153:50"><expr pos:start="1153:49" pos:end="1153:50"><name pos:start="1153:49" pos:end="1153:50">rh</name></expr></argument>, <argument pos:start="1153:53" pos:end="1153:71"><expr pos:start="1153:53" pos:end="1153:71"><operator pos:start="1153:53" pos:end="1153:53">(</operator><name pos:start="1153:54" pos:end="1153:61">uint32_t</name><operator pos:start="1153:62" pos:end="1153:62">)</operator><operator pos:start="1153:63" pos:end="1153:63">(</operator><name pos:start="1153:64" pos:end="1153:64">r</name> <operator pos:start="1153:66" pos:end="1153:67">&gt;&gt;</operator> <literal type="number" pos:start="1153:69" pos:end="1153:70">32</literal><operator pos:start="1153:71" pos:end="1153:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="1157:17" pos:end="1157:76">/* We've done all we need to do with the movi.  Skip it.  */</comment>

                <expr_stmt pos:start="1159:17" pos:end="1159:36"><expr pos:start="1159:17" pos:end="1159:35"><name pos:start="1159:17" pos:end="1159:23">oi_next</name> <operator pos:start="1159:25" pos:end="1159:25">=</operator> <name pos:start="1159:27" pos:end="1159:35"><name pos:start="1159:27" pos:end="1159:29">op2</name><operator pos:start="1159:30" pos:end="1159:31">-&gt;</operator><name pos:start="1159:32" pos:end="1159:35">next</name></name></expr>;</expr_stmt>

                <break pos:start="1161:17" pos:end="1161:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="1165:13" pos:end="1165:28">goto <name pos:start="1165:18" pos:end="1165:27">do_default</name>;</goto>



        <case pos:start="1169:9" pos:end="1169:34">case <expr pos:start="1169:14" pos:end="1169:33"><name pos:start="1169:14" pos:end="1169:33">INDEX_op_brcond2_i32</name></expr>:</case>

            <expr_stmt pos:start="1171:13" pos:end="1171:73"><expr pos:start="1171:13" pos:end="1171:72"><name pos:start="1171:13" pos:end="1171:15">tmp</name> <operator pos:start="1171:17" pos:end="1171:17">=</operator> <call pos:start="1171:19" pos:end="1171:72"><name pos:start="1171:19" pos:end="1171:43">do_constant_folding_cond2</name><argument_list pos:start="1171:44" pos:end="1171:72">(<argument pos:start="1171:45" pos:end="1171:52"><expr pos:start="1171:45" pos:end="1171:52"><operator pos:start="1171:45" pos:end="1171:45">&amp;</operator><name pos:start="1171:46" pos:end="1171:52"><name pos:start="1171:46" pos:end="1171:49">args</name><index pos:start="1171:50" pos:end="1171:52">[<expr pos:start="1171:51" pos:end="1171:51"><literal type="number" pos:start="1171:51" pos:end="1171:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1171:55" pos:end="1171:62"><expr pos:start="1171:55" pos:end="1171:62"><operator pos:start="1171:55" pos:end="1171:55">&amp;</operator><name pos:start="1171:56" pos:end="1171:62"><name pos:start="1171:56" pos:end="1171:59">args</name><index pos:start="1171:60" pos:end="1171:62">[<expr pos:start="1171:61" pos:end="1171:61"><literal type="number" pos:start="1171:61" pos:end="1171:61">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1171:65" pos:end="1171:71"><expr pos:start="1171:65" pos:end="1171:71"><name pos:start="1171:65" pos:end="1171:71"><name pos:start="1171:65" pos:end="1171:68">args</name><index pos:start="1171:69" pos:end="1171:71">[<expr pos:start="1171:70" pos:end="1171:70"><literal type="number" pos:start="1171:70" pos:end="1171:70">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1173:13" pos:end="1307:13"><if pos:start="1173:13" pos:end="1193:13">if <condition pos:start="1173:16" pos:end="1173:25">(<expr pos:start="1173:17" pos:end="1173:24"><name pos:start="1173:17" pos:end="1173:19">tmp</name> <operator pos:start="1173:21" pos:end="1173:22">!=</operator> <literal type="number" pos:start="1173:24" pos:end="1173:24">2</literal></expr>)</condition> <block pos:start="1173:27" pos:end="1193:13">{<block_content pos:start="1175:17" pos:end="1191:17">

                <if_stmt pos:start="1175:17" pos:end="1191:17"><if pos:start="1175:17" pos:end="1185:17">if <condition pos:start="1175:20" pos:end="1175:24">(<expr pos:start="1175:21" pos:end="1175:23"><name pos:start="1175:21" pos:end="1175:23">tmp</name></expr>)</condition> <block pos:start="1175:26" pos:end="1185:17">{<block_content pos:start="1177:13" pos:end="1183:38">

            <label pos:start="1177:13" pos:end="1177:27"><name pos:start="1177:13" pos:end="1177:26">do_brcond_true</name>:</label>

                    <expr_stmt pos:start="1179:21" pos:end="1179:46"><expr pos:start="1179:21" pos:end="1179:45"><call pos:start="1179:21" pos:end="1179:45"><name pos:start="1179:21" pos:end="1179:35">reset_all_temps</name><argument_list pos:start="1179:36" pos:end="1179:45">(<argument pos:start="1179:37" pos:end="1179:44"><expr pos:start="1179:37" pos:end="1179:44"><name pos:start="1179:37" pos:end="1179:44">nb_temps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1181:21" pos:end="1181:42"><expr pos:start="1181:21" pos:end="1181:41"><name pos:start="1181:21" pos:end="1181:27"><name pos:start="1181:21" pos:end="1181:22">op</name><operator pos:start="1181:23" pos:end="1181:24">-&gt;</operator><name pos:start="1181:25" pos:end="1181:27">opc</name></name> <operator pos:start="1181:29" pos:end="1181:29">=</operator> <name pos:start="1181:31" pos:end="1181:41">INDEX_op_br</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="1183:21" pos:end="1183:38"><expr pos:start="1183:21" pos:end="1183:37"><name pos:start="1183:21" pos:end="1183:27"><name pos:start="1183:21" pos:end="1183:24">args</name><index pos:start="1183:25" pos:end="1183:27">[<expr pos:start="1183:26" pos:end="1183:26"><literal type="number" pos:start="1183:26" pos:end="1183:26">0</literal></expr>]</index></name> <operator pos:start="1183:29" pos:end="1183:29">=</operator> <name pos:start="1183:31" pos:end="1183:37"><name pos:start="1183:31" pos:end="1183:34">args</name><index pos:start="1183:35" pos:end="1183:37">[<expr pos:start="1183:36" pos:end="1183:36"><literal type="number" pos:start="1183:36" pos:end="1183:36">5</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1185:19" pos:end="1191:17">else <block pos:start="1185:24" pos:end="1191:17">{<block_content pos:start="1187:13" pos:end="1189:41">

            <label pos:start="1187:13" pos:end="1187:28"><name pos:start="1187:13" pos:end="1187:27">do_brcond_false</name>:</label>

                    <expr_stmt pos:start="1189:21" pos:end="1189:41"><expr pos:start="1189:21" pos:end="1189:40"><call pos:start="1189:21" pos:end="1189:40"><name pos:start="1189:21" pos:end="1189:33">tcg_op_remove</name><argument_list pos:start="1189:34" pos:end="1189:40">(<argument pos:start="1189:35" pos:end="1189:35"><expr pos:start="1189:35" pos:end="1189:35"><name pos:start="1189:35" pos:end="1189:35">s</name></expr></argument>, <argument pos:start="1189:38" pos:end="1189:39"><expr pos:start="1189:38" pos:end="1189:39"><name pos:start="1189:38" pos:end="1189:39">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1193:15" pos:end="1221:13">else if <condition pos:start="1193:23" pos:end="1201:50">(<expr pos:start="1193:24" pos:end="1201:49"><operator pos:start="1193:24" pos:end="1193:24">(</operator><name pos:start="1193:25" pos:end="1193:31"><name pos:start="1193:25" pos:end="1193:28">args</name><index pos:start="1193:29" pos:end="1193:31">[<expr pos:start="1193:30" pos:end="1193:30"><literal type="number" pos:start="1193:30" pos:end="1193:30">4</literal></expr>]</index></name> <operator pos:start="1193:33" pos:end="1193:34">==</operator> <name pos:start="1193:36" pos:end="1193:46">TCG_COND_LT</name> <operator pos:start="1193:48" pos:end="1193:49">||</operator> <name pos:start="1193:51" pos:end="1193:57"><name pos:start="1193:51" pos:end="1193:54">args</name><index pos:start="1193:55" pos:end="1193:57">[<expr pos:start="1193:56" pos:end="1193:56"><literal type="number" pos:start="1193:56" pos:end="1193:56">4</literal></expr>]</index></name> <operator pos:start="1193:59" pos:end="1193:60">==</operator> <name pos:start="1193:62" pos:end="1193:72">TCG_COND_GE</name><operator pos:start="1193:73" pos:end="1193:73">)</operator>

                       <operator pos:start="1195:24" pos:end="1195:25">&amp;&amp;</operator> <name pos:start="1195:27" pos:end="1195:40"><name pos:start="1195:27" pos:end="1195:31">temps</name><index pos:start="1195:32" pos:end="1195:40">[<expr pos:start="1195:33" pos:end="1195:39"><name pos:start="1195:33" pos:end="1195:39"><name pos:start="1195:33" pos:end="1195:36">args</name><index pos:start="1195:37" pos:end="1195:39">[<expr pos:start="1195:38" pos:end="1195:38"><literal type="number" pos:start="1195:38" pos:end="1195:38">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1195:41" pos:end="1195:41">.</operator><name pos:start="1195:42" pos:end="1195:46">state</name> <operator pos:start="1195:48" pos:end="1195:49">==</operator> <name pos:start="1195:51" pos:end="1195:64">TCG_TEMP_CONST</name>

                       <operator pos:start="1197:24" pos:end="1197:25">&amp;&amp;</operator> <name pos:start="1197:27" pos:end="1197:40"><name pos:start="1197:27" pos:end="1197:31">temps</name><index pos:start="1197:32" pos:end="1197:40">[<expr pos:start="1197:33" pos:end="1197:39"><name pos:start="1197:33" pos:end="1197:39"><name pos:start="1197:33" pos:end="1197:36">args</name><index pos:start="1197:37" pos:end="1197:39">[<expr pos:start="1197:38" pos:end="1197:38"><literal type="number" pos:start="1197:38" pos:end="1197:38">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1197:41" pos:end="1197:41">.</operator><name pos:start="1197:42" pos:end="1197:46">state</name> <operator pos:start="1197:48" pos:end="1197:49">==</operator> <name pos:start="1197:51" pos:end="1197:64">TCG_TEMP_CONST</name>

                       <operator pos:start="1199:24" pos:end="1199:25">&amp;&amp;</operator> <name pos:start="1199:27" pos:end="1199:40"><name pos:start="1199:27" pos:end="1199:31">temps</name><index pos:start="1199:32" pos:end="1199:40">[<expr pos:start="1199:33" pos:end="1199:39"><name pos:start="1199:33" pos:end="1199:39"><name pos:start="1199:33" pos:end="1199:36">args</name><index pos:start="1199:37" pos:end="1199:39">[<expr pos:start="1199:38" pos:end="1199:38"><literal type="number" pos:start="1199:38" pos:end="1199:38">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1199:41" pos:end="1199:41">.</operator><name pos:start="1199:42" pos:end="1199:44">val</name> <operator pos:start="1199:46" pos:end="1199:47">==</operator> <literal type="number" pos:start="1199:49" pos:end="1199:49">0</literal>

                       <operator pos:start="1201:24" pos:end="1201:25">&amp;&amp;</operator> <name pos:start="1201:27" pos:end="1201:40"><name pos:start="1201:27" pos:end="1201:31">temps</name><index pos:start="1201:32" pos:end="1201:40">[<expr pos:start="1201:33" pos:end="1201:39"><name pos:start="1201:33" pos:end="1201:39"><name pos:start="1201:33" pos:end="1201:36">args</name><index pos:start="1201:37" pos:end="1201:39">[<expr pos:start="1201:38" pos:end="1201:38"><literal type="number" pos:start="1201:38" pos:end="1201:38">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1201:41" pos:end="1201:41">.</operator><name pos:start="1201:42" pos:end="1201:44">val</name> <operator pos:start="1201:46" pos:end="1201:47">==</operator> <literal type="number" pos:start="1201:49" pos:end="1201:49">0</literal></expr>)</condition> <block pos:start="1201:52" pos:end="1221:13">{<block_content pos:start="1207:13" pos:end="1219:34">

                <comment type="block" pos:start="1203:17" pos:end="1205:53">/* Simplify LT/GE comparisons vs zero to a single compare

                   vs the high word of the input.  */</comment>

            <label pos:start="1207:13" pos:end="1207:27"><name pos:start="1207:13" pos:end="1207:26">do_brcond_high</name>:</label>

                <expr_stmt pos:start="1209:17" pos:end="1209:42"><expr pos:start="1209:17" pos:end="1209:41"><call pos:start="1209:17" pos:end="1209:41"><name pos:start="1209:17" pos:end="1209:31">reset_all_temps</name><argument_list pos:start="1209:32" pos:end="1209:41">(<argument pos:start="1209:33" pos:end="1209:40"><expr pos:start="1209:33" pos:end="1209:40"><name pos:start="1209:33" pos:end="1209:40">nb_temps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1211:17" pos:end="1211:46"><expr pos:start="1211:17" pos:end="1211:45"><name pos:start="1211:17" pos:end="1211:23"><name pos:start="1211:17" pos:end="1211:18">op</name><operator pos:start="1211:19" pos:end="1211:20">-&gt;</operator><name pos:start="1211:21" pos:end="1211:23">opc</name></name> <operator pos:start="1211:25" pos:end="1211:25">=</operator> <name pos:start="1211:27" pos:end="1211:45">INDEX_op_brcond_i32</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1213:17" pos:end="1213:34"><expr pos:start="1213:17" pos:end="1213:33"><name pos:start="1213:17" pos:end="1213:23"><name pos:start="1213:17" pos:end="1213:20">args</name><index pos:start="1213:21" pos:end="1213:23">[<expr pos:start="1213:22" pos:end="1213:22"><literal type="number" pos:start="1213:22" pos:end="1213:22">0</literal></expr>]</index></name> <operator pos:start="1213:25" pos:end="1213:25">=</operator> <name pos:start="1213:27" pos:end="1213:33"><name pos:start="1213:27" pos:end="1213:30">args</name><index pos:start="1213:31" pos:end="1213:33">[<expr pos:start="1213:32" pos:end="1213:32"><literal type="number" pos:start="1213:32" pos:end="1213:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1215:17" pos:end="1215:34"><expr pos:start="1215:17" pos:end="1215:33"><name pos:start="1215:17" pos:end="1215:23"><name pos:start="1215:17" pos:end="1215:20">args</name><index pos:start="1215:21" pos:end="1215:23">[<expr pos:start="1215:22" pos:end="1215:22"><literal type="number" pos:start="1215:22" pos:end="1215:22">1</literal></expr>]</index></name> <operator pos:start="1215:25" pos:end="1215:25">=</operator> <name pos:start="1215:27" pos:end="1215:33"><name pos:start="1215:27" pos:end="1215:30">args</name><index pos:start="1215:31" pos:end="1215:33">[<expr pos:start="1215:32" pos:end="1215:32"><literal type="number" pos:start="1215:32" pos:end="1215:32">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1217:17" pos:end="1217:34"><expr pos:start="1217:17" pos:end="1217:33"><name pos:start="1217:17" pos:end="1217:23"><name pos:start="1217:17" pos:end="1217:20">args</name><index pos:start="1217:21" pos:end="1217:23">[<expr pos:start="1217:22" pos:end="1217:22"><literal type="number" pos:start="1217:22" pos:end="1217:22">2</literal></expr>]</index></name> <operator pos:start="1217:25" pos:end="1217:25">=</operator> <name pos:start="1217:27" pos:end="1217:33"><name pos:start="1217:27" pos:end="1217:30">args</name><index pos:start="1217:31" pos:end="1217:33">[<expr pos:start="1217:32" pos:end="1217:32"><literal type="number" pos:start="1217:32" pos:end="1217:32">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1219:17" pos:end="1219:34"><expr pos:start="1219:17" pos:end="1219:33"><name pos:start="1219:17" pos:end="1219:23"><name pos:start="1219:17" pos:end="1219:20">args</name><index pos:start="1219:21" pos:end="1219:23">[<expr pos:start="1219:22" pos:end="1219:22"><literal type="number" pos:start="1219:22" pos:end="1219:22">3</literal></expr>]</index></name> <operator pos:start="1219:25" pos:end="1219:25">=</operator> <name pos:start="1219:27" pos:end="1219:33"><name pos:start="1219:27" pos:end="1219:30">args</name><index pos:start="1219:31" pos:end="1219:33">[<expr pos:start="1219:32" pos:end="1219:32"><literal type="number" pos:start="1219:32" pos:end="1219:32">5</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1221:15" pos:end="1267:13">else if <condition pos:start="1221:23" pos:end="1221:46">(<expr pos:start="1221:24" pos:end="1221:45"><name pos:start="1221:24" pos:end="1221:30"><name pos:start="1221:24" pos:end="1221:27">args</name><index pos:start="1221:28" pos:end="1221:30">[<expr pos:start="1221:29" pos:end="1221:29"><literal type="number" pos:start="1221:29" pos:end="1221:29">4</literal></expr>]</index></name> <operator pos:start="1221:32" pos:end="1221:33">==</operator> <name pos:start="1221:35" pos:end="1221:45">TCG_COND_EQ</name></expr>)</condition> <block pos:start="1221:48" pos:end="1267:13">{<block_content pos:start="1227:17" pos:end="1265:34">

                <comment type="block" pos:start="1223:17" pos:end="1225:41">/* Simplify EQ comparisons where one of the pairs

                   can be simplified.  */</comment>

                <expr_stmt pos:start="1227:17" pos:end="1229:78"><expr pos:start="1227:17" pos:end="1229:77"><name pos:start="1227:17" pos:end="1227:19">tmp</name> <operator pos:start="1227:21" pos:end="1227:21">=</operator> <call pos:start="1227:23" pos:end="1229:77"><name pos:start="1227:23" pos:end="1227:46">do_constant_folding_cond</name><argument_list pos:start="1227:47" pos:end="1229:77">(<argument pos:start="1227:48" pos:end="1227:66"><expr pos:start="1227:48" pos:end="1227:66"><name pos:start="1227:48" pos:end="1227:66">INDEX_op_brcond_i32</name></expr></argument>,

                                               <argument pos:start="1229:48" pos:end="1229:54"><expr pos:start="1229:48" pos:end="1229:54"><name pos:start="1229:48" pos:end="1229:54"><name pos:start="1229:48" pos:end="1229:51">args</name><index pos:start="1229:52" pos:end="1229:54">[<expr pos:start="1229:53" pos:end="1229:53"><literal type="number" pos:start="1229:53" pos:end="1229:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1229:57" pos:end="1229:63"><expr pos:start="1229:57" pos:end="1229:63"><name pos:start="1229:57" pos:end="1229:63"><name pos:start="1229:57" pos:end="1229:60">args</name><index pos:start="1229:61" pos:end="1229:63">[<expr pos:start="1229:62" pos:end="1229:62"><literal type="number" pos:start="1229:62" pos:end="1229:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1229:66" pos:end="1229:76"><expr pos:start="1229:66" pos:end="1229:76"><name pos:start="1229:66" pos:end="1229:76">TCG_COND_EQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1231:17" pos:end="1239:17"><if pos:start="1231:17" pos:end="1235:17">if <condition pos:start="1231:20" pos:end="1231:29">(<expr pos:start="1231:21" pos:end="1231:28"><name pos:start="1231:21" pos:end="1231:23">tmp</name> <operator pos:start="1231:25" pos:end="1231:26">==</operator> <literal type="number" pos:start="1231:28" pos:end="1231:28">0</literal></expr>)</condition> <block pos:start="1231:31" pos:end="1235:17">{<block_content pos:start="1233:21" pos:end="1233:41">

                    <goto pos:start="1233:21" pos:end="1233:41">goto <name pos:start="1233:26" pos:end="1233:40">do_brcond_false</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1235:19" pos:end="1239:17">else if <condition pos:start="1235:27" pos:end="1235:36">(<expr pos:start="1235:28" pos:end="1235:35"><name pos:start="1235:28" pos:end="1235:30">tmp</name> <operator pos:start="1235:32" pos:end="1235:33">==</operator> <literal type="number" pos:start="1235:35" pos:end="1235:35">1</literal></expr>)</condition> <block pos:start="1235:38" pos:end="1239:17">{<block_content pos:start="1237:21" pos:end="1237:40">

                    <goto pos:start="1237:21" pos:end="1237:40">goto <name pos:start="1237:26" pos:end="1237:39">do_brcond_high</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1241:17" pos:end="1243:78"><expr pos:start="1241:17" pos:end="1243:77"><name pos:start="1241:17" pos:end="1241:19">tmp</name> <operator pos:start="1241:21" pos:end="1241:21">=</operator> <call pos:start="1241:23" pos:end="1243:77"><name pos:start="1241:23" pos:end="1241:46">do_constant_folding_cond</name><argument_list pos:start="1241:47" pos:end="1243:77">(<argument pos:start="1241:48" pos:end="1241:66"><expr pos:start="1241:48" pos:end="1241:66"><name pos:start="1241:48" pos:end="1241:66">INDEX_op_brcond_i32</name></expr></argument>,

                                               <argument pos:start="1243:48" pos:end="1243:54"><expr pos:start="1243:48" pos:end="1243:54"><name pos:start="1243:48" pos:end="1243:54"><name pos:start="1243:48" pos:end="1243:51">args</name><index pos:start="1243:52" pos:end="1243:54">[<expr pos:start="1243:53" pos:end="1243:53"><literal type="number" pos:start="1243:53" pos:end="1243:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1243:57" pos:end="1243:63"><expr pos:start="1243:57" pos:end="1243:63"><name pos:start="1243:57" pos:end="1243:63"><name pos:start="1243:57" pos:end="1243:60">args</name><index pos:start="1243:61" pos:end="1243:63">[<expr pos:start="1243:62" pos:end="1243:62"><literal type="number" pos:start="1243:62" pos:end="1243:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="1243:66" pos:end="1243:76"><expr pos:start="1243:66" pos:end="1243:76"><name pos:start="1243:66" pos:end="1243:76">TCG_COND_EQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1245:17" pos:end="1253:17"><if pos:start="1245:17" pos:end="1249:17">if <condition pos:start="1245:20" pos:end="1245:29">(<expr pos:start="1245:21" pos:end="1245:28"><name pos:start="1245:21" pos:end="1245:23">tmp</name> <operator pos:start="1245:25" pos:end="1245:26">==</operator> <literal type="number" pos:start="1245:28" pos:end="1245:28">0</literal></expr>)</condition> <block pos:start="1245:31" pos:end="1249:17">{<block_content pos:start="1247:21" pos:end="1247:41">

                    <goto pos:start="1247:21" pos:end="1247:41">goto <name pos:start="1247:26" pos:end="1247:40">do_brcond_false</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1249:19" pos:end="1253:17">else if <condition pos:start="1249:27" pos:end="1249:36">(<expr pos:start="1249:28" pos:end="1249:35"><name pos:start="1249:28" pos:end="1249:30">tmp</name> <operator pos:start="1249:32" pos:end="1249:33">!=</operator> <literal type="number" pos:start="1249:35" pos:end="1249:35">1</literal></expr>)</condition> <block pos:start="1249:38" pos:end="1253:17">{<block_content pos:start="1251:21" pos:end="1251:36">

                    <goto pos:start="1251:21" pos:end="1251:36">goto <name pos:start="1251:26" pos:end="1251:35">do_default</name>;</goto>

                </block_content>}</block></if></if_stmt>

            <label pos:start="1255:13" pos:end="1255:26"><name pos:start="1255:13" pos:end="1255:25">do_brcond_low</name>:</label>

                <expr_stmt pos:start="1257:17" pos:end="1257:42"><expr pos:start="1257:17" pos:end="1257:41"><call pos:start="1257:17" pos:end="1257:41"><name pos:start="1257:17" pos:end="1257:31">reset_all_temps</name><argument_list pos:start="1257:32" pos:end="1257:41">(<argument pos:start="1257:33" pos:end="1257:40"><expr pos:start="1257:33" pos:end="1257:40"><name pos:start="1257:33" pos:end="1257:40">nb_temps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1259:17" pos:end="1259:46"><expr pos:start="1259:17" pos:end="1259:45"><name pos:start="1259:17" pos:end="1259:23"><name pos:start="1259:17" pos:end="1259:18">op</name><operator pos:start="1259:19" pos:end="1259:20">-&gt;</operator><name pos:start="1259:21" pos:end="1259:23">opc</name></name> <operator pos:start="1259:25" pos:end="1259:25">=</operator> <name pos:start="1259:27" pos:end="1259:45">INDEX_op_brcond_i32</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1261:17" pos:end="1261:34"><expr pos:start="1261:17" pos:end="1261:33"><name pos:start="1261:17" pos:end="1261:23"><name pos:start="1261:17" pos:end="1261:20">args</name><index pos:start="1261:21" pos:end="1261:23">[<expr pos:start="1261:22" pos:end="1261:22"><literal type="number" pos:start="1261:22" pos:end="1261:22">1</literal></expr>]</index></name> <operator pos:start="1261:25" pos:end="1261:25">=</operator> <name pos:start="1261:27" pos:end="1261:33"><name pos:start="1261:27" pos:end="1261:30">args</name><index pos:start="1261:31" pos:end="1261:33">[<expr pos:start="1261:32" pos:end="1261:32"><literal type="number" pos:start="1261:32" pos:end="1261:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1263:17" pos:end="1263:34"><expr pos:start="1263:17" pos:end="1263:33"><name pos:start="1263:17" pos:end="1263:23"><name pos:start="1263:17" pos:end="1263:20">args</name><index pos:start="1263:21" pos:end="1263:23">[<expr pos:start="1263:22" pos:end="1263:22"><literal type="number" pos:start="1263:22" pos:end="1263:22">2</literal></expr>]</index></name> <operator pos:start="1263:25" pos:end="1263:25">=</operator> <name pos:start="1263:27" pos:end="1263:33"><name pos:start="1263:27" pos:end="1263:30">args</name><index pos:start="1263:31" pos:end="1263:33">[<expr pos:start="1263:32" pos:end="1263:32"><literal type="number" pos:start="1263:32" pos:end="1263:32">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1265:17" pos:end="1265:34"><expr pos:start="1265:17" pos:end="1265:33"><name pos:start="1265:17" pos:end="1265:23"><name pos:start="1265:17" pos:end="1265:20">args</name><index pos:start="1265:21" pos:end="1265:23">[<expr pos:start="1265:22" pos:end="1265:22"><literal type="number" pos:start="1265:22" pos:end="1265:22">3</literal></expr>]</index></name> <operator pos:start="1265:25" pos:end="1265:25">=</operator> <name pos:start="1265:27" pos:end="1265:33"><name pos:start="1265:27" pos:end="1265:30">args</name><index pos:start="1265:31" pos:end="1265:33">[<expr pos:start="1265:32" pos:end="1265:32"><literal type="number" pos:start="1265:32" pos:end="1265:32">5</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1267:15" pos:end="1303:13">else if <condition pos:start="1267:23" pos:end="1267:46">(<expr pos:start="1267:24" pos:end="1267:45"><name pos:start="1267:24" pos:end="1267:30"><name pos:start="1267:24" pos:end="1267:27">args</name><index pos:start="1267:28" pos:end="1267:30">[<expr pos:start="1267:29" pos:end="1267:29"><literal type="number" pos:start="1267:29" pos:end="1267:29">4</literal></expr>]</index></name> <operator pos:start="1267:32" pos:end="1267:33">==</operator> <name pos:start="1267:35" pos:end="1267:45">TCG_COND_NE</name></expr>)</condition> <block pos:start="1267:48" pos:end="1303:13">{<block_content pos:start="1273:17" pos:end="1301:32">

                <comment type="block" pos:start="1269:17" pos:end="1271:41">/* Simplify NE comparisons where one of the pairs

                   can be simplified.  */</comment>

                <expr_stmt pos:start="1273:17" pos:end="1275:78"><expr pos:start="1273:17" pos:end="1275:77"><name pos:start="1273:17" pos:end="1273:19">tmp</name> <operator pos:start="1273:21" pos:end="1273:21">=</operator> <call pos:start="1273:23" pos:end="1275:77"><name pos:start="1273:23" pos:end="1273:46">do_constant_folding_cond</name><argument_list pos:start="1273:47" pos:end="1275:77">(<argument pos:start="1273:48" pos:end="1273:66"><expr pos:start="1273:48" pos:end="1273:66"><name pos:start="1273:48" pos:end="1273:66">INDEX_op_brcond_i32</name></expr></argument>,

                                               <argument pos:start="1275:48" pos:end="1275:54"><expr pos:start="1275:48" pos:end="1275:54"><name pos:start="1275:48" pos:end="1275:54"><name pos:start="1275:48" pos:end="1275:51">args</name><index pos:start="1275:52" pos:end="1275:54">[<expr pos:start="1275:53" pos:end="1275:53"><literal type="number" pos:start="1275:53" pos:end="1275:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1275:57" pos:end="1275:63"><expr pos:start="1275:57" pos:end="1275:63"><name pos:start="1275:57" pos:end="1275:63"><name pos:start="1275:57" pos:end="1275:60">args</name><index pos:start="1275:61" pos:end="1275:63">[<expr pos:start="1275:62" pos:end="1275:62"><literal type="number" pos:start="1275:62" pos:end="1275:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1275:66" pos:end="1275:76"><expr pos:start="1275:66" pos:end="1275:76"><name pos:start="1275:66" pos:end="1275:76">TCG_COND_NE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1277:17" pos:end="1285:17"><if pos:start="1277:17" pos:end="1281:17">if <condition pos:start="1277:20" pos:end="1277:29">(<expr pos:start="1277:21" pos:end="1277:28"><name pos:start="1277:21" pos:end="1277:23">tmp</name> <operator pos:start="1277:25" pos:end="1277:26">==</operator> <literal type="number" pos:start="1277:28" pos:end="1277:28">0</literal></expr>)</condition> <block pos:start="1277:31" pos:end="1281:17">{<block_content pos:start="1279:21" pos:end="1279:40">

                    <goto pos:start="1279:21" pos:end="1279:40">goto <name pos:start="1279:26" pos:end="1279:39">do_brcond_high</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1281:19" pos:end="1285:17">else if <condition pos:start="1281:27" pos:end="1281:36">(<expr pos:start="1281:28" pos:end="1281:35"><name pos:start="1281:28" pos:end="1281:30">tmp</name> <operator pos:start="1281:32" pos:end="1281:33">==</operator> <literal type="number" pos:start="1281:35" pos:end="1281:35">1</literal></expr>)</condition> <block pos:start="1281:38" pos:end="1285:17">{<block_content pos:start="1283:21" pos:end="1283:40">

                    <goto pos:start="1283:21" pos:end="1283:40">goto <name pos:start="1283:26" pos:end="1283:39">do_brcond_true</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1287:17" pos:end="1289:78"><expr pos:start="1287:17" pos:end="1289:77"><name pos:start="1287:17" pos:end="1287:19">tmp</name> <operator pos:start="1287:21" pos:end="1287:21">=</operator> <call pos:start="1287:23" pos:end="1289:77"><name pos:start="1287:23" pos:end="1287:46">do_constant_folding_cond</name><argument_list pos:start="1287:47" pos:end="1289:77">(<argument pos:start="1287:48" pos:end="1287:66"><expr pos:start="1287:48" pos:end="1287:66"><name pos:start="1287:48" pos:end="1287:66">INDEX_op_brcond_i32</name></expr></argument>,

                                               <argument pos:start="1289:48" pos:end="1289:54"><expr pos:start="1289:48" pos:end="1289:54"><name pos:start="1289:48" pos:end="1289:54"><name pos:start="1289:48" pos:end="1289:51">args</name><index pos:start="1289:52" pos:end="1289:54">[<expr pos:start="1289:53" pos:end="1289:53"><literal type="number" pos:start="1289:53" pos:end="1289:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1289:57" pos:end="1289:63"><expr pos:start="1289:57" pos:end="1289:63"><name pos:start="1289:57" pos:end="1289:63"><name pos:start="1289:57" pos:end="1289:60">args</name><index pos:start="1289:61" pos:end="1289:63">[<expr pos:start="1289:62" pos:end="1289:62"><literal type="number" pos:start="1289:62" pos:end="1289:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="1289:66" pos:end="1289:76"><expr pos:start="1289:66" pos:end="1289:76"><name pos:start="1289:66" pos:end="1289:76">TCG_COND_NE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1291:17" pos:end="1299:17"><if pos:start="1291:17" pos:end="1295:17">if <condition pos:start="1291:20" pos:end="1291:29">(<expr pos:start="1291:21" pos:end="1291:28"><name pos:start="1291:21" pos:end="1291:23">tmp</name> <operator pos:start="1291:25" pos:end="1291:26">==</operator> <literal type="number" pos:start="1291:28" pos:end="1291:28">0</literal></expr>)</condition> <block pos:start="1291:31" pos:end="1295:17">{<block_content pos:start="1293:21" pos:end="1293:39">

                    <goto pos:start="1293:21" pos:end="1293:39">goto <name pos:start="1293:26" pos:end="1293:38">do_brcond_low</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1295:19" pos:end="1299:17">else if <condition pos:start="1295:27" pos:end="1295:36">(<expr pos:start="1295:28" pos:end="1295:35"><name pos:start="1295:28" pos:end="1295:30">tmp</name> <operator pos:start="1295:32" pos:end="1295:33">==</operator> <literal type="number" pos:start="1295:35" pos:end="1295:35">1</literal></expr>)</condition> <block pos:start="1295:38" pos:end="1299:17">{<block_content pos:start="1297:21" pos:end="1297:40">

                    <goto pos:start="1297:21" pos:end="1297:40">goto <name pos:start="1297:26" pos:end="1297:39">do_brcond_true</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <goto pos:start="1301:17" pos:end="1301:32">goto <name pos:start="1301:22" pos:end="1301:31">do_default</name>;</goto>

            </block_content>}</block></if> <else pos:start="1303:15" pos:end="1307:13">else <block pos:start="1303:20" pos:end="1307:13">{<block_content pos:start="1305:17" pos:end="1305:32">

                <goto pos:start="1305:17" pos:end="1305:32">goto <name pos:start="1305:22" pos:end="1305:31">do_default</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1309:13" pos:end="1309:18">break;</break>



        <case pos:start="1313:9" pos:end="1313:35">case <expr pos:start="1313:14" pos:end="1313:34"><name pos:start="1313:14" pos:end="1313:34">INDEX_op_setcond2_i32</name></expr>:</case>

            <expr_stmt pos:start="1315:13" pos:end="1315:73"><expr pos:start="1315:13" pos:end="1315:72"><name pos:start="1315:13" pos:end="1315:15">tmp</name> <operator pos:start="1315:17" pos:end="1315:17">=</operator> <call pos:start="1315:19" pos:end="1315:72"><name pos:start="1315:19" pos:end="1315:43">do_constant_folding_cond2</name><argument_list pos:start="1315:44" pos:end="1315:72">(<argument pos:start="1315:45" pos:end="1315:52"><expr pos:start="1315:45" pos:end="1315:52"><operator pos:start="1315:45" pos:end="1315:45">&amp;</operator><name pos:start="1315:46" pos:end="1315:52"><name pos:start="1315:46" pos:end="1315:49">args</name><index pos:start="1315:50" pos:end="1315:52">[<expr pos:start="1315:51" pos:end="1315:51"><literal type="number" pos:start="1315:51" pos:end="1315:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1315:55" pos:end="1315:62"><expr pos:start="1315:55" pos:end="1315:62"><operator pos:start="1315:55" pos:end="1315:55">&amp;</operator><name pos:start="1315:56" pos:end="1315:62"><name pos:start="1315:56" pos:end="1315:59">args</name><index pos:start="1315:60" pos:end="1315:62">[<expr pos:start="1315:61" pos:end="1315:61"><literal type="number" pos:start="1315:61" pos:end="1315:61">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="1315:65" pos:end="1315:71"><expr pos:start="1315:65" pos:end="1315:71"><name pos:start="1315:65" pos:end="1315:71"><name pos:start="1315:65" pos:end="1315:68">args</name><index pos:start="1315:69" pos:end="1315:71">[<expr pos:start="1315:70" pos:end="1315:70"><literal type="number" pos:start="1315:70" pos:end="1315:70">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1317:13" pos:end="1437:13"><if pos:start="1317:13" pos:end="1323:13">if <condition pos:start="1317:16" pos:end="1317:25">(<expr pos:start="1317:17" pos:end="1317:24"><name pos:start="1317:17" pos:end="1317:19">tmp</name> <operator pos:start="1317:21" pos:end="1317:22">!=</operator> <literal type="number" pos:start="1317:24" pos:end="1317:24">2</literal></expr>)</condition> <block pos:start="1317:27" pos:end="1323:13">{<block_content pos:start="1319:13" pos:end="1321:60">

            <label pos:start="1319:13" pos:end="1319:29"><name pos:start="1319:13" pos:end="1319:28">do_setcond_const</name>:</label>

                <expr_stmt pos:start="1321:17" pos:end="1321:60"><expr pos:start="1321:17" pos:end="1321:59"><call pos:start="1321:17" pos:end="1321:59"><name pos:start="1321:17" pos:end="1321:32">tcg_opt_gen_movi</name><argument_list pos:start="1321:33" pos:end="1321:59">(<argument pos:start="1321:34" pos:end="1321:34"><expr pos:start="1321:34" pos:end="1321:34"><name pos:start="1321:34" pos:end="1321:34">s</name></expr></argument>, <argument pos:start="1321:37" pos:end="1321:38"><expr pos:start="1321:37" pos:end="1321:38"><name pos:start="1321:37" pos:end="1321:38">op</name></expr></argument>, <argument pos:start="1321:41" pos:end="1321:44"><expr pos:start="1321:41" pos:end="1321:44"><name pos:start="1321:41" pos:end="1321:44">args</name></expr></argument>, <argument pos:start="1321:47" pos:end="1321:53"><expr pos:start="1321:47" pos:end="1321:53"><name pos:start="1321:47" pos:end="1321:53"><name pos:start="1321:47" pos:end="1321:50">args</name><index pos:start="1321:51" pos:end="1321:53">[<expr pos:start="1321:52" pos:end="1321:52"><literal type="number" pos:start="1321:52" pos:end="1321:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1321:56" pos:end="1321:58"><expr pos:start="1321:56" pos:end="1321:58"><name pos:start="1321:56" pos:end="1321:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1323:15" pos:end="1351:13">else if <condition pos:start="1323:23" pos:end="1331:50">(<expr pos:start="1323:24" pos:end="1331:49"><operator pos:start="1323:24" pos:end="1323:24">(</operator><name pos:start="1323:25" pos:end="1323:31"><name pos:start="1323:25" pos:end="1323:28">args</name><index pos:start="1323:29" pos:end="1323:31">[<expr pos:start="1323:30" pos:end="1323:30"><literal type="number" pos:start="1323:30" pos:end="1323:30">5</literal></expr>]</index></name> <operator pos:start="1323:33" pos:end="1323:34">==</operator> <name pos:start="1323:36" pos:end="1323:46">TCG_COND_LT</name> <operator pos:start="1323:48" pos:end="1323:49">||</operator> <name pos:start="1323:51" pos:end="1323:57"><name pos:start="1323:51" pos:end="1323:54">args</name><index pos:start="1323:55" pos:end="1323:57">[<expr pos:start="1323:56" pos:end="1323:56"><literal type="number" pos:start="1323:56" pos:end="1323:56">5</literal></expr>]</index></name> <operator pos:start="1323:59" pos:end="1323:60">==</operator> <name pos:start="1323:62" pos:end="1323:72">TCG_COND_GE</name><operator pos:start="1323:73" pos:end="1323:73">)</operator>

                       <operator pos:start="1325:24" pos:end="1325:25">&amp;&amp;</operator> <name pos:start="1325:27" pos:end="1325:40"><name pos:start="1325:27" pos:end="1325:31">temps</name><index pos:start="1325:32" pos:end="1325:40">[<expr pos:start="1325:33" pos:end="1325:39"><name pos:start="1325:33" pos:end="1325:39"><name pos:start="1325:33" pos:end="1325:36">args</name><index pos:start="1325:37" pos:end="1325:39">[<expr pos:start="1325:38" pos:end="1325:38"><literal type="number" pos:start="1325:38" pos:end="1325:38">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1325:41" pos:end="1325:41">.</operator><name pos:start="1325:42" pos:end="1325:46">state</name> <operator pos:start="1325:48" pos:end="1325:49">==</operator> <name pos:start="1325:51" pos:end="1325:64">TCG_TEMP_CONST</name>

                       <operator pos:start="1327:24" pos:end="1327:25">&amp;&amp;</operator> <name pos:start="1327:27" pos:end="1327:40"><name pos:start="1327:27" pos:end="1327:31">temps</name><index pos:start="1327:32" pos:end="1327:40">[<expr pos:start="1327:33" pos:end="1327:39"><name pos:start="1327:33" pos:end="1327:39"><name pos:start="1327:33" pos:end="1327:36">args</name><index pos:start="1327:37" pos:end="1327:39">[<expr pos:start="1327:38" pos:end="1327:38"><literal type="number" pos:start="1327:38" pos:end="1327:38">4</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1327:41" pos:end="1327:41">.</operator><name pos:start="1327:42" pos:end="1327:46">state</name> <operator pos:start="1327:48" pos:end="1327:49">==</operator> <name pos:start="1327:51" pos:end="1327:64">TCG_TEMP_CONST</name>

                       <operator pos:start="1329:24" pos:end="1329:25">&amp;&amp;</operator> <name pos:start="1329:27" pos:end="1329:40"><name pos:start="1329:27" pos:end="1329:31">temps</name><index pos:start="1329:32" pos:end="1329:40">[<expr pos:start="1329:33" pos:end="1329:39"><name pos:start="1329:33" pos:end="1329:39"><name pos:start="1329:33" pos:end="1329:36">args</name><index pos:start="1329:37" pos:end="1329:39">[<expr pos:start="1329:38" pos:end="1329:38"><literal type="number" pos:start="1329:38" pos:end="1329:38">3</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1329:41" pos:end="1329:41">.</operator><name pos:start="1329:42" pos:end="1329:44">val</name> <operator pos:start="1329:46" pos:end="1329:47">==</operator> <literal type="number" pos:start="1329:49" pos:end="1329:49">0</literal>

                       <operator pos:start="1331:24" pos:end="1331:25">&amp;&amp;</operator> <name pos:start="1331:27" pos:end="1331:40"><name pos:start="1331:27" pos:end="1331:31">temps</name><index pos:start="1331:32" pos:end="1331:40">[<expr pos:start="1331:33" pos:end="1331:39"><name pos:start="1331:33" pos:end="1331:39"><name pos:start="1331:33" pos:end="1331:36">args</name><index pos:start="1331:37" pos:end="1331:39">[<expr pos:start="1331:38" pos:end="1331:38"><literal type="number" pos:start="1331:38" pos:end="1331:38">4</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1331:41" pos:end="1331:41">.</operator><name pos:start="1331:42" pos:end="1331:44">val</name> <operator pos:start="1331:46" pos:end="1331:47">==</operator> <literal type="number" pos:start="1331:49" pos:end="1331:49">0</literal></expr>)</condition> <block pos:start="1331:52" pos:end="1351:13">{<block_content pos:start="1337:13" pos:end="1349:34">

                <comment type="block" pos:start="1333:17" pos:end="1335:53">/* Simplify LT/GE comparisons vs zero to a single compare

                   vs the high word of the input.  */</comment>

            <label pos:start="1337:13" pos:end="1337:28"><name pos:start="1337:13" pos:end="1337:27">do_setcond_high</name>:</label>

                <expr_stmt pos:start="1339:17" pos:end="1339:36"><expr pos:start="1339:17" pos:end="1339:35"><call pos:start="1339:17" pos:end="1339:35"><name pos:start="1339:17" pos:end="1339:26">reset_temp</name><argument_list pos:start="1339:27" pos:end="1339:35">(<argument pos:start="1339:28" pos:end="1339:34"><expr pos:start="1339:28" pos:end="1339:34"><name pos:start="1339:28" pos:end="1339:34"><name pos:start="1339:28" pos:end="1339:31">args</name><index pos:start="1339:32" pos:end="1339:34">[<expr pos:start="1339:33" pos:end="1339:33"><literal type="number" pos:start="1339:33" pos:end="1339:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1341:17" pos:end="1341:40"><expr pos:start="1341:17" pos:end="1341:39"><name pos:start="1341:17" pos:end="1341:30"><name pos:start="1341:17" pos:end="1341:21">temps</name><index pos:start="1341:22" pos:end="1341:30">[<expr pos:start="1341:23" pos:end="1341:29"><name pos:start="1341:23" pos:end="1341:29"><name pos:start="1341:23" pos:end="1341:26">args</name><index pos:start="1341:27" pos:end="1341:29">[<expr pos:start="1341:28" pos:end="1341:28"><literal type="number" pos:start="1341:28" pos:end="1341:28">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1341:31" pos:end="1341:31">.</operator><name pos:start="1341:32" pos:end="1341:35">mask</name> <operator pos:start="1341:37" pos:end="1341:37">=</operator> <literal type="number" pos:start="1341:39" pos:end="1341:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1343:17" pos:end="1343:47"><expr pos:start="1343:17" pos:end="1343:46"><name pos:start="1343:17" pos:end="1343:23"><name pos:start="1343:17" pos:end="1343:18">op</name><operator pos:start="1343:19" pos:end="1343:20">-&gt;</operator><name pos:start="1343:21" pos:end="1343:23">opc</name></name> <operator pos:start="1343:25" pos:end="1343:25">=</operator> <name pos:start="1343:27" pos:end="1343:46">INDEX_op_setcond_i32</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1345:17" pos:end="1345:34"><expr pos:start="1345:17" pos:end="1345:33"><name pos:start="1345:17" pos:end="1345:23"><name pos:start="1345:17" pos:end="1345:20">args</name><index pos:start="1345:21" pos:end="1345:23">[<expr pos:start="1345:22" pos:end="1345:22"><literal type="number" pos:start="1345:22" pos:end="1345:22">1</literal></expr>]</index></name> <operator pos:start="1345:25" pos:end="1345:25">=</operator> <name pos:start="1345:27" pos:end="1345:33"><name pos:start="1345:27" pos:end="1345:30">args</name><index pos:start="1345:31" pos:end="1345:33">[<expr pos:start="1345:32" pos:end="1345:32"><literal type="number" pos:start="1345:32" pos:end="1345:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1347:17" pos:end="1347:34"><expr pos:start="1347:17" pos:end="1347:33"><name pos:start="1347:17" pos:end="1347:23"><name pos:start="1347:17" pos:end="1347:20">args</name><index pos:start="1347:21" pos:end="1347:23">[<expr pos:start="1347:22" pos:end="1347:22"><literal type="number" pos:start="1347:22" pos:end="1347:22">2</literal></expr>]</index></name> <operator pos:start="1347:25" pos:end="1347:25">=</operator> <name pos:start="1347:27" pos:end="1347:33"><name pos:start="1347:27" pos:end="1347:30">args</name><index pos:start="1347:31" pos:end="1347:33">[<expr pos:start="1347:32" pos:end="1347:32"><literal type="number" pos:start="1347:32" pos:end="1347:32">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1349:17" pos:end="1349:34"><expr pos:start="1349:17" pos:end="1349:33"><name pos:start="1349:17" pos:end="1349:23"><name pos:start="1349:17" pos:end="1349:20">args</name><index pos:start="1349:21" pos:end="1349:23">[<expr pos:start="1349:22" pos:end="1349:22"><literal type="number" pos:start="1349:22" pos:end="1349:22">3</literal></expr>]</index></name> <operator pos:start="1349:25" pos:end="1349:25">=</operator> <name pos:start="1349:27" pos:end="1349:33"><name pos:start="1349:27" pos:end="1349:30">args</name><index pos:start="1349:31" pos:end="1349:33">[<expr pos:start="1349:32" pos:end="1349:32"><literal type="number" pos:start="1349:32" pos:end="1349:32">5</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1351:15" pos:end="1397:13">else if <condition pos:start="1351:23" pos:end="1351:46">(<expr pos:start="1351:24" pos:end="1351:45"><name pos:start="1351:24" pos:end="1351:30"><name pos:start="1351:24" pos:end="1351:27">args</name><index pos:start="1351:28" pos:end="1351:30">[<expr pos:start="1351:29" pos:end="1351:29"><literal type="number" pos:start="1351:29" pos:end="1351:29">5</literal></expr>]</index></name> <operator pos:start="1351:32" pos:end="1351:33">==</operator> <name pos:start="1351:35" pos:end="1351:45">TCG_COND_EQ</name></expr>)</condition> <block pos:start="1351:48" pos:end="1397:13">{<block_content pos:start="1357:17" pos:end="1395:34">

                <comment type="block" pos:start="1353:17" pos:end="1355:41">/* Simplify EQ comparisons where one of the pairs

                   can be simplified.  */</comment>

                <expr_stmt pos:start="1357:17" pos:end="1359:78"><expr pos:start="1357:17" pos:end="1359:77"><name pos:start="1357:17" pos:end="1357:19">tmp</name> <operator pos:start="1357:21" pos:end="1357:21">=</operator> <call pos:start="1357:23" pos:end="1359:77"><name pos:start="1357:23" pos:end="1357:46">do_constant_folding_cond</name><argument_list pos:start="1357:47" pos:end="1359:77">(<argument pos:start="1357:48" pos:end="1357:67"><expr pos:start="1357:48" pos:end="1357:67"><name pos:start="1357:48" pos:end="1357:67">INDEX_op_setcond_i32</name></expr></argument>,

                                               <argument pos:start="1359:48" pos:end="1359:54"><expr pos:start="1359:48" pos:end="1359:54"><name pos:start="1359:48" pos:end="1359:54"><name pos:start="1359:48" pos:end="1359:51">args</name><index pos:start="1359:52" pos:end="1359:54">[<expr pos:start="1359:53" pos:end="1359:53"><literal type="number" pos:start="1359:53" pos:end="1359:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1359:57" pos:end="1359:63"><expr pos:start="1359:57" pos:end="1359:63"><name pos:start="1359:57" pos:end="1359:63"><name pos:start="1359:57" pos:end="1359:60">args</name><index pos:start="1359:61" pos:end="1359:63">[<expr pos:start="1359:62" pos:end="1359:62"><literal type="number" pos:start="1359:62" pos:end="1359:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="1359:66" pos:end="1359:76"><expr pos:start="1359:66" pos:end="1359:76"><name pos:start="1359:66" pos:end="1359:76">TCG_COND_EQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1361:17" pos:end="1369:17"><if pos:start="1361:17" pos:end="1365:17">if <condition pos:start="1361:20" pos:end="1361:29">(<expr pos:start="1361:21" pos:end="1361:28"><name pos:start="1361:21" pos:end="1361:23">tmp</name> <operator pos:start="1361:25" pos:end="1361:26">==</operator> <literal type="number" pos:start="1361:28" pos:end="1361:28">0</literal></expr>)</condition> <block pos:start="1361:31" pos:end="1365:17">{<block_content pos:start="1363:21" pos:end="1363:42">

                    <goto pos:start="1363:21" pos:end="1363:42">goto <name pos:start="1363:26" pos:end="1363:41">do_setcond_const</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1365:19" pos:end="1369:17">else if <condition pos:start="1365:27" pos:end="1365:36">(<expr pos:start="1365:28" pos:end="1365:35"><name pos:start="1365:28" pos:end="1365:30">tmp</name> <operator pos:start="1365:32" pos:end="1365:33">==</operator> <literal type="number" pos:start="1365:35" pos:end="1365:35">1</literal></expr>)</condition> <block pos:start="1365:38" pos:end="1369:17">{<block_content pos:start="1367:21" pos:end="1367:41">

                    <goto pos:start="1367:21" pos:end="1367:41">goto <name pos:start="1367:26" pos:end="1367:40">do_setcond_high</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1371:17" pos:end="1373:78"><expr pos:start="1371:17" pos:end="1373:77"><name pos:start="1371:17" pos:end="1371:19">tmp</name> <operator pos:start="1371:21" pos:end="1371:21">=</operator> <call pos:start="1371:23" pos:end="1373:77"><name pos:start="1371:23" pos:end="1371:46">do_constant_folding_cond</name><argument_list pos:start="1371:47" pos:end="1373:77">(<argument pos:start="1371:48" pos:end="1371:67"><expr pos:start="1371:48" pos:end="1371:67"><name pos:start="1371:48" pos:end="1371:67">INDEX_op_setcond_i32</name></expr></argument>,

                                               <argument pos:start="1373:48" pos:end="1373:54"><expr pos:start="1373:48" pos:end="1373:54"><name pos:start="1373:48" pos:end="1373:54"><name pos:start="1373:48" pos:end="1373:51">args</name><index pos:start="1373:52" pos:end="1373:54">[<expr pos:start="1373:53" pos:end="1373:53"><literal type="number" pos:start="1373:53" pos:end="1373:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1373:57" pos:end="1373:63"><expr pos:start="1373:57" pos:end="1373:63"><name pos:start="1373:57" pos:end="1373:63"><name pos:start="1373:57" pos:end="1373:60">args</name><index pos:start="1373:61" pos:end="1373:63">[<expr pos:start="1373:62" pos:end="1373:62"><literal type="number" pos:start="1373:62" pos:end="1373:62">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="1373:66" pos:end="1373:76"><expr pos:start="1373:66" pos:end="1373:76"><name pos:start="1373:66" pos:end="1373:76">TCG_COND_EQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1375:17" pos:end="1383:17"><if pos:start="1375:17" pos:end="1379:17">if <condition pos:start="1375:20" pos:end="1375:29">(<expr pos:start="1375:21" pos:end="1375:28"><name pos:start="1375:21" pos:end="1375:23">tmp</name> <operator pos:start="1375:25" pos:end="1375:26">==</operator> <literal type="number" pos:start="1375:28" pos:end="1375:28">0</literal></expr>)</condition> <block pos:start="1375:31" pos:end="1379:17">{<block_content pos:start="1377:21" pos:end="1377:41">

                    <goto pos:start="1377:21" pos:end="1377:41">goto <name pos:start="1377:26" pos:end="1377:40">do_setcond_high</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1379:19" pos:end="1383:17">else if <condition pos:start="1379:27" pos:end="1379:36">(<expr pos:start="1379:28" pos:end="1379:35"><name pos:start="1379:28" pos:end="1379:30">tmp</name> <operator pos:start="1379:32" pos:end="1379:33">!=</operator> <literal type="number" pos:start="1379:35" pos:end="1379:35">1</literal></expr>)</condition> <block pos:start="1379:38" pos:end="1383:17">{<block_content pos:start="1381:21" pos:end="1381:36">

                    <goto pos:start="1381:21" pos:end="1381:36">goto <name pos:start="1381:26" pos:end="1381:35">do_default</name>;</goto>

                </block_content>}</block></if></if_stmt>

            <label pos:start="1385:13" pos:end="1385:27"><name pos:start="1385:13" pos:end="1385:26">do_setcond_low</name>:</label>

                <expr_stmt pos:start="1387:17" pos:end="1387:36"><expr pos:start="1387:17" pos:end="1387:35"><call pos:start="1387:17" pos:end="1387:35"><name pos:start="1387:17" pos:end="1387:26">reset_temp</name><argument_list pos:start="1387:27" pos:end="1387:35">(<argument pos:start="1387:28" pos:end="1387:34"><expr pos:start="1387:28" pos:end="1387:34"><name pos:start="1387:28" pos:end="1387:34"><name pos:start="1387:28" pos:end="1387:31">args</name><index pos:start="1387:32" pos:end="1387:34">[<expr pos:start="1387:33" pos:end="1387:33"><literal type="number" pos:start="1387:33" pos:end="1387:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1389:17" pos:end="1389:40"><expr pos:start="1389:17" pos:end="1389:39"><name pos:start="1389:17" pos:end="1389:30"><name pos:start="1389:17" pos:end="1389:21">temps</name><index pos:start="1389:22" pos:end="1389:30">[<expr pos:start="1389:23" pos:end="1389:29"><name pos:start="1389:23" pos:end="1389:29"><name pos:start="1389:23" pos:end="1389:26">args</name><index pos:start="1389:27" pos:end="1389:29">[<expr pos:start="1389:28" pos:end="1389:28"><literal type="number" pos:start="1389:28" pos:end="1389:28">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="1389:31" pos:end="1389:31">.</operator><name pos:start="1389:32" pos:end="1389:35">mask</name> <operator pos:start="1389:37" pos:end="1389:37">=</operator> <literal type="number" pos:start="1389:39" pos:end="1389:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1391:17" pos:end="1391:47"><expr pos:start="1391:17" pos:end="1391:46"><name pos:start="1391:17" pos:end="1391:23"><name pos:start="1391:17" pos:end="1391:18">op</name><operator pos:start="1391:19" pos:end="1391:20">-&gt;</operator><name pos:start="1391:21" pos:end="1391:23">opc</name></name> <operator pos:start="1391:25" pos:end="1391:25">=</operator> <name pos:start="1391:27" pos:end="1391:46">INDEX_op_setcond_i32</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1393:17" pos:end="1393:34"><expr pos:start="1393:17" pos:end="1393:33"><name pos:start="1393:17" pos:end="1393:23"><name pos:start="1393:17" pos:end="1393:20">args</name><index pos:start="1393:21" pos:end="1393:23">[<expr pos:start="1393:22" pos:end="1393:22"><literal type="number" pos:start="1393:22" pos:end="1393:22">2</literal></expr>]</index></name> <operator pos:start="1393:25" pos:end="1393:25">=</operator> <name pos:start="1393:27" pos:end="1393:33"><name pos:start="1393:27" pos:end="1393:30">args</name><index pos:start="1393:31" pos:end="1393:33">[<expr pos:start="1393:32" pos:end="1393:32"><literal type="number" pos:start="1393:32" pos:end="1393:32">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1395:17" pos:end="1395:34"><expr pos:start="1395:17" pos:end="1395:33"><name pos:start="1395:17" pos:end="1395:23"><name pos:start="1395:17" pos:end="1395:20">args</name><index pos:start="1395:21" pos:end="1395:23">[<expr pos:start="1395:22" pos:end="1395:22"><literal type="number" pos:start="1395:22" pos:end="1395:22">3</literal></expr>]</index></name> <operator pos:start="1395:25" pos:end="1395:25">=</operator> <name pos:start="1395:27" pos:end="1395:33"><name pos:start="1395:27" pos:end="1395:30">args</name><index pos:start="1395:31" pos:end="1395:33">[<expr pos:start="1395:32" pos:end="1395:32"><literal type="number" pos:start="1395:32" pos:end="1395:32">5</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1397:15" pos:end="1433:13">else if <condition pos:start="1397:23" pos:end="1397:46">(<expr pos:start="1397:24" pos:end="1397:45"><name pos:start="1397:24" pos:end="1397:30"><name pos:start="1397:24" pos:end="1397:27">args</name><index pos:start="1397:28" pos:end="1397:30">[<expr pos:start="1397:29" pos:end="1397:29"><literal type="number" pos:start="1397:29" pos:end="1397:29">5</literal></expr>]</index></name> <operator pos:start="1397:32" pos:end="1397:33">==</operator> <name pos:start="1397:35" pos:end="1397:45">TCG_COND_NE</name></expr>)</condition> <block pos:start="1397:48" pos:end="1433:13">{<block_content pos:start="1403:17" pos:end="1431:32">

                <comment type="block" pos:start="1399:17" pos:end="1401:41">/* Simplify NE comparisons where one of the pairs

                   can be simplified.  */</comment>

                <expr_stmt pos:start="1403:17" pos:end="1405:78"><expr pos:start="1403:17" pos:end="1405:77"><name pos:start="1403:17" pos:end="1403:19">tmp</name> <operator pos:start="1403:21" pos:end="1403:21">=</operator> <call pos:start="1403:23" pos:end="1405:77"><name pos:start="1403:23" pos:end="1403:46">do_constant_folding_cond</name><argument_list pos:start="1403:47" pos:end="1405:77">(<argument pos:start="1403:48" pos:end="1403:67"><expr pos:start="1403:48" pos:end="1403:67"><name pos:start="1403:48" pos:end="1403:67">INDEX_op_setcond_i32</name></expr></argument>,

                                               <argument pos:start="1405:48" pos:end="1405:54"><expr pos:start="1405:48" pos:end="1405:54"><name pos:start="1405:48" pos:end="1405:54"><name pos:start="1405:48" pos:end="1405:51">args</name><index pos:start="1405:52" pos:end="1405:54">[<expr pos:start="1405:53" pos:end="1405:53"><literal type="number" pos:start="1405:53" pos:end="1405:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1405:57" pos:end="1405:63"><expr pos:start="1405:57" pos:end="1405:63"><name pos:start="1405:57" pos:end="1405:63"><name pos:start="1405:57" pos:end="1405:60">args</name><index pos:start="1405:61" pos:end="1405:63">[<expr pos:start="1405:62" pos:end="1405:62"><literal type="number" pos:start="1405:62" pos:end="1405:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="1405:66" pos:end="1405:76"><expr pos:start="1405:66" pos:end="1405:76"><name pos:start="1405:66" pos:end="1405:76">TCG_COND_NE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1407:17" pos:end="1415:17"><if pos:start="1407:17" pos:end="1411:17">if <condition pos:start="1407:20" pos:end="1407:29">(<expr pos:start="1407:21" pos:end="1407:28"><name pos:start="1407:21" pos:end="1407:23">tmp</name> <operator pos:start="1407:25" pos:end="1407:26">==</operator> <literal type="number" pos:start="1407:28" pos:end="1407:28">0</literal></expr>)</condition> <block pos:start="1407:31" pos:end="1411:17">{<block_content pos:start="1409:21" pos:end="1409:41">

                    <goto pos:start="1409:21" pos:end="1409:41">goto <name pos:start="1409:26" pos:end="1409:40">do_setcond_high</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1411:19" pos:end="1415:17">else if <condition pos:start="1411:27" pos:end="1411:36">(<expr pos:start="1411:28" pos:end="1411:35"><name pos:start="1411:28" pos:end="1411:30">tmp</name> <operator pos:start="1411:32" pos:end="1411:33">==</operator> <literal type="number" pos:start="1411:35" pos:end="1411:35">1</literal></expr>)</condition> <block pos:start="1411:38" pos:end="1415:17">{<block_content pos:start="1413:21" pos:end="1413:42">

                    <goto pos:start="1413:21" pos:end="1413:42">goto <name pos:start="1413:26" pos:end="1413:41">do_setcond_const</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1417:17" pos:end="1419:78"><expr pos:start="1417:17" pos:end="1419:77"><name pos:start="1417:17" pos:end="1417:19">tmp</name> <operator pos:start="1417:21" pos:end="1417:21">=</operator> <call pos:start="1417:23" pos:end="1419:77"><name pos:start="1417:23" pos:end="1417:46">do_constant_folding_cond</name><argument_list pos:start="1417:47" pos:end="1419:77">(<argument pos:start="1417:48" pos:end="1417:67"><expr pos:start="1417:48" pos:end="1417:67"><name pos:start="1417:48" pos:end="1417:67">INDEX_op_setcond_i32</name></expr></argument>,

                                               <argument pos:start="1419:48" pos:end="1419:54"><expr pos:start="1419:48" pos:end="1419:54"><name pos:start="1419:48" pos:end="1419:54"><name pos:start="1419:48" pos:end="1419:51">args</name><index pos:start="1419:52" pos:end="1419:54">[<expr pos:start="1419:53" pos:end="1419:53"><literal type="number" pos:start="1419:53" pos:end="1419:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="1419:57" pos:end="1419:63"><expr pos:start="1419:57" pos:end="1419:63"><name pos:start="1419:57" pos:end="1419:63"><name pos:start="1419:57" pos:end="1419:60">args</name><index pos:start="1419:61" pos:end="1419:63">[<expr pos:start="1419:62" pos:end="1419:62"><literal type="number" pos:start="1419:62" pos:end="1419:62">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="1419:66" pos:end="1419:76"><expr pos:start="1419:66" pos:end="1419:76"><name pos:start="1419:66" pos:end="1419:76">TCG_COND_NE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1421:17" pos:end="1429:17"><if pos:start="1421:17" pos:end="1425:17">if <condition pos:start="1421:20" pos:end="1421:29">(<expr pos:start="1421:21" pos:end="1421:28"><name pos:start="1421:21" pos:end="1421:23">tmp</name> <operator pos:start="1421:25" pos:end="1421:26">==</operator> <literal type="number" pos:start="1421:28" pos:end="1421:28">0</literal></expr>)</condition> <block pos:start="1421:31" pos:end="1425:17">{<block_content pos:start="1423:21" pos:end="1423:40">

                    <goto pos:start="1423:21" pos:end="1423:40">goto <name pos:start="1423:26" pos:end="1423:39">do_setcond_low</name>;</goto>

                </block_content>}</block></if> <if type="elseif" pos:start="1425:19" pos:end="1429:17">else if <condition pos:start="1425:27" pos:end="1425:36">(<expr pos:start="1425:28" pos:end="1425:35"><name pos:start="1425:28" pos:end="1425:30">tmp</name> <operator pos:start="1425:32" pos:end="1425:33">==</operator> <literal type="number" pos:start="1425:35" pos:end="1425:35">1</literal></expr>)</condition> <block pos:start="1425:38" pos:end="1429:17">{<block_content pos:start="1427:21" pos:end="1427:42">

                    <goto pos:start="1427:21" pos:end="1427:42">goto <name pos:start="1427:26" pos:end="1427:41">do_setcond_const</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <goto pos:start="1431:17" pos:end="1431:32">goto <name pos:start="1431:22" pos:end="1431:31">do_default</name>;</goto>

            </block_content>}</block></if> <else pos:start="1433:15" pos:end="1437:13">else <block pos:start="1433:20" pos:end="1437:13">{<block_content pos:start="1435:17" pos:end="1435:32">

                <goto pos:start="1435:17" pos:end="1435:32">goto <name pos:start="1435:22" pos:end="1435:31">do_default</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1439:13" pos:end="1439:18">break;</break>



        <case pos:start="1443:9" pos:end="1443:27">case <expr pos:start="1443:14" pos:end="1443:26"><name pos:start="1443:14" pos:end="1443:26">INDEX_op_call</name></expr>:</case>

            <if_stmt pos:start="1445:13" pos:end="1455:13"><if pos:start="1445:13" pos:end="1455:13">if <condition pos:start="1445:16" pos:end="1447:76">(<expr pos:start="1445:17" pos:end="1447:75"><operator pos:start="1445:17" pos:end="1445:17">!</operator><operator pos:start="1445:18" pos:end="1445:18">(</operator><name pos:start="1445:19" pos:end="1445:47"><name pos:start="1445:19" pos:end="1445:22">args</name><index pos:start="1445:23" pos:end="1445:47">[<expr pos:start="1445:24" pos:end="1445:46"><name pos:start="1445:24" pos:end="1445:31">nb_oargs</name> <operator pos:start="1445:33" pos:end="1445:33">+</operator> <name pos:start="1445:35" pos:end="1445:42">nb_iargs</name> <operator pos:start="1445:44" pos:end="1445:44">+</operator> <literal type="number" pos:start="1445:46" pos:end="1445:46">1</literal></expr>]</index></name>

                  <operator pos:start="1447:19" pos:end="1447:19">&amp;</operator> <operator pos:start="1447:21" pos:end="1447:21">(</operator><name pos:start="1447:22" pos:end="1447:45">TCG_CALL_NO_READ_GLOBALS</name> <operator pos:start="1447:47" pos:end="1447:47">|</operator> <name pos:start="1447:49" pos:end="1447:73">TCG_CALL_NO_WRITE_GLOBALS</name><operator pos:start="1447:74" pos:end="1447:74">)</operator><operator pos:start="1447:75" pos:end="1447:75">)</operator></expr>)</condition> <block pos:start="1447:78" pos:end="1455:13">{<block_content pos:start="1449:17" pos:end="1453:17">

                <for pos:start="1449:17" pos:end="1453:17">for <control pos:start="1449:21" pos:end="1449:48">(<init pos:start="1449:22" pos:end="1449:27"><expr pos:start="1449:22" pos:end="1449:26"><name pos:start="1449:22" pos:end="1449:22">i</name> <operator pos:start="1449:24" pos:end="1449:24">=</operator> <literal type="number" pos:start="1449:26" pos:end="1449:26">0</literal></expr>;</init> <condition pos:start="1449:29" pos:end="1449:43"><expr pos:start="1449:29" pos:end="1449:42"><name pos:start="1449:29" pos:end="1449:29">i</name> <operator pos:start="1449:31" pos:end="1449:31">&lt;</operator> <name pos:start="1449:33" pos:end="1449:42">nb_globals</name></expr>;</condition> <incr pos:start="1449:45" pos:end="1449:47"><expr pos:start="1449:45" pos:end="1449:47"><name pos:start="1449:45" pos:end="1449:45">i</name><operator pos:start="1449:46" pos:end="1449:47">++</operator></expr></incr>)</control> <block pos:start="1449:50" pos:end="1453:17">{<block_content pos:start="1451:21" pos:end="1451:34">

                    <expr_stmt pos:start="1451:21" pos:end="1451:34"><expr pos:start="1451:21" pos:end="1451:33"><call pos:start="1451:21" pos:end="1451:33"><name pos:start="1451:21" pos:end="1451:30">reset_temp</name><argument_list pos:start="1451:31" pos:end="1451:33">(<argument pos:start="1451:32" pos:end="1451:32"><expr pos:start="1451:32" pos:end="1451:32"><name pos:start="1451:32" pos:end="1451:32">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="1457:13" pos:end="1457:33">goto <name pos:start="1457:18" pos:end="1457:32">do_reset_output</name>;</goto>



        <default pos:start="1461:9" pos:end="1461:16">default:</default>

        <label pos:start="1463:9" pos:end="1463:19"><name pos:start="1463:9" pos:end="1463:18">do_default</name>:</label>

            <comment type="block" pos:start="1465:13" pos:end="1473:67">/* Default case: we know nothing about operation (or were unable

               to compute the operation result) so no propagation is done.

               We trash everything if the operation is the end of a basic

               block, otherwise we only trash the output args.  "mask" is

               the non-zero bits mask for the first output arg.  */</comment>

            <if_stmt pos:start="1475:13" pos:end="1499:13"><if pos:start="1475:13" pos:end="1479:13">if <condition pos:start="1475:16" pos:end="1475:44">(<expr pos:start="1475:17" pos:end="1475:43"><name pos:start="1475:17" pos:end="1475:26"><name pos:start="1475:17" pos:end="1475:19">def</name><operator pos:start="1475:20" pos:end="1475:21">-&gt;</operator><name pos:start="1475:22" pos:end="1475:26">flags</name></name> <operator pos:start="1475:28" pos:end="1475:28">&amp;</operator> <name pos:start="1475:30" pos:end="1475:43">TCG_OPF_BB_END</name></expr>)</condition> <block pos:start="1475:46" pos:end="1479:13">{<block_content pos:start="1477:17" pos:end="1477:42">

                <expr_stmt pos:start="1477:17" pos:end="1477:42"><expr pos:start="1477:17" pos:end="1477:41"><call pos:start="1477:17" pos:end="1477:41"><name pos:start="1477:17" pos:end="1477:31">reset_all_temps</name><argument_list pos:start="1477:32" pos:end="1477:41">(<argument pos:start="1477:33" pos:end="1477:40"><expr pos:start="1477:33" pos:end="1477:40"><name pos:start="1477:33" pos:end="1477:40">nb_temps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1479:15" pos:end="1499:13">else <block pos:start="1479:20" pos:end="1499:13">{<block_content pos:start="1481:9" pos:end="1497:17">

        <label pos:start="1481:9" pos:end="1481:24"><name pos:start="1481:9" pos:end="1481:23">do_reset_output</name>:</label>

                <for pos:start="1483:17" pos:end="1497:17">for <control pos:start="1483:21" pos:end="1483:46">(<init pos:start="1483:22" pos:end="1483:27"><expr pos:start="1483:22" pos:end="1483:26"><name pos:start="1483:22" pos:end="1483:22">i</name> <operator pos:start="1483:24" pos:end="1483:24">=</operator> <literal type="number" pos:start="1483:26" pos:end="1483:26">0</literal></expr>;</init> <condition pos:start="1483:29" pos:end="1483:41"><expr pos:start="1483:29" pos:end="1483:40"><name pos:start="1483:29" pos:end="1483:29">i</name> <operator pos:start="1483:31" pos:end="1483:31">&lt;</operator> <name pos:start="1483:33" pos:end="1483:40">nb_oargs</name></expr>;</condition> <incr pos:start="1483:43" pos:end="1483:45"><expr pos:start="1483:43" pos:end="1483:45"><name pos:start="1483:43" pos:end="1483:43">i</name><operator pos:start="1483:44" pos:end="1483:45">++</operator></expr></incr>)</control> <block pos:start="1483:48" pos:end="1497:17">{<block_content pos:start="1485:21" pos:end="1495:21">

                    <expr_stmt pos:start="1485:21" pos:end="1485:40"><expr pos:start="1485:21" pos:end="1485:39"><call pos:start="1485:21" pos:end="1485:39"><name pos:start="1485:21" pos:end="1485:30">reset_temp</name><argument_list pos:start="1485:31" pos:end="1485:39">(<argument pos:start="1485:32" pos:end="1485:38"><expr pos:start="1485:32" pos:end="1485:38"><name pos:start="1485:32" pos:end="1485:38"><name pos:start="1485:32" pos:end="1485:35">args</name><index pos:start="1485:36" pos:end="1485:38">[<expr pos:start="1485:37" pos:end="1485:37"><name pos:start="1485:37" pos:end="1485:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1487:21" pos:end="1489:76">/* Save the corresponding known-zero bits mask for the

                       first output argument (only one supported so far). */</comment>

                    <if_stmt pos:start="1491:21" pos:end="1495:21"><if pos:start="1491:21" pos:end="1495:21">if <condition pos:start="1491:24" pos:end="1491:31">(<expr pos:start="1491:25" pos:end="1491:30"><name pos:start="1491:25" pos:end="1491:25">i</name> <operator pos:start="1491:27" pos:end="1491:28">==</operator> <literal type="number" pos:start="1491:30" pos:end="1491:30">0</literal></expr>)</condition> <block pos:start="1491:33" pos:end="1495:21">{<block_content pos:start="1493:25" pos:end="1493:51">

                        <expr_stmt pos:start="1493:25" pos:end="1493:51"><expr pos:start="1493:25" pos:end="1493:50"><name pos:start="1493:25" pos:end="1493:38"><name pos:start="1493:25" pos:end="1493:29">temps</name><index pos:start="1493:30" pos:end="1493:38">[<expr pos:start="1493:31" pos:end="1493:37"><name pos:start="1493:31" pos:end="1493:37"><name pos:start="1493:31" pos:end="1493:34">args</name><index pos:start="1493:35" pos:end="1493:37">[<expr pos:start="1493:36" pos:end="1493:36"><name pos:start="1493:36" pos:end="1493:36">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="1493:39" pos:end="1493:39">.</operator><name pos:start="1493:40" pos:end="1493:43">mask</name> <operator pos:start="1493:45" pos:end="1493:45">=</operator> <name pos:start="1493:47" pos:end="1493:50">mask</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1501:13" pos:end="1501:18">break;</break>

        </block_content>}</block></switch>

    }

}
</unit>
