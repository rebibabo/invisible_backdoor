<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20687.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">var_read_string</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:40">AVIOContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">pb</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">str</name> <init pos:start="7:15" pos:end="7:35">= <expr pos:start="7:17" pos:end="7:35"><call pos:start="7:17" pos:end="7:35"><name pos:start="7:17" pos:end="7:25">av_malloc</name><argument_list pos:start="7:26" pos:end="7:35">(<argument pos:start="7:27" pos:end="7:34"><expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:30">size</name> <operator pos:start="7:32" pos:end="7:32">+</operator> <literal type="number" pos:start="7:34" pos:end="7:34">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:20"><if pos:start="9:5" pos:end="11:20">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:12">str</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:20"><block_content pos:start="11:9" pos:end="11:20">

        <return pos:start="11:9" pos:end="11:20">return <expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:5">n</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:45"><name pos:start="13:9" pos:end="13:20">avio_get_str</name><argument_list pos:start="13:21" pos:end="13:45">(<argument pos:start="13:22" pos:end="13:23"><expr pos:start="13:22" pos:end="13:23"><name pos:start="13:22" pos:end="13:23">pb</name></expr></argument>, <argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">size</name></expr></argument>, <argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">str</name></expr></argument>, <argument pos:start="13:37" pos:end="13:44"><expr pos:start="13:37" pos:end="13:44"><name pos:start="13:37" pos:end="13:40">size</name> <operator pos:start="13:42" pos:end="13:42">+</operator> <literal type="number" pos:start="13:44" pos:end="13:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:32"><if pos:start="15:5" pos:end="17:32">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">n</name> <operator pos:start="15:11" pos:end="15:11">&lt;</operator> <name pos:start="15:13" pos:end="15:16">size</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:32"><block_content pos:start="17:9" pos:end="17:32">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:17">avio_skip</name><argument_list pos:start="17:18" pos:end="17:31">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">pb</name></expr></argument>, <argument pos:start="17:23" pos:end="17:30"><expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:26">size</name> <operator pos:start="17:28" pos:end="17:28">-</operator> <name pos:start="17:30" pos:end="17:30">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="19:5" pos:end="19:15">return <expr pos:start="19:12" pos:end="19:14"><name pos:start="19:12" pos:end="19:14">str</name></expr>;</return>

</block_content>}</block></function>
</unit>
