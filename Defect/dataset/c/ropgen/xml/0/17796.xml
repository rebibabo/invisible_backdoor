<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17796.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">dshow_read_header</name><parameter_list pos:start="1:29" pos:end="1:52">(<parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">dshow_ctx</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">IGraphBuilder</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">graph</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">ICreateDevEnum</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">devenum</name> <init pos:start="9:29" pos:end="9:34">= <expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">IMediaControl</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">control</name> <init pos:start="11:28" pos:end="11:33">= <expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:26">= <expr pos:start="13:15" pos:end="13:26"><call pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:21">AVERROR</name><argument_list pos:start="13:22" pos:end="13:26">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">EIO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:56">(<expr pos:start="19:9" pos:end="19:55"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:12">ctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:26">list_devices</name></name> <operator pos:start="19:28" pos:end="19:29">&amp;&amp;</operator> <operator pos:start="19:31" pos:end="19:31">!</operator><call pos:start="19:32" pos:end="19:55"><name pos:start="19:32" pos:end="19:48">parse_device_name</name><argument_list pos:start="19:49" pos:end="19:55">(<argument pos:start="19:50" pos:end="19:54"><expr pos:start="19:50" pos:end="19:54"><name pos:start="19:50" pos:end="19:54">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:58" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:19">

        <expr_stmt pos:start="21:9" pos:end="21:71"><expr pos:start="21:9" pos:end="21:70"><call pos:start="21:9" pos:end="21:70"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:70">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:69"><expr pos:start="21:37" pos:end="21:69"><literal type="string" pos:start="21:37" pos:end="21:69">"Malformed dshow input string.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:19">goto <name pos:start="23:14" pos:end="23:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:71"><expr pos:start="29:5" pos:end="31:70"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:23">video_codec_id</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <ternary pos:start="29:27" pos:end="31:70"><condition pos:start="29:27" pos:end="29:49"><expr pos:start="29:27" pos:end="29:47"><name pos:start="29:27" pos:end="29:47"><name pos:start="29:27" pos:end="29:31">avctx</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:47">video_codec_id</name></name></expr> ?</condition><then pos:start="29:51" pos:end="29:71"> <expr pos:start="29:51" pos:end="29:71"><name pos:start="29:51" pos:end="29:71"><name pos:start="29:51" pos:end="29:55">avctx</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:71">video_codec_id</name></name></expr>

                                                </then><else pos:start="31:49" pos:end="31:70">: <expr pos:start="31:51" pos:end="31:70"><name pos:start="31:51" pos:end="31:70">AV_CODEC_ID_RAWVIDEO</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="47:5"><if pos:start="33:5" pos:end="47:5">if <condition pos:start="33:8" pos:end="33:45">(<expr pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:11">ctx</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:25">pixel_format</name></name> <operator pos:start="33:27" pos:end="33:28">!=</operator> <name pos:start="33:30" pos:end="33:44">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="33:47" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:9">

        <if_stmt pos:start="35:9" pos:end="45:9"><if pos:start="35:9" pos:end="45:9">if <condition pos:start="35:12" pos:end="35:56">(<expr pos:start="35:13" pos:end="35:55"><name pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:15">ctx</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:31">video_codec_id</name></name> <operator pos:start="35:33" pos:end="35:34">!=</operator> <name pos:start="35:36" pos:end="35:55">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="35:58" pos:end="45:9">{<block_content pos:start="37:13" pos:end="43:23">

            <expr_stmt pos:start="37:13" pos:end="39:77"><expr pos:start="37:13" pos:end="39:76"><call pos:start="37:13" pos:end="39:76"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="39:76">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24">avctx</name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:41" pos:end="39:75"><expr pos:start="37:41" pos:end="39:75"><literal type="string" pos:start="37:41" pos:end="37:76">"Pixel format may only be set when "</literal>

                              <literal type="string" pos:start="39:31" pos:end="39:75">"video codec is not set or set to rawvideo\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:33"><name pos:start="41:19" pos:end="41:25">AVERROR</name><argument_list pos:start="41:26" pos:end="41:33">(<argument pos:start="41:27" pos:end="41:32"><expr pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:23">goto <name pos:start="43:18" pos:end="43:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="49:23">(<expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:11">ctx</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:22">framerate</name></name></expr>)</condition> <block pos:start="49:25" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:9">

        <expr_stmt pos:start="51:9" pos:end="51:75"><expr pos:start="51:9" pos:end="51:74"><name pos:start="51:9" pos:end="51:9">r</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:74"><name pos:start="51:13" pos:end="51:31">av_parse_video_rate</name><argument_list pos:start="51:32" pos:end="51:74">(<argument pos:start="51:33" pos:end="51:57"><expr pos:start="51:33" pos:end="51:57"><operator pos:start="51:33" pos:end="51:33">&amp;</operator><name pos:start="51:34" pos:end="51:57"><name pos:start="51:34" pos:end="51:36">ctx</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:57">requested_framerate</name></name></expr></argument>, <argument pos:start="51:60" pos:end="51:73"><expr pos:start="51:60" pos:end="51:73"><name pos:start="51:60" pos:end="51:73"><name pos:start="51:60" pos:end="51:62">ctx</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:73">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:18">(<expr pos:start="53:13" pos:end="53:17"><name pos:start="53:13" pos:end="53:13">r</name> <operator pos:start="53:15" pos:end="53:15">&lt;</operator> <literal type="number" pos:start="53:17" pos:end="53:17">0</literal></expr>)</condition> <block pos:start="53:20" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:23">

            <expr_stmt pos:start="55:13" pos:end="55:93"><expr pos:start="55:13" pos:end="55:92"><call pos:start="55:13" pos:end="55:92"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:92">(<argument pos:start="55:20" pos:end="55:24"><expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">avctx</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:75"><expr pos:start="55:41" pos:end="55:75"><literal type="string" pos:start="55:41" pos:end="55:75">"Could not parse framerate '%s'.\n"</literal></expr></argument>, <argument pos:start="55:78" pos:end="55:91"><expr pos:start="55:78" pos:end="55:91"><name pos:start="55:78" pos:end="55:91"><name pos:start="55:78" pos:end="55:80">ctx</name><operator pos:start="55:81" pos:end="55:82">-&gt;</operator><name pos:start="55:83" pos:end="55:91">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:23">goto <name pos:start="57:18" pos:end="57:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><call pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:16">CoInitialize</name><argument_list pos:start="65:17" pos:end="65:19">(<argument pos:start="65:18" pos:end="65:18"><expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="71:63"><expr pos:start="69:5" pos:end="71:62"><name pos:start="69:5" pos:end="69:5">r</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <call pos:start="69:9" pos:end="71:62"><name pos:start="69:9" pos:end="69:24">CoCreateInstance</name><argument_list pos:start="69:25" pos:end="71:62">(<argument pos:start="69:26" pos:end="69:43"><expr pos:start="69:26" pos:end="69:43"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:43">CLSID_FilterGraph</name></expr></argument>, <argument pos:start="69:46" pos:end="69:49"><expr pos:start="69:46" pos:end="69:49"><name pos:start="69:46" pos:end="69:49">NULL</name></expr></argument>, <argument pos:start="69:52" pos:end="69:71"><expr pos:start="69:52" pos:end="69:71"><name pos:start="69:52" pos:end="69:71">CLSCTX_INPROC_SERVER</name></expr></argument>,

                         <argument pos:start="71:26" pos:end="71:43"><expr pos:start="71:26" pos:end="71:43"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:43">IID_IGraphBuilder</name></expr></argument>, <argument pos:start="71:46" pos:end="71:61"><expr pos:start="71:46" pos:end="71:61"><operator pos:start="71:46" pos:end="71:46">(</operator><name pos:start="71:47" pos:end="71:50">void</name> <operator pos:start="71:52" pos:end="71:52">*</operator><operator pos:start="71:53" pos:end="71:53">*</operator><operator pos:start="71:54" pos:end="71:54">)</operator> <operator pos:start="71:56" pos:end="71:56">&amp;</operator><name pos:start="71:57" pos:end="71:61">graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:9">r</name> <operator pos:start="73:11" pos:end="73:12">!=</operator> <name pos:start="73:14" pos:end="73:17">S_OK</name></expr>)</condition> <block pos:start="73:20" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:19">

        <expr_stmt pos:start="75:9" pos:end="75:73"><expr pos:start="75:9" pos:end="75:72"><call pos:start="75:9" pos:end="75:72"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:72">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">avctx</name></expr></argument>, <argument pos:start="75:23" pos:end="75:34"><expr pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:37" pos:end="75:71"><expr pos:start="75:37" pos:end="75:71"><literal type="string" pos:start="75:37" pos:end="75:71">"Could not create capture graph.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:19">goto <name pos:start="77:14" pos:end="77:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:7">ctx</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:14">graph</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:22">graph</name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="87:66"><expr pos:start="85:5" pos:end="87:65"><name pos:start="85:5" pos:end="85:5">r</name> <operator pos:start="85:7" pos:end="85:7">=</operator> <call pos:start="85:9" pos:end="87:65"><name pos:start="85:9" pos:end="85:24">CoCreateInstance</name><argument_list pos:start="85:25" pos:end="87:65">(<argument pos:start="85:26" pos:end="85:48"><expr pos:start="85:26" pos:end="85:48"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:48">CLSID_SystemDeviceEnum</name></expr></argument>, <argument pos:start="85:51" pos:end="85:54"><expr pos:start="85:51" pos:end="85:54"><name pos:start="85:51" pos:end="85:54">NULL</name></expr></argument>, <argument pos:start="85:57" pos:end="85:76"><expr pos:start="85:57" pos:end="85:76"><name pos:start="85:57" pos:end="85:76">CLSCTX_INPROC_SERVER</name></expr></argument>,

                         <argument pos:start="87:26" pos:end="87:44"><expr pos:start="87:26" pos:end="87:44"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:44">IID_ICreateDevEnum</name></expr></argument>, <argument pos:start="87:47" pos:end="87:64"><expr pos:start="87:47" pos:end="87:64"><operator pos:start="87:47" pos:end="87:47">(</operator><name pos:start="87:48" pos:end="87:51">void</name> <operator pos:start="87:53" pos:end="87:53">*</operator><operator pos:start="87:54" pos:end="87:54">*</operator><operator pos:start="87:55" pos:end="87:55">)</operator> <operator pos:start="87:57" pos:end="87:57">&amp;</operator><name pos:start="87:58" pos:end="87:64">devenum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:9">r</name> <operator pos:start="89:11" pos:end="89:12">!=</operator> <name pos:start="89:14" pos:end="89:17">S_OK</name></expr>)</condition> <block pos:start="89:20" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:19">

        <expr_stmt pos:start="91:9" pos:end="91:77"><expr pos:start="91:9" pos:end="91:76"><call pos:start="91:9" pos:end="91:76"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:76">(<argument pos:start="91:16" pos:end="91:20"><expr pos:start="91:16" pos:end="91:20"><name pos:start="91:16" pos:end="91:20">avctx</name></expr></argument>, <argument pos:start="91:23" pos:end="91:34"><expr pos:start="91:23" pos:end="91:34"><name pos:start="91:23" pos:end="91:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:37" pos:end="91:75"><expr pos:start="91:37" pos:end="91:75"><literal type="string" pos:start="91:37" pos:end="91:75">"Could not enumerate system devices.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:19">goto <name pos:start="93:14" pos:end="93:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="113:5"><if pos:start="99:5" pos:end="113:5">if <condition pos:start="99:8" pos:end="99:26">(<expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:11">ctx</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:25">list_devices</name></name></expr>)</condition> <block pos:start="99:28" pos:end="113:5">{<block_content pos:start="101:9" pos:end="111:19">

        <expr_stmt pos:start="101:9" pos:end="101:65"><expr pos:start="101:9" pos:end="101:64"><call pos:start="101:9" pos:end="101:64"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:64">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20">avctx</name></expr></argument>, <argument pos:start="101:23" pos:end="101:33"><expr pos:start="101:23" pos:end="101:33"><name pos:start="101:23" pos:end="101:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="101:36" pos:end="101:63"><expr pos:start="101:36" pos:end="101:63"><literal type="string" pos:start="101:36" pos:end="101:63">"DirectShow video devices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:63"><expr pos:start="103:9" pos:end="103:62"><call pos:start="103:9" pos:end="103:62"><name pos:start="103:9" pos:end="103:27">dshow_cycle_devices</name><argument_list pos:start="103:28" pos:end="103:62">(<argument pos:start="103:29" pos:end="103:33"><expr pos:start="103:29" pos:end="103:33"><name pos:start="103:29" pos:end="103:33">avctx</name></expr></argument>, <argument pos:start="103:36" pos:end="103:42"><expr pos:start="103:36" pos:end="103:42"><name pos:start="103:36" pos:end="103:42">devenum</name></expr></argument>, <argument pos:start="103:45" pos:end="103:55"><expr pos:start="103:45" pos:end="103:55"><name pos:start="103:45" pos:end="103:55">VideoDevice</name></expr></argument>, <argument pos:start="103:58" pos:end="103:61"><expr pos:start="103:58" pos:end="103:61"><name pos:start="103:58" pos:end="103:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:65"><expr pos:start="105:9" pos:end="105:64"><call pos:start="105:9" pos:end="105:64"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:64">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:33"><expr pos:start="105:23" pos:end="105:33"><name pos:start="105:23" pos:end="105:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="105:36" pos:end="105:63"><expr pos:start="105:36" pos:end="105:63"><literal type="string" pos:start="105:36" pos:end="105:63">"DirectShow audio devices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:63"><expr pos:start="107:9" pos:end="107:62"><call pos:start="107:9" pos:end="107:62"><name pos:start="107:9" pos:end="107:27">dshow_cycle_devices</name><argument_list pos:start="107:28" pos:end="107:62">(<argument pos:start="107:29" pos:end="107:33"><expr pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:33">avctx</name></expr></argument>, <argument pos:start="107:36" pos:end="107:42"><expr pos:start="107:36" pos:end="107:42"><name pos:start="107:36" pos:end="107:42">devenum</name></expr></argument>, <argument pos:start="107:45" pos:end="107:55"><expr pos:start="107:45" pos:end="107:55"><name pos:start="107:45" pos:end="107:55">AudioDevice</name></expr></argument>, <argument pos:start="107:58" pos:end="107:61"><expr pos:start="107:58" pos:end="107:61"><name pos:start="107:58" pos:end="107:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:27"><expr pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:26">AVERROR_EXIT</name></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:19">goto <name pos:start="111:14" pos:end="111:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="129:5"><if pos:start="115:5" pos:end="129:5">if <condition pos:start="115:8" pos:end="115:26">(<expr pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:11">ctx</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:25">list_options</name></name></expr>)</condition> <block pos:start="115:28" pos:end="129:5">{<block_content pos:start="117:9" pos:end="127:19">

        <if_stmt pos:start="117:9" pos:end="119:67"><if pos:start="117:9" pos:end="119:67">if <condition pos:start="117:12" pos:end="117:42">(<expr pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:15">ctx</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:28">device_name</name><index pos:start="117:29" pos:end="117:41">[<expr pos:start="117:30" pos:end="117:40"><name pos:start="117:30" pos:end="117:40">VideoDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:67"><block_content pos:start="119:13" pos:end="119:67">

            <expr_stmt pos:start="119:13" pos:end="119:67"><expr pos:start="119:13" pos:end="119:66"><call pos:start="119:13" pos:end="119:66"><name pos:start="119:13" pos:end="119:37">dshow_list_device_options</name><argument_list pos:start="119:38" pos:end="119:66">(<argument pos:start="119:39" pos:end="119:43"><expr pos:start="119:39" pos:end="119:43"><name pos:start="119:39" pos:end="119:43">avctx</name></expr></argument>, <argument pos:start="119:46" pos:end="119:52"><expr pos:start="119:46" pos:end="119:52"><name pos:start="119:46" pos:end="119:52">devenum</name></expr></argument>, <argument pos:start="119:55" pos:end="119:65"><expr pos:start="119:55" pos:end="119:65"><name pos:start="119:55" pos:end="119:65">VideoDevice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="123:67"><if pos:start="121:9" pos:end="123:67">if <condition pos:start="121:12" pos:end="121:42">(<expr pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:15">ctx</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:28">device_name</name><index pos:start="121:29" pos:end="121:41">[<expr pos:start="121:30" pos:end="121:40"><name pos:start="121:30" pos:end="121:40">AudioDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:67"><block_content pos:start="123:13" pos:end="123:67">

            <expr_stmt pos:start="123:13" pos:end="123:67"><expr pos:start="123:13" pos:end="123:66"><call pos:start="123:13" pos:end="123:66"><name pos:start="123:13" pos:end="123:37">dshow_list_device_options</name><argument_list pos:start="123:38" pos:end="123:66">(<argument pos:start="123:39" pos:end="123:43"><expr pos:start="123:39" pos:end="123:43"><name pos:start="123:39" pos:end="123:43">avctx</name></expr></argument>, <argument pos:start="123:46" pos:end="123:52"><expr pos:start="123:46" pos:end="123:52"><name pos:start="123:46" pos:end="123:52">devenum</name></expr></argument>, <argument pos:start="123:55" pos:end="123:65"><expr pos:start="123:55" pos:end="123:65"><name pos:start="123:55" pos:end="123:65">AudioDevice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:27"><expr pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:26">AVERROR_EXIT</name></expr>;</expr_stmt>

        <goto pos:start="127:9" pos:end="127:19">goto <name pos:start="127:14" pos:end="127:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="145:5"><if pos:start="133:5" pos:end="145:5">if <condition pos:start="133:8" pos:end="133:38">(<expr pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:11">ctx</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:24">device_name</name><index pos:start="133:25" pos:end="133:37">[<expr pos:start="133:26" pos:end="133:36"><name pos:start="133:26" pos:end="133:36">VideoDevice</name></expr>]</index></name></expr>)</condition> <block pos:start="133:40" pos:end="145:5">{<block_content pos:start="135:9" pos:end="143:9">

        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="143:9">if <condition pos:start="135:12" pos:end="137:59">(<expr pos:start="135:13" pos:end="137:58"><operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:14">r</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <call pos:start="135:18" pos:end="135:63"><name pos:start="135:18" pos:end="135:34">dshow_open_device</name><argument_list pos:start="135:35" pos:end="135:63">(<argument pos:start="135:36" pos:end="135:40"><expr pos:start="135:36" pos:end="135:40"><name pos:start="135:36" pos:end="135:40">avctx</name></expr></argument>, <argument pos:start="135:43" pos:end="135:49"><expr pos:start="135:43" pos:end="135:49"><name pos:start="135:43" pos:end="135:49">devenum</name></expr></argument>, <argument pos:start="135:52" pos:end="135:62"><expr pos:start="135:52" pos:end="135:62"><name pos:start="135:52" pos:end="135:62">VideoDevice</name></expr></argument>)</argument_list></call><operator pos:start="135:64" pos:end="135:64">)</operator> <operator pos:start="135:66" pos:end="135:66">&lt;</operator> <literal type="number" pos:start="135:68" pos:end="135:68">0</literal> <operator pos:start="135:70" pos:end="135:71">||</operator>

            <operator pos:start="137:13" pos:end="137:13">(</operator><name pos:start="137:14" pos:end="137:14">r</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <call pos:start="137:18" pos:end="137:53"><name pos:start="137:18" pos:end="137:33">dshow_add_device</name><argument_list pos:start="137:34" pos:end="137:53">(<argument pos:start="137:35" pos:end="137:39"><expr pos:start="137:35" pos:end="137:39"><name pos:start="137:35" pos:end="137:39">avctx</name></expr></argument>, <argument pos:start="137:42" pos:end="137:52"><expr pos:start="137:42" pos:end="137:52"><name pos:start="137:42" pos:end="137:52">VideoDevice</name></expr></argument>)</argument_list></call><operator pos:start="137:54" pos:end="137:54">)</operator> <operator pos:start="137:56" pos:end="137:56">&lt;</operator> <literal type="number" pos:start="137:58" pos:end="137:58">0</literal></expr>)</condition> <block pos:start="137:61" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:23">

            <expr_stmt pos:start="139:13" pos:end="139:20"><expr pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <name pos:start="139:19" pos:end="139:19">r</name></expr>;</expr_stmt>

            <goto pos:start="141:13" pos:end="141:23">goto <name pos:start="141:18" pos:end="141:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="159:5"><if pos:start="147:5" pos:end="159:5">if <condition pos:start="147:8" pos:end="147:38">(<expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:11">ctx</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:24">device_name</name><index pos:start="147:25" pos:end="147:37">[<expr pos:start="147:26" pos:end="147:36"><name pos:start="147:26" pos:end="147:36">AudioDevice</name></expr>]</index></name></expr>)</condition> <block pos:start="147:40" pos:end="159:5">{<block_content pos:start="149:9" pos:end="157:9">

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="151:59">(<expr pos:start="149:13" pos:end="151:58"><operator pos:start="149:13" pos:end="149:13">(</operator><name pos:start="149:14" pos:end="149:14">r</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <call pos:start="149:18" pos:end="149:63"><name pos:start="149:18" pos:end="149:34">dshow_open_device</name><argument_list pos:start="149:35" pos:end="149:63">(<argument pos:start="149:36" pos:end="149:40"><expr pos:start="149:36" pos:end="149:40"><name pos:start="149:36" pos:end="149:40">avctx</name></expr></argument>, <argument pos:start="149:43" pos:end="149:49"><expr pos:start="149:43" pos:end="149:49"><name pos:start="149:43" pos:end="149:49">devenum</name></expr></argument>, <argument pos:start="149:52" pos:end="149:62"><expr pos:start="149:52" pos:end="149:62"><name pos:start="149:52" pos:end="149:62">AudioDevice</name></expr></argument>)</argument_list></call><operator pos:start="149:64" pos:end="149:64">)</operator> <operator pos:start="149:66" pos:end="149:66">&lt;</operator> <literal type="number" pos:start="149:68" pos:end="149:68">0</literal> <operator pos:start="149:70" pos:end="149:71">||</operator>

            <operator pos:start="151:13" pos:end="151:13">(</operator><name pos:start="151:14" pos:end="151:14">r</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <call pos:start="151:18" pos:end="151:53"><name pos:start="151:18" pos:end="151:33">dshow_add_device</name><argument_list pos:start="151:34" pos:end="151:53">(<argument pos:start="151:35" pos:end="151:39"><expr pos:start="151:35" pos:end="151:39"><name pos:start="151:35" pos:end="151:39">avctx</name></expr></argument>, <argument pos:start="151:42" pos:end="151:52"><expr pos:start="151:42" pos:end="151:52"><name pos:start="151:42" pos:end="151:52">AudioDevice</name></expr></argument>)</argument_list></call><operator pos:start="151:54" pos:end="151:54">)</operator> <operator pos:start="151:56" pos:end="151:56">&lt;</operator> <literal type="number" pos:start="151:58" pos:end="151:58">0</literal></expr>)</condition> <block pos:start="151:61" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:23">

            <expr_stmt pos:start="153:13" pos:end="153:20"><expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <name pos:start="153:19" pos:end="153:19">r</name></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:23">goto <name pos:start="155:18" pos:end="155:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:44"><expr pos:start="163:5" pos:end="163:43"><name pos:start="163:5" pos:end="163:14"><name pos:start="163:5" pos:end="163:7">ctx</name><operator pos:start="163:8" pos:end="163:9">-&gt;</operator><name pos:start="163:10" pos:end="163:14">mutex</name></name> <operator pos:start="163:16" pos:end="163:16">=</operator> <call pos:start="163:18" pos:end="163:43"><name pos:start="163:18" pos:end="163:28">CreateMutex</name><argument_list pos:start="163:29" pos:end="163:43">(<argument pos:start="163:30" pos:end="163:33"><expr pos:start="163:30" pos:end="163:33"><name pos:start="163:30" pos:end="163:33">NULL</name></expr></argument>, <argument pos:start="163:36" pos:end="163:36"><expr pos:start="163:36" pos:end="163:36"><literal type="number" pos:start="163:36" pos:end="163:36">0</literal></expr></argument>, <argument pos:start="163:39" pos:end="163:42"><expr pos:start="163:39" pos:end="163:42"><name pos:start="163:39" pos:end="163:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:20">(<expr pos:start="165:9" pos:end="165:19"><operator pos:start="165:9" pos:end="165:9">!</operator><name pos:start="165:10" pos:end="165:19"><name pos:start="165:10" pos:end="165:12">ctx</name><operator pos:start="165:13" pos:end="165:14">-&gt;</operator><name pos:start="165:15" pos:end="165:19">mutex</name></name></expr>)</condition> <block pos:start="165:22" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:19">

        <expr_stmt pos:start="167:9" pos:end="167:64"><expr pos:start="167:9" pos:end="167:63"><call pos:start="167:9" pos:end="167:63"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="167:63">(<argument pos:start="167:16" pos:end="167:20"><expr pos:start="167:16" pos:end="167:20"><name pos:start="167:16" pos:end="167:20">avctx</name></expr></argument>, <argument pos:start="167:23" pos:end="167:34"><expr pos:start="167:23" pos:end="167:34"><name pos:start="167:23" pos:end="167:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:37" pos:end="167:62"><expr pos:start="167:37" pos:end="167:62"><literal type="string" pos:start="167:37" pos:end="167:62">"Could not create Mutex\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:19">goto <name pos:start="169:14" pos:end="169:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:47"><expr pos:start="173:5" pos:end="173:46"><name pos:start="173:5" pos:end="173:14"><name pos:start="173:5" pos:end="173:7">ctx</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:14">event</name></name> <operator pos:start="173:16" pos:end="173:16">=</operator> <call pos:start="173:18" pos:end="173:46"><name pos:start="173:18" pos:end="173:28">CreateEvent</name><argument_list pos:start="173:29" pos:end="173:46">(<argument pos:start="173:30" pos:end="173:33"><expr pos:start="173:30" pos:end="173:33"><name pos:start="173:30" pos:end="173:33">NULL</name></expr></argument>, <argument pos:start="173:36" pos:end="173:36"><expr pos:start="173:36" pos:end="173:36"><literal type="number" pos:start="173:36" pos:end="173:36">1</literal></expr></argument>, <argument pos:start="173:39" pos:end="173:39"><expr pos:start="173:39" pos:end="173:39"><literal type="number" pos:start="173:39" pos:end="173:39">0</literal></expr></argument>, <argument pos:start="173:42" pos:end="173:45"><expr pos:start="173:42" pos:end="173:45"><name pos:start="173:42" pos:end="173:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="175:5" pos:end="181:5"><if pos:start="175:5" pos:end="181:5">if <condition pos:start="175:8" pos:end="175:20">(<expr pos:start="175:9" pos:end="175:19"><operator pos:start="175:9" pos:end="175:9">!</operator><name pos:start="175:10" pos:end="175:19"><name pos:start="175:10" pos:end="175:12">ctx</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:19">event</name></name></expr>)</condition> <block pos:start="175:22" pos:end="181:5">{<block_content pos:start="177:9" pos:end="179:19">

        <expr_stmt pos:start="177:9" pos:end="177:64"><expr pos:start="177:9" pos:end="177:63"><call pos:start="177:9" pos:end="177:63"><name pos:start="177:9" pos:end="177:14">av_log</name><argument_list pos:start="177:15" pos:end="177:63">(<argument pos:start="177:16" pos:end="177:20"><expr pos:start="177:16" pos:end="177:20"><name pos:start="177:16" pos:end="177:20">avctx</name></expr></argument>, <argument pos:start="177:23" pos:end="177:34"><expr pos:start="177:23" pos:end="177:34"><name pos:start="177:23" pos:end="177:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:37" pos:end="177:62"><expr pos:start="177:37" pos:end="177:62"><literal type="string" pos:start="177:37" pos:end="177:62">"Could not create Event\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="179:9" pos:end="179:19">goto <name pos:start="179:14" pos:end="179:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:84"><expr pos:start="185:5" pos:end="185:83"><name pos:start="185:5" pos:end="185:5">r</name> <operator pos:start="185:7" pos:end="185:7">=</operator> <call pos:start="185:9" pos:end="185:83"><name pos:start="185:9" pos:end="185:36">IGraphBuilder_QueryInterface</name><argument_list pos:start="185:37" pos:end="185:83">(<argument pos:start="185:38" pos:end="185:42"><expr pos:start="185:38" pos:end="185:42"><name pos:start="185:38" pos:end="185:42">graph</name></expr></argument>, <argument pos:start="185:45" pos:end="185:62"><expr pos:start="185:45" pos:end="185:62"><operator pos:start="185:45" pos:end="185:45">&amp;</operator><name pos:start="185:46" pos:end="185:62">IID_IMediaControl</name></expr></argument>, <argument pos:start="185:65" pos:end="185:82"><expr pos:start="185:65" pos:end="185:82"><operator pos:start="185:65" pos:end="185:65">(</operator><name pos:start="185:66" pos:end="185:69">void</name> <operator pos:start="185:71" pos:end="185:71">*</operator><operator pos:start="185:72" pos:end="185:72">*</operator><operator pos:start="185:73" pos:end="185:73">)</operator> <operator pos:start="185:75" pos:end="185:75">&amp;</operator><name pos:start="185:76" pos:end="185:82">control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if <condition pos:start="187:8" pos:end="187:18">(<expr pos:start="187:9" pos:end="187:17"><name pos:start="187:9" pos:end="187:9">r</name> <operator pos:start="187:11" pos:end="187:12">!=</operator> <name pos:start="187:14" pos:end="187:17">S_OK</name></expr>)</condition> <block pos:start="187:20" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:19">

        <expr_stmt pos:start="189:9" pos:end="189:70"><expr pos:start="189:9" pos:end="189:69"><call pos:start="189:9" pos:end="189:69"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="189:69">(<argument pos:start="189:16" pos:end="189:20"><expr pos:start="189:16" pos:end="189:20"><name pos:start="189:16" pos:end="189:20">avctx</name></expr></argument>, <argument pos:start="189:23" pos:end="189:34"><expr pos:start="189:23" pos:end="189:34"><name pos:start="189:23" pos:end="189:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:37" pos:end="189:68"><expr pos:start="189:37" pos:end="189:68"><literal type="string" pos:start="189:37" pos:end="189:68">"Could not get media control.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="191:9" pos:end="191:19">goto <name pos:start="191:14" pos:end="191:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:27"><expr pos:start="195:5" pos:end="195:26"><name pos:start="195:5" pos:end="195:16"><name pos:start="195:5" pos:end="195:7">ctx</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:16">control</name></name> <operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:26">control</name></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:35"><expr pos:start="199:5" pos:end="199:34"><name pos:start="199:5" pos:end="199:5">r</name> <operator pos:start="199:7" pos:end="199:7">=</operator> <call pos:start="199:9" pos:end="199:34"><name pos:start="199:9" pos:end="199:25">IMediaControl_Run</name><argument_list pos:start="199:26" pos:end="199:34">(<argument pos:start="199:27" pos:end="199:33"><expr pos:start="199:27" pos:end="199:33"><name pos:start="199:27" pos:end="199:33">control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="201:5" pos:end="207:5"><if pos:start="201:5" pos:end="207:5">if <condition pos:start="201:8" pos:end="201:21">(<expr pos:start="201:9" pos:end="201:20"><name pos:start="201:9" pos:end="201:9">r</name> <operator pos:start="201:11" pos:end="201:12">==</operator> <name pos:start="201:14" pos:end="201:20">S_FALSE</name></expr>)</condition> <block pos:start="201:23" pos:end="207:5">{<block_content pos:start="203:9" pos:end="205:53">

        <decl_stmt pos:start="203:9" pos:end="203:26"><decl pos:start="203:9" pos:end="203:25"><type pos:start="203:9" pos:end="203:21"><name pos:start="203:9" pos:end="203:21">OAFilterState</name></type> <name pos:start="203:23" pos:end="203:25">pfs</name></decl>;</decl_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:53"><expr pos:start="205:9" pos:end="205:52"><name pos:start="205:9" pos:end="205:9">r</name> <operator pos:start="205:11" pos:end="205:11">=</operator> <call pos:start="205:13" pos:end="205:52"><name pos:start="205:13" pos:end="205:34">IMediaControl_GetState</name><argument_list pos:start="205:35" pos:end="205:52">(<argument pos:start="205:36" pos:end="205:42"><expr pos:start="205:36" pos:end="205:42"><name pos:start="205:36" pos:end="205:42">control</name></expr></argument>, <argument pos:start="205:45" pos:end="205:45"><expr pos:start="205:45" pos:end="205:45"><literal type="number" pos:start="205:45" pos:end="205:45">0</literal></expr></argument>, <argument pos:start="205:48" pos:end="205:51"><expr pos:start="205:48" pos:end="205:51"><operator pos:start="205:48" pos:end="205:48">&amp;</operator><name pos:start="205:49" pos:end="205:51">pfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="209:5" pos:end="215:5"><if pos:start="209:5" pos:end="215:5">if <condition pos:start="209:8" pos:end="209:18">(<expr pos:start="209:9" pos:end="209:17"><name pos:start="209:9" pos:end="209:9">r</name> <operator pos:start="209:11" pos:end="209:12">!=</operator> <name pos:start="209:14" pos:end="209:17">S_OK</name></expr>)</condition> <block pos:start="209:20" pos:end="215:5">{<block_content pos:start="211:9" pos:end="213:19">

        <expr_stmt pos:start="211:9" pos:end="211:62"><expr pos:start="211:9" pos:end="211:61"><call pos:start="211:9" pos:end="211:61"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="211:61">(<argument pos:start="211:16" pos:end="211:20"><expr pos:start="211:16" pos:end="211:20"><name pos:start="211:16" pos:end="211:20">avctx</name></expr></argument>, <argument pos:start="211:23" pos:end="211:34"><expr pos:start="211:23" pos:end="211:34"><name pos:start="211:23" pos:end="211:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:37" pos:end="211:60"><expr pos:start="211:37" pos:end="211:60"><literal type="string" pos:start="211:37" pos:end="211:60">"Could not run filter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="213:9" pos:end="213:19">goto <name pos:start="213:14" pos:end="213:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:12"><expr pos:start="219:5" pos:end="219:11"><name pos:start="219:5" pos:end="219:7">ret</name> <operator pos:start="219:9" pos:end="219:9">=</operator> <literal type="number" pos:start="219:11" pos:end="219:11">0</literal></expr>;</expr_stmt>



<label pos:start="223:1" pos:end="223:6"><name pos:start="223:1" pos:end="223:5">error</name>:</label>



    <if_stmt pos:start="227:5" pos:end="229:32"><if pos:start="227:5" pos:end="229:32">if <condition pos:start="227:8" pos:end="227:16">(<expr pos:start="227:9" pos:end="227:15"><name pos:start="227:9" pos:end="227:11">ret</name> <operator pos:start="227:13" pos:end="227:13">&lt;</operator> <literal type="number" pos:start="227:15" pos:end="227:15">0</literal></expr>)</condition><block type="pseudo" pos:start="229:9" pos:end="229:32"><block_content pos:start="229:9" pos:end="229:32">

        <expr_stmt pos:start="229:9" pos:end="229:32"><expr pos:start="229:9" pos:end="229:31"><call pos:start="229:9" pos:end="229:31"><name pos:start="229:9" pos:end="229:24">dshow_read_close</name><argument_list pos:start="229:25" pos:end="229:31">(<argument pos:start="229:26" pos:end="229:30"><expr pos:start="229:26" pos:end="229:30"><name pos:start="229:26" pos:end="229:30">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="233:5" pos:end="235:40"><if pos:start="233:5" pos:end="235:40">if <condition pos:start="233:8" pos:end="233:16">(<expr pos:start="233:9" pos:end="233:15"><name pos:start="233:9" pos:end="233:15">devenum</name></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:40"><block_content pos:start="235:9" pos:end="235:40">

        <expr_stmt pos:start="235:9" pos:end="235:40"><expr pos:start="235:9" pos:end="235:39"><call pos:start="235:9" pos:end="235:39"><name pos:start="235:9" pos:end="235:30">ICreateDevEnum_Release</name><argument_list pos:start="235:31" pos:end="235:39">(<argument pos:start="235:32" pos:end="235:38"><expr pos:start="235:32" pos:end="235:38"><name pos:start="235:32" pos:end="235:38">devenum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="239:5" pos:end="239:15">return <expr pos:start="239:12" pos:end="239:14"><name pos:start="239:12" pos:end="239:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
