<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13054.c" pos:tabs="8"><function pos:start="1:1" pos:end="581:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">create_filtergraph</name><parameter_list pos:start="1:30" pos:end="3:68">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:47"><decl pos:start="3:31" pos:end="3:47"><type pos:start="3:31" pos:end="3:47"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">AVFrame</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:47">in</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:62">AVFrame</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:67">out</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="581:1">{<block_content pos:start="7:5" pos:end="579:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">ColorSpaceContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:73"><decl pos:start="9:5" pos:end="9:72"><type pos:start="9:5" pos:end="9:30"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:28">AVPixFmtDescriptor</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:37">in_desc</name>  <init pos:start="9:40" pos:end="9:72">= <expr pos:start="9:42" pos:end="9:72"><call pos:start="9:42" pos:end="9:72"><name pos:start="9:42" pos:end="9:60">av_pix_fmt_desc_get</name><argument_list pos:start="9:61" pos:end="9:72">(<argument pos:start="9:62" pos:end="9:71"><expr pos:start="9:62" pos:end="9:71"><name pos:start="9:62" pos:end="9:71"><name pos:start="9:62" pos:end="9:63">in</name><operator pos:start="9:64" pos:end="9:65">-&gt;</operator><name pos:start="9:66" pos:end="9:71">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:74"><decl pos:start="11:5" pos:end="11:73"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:28">AVPixFmtDescriptor</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:38">out_desc</name> <init pos:start="11:40" pos:end="11:73">= <expr pos:start="11:42" pos:end="11:73"><call pos:start="11:42" pos:end="11:73"><name pos:start="11:42" pos:end="11:60">av_pix_fmt_desc_get</name><argument_list pos:start="11:61" pos:end="11:73">(<argument pos:start="11:62" pos:end="11:72"><expr pos:start="11:62" pos:end="11:72"><name pos:start="11:62" pos:end="11:72"><name pos:start="11:62" pos:end="11:64">out</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:72">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="32:0"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">emms</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr></init></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:19">m</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:22">n</name></decl>, <decl pos:start="13:25" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:25">o</name></decl>, <decl pos:start="13:28" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:30">res</name></decl>, <decl pos:start="13:33" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:33" pos:end="13:45">fmt_identical</name></decl>, <decl pos:start="13:48" pos:end="13:63"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:48" pos:end="13:59">redo_yuv2rgb</name> <init pos:start="13:61" pos:end="13:63">= <expr pos:start="13:63" pos:end="13:63"><literal type="number" pos:start="13:63" pos:end="13:63">0</literal></expr></init></decl>, <decl pos:start="13:66" pos:end="13:81"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:66" pos:end="13:77">redo_rgb2yuv</name> <init pos:start="13:79" pos:end="13:81">= <expr pos:start="13:81" pos:end="13:81"><literal type="number" pos:start="13:81" pos:end="13:81">0</literal></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="17:1" pos:end="17:63">#<cpp:directive pos:start="17:2" pos:end="17:7">define</cpp:directive> <cpp:macro pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:23">supported_depth</name><parameter_list pos:start="17:24" pos:end="17:26">(<parameter pos:start="17:25" pos:end="17:25"><type pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="17:28" pos:end="17:63">((d) == 8 || (d) == 10 || (d) == 12)</cpp:value></cpp:define>

<cpp:define pos:start="19:1" pos:end="21:92">#<cpp:directive pos:start="19:2" pos:end="19:7">define</cpp:directive> <cpp:macro pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:29">supported_subsampling</name><parameter_list pos:start="19:30" pos:end="19:39">(<parameter pos:start="19:31" pos:end="19:33"><type pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">lcw</name></type></parameter>, <parameter pos:start="19:36" pos:end="19:38"><type pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:38">lch</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="21:5" pos:end="21:92">(((lcw) == 0 &amp;&amp; (lch) == 0) || ((lcw) == 1 &amp;&amp; (lch) == 0) || ((lcw) == 1 &amp;&amp; (lch) == 1))</cpp:value></cpp:define>

<cpp:define pos:start="23:1" pos:end="31:67">#<cpp:directive pos:start="23:2" pos:end="23:7">define</cpp:directive> <cpp:macro pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:24">supported_format</name><parameter_list pos:start="23:25" pos:end="23:27">(<parameter pos:start="23:26" pos:end="23:26"><type pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">d</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="25:5" pos:end="31:67">((d) != NULL &amp;&amp; (d)-&gt;nb_components == 3 &amp;&amp; \

     !((d)-&gt;flags &amp; AV_PIX_FMT_FLAG_RGB) &amp;&amp; \

     supported_depth((d)-&gt;comp[0].depth) &amp;&amp; \

     supported_subsampling((d)-&gt;log2_chroma_w, (d)-&gt;log2_chroma_h))</cpp:value></cpp:define>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:35">(<expr pos:start="35:9" pos:end="35:34"><operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:34"><name pos:start="35:10" pos:end="35:25">supported_format</name><argument_list pos:start="35:26" pos:end="35:34">(<argument pos:start="35:27" pos:end="35:33"><expr pos:start="35:27" pos:end="35:33"><name pos:start="35:27" pos:end="35:33">in_desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:37" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:31">

        <expr_stmt pos:start="37:9" pos:end="43:54"><expr pos:start="37:9" pos:end="43:53"><call pos:start="37:9" pos:end="43:53"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="43:53">(<argument pos:start="37:16" pos:end="37:18"><expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ctx</name></expr></argument>, <argument pos:start="37:21" pos:end="37:32"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:68"><expr pos:start="39:16" pos:end="39:68"><literal type="string" pos:start="39:16" pos:end="39:68">"Unsupported input format %d (%s) or bitdepth (%d)\n"</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:25"><expr pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:17">in</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">format</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:58"><expr pos:start="41:28" pos:end="41:58"><call pos:start="41:28" pos:end="41:58"><name pos:start="41:28" pos:end="41:46">av_get_pix_fmt_name</name><argument_list pos:start="41:47" pos:end="41:58">(<argument pos:start="41:48" pos:end="41:57"><expr pos:start="41:48" pos:end="41:57"><name pos:start="41:48" pos:end="41:57"><name pos:start="41:48" pos:end="41:49">in</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:57">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="43:16" pos:end="43:52"><expr pos:start="43:16" pos:end="43:52"><ternary pos:start="43:16" pos:end="43:52"><condition pos:start="43:16" pos:end="43:24"><expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22">in_desc</name></expr> ?</condition><then pos:start="43:26" pos:end="43:47"> <expr pos:start="43:26" pos:end="43:47"><name pos:start="43:26" pos:end="43:41"><name pos:start="43:26" pos:end="43:32">in_desc</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:38">comp</name><index pos:start="43:39" pos:end="43:41">[<expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr>]</index></name><operator pos:start="43:42" pos:end="43:42">.</operator><name pos:start="43:43" pos:end="43:47">depth</name></expr> </then><else pos:start="43:49" pos:end="43:52">: <expr pos:start="43:51" pos:end="43:52"><operator pos:start="43:51" pos:end="43:51">-</operator><literal type="number" pos:start="43:52" pos:end="43:52">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="49:36">(<expr pos:start="49:9" pos:end="49:35"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:35"><name pos:start="49:10" pos:end="49:25">supported_format</name><argument_list pos:start="49:26" pos:end="49:35">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:34">out_desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:38" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:31">

        <expr_stmt pos:start="51:9" pos:end="57:56"><expr pos:start="51:9" pos:end="57:55"><call pos:start="51:9" pos:end="57:55"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="57:55">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ctx</name></expr></argument>, <argument pos:start="51:21" pos:end="51:32"><expr pos:start="51:21" pos:end="51:32"><name pos:start="51:21" pos:end="51:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="53:16" pos:end="53:69"><expr pos:start="53:16" pos:end="53:69"><literal type="string" pos:start="53:16" pos:end="53:69">"Unsupported output format %d (%s) or bitdepth (%d)\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:26"><expr pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:18">out</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:26">format</name></name></expr></argument>, <argument pos:start="55:29" pos:end="55:60"><expr pos:start="55:29" pos:end="55:60"><call pos:start="55:29" pos:end="55:60"><name pos:start="55:29" pos:end="55:47">av_get_pix_fmt_name</name><argument_list pos:start="55:48" pos:end="55:60">(<argument pos:start="55:49" pos:end="55:59"><expr pos:start="55:49" pos:end="55:59"><name pos:start="55:49" pos:end="55:59"><name pos:start="55:49" pos:end="55:51">out</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:59">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="57:16" pos:end="57:54"><expr pos:start="57:16" pos:end="57:54"><ternary pos:start="57:16" pos:end="57:54"><condition pos:start="57:16" pos:end="57:25"><expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">out_desc</name></expr> ?</condition><then pos:start="57:27" pos:end="57:49"> <expr pos:start="57:27" pos:end="57:49"><name pos:start="57:27" pos:end="57:43"><name pos:start="57:27" pos:end="57:34">out_desc</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:40">comp</name><index pos:start="57:41" pos:end="57:43">[<expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr>]</index></name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:49">depth</name></expr> </then><else pos:start="57:51" pos:end="57:54">: <expr pos:start="57:53" pos:end="57:54"><operator pos:start="57:53" pos:end="57:53">-</operator><literal type="number" pos:start="57:54" pos:end="57:54">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:31">return <expr pos:start="59:16" pos:end="59:30"><call pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:22">AVERROR</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="65:68"><if pos:start="65:5" pos:end="65:68">if <condition pos:start="65:8" pos:end="65:42">(<expr pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:10">in</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:27">color_primaries</name></name>  <operator pos:start="65:30" pos:end="65:31">!=</operator> <name pos:start="65:33" pos:end="65:41"><name pos:start="65:33" pos:end="65:33">s</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:41">in_prm</name></name></expr>)</condition><block type="pseudo" pos:start="65:45" pos:end="65:68"><block_content pos:start="65:45" pos:end="65:68">  <expr_stmt pos:start="65:45" pos:end="65:68"><expr pos:start="65:45" pos:end="65:67"><name pos:start="65:45" pos:end="65:59"><name pos:start="65:45" pos:end="65:45">s</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:59">in_primaries</name></name>  <operator pos:start="65:62" pos:end="65:62">=</operator> <name pos:start="65:64" pos:end="65:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="67:68"><if pos:start="67:5" pos:end="67:68">if <condition pos:start="67:8" pos:end="67:43">(<expr pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:11">out</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:28">color_primaries</name></name> <operator pos:start="67:30" pos:end="67:31">!=</operator> <name pos:start="67:33" pos:end="67:42"><name pos:start="67:33" pos:end="67:33">s</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:42">out_prm</name></name></expr>)</condition><block type="pseudo" pos:start="67:45" pos:end="67:68"><block_content pos:start="67:45" pos:end="67:68"> <expr_stmt pos:start="67:45" pos:end="67:68"><expr pos:start="67:45" pos:end="67:67"><name pos:start="67:45" pos:end="67:60"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:60">out_primaries</name></name> <operator pos:start="67:62" pos:end="67:62">=</operator> <name pos:start="67:64" pos:end="67:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="69:68"><if pos:start="69:5" pos:end="69:68">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">in</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:21">color_trc</name></name>        <operator pos:start="69:30" pos:end="69:31">!=</operator> <name pos:start="69:33" pos:end="69:41"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:41">in_trc</name></name></expr>)</condition><block type="pseudo" pos:start="69:45" pos:end="69:68"><block_content pos:start="69:45" pos:end="69:68">  <expr_stmt pos:start="69:45" pos:end="69:68"><expr pos:start="69:45" pos:end="69:67"><name pos:start="69:45" pos:end="69:55"><name pos:start="69:45" pos:end="69:45">s</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:55">in_txchr</name></name>      <operator pos:start="69:62" pos:end="69:62">=</operator> <name pos:start="69:64" pos:end="69:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="71:68"><if pos:start="71:5" pos:end="71:68">if <condition pos:start="71:8" pos:end="71:43">(<expr pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:11">out</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:22">color_trc</name></name>       <operator pos:start="71:30" pos:end="71:31">!=</operator> <name pos:start="71:33" pos:end="71:42"><name pos:start="71:33" pos:end="71:33">s</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:42">out_trc</name></name></expr>)</condition><block type="pseudo" pos:start="71:45" pos:end="71:68"><block_content pos:start="71:45" pos:end="71:68"> <expr_stmt pos:start="71:45" pos:end="71:68"><expr pos:start="71:45" pos:end="71:67"><name pos:start="71:45" pos:end="71:56"><name pos:start="71:45" pos:end="71:45">s</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:56">out_txchr</name></name>     <operator pos:start="71:62" pos:end="71:62">=</operator> <name pos:start="71:64" pos:end="71:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="75:68"><if pos:start="73:5" pos:end="75:68">if <condition pos:start="73:8" pos:end="75:42">(<expr pos:start="73:9" pos:end="75:41"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:10">in</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:22">colorspace</name></name>       <operator pos:start="73:30" pos:end="73:31">!=</operator> <name pos:start="73:33" pos:end="73:41"><name pos:start="73:33" pos:end="73:33">s</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:41">in_csp</name></name> <operator pos:start="73:43" pos:end="73:44">||</operator>

        <name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:10">in</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:23">color_range</name></name>      <operator pos:start="75:30" pos:end="75:31">!=</operator> <name pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">in_rng</name></name></expr>)</condition><block type="pseudo" pos:start="75:45" pos:end="75:68"><block_content pos:start="75:45" pos:end="75:68">  <expr_stmt pos:start="75:45" pos:end="75:68"><expr pos:start="75:45" pos:end="75:67"><name pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:45">s</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:58">in_lumacoef</name></name>   <operator pos:start="75:62" pos:end="75:62">=</operator> <name pos:start="75:64" pos:end="75:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="79:68"><if pos:start="77:5" pos:end="79:68">if <condition pos:start="77:8" pos:end="79:43">(<expr pos:start="77:9" pos:end="79:42"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">out</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">colorspace</name></name>      <operator pos:start="77:30" pos:end="77:31">!=</operator> <name pos:start="77:33" pos:end="77:42"><name pos:start="77:33" pos:end="77:33">s</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:42">out_csp</name></name> <operator pos:start="77:44" pos:end="77:45">||</operator>

        <name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">out</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:24">color_range</name></name>     <operator pos:start="79:30" pos:end="79:31">!=</operator> <name pos:start="79:33" pos:end="79:42"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">out_rng</name></name></expr>)</condition><block type="pseudo" pos:start="79:45" pos:end="79:68"><block_content pos:start="79:45" pos:end="79:68"> <expr_stmt pos:start="79:45" pos:end="79:68"><expr pos:start="79:45" pos:end="79:67"><name pos:start="79:45" pos:end="79:59"><name pos:start="79:45" pos:end="79:45">s</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:59">out_lumacoef</name></name>  <operator pos:start="79:62" pos:end="79:62">=</operator> <name pos:start="79:64" pos:end="79:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="199:5"><if pos:start="83:5" pos:end="199:5">if <condition pos:start="83:8" pos:end="83:46">(<expr pos:start="83:9" pos:end="83:45"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:25"><name pos:start="83:10" pos:end="83:10">s</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:25">out_primaries</name></name> <operator pos:start="83:27" pos:end="83:28">||</operator> <operator pos:start="83:30" pos:end="83:30">!</operator><name pos:start="83:31" pos:end="83:45"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:45">in_primaries</name></name></expr>)</condition> <block pos:start="83:48" pos:end="199:5">{<block_content pos:start="85:9" pos:end="197:9">

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:17">in_prm</name></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:22">in</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:39">color_primaries</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:64"><if pos:start="87:9" pos:end="89:64">if <condition pos:start="87:12" pos:end="87:43">(<expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:24">user_iall</name></name> <operator pos:start="87:26" pos:end="87:27">!=</operator> <name pos:start="87:29" pos:end="87:42">CS_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:64"><block_content pos:start="89:13" pos:end="89:64">

            <expr_stmt pos:start="89:13" pos:end="89:64"><expr pos:start="89:13" pos:end="89:63"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:21">in_prm</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:63"><name pos:start="89:25" pos:end="89:35">default_prm</name><index pos:start="89:36" pos:end="89:63">[<expr pos:start="89:37" pos:end="89:62"><call pos:start="89:37" pos:end="89:62"><name pos:start="89:37" pos:end="89:41">FFMIN</name><argument_list pos:start="89:42" pos:end="89:62">(<argument pos:start="89:43" pos:end="89:54"><expr pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:43">s</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:54">user_iall</name></name></expr></argument>, <argument pos:start="89:57" pos:end="89:61"><expr pos:start="89:57" pos:end="89:61"><name pos:start="89:57" pos:end="89:61">CS_NB</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="93:37"><if pos:start="91:9" pos:end="93:37">if <condition pos:start="91:12" pos:end="91:50">(<expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:24">user_iprm</name></name> <operator pos:start="91:26" pos:end="91:27">!=</operator> <name pos:start="91:29" pos:end="91:49">AVCOL_PRI_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:37"><block_content pos:start="93:13" pos:end="93:37">

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:21">in_prm</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:36"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:36">user_iprm</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:57"><expr pos:start="95:9" pos:end="95:56"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:23">in_primaries</name></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="95:56"><name pos:start="95:27" pos:end="95:45">get_color_primaries</name><argument_list pos:start="95:46" pos:end="95:56">(<argument pos:start="95:47" pos:end="95:55"><expr pos:start="95:47" pos:end="95:55"><name pos:start="95:47" pos:end="95:55"><name pos:start="95:47" pos:end="95:47">s</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:55">in_prm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="107:9"><if pos:start="97:9" pos:end="107:9">if <condition pos:start="97:12" pos:end="97:29">(<expr pos:start="97:13" pos:end="97:28"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:28"><name pos:start="97:14" pos:end="97:14">s</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:28">in_primaries</name></name></expr>)</condition> <block pos:start="97:31" pos:end="107:9">{<block_content pos:start="99:13" pos:end="105:35">

            <expr_stmt pos:start="99:13" pos:end="103:66"><expr pos:start="99:13" pos:end="103:65"><call pos:start="99:13" pos:end="103:65"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="103:65">(<argument pos:start="99:20" pos:end="99:22"><expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">ctx</name></expr></argument>, <argument pos:start="99:25" pos:end="99:36"><expr pos:start="99:25" pos:end="99:36"><name pos:start="99:25" pos:end="99:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:58"><expr pos:start="101:20" pos:end="101:58"><literal type="string" pos:start="101:20" pos:end="101:58">"Unsupported input primaries %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="103:20" pos:end="103:28"><expr pos:start="103:20" pos:end="103:28"><name pos:start="103:20" pos:end="103:28"><name pos:start="103:20" pos:end="103:20">s</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:28">in_prm</name></name></expr></argument>, <argument pos:start="103:31" pos:end="103:64"><expr pos:start="103:31" pos:end="103:64"><call pos:start="103:31" pos:end="103:64"><name pos:start="103:31" pos:end="103:53">av_color_primaries_name</name><argument_list pos:start="103:54" pos:end="103:64">(<argument pos:start="103:55" pos:end="103:63"><expr pos:start="103:55" pos:end="103:63"><name pos:start="103:55" pos:end="103:63"><name pos:start="103:55" pos:end="103:55">s</name><operator pos:start="103:56" pos:end="103:57">-&gt;</operator><name pos:start="103:58" pos:end="103:63">in_prm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:35">return <expr pos:start="105:20" pos:end="105:34"><call pos:start="105:20" pos:end="105:34"><name pos:start="105:20" pos:end="105:26">AVERROR</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:42"><expr pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:18"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:18">out_prm</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:41"><name pos:start="109:22" pos:end="109:24">out</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:41">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:59"><expr pos:start="111:9" pos:end="111:58"><name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:24">out_primaries</name></name> <operator pos:start="111:26" pos:end="111:26">=</operator> <call pos:start="111:28" pos:end="111:58"><name pos:start="111:28" pos:end="111:46">get_color_primaries</name><argument_list pos:start="111:47" pos:end="111:58">(<argument pos:start="111:48" pos:end="111:57"><expr pos:start="111:48" pos:end="111:57"><name pos:start="111:48" pos:end="111:57"><name pos:start="111:48" pos:end="111:48">s</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:57">out_prm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="141:9"><if pos:start="113:9" pos:end="141:9">if <condition pos:start="113:12" pos:end="113:30">(<expr pos:start="113:13" pos:end="113:29"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:29"><name pos:start="113:14" pos:end="113:14">s</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:29">out_primaries</name></name></expr>)</condition> <block pos:start="113:32" pos:end="141:9">{<block_content pos:start="115:13" pos:end="139:35">

            <if_stmt pos:start="115:13" pos:end="137:13"><if pos:start="115:13" pos:end="129:13">if <condition pos:start="115:16" pos:end="115:52">(<expr pos:start="115:17" pos:end="115:51"><name pos:start="115:17" pos:end="115:26"><name pos:start="115:17" pos:end="115:17">s</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:26">out_prm</name></name> <operator pos:start="115:28" pos:end="115:29">==</operator> <name pos:start="115:31" pos:end="115:51">AVCOL_PRI_UNSPECIFIED</name></expr>)</condition> <block pos:start="115:54" pos:end="129:13">{<block_content pos:start="117:17" pos:end="127:17">

                <if_stmt pos:start="117:17" pos:end="127:17"><if pos:start="117:17" pos:end="121:17">if <condition pos:start="117:20" pos:end="117:50">(<expr pos:start="117:21" pos:end="117:49"><name pos:start="117:21" pos:end="117:31"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:31">user_all</name></name> <operator pos:start="117:33" pos:end="117:34">==</operator> <name pos:start="117:36" pos:end="117:49">CS_UNSPECIFIED</name></expr>)</condition> <block pos:start="117:52" pos:end="121:17">{<block_content pos:start="119:21" pos:end="119:83">

                    <expr_stmt pos:start="119:21" pos:end="119:83"><expr pos:start="119:21" pos:end="119:82"><call pos:start="119:21" pos:end="119:82"><name pos:start="119:21" pos:end="119:26">av_log</name><argument_list pos:start="119:27" pos:end="119:82">(<argument pos:start="119:28" pos:end="119:30"><expr pos:start="119:28" pos:end="119:30"><name pos:start="119:28" pos:end="119:30">ctx</name></expr></argument>, <argument pos:start="119:33" pos:end="119:44"><expr pos:start="119:33" pos:end="119:44"><name pos:start="119:33" pos:end="119:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:47" pos:end="119:81"><expr pos:start="119:47" pos:end="119:81"><literal type="string" pos:start="119:47" pos:end="119:81">"Please specify output primaries\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="121:19" pos:end="127:17">else <block pos:start="121:24" pos:end="127:17">{<block_content pos:start="123:21" pos:end="125:82">

                    <expr_stmt pos:start="123:21" pos:end="125:82"><expr pos:start="123:21" pos:end="125:81"><call pos:start="123:21" pos:end="125:81"><name pos:start="123:21" pos:end="123:26">av_log</name><argument_list pos:start="123:27" pos:end="125:81">(<argument pos:start="123:28" pos:end="123:30"><expr pos:start="123:28" pos:end="123:30"><name pos:start="123:28" pos:end="123:30">ctx</name></expr></argument>, <argument pos:start="123:33" pos:end="123:44"><expr pos:start="123:33" pos:end="123:44"><name pos:start="123:33" pos:end="123:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="125:28" pos:end="125:67"><expr pos:start="125:28" pos:end="125:67"><literal type="string" pos:start="125:28" pos:end="125:67">"Unsupported output color property %d\n"</literal></expr></argument>, <argument pos:start="125:70" pos:end="125:80"><expr pos:start="125:70" pos:end="125:80"><name pos:start="125:70" pos:end="125:80"><name pos:start="125:70" pos:end="125:70">s</name><operator pos:start="125:71" pos:end="125:72">-&gt;</operator><name pos:start="125:73" pos:end="125:80">user_all</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="129:15" pos:end="137:13">else <block pos:start="129:20" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:72">

                <expr_stmt pos:start="131:17" pos:end="135:72"><expr pos:start="131:17" pos:end="135:71"><call pos:start="131:17" pos:end="135:71"><name pos:start="131:17" pos:end="131:22">av_log</name><argument_list pos:start="131:23" pos:end="135:71">(<argument pos:start="131:24" pos:end="131:26"><expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">ctx</name></expr></argument>, <argument pos:start="131:29" pos:end="131:40"><expr pos:start="131:29" pos:end="131:40"><name pos:start="131:29" pos:end="131:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="133:24" pos:end="133:63"><expr pos:start="133:24" pos:end="133:63"><literal type="string" pos:start="133:24" pos:end="133:63">"Unsupported output primaries %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="135:24" pos:end="135:33"><expr pos:start="135:24" pos:end="135:33"><name pos:start="135:24" pos:end="135:33"><name pos:start="135:24" pos:end="135:24">s</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:33">out_prm</name></name></expr></argument>, <argument pos:start="135:36" pos:end="135:70"><expr pos:start="135:36" pos:end="135:70"><call pos:start="135:36" pos:end="135:70"><name pos:start="135:36" pos:end="135:58">av_color_primaries_name</name><argument_list pos:start="135:59" pos:end="135:70">(<argument pos:start="135:60" pos:end="135:69"><expr pos:start="135:60" pos:end="135:69"><name pos:start="135:60" pos:end="135:69"><name pos:start="135:60" pos:end="135:60">s</name><operator pos:start="135:61" pos:end="135:62">-&gt;</operator><name pos:start="135:63" pos:end="135:69">out_prm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="139:13" pos:end="139:35">return <expr pos:start="139:20" pos:end="139:34"><call pos:start="139:20" pos:end="139:34"><name pos:start="139:20" pos:end="139:26">AVERROR</name><argument_list pos:start="139:27" pos:end="139:34">(<argument pos:start="139:28" pos:end="139:33"><expr pos:start="139:28" pos:end="139:33"><name pos:start="139:28" pos:end="139:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="145:69"><expr pos:start="143:9" pos:end="145:68"><name pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:32">lrgb2lrgb_passthrough</name></name> <operator pos:start="143:34" pos:end="143:34">=</operator> <operator pos:start="143:36" pos:end="143:36">!</operator><call pos:start="143:37" pos:end="145:68"><name pos:start="143:37" pos:end="143:42">memcmp</name><argument_list pos:start="143:43" pos:end="145:68">(<argument pos:start="143:44" pos:end="143:58"><expr pos:start="143:44" pos:end="143:58"><name pos:start="143:44" pos:end="143:58"><name pos:start="143:44" pos:end="143:44">s</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:58">in_primaries</name></name></expr></argument>, <argument pos:start="143:61" pos:end="143:76"><expr pos:start="143:61" pos:end="143:76"><name pos:start="143:61" pos:end="143:76"><name pos:start="143:61" pos:end="143:61">s</name><operator pos:start="143:62" pos:end="143:63">-&gt;</operator><name pos:start="143:64" pos:end="143:76">out_primaries</name></name></expr></argument>,

                                           <argument pos:start="145:44" pos:end="145:67"><expr pos:start="145:44" pos:end="145:67"><sizeof pos:start="145:44" pos:end="145:67">sizeof<argument_list pos:start="145:50" pos:end="145:67">(<argument pos:start="145:51" pos:end="145:66"><expr pos:start="145:51" pos:end="145:66"><operator pos:start="145:51" pos:end="145:51">*</operator><name pos:start="145:52" pos:end="145:66"><name pos:start="145:52" pos:end="145:52">s</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:66">in_primaries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="197:9"><if pos:start="147:9" pos:end="197:9">if <condition pos:start="147:12" pos:end="147:38">(<expr pos:start="147:13" pos:end="147:37"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:37"><name pos:start="147:14" pos:end="147:14">s</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:37">lrgb2lrgb_passthrough</name></name></expr>)</condition> <block pos:start="147:40" pos:end="197:9">{<block_content pos:start="149:13" pos:end="195:21">

            <decl_stmt pos:start="149:13" pos:end="149:63"><decl pos:start="149:13" pos:end="149:32"><type pos:start="149:13" pos:end="149:18"><name pos:start="149:13" pos:end="149:18">double</name></type> <name pos:start="149:20" pos:end="149:32"><name pos:start="149:20" pos:end="149:26">rgb2xyz</name><index pos:start="149:27" pos:end="149:29">[<expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">3</literal></expr>]</index><index pos:start="149:30" pos:end="149:32">[<expr pos:start="149:31" pos:end="149:31"><literal type="number" pos:start="149:31" pos:end="149:31">3</literal></expr>]</index></name></decl>, <decl pos:start="149:35" pos:end="149:47"><type ref="prev" pos:start="149:13" pos:end="149:18"/><name pos:start="149:35" pos:end="149:47"><name pos:start="149:35" pos:end="149:41">xyz2rgb</name><index pos:start="149:42" pos:end="149:44">[<expr pos:start="149:43" pos:end="149:43"><literal type="number" pos:start="149:43" pos:end="149:43">3</literal></expr>]</index><index pos:start="149:45" pos:end="149:47">[<expr pos:start="149:46" pos:end="149:46"><literal type="number" pos:start="149:46" pos:end="149:46">3</literal></expr>]</index></name></decl>, <decl pos:start="149:50" pos:end="149:62"><type ref="prev" pos:start="149:13" pos:end="149:18"/><name pos:start="149:50" pos:end="149:62"><name pos:start="149:50" pos:end="149:56">rgb2rgb</name><index pos:start="149:57" pos:end="149:59">[<expr pos:start="149:58" pos:end="149:58"><literal type="number" pos:start="149:58" pos:end="149:58">3</literal></expr>]</index><index pos:start="149:60" pos:end="149:62">[<expr pos:start="149:61" pos:end="149:61"><literal type="number" pos:start="149:61" pos:end="149:61">3</literal></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:58"><expr pos:start="153:13" pos:end="153:57"><call pos:start="153:13" pos:end="153:57"><name pos:start="153:13" pos:end="153:30">fill_rgb2xyz_table</name><argument_list pos:start="153:31" pos:end="153:57">(<argument pos:start="153:32" pos:end="153:47"><expr pos:start="153:32" pos:end="153:47"><name pos:start="153:32" pos:end="153:47"><name pos:start="153:32" pos:end="153:32">s</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:47">out_primaries</name></name></expr></argument>, <argument pos:start="153:50" pos:end="153:56"><expr pos:start="153:50" pos:end="153:56"><name pos:start="153:50" pos:end="153:56">rgb2xyz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:47"><expr pos:start="155:13" pos:end="155:46"><call pos:start="155:13" pos:end="155:46"><name pos:start="155:13" pos:end="155:28">invert_matrix3x3</name><argument_list pos:start="155:29" pos:end="155:46">(<argument pos:start="155:30" pos:end="155:36"><expr pos:start="155:30" pos:end="155:36"><name pos:start="155:30" pos:end="155:36">rgb2xyz</name></expr></argument>, <argument pos:start="155:39" pos:end="155:45"><expr pos:start="155:39" pos:end="155:45"><name pos:start="155:39" pos:end="155:45">xyz2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:57"><expr pos:start="157:13" pos:end="157:56"><call pos:start="157:13" pos:end="157:56"><name pos:start="157:13" pos:end="157:30">fill_rgb2xyz_table</name><argument_list pos:start="157:31" pos:end="157:56">(<argument pos:start="157:32" pos:end="157:46"><expr pos:start="157:32" pos:end="157:46"><name pos:start="157:32" pos:end="157:46"><name pos:start="157:32" pos:end="157:32">s</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:46">in_primaries</name></name></expr></argument>, <argument pos:start="157:49" pos:end="157:55"><expr pos:start="157:49" pos:end="157:55"><name pos:start="157:49" pos:end="157:55">rgb2xyz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="179:13"><if pos:start="159:13" pos:end="175:13">if <condition pos:start="159:16" pos:end="161:49">(<expr pos:start="159:17" pos:end="161:48"><name pos:start="159:17" pos:end="159:36"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:32">out_primaries</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:36">wp</name></name> <operator pos:start="159:38" pos:end="159:39">!=</operator> <name pos:start="159:41" pos:end="159:59"><name pos:start="159:41" pos:end="159:41">s</name><operator pos:start="159:42" pos:end="159:43">-&gt;</operator><name pos:start="159:44" pos:end="159:55">in_primaries</name><operator pos:start="159:56" pos:end="159:57">-&gt;</operator><name pos:start="159:58" pos:end="159:59">wp</name></name> <operator pos:start="159:61" pos:end="159:62">&amp;&amp;</operator>

                <name pos:start="161:17" pos:end="161:27"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:27">wp_adapt</name></name> <operator pos:start="161:29" pos:end="161:30">!=</operator> <name pos:start="161:32" pos:end="161:48">WP_ADAPT_IDENTITY</name></expr>)</condition> <block pos:start="161:51" pos:end="175:13">{<block_content pos:start="163:17" pos:end="173:46">

                <decl_stmt pos:start="163:17" pos:end="163:47"><decl pos:start="163:17" pos:end="163:35"><type pos:start="163:17" pos:end="163:22"><name pos:start="163:17" pos:end="163:22">double</name></type> <name pos:start="163:24" pos:end="163:35"><name pos:start="163:24" pos:end="163:29">wpconv</name><index pos:start="163:30" pos:end="163:32">[<expr pos:start="163:31" pos:end="163:31"><literal type="number" pos:start="163:31" pos:end="163:31">3</literal></expr>]</index><index pos:start="163:33" pos:end="163:35">[<expr pos:start="163:34" pos:end="163:34"><literal type="number" pos:start="163:34" pos:end="163:34">3</literal></expr>]</index></name></decl>, <decl pos:start="163:38" pos:end="163:46"><type ref="prev" pos:start="163:17" pos:end="163:22"/><name pos:start="163:38" pos:end="163:46"><name pos:start="163:38" pos:end="163:40">tmp</name><index pos:start="163:41" pos:end="163:43">[<expr pos:start="163:42" pos:end="163:42"><literal type="number" pos:start="163:42" pos:end="163:42">3</literal></expr>]</index><index pos:start="163:44" pos:end="163:46">[<expr pos:start="163:45" pos:end="163:45"><literal type="number" pos:start="163:45" pos:end="163:45">3</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="167:17" pos:end="169:65"><expr pos:start="167:17" pos:end="169:64"><call pos:start="167:17" pos:end="169:64"><name pos:start="167:17" pos:end="167:42">fill_whitepoint_conv_table</name><argument_list pos:start="167:43" pos:end="169:64">(<argument pos:start="167:44" pos:end="167:49"><expr pos:start="167:44" pos:end="167:49"><name pos:start="167:44" pos:end="167:49">wpconv</name></expr></argument>, <argument pos:start="167:52" pos:end="167:62"><expr pos:start="167:52" pos:end="167:62"><name pos:start="167:52" pos:end="167:62"><name pos:start="167:52" pos:end="167:52">s</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:62">wp_adapt</name></name></expr></argument>, <argument pos:start="167:65" pos:end="167:83"><expr pos:start="167:65" pos:end="167:83"><name pos:start="167:65" pos:end="167:83"><name pos:start="167:65" pos:end="167:65">s</name><operator pos:start="167:66" pos:end="167:67">-&gt;</operator><name pos:start="167:68" pos:end="167:79">in_primaries</name><operator pos:start="167:80" pos:end="167:81">-&gt;</operator><name pos:start="167:82" pos:end="167:83">wp</name></name></expr></argument>,

                                           <argument pos:start="169:44" pos:end="169:63"><expr pos:start="169:44" pos:end="169:63"><name pos:start="169:44" pos:end="169:63"><name pos:start="169:44" pos:end="169:44">s</name><operator pos:start="169:45" pos:end="169:46">-&gt;</operator><name pos:start="169:47" pos:end="169:59">out_primaries</name><operator pos:start="169:60" pos:end="169:61">-&gt;</operator><name pos:start="169:62" pos:end="169:63">wp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:45"><expr pos:start="171:17" pos:end="171:44"><call pos:start="171:17" pos:end="171:44"><name pos:start="171:17" pos:end="171:22">mul3x3</name><argument_list pos:start="171:23" pos:end="171:44">(<argument pos:start="171:24" pos:end="171:26"><expr pos:start="171:24" pos:end="171:26"><name pos:start="171:24" pos:end="171:26">tmp</name></expr></argument>, <argument pos:start="171:29" pos:end="171:35"><expr pos:start="171:29" pos:end="171:35"><name pos:start="171:29" pos:end="171:35">rgb2xyz</name></expr></argument>, <argument pos:start="171:38" pos:end="171:43"><expr pos:start="171:38" pos:end="171:43"><name pos:start="171:38" pos:end="171:43">wpconv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:46"><expr pos:start="173:17" pos:end="173:45"><call pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:22">mul3x3</name><argument_list pos:start="173:23" pos:end="173:45">(<argument pos:start="173:24" pos:end="173:30"><expr pos:start="173:24" pos:end="173:30"><name pos:start="173:24" pos:end="173:30">rgb2rgb</name></expr></argument>, <argument pos:start="173:33" pos:end="173:35"><expr pos:start="173:33" pos:end="173:35"><name pos:start="173:33" pos:end="173:35">tmp</name></expr></argument>, <argument pos:start="173:38" pos:end="173:44"><expr pos:start="173:38" pos:end="173:44"><name pos:start="173:38" pos:end="173:44">xyz2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="175:15" pos:end="179:13">else <block pos:start="175:20" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:50">

                <expr_stmt pos:start="177:17" pos:end="177:50"><expr pos:start="177:17" pos:end="177:49"><call pos:start="177:17" pos:end="177:49"><name pos:start="177:17" pos:end="177:22">mul3x3</name><argument_list pos:start="177:23" pos:end="177:49">(<argument pos:start="177:24" pos:end="177:30"><expr pos:start="177:24" pos:end="177:30"><name pos:start="177:24" pos:end="177:30">rgb2rgb</name></expr></argument>, <argument pos:start="177:33" pos:end="177:39"><expr pos:start="177:33" pos:end="177:39"><name pos:start="177:33" pos:end="177:39">rgb2xyz</name></expr></argument>, <argument pos:start="177:42" pos:end="177:48"><expr pos:start="177:42" pos:end="177:48"><name pos:start="177:42" pos:end="177:48">xyz2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="181:13" pos:end="191:17">for <control pos:start="181:17" pos:end="181:35">(<init pos:start="181:18" pos:end="181:23"><expr pos:start="181:18" pos:end="181:22"><name pos:start="181:18" pos:end="181:18">m</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</init> <condition pos:start="181:25" pos:end="181:30"><expr pos:start="181:25" pos:end="181:29"><name pos:start="181:25" pos:end="181:25">m</name> <operator pos:start="181:27" pos:end="181:27">&lt;</operator> <literal type="number" pos:start="181:29" pos:end="181:29">3</literal></expr>;</condition> <incr pos:start="181:32" pos:end="181:34"><expr pos:start="181:32" pos:end="181:34"><name pos:start="181:32" pos:end="181:32">m</name><operator pos:start="181:33" pos:end="181:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:17" pos:end="191:17"><block_content pos:start="183:17" pos:end="191:17">

                <for pos:start="183:17" pos:end="191:17">for <control pos:start="183:21" pos:end="183:39">(<init pos:start="183:22" pos:end="183:27"><expr pos:start="183:22" pos:end="183:26"><name pos:start="183:22" pos:end="183:22">n</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <literal type="number" pos:start="183:26" pos:end="183:26">0</literal></expr>;</init> <condition pos:start="183:29" pos:end="183:34"><expr pos:start="183:29" pos:end="183:33"><name pos:start="183:29" pos:end="183:29">n</name> <operator pos:start="183:31" pos:end="183:31">&lt;</operator> <literal type="number" pos:start="183:33" pos:end="183:33">3</literal></expr>;</condition> <incr pos:start="183:36" pos:end="183:38"><expr pos:start="183:36" pos:end="183:38"><name pos:start="183:36" pos:end="183:36">n</name><operator pos:start="183:37" pos:end="183:38">++</operator></expr></incr>)</control> <block pos:start="183:41" pos:end="191:17">{<block_content pos:start="185:21" pos:end="189:84">

                    <expr_stmt pos:start="185:21" pos:end="185:82"><expr pos:start="185:21" pos:end="185:81"><name pos:start="185:21" pos:end="185:48"><name pos:start="185:21" pos:end="185:21">s</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:39">lrgb2lrgb_coeffs</name><index pos:start="185:40" pos:end="185:42">[<expr pos:start="185:41" pos:end="185:41"><name pos:start="185:41" pos:end="185:41">m</name></expr>]</index><index pos:start="185:43" pos:end="185:45">[<expr pos:start="185:44" pos:end="185:44"><name pos:start="185:44" pos:end="185:44">n</name></expr>]</index><index pos:start="185:46" pos:end="185:48">[<expr pos:start="185:47" pos:end="185:47"><literal type="number" pos:start="185:47" pos:end="185:47">0</literal></expr>]</index></name> <operator pos:start="185:50" pos:end="185:50">=</operator> <call pos:start="185:52" pos:end="185:81"><name pos:start="185:52" pos:end="185:56">lrint</name><argument_list pos:start="185:57" pos:end="185:81">(<argument pos:start="185:58" pos:end="185:80"><expr pos:start="185:58" pos:end="185:80"><literal type="number" pos:start="185:58" pos:end="185:64">16384.0</literal> <operator pos:start="185:66" pos:end="185:66">*</operator> <name pos:start="185:68" pos:end="185:80"><name pos:start="185:68" pos:end="185:74">rgb2rgb</name><index pos:start="185:75" pos:end="185:77">[<expr pos:start="185:76" pos:end="185:76"><name pos:start="185:76" pos:end="185:76">m</name></expr>]</index><index pos:start="185:78" pos:end="185:80">[<expr pos:start="185:79" pos:end="185:79"><name pos:start="185:79" pos:end="185:79">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="187:21" pos:end="189:84">for <control pos:start="187:25" pos:end="187:43">(<init pos:start="187:26" pos:end="187:31"><expr pos:start="187:26" pos:end="187:30"><name pos:start="187:26" pos:end="187:26">o</name> <operator pos:start="187:28" pos:end="187:28">=</operator> <literal type="number" pos:start="187:30" pos:end="187:30">1</literal></expr>;</init> <condition pos:start="187:33" pos:end="187:38"><expr pos:start="187:33" pos:end="187:37"><name pos:start="187:33" pos:end="187:33">o</name> <operator pos:start="187:35" pos:end="187:35">&lt;</operator> <literal type="number" pos:start="187:37" pos:end="187:37">8</literal></expr>;</condition> <incr pos:start="187:40" pos:end="187:42"><expr pos:start="187:40" pos:end="187:42"><name pos:start="187:40" pos:end="187:40">o</name><operator pos:start="187:41" pos:end="187:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="189:25" pos:end="189:84"><block_content pos:start="189:25" pos:end="189:84">

                        <expr_stmt pos:start="189:25" pos:end="189:84"><expr pos:start="189:25" pos:end="189:83"><name pos:start="189:25" pos:end="189:52"><name pos:start="189:25" pos:end="189:25">s</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:43">lrgb2lrgb_coeffs</name><index pos:start="189:44" pos:end="189:46">[<expr pos:start="189:45" pos:end="189:45"><name pos:start="189:45" pos:end="189:45">m</name></expr>]</index><index pos:start="189:47" pos:end="189:49">[<expr pos:start="189:48" pos:end="189:48"><name pos:start="189:48" pos:end="189:48">n</name></expr>]</index><index pos:start="189:50" pos:end="189:52">[<expr pos:start="189:51" pos:end="189:51"><name pos:start="189:51" pos:end="189:51">o</name></expr>]</index></name> <operator pos:start="189:54" pos:end="189:54">=</operator> <name pos:start="189:56" pos:end="189:83"><name pos:start="189:56" pos:end="189:56">s</name><operator pos:start="189:57" pos:end="189:58">-&gt;</operator><name pos:start="189:59" pos:end="189:74">lrgb2lrgb_coeffs</name><index pos:start="189:75" pos:end="189:77">[<expr pos:start="189:76" pos:end="189:76"><name pos:start="189:76" pos:end="189:76">m</name></expr>]</index><index pos:start="189:78" pos:end="189:80">[<expr pos:start="189:79" pos:end="189:79"><name pos:start="189:79" pos:end="189:79">n</name></expr>]</index><index pos:start="189:81" pos:end="189:83">[<expr pos:start="189:82" pos:end="189:82"><literal type="number" pos:start="189:82" pos:end="189:82">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for></block_content></block></for>



            <expr_stmt pos:start="195:13" pos:end="195:21"><expr pos:start="195:13" pos:end="195:20"><name pos:start="195:13" pos:end="195:16">emms</name> <operator pos:start="195:18" pos:end="195:18">=</operator> <literal type="number" pos:start="195:20" pos:end="195:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="203:5" pos:end="231:5"><if pos:start="203:5" pos:end="231:5">if <condition pos:start="203:8" pos:end="203:21">(<expr pos:start="203:9" pos:end="203:20"><operator pos:start="203:9" pos:end="203:9">!</operator><name pos:start="203:10" pos:end="203:20"><name pos:start="203:10" pos:end="203:10">s</name><operator pos:start="203:11" pos:end="203:12">-&gt;</operator><name pos:start="203:13" pos:end="203:20">in_txchr</name></name></expr>)</condition> <block pos:start="203:23" pos:end="231:5">{<block_content pos:start="205:9" pos:end="229:9">

        <expr_stmt pos:start="205:9" pos:end="205:30"><expr pos:start="205:9" pos:end="205:29"><call pos:start="205:9" pos:end="205:29"><name pos:start="205:9" pos:end="205:16">av_freep</name><argument_list pos:start="205:17" pos:end="205:29">(<argument pos:start="205:18" pos:end="205:28"><expr pos:start="205:18" pos:end="205:28"><operator pos:start="205:18" pos:end="205:18">&amp;</operator><name pos:start="205:19" pos:end="205:28"><name pos:start="205:19" pos:end="205:19">s</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:28">lin_lut</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:34"><expr pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:17">in_trc</name></name> <operator pos:start="207:19" pos:end="207:19">=</operator> <name pos:start="207:21" pos:end="207:33"><name pos:start="207:21" pos:end="207:22">in</name><operator pos:start="207:23" pos:end="207:24">-&gt;</operator><name pos:start="207:25" pos:end="207:33">color_trc</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="211:64"><if pos:start="209:9" pos:end="211:64">if <condition pos:start="209:12" pos:end="209:43">(<expr pos:start="209:13" pos:end="209:42"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:24">user_iall</name></name> <operator pos:start="209:26" pos:end="209:27">!=</operator> <name pos:start="209:29" pos:end="209:42">CS_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:64"><block_content pos:start="211:13" pos:end="211:64">

            <expr_stmt pos:start="211:13" pos:end="211:64"><expr pos:start="211:13" pos:end="211:63"><name pos:start="211:13" pos:end="211:21"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:21">in_trc</name></name> <operator pos:start="211:23" pos:end="211:23">=</operator> <name pos:start="211:25" pos:end="211:63"><name pos:start="211:25" pos:end="211:35">default_trc</name><index pos:start="211:36" pos:end="211:63">[<expr pos:start="211:37" pos:end="211:62"><call pos:start="211:37" pos:end="211:62"><name pos:start="211:37" pos:end="211:41">FFMIN</name><argument_list pos:start="211:42" pos:end="211:62">(<argument pos:start="211:43" pos:end="211:54"><expr pos:start="211:43" pos:end="211:54"><name pos:start="211:43" pos:end="211:54"><name pos:start="211:43" pos:end="211:43">s</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:54">user_iall</name></name></expr></argument>, <argument pos:start="211:57" pos:end="211:61"><expr pos:start="211:57" pos:end="211:61"><name pos:start="211:57" pos:end="211:61">CS_NB</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="213:9" pos:end="215:37"><if pos:start="213:9" pos:end="215:37">if <condition pos:start="213:12" pos:end="213:50">(<expr pos:start="213:13" pos:end="213:49"><name pos:start="213:13" pos:end="213:24"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:24">user_itrc</name></name> <operator pos:start="213:26" pos:end="213:27">!=</operator> <name pos:start="213:29" pos:end="213:49">AVCOL_TRC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="215:13" pos:end="215:37"><block_content pos:start="215:13" pos:end="215:37">

            <expr_stmt pos:start="215:13" pos:end="215:37"><expr pos:start="215:13" pos:end="215:36"><name pos:start="215:13" pos:end="215:21"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:21">in_trc</name></name> <operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:36"><name pos:start="215:25" pos:end="215:25">s</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:36">user_itrc</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:62"><expr pos:start="217:9" pos:end="217:61"><name pos:start="217:9" pos:end="217:19"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:19">in_txchr</name></name> <operator pos:start="217:21" pos:end="217:21">=</operator> <call pos:start="217:23" pos:end="217:61"><name pos:start="217:23" pos:end="217:50">get_transfer_characteristics</name><argument_list pos:start="217:51" pos:end="217:61">(<argument pos:start="217:52" pos:end="217:60"><expr pos:start="217:52" pos:end="217:60"><name pos:start="217:52" pos:end="217:60"><name pos:start="217:52" pos:end="217:52">s</name><operator pos:start="217:53" pos:end="217:54">-&gt;</operator><name pos:start="217:55" pos:end="217:60">in_trc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="229:9"><if pos:start="219:9" pos:end="229:9">if <condition pos:start="219:12" pos:end="219:25">(<expr pos:start="219:13" pos:end="219:24"><operator pos:start="219:13" pos:end="219:13">!</operator><name pos:start="219:14" pos:end="219:24"><name pos:start="219:14" pos:end="219:14">s</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:24">in_txchr</name></name></expr>)</condition> <block pos:start="219:27" pos:end="229:9">{<block_content pos:start="221:13" pos:end="227:35">

            <expr_stmt pos:start="221:13" pos:end="225:65"><expr pos:start="221:13" pos:end="225:64"><call pos:start="221:13" pos:end="225:64"><name pos:start="221:13" pos:end="221:18">av_log</name><argument_list pos:start="221:19" pos:end="225:64">(<argument pos:start="221:20" pos:end="221:22"><expr pos:start="221:20" pos:end="221:22"><name pos:start="221:20" pos:end="221:22">ctx</name></expr></argument>, <argument pos:start="221:25" pos:end="221:36"><expr pos:start="221:25" pos:end="221:36"><name pos:start="221:25" pos:end="221:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="223:20" pos:end="223:73"><expr pos:start="223:20" pos:end="223:73"><literal type="string" pos:start="223:20" pos:end="223:73">"Unsupported input transfer characteristics %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="225:20" pos:end="225:28"><expr pos:start="225:20" pos:end="225:28"><name pos:start="225:20" pos:end="225:28"><name pos:start="225:20" pos:end="225:20">s</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:28">in_trc</name></name></expr></argument>, <argument pos:start="225:31" pos:end="225:63"><expr pos:start="225:31" pos:end="225:63"><call pos:start="225:31" pos:end="225:63"><name pos:start="225:31" pos:end="225:52">av_color_transfer_name</name><argument_list pos:start="225:53" pos:end="225:63">(<argument pos:start="225:54" pos:end="225:62"><expr pos:start="225:54" pos:end="225:62"><name pos:start="225:54" pos:end="225:62"><name pos:start="225:54" pos:end="225:54">s</name><operator pos:start="225:55" pos:end="225:56">-&gt;</operator><name pos:start="225:57" pos:end="225:62">in_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="227:13" pos:end="227:35">return <expr pos:start="227:20" pos:end="227:34"><call pos:start="227:20" pos:end="227:34"><name pos:start="227:20" pos:end="227:26">AVERROR</name><argument_list pos:start="227:27" pos:end="227:34">(<argument pos:start="227:28" pos:end="227:33"><expr pos:start="227:28" pos:end="227:33"><name pos:start="227:28" pos:end="227:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="275:5"><if pos:start="235:5" pos:end="275:5">if <condition pos:start="235:8" pos:end="235:22">(<expr pos:start="235:9" pos:end="235:21"><operator pos:start="235:9" pos:end="235:9">!</operator><name pos:start="235:10" pos:end="235:21"><name pos:start="235:10" pos:end="235:10">s</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:21">out_txchr</name></name></expr>)</condition> <block pos:start="235:24" pos:end="275:5">{<block_content pos:start="237:9" pos:end="273:9">

        <expr_stmt pos:start="237:9" pos:end="237:30"><expr pos:start="237:9" pos:end="237:29"><call pos:start="237:9" pos:end="237:29"><name pos:start="237:9" pos:end="237:16">av_freep</name><argument_list pos:start="237:17" pos:end="237:29">(<argument pos:start="237:18" pos:end="237:28"><expr pos:start="237:18" pos:end="237:28"><operator pos:start="237:18" pos:end="237:18">&amp;</operator><name pos:start="237:19" pos:end="237:28"><name pos:start="237:19" pos:end="237:19">s</name><operator pos:start="237:20" pos:end="237:21">-&gt;</operator><name pos:start="237:22" pos:end="237:28">lin_lut</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:36"><expr pos:start="239:9" pos:end="239:35"><name pos:start="239:9" pos:end="239:18"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:18">out_trc</name></name> <operator pos:start="239:20" pos:end="239:20">=</operator> <name pos:start="239:22" pos:end="239:35"><name pos:start="239:22" pos:end="239:24">out</name><operator pos:start="239:25" pos:end="239:26">-&gt;</operator><name pos:start="239:27" pos:end="239:35">color_trc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:64"><expr pos:start="241:9" pos:end="241:63"><name pos:start="241:9" pos:end="241:20"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:20">out_txchr</name></name> <operator pos:start="241:22" pos:end="241:22">=</operator> <call pos:start="241:24" pos:end="241:63"><name pos:start="241:24" pos:end="241:51">get_transfer_characteristics</name><argument_list pos:start="241:52" pos:end="241:63">(<argument pos:start="241:53" pos:end="241:62"><expr pos:start="241:53" pos:end="241:62"><name pos:start="241:53" pos:end="241:62"><name pos:start="241:53" pos:end="241:53">s</name><operator pos:start="241:54" pos:end="241:55">-&gt;</operator><name pos:start="241:56" pos:end="241:62">out_trc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="273:9"><if pos:start="243:9" pos:end="273:9">if <condition pos:start="243:12" pos:end="243:26">(<expr pos:start="243:13" pos:end="243:25"><operator pos:start="243:13" pos:end="243:13">!</operator><name pos:start="243:14" pos:end="243:25"><name pos:start="243:14" pos:end="243:14">s</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:25">out_txchr</name></name></expr>)</condition> <block pos:start="243:28" pos:end="273:9">{<block_content pos:start="245:13" pos:end="271:35">

            <if_stmt pos:start="245:13" pos:end="269:13"><if pos:start="245:13" pos:end="261:13">if <condition pos:start="245:16" pos:end="245:52">(<expr pos:start="245:17" pos:end="245:51"><name pos:start="245:17" pos:end="245:26"><name pos:start="245:17" pos:end="245:17">s</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:26">out_trc</name></name> <operator pos:start="245:28" pos:end="245:29">==</operator> <name pos:start="245:31" pos:end="245:51">AVCOL_TRC_UNSPECIFIED</name></expr>)</condition> <block pos:start="245:54" pos:end="261:13">{<block_content pos:start="247:17" pos:end="259:17">

                <if_stmt pos:start="247:17" pos:end="259:17"><if pos:start="247:17" pos:end="253:17">if <condition pos:start="247:20" pos:end="247:50">(<expr pos:start="247:21" pos:end="247:49"><name pos:start="247:21" pos:end="247:31"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:31">user_all</name></name> <operator pos:start="247:33" pos:end="247:34">==</operator> <name pos:start="247:36" pos:end="247:49">CS_UNSPECIFIED</name></expr>)</condition> <block pos:start="247:52" pos:end="253:17">{<block_content pos:start="249:21" pos:end="251:79">

                    <expr_stmt pos:start="249:21" pos:end="251:79"><expr pos:start="249:21" pos:end="251:78"><call pos:start="249:21" pos:end="251:78"><name pos:start="249:21" pos:end="249:26">av_log</name><argument_list pos:start="249:27" pos:end="251:78">(<argument pos:start="249:28" pos:end="249:30"><expr pos:start="249:28" pos:end="249:30"><name pos:start="249:28" pos:end="249:30">ctx</name></expr></argument>, <argument pos:start="249:33" pos:end="249:44"><expr pos:start="249:33" pos:end="249:44"><name pos:start="249:33" pos:end="249:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="251:28" pos:end="251:77"><expr pos:start="251:28" pos:end="251:77"><literal type="string" pos:start="251:28" pos:end="251:77">"Please specify output transfer characteristics\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="253:19" pos:end="259:17">else <block pos:start="253:24" pos:end="259:17">{<block_content pos:start="255:21" pos:end="257:82">

                    <expr_stmt pos:start="255:21" pos:end="257:82"><expr pos:start="255:21" pos:end="257:81"><call pos:start="255:21" pos:end="257:81"><name pos:start="255:21" pos:end="255:26">av_log</name><argument_list pos:start="255:27" pos:end="257:81">(<argument pos:start="255:28" pos:end="255:30"><expr pos:start="255:28" pos:end="255:30"><name pos:start="255:28" pos:end="255:30">ctx</name></expr></argument>, <argument pos:start="255:33" pos:end="255:44"><expr pos:start="255:33" pos:end="255:44"><name pos:start="255:33" pos:end="255:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="257:28" pos:end="257:67"><expr pos:start="257:28" pos:end="257:67"><literal type="string" pos:start="257:28" pos:end="257:67">"Unsupported output color property %d\n"</literal></expr></argument>, <argument pos:start="257:70" pos:end="257:80"><expr pos:start="257:70" pos:end="257:80"><name pos:start="257:70" pos:end="257:80"><name pos:start="257:70" pos:end="257:70">s</name><operator pos:start="257:71" pos:end="257:72">-&gt;</operator><name pos:start="257:73" pos:end="257:80">user_all</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="261:15" pos:end="269:13">else <block pos:start="261:20" pos:end="269:13">{<block_content pos:start="263:17" pos:end="267:71">

                <expr_stmt pos:start="263:17" pos:end="267:71"><expr pos:start="263:17" pos:end="267:70"><call pos:start="263:17" pos:end="267:70"><name pos:start="263:17" pos:end="263:22">av_log</name><argument_list pos:start="263:23" pos:end="267:70">(<argument pos:start="263:24" pos:end="263:26"><expr pos:start="263:24" pos:end="263:26"><name pos:start="263:24" pos:end="263:26">ctx</name></expr></argument>, <argument pos:start="263:29" pos:end="263:40"><expr pos:start="263:29" pos:end="263:40"><name pos:start="263:29" pos:end="263:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="265:24" pos:end="265:78"><expr pos:start="265:24" pos:end="265:78"><literal type="string" pos:start="265:24" pos:end="265:78">"Unsupported output transfer characteristics %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="267:24" pos:end="267:33"><expr pos:start="267:24" pos:end="267:33"><name pos:start="267:24" pos:end="267:33"><name pos:start="267:24" pos:end="267:24">s</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:33">out_trc</name></name></expr></argument>, <argument pos:start="267:36" pos:end="267:69"><expr pos:start="267:36" pos:end="267:69"><call pos:start="267:36" pos:end="267:69"><name pos:start="267:36" pos:end="267:57">av_color_transfer_name</name><argument_list pos:start="267:58" pos:end="267:69">(<argument pos:start="267:59" pos:end="267:68"><expr pos:start="267:59" pos:end="267:68"><name pos:start="267:59" pos:end="267:68"><name pos:start="267:59" pos:end="267:59">s</name><operator pos:start="267:60" pos:end="267:61">-&gt;</operator><name pos:start="267:62" pos:end="267:68">out_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="271:13" pos:end="271:35">return <expr pos:start="271:20" pos:end="271:34"><call pos:start="271:20" pos:end="271:34"><name pos:start="271:20" pos:end="271:26">AVERROR</name><argument_list pos:start="271:27" pos:end="271:34">(<argument pos:start="271:28" pos:end="271:33"><expr pos:start="271:28" pos:end="271:33"><name pos:start="271:28" pos:end="271:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="279:5" pos:end="281:87"><expr pos:start="279:5" pos:end="281:86"><name pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:5">s</name><operator pos:start="279:6" pos:end="279:7">-&gt;</operator><name pos:start="279:8" pos:end="279:26">rgb2rgb_passthrough</name></name> <operator pos:start="279:28" pos:end="279:28">=</operator> <name pos:start="279:30" pos:end="279:41"><name pos:start="279:30" pos:end="279:30">s</name><operator pos:start="279:31" pos:end="279:32">-&gt;</operator><name pos:start="279:33" pos:end="279:41">fast_mode</name></name> <operator pos:start="279:43" pos:end="279:44">||</operator> <operator pos:start="279:46" pos:end="279:46">(</operator><name pos:start="279:47" pos:end="279:70"><name pos:start="279:47" pos:end="279:47">s</name><operator pos:start="279:48" pos:end="279:49">-&gt;</operator><name pos:start="279:50" pos:end="279:70">lrgb2lrgb_passthrough</name></name> <operator pos:start="279:72" pos:end="279:73">&amp;&amp;</operator>

                             <operator pos:start="281:30" pos:end="281:30">!</operator><call pos:start="281:31" pos:end="281:85"><name pos:start="281:31" pos:end="281:36">memcmp</name><argument_list pos:start="281:37" pos:end="281:85">(<argument pos:start="281:38" pos:end="281:48"><expr pos:start="281:38" pos:end="281:48"><name pos:start="281:38" pos:end="281:48"><name pos:start="281:38" pos:end="281:38">s</name><operator pos:start="281:39" pos:end="281:40">-&gt;</operator><name pos:start="281:41" pos:end="281:48">in_txchr</name></name></expr></argument>, <argument pos:start="281:51" pos:end="281:62"><expr pos:start="281:51" pos:end="281:62"><name pos:start="281:51" pos:end="281:62"><name pos:start="281:51" pos:end="281:51">s</name><operator pos:start="281:52" pos:end="281:53">-&gt;</operator><name pos:start="281:54" pos:end="281:62">out_txchr</name></name></expr></argument>, <argument pos:start="281:65" pos:end="281:84"><expr pos:start="281:65" pos:end="281:84"><sizeof pos:start="281:65" pos:end="281:84">sizeof<argument_list pos:start="281:71" pos:end="281:84">(<argument pos:start="281:72" pos:end="281:83"><expr pos:start="281:72" pos:end="281:83"><operator pos:start="281:72" pos:end="281:72">*</operator><name pos:start="281:73" pos:end="281:83"><name pos:start="281:73" pos:end="281:73">s</name><operator pos:start="281:74" pos:end="281:75">-&gt;</operator><name pos:start="281:76" pos:end="281:83">in_txchr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="281:86" pos:end="281:86">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="283:5" pos:end="293:5"><if pos:start="283:5" pos:end="293:5">if <condition pos:start="283:8" pos:end="283:47">(<expr pos:start="283:9" pos:end="283:46"><operator pos:start="283:9" pos:end="283:9">!</operator><name pos:start="283:10" pos:end="283:31"><name pos:start="283:10" pos:end="283:10">s</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:31">rgb2rgb_passthrough</name></name> <operator pos:start="283:33" pos:end="283:34">&amp;&amp;</operator> <operator pos:start="283:36" pos:end="283:36">!</operator><name pos:start="283:37" pos:end="283:46"><name pos:start="283:37" pos:end="283:37">s</name><operator pos:start="283:38" pos:end="283:39">-&gt;</operator><name pos:start="283:40" pos:end="283:46">lin_lut</name></name></expr>)</condition> <block pos:start="283:49" pos:end="293:5">{<block_content pos:start="285:9" pos:end="291:17">

        <expr_stmt pos:start="285:9" pos:end="285:34"><expr pos:start="285:9" pos:end="285:33"><name pos:start="285:9" pos:end="285:11">res</name> <operator pos:start="285:13" pos:end="285:13">=</operator> <call pos:start="285:15" pos:end="285:33"><name pos:start="285:15" pos:end="285:30">fill_gamma_table</name><argument_list pos:start="285:31" pos:end="285:33">(<argument pos:start="285:32" pos:end="285:32"><expr pos:start="285:32" pos:end="285:32"><name pos:start="285:32" pos:end="285:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="287:9" pos:end="289:23"><if pos:start="287:9" pos:end="289:23">if <condition pos:start="287:12" pos:end="287:20">(<expr pos:start="287:13" pos:end="287:19"><name pos:start="287:13" pos:end="287:15">res</name> <operator pos:start="287:17" pos:end="287:17">&lt;</operator> <literal type="number" pos:start="287:19" pos:end="287:19">0</literal></expr>)</condition><block type="pseudo" pos:start="289:13" pos:end="289:23"><block_content pos:start="289:13" pos:end="289:23">

            <return pos:start="289:13" pos:end="289:23">return <expr pos:start="289:20" pos:end="289:22"><name pos:start="289:20" pos:end="289:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:17"><expr pos:start="291:9" pos:end="291:16"><name pos:start="291:9" pos:end="291:12">emms</name> <operator pos:start="291:14" pos:end="291:14">=</operator> <literal type="number" pos:start="291:16" pos:end="291:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="297:5" pos:end="331:5"><if pos:start="297:5" pos:end="331:5">if <condition pos:start="297:8" pos:end="297:24">(<expr pos:start="297:9" pos:end="297:23"><operator pos:start="297:9" pos:end="297:9">!</operator><name pos:start="297:10" pos:end="297:23"><name pos:start="297:10" pos:end="297:10">s</name><operator pos:start="297:11" pos:end="297:12">-&gt;</operator><name pos:start="297:13" pos:end="297:23">in_lumacoef</name></name></expr>)</condition> <block pos:start="297:26" pos:end="331:5">{<block_content pos:start="299:9" pos:end="329:25">

        <expr_stmt pos:start="299:9" pos:end="299:35"><expr pos:start="299:9" pos:end="299:34"><name pos:start="299:9" pos:end="299:17"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:17">in_csp</name></name> <operator pos:start="299:19" pos:end="299:19">=</operator> <name pos:start="299:21" pos:end="299:34"><name pos:start="299:21" pos:end="299:22">in</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:34">colorspace</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="303:64"><if pos:start="301:9" pos:end="303:64">if <condition pos:start="301:12" pos:end="301:43">(<expr pos:start="301:13" pos:end="301:42"><name pos:start="301:13" pos:end="301:24"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:24">user_iall</name></name> <operator pos:start="301:26" pos:end="301:27">!=</operator> <name pos:start="301:29" pos:end="301:42">CS_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:64"><block_content pos:start="303:13" pos:end="303:64">

            <expr_stmt pos:start="303:13" pos:end="303:64"><expr pos:start="303:13" pos:end="303:63"><name pos:start="303:13" pos:end="303:21"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:21">in_csp</name></name> <operator pos:start="303:23" pos:end="303:23">=</operator> <name pos:start="303:25" pos:end="303:63"><name pos:start="303:25" pos:end="303:35">default_csp</name><index pos:start="303:36" pos:end="303:63">[<expr pos:start="303:37" pos:end="303:62"><call pos:start="303:37" pos:end="303:62"><name pos:start="303:37" pos:end="303:41">FFMIN</name><argument_list pos:start="303:42" pos:end="303:62">(<argument pos:start="303:43" pos:end="303:54"><expr pos:start="303:43" pos:end="303:54"><name pos:start="303:43" pos:end="303:54"><name pos:start="303:43" pos:end="303:43">s</name><operator pos:start="303:44" pos:end="303:45">-&gt;</operator><name pos:start="303:46" pos:end="303:54">user_iall</name></name></expr></argument>, <argument pos:start="303:57" pos:end="303:61"><expr pos:start="303:57" pos:end="303:61"><name pos:start="303:57" pos:end="303:61">CS_NB</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="305:9" pos:end="307:37"><if pos:start="305:9" pos:end="307:37">if <condition pos:start="305:12" pos:end="305:50">(<expr pos:start="305:13" pos:end="305:49"><name pos:start="305:13" pos:end="305:24"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:24">user_icsp</name></name> <operator pos:start="305:26" pos:end="305:27">!=</operator> <name pos:start="305:29" pos:end="305:49">AVCOL_SPC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:37"><block_content pos:start="307:13" pos:end="307:37">

            <expr_stmt pos:start="307:13" pos:end="307:37"><expr pos:start="307:13" pos:end="307:36"><name pos:start="307:13" pos:end="307:21"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:21">in_csp</name></name> <operator pos:start="307:23" pos:end="307:23">=</operator> <name pos:start="307:25" pos:end="307:36"><name pos:start="307:25" pos:end="307:25">s</name><operator pos:start="307:26" pos:end="307:27">-&gt;</operator><name pos:start="307:28" pos:end="307:36">user_icsp</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:36"><expr pos:start="309:9" pos:end="309:35"><name pos:start="309:9" pos:end="309:17"><name pos:start="309:9" pos:end="309:9">s</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:17">in_rng</name></name> <operator pos:start="309:19" pos:end="309:19">=</operator> <name pos:start="309:21" pos:end="309:35"><name pos:start="309:21" pos:end="309:22">in</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:35">color_range</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="311:9" pos:end="313:37"><if pos:start="311:9" pos:end="313:37">if <condition pos:start="311:12" pos:end="311:52">(<expr pos:start="311:13" pos:end="311:51"><name pos:start="311:13" pos:end="311:24"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:24">user_irng</name></name> <operator pos:start="311:26" pos:end="311:27">!=</operator> <name pos:start="311:29" pos:end="311:51">AVCOL_RANGE_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="313:13" pos:end="313:37"><block_content pos:start="313:13" pos:end="313:37">

            <expr_stmt pos:start="313:13" pos:end="313:37"><expr pos:start="313:13" pos:end="313:36"><name pos:start="313:13" pos:end="313:21"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:21">in_rng</name></name> <operator pos:start="313:23" pos:end="313:23">=</operator> <name pos:start="313:25" pos:end="313:36"><name pos:start="313:25" pos:end="313:25">s</name><operator pos:start="313:26" pos:end="313:27">-&gt;</operator><name pos:start="313:28" pos:end="313:36">user_irng</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:58"><expr pos:start="315:9" pos:end="315:57"><name pos:start="315:9" pos:end="315:22"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:22">in_lumacoef</name></name> <operator pos:start="315:24" pos:end="315:24">=</operator> <call pos:start="315:26" pos:end="315:57"><name pos:start="315:26" pos:end="315:46">get_luma_coefficients</name><argument_list pos:start="315:47" pos:end="315:57">(<argument pos:start="315:48" pos:end="315:56"><expr pos:start="315:48" pos:end="315:56"><name pos:start="315:48" pos:end="315:56"><name pos:start="315:48" pos:end="315:48">s</name><operator pos:start="315:49" pos:end="315:50">-&gt;</operator><name pos:start="315:51" pos:end="315:56">in_csp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="317:9" pos:end="327:9"><if pos:start="317:9" pos:end="327:9">if <condition pos:start="317:12" pos:end="317:28">(<expr pos:start="317:13" pos:end="317:27"><operator pos:start="317:13" pos:end="317:13">!</operator><name pos:start="317:14" pos:end="317:27"><name pos:start="317:14" pos:end="317:14">s</name><operator pos:start="317:15" pos:end="317:16">-&gt;</operator><name pos:start="317:17" pos:end="317:27">in_lumacoef</name></name></expr>)</condition> <block pos:start="317:30" pos:end="327:9">{<block_content pos:start="319:13" pos:end="325:35">

            <expr_stmt pos:start="319:13" pos:end="323:62"><expr pos:start="319:13" pos:end="323:61"><call pos:start="319:13" pos:end="323:61"><name pos:start="319:13" pos:end="319:18">av_log</name><argument_list pos:start="319:19" pos:end="323:61">(<argument pos:start="319:20" pos:end="319:22"><expr pos:start="319:20" pos:end="319:22"><name pos:start="319:20" pos:end="319:22">ctx</name></expr></argument>, <argument pos:start="319:25" pos:end="319:36"><expr pos:start="319:25" pos:end="319:36"><name pos:start="319:25" pos:end="319:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="321:20" pos:end="321:59"><expr pos:start="321:20" pos:end="321:59"><literal type="string" pos:start="321:20" pos:end="321:59">"Unsupported input colorspace %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="323:20" pos:end="323:28"><expr pos:start="323:20" pos:end="323:28"><name pos:start="323:20" pos:end="323:28"><name pos:start="323:20" pos:end="323:20">s</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:28">in_csp</name></name></expr></argument>, <argument pos:start="323:31" pos:end="323:60"><expr pos:start="323:31" pos:end="323:60"><call pos:start="323:31" pos:end="323:60"><name pos:start="323:31" pos:end="323:49">av_color_space_name</name><argument_list pos:start="323:50" pos:end="323:60">(<argument pos:start="323:51" pos:end="323:59"><expr pos:start="323:51" pos:end="323:59"><name pos:start="323:51" pos:end="323:59"><name pos:start="323:51" pos:end="323:51">s</name><operator pos:start="323:52" pos:end="323:53">-&gt;</operator><name pos:start="323:54" pos:end="323:59">in_csp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="325:13" pos:end="325:35">return <expr pos:start="325:20" pos:end="325:34"><call pos:start="325:20" pos:end="325:34"><name pos:start="325:20" pos:end="325:26">AVERROR</name><argument_list pos:start="325:27" pos:end="325:34">(<argument pos:start="325:28" pos:end="325:33"><expr pos:start="325:28" pos:end="325:33"><name pos:start="325:28" pos:end="325:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:25"><expr pos:start="329:9" pos:end="329:24"><name pos:start="329:9" pos:end="329:20">redo_yuv2rgb</name> <operator pos:start="329:22" pos:end="329:22">=</operator> <literal type="number" pos:start="329:24" pos:end="329:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="335:5" pos:end="377:5"><if pos:start="335:5" pos:end="377:5">if <condition pos:start="335:8" pos:end="335:25">(<expr pos:start="335:9" pos:end="335:24"><operator pos:start="335:9" pos:end="335:9">!</operator><name pos:start="335:10" pos:end="335:24"><name pos:start="335:10" pos:end="335:10">s</name><operator pos:start="335:11" pos:end="335:12">-&gt;</operator><name pos:start="335:13" pos:end="335:24">out_lumacoef</name></name></expr>)</condition> <block pos:start="335:27" pos:end="377:5">{<block_content pos:start="337:9" pos:end="375:25">

        <expr_stmt pos:start="337:9" pos:end="337:37"><expr pos:start="337:9" pos:end="337:36"><name pos:start="337:9" pos:end="337:18"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:18">out_csp</name></name> <operator pos:start="337:20" pos:end="337:20">=</operator> <name pos:start="337:22" pos:end="337:36"><name pos:start="337:22" pos:end="337:24">out</name><operator pos:start="337:25" pos:end="337:26">-&gt;</operator><name pos:start="337:27" pos:end="337:36">colorspace</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:38"><expr pos:start="339:9" pos:end="339:37"><name pos:start="339:9" pos:end="339:18"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:18">out_rng</name></name> <operator pos:start="339:20" pos:end="339:20">=</operator> <name pos:start="339:22" pos:end="339:37"><name pos:start="339:22" pos:end="339:24">out</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:37">color_range</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:60"><expr pos:start="341:9" pos:end="341:59"><name pos:start="341:9" pos:end="341:23"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:23">out_lumacoef</name></name> <operator pos:start="341:25" pos:end="341:25">=</operator> <call pos:start="341:27" pos:end="341:59"><name pos:start="341:27" pos:end="341:47">get_luma_coefficients</name><argument_list pos:start="341:48" pos:end="341:59">(<argument pos:start="341:49" pos:end="341:58"><expr pos:start="341:49" pos:end="341:58"><name pos:start="341:49" pos:end="341:58"><name pos:start="341:49" pos:end="341:49">s</name><operator pos:start="341:50" pos:end="341:51">-&gt;</operator><name pos:start="341:52" pos:end="341:58">out_csp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="343:9" pos:end="373:9"><if pos:start="343:9" pos:end="373:9">if <condition pos:start="343:12" pos:end="343:29">(<expr pos:start="343:13" pos:end="343:28"><operator pos:start="343:13" pos:end="343:13">!</operator><name pos:start="343:14" pos:end="343:28"><name pos:start="343:14" pos:end="343:14">s</name><operator pos:start="343:15" pos:end="343:16">-&gt;</operator><name pos:start="343:17" pos:end="343:28">out_lumacoef</name></name></expr>)</condition> <block pos:start="343:31" pos:end="373:9">{<block_content pos:start="345:13" pos:end="371:35">

            <if_stmt pos:start="345:13" pos:end="369:13"><if pos:start="345:13" pos:end="361:13">if <condition pos:start="345:16" pos:end="345:52">(<expr pos:start="345:17" pos:end="345:51"><name pos:start="345:17" pos:end="345:26"><name pos:start="345:17" pos:end="345:17">s</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:26">out_csp</name></name> <operator pos:start="345:28" pos:end="345:29">==</operator> <name pos:start="345:31" pos:end="345:51">AVCOL_SPC_UNSPECIFIED</name></expr>)</condition> <block pos:start="345:54" pos:end="361:13">{<block_content pos:start="347:17" pos:end="359:17">

                <if_stmt pos:start="347:17" pos:end="359:17"><if pos:start="347:17" pos:end="353:17">if <condition pos:start="347:20" pos:end="347:50">(<expr pos:start="347:21" pos:end="347:49"><name pos:start="347:21" pos:end="347:31"><name pos:start="347:21" pos:end="347:21">s</name><operator pos:start="347:22" pos:end="347:23">-&gt;</operator><name pos:start="347:24" pos:end="347:31">user_all</name></name> <operator pos:start="347:33" pos:end="347:34">==</operator> <name pos:start="347:36" pos:end="347:49">CS_UNSPECIFIED</name></expr>)</condition> <block pos:start="347:52" pos:end="353:17">{<block_content pos:start="349:21" pos:end="351:79">

                    <expr_stmt pos:start="349:21" pos:end="351:79"><expr pos:start="349:21" pos:end="351:78"><call pos:start="349:21" pos:end="351:78"><name pos:start="349:21" pos:end="349:26">av_log</name><argument_list pos:start="349:27" pos:end="351:78">(<argument pos:start="349:28" pos:end="349:30"><expr pos:start="349:28" pos:end="349:30"><name pos:start="349:28" pos:end="349:30">ctx</name></expr></argument>, <argument pos:start="349:33" pos:end="349:44"><expr pos:start="349:33" pos:end="349:44"><name pos:start="349:33" pos:end="349:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="351:28" pos:end="351:77"><expr pos:start="351:28" pos:end="351:77"><literal type="string" pos:start="351:28" pos:end="351:77">"Please specify output transfer characteristics\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="353:19" pos:end="359:17">else <block pos:start="353:24" pos:end="359:17">{<block_content pos:start="355:21" pos:end="357:82">

                    <expr_stmt pos:start="355:21" pos:end="357:82"><expr pos:start="355:21" pos:end="357:81"><call pos:start="355:21" pos:end="357:81"><name pos:start="355:21" pos:end="355:26">av_log</name><argument_list pos:start="355:27" pos:end="357:81">(<argument pos:start="355:28" pos:end="355:30"><expr pos:start="355:28" pos:end="355:30"><name pos:start="355:28" pos:end="355:30">ctx</name></expr></argument>, <argument pos:start="355:33" pos:end="355:44"><expr pos:start="355:33" pos:end="355:44"><name pos:start="355:33" pos:end="355:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="357:28" pos:end="357:67"><expr pos:start="357:28" pos:end="357:67"><literal type="string" pos:start="357:28" pos:end="357:67">"Unsupported output color property %d\n"</literal></expr></argument>, <argument pos:start="357:70" pos:end="357:80"><expr pos:start="357:70" pos:end="357:80"><name pos:start="357:70" pos:end="357:80"><name pos:start="357:70" pos:end="357:70">s</name><operator pos:start="357:71" pos:end="357:72">-&gt;</operator><name pos:start="357:73" pos:end="357:80">user_all</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="361:15" pos:end="369:13">else <block pos:start="361:20" pos:end="369:13">{<block_content pos:start="363:17" pos:end="367:68">

                <expr_stmt pos:start="363:17" pos:end="367:68"><expr pos:start="363:17" pos:end="367:67"><call pos:start="363:17" pos:end="367:67"><name pos:start="363:17" pos:end="363:22">av_log</name><argument_list pos:start="363:23" pos:end="367:67">(<argument pos:start="363:24" pos:end="363:26"><expr pos:start="363:24" pos:end="363:26"><name pos:start="363:24" pos:end="363:26">ctx</name></expr></argument>, <argument pos:start="363:29" pos:end="363:40"><expr pos:start="363:29" pos:end="363:40"><name pos:start="363:29" pos:end="363:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="365:24" pos:end="365:78"><expr pos:start="365:24" pos:end="365:78"><literal type="string" pos:start="365:24" pos:end="365:78">"Unsupported output transfer characteristics %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="367:24" pos:end="367:33"><expr pos:start="367:24" pos:end="367:33"><name pos:start="367:24" pos:end="367:33"><name pos:start="367:24" pos:end="367:24">s</name><operator pos:start="367:25" pos:end="367:26">-&gt;</operator><name pos:start="367:27" pos:end="367:33">out_csp</name></name></expr></argument>, <argument pos:start="367:36" pos:end="367:66"><expr pos:start="367:36" pos:end="367:66"><call pos:start="367:36" pos:end="367:66"><name pos:start="367:36" pos:end="367:54">av_color_space_name</name><argument_list pos:start="367:55" pos:end="367:66">(<argument pos:start="367:56" pos:end="367:65"><expr pos:start="367:56" pos:end="367:65"><name pos:start="367:56" pos:end="367:65"><name pos:start="367:56" pos:end="367:56">s</name><operator pos:start="367:57" pos:end="367:58">-&gt;</operator><name pos:start="367:59" pos:end="367:65">out_csp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="371:13" pos:end="371:35">return <expr pos:start="371:20" pos:end="371:34"><call pos:start="371:20" pos:end="371:34"><name pos:start="371:20" pos:end="371:26">AVERROR</name><argument_list pos:start="371:27" pos:end="371:34">(<argument pos:start="371:28" pos:end="371:33"><expr pos:start="371:28" pos:end="371:33"><name pos:start="371:28" pos:end="371:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:25"><expr pos:start="375:9" pos:end="375:24"><name pos:start="375:9" pos:end="375:20">redo_rgb2yuv</name> <operator pos:start="375:22" pos:end="375:22">=</operator> <literal type="number" pos:start="375:24" pos:end="375:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="381:5" pos:end="383:70"><expr pos:start="381:5" pos:end="383:69"><name pos:start="381:5" pos:end="381:17">fmt_identical</name> <operator pos:start="381:19" pos:end="381:19">=</operator> <name pos:start="381:21" pos:end="381:42"><name pos:start="381:21" pos:end="381:27">in_desc</name><operator pos:start="381:28" pos:end="381:29">-&gt;</operator><name pos:start="381:30" pos:end="381:42">log2_chroma_h</name></name> <operator pos:start="381:44" pos:end="381:45">==</operator> <name pos:start="381:47" pos:end="381:69"><name pos:start="381:47" pos:end="381:54">out_desc</name><operator pos:start="381:55" pos:end="381:56">-&gt;</operator><name pos:start="381:57" pos:end="381:69">log2_chroma_h</name></name> <operator pos:start="381:71" pos:end="381:72">&amp;&amp;</operator>

                    <name pos:start="383:21" pos:end="383:42"><name pos:start="383:21" pos:end="383:27">in_desc</name><operator pos:start="383:28" pos:end="383:29">-&gt;</operator><name pos:start="383:30" pos:end="383:42">log2_chroma_w</name></name> <operator pos:start="383:44" pos:end="383:45">==</operator> <name pos:start="383:47" pos:end="383:69"><name pos:start="383:47" pos:end="383:54">out_desc</name><operator pos:start="383:55" pos:end="383:56">-&gt;</operator><name pos:start="383:57" pos:end="383:69">log2_chroma_w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="385:5" pos:end="385:66"><expr pos:start="385:5" pos:end="385:65"><name pos:start="385:5" pos:end="385:23"><name pos:start="385:5" pos:end="385:5">s</name><operator pos:start="385:6" pos:end="385:7">-&gt;</operator><name pos:start="385:8" pos:end="385:23">yuv2yuv_fastmode</name></name> <operator pos:start="385:25" pos:end="385:25">=</operator> <name pos:start="385:27" pos:end="385:48"><name pos:start="385:27" pos:end="385:27">s</name><operator pos:start="385:28" pos:end="385:29">-&gt;</operator><name pos:start="385:30" pos:end="385:48">rgb2rgb_passthrough</name></name> <operator pos:start="385:50" pos:end="385:51">&amp;&amp;</operator> <name pos:start="385:53" pos:end="385:65">fmt_identical</name></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="393:79"><expr pos:start="387:5" pos:end="393:78"><name pos:start="387:5" pos:end="387:26"><name pos:start="387:5" pos:end="387:5">s</name><operator pos:start="387:6" pos:end="387:7">-&gt;</operator><name pos:start="387:8" pos:end="387:26">yuv2yuv_passthrough</name></name> <operator pos:start="387:28" pos:end="387:28">=</operator> <name pos:start="387:30" pos:end="387:48"><name pos:start="387:30" pos:end="387:30">s</name><operator pos:start="387:31" pos:end="387:32">-&gt;</operator><name pos:start="387:33" pos:end="387:48">yuv2yuv_fastmode</name></name> <operator pos:start="387:50" pos:end="387:51">&amp;&amp;</operator> <name pos:start="387:53" pos:end="387:61"><name pos:start="387:53" pos:end="387:53">s</name><operator pos:start="387:54" pos:end="387:55">-&gt;</operator><name pos:start="387:56" pos:end="387:61">in_rng</name></name> <operator pos:start="387:63" pos:end="387:64">==</operator> <name pos:start="387:66" pos:end="387:75"><name pos:start="387:66" pos:end="387:66">s</name><operator pos:start="387:67" pos:end="387:68">-&gt;</operator><name pos:start="387:69" pos:end="387:75">out_rng</name></name> <operator pos:start="387:77" pos:end="387:78">&amp;&amp;</operator>

                             <operator pos:start="389:30" pos:end="389:30">!</operator><call pos:start="389:31" pos:end="391:61"><name pos:start="389:31" pos:end="389:36">memcmp</name><argument_list pos:start="389:37" pos:end="391:61">(<argument pos:start="389:38" pos:end="389:51"><expr pos:start="389:38" pos:end="389:51"><name pos:start="389:38" pos:end="389:51"><name pos:start="389:38" pos:end="389:38">s</name><operator pos:start="389:39" pos:end="389:40">-&gt;</operator><name pos:start="389:41" pos:end="389:51">in_lumacoef</name></name></expr></argument>, <argument pos:start="389:54" pos:end="389:68"><expr pos:start="389:54" pos:end="389:68"><name pos:start="389:54" pos:end="389:68"><name pos:start="389:54" pos:end="389:54">s</name><operator pos:start="389:55" pos:end="389:56">-&gt;</operator><name pos:start="389:57" pos:end="389:68">out_lumacoef</name></name></expr></argument>,

                                     <argument pos:start="391:38" pos:end="391:60"><expr pos:start="391:38" pos:end="391:60"><sizeof pos:start="391:38" pos:end="391:60">sizeof<argument_list pos:start="391:44" pos:end="391:60">(<argument pos:start="391:45" pos:end="391:59"><expr pos:start="391:45" pos:end="391:59"><operator pos:start="391:45" pos:end="391:45">*</operator><name pos:start="391:46" pos:end="391:59"><name pos:start="391:46" pos:end="391:46">s</name><operator pos:start="391:47" pos:end="391:48">-&gt;</operator><name pos:start="391:49" pos:end="391:59">in_lumacoef</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="391:63" pos:end="391:64">&amp;&amp;</operator>

                             <name pos:start="393:30" pos:end="393:45"><name pos:start="393:30" pos:end="393:36">in_desc</name><operator pos:start="393:37" pos:end="393:38">-&gt;</operator><name pos:start="393:39" pos:end="393:42">comp</name><index pos:start="393:43" pos:end="393:45">[<expr pos:start="393:44" pos:end="393:44"><literal type="number" pos:start="393:44" pos:end="393:44">0</literal></expr>]</index></name><operator pos:start="393:46" pos:end="393:46">.</operator><name pos:start="393:47" pos:end="393:51">depth</name> <operator pos:start="393:53" pos:end="393:54">==</operator> <name pos:start="393:56" pos:end="393:72"><name pos:start="393:56" pos:end="393:63">out_desc</name><operator pos:start="393:64" pos:end="393:65">-&gt;</operator><name pos:start="393:66" pos:end="393:69">comp</name><index pos:start="393:70" pos:end="393:72">[<expr pos:start="393:71" pos:end="393:71"><literal type="number" pos:start="393:71" pos:end="393:71">0</literal></expr>]</index></name><operator pos:start="393:73" pos:end="393:73">.</operator><name pos:start="393:74" pos:end="393:78">depth</name></expr>;</expr_stmt>

    <if_stmt pos:start="395:5" pos:end="569:5"><if pos:start="395:5" pos:end="569:5">if <condition pos:start="395:8" pos:end="395:32">(<expr pos:start="395:9" pos:end="395:31"><operator pos:start="395:9" pos:end="395:9">!</operator><name pos:start="395:10" pos:end="395:31"><name pos:start="395:10" pos:end="395:10">s</name><operator pos:start="395:11" pos:end="395:12">-&gt;</operator><name pos:start="395:13" pos:end="395:31">yuv2yuv_passthrough</name></name></expr>)</condition> <block pos:start="395:34" pos:end="569:5">{<block_content pos:start="397:9" pos:end="567:9">

        <if_stmt pos:start="397:9" pos:end="459:9"><if pos:start="397:9" pos:end="459:9">if <condition pos:start="397:12" pos:end="397:25">(<expr pos:start="397:13" pos:end="397:24"><name pos:start="397:13" pos:end="397:24">redo_yuv2rgb</name></expr>)</condition> <block pos:start="397:27" pos:end="459:9">{<block_content pos:start="399:13" pos:end="457:21">

            <decl_stmt pos:start="399:13" pos:end="399:72"><decl pos:start="399:13" pos:end="399:32"><type pos:start="399:13" pos:end="399:18"><name pos:start="399:13" pos:end="399:18">double</name></type> <name pos:start="399:20" pos:end="399:32"><name pos:start="399:20" pos:end="399:26">rgb2yuv</name><index pos:start="399:27" pos:end="399:29">[<expr pos:start="399:28" pos:end="399:28"><literal type="number" pos:start="399:28" pos:end="399:28">3</literal></expr>]</index><index pos:start="399:30" pos:end="399:32">[<expr pos:start="399:31" pos:end="399:31"><literal type="number" pos:start="399:31" pos:end="399:31">3</literal></expr>]</index></name></decl>, <argument_list pos:start="399:35" pos:end="399:44">(<argument pos:start="399:36" pos:end="399:43"><expr pos:start="399:36" pos:end="399:43"><operator pos:start="399:36" pos:end="399:36">*</operator><name pos:start="399:37" pos:end="399:43">yuv2rgb</name></expr></argument>)</argument_list>[3] <init pos:start="399:49" pos:end="399:71">= <expr pos:start="399:51" pos:end="399:71"><name pos:start="399:51" pos:end="399:71"><name pos:start="399:51" pos:end="399:51">s</name><operator pos:start="399:52" pos:end="399:53">-&gt;</operator><name pos:start="399:54" pos:end="399:71">yuv2rgb_dbl_coeffs</name></name></expr></init>;</decl_stmt>

            <decl_stmt pos:start="401:13" pos:end="401:34"><decl pos:start="401:13" pos:end="401:19"><type pos:start="401:13" pos:end="401:15"><name pos:start="401:13" pos:end="401:15">int</name></type> <name pos:start="401:17" pos:end="401:19">off</name></decl>, <decl pos:start="401:22" pos:end="401:25"><type ref="prev" pos:start="401:13" pos:end="401:15"/><name pos:start="401:22" pos:end="401:25">bits</name></decl>, <decl pos:start="401:28" pos:end="401:33"><type ref="prev" pos:start="401:13" pos:end="401:15"/><name pos:start="401:28" pos:end="401:33">in_rng</name></decl>;</decl_stmt>



            <expr_stmt pos:start="405:13" pos:end="407:67"><expr pos:start="405:13" pos:end="407:66"><name pos:start="405:13" pos:end="405:15">res</name> <operator pos:start="405:17" pos:end="405:17">=</operator> <call pos:start="405:19" pos:end="407:66"><name pos:start="405:19" pos:end="405:31">get_range_off</name><argument_list pos:start="405:32" pos:end="407:66">(<argument pos:start="405:33" pos:end="405:36"><expr pos:start="405:33" pos:end="405:36"><operator pos:start="405:33" pos:end="405:33">&amp;</operator><name pos:start="405:34" pos:end="405:36">off</name></expr></argument>, <argument pos:start="405:39" pos:end="405:50"><expr pos:start="405:39" pos:end="405:50"><operator pos:start="405:39" pos:end="405:39">&amp;</operator><name pos:start="405:40" pos:end="405:50"><name pos:start="405:40" pos:end="405:40">s</name><operator pos:start="405:41" pos:end="405:42">-&gt;</operator><name pos:start="405:43" pos:end="405:50">in_y_rng</name></name></expr></argument>, <argument pos:start="405:53" pos:end="405:65"><expr pos:start="405:53" pos:end="405:65"><operator pos:start="405:53" pos:end="405:53">&amp;</operator><name pos:start="405:54" pos:end="405:65"><name pos:start="405:54" pos:end="405:54">s</name><operator pos:start="405:55" pos:end="405:56">-&gt;</operator><name pos:start="405:57" pos:end="405:65">in_uv_rng</name></name></expr></argument>,

                                <argument pos:start="407:33" pos:end="407:41"><expr pos:start="407:33" pos:end="407:41"><name pos:start="407:33" pos:end="407:41"><name pos:start="407:33" pos:end="407:33">s</name><operator pos:start="407:34" pos:end="407:35">-&gt;</operator><name pos:start="407:36" pos:end="407:41">in_rng</name></name></expr></argument>, <argument pos:start="407:44" pos:end="407:65"><expr pos:start="407:44" pos:end="407:65"><name pos:start="407:44" pos:end="407:59"><name pos:start="407:44" pos:end="407:50">in_desc</name><operator pos:start="407:51" pos:end="407:52">-&gt;</operator><name pos:start="407:53" pos:end="407:56">comp</name><index pos:start="407:57" pos:end="407:59">[<expr pos:start="407:58" pos:end="407:58"><literal type="number" pos:start="407:58" pos:end="407:58">0</literal></expr>]</index></name><operator pos:start="407:60" pos:end="407:60">.</operator><name pos:start="407:61" pos:end="407:65">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="409:13" pos:end="419:13"><if pos:start="409:13" pos:end="419:13">if <condition pos:start="409:16" pos:end="409:24">(<expr pos:start="409:17" pos:end="409:23"><name pos:start="409:17" pos:end="409:19">res</name> <operator pos:start="409:21" pos:end="409:21">&lt;</operator> <literal type="number" pos:start="409:23" pos:end="409:23">0</literal></expr>)</condition> <block pos:start="409:26" pos:end="419:13">{<block_content pos:start="411:17" pos:end="417:27">

                <expr_stmt pos:start="411:17" pos:end="415:66"><expr pos:start="411:17" pos:end="415:65"><call pos:start="411:17" pos:end="415:65"><name pos:start="411:17" pos:end="411:22">av_log</name><argument_list pos:start="411:23" pos:end="415:65">(<argument pos:start="411:24" pos:end="411:26"><expr pos:start="411:24" pos:end="411:26"><name pos:start="411:24" pos:end="411:26">ctx</name></expr></argument>, <argument pos:start="411:29" pos:end="411:40"><expr pos:start="411:29" pos:end="411:40"><name pos:start="411:29" pos:end="411:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="413:24" pos:end="413:64"><expr pos:start="413:24" pos:end="413:64"><literal type="string" pos:start="413:24" pos:end="413:64">"Unsupported input color range %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="415:24" pos:end="415:32"><expr pos:start="415:24" pos:end="415:32"><name pos:start="415:24" pos:end="415:32"><name pos:start="415:24" pos:end="415:24">s</name><operator pos:start="415:25" pos:end="415:26">-&gt;</operator><name pos:start="415:27" pos:end="415:32">in_rng</name></name></expr></argument>, <argument pos:start="415:35" pos:end="415:64"><expr pos:start="415:35" pos:end="415:64"><call pos:start="415:35" pos:end="415:64"><name pos:start="415:35" pos:end="415:53">av_color_range_name</name><argument_list pos:start="415:54" pos:end="415:64">(<argument pos:start="415:55" pos:end="415:63"><expr pos:start="415:55" pos:end="415:63"><name pos:start="415:55" pos:end="415:63"><name pos:start="415:55" pos:end="415:55">s</name><operator pos:start="415:56" pos:end="415:57">-&gt;</operator><name pos:start="415:58" pos:end="415:63">in_rng</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="417:17" pos:end="417:27">return <expr pos:start="417:24" pos:end="417:26"><name pos:start="417:24" pos:end="417:26">res</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="421:13" pos:end="423:42">for <control pos:start="421:17" pos:end="421:35">(<init pos:start="421:18" pos:end="421:23"><expr pos:start="421:18" pos:end="421:22"><name pos:start="421:18" pos:end="421:18">n</name> <operator pos:start="421:20" pos:end="421:20">=</operator> <literal type="number" pos:start="421:22" pos:end="421:22">0</literal></expr>;</init> <condition pos:start="421:25" pos:end="421:30"><expr pos:start="421:25" pos:end="421:29"><name pos:start="421:25" pos:end="421:25">n</name> <operator pos:start="421:27" pos:end="421:27">&lt;</operator> <literal type="number" pos:start="421:29" pos:end="421:29">8</literal></expr>;</condition> <incr pos:start="421:32" pos:end="421:34"><expr pos:start="421:32" pos:end="421:34"><name pos:start="421:32" pos:end="421:32">n</name><operator pos:start="421:33" pos:end="421:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="423:17" pos:end="423:42"><block_content pos:start="423:17" pos:end="423:42">

                <expr_stmt pos:start="423:17" pos:end="423:42"><expr pos:start="423:17" pos:end="423:41"><name pos:start="423:17" pos:end="423:35"><name pos:start="423:17" pos:end="423:17">s</name><operator pos:start="423:18" pos:end="423:19">-&gt;</operator><name pos:start="423:20" pos:end="423:29">yuv_offset</name><index pos:start="423:30" pos:end="423:32">[<expr pos:start="423:31" pos:end="423:31"><literal type="number" pos:start="423:31" pos:end="423:31">0</literal></expr>]</index><index pos:start="423:33" pos:end="423:35">[<expr pos:start="423:34" pos:end="423:34"><name pos:start="423:34" pos:end="423:34">n</name></expr>]</index></name> <operator pos:start="423:37" pos:end="423:37">=</operator> <name pos:start="423:39" pos:end="423:41">off</name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="425:13" pos:end="425:56"><expr pos:start="425:13" pos:end="425:55"><call pos:start="425:13" pos:end="425:55"><name pos:start="425:13" pos:end="425:30">fill_rgb2yuv_table</name><argument_list pos:start="425:31" pos:end="425:55">(<argument pos:start="425:32" pos:end="425:45"><expr pos:start="425:32" pos:end="425:45"><name pos:start="425:32" pos:end="425:45"><name pos:start="425:32" pos:end="425:32">s</name><operator pos:start="425:33" pos:end="425:34">-&gt;</operator><name pos:start="425:35" pos:end="425:45">in_lumacoef</name></name></expr></argument>, <argument pos:start="425:48" pos:end="425:54"><expr pos:start="425:48" pos:end="425:54"><name pos:start="425:48" pos:end="425:54">rgb2yuv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:47"><expr pos:start="427:13" pos:end="427:46"><call pos:start="427:13" pos:end="427:46"><name pos:start="427:13" pos:end="427:28">invert_matrix3x3</name><argument_list pos:start="427:29" pos:end="427:46">(<argument pos:start="427:30" pos:end="427:36"><expr pos:start="427:30" pos:end="427:36"><name pos:start="427:30" pos:end="427:36">rgb2yuv</name></expr></argument>, <argument pos:start="427:39" pos:end="427:45"><expr pos:start="427:39" pos:end="427:45"><name pos:start="427:39" pos:end="427:45">yuv2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:53"><expr pos:start="429:13" pos:end="429:52"><name pos:start="429:13" pos:end="429:16">bits</name> <operator pos:start="429:18" pos:end="429:18">=</operator> <literal type="number" pos:start="429:20" pos:end="429:20">1</literal> <operator pos:start="429:22" pos:end="429:23">&lt;&lt;</operator> <operator pos:start="429:25" pos:end="429:25">(</operator><name pos:start="429:26" pos:end="429:41"><name pos:start="429:26" pos:end="429:32">in_desc</name><operator pos:start="429:33" pos:end="429:34">-&gt;</operator><name pos:start="429:35" pos:end="429:38">comp</name><index pos:start="429:39" pos:end="429:41">[<expr pos:start="429:40" pos:end="429:40"><literal type="number" pos:start="429:40" pos:end="429:40">0</literal></expr>]</index></name><operator pos:start="429:42" pos:end="429:42">.</operator><name pos:start="429:43" pos:end="429:47">depth</name> <operator pos:start="429:49" pos:end="429:49">-</operator> <literal type="number" pos:start="429:51" pos:end="429:51">1</literal><operator pos:start="429:52" pos:end="429:52">)</operator></expr>;</expr_stmt>

            <for pos:start="431:13" pos:end="443:13">for <control pos:start="431:17" pos:end="431:35">(<init pos:start="431:18" pos:end="431:23"><expr pos:start="431:18" pos:end="431:22"><name pos:start="431:18" pos:end="431:18">n</name> <operator pos:start="431:20" pos:end="431:20">=</operator> <literal type="number" pos:start="431:22" pos:end="431:22">0</literal></expr>;</init> <condition pos:start="431:25" pos:end="431:30"><expr pos:start="431:25" pos:end="431:29"><name pos:start="431:25" pos:end="431:25">n</name> <operator pos:start="431:27" pos:end="431:27">&lt;</operator> <literal type="number" pos:start="431:29" pos:end="431:29">3</literal></expr>;</condition> <incr pos:start="431:32" pos:end="431:34"><expr pos:start="431:32" pos:end="431:34"><name pos:start="431:32" pos:end="431:32">n</name><operator pos:start="431:33" pos:end="431:34">++</operator></expr></incr>)</control> <block pos:start="431:37" pos:end="443:13">{<block_content pos:start="433:17" pos:end="441:17">

                <for pos:start="433:17" pos:end="441:17">for <control pos:start="433:21" pos:end="433:84">(<init pos:start="433:22" pos:end="433:49"><expr pos:start="433:22" pos:end="433:41"><name pos:start="433:22" pos:end="433:27">in_rng</name> <operator pos:start="433:29" pos:end="433:29">=</operator> <name pos:start="433:31" pos:end="433:41"><name pos:start="433:31" pos:end="433:31">s</name><operator pos:start="433:32" pos:end="433:33">-&gt;</operator><name pos:start="433:34" pos:end="433:41">in_y_rng</name></name></expr><operator pos:start="433:42" pos:end="433:42">,</operator> <expr pos:start="433:44" pos:end="433:48"><name pos:start="433:44" pos:end="433:44">m</name> <operator pos:start="433:46" pos:end="433:46">=</operator> <literal type="number" pos:start="433:48" pos:end="433:48">0</literal></expr>;</init> <condition pos:start="433:51" pos:end="433:56"><expr pos:start="433:51" pos:end="433:55"><name pos:start="433:51" pos:end="433:51">m</name> <operator pos:start="433:53" pos:end="433:53">&lt;</operator> <literal type="number" pos:start="433:55" pos:end="433:55">3</literal></expr>;</condition> <incr pos:start="433:58" pos:end="433:83"><expr pos:start="433:58" pos:end="433:60"><name pos:start="433:58" pos:end="433:58">m</name><operator pos:start="433:59" pos:end="433:60">++</operator></expr><operator pos:start="433:61" pos:end="433:61">,</operator> <expr pos:start="433:63" pos:end="433:83"><name pos:start="433:63" pos:end="433:68">in_rng</name> <operator pos:start="433:70" pos:end="433:70">=</operator> <name pos:start="433:72" pos:end="433:83"><name pos:start="433:72" pos:end="433:72">s</name><operator pos:start="433:73" pos:end="433:74">-&gt;</operator><name pos:start="433:75" pos:end="433:83">in_uv_rng</name></name></expr></incr>)</control> <block pos:start="433:86" pos:end="441:17">{<block_content pos:start="435:21" pos:end="439:80">

                    <expr_stmt pos:start="435:21" pos:end="435:94"><expr pos:start="435:21" pos:end="435:93"><name pos:start="435:21" pos:end="435:46"><name pos:start="435:21" pos:end="435:21">s</name><operator pos:start="435:22" pos:end="435:23">-&gt;</operator><name pos:start="435:24" pos:end="435:37">yuv2rgb_coeffs</name><index pos:start="435:38" pos:end="435:40">[<expr pos:start="435:39" pos:end="435:39"><name pos:start="435:39" pos:end="435:39">n</name></expr>]</index><index pos:start="435:41" pos:end="435:43">[<expr pos:start="435:42" pos:end="435:42"><name pos:start="435:42" pos:end="435:42">m</name></expr>]</index><index pos:start="435:44" pos:end="435:46">[<expr pos:start="435:45" pos:end="435:45"><literal type="number" pos:start="435:45" pos:end="435:45">0</literal></expr>]</index></name> <operator pos:start="435:48" pos:end="435:48">=</operator> <call pos:start="435:50" pos:end="435:93"><name pos:start="435:50" pos:end="435:54">lrint</name><argument_list pos:start="435:55" pos:end="435:93">(<argument pos:start="435:56" pos:end="435:92"><expr pos:start="435:56" pos:end="435:92"><literal type="number" pos:start="435:56" pos:end="435:60">28672</literal> <operator pos:start="435:62" pos:end="435:62">*</operator> <name pos:start="435:64" pos:end="435:67">bits</name> <operator pos:start="435:69" pos:end="435:69">*</operator> <name pos:start="435:71" pos:end="435:83"><name pos:start="435:71" pos:end="435:77">yuv2rgb</name><index pos:start="435:78" pos:end="435:80">[<expr pos:start="435:79" pos:end="435:79"><name pos:start="435:79" pos:end="435:79">n</name></expr>]</index><index pos:start="435:81" pos:end="435:83">[<expr pos:start="435:82" pos:end="435:82"><name pos:start="435:82" pos:end="435:82">m</name></expr>]</index></name> <operator pos:start="435:85" pos:end="435:85">/</operator> <name pos:start="435:87" pos:end="435:92">in_rng</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="437:21" pos:end="439:80">for <control pos:start="437:25" pos:end="437:43">(<init pos:start="437:26" pos:end="437:31"><expr pos:start="437:26" pos:end="437:30"><name pos:start="437:26" pos:end="437:26">o</name> <operator pos:start="437:28" pos:end="437:28">=</operator> <literal type="number" pos:start="437:30" pos:end="437:30">1</literal></expr>;</init> <condition pos:start="437:33" pos:end="437:38"><expr pos:start="437:33" pos:end="437:37"><name pos:start="437:33" pos:end="437:33">o</name> <operator pos:start="437:35" pos:end="437:35">&lt;</operator> <literal type="number" pos:start="437:37" pos:end="437:37">8</literal></expr>;</condition> <incr pos:start="437:40" pos:end="437:42"><expr pos:start="437:40" pos:end="437:42"><name pos:start="437:40" pos:end="437:40">o</name><operator pos:start="437:41" pos:end="437:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="439:25" pos:end="439:80"><block_content pos:start="439:25" pos:end="439:80">

                        <expr_stmt pos:start="439:25" pos:end="439:80"><expr pos:start="439:25" pos:end="439:79"><name pos:start="439:25" pos:end="439:50"><name pos:start="439:25" pos:end="439:25">s</name><operator pos:start="439:26" pos:end="439:27">-&gt;</operator><name pos:start="439:28" pos:end="439:41">yuv2rgb_coeffs</name><index pos:start="439:42" pos:end="439:44">[<expr pos:start="439:43" pos:end="439:43"><name pos:start="439:43" pos:end="439:43">n</name></expr>]</index><index pos:start="439:45" pos:end="439:47">[<expr pos:start="439:46" pos:end="439:46"><name pos:start="439:46" pos:end="439:46">m</name></expr>]</index><index pos:start="439:48" pos:end="439:50">[<expr pos:start="439:49" pos:end="439:49"><name pos:start="439:49" pos:end="439:49">o</name></expr>]</index></name> <operator pos:start="439:52" pos:end="439:52">=</operator> <name pos:start="439:54" pos:end="439:79"><name pos:start="439:54" pos:end="439:54">s</name><operator pos:start="439:55" pos:end="439:56">-&gt;</operator><name pos:start="439:57" pos:end="439:70">yuv2rgb_coeffs</name><index pos:start="439:71" pos:end="439:73">[<expr pos:start="439:72" pos:end="439:72"><name pos:start="439:72" pos:end="439:72">n</name></expr>]</index><index pos:start="439:74" pos:end="439:76">[<expr pos:start="439:75" pos:end="439:75"><name pos:start="439:75" pos:end="439:75">m</name></expr>]</index><index pos:start="439:77" pos:end="439:79">[<expr pos:start="439:78" pos:end="439:78"><literal type="number" pos:start="439:78" pos:end="439:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="445:13" pos:end="445:56"><expr pos:start="445:13" pos:end="445:55"><call pos:start="445:13" pos:end="445:55"><name pos:start="445:13" pos:end="445:22">av_assert2</name><argument_list pos:start="445:23" pos:end="445:55">(<argument pos:start="445:24" pos:end="445:54"><expr pos:start="445:24" pos:end="445:54"><name pos:start="445:24" pos:end="445:49"><name pos:start="445:24" pos:end="445:24">s</name><operator pos:start="445:25" pos:end="445:26">-&gt;</operator><name pos:start="445:27" pos:end="445:40">yuv2rgb_coeffs</name><index pos:start="445:41" pos:end="445:43">[<expr pos:start="445:42" pos:end="445:42"><literal type="number" pos:start="445:42" pos:end="445:42">0</literal></expr>]</index><index pos:start="445:44" pos:end="445:46">[<expr pos:start="445:45" pos:end="445:45"><literal type="number" pos:start="445:45" pos:end="445:45">1</literal></expr>]</index><index pos:start="445:47" pos:end="445:49">[<expr pos:start="445:48" pos:end="445:48"><literal type="number" pos:start="445:48" pos:end="445:48">0</literal></expr>]</index></name> <operator pos:start="445:51" pos:end="445:52">==</operator> <literal type="number" pos:start="445:54" pos:end="445:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:56"><expr pos:start="447:13" pos:end="447:55"><call pos:start="447:13" pos:end="447:55"><name pos:start="447:13" pos:end="447:22">av_assert2</name><argument_list pos:start="447:23" pos:end="447:55">(<argument pos:start="447:24" pos:end="447:54"><expr pos:start="447:24" pos:end="447:54"><name pos:start="447:24" pos:end="447:49"><name pos:start="447:24" pos:end="447:24">s</name><operator pos:start="447:25" pos:end="447:26">-&gt;</operator><name pos:start="447:27" pos:end="447:40">yuv2rgb_coeffs</name><index pos:start="447:41" pos:end="447:43">[<expr pos:start="447:42" pos:end="447:42"><literal type="number" pos:start="447:42" pos:end="447:42">2</literal></expr>]</index><index pos:start="447:44" pos:end="447:46">[<expr pos:start="447:45" pos:end="447:45"><literal type="number" pos:start="447:45" pos:end="447:45">2</literal></expr>]</index><index pos:start="447:47" pos:end="447:49">[<expr pos:start="447:48" pos:end="447:48"><literal type="number" pos:start="447:48" pos:end="447:48">0</literal></expr>]</index></name> <operator pos:start="447:51" pos:end="447:52">==</operator> <literal type="number" pos:start="447:54" pos:end="447:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:81"><expr pos:start="449:13" pos:end="449:80"><call pos:start="449:13" pos:end="449:80"><name pos:start="449:13" pos:end="449:22">av_assert2</name><argument_list pos:start="449:23" pos:end="449:80">(<argument pos:start="449:24" pos:end="449:79"><expr pos:start="449:24" pos:end="449:79"><name pos:start="449:24" pos:end="449:49"><name pos:start="449:24" pos:end="449:24">s</name><operator pos:start="449:25" pos:end="449:26">-&gt;</operator><name pos:start="449:27" pos:end="449:40">yuv2rgb_coeffs</name><index pos:start="449:41" pos:end="449:43">[<expr pos:start="449:42" pos:end="449:42"><literal type="number" pos:start="449:42" pos:end="449:42">0</literal></expr>]</index><index pos:start="449:44" pos:end="449:46">[<expr pos:start="449:45" pos:end="449:45"><literal type="number" pos:start="449:45" pos:end="449:45">0</literal></expr>]</index><index pos:start="449:47" pos:end="449:49">[<expr pos:start="449:48" pos:end="449:48"><literal type="number" pos:start="449:48" pos:end="449:48">0</literal></expr>]</index></name> <operator pos:start="449:51" pos:end="449:52">==</operator> <name pos:start="449:54" pos:end="449:79"><name pos:start="449:54" pos:end="449:54">s</name><operator pos:start="449:55" pos:end="449:56">-&gt;</operator><name pos:start="449:57" pos:end="449:70">yuv2rgb_coeffs</name><index pos:start="449:71" pos:end="449:73">[<expr pos:start="449:72" pos:end="449:72"><literal type="number" pos:start="449:72" pos:end="449:72">1</literal></expr>]</index><index pos:start="449:74" pos:end="449:76">[<expr pos:start="449:75" pos:end="449:75"><literal type="number" pos:start="449:75" pos:end="449:75">0</literal></expr>]</index><index pos:start="449:77" pos:end="449:79">[<expr pos:start="449:78" pos:end="449:78"><literal type="number" pos:start="449:78" pos:end="449:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:81"><expr pos:start="451:13" pos:end="451:80"><call pos:start="451:13" pos:end="451:80"><name pos:start="451:13" pos:end="451:22">av_assert2</name><argument_list pos:start="451:23" pos:end="451:80">(<argument pos:start="451:24" pos:end="451:79"><expr pos:start="451:24" pos:end="451:79"><name pos:start="451:24" pos:end="451:49"><name pos:start="451:24" pos:end="451:24">s</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:40">yuv2rgb_coeffs</name><index pos:start="451:41" pos:end="451:43">[<expr pos:start="451:42" pos:end="451:42"><literal type="number" pos:start="451:42" pos:end="451:42">0</literal></expr>]</index><index pos:start="451:44" pos:end="451:46">[<expr pos:start="451:45" pos:end="451:45"><literal type="number" pos:start="451:45" pos:end="451:45">0</literal></expr>]</index><index pos:start="451:47" pos:end="451:49">[<expr pos:start="451:48" pos:end="451:48"><literal type="number" pos:start="451:48" pos:end="451:48">0</literal></expr>]</index></name> <operator pos:start="451:51" pos:end="451:52">==</operator> <name pos:start="451:54" pos:end="451:79"><name pos:start="451:54" pos:end="451:54">s</name><operator pos:start="451:55" pos:end="451:56">-&gt;</operator><name pos:start="451:57" pos:end="451:70">yuv2rgb_coeffs</name><index pos:start="451:71" pos:end="451:73">[<expr pos:start="451:72" pos:end="451:72"><literal type="number" pos:start="451:72" pos:end="451:72">2</literal></expr>]</index><index pos:start="451:74" pos:end="451:76">[<expr pos:start="451:75" pos:end="451:75"><literal type="number" pos:start="451:75" pos:end="451:75">0</literal></expr>]</index><index pos:start="451:77" pos:end="451:79">[<expr pos:start="451:78" pos:end="451:78"><literal type="number" pos:start="451:78" pos:end="451:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="455:89"><expr pos:start="453:13" pos:end="455:88"><name pos:start="453:13" pos:end="453:22"><name pos:start="453:13" pos:end="453:13">s</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:22">yuv2rgb</name></name> <operator pos:start="453:24" pos:end="453:24">=</operator> <name pos:start="453:26" pos:end="455:88"><name pos:start="453:26" pos:end="453:26">s</name><operator pos:start="453:27" pos:end="453:28">-&gt;</operator><name pos:start="453:29" pos:end="453:31">dsp</name><operator pos:start="453:32" pos:end="453:32">.</operator><name pos:start="453:33" pos:end="453:39">yuv2rgb</name><index pos:start="453:40" pos:end="453:74">[<expr pos:start="453:41" pos:end="453:73"><operator pos:start="453:41" pos:end="453:41">(</operator><name pos:start="453:42" pos:end="453:57"><name pos:start="453:42" pos:end="453:48">in_desc</name><operator pos:start="453:49" pos:end="453:50">-&gt;</operator><name pos:start="453:51" pos:end="453:54">comp</name><index pos:start="453:55" pos:end="453:57">[<expr pos:start="453:56" pos:end="453:56"><literal type="number" pos:start="453:56" pos:end="453:56">0</literal></expr>]</index></name><operator pos:start="453:58" pos:end="453:58">.</operator><name pos:start="453:59" pos:end="453:63">depth</name> <operator pos:start="453:65" pos:end="453:65">-</operator> <literal type="number" pos:start="453:67" pos:end="453:67">8</literal><operator pos:start="453:68" pos:end="453:68">)</operator> <operator pos:start="453:70" pos:end="453:71">&gt;&gt;</operator> <literal type="number" pos:start="453:73" pos:end="453:73">1</literal></expr>]</index>

                                       <index pos:start="455:40" pos:end="455:88">[<expr pos:start="455:41" pos:end="455:87"><name pos:start="455:41" pos:end="455:62"><name pos:start="455:41" pos:end="455:47">in_desc</name><operator pos:start="455:48" pos:end="455:49">-&gt;</operator><name pos:start="455:50" pos:end="455:62">log2_chroma_h</name></name> <operator pos:start="455:64" pos:end="455:64">+</operator> <name pos:start="455:66" pos:end="455:87"><name pos:start="455:66" pos:end="455:72">in_desc</name><operator pos:start="455:73" pos:end="455:74">-&gt;</operator><name pos:start="455:75" pos:end="455:87">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:21"><expr pos:start="457:13" pos:end="457:20"><name pos:start="457:13" pos:end="457:16">emms</name> <operator pos:start="457:18" pos:end="457:18">=</operator> <literal type="number" pos:start="457:20" pos:end="457:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="463:9" pos:end="521:9"><if pos:start="463:9" pos:end="521:9">if <condition pos:start="463:12" pos:end="463:25">(<expr pos:start="463:13" pos:end="463:24"><name pos:start="463:13" pos:end="463:24">redo_rgb2yuv</name></expr>)</condition> <block pos:start="463:27" pos:end="521:9">{<block_content pos:start="465:13" pos:end="519:21">

            <expr_stmt pos:start="465:13" pos:end="465:57"><expr pos:start="465:13" pos:end="465:56"><call pos:start="465:13" pos:end="465:29"><name pos:start="465:13" pos:end="465:18">double</name> <argument_list pos:start="465:20" pos:end="465:29">(<argument pos:start="465:21" pos:end="465:28"><expr pos:start="465:21" pos:end="465:28"><operator pos:start="465:21" pos:end="465:21">*</operator><name pos:start="465:22" pos:end="465:28">rgb2yuv</name></expr></argument>)</argument_list></call><index pos:start="465:30" pos:end="465:32">[<expr pos:start="465:31" pos:end="465:31"><literal type="number" pos:start="465:31" pos:end="465:31">3</literal></expr>]</index> <operator pos:start="465:34" pos:end="465:34">=</operator> <name pos:start="465:36" pos:end="465:56"><name pos:start="465:36" pos:end="465:36">s</name><operator pos:start="465:37" pos:end="465:38">-&gt;</operator><name pos:start="465:39" pos:end="465:56">rgb2yuv_dbl_coeffs</name></name></expr>;</expr_stmt>

            <decl_stmt pos:start="467:13" pos:end="467:35"><decl pos:start="467:13" pos:end="467:19"><type pos:start="467:13" pos:end="467:15"><name pos:start="467:13" pos:end="467:15">int</name></type> <name pos:start="467:17" pos:end="467:19">off</name></decl>, <decl pos:start="467:22" pos:end="467:28"><type ref="prev" pos:start="467:13" pos:end="467:15"/><name pos:start="467:22" pos:end="467:28">out_rng</name></decl>, <decl pos:start="467:31" pos:end="467:34"><type ref="prev" pos:start="467:13" pos:end="467:15"/><name pos:start="467:31" pos:end="467:34">bits</name></decl>;</decl_stmt>



            <expr_stmt pos:start="471:13" pos:end="473:69"><expr pos:start="471:13" pos:end="473:68"><name pos:start="471:13" pos:end="471:15">res</name> <operator pos:start="471:17" pos:end="471:17">=</operator> <call pos:start="471:19" pos:end="473:68"><name pos:start="471:19" pos:end="471:31">get_range_off</name><argument_list pos:start="471:32" pos:end="473:68">(<argument pos:start="471:33" pos:end="471:36"><expr pos:start="471:33" pos:end="471:36"><operator pos:start="471:33" pos:end="471:33">&amp;</operator><name pos:start="471:34" pos:end="471:36">off</name></expr></argument>, <argument pos:start="471:39" pos:end="471:51"><expr pos:start="471:39" pos:end="471:51"><operator pos:start="471:39" pos:end="471:39">&amp;</operator><name pos:start="471:40" pos:end="471:51"><name pos:start="471:40" pos:end="471:40">s</name><operator pos:start="471:41" pos:end="471:42">-&gt;</operator><name pos:start="471:43" pos:end="471:51">out_y_rng</name></name></expr></argument>, <argument pos:start="471:54" pos:end="471:67"><expr pos:start="471:54" pos:end="471:67"><operator pos:start="471:54" pos:end="471:54">&amp;</operator><name pos:start="471:55" pos:end="471:67"><name pos:start="471:55" pos:end="471:55">s</name><operator pos:start="471:56" pos:end="471:57">-&gt;</operator><name pos:start="471:58" pos:end="471:67">out_uv_rng</name></name></expr></argument>,

                                <argument pos:start="473:33" pos:end="473:42"><expr pos:start="473:33" pos:end="473:42"><name pos:start="473:33" pos:end="473:42"><name pos:start="473:33" pos:end="473:33">s</name><operator pos:start="473:34" pos:end="473:35">-&gt;</operator><name pos:start="473:36" pos:end="473:42">out_rng</name></name></expr></argument>, <argument pos:start="473:45" pos:end="473:67"><expr pos:start="473:45" pos:end="473:67"><name pos:start="473:45" pos:end="473:61"><name pos:start="473:45" pos:end="473:52">out_desc</name><operator pos:start="473:53" pos:end="473:54">-&gt;</operator><name pos:start="473:55" pos:end="473:58">comp</name><index pos:start="473:59" pos:end="473:61">[<expr pos:start="473:60" pos:end="473:60"><literal type="number" pos:start="473:60" pos:end="473:60">0</literal></expr>]</index></name><operator pos:start="473:62" pos:end="473:62">.</operator><name pos:start="473:63" pos:end="473:67">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="475:13" pos:end="485:13"><if pos:start="475:13" pos:end="485:13">if <condition pos:start="475:16" pos:end="475:24">(<expr pos:start="475:17" pos:end="475:23"><name pos:start="475:17" pos:end="475:19">res</name> <operator pos:start="475:21" pos:end="475:21">&lt;</operator> <literal type="number" pos:start="475:23" pos:end="475:23">0</literal></expr>)</condition> <block pos:start="475:26" pos:end="485:13">{<block_content pos:start="477:17" pos:end="483:27">

                <expr_stmt pos:start="477:17" pos:end="481:68"><expr pos:start="477:17" pos:end="481:67"><call pos:start="477:17" pos:end="481:67"><name pos:start="477:17" pos:end="477:22">av_log</name><argument_list pos:start="477:23" pos:end="481:67">(<argument pos:start="477:24" pos:end="477:26"><expr pos:start="477:24" pos:end="477:26"><name pos:start="477:24" pos:end="477:26">ctx</name></expr></argument>, <argument pos:start="477:29" pos:end="477:40"><expr pos:start="477:29" pos:end="477:40"><name pos:start="477:29" pos:end="477:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="479:24" pos:end="479:65"><expr pos:start="479:24" pos:end="479:65"><literal type="string" pos:start="479:24" pos:end="479:65">"Unsupported output color range %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="481:24" pos:end="481:33"><expr pos:start="481:24" pos:end="481:33"><name pos:start="481:24" pos:end="481:33"><name pos:start="481:24" pos:end="481:24">s</name><operator pos:start="481:25" pos:end="481:26">-&gt;</operator><name pos:start="481:27" pos:end="481:33">out_rng</name></name></expr></argument>, <argument pos:start="481:36" pos:end="481:66"><expr pos:start="481:36" pos:end="481:66"><call pos:start="481:36" pos:end="481:66"><name pos:start="481:36" pos:end="481:54">av_color_range_name</name><argument_list pos:start="481:55" pos:end="481:66">(<argument pos:start="481:56" pos:end="481:65"><expr pos:start="481:56" pos:end="481:65"><name pos:start="481:56" pos:end="481:65"><name pos:start="481:56" pos:end="481:56">s</name><operator pos:start="481:57" pos:end="481:58">-&gt;</operator><name pos:start="481:59" pos:end="481:65">out_rng</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="483:17" pos:end="483:27">return <expr pos:start="483:24" pos:end="483:26"><name pos:start="483:24" pos:end="483:26">res</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="487:13" pos:end="489:42">for <control pos:start="487:17" pos:end="487:35">(<init pos:start="487:18" pos:end="487:23"><expr pos:start="487:18" pos:end="487:22"><name pos:start="487:18" pos:end="487:18">n</name> <operator pos:start="487:20" pos:end="487:20">=</operator> <literal type="number" pos:start="487:22" pos:end="487:22">0</literal></expr>;</init> <condition pos:start="487:25" pos:end="487:30"><expr pos:start="487:25" pos:end="487:29"><name pos:start="487:25" pos:end="487:25">n</name> <operator pos:start="487:27" pos:end="487:27">&lt;</operator> <literal type="number" pos:start="487:29" pos:end="487:29">8</literal></expr>;</condition> <incr pos:start="487:32" pos:end="487:34"><expr pos:start="487:32" pos:end="487:34"><name pos:start="487:32" pos:end="487:32">n</name><operator pos:start="487:33" pos:end="487:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="489:17" pos:end="489:42"><block_content pos:start="489:17" pos:end="489:42">

                <expr_stmt pos:start="489:17" pos:end="489:42"><expr pos:start="489:17" pos:end="489:41"><name pos:start="489:17" pos:end="489:35"><name pos:start="489:17" pos:end="489:17">s</name><operator pos:start="489:18" pos:end="489:19">-&gt;</operator><name pos:start="489:20" pos:end="489:29">yuv_offset</name><index pos:start="489:30" pos:end="489:32">[<expr pos:start="489:31" pos:end="489:31"><literal type="number" pos:start="489:31" pos:end="489:31">1</literal></expr>]</index><index pos:start="489:33" pos:end="489:35">[<expr pos:start="489:34" pos:end="489:34"><name pos:start="489:34" pos:end="489:34">n</name></expr>]</index></name> <operator pos:start="489:37" pos:end="489:37">=</operator> <name pos:start="489:39" pos:end="489:41">off</name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="491:13" pos:end="491:57"><expr pos:start="491:13" pos:end="491:56"><call pos:start="491:13" pos:end="491:56"><name pos:start="491:13" pos:end="491:30">fill_rgb2yuv_table</name><argument_list pos:start="491:31" pos:end="491:56">(<argument pos:start="491:32" pos:end="491:46"><expr pos:start="491:32" pos:end="491:46"><name pos:start="491:32" pos:end="491:46"><name pos:start="491:32" pos:end="491:32">s</name><operator pos:start="491:33" pos:end="491:34">-&gt;</operator><name pos:start="491:35" pos:end="491:46">out_lumacoef</name></name></expr></argument>, <argument pos:start="491:49" pos:end="491:55"><expr pos:start="491:49" pos:end="491:55"><name pos:start="491:49" pos:end="491:55">rgb2yuv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:55"><expr pos:start="493:13" pos:end="493:54"><name pos:start="493:13" pos:end="493:16">bits</name> <operator pos:start="493:18" pos:end="493:18">=</operator> <literal type="number" pos:start="493:20" pos:end="493:20">1</literal> <operator pos:start="493:22" pos:end="493:23">&lt;&lt;</operator> <operator pos:start="493:25" pos:end="493:25">(</operator><literal type="number" pos:start="493:26" pos:end="493:29">29</literal> <operator pos:start="493:29" pos:end="493:29">-</operator> <name pos:start="493:31" pos:end="493:47"><name pos:start="493:31" pos:end="493:38">out_desc</name><operator pos:start="493:39" pos:end="493:40">-&gt;</operator><name pos:start="493:41" pos:end="493:44">comp</name><index pos:start="493:45" pos:end="493:47">[<expr pos:start="493:46" pos:end="493:46"><literal type="number" pos:start="493:46" pos:end="493:46">0</literal></expr>]</index></name><operator pos:start="493:48" pos:end="493:48">.</operator><name pos:start="493:49" pos:end="493:53">depth</name><operator pos:start="493:54" pos:end="493:54">)</operator></expr>;</expr_stmt>

            <for pos:start="495:13" pos:end="507:13">for <control pos:start="495:17" pos:end="495:84">(<init pos:start="495:18" pos:end="495:47"><expr pos:start="495:18" pos:end="495:39"><name pos:start="495:18" pos:end="495:24">out_rng</name> <operator pos:start="495:26" pos:end="495:26">=</operator> <name pos:start="495:28" pos:end="495:39"><name pos:start="495:28" pos:end="495:28">s</name><operator pos:start="495:29" pos:end="495:30">-&gt;</operator><name pos:start="495:31" pos:end="495:39">out_y_rng</name></name></expr><operator pos:start="495:40" pos:end="495:40">,</operator> <expr pos:start="495:42" pos:end="495:46"><name pos:start="495:42" pos:end="495:42">n</name> <operator pos:start="495:44" pos:end="495:44">=</operator> <literal type="number" pos:start="495:46" pos:end="495:46">0</literal></expr>;</init> <condition pos:start="495:49" pos:end="495:54"><expr pos:start="495:49" pos:end="495:53"><name pos:start="495:49" pos:end="495:49">n</name> <operator pos:start="495:51" pos:end="495:51">&lt;</operator> <literal type="number" pos:start="495:53" pos:end="495:53">3</literal></expr>;</condition> <incr pos:start="495:56" pos:end="495:83"><expr pos:start="495:56" pos:end="495:58"><name pos:start="495:56" pos:end="495:56">n</name><operator pos:start="495:57" pos:end="495:58">++</operator></expr><operator pos:start="495:59" pos:end="495:59">,</operator> <expr pos:start="495:61" pos:end="495:83"><name pos:start="495:61" pos:end="495:67">out_rng</name> <operator pos:start="495:69" pos:end="495:69">=</operator> <name pos:start="495:71" pos:end="495:83"><name pos:start="495:71" pos:end="495:71">s</name><operator pos:start="495:72" pos:end="495:73">-&gt;</operator><name pos:start="495:74" pos:end="495:83">out_uv_rng</name></name></expr></incr>)</control> <block pos:start="495:86" pos:end="507:13">{<block_content pos:start="497:17" pos:end="505:17">

                <for pos:start="497:17" pos:end="505:17">for <control pos:start="497:21" pos:end="497:39">(<init pos:start="497:22" pos:end="497:27"><expr pos:start="497:22" pos:end="497:26"><name pos:start="497:22" pos:end="497:22">m</name> <operator pos:start="497:24" pos:end="497:24">=</operator> <literal type="number" pos:start="497:26" pos:end="497:26">0</literal></expr>;</init> <condition pos:start="497:29" pos:end="497:34"><expr pos:start="497:29" pos:end="497:33"><name pos:start="497:29" pos:end="497:29">m</name> <operator pos:start="497:31" pos:end="497:31">&lt;</operator> <literal type="number" pos:start="497:33" pos:end="497:33">3</literal></expr>;</condition> <incr pos:start="497:36" pos:end="497:38"><expr pos:start="497:36" pos:end="497:38"><name pos:start="497:36" pos:end="497:36">m</name><operator pos:start="497:37" pos:end="497:38">++</operator></expr></incr>)</control> <block pos:start="497:41" pos:end="505:17">{<block_content pos:start="499:21" pos:end="503:80">

                    <expr_stmt pos:start="499:21" pos:end="499:95"><expr pos:start="499:21" pos:end="499:94"><name pos:start="499:21" pos:end="499:46"><name pos:start="499:21" pos:end="499:21">s</name><operator pos:start="499:22" pos:end="499:23">-&gt;</operator><name pos:start="499:24" pos:end="499:37">rgb2yuv_coeffs</name><index pos:start="499:38" pos:end="499:40">[<expr pos:start="499:39" pos:end="499:39"><name pos:start="499:39" pos:end="499:39">n</name></expr>]</index><index pos:start="499:41" pos:end="499:43">[<expr pos:start="499:42" pos:end="499:42"><name pos:start="499:42" pos:end="499:42">m</name></expr>]</index><index pos:start="499:44" pos:end="499:46">[<expr pos:start="499:45" pos:end="499:45"><literal type="number" pos:start="499:45" pos:end="499:45">0</literal></expr>]</index></name> <operator pos:start="499:48" pos:end="499:48">=</operator> <call pos:start="499:50" pos:end="499:94"><name pos:start="499:50" pos:end="499:54">lrint</name><argument_list pos:start="499:55" pos:end="499:94">(<argument pos:start="499:56" pos:end="499:93"><expr pos:start="499:56" pos:end="499:93"><name pos:start="499:56" pos:end="499:59">bits</name> <operator pos:start="499:61" pos:end="499:61">*</operator> <name pos:start="499:63" pos:end="499:69">out_rng</name> <operator pos:start="499:71" pos:end="499:71">*</operator> <name pos:start="499:73" pos:end="499:85"><name pos:start="499:73" pos:end="499:79">rgb2yuv</name><index pos:start="499:80" pos:end="499:82">[<expr pos:start="499:81" pos:end="499:81"><name pos:start="499:81" pos:end="499:81">n</name></expr>]</index><index pos:start="499:83" pos:end="499:85">[<expr pos:start="499:84" pos:end="499:84"><name pos:start="499:84" pos:end="499:84">m</name></expr>]</index></name> <operator pos:start="499:87" pos:end="499:87">/</operator> <literal type="number" pos:start="499:89" pos:end="499:93">28672</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="501:21" pos:end="503:80">for <control pos:start="501:25" pos:end="501:43">(<init pos:start="501:26" pos:end="501:31"><expr pos:start="501:26" pos:end="501:30"><name pos:start="501:26" pos:end="501:26">o</name> <operator pos:start="501:28" pos:end="501:28">=</operator> <literal type="number" pos:start="501:30" pos:end="501:30">1</literal></expr>;</init> <condition pos:start="501:33" pos:end="501:38"><expr pos:start="501:33" pos:end="501:37"><name pos:start="501:33" pos:end="501:33">o</name> <operator pos:start="501:35" pos:end="501:35">&lt;</operator> <literal type="number" pos:start="501:37" pos:end="501:37">8</literal></expr>;</condition> <incr pos:start="501:40" pos:end="501:42"><expr pos:start="501:40" pos:end="501:42"><name pos:start="501:40" pos:end="501:40">o</name><operator pos:start="501:41" pos:end="501:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="503:25" pos:end="503:80"><block_content pos:start="503:25" pos:end="503:80">

                        <expr_stmt pos:start="503:25" pos:end="503:80"><expr pos:start="503:25" pos:end="503:79"><name pos:start="503:25" pos:end="503:50"><name pos:start="503:25" pos:end="503:25">s</name><operator pos:start="503:26" pos:end="503:27">-&gt;</operator><name pos:start="503:28" pos:end="503:41">rgb2yuv_coeffs</name><index pos:start="503:42" pos:end="503:44">[<expr pos:start="503:43" pos:end="503:43"><name pos:start="503:43" pos:end="503:43">n</name></expr>]</index><index pos:start="503:45" pos:end="503:47">[<expr pos:start="503:46" pos:end="503:46"><name pos:start="503:46" pos:end="503:46">m</name></expr>]</index><index pos:start="503:48" pos:end="503:50">[<expr pos:start="503:49" pos:end="503:49"><name pos:start="503:49" pos:end="503:49">o</name></expr>]</index></name> <operator pos:start="503:52" pos:end="503:52">=</operator> <name pos:start="503:54" pos:end="503:79"><name pos:start="503:54" pos:end="503:54">s</name><operator pos:start="503:55" pos:end="503:56">-&gt;</operator><name pos:start="503:57" pos:end="503:70">rgb2yuv_coeffs</name><index pos:start="503:71" pos:end="503:73">[<expr pos:start="503:72" pos:end="503:72"><name pos:start="503:72" pos:end="503:72">n</name></expr>]</index><index pos:start="503:74" pos:end="503:76">[<expr pos:start="503:75" pos:end="503:75"><name pos:start="503:75" pos:end="503:75">m</name></expr>]</index><index pos:start="503:77" pos:end="503:79">[<expr pos:start="503:78" pos:end="503:78"><literal type="number" pos:start="503:78" pos:end="503:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="509:13" pos:end="509:81"><expr pos:start="509:13" pos:end="509:80"><call pos:start="509:13" pos:end="509:80"><name pos:start="509:13" pos:end="509:22">av_assert2</name><argument_list pos:start="509:23" pos:end="509:80">(<argument pos:start="509:24" pos:end="509:79"><expr pos:start="509:24" pos:end="509:79"><name pos:start="509:24" pos:end="509:49"><name pos:start="509:24" pos:end="509:24">s</name><operator pos:start="509:25" pos:end="509:26">-&gt;</operator><name pos:start="509:27" pos:end="509:40">rgb2yuv_coeffs</name><index pos:start="509:41" pos:end="509:43">[<expr pos:start="509:42" pos:end="509:42"><literal type="number" pos:start="509:42" pos:end="509:42">1</literal></expr>]</index><index pos:start="509:44" pos:end="509:46">[<expr pos:start="509:45" pos:end="509:45"><literal type="number" pos:start="509:45" pos:end="509:45">2</literal></expr>]</index><index pos:start="509:47" pos:end="509:49">[<expr pos:start="509:48" pos:end="509:48"><literal type="number" pos:start="509:48" pos:end="509:48">0</literal></expr>]</index></name> <operator pos:start="509:51" pos:end="509:52">==</operator> <name pos:start="509:54" pos:end="509:79"><name pos:start="509:54" pos:end="509:54">s</name><operator pos:start="509:55" pos:end="509:56">-&gt;</operator><name pos:start="509:57" pos:end="509:70">rgb2yuv_coeffs</name><index pos:start="509:71" pos:end="509:73">[<expr pos:start="509:72" pos:end="509:72"><literal type="number" pos:start="509:72" pos:end="509:72">2</literal></expr>]</index><index pos:start="509:74" pos:end="509:76">[<expr pos:start="509:75" pos:end="509:75"><literal type="number" pos:start="509:75" pos:end="509:75">0</literal></expr>]</index><index pos:start="509:77" pos:end="509:79">[<expr pos:start="509:78" pos:end="509:78"><literal type="number" pos:start="509:78" pos:end="509:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="513:91"><expr pos:start="511:13" pos:end="513:90"><name pos:start="511:13" pos:end="511:22"><name pos:start="511:13" pos:end="511:13">s</name><operator pos:start="511:14" pos:end="511:15">-&gt;</operator><name pos:start="511:16" pos:end="511:22">rgb2yuv</name></name> <operator pos:start="511:24" pos:end="511:24">=</operator> <name pos:start="511:26" pos:end="513:90"><name pos:start="511:26" pos:end="511:26">s</name><operator pos:start="511:27" pos:end="511:28">-&gt;</operator><name pos:start="511:29" pos:end="511:31">dsp</name><operator pos:start="511:32" pos:end="511:32">.</operator><name pos:start="511:33" pos:end="511:39">rgb2yuv</name><index pos:start="511:40" pos:end="511:75">[<expr pos:start="511:41" pos:end="511:74"><operator pos:start="511:41" pos:end="511:41">(</operator><name pos:start="511:42" pos:end="511:58"><name pos:start="511:42" pos:end="511:49">out_desc</name><operator pos:start="511:50" pos:end="511:51">-&gt;</operator><name pos:start="511:52" pos:end="511:55">comp</name><index pos:start="511:56" pos:end="511:58">[<expr pos:start="511:57" pos:end="511:57"><literal type="number" pos:start="511:57" pos:end="511:57">0</literal></expr>]</index></name><operator pos:start="511:59" pos:end="511:59">.</operator><name pos:start="511:60" pos:end="511:64">depth</name> <operator pos:start="511:66" pos:end="511:66">-</operator> <literal type="number" pos:start="511:68" pos:end="511:68">8</literal><operator pos:start="511:69" pos:end="511:69">)</operator> <operator pos:start="511:71" pos:end="511:72">&gt;&gt;</operator> <literal type="number" pos:start="511:74" pos:end="511:74">1</literal></expr>]</index>

                                       <index pos:start="513:40" pos:end="513:90">[<expr pos:start="513:41" pos:end="513:89"><name pos:start="513:41" pos:end="513:63"><name pos:start="513:41" pos:end="513:48">out_desc</name><operator pos:start="513:49" pos:end="513:50">-&gt;</operator><name pos:start="513:51" pos:end="513:63">log2_chroma_h</name></name> <operator pos:start="513:65" pos:end="513:65">+</operator> <name pos:start="513:67" pos:end="513:89"><name pos:start="513:67" pos:end="513:74">out_desc</name><operator pos:start="513:75" pos:end="513:76">-&gt;</operator><name pos:start="513:77" pos:end="513:89">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="515:13" pos:end="517:91"><expr pos:start="515:13" pos:end="517:90"><name pos:start="515:13" pos:end="515:26"><name pos:start="515:13" pos:end="515:13">s</name><operator pos:start="515:14" pos:end="515:15">-&gt;</operator><name pos:start="515:16" pos:end="515:26">rgb2yuv_fsb</name></name> <operator pos:start="515:28" pos:end="515:28">=</operator> <name pos:start="515:30" pos:end="517:90"><name pos:start="515:30" pos:end="515:30">s</name><operator pos:start="515:31" pos:end="515:32">-&gt;</operator><name pos:start="515:33" pos:end="515:35">dsp</name><operator pos:start="515:36" pos:end="515:36">.</operator><name pos:start="515:37" pos:end="515:47">rgb2yuv_fsb</name><index pos:start="515:48" pos:end="515:83">[<expr pos:start="515:49" pos:end="515:82"><operator pos:start="515:49" pos:end="515:49">(</operator><name pos:start="515:50" pos:end="515:66"><name pos:start="515:50" pos:end="515:57">out_desc</name><operator pos:start="515:58" pos:end="515:59">-&gt;</operator><name pos:start="515:60" pos:end="515:63">comp</name><index pos:start="515:64" pos:end="515:66">[<expr pos:start="515:65" pos:end="515:65"><literal type="number" pos:start="515:65" pos:end="515:65">0</literal></expr>]</index></name><operator pos:start="515:67" pos:end="515:67">.</operator><name pos:start="515:68" pos:end="515:72">depth</name> <operator pos:start="515:74" pos:end="515:74">-</operator> <literal type="number" pos:start="515:76" pos:end="515:76">8</literal><operator pos:start="515:77" pos:end="515:77">)</operator> <operator pos:start="515:79" pos:end="515:80">&gt;&gt;</operator> <literal type="number" pos:start="515:82" pos:end="515:82">1</literal></expr>]</index>

                                       <index pos:start="517:40" pos:end="517:90">[<expr pos:start="517:41" pos:end="517:89"><name pos:start="517:41" pos:end="517:63"><name pos:start="517:41" pos:end="517:48">out_desc</name><operator pos:start="517:49" pos:end="517:50">-&gt;</operator><name pos:start="517:51" pos:end="517:63">log2_chroma_h</name></name> <operator pos:start="517:65" pos:end="517:65">+</operator> <name pos:start="517:67" pos:end="517:89"><name pos:start="517:67" pos:end="517:74">out_desc</name><operator pos:start="517:75" pos:end="517:76">-&gt;</operator><name pos:start="517:77" pos:end="517:89">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="519:13" pos:end="519:21"><expr pos:start="519:13" pos:end="519:20"><name pos:start="519:13" pos:end="519:16">emms</name> <operator pos:start="519:18" pos:end="519:18">=</operator> <literal type="number" pos:start="519:20" pos:end="519:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="525:9" pos:end="567:9"><if pos:start="525:9" pos:end="567:9">if <condition pos:start="525:12" pos:end="525:66">(<expr pos:start="525:13" pos:end="525:65"><name pos:start="525:13" pos:end="525:31"><name pos:start="525:13" pos:end="525:13">s</name><operator pos:start="525:14" pos:end="525:15">-&gt;</operator><name pos:start="525:16" pos:end="525:31">yuv2yuv_fastmode</name></name> <operator pos:start="525:33" pos:end="525:34">&amp;&amp;</operator> <operator pos:start="525:36" pos:end="525:36">(</operator><name pos:start="525:37" pos:end="525:48">redo_yuv2rgb</name> <operator pos:start="525:50" pos:end="525:51">||</operator> <name pos:start="525:53" pos:end="525:64">redo_rgb2yuv</name><operator pos:start="525:65" pos:end="525:65">)</operator></expr>)</condition> <block pos:start="525:68" pos:end="567:9">{<block_content pos:start="527:13" pos:end="565:89">

            <decl_stmt pos:start="527:13" pos:end="527:82"><decl pos:start="527:13" pos:end="527:47"><type pos:start="527:13" pos:end="527:15"><name pos:start="527:13" pos:end="527:15">int</name></type> <name pos:start="527:17" pos:end="527:22">idepth</name> <init pos:start="527:24" pos:end="527:47">= <expr pos:start="527:26" pos:end="527:47"><name pos:start="527:26" pos:end="527:41"><name pos:start="527:26" pos:end="527:32">in_desc</name><operator pos:start="527:33" pos:end="527:34">-&gt;</operator><name pos:start="527:35" pos:end="527:38">comp</name><index pos:start="527:39" pos:end="527:41">[<expr pos:start="527:40" pos:end="527:40"><literal type="number" pos:start="527:40" pos:end="527:40">0</literal></expr>]</index></name><operator pos:start="527:42" pos:end="527:42">.</operator><name pos:start="527:43" pos:end="527:47">depth</name></expr></init></decl>, <decl pos:start="527:50" pos:end="527:81"><type ref="prev" pos:start="527:13" pos:end="527:15"/><name pos:start="527:50" pos:end="527:55">odepth</name> <init pos:start="527:57" pos:end="527:81">= <expr pos:start="527:59" pos:end="527:81"><name pos:start="527:59" pos:end="527:75"><name pos:start="527:59" pos:end="527:66">out_desc</name><operator pos:start="527:67" pos:end="527:68">-&gt;</operator><name pos:start="527:69" pos:end="527:72">comp</name><index pos:start="527:73" pos:end="527:75">[<expr pos:start="527:74" pos:end="527:74"><literal type="number" pos:start="527:74" pos:end="527:74">0</literal></expr>]</index></name><operator pos:start="527:76" pos:end="527:76">.</operator><name pos:start="527:77" pos:end="527:81">depth</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:57"><expr pos:start="529:13" pos:end="529:56"><call pos:start="529:13" pos:end="529:29"><name pos:start="529:13" pos:end="529:18">double</name> <argument_list pos:start="529:20" pos:end="529:29">(<argument pos:start="529:21" pos:end="529:28"><expr pos:start="529:21" pos:end="529:28"><operator pos:start="529:21" pos:end="529:21">*</operator><name pos:start="529:22" pos:end="529:28">rgb2yuv</name></expr></argument>)</argument_list></call><index pos:start="529:30" pos:end="529:32">[<expr pos:start="529:31" pos:end="529:31"><literal type="number" pos:start="529:31" pos:end="529:31">3</literal></expr>]</index> <operator pos:start="529:34" pos:end="529:34">=</operator> <name pos:start="529:36" pos:end="529:56"><name pos:start="529:36" pos:end="529:36">s</name><operator pos:start="529:37" pos:end="529:38">-&gt;</operator><name pos:start="529:39" pos:end="529:56">rgb2yuv_dbl_coeffs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="531:57"><expr pos:start="531:13" pos:end="531:56"><call pos:start="531:13" pos:end="531:29"><name pos:start="531:13" pos:end="531:18">double</name> <argument_list pos:start="531:20" pos:end="531:29">(<argument pos:start="531:21" pos:end="531:28"><expr pos:start="531:21" pos:end="531:28"><operator pos:start="531:21" pos:end="531:21">*</operator><name pos:start="531:22" pos:end="531:28">yuv2rgb</name></expr></argument>)</argument_list></call><index pos:start="531:30" pos:end="531:32">[<expr pos:start="531:31" pos:end="531:31"><literal type="number" pos:start="531:31" pos:end="531:31">3</literal></expr>]</index> <operator pos:start="531:34" pos:end="531:34">=</operator> <name pos:start="531:36" pos:end="531:56"><name pos:start="531:36" pos:end="531:36">s</name><operator pos:start="531:37" pos:end="531:38">-&gt;</operator><name pos:start="531:39" pos:end="531:56">yuv2rgb_dbl_coeffs</name></name></expr>;</expr_stmt>

            <decl_stmt pos:start="533:13" pos:end="533:33"><decl pos:start="533:13" pos:end="533:32"><type pos:start="533:13" pos:end="533:18"><name pos:start="533:13" pos:end="533:18">double</name></type> <name pos:start="533:20" pos:end="533:32"><name pos:start="533:20" pos:end="533:26">yuv2yuv</name><index pos:start="533:27" pos:end="533:29">[<expr pos:start="533:28" pos:end="533:28"><literal type="number" pos:start="533:28" pos:end="533:28">3</literal></expr>]</index><index pos:start="533:30" pos:end="533:32">[<expr pos:start="533:31" pos:end="533:31"><literal type="number" pos:start="533:31" pos:end="533:31">3</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="535:13" pos:end="535:32"><decl pos:start="535:13" pos:end="535:22"><type pos:start="535:13" pos:end="535:15"><name pos:start="535:13" pos:end="535:15">int</name></type> <name pos:start="535:17" pos:end="535:22">in_rng</name></decl>, <decl pos:start="535:25" pos:end="535:31"><type ref="prev" pos:start="535:13" pos:end="535:15"/><name pos:start="535:25" pos:end="535:31">out_rng</name></decl>;</decl_stmt>



            <expr_stmt pos:start="539:13" pos:end="539:46"><expr pos:start="539:13" pos:end="539:45"><call pos:start="539:13" pos:end="539:45"><name pos:start="539:13" pos:end="539:18">mul3x3</name><argument_list pos:start="539:19" pos:end="539:45">(<argument pos:start="539:20" pos:end="539:26"><expr pos:start="539:20" pos:end="539:26"><name pos:start="539:20" pos:end="539:26">yuv2yuv</name></expr></argument>, <argument pos:start="539:29" pos:end="539:35"><expr pos:start="539:29" pos:end="539:35"><name pos:start="539:29" pos:end="539:35">yuv2rgb</name></expr></argument>, <argument pos:start="539:38" pos:end="539:44"><expr pos:start="539:38" pos:end="539:44"><name pos:start="539:38" pos:end="539:44">rgb2yuv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="541:13" pos:end="557:13">for <control pos:start="541:17" pos:end="541:84">(<init pos:start="541:18" pos:end="541:47"><expr pos:start="541:18" pos:end="541:39"><name pos:start="541:18" pos:end="541:24">out_rng</name> <operator pos:start="541:26" pos:end="541:26">=</operator> <name pos:start="541:28" pos:end="541:39"><name pos:start="541:28" pos:end="541:28">s</name><operator pos:start="541:29" pos:end="541:30">-&gt;</operator><name pos:start="541:31" pos:end="541:39">out_y_rng</name></name></expr><operator pos:start="541:40" pos:end="541:40">,</operator> <expr pos:start="541:42" pos:end="541:46"><name pos:start="541:42" pos:end="541:42">m</name> <operator pos:start="541:44" pos:end="541:44">=</operator> <literal type="number" pos:start="541:46" pos:end="541:46">0</literal></expr>;</init> <condition pos:start="541:49" pos:end="541:54"><expr pos:start="541:49" pos:end="541:53"><name pos:start="541:49" pos:end="541:49">m</name> <operator pos:start="541:51" pos:end="541:51">&lt;</operator> <literal type="number" pos:start="541:53" pos:end="541:53">3</literal></expr>;</condition> <incr pos:start="541:56" pos:end="541:83"><expr pos:start="541:56" pos:end="541:58"><name pos:start="541:56" pos:end="541:56">m</name><operator pos:start="541:57" pos:end="541:58">++</operator></expr><operator pos:start="541:59" pos:end="541:59">,</operator> <expr pos:start="541:61" pos:end="541:83"><name pos:start="541:61" pos:end="541:67">out_rng</name> <operator pos:start="541:69" pos:end="541:69">=</operator> <name pos:start="541:71" pos:end="541:83"><name pos:start="541:71" pos:end="541:71">s</name><operator pos:start="541:72" pos:end="541:73">-&gt;</operator><name pos:start="541:74" pos:end="541:83">out_uv_rng</name></name></expr></incr>)</control> <block pos:start="541:86" pos:end="557:13">{<block_content pos:start="543:17" pos:end="555:17">

                <for pos:start="543:17" pos:end="555:17">for <control pos:start="543:21" pos:end="543:84">(<init pos:start="543:22" pos:end="543:49"><expr pos:start="543:22" pos:end="543:41"><name pos:start="543:22" pos:end="543:27">in_rng</name> <operator pos:start="543:29" pos:end="543:29">=</operator> <name pos:start="543:31" pos:end="543:41"><name pos:start="543:31" pos:end="543:31">s</name><operator pos:start="543:32" pos:end="543:33">-&gt;</operator><name pos:start="543:34" pos:end="543:41">in_y_rng</name></name></expr><operator pos:start="543:42" pos:end="543:42">,</operator> <expr pos:start="543:44" pos:end="543:48"><name pos:start="543:44" pos:end="543:44">n</name> <operator pos:start="543:46" pos:end="543:46">=</operator> <literal type="number" pos:start="543:48" pos:end="543:48">0</literal></expr>;</init> <condition pos:start="543:51" pos:end="543:56"><expr pos:start="543:51" pos:end="543:55"><name pos:start="543:51" pos:end="543:51">n</name> <operator pos:start="543:53" pos:end="543:53">&lt;</operator> <literal type="number" pos:start="543:55" pos:end="543:55">3</literal></expr>;</condition> <incr pos:start="543:58" pos:end="543:83"><expr pos:start="543:58" pos:end="543:60"><name pos:start="543:58" pos:end="543:58">n</name><operator pos:start="543:59" pos:end="543:60">++</operator></expr><operator pos:start="543:61" pos:end="543:61">,</operator> <expr pos:start="543:63" pos:end="543:83"><name pos:start="543:63" pos:end="543:68">in_rng</name> <operator pos:start="543:70" pos:end="543:70">=</operator> <name pos:start="543:72" pos:end="543:83"><name pos:start="543:72" pos:end="543:72">s</name><operator pos:start="543:73" pos:end="543:74">-&gt;</operator><name pos:start="543:75" pos:end="543:83">in_uv_rng</name></name></expr></incr>)</control> <block pos:start="543:86" pos:end="555:17">{<block_content pos:start="545:21" pos:end="553:80">

                    <expr_stmt pos:start="545:21" pos:end="549:56"><expr pos:start="545:21" pos:end="549:55"><name pos:start="545:21" pos:end="545:46"><name pos:start="545:21" pos:end="545:21">s</name><operator pos:start="545:22" pos:end="545:23">-&gt;</operator><name pos:start="545:24" pos:end="545:37">yuv2yuv_coeffs</name><index pos:start="545:38" pos:end="545:40">[<expr pos:start="545:39" pos:end="545:39"><name pos:start="545:39" pos:end="545:39">m</name></expr>]</index><index pos:start="545:41" pos:end="545:43">[<expr pos:start="545:42" pos:end="545:42"><name pos:start="545:42" pos:end="545:42">n</name></expr>]</index><index pos:start="545:44" pos:end="545:46">[<expr pos:start="545:45" pos:end="545:45"><literal type="number" pos:start="545:45" pos:end="545:45">0</literal></expr>]</index></name> <operator pos:start="545:48" pos:end="545:48">=</operator>

                        <call pos:start="547:25" pos:end="549:55"><name pos:start="547:25" pos:end="547:29">lrint</name><argument_list pos:start="547:30" pos:end="549:55">(<argument pos:start="547:31" pos:end="549:54"><expr pos:start="547:31" pos:end="549:54"><literal type="number" pos:start="547:31" pos:end="547:35">16384</literal> <operator pos:start="547:37" pos:end="547:37">*</operator> <name pos:start="547:39" pos:end="547:51"><name pos:start="547:39" pos:end="547:45">yuv2yuv</name><index pos:start="547:46" pos:end="547:48">[<expr pos:start="547:47" pos:end="547:47"><name pos:start="547:47" pos:end="547:47">m</name></expr>]</index><index pos:start="547:49" pos:end="547:51">[<expr pos:start="547:50" pos:end="547:50"><name pos:start="547:50" pos:end="547:50">n</name></expr>]</index></name> <operator pos:start="547:53" pos:end="547:53">*</operator> <name pos:start="547:55" pos:end="547:61">out_rng</name> <operator pos:start="547:63" pos:end="547:63">*</operator> <operator pos:start="547:65" pos:end="547:65">(</operator><literal type="number" pos:start="547:66" pos:end="547:66">1</literal> <operator pos:start="547:68" pos:end="547:69">&lt;&lt;</operator> <name pos:start="547:71" pos:end="547:76">idepth</name><operator pos:start="547:77" pos:end="547:77">)</operator> <operator pos:start="547:79" pos:end="547:79">/</operator>

                              <operator pos:start="549:31" pos:end="549:31">(</operator><name pos:start="549:32" pos:end="549:37">in_rng</name> <operator pos:start="549:39" pos:end="549:39">*</operator> <operator pos:start="549:41" pos:end="549:41">(</operator><literal type="number" pos:start="549:42" pos:end="549:42">1</literal> <operator pos:start="549:44" pos:end="549:45">&lt;&lt;</operator> <name pos:start="549:47" pos:end="549:52">odepth</name><operator pos:start="549:53" pos:end="549:53">)</operator><operator pos:start="549:54" pos:end="549:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="551:21" pos:end="553:80">for <control pos:start="551:25" pos:end="551:43">(<init pos:start="551:26" pos:end="551:31"><expr pos:start="551:26" pos:end="551:30"><name pos:start="551:26" pos:end="551:26">o</name> <operator pos:start="551:28" pos:end="551:28">=</operator> <literal type="number" pos:start="551:30" pos:end="551:30">1</literal></expr>;</init> <condition pos:start="551:33" pos:end="551:38"><expr pos:start="551:33" pos:end="551:37"><name pos:start="551:33" pos:end="551:33">o</name> <operator pos:start="551:35" pos:end="551:35">&lt;</operator> <literal type="number" pos:start="551:37" pos:end="551:37">8</literal></expr>;</condition> <incr pos:start="551:40" pos:end="551:42"><expr pos:start="551:40" pos:end="551:42"><name pos:start="551:40" pos:end="551:40">o</name><operator pos:start="551:41" pos:end="551:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="553:25" pos:end="553:80"><block_content pos:start="553:25" pos:end="553:80">

                        <expr_stmt pos:start="553:25" pos:end="553:80"><expr pos:start="553:25" pos:end="553:79"><name pos:start="553:25" pos:end="553:50"><name pos:start="553:25" pos:end="553:25">s</name><operator pos:start="553:26" pos:end="553:27">-&gt;</operator><name pos:start="553:28" pos:end="553:41">yuv2yuv_coeffs</name><index pos:start="553:42" pos:end="553:44">[<expr pos:start="553:43" pos:end="553:43"><name pos:start="553:43" pos:end="553:43">m</name></expr>]</index><index pos:start="553:45" pos:end="553:47">[<expr pos:start="553:46" pos:end="553:46"><name pos:start="553:46" pos:end="553:46">n</name></expr>]</index><index pos:start="553:48" pos:end="553:50">[<expr pos:start="553:49" pos:end="553:49"><name pos:start="553:49" pos:end="553:49">o</name></expr>]</index></name> <operator pos:start="553:52" pos:end="553:52">=</operator> <name pos:start="553:54" pos:end="553:79"><name pos:start="553:54" pos:end="553:54">s</name><operator pos:start="553:55" pos:end="553:56">-&gt;</operator><name pos:start="553:57" pos:end="553:70">yuv2yuv_coeffs</name><index pos:start="553:71" pos:end="553:73">[<expr pos:start="553:72" pos:end="553:72"><name pos:start="553:72" pos:end="553:72">m</name></expr>]</index><index pos:start="553:74" pos:end="553:76">[<expr pos:start="553:75" pos:end="553:75"><name pos:start="553:75" pos:end="553:75">n</name></expr>]</index><index pos:start="553:77" pos:end="553:79">[<expr pos:start="553:78" pos:end="553:78"><literal type="number" pos:start="553:78" pos:end="553:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="559:13" pos:end="559:56"><expr pos:start="559:13" pos:end="559:55"><call pos:start="559:13" pos:end="559:55"><name pos:start="559:13" pos:end="559:22">av_assert2</name><argument_list pos:start="559:23" pos:end="559:55">(<argument pos:start="559:24" pos:end="559:54"><expr pos:start="559:24" pos:end="559:54"><name pos:start="559:24" pos:end="559:49"><name pos:start="559:24" pos:end="559:24">s</name><operator pos:start="559:25" pos:end="559:26">-&gt;</operator><name pos:start="559:27" pos:end="559:40">yuv2yuv_coeffs</name><index pos:start="559:41" pos:end="559:43">[<expr pos:start="559:42" pos:end="559:42"><literal type="number" pos:start="559:42" pos:end="559:42">1</literal></expr>]</index><index pos:start="559:44" pos:end="559:46">[<expr pos:start="559:45" pos:end="559:45"><literal type="number" pos:start="559:45" pos:end="559:45">0</literal></expr>]</index><index pos:start="559:47" pos:end="559:49">[<expr pos:start="559:48" pos:end="559:48"><literal type="number" pos:start="559:48" pos:end="559:48">0</literal></expr>]</index></name> <operator pos:start="559:51" pos:end="559:52">==</operator> <literal type="number" pos:start="559:54" pos:end="559:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:56"><expr pos:start="561:13" pos:end="561:55"><call pos:start="561:13" pos:end="561:55"><name pos:start="561:13" pos:end="561:22">av_assert2</name><argument_list pos:start="561:23" pos:end="561:55">(<argument pos:start="561:24" pos:end="561:54"><expr pos:start="561:24" pos:end="561:54"><name pos:start="561:24" pos:end="561:49"><name pos:start="561:24" pos:end="561:24">s</name><operator pos:start="561:25" pos:end="561:26">-&gt;</operator><name pos:start="561:27" pos:end="561:40">yuv2yuv_coeffs</name><index pos:start="561:41" pos:end="561:43">[<expr pos:start="561:42" pos:end="561:42"><literal type="number" pos:start="561:42" pos:end="561:42">2</literal></expr>]</index><index pos:start="561:44" pos:end="561:46">[<expr pos:start="561:45" pos:end="561:45"><literal type="number" pos:start="561:45" pos:end="561:45">0</literal></expr>]</index><index pos:start="561:47" pos:end="561:49">[<expr pos:start="561:48" pos:end="561:48"><literal type="number" pos:start="561:48" pos:end="561:48">0</literal></expr>]</index></name> <operator pos:start="561:51" pos:end="561:52">==</operator> <literal type="number" pos:start="561:54" pos:end="561:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="565:89"><expr pos:start="563:13" pos:end="565:88"><name pos:start="563:13" pos:end="563:22"><name pos:start="563:13" pos:end="563:13">s</name><operator pos:start="563:14" pos:end="563:15">-&gt;</operator><name pos:start="563:16" pos:end="563:22">yuv2yuv</name></name> <operator pos:start="563:24" pos:end="563:24">=</operator> <name pos:start="563:26" pos:end="565:88"><name pos:start="563:26" pos:end="563:26">s</name><operator pos:start="563:27" pos:end="563:28">-&gt;</operator><name pos:start="563:29" pos:end="563:31">dsp</name><operator pos:start="563:32" pos:end="563:32">.</operator><name pos:start="563:33" pos:end="563:39">yuv2yuv</name><index pos:start="563:40" pos:end="563:58">[<expr pos:start="563:41" pos:end="563:57"><operator pos:start="563:41" pos:end="563:41">(</operator><name pos:start="563:42" pos:end="563:47">idepth</name> <operator pos:start="563:49" pos:end="563:49">-</operator> <literal type="number" pos:start="563:51" pos:end="563:51">8</literal><operator pos:start="563:52" pos:end="563:52">)</operator> <operator pos:start="563:54" pos:end="563:55">&gt;&gt;</operator> <literal type="number" pos:start="563:57" pos:end="563:57">1</literal></expr>]</index><index pos:start="563:59" pos:end="563:77">[<expr pos:start="563:60" pos:end="563:76"><operator pos:start="563:60" pos:end="563:60">(</operator><name pos:start="563:61" pos:end="563:66">odepth</name> <operator pos:start="563:68" pos:end="563:68">-</operator> <literal type="number" pos:start="563:70" pos:end="563:70">8</literal><operator pos:start="563:71" pos:end="563:71">)</operator> <operator pos:start="563:73" pos:end="563:74">&gt;&gt;</operator> <literal type="number" pos:start="563:76" pos:end="563:76">1</literal></expr>]</index>

                                       <index pos:start="565:40" pos:end="565:88">[<expr pos:start="565:41" pos:end="565:87"><name pos:start="565:41" pos:end="565:62"><name pos:start="565:41" pos:end="565:47">in_desc</name><operator pos:start="565:48" pos:end="565:49">-&gt;</operator><name pos:start="565:50" pos:end="565:62">log2_chroma_h</name></name> <operator pos:start="565:64" pos:end="565:64">+</operator> <name pos:start="565:66" pos:end="565:87"><name pos:start="565:66" pos:end="565:72">in_desc</name><operator pos:start="565:73" pos:end="565:74">-&gt;</operator><name pos:start="565:75" pos:end="565:87">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="573:5" pos:end="575:17"><if pos:start="573:5" pos:end="575:17">if <condition pos:start="573:8" pos:end="573:13">(<expr pos:start="573:9" pos:end="573:12"><name pos:start="573:9" pos:end="573:12">emms</name></expr>)</condition><block type="pseudo" pos:start="575:9" pos:end="575:17"><block_content pos:start="575:9" pos:end="575:17">

        <expr_stmt pos:start="575:9" pos:end="575:17"><expr pos:start="575:9" pos:end="575:16"><call pos:start="575:9" pos:end="575:16"><name pos:start="575:9" pos:end="575:14">emms_c</name><argument_list pos:start="575:15" pos:end="575:16">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="579:5" pos:end="579:13">return <expr pos:start="579:12" pos:end="579:12"><literal type="number" pos:start="579:12" pos:end="579:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
