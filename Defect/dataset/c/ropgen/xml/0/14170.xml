<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14170.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">filter_query_formats</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:47">AVFilterContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFilterFormats</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:28">formats</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:26">AVFilterChannelLayouts</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:37">chlayouts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVFilterFormats</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:32">samplerates</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="17:47"><decl pos:start="13:5" pos:end="17:46"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:20">AVMediaType</name></name></type> <name pos:start="13:22" pos:end="13:25">type</name> <init pos:start="13:27" pos:end="17:46">= <expr pos:start="13:29" pos:end="17:46"><ternary pos:start="13:29" pos:end="17:46"><condition pos:start="13:29" pos:end="13:61"><expr pos:start="13:29" pos:end="13:59"><name pos:start="13:29" pos:end="13:39"><name pos:start="13:29" pos:end="13:31">ctx</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:39">inputs</name></name>  <operator pos:start="13:42" pos:end="13:43">&amp;&amp;</operator> <name pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:47">ctx</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:55">inputs</name> <index pos:start="13:57" pos:end="13:59">[<expr pos:start="13:58" pos:end="13:58"><literal type="number" pos:start="13:58" pos:end="13:58">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="13:63" pos:end="13:83"> <expr pos:start="13:63" pos:end="13:83"><name pos:start="13:63" pos:end="13:77"><name pos:start="13:63" pos:end="13:65">ctx</name><operator pos:start="13:66" pos:end="13:67">-&gt;</operator><name pos:start="13:68" pos:end="13:73">inputs</name> <index pos:start="13:75" pos:end="13:77">[<expr pos:start="13:76" pos:end="13:76"><literal type="number" pos:start="13:76" pos:end="13:76">0</literal></expr>]</index></name><operator pos:start="13:78" pos:end="13:79">-&gt;</operator><name pos:start="13:80" pos:end="13:83">type</name></expr> </then><else pos:start="13:85" pos:end="17:46">:

                            <expr pos:start="15:29" pos:end="17:46"><ternary pos:start="15:29" pos:end="17:46"><condition pos:start="15:29" pos:end="15:61"><expr pos:start="15:29" pos:end="15:59"><name pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:31">ctx</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:40">outputs</name></name> <operator pos:start="15:42" pos:end="15:43">&amp;&amp;</operator> <name pos:start="15:45" pos:end="15:59"><name pos:start="15:45" pos:end="15:47">ctx</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:56">outputs</name><index pos:start="15:57" pos:end="15:59">[<expr pos:start="15:58" pos:end="15:58"><literal type="number" pos:start="15:58" pos:end="15:58">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="15:63" pos:end="15:83"> <expr pos:start="15:63" pos:end="15:83"><name pos:start="15:63" pos:end="15:77"><name pos:start="15:63" pos:end="15:65">ctx</name><operator pos:start="15:66" pos:end="15:67">-&gt;</operator><name pos:start="15:68" pos:end="15:74">outputs</name><index pos:start="15:75" pos:end="15:77">[<expr pos:start="15:76" pos:end="15:76"><literal type="number" pos:start="15:76" pos:end="15:76">0</literal></expr>]</index></name><operator pos:start="15:78" pos:end="15:79">-&gt;</operator><name pos:start="15:80" pos:end="15:83">type</name></expr> </then><else pos:start="15:85" pos:end="17:46">:

                            <expr pos:start="17:29" pos:end="17:46"><name pos:start="17:29" pos:end="17:46">AVMEDIA_TYPE_VIDEO</name></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:52">(<expr pos:start="21:9" pos:end="21:51"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:46"><name pos:start="21:16" pos:end="21:41"><name pos:start="21:16" pos:end="21:18">ctx</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:26">filter</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:41">query_formats</name></name><argument_list pos:start="21:42" pos:end="21:46">(<argument pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:45">ctx</name></expr></argument>)</argument_list></call><operator pos:start="21:47" pos:end="21:47">)</operator> <operator pos:start="21:49" pos:end="21:49">&lt;</operator> <literal type="number" pos:start="21:51" pos:end="21:51">0</literal></expr>)</condition> <block pos:start="21:54" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:19">

        <expr_stmt pos:start="23:9" pos:end="25:43"><expr pos:start="23:9" pos:end="25:42"><call pos:start="23:9" pos:end="25:42"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="25:42">(<argument pos:start="23:16" pos:end="23:18"><expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ctx</name></expr></argument>, <argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:35" pos:end="23:70"><expr pos:start="23:35" pos:end="23:70"><literal type="string" pos:start="23:35" pos:end="23:70">"Query format failed for '%s': %s\n"</literal></expr></argument>,

               <argument pos:start="25:16" pos:end="25:24"><expr pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:18">ctx</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">name</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:41"><expr pos:start="25:27" pos:end="25:41"><call pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:36">av_err2str</name><argument_list pos:start="25:37" pos:end="25:41">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="33:5" pos:end="35:75">for <control pos:start="33:9" pos:end="33:40">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:35"><expr pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:34"><name pos:start="33:21" pos:end="33:23">ctx</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:34">nb_inputs</name></name></expr>;</condition> <incr pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:37">i</name><operator pos:start="33:38" pos:end="33:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:75"><block_content pos:start="35:9" pos:end="35:75">

        <expr_stmt pos:start="35:9" pos:end="35:75"><expr pos:start="35:9" pos:end="35:74"><call pos:start="35:9" pos:end="35:74"><name pos:start="35:9" pos:end="35:32">sanitize_channel_layouts</name><argument_list pos:start="35:33" pos:end="35:74">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">ctx</name></expr></argument>, <argument pos:start="35:39" pos:end="35:73"><expr pos:start="35:39" pos:end="35:73"><name pos:start="35:39" pos:end="35:52"><name pos:start="35:39" pos:end="35:41">ctx</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:49">inputs</name><index pos:start="35:50" pos:end="35:52">[<expr pos:start="35:51" pos:end="35:51"><name pos:start="35:51" pos:end="35:51">i</name></expr>]</index></name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:73">out_channel_layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="37:5" pos:end="39:75">for <control pos:start="37:9" pos:end="37:41">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:36"><expr pos:start="37:17" pos:end="37:35"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:35"><name pos:start="37:21" pos:end="37:23">ctx</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:35">nb_outputs</name></name></expr>;</condition> <incr pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:38">i</name><operator pos:start="37:39" pos:end="37:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:9" pos:end="39:75"><block_content pos:start="39:9" pos:end="39:75">

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:32">sanitize_channel_layouts</name><argument_list pos:start="39:33" pos:end="39:74">(<argument pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:36">ctx</name></expr></argument>, <argument pos:start="39:39" pos:end="39:73"><expr pos:start="39:39" pos:end="39:73"><name pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:41">ctx</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:50">outputs</name><index pos:start="39:51" pos:end="39:53">[<expr pos:start="39:52" pos:end="39:52"><name pos:start="39:52" pos:end="39:52">i</name></expr>]</index></name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:73">in_channel_layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:11">formats</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:34"><name pos:start="43:15" pos:end="43:28">ff_all_formats</name><argument_list pos:start="43:29" pos:end="43:34">(<argument pos:start="43:30" pos:end="43:33"><expr pos:start="43:30" pos:end="43:33"><name pos:start="43:30" pos:end="43:33">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:31"><if pos:start="45:5" pos:end="47:31">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:16">formats</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:31"><block_content pos:start="47:9" pos:end="47:31">

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><call pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:25">ff_set_common_formats</name><argument_list pos:start="49:26" pos:end="49:39">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">ctx</name></expr></argument>, <argument pos:start="49:32" pos:end="49:38"><expr pos:start="49:32" pos:end="49:38"><name pos:start="49:32" pos:end="49:38">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="69:5"><if pos:start="51:5" pos:end="69:5">if <condition pos:start="51:8" pos:end="51:35">(<expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:12">type</name> <operator pos:start="51:14" pos:end="51:15">==</operator> <name pos:start="51:17" pos:end="51:34">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="51:37" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:54">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:19">samplerates</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:42"><name pos:start="53:23" pos:end="53:40">ff_all_samplerates</name><argument_list pos:start="53:41" pos:end="53:42">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:35"><if pos:start="55:9" pos:end="57:35">if <condition pos:start="55:12" pos:end="55:25">(<expr pos:start="55:13" pos:end="55:24"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:24">samplerates</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:35"><block_content pos:start="57:13" pos:end="57:35">

            <return pos:start="57:13" pos:end="57:35">return <expr pos:start="57:20" pos:end="57:34"><call pos:start="57:20" pos:end="57:34"><name pos:start="57:20" pos:end="57:26">AVERROR</name><argument_list pos:start="57:27" pos:end="57:34">(<argument pos:start="57:28" pos:end="57:33"><expr pos:start="57:28" pos:end="57:33"><name pos:start="57:28" pos:end="57:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:52"><expr pos:start="59:9" pos:end="59:51"><call pos:start="59:9" pos:end="59:51"><name pos:start="59:9" pos:end="59:33">ff_set_common_samplerates</name><argument_list pos:start="59:34" pos:end="59:51">(<argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><name pos:start="59:35" pos:end="59:37">ctx</name></expr></argument>, <argument pos:start="59:40" pos:end="59:50"><expr pos:start="59:40" pos:end="59:50"><name pos:start="59:40" pos:end="59:50">samplerates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:17">chlayouts</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:44"><name pos:start="61:21" pos:end="61:42">ff_all_channel_layouts</name><argument_list pos:start="61:43" pos:end="61:44">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:35"><if pos:start="63:9" pos:end="65:35">if <condition pos:start="63:12" pos:end="63:23">(<expr pos:start="63:13" pos:end="63:22"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:22">chlayouts</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:35"><block_content pos:start="65:13" pos:end="65:35">

            <return pos:start="65:13" pos:end="65:35">return <expr pos:start="65:20" pos:end="65:34"><call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:26">AVERROR</name><argument_list pos:start="65:27" pos:end="65:34">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:54"><expr pos:start="67:9" pos:end="67:53"><call pos:start="67:9" pos:end="67:53"><name pos:start="67:9" pos:end="67:37">ff_set_common_channel_layouts</name><argument_list pos:start="67:38" pos:end="67:53">(<argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><name pos:start="67:39" pos:end="67:41">ctx</name></expr></argument>, <argument pos:start="67:44" pos:end="67:52"><expr pos:start="67:44" pos:end="67:52"><name pos:start="67:44" pos:end="67:52">chlayouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
