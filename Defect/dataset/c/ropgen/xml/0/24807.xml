<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24807.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">ff_http_auth_handle_header</name><parameter_list pos:start="1:32" pos:end="3:50">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:45">HTTPAuthState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">state</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">key</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:5">

    <if_stmt pos:start="7:5" pos:end="57:5"><if pos:start="7:5" pos:end="51:5">if <condition pos:start="7:8" pos:end="7:79">(<expr pos:start="7:9" pos:end="7:78"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:40"><name pos:start="7:10" pos:end="7:15">strcmp</name><argument_list pos:start="7:16" pos:end="7:40">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">key</name></expr></argument>, <argument pos:start="7:22" pos:end="7:39"><expr pos:start="7:22" pos:end="7:39"><literal type="string" pos:start="7:22" pos:end="7:39">"WWW-Authenticate"</literal></expr></argument>)</argument_list></call> <operator pos:start="7:42" pos:end="7:43">||</operator> <operator pos:start="7:45" pos:end="7:45">!</operator><call pos:start="7:46" pos:end="7:78"><name pos:start="7:46" pos:end="7:51">strcmp</name><argument_list pos:start="7:52" pos:end="7:78">(<argument pos:start="7:53" pos:end="7:55"><expr pos:start="7:53" pos:end="7:55"><name pos:start="7:53" pos:end="7:55">key</name></expr></argument>, <argument pos:start="7:58" pos:end="7:77"><expr pos:start="7:58" pos:end="7:77"><literal type="string" pos:start="7:58" pos:end="7:77">"Proxy-Authenticate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:81" pos:end="51:5">{<block_content pos:start="9:9" pos:end="49:9">

        <decl_stmt pos:start="9:9" pos:end="9:22"><decl pos:start="9:9" pos:end="9:21"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">p</name></decl>;</decl_stmt>

        <if_stmt pos:start="11:9" pos:end="49:9"><if pos:start="11:9" pos:end="25:9">if <condition pos:start="11:12" pos:end="13:48">(<expr pos:start="11:13" pos:end="13:47"><call pos:start="11:13" pos:end="11:45"><name pos:start="11:13" pos:end="11:24">av_stristart</name><argument_list pos:start="11:25" pos:end="11:45">(<argument pos:start="11:26" pos:end="11:30"><expr pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:30">value</name></expr></argument>, <argument pos:start="11:33" pos:end="11:40"><expr pos:start="11:33" pos:end="11:40"><literal type="string" pos:start="11:33" pos:end="11:40">"Basic "</literal></expr></argument>, <argument pos:start="11:43" pos:end="11:44"><expr pos:start="11:43" pos:end="11:44"><operator pos:start="11:43" pos:end="11:43">&amp;</operator><name pos:start="11:44" pos:end="11:44">p</name></expr></argument>)</argument_list></call> <operator pos:start="11:47" pos:end="11:48">&amp;&amp;</operator>

            <name pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:17">state</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:28">auth_type</name></name> <operator pos:start="13:30" pos:end="13:31">&lt;=</operator> <name pos:start="13:33" pos:end="13:47">HTTP_AUTH_BASIC</name></expr>)</condition> <block pos:start="13:50" pos:end="25:9">{<block_content pos:start="15:13" pos:end="23:38">

            <expr_stmt pos:start="15:13" pos:end="15:47"><expr pos:start="15:13" pos:end="15:46"><name pos:start="15:13" pos:end="15:28"><name pos:start="15:13" pos:end="15:17">state</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:28">auth_type</name></name> <operator pos:start="15:30" pos:end="15:30">=</operator> <name pos:start="15:32" pos:end="15:46">HTTP_AUTH_BASIC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:32"><expr pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:17">state</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:24">realm</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>]</index></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:17">state</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:24">stale</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="23:38"><expr pos:start="21:13" pos:end="23:37"><call pos:start="21:13" pos:end="23:37"><name pos:start="21:13" pos:end="21:30">ff_parse_key_value</name><argument_list pos:start="21:31" pos:end="23:37">(<argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">p</name></expr></argument>, <argument pos:start="21:35" pos:end="21:75"><expr pos:start="21:35" pos:end="21:75"><operator pos:start="21:35" pos:end="21:35">(</operator><name pos:start="21:36" pos:end="21:54">ff_parse_key_val_cb</name><operator pos:start="21:55" pos:end="21:55">)</operator> <name pos:start="21:57" pos:end="21:75">handle_basic_params</name></expr></argument>,

                               <argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="49:9">else if <condition pos:start="25:19" pos:end="27:56">(<expr pos:start="25:20" pos:end="27:55"><call pos:start="25:20" pos:end="25:53"><name pos:start="25:20" pos:end="25:31">av_stristart</name><argument_list pos:start="25:32" pos:end="25:53">(<argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><name pos:start="25:33" pos:end="25:37">value</name></expr></argument>, <argument pos:start="25:40" pos:end="25:48"><expr pos:start="25:40" pos:end="25:48"><literal type="string" pos:start="25:40" pos:end="25:48">"Digest "</literal></expr></argument>, <argument pos:start="25:51" pos:end="25:52"><expr pos:start="25:51" pos:end="25:52"><operator pos:start="25:51" pos:end="25:51">&amp;</operator><name pos:start="25:52" pos:end="25:52">p</name></expr></argument>)</argument_list></call> <operator pos:start="25:55" pos:end="25:56">&amp;&amp;</operator>

                   <name pos:start="27:20" pos:end="27:35"><name pos:start="27:20" pos:end="27:24">state</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:35">auth_type</name></name> <operator pos:start="27:37" pos:end="27:38">&lt;=</operator> <name pos:start="27:40" pos:end="27:55">HTTP_AUTH_DIGEST</name></expr>)</condition> <block pos:start="27:58" pos:end="49:9">{<block_content pos:start="29:13" pos:end="47:33">

            <expr_stmt pos:start="29:13" pos:end="29:48"><expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:17">state</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">auth_type</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:47">HTTP_AUTH_DIGEST</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:67"><expr pos:start="31:13" pos:end="31:66"><call pos:start="31:13" pos:end="31:66"><name pos:start="31:13" pos:end="31:18">memset</name><argument_list pos:start="31:19" pos:end="31:66">(<argument pos:start="31:20" pos:end="31:40"><expr pos:start="31:20" pos:end="31:40"><operator pos:start="31:20" pos:end="31:20">&amp;</operator><name pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:25">state</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:40">digest_params</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:43"><expr pos:start="31:43" pos:end="31:43"><literal type="number" pos:start="31:43" pos:end="31:43">0</literal></expr></argument>, <argument pos:start="31:46" pos:end="31:65"><expr pos:start="31:46" pos:end="31:65"><sizeof pos:start="31:46" pos:end="31:65">sizeof<argument_list pos:start="31:52" pos:end="31:65">(<argument pos:start="31:53" pos:end="31:64"><expr pos:start="31:53" pos:end="31:64"><name pos:start="31:53" pos:end="31:64">DigestParams</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:32"><expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:17">state</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">realm</name><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>]</index></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:17">state</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">stale</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="39:38"><expr pos:start="37:13" pos:end="39:37"><call pos:start="37:13" pos:end="39:37"><name pos:start="37:13" pos:end="37:30">ff_parse_key_value</name><argument_list pos:start="37:31" pos:end="39:37">(<argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">p</name></expr></argument>, <argument pos:start="37:35" pos:end="37:76"><expr pos:start="37:35" pos:end="37:76"><operator pos:start="37:35" pos:end="37:35">(</operator><name pos:start="37:36" pos:end="37:54">ff_parse_key_val_cb</name><operator pos:start="37:55" pos:end="37:55">)</operator> <name pos:start="37:57" pos:end="37:76">handle_digest_params</name></expr></argument>,

                               <argument pos:start="39:32" pos:end="39:36"><expr pos:start="39:32" pos:end="39:36"><name pos:start="39:32" pos:end="39:36">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="43:57"><expr pos:start="41:13" pos:end="43:56"><call pos:start="41:13" pos:end="43:56"><name pos:start="41:13" pos:end="41:22">choose_qop</name><argument_list pos:start="41:23" pos:end="43:56">(<argument pos:start="41:24" pos:end="41:47"><expr pos:start="41:24" pos:end="41:47"><name pos:start="41:24" pos:end="41:47"><name pos:start="41:24" pos:end="41:28">state</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:43">digest_params</name><operator pos:start="41:44" pos:end="41:44">.</operator><name pos:start="41:45" pos:end="41:47">qop</name></name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:55"><expr pos:start="43:24" pos:end="43:55"><sizeof pos:start="43:24" pos:end="43:55">sizeof<argument_list pos:start="43:30" pos:end="43:55">(<argument pos:start="43:31" pos:end="43:54"><expr pos:start="43:31" pos:end="43:54"><name pos:start="43:31" pos:end="43:54"><name pos:start="43:31" pos:end="43:35">state</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:50">digest_params</name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:54">qop</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:33"><if pos:start="45:13" pos:end="47:33">if <condition pos:start="45:16" pos:end="45:67">(<expr pos:start="45:17" pos:end="45:66"><operator pos:start="45:17" pos:end="45:17">!</operator><call pos:start="45:18" pos:end="45:66"><name pos:start="45:18" pos:end="45:30">av_strcasecmp</name><argument_list pos:start="45:31" pos:end="45:66">(<argument pos:start="45:32" pos:end="45:57"><expr pos:start="45:32" pos:end="45:57"><name pos:start="45:32" pos:end="45:57"><name pos:start="45:32" pos:end="45:36">state</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:51">digest_params</name><operator pos:start="45:52" pos:end="45:52">.</operator><name pos:start="45:53" pos:end="45:57">stale</name></name></expr></argument>, <argument pos:start="45:60" pos:end="45:65"><expr pos:start="45:60" pos:end="45:65"><literal type="string" pos:start="45:60" pos:end="45:65">"true"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:33"><block_content pos:start="47:17" pos:end="47:33">

                <expr_stmt pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:21">state</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:28">stale</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="57:5">else if <condition pos:start="51:15" pos:end="51:51">(<expr pos:start="51:16" pos:end="51:50"><operator pos:start="51:16" pos:end="51:16">!</operator><call pos:start="51:17" pos:end="51:50"><name pos:start="51:17" pos:end="51:22">strcmp</name><argument_list pos:start="51:23" pos:end="51:50">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">key</name></expr></argument>, <argument pos:start="51:29" pos:end="51:49"><expr pos:start="51:29" pos:end="51:49"><literal type="string" pos:start="51:29" pos:end="51:49">"Authentication-Info"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:53" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:34">

        <expr_stmt pos:start="53:9" pos:end="55:34"><expr pos:start="53:9" pos:end="55:33"><call pos:start="53:9" pos:end="55:33"><name pos:start="53:9" pos:end="53:26">ff_parse_key_value</name><argument_list pos:start="53:27" pos:end="55:33">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">value</name></expr></argument>, <argument pos:start="53:35" pos:end="53:76"><expr pos:start="53:35" pos:end="53:76"><operator pos:start="53:35" pos:end="53:35">(</operator><name pos:start="53:36" pos:end="53:54">ff_parse_key_val_cb</name><operator pos:start="53:55" pos:end="53:55">)</operator> <name pos:start="53:57" pos:end="53:76">handle_digest_update</name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:32"><expr pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:32">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
