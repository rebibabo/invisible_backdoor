<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24518.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ffm_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">FFMContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ffm</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">duration</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:21">ret</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="107:5">switch<condition pos:start="13:11" pos:end="13:27">(<expr pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:14">ffm</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:26">read_state</name></name></expr>)</condition> <block pos:start="13:29" pos:end="107:5">{<block_content pos:start="15:5" pos:end="105:14">

    <case pos:start="15:5" pos:end="15:21">case <expr pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:20">READ_HEADER</name></expr>:</case>

        <if_stmt pos:start="17:9" pos:end="19:23"><if pos:start="17:9" pos:end="19:23">if <condition pos:start="17:12" pos:end="17:66">(<expr pos:start="17:13" pos:end="17:65"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:16">ret</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:60"><name pos:start="17:20" pos:end="17:36">ffm_is_avail_data</name><argument_list pos:start="17:37" pos:end="17:60">(<argument pos:start="17:38" pos:end="17:38"><expr pos:start="17:38" pos:end="17:38"><name pos:start="17:38" pos:end="17:38">s</name></expr></argument>, <argument pos:start="17:41" pos:end="17:59"><expr pos:start="17:41" pos:end="17:59"><name pos:start="17:41" pos:end="17:57">FRAME_HEADER_SIZE</name><operator pos:start="17:58" pos:end="17:58">+</operator><literal type="number" pos:start="17:59" pos:end="17:59">4</literal></expr></argument>)</argument_list></call><operator pos:start="17:61" pos:end="17:61">)</operator> <operator pos:start="17:63" pos:end="17:63">&lt;</operator> <literal type="number" pos:start="17:65" pos:end="17:65">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:23"><block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="23:9" pos:end="25:79"><expr pos:start="23:9" pos:end="25:78"><call pos:start="23:9" pos:end="25:78"><name pos:start="23:9" pos:end="23:15">av_dlog</name><argument_list pos:start="23:16" pos:end="25:78">(<argument pos:start="23:17" pos:end="23:17"><expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">s</name></expr></argument>, <argument pos:start="23:20" pos:end="23:91"><expr pos:start="23:20" pos:end="23:91"><literal type="string" pos:start="23:20" pos:end="23:28">"pos=%08"</literal><name pos:start="23:29" pos:end="23:34">PRIx64</name><literal type="string" pos:start="23:35" pos:end="23:43">" spos=%"</literal><name pos:start="23:44" pos:end="23:49">PRIx64</name><literal type="string" pos:start="23:50" pos:end="23:66">", write_index=%"</literal><name pos:start="23:67" pos:end="23:72">PRIx64</name><literal type="string" pos:start="23:73" pos:end="23:81">" size=%"</literal><name pos:start="23:82" pos:end="23:87">PRIx64</name><literal type="string" pos:start="23:88" pos:end="23:91">"\n"</literal></expr></argument>,

               <argument pos:start="25:16" pos:end="25:31"><expr pos:start="25:16" pos:end="25:31"><call pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:24">avio_tell</name><argument_list pos:start="25:25" pos:end="25:31">(<argument pos:start="25:26" pos:end="25:30"><expr pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:30">pb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:34" pos:end="25:43"><expr pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:38">pb</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:43">pos</name></name></expr></argument>, <argument pos:start="25:46" pos:end="25:61"><expr pos:start="25:46" pos:end="25:61"><name pos:start="25:46" pos:end="25:61"><name pos:start="25:46" pos:end="25:48">ffm</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:61">write_index</name></name></expr></argument>, <argument pos:start="25:64" pos:end="25:77"><expr pos:start="25:64" pos:end="25:77"><name pos:start="25:64" pos:end="25:77"><name pos:start="25:64" pos:end="25:66">ffm</name><operator pos:start="25:67" pos:end="25:68">-&gt;</operator><name pos:start="25:69" pos:end="25:77">file_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:22"><if pos:start="27:9" pos:end="31:22">if <condition pos:start="27:12" pos:end="29:30">(<expr pos:start="27:13" pos:end="29:29"><call pos:start="27:13" pos:end="27:63"><name pos:start="27:13" pos:end="27:25">ffm_read_data</name><argument_list pos:start="27:26" pos:end="27:63">(<argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">s</name></expr></argument>, <argument pos:start="27:30" pos:end="27:40"><expr pos:start="27:30" pos:end="27:40"><name pos:start="27:30" pos:end="27:40"><name pos:start="27:30" pos:end="27:32">ffm</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:40">header</name></name></expr></argument>, <argument pos:start="27:43" pos:end="27:59"><expr pos:start="27:43" pos:end="27:59"><name pos:start="27:43" pos:end="27:59">FRAME_HEADER_SIZE</name></expr></argument>, <argument pos:start="27:62" pos:end="27:62"><expr pos:start="27:62" pos:end="27:62"><literal type="number" pos:start="27:62" pos:end="27:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="27:65" pos:end="27:66">!=</operator>

            <name pos:start="29:13" pos:end="29:29">FRAME_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:22"><block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:26"><if pos:start="33:9" pos:end="37:26">if <condition pos:start="33:12" pos:end="33:38">(<expr pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:15">ffm</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:23">header</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>]</index></name> <operator pos:start="33:28" pos:end="33:28">&amp;</operator> <name pos:start="33:30" pos:end="33:37">FLAG_DTS</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="37:26"><block_content pos:start="35:13" pos:end="37:26">

            <if_stmt pos:start="35:13" pos:end="37:26"><if pos:start="35:13" pos:end="37:26">if <condition pos:start="35:16" pos:end="35:60">(<expr pos:start="35:17" pos:end="35:59"><call pos:start="35:17" pos:end="35:54"><name pos:start="35:17" pos:end="35:29">ffm_read_data</name><argument_list pos:start="35:30" pos:end="35:54">(<argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">s</name></expr></argument>, <argument pos:start="35:34" pos:end="35:47"><expr pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:44"><name pos:start="35:34" pos:end="35:36">ffm</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:44">header</name></name><operator pos:start="35:45" pos:end="35:45">+</operator><literal type="number" pos:start="35:46" pos:end="35:47">16</literal></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><literal type="number" pos:start="35:50" pos:end="35:50">4</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:53"><expr pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:56" pos:end="35:57">!=</operator> <literal type="number" pos:start="35:59" pos:end="35:59">4</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:26"><block_content pos:start="37:17" pos:end="37:26">

                <return pos:start="37:17" pos:end="37:26">return <expr pos:start="37:24" pos:end="37:25"><operator pos:start="37:24" pos:end="37:24">-</operator><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:36"><expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:11">ffm</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:23">read_state</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:35">READ_DATA</name></expr>;</expr_stmt>

        <comment type="block" pos:start="41:9" pos:end="41:23">/* fall thru */</comment>

    <case pos:start="43:5" pos:end="43:19">case <expr pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:18">READ_DATA</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:12">size</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:39"><name pos:start="45:16" pos:end="45:22">AV_RB24</name><argument_list pos:start="45:23" pos:end="45:39">(<argument pos:start="45:24" pos:end="45:38"><expr pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:34"><name pos:start="45:24" pos:end="45:26">ffm</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:34">header</name></name> <operator pos:start="45:36" pos:end="45:36">+</operator> <literal type="number" pos:start="45:38" pos:end="45:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:23"><if pos:start="47:9" pos:end="49:23">if <condition pos:start="47:12" pos:end="47:51">(<expr pos:start="47:13" pos:end="47:50"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:16">ret</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:45"><name pos:start="47:20" pos:end="47:36">ffm_is_avail_data</name><argument_list pos:start="47:37" pos:end="47:45">(<argument pos:start="47:38" pos:end="47:38"><expr pos:start="47:38" pos:end="47:38"><name pos:start="47:38" pos:end="47:38">s</name></expr></argument>, <argument pos:start="47:41" pos:end="47:44"><expr pos:start="47:41" pos:end="47:44"><name pos:start="47:41" pos:end="47:44">size</name></expr></argument>)</argument_list></call><operator pos:start="47:46" pos:end="47:46">)</operator> <operator pos:start="47:48" pos:end="47:48">&lt;</operator> <literal type="number" pos:start="47:50" pos:end="47:50">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:23"><block_content pos:start="49:13" pos:end="49:23">

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:16">duration</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:43"><name pos:start="53:20" pos:end="53:26">AV_RB24</name><argument_list pos:start="53:27" pos:end="53:43">(<argument pos:start="53:28" pos:end="53:42"><expr pos:start="53:28" pos:end="53:42"><name pos:start="53:28" pos:end="53:38"><name pos:start="53:28" pos:end="53:30">ffm</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:38">header</name></name> <operator pos:start="53:40" pos:end="53:40">+</operator> <literal type="number" pos:start="53:42" pos:end="53:42">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:21">av_new_packet</name><argument_list pos:start="57:22" pos:end="57:32">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">pkt</name></expr></argument>, <argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:11">pkt</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:25">stream_index</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:42"><name pos:start="59:29" pos:end="59:31">ffm</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:39">header</name><index pos:start="59:40" pos:end="59:42">[<expr pos:start="59:41" pos:end="59:41"><literal type="number" pos:start="59:41" pos:end="59:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="61:57">(<expr pos:start="61:13" pos:end="61:56"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:21">unsigned</name><operator pos:start="61:22" pos:end="61:22">)</operator><name pos:start="61:23" pos:end="61:39"><name pos:start="61:23" pos:end="61:25">pkt</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:39">stream_index</name></name> <operator pos:start="61:41" pos:end="61:42">&gt;=</operator> <name pos:start="61:44" pos:end="61:56"><name pos:start="61:44" pos:end="61:44">s</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:56">nb_streams</name></name></expr>)</condition> <block pos:start="61:59" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:22">

            <expr_stmt pos:start="63:13" pos:end="63:84"><expr pos:start="63:13" pos:end="63:83"><call pos:start="63:13" pos:end="63:83"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:83">(<argument pos:start="63:20" pos:end="63:20"><expr pos:start="63:20" pos:end="63:20"><name pos:start="63:20" pos:end="63:20">s</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:37" pos:end="63:63"><expr pos:start="63:37" pos:end="63:63"><literal type="string" pos:start="63:37" pos:end="63:63">"invalid stream index %d\n"</literal></expr></argument>, <argument pos:start="63:66" pos:end="63:82"><expr pos:start="63:66" pos:end="63:82"><name pos:start="63:66" pos:end="63:82"><name pos:start="63:66" pos:end="63:68">pkt</name><operator pos:start="63:69" pos:end="63:70">-&gt;</operator><name pos:start="63:71" pos:end="63:82">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><call pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:26">av_free_packet</name><argument_list pos:start="65:27" pos:end="65:31">(<argument pos:start="65:28" pos:end="65:30"><expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:42"><expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:15">ffm</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:27">read_state</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <name pos:start="67:31" pos:end="67:41">READ_HEADER</name></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">pkt</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:16">pos</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:35"><name pos:start="73:20" pos:end="73:28">avio_tell</name><argument_list pos:start="73:29" pos:end="73:35">(<argument pos:start="73:30" pos:end="73:34"><expr pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:42"><if pos:start="75:9" pos:end="77:42">if <condition pos:start="75:12" pos:end="75:44">(<expr pos:start="75:13" pos:end="75:43"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:15">ffm</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:23">header</name><index pos:start="75:24" pos:end="75:26">[<expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">1</literal></expr>]</index></name> <operator pos:start="75:28" pos:end="75:28">&amp;</operator> <name pos:start="75:30" pos:end="75:43">FLAG_KEY_FRAME</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:42"><block_content pos:start="77:13" pos:end="77:42">

            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:15">pkt</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:22">flags</name></name> <operator pos:start="77:24" pos:end="77:25">|=</operator> <name pos:start="77:27" pos:end="77:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:11">ffm</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:23">read_state</name></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:37">READ_HEADER</name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:57">(<expr pos:start="83:13" pos:end="83:56"><call pos:start="83:13" pos:end="83:48"><name pos:start="83:13" pos:end="83:25">ffm_read_data</name><argument_list pos:start="83:26" pos:end="83:48">(<argument pos:start="83:27" pos:end="83:27"><expr pos:start="83:27" pos:end="83:27"><name pos:start="83:27" pos:end="83:27">s</name></expr></argument>, <argument pos:start="83:30" pos:end="83:38"><expr pos:start="83:30" pos:end="83:38"><name pos:start="83:30" pos:end="83:38"><name pos:start="83:30" pos:end="83:32">pkt</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:38">data</name></name></expr></argument>, <argument pos:start="83:41" pos:end="83:44"><expr pos:start="83:41" pos:end="83:44"><name pos:start="83:41" pos:end="83:44">size</name></expr></argument>, <argument pos:start="83:47" pos:end="83:47"><expr pos:start="83:47" pos:end="83:47"><literal type="number" pos:start="83:47" pos:end="83:47">0</literal></expr></argument>)</argument_list></call> <operator pos:start="83:50" pos:end="83:51">!=</operator> <name pos:start="83:53" pos:end="83:56">size</name></expr>)</condition> <block pos:start="83:59" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:22">

            <comment type="block" pos:start="85:13" pos:end="85:83">/* bad case: desynchronized packet. we cancel all the packet loading */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:32"><expr pos:start="87:13" pos:end="87:31"><call pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:26">av_free_packet</name><argument_list pos:start="87:27" pos:end="87:31">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:22">return <expr pos:start="89:20" pos:end="89:21"><operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:11">pkt</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:16">pts</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <call pos:start="93:20" pos:end="93:41"><name pos:start="93:20" pos:end="93:26">AV_RB64</name><argument_list pos:start="93:27" pos:end="93:41">(<argument pos:start="93:28" pos:end="93:40"><expr pos:start="93:28" pos:end="93:40"><name pos:start="93:28" pos:end="93:38"><name pos:start="93:28" pos:end="93:30">ffm</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:38">header</name></name><operator pos:start="93:39" pos:end="93:39">+</operator><literal type="number" pos:start="93:40" pos:end="93:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="101:32"><if pos:start="95:9" pos:end="97:58">if <condition pos:start="95:12" pos:end="95:38">(<expr pos:start="95:13" pos:end="95:37"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:15">ffm</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:23">header</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><literal type="number" pos:start="95:25" pos:end="95:25">1</literal></expr>]</index></name> <operator pos:start="95:28" pos:end="95:28">&amp;</operator> <name pos:start="95:30" pos:end="95:37">FLAG_DTS</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:58"><block_content pos:start="97:13" pos:end="97:58">

            <expr_stmt pos:start="97:13" pos:end="97:58"><expr pos:start="97:13" pos:end="97:57"><name pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:15">pkt</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:20">dts</name></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:26">pkt</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:31">pts</name></name> <operator pos:start="97:33" pos:end="97:33">-</operator> <call pos:start="97:35" pos:end="97:57"><name pos:start="97:35" pos:end="97:41">AV_RB32</name><argument_list pos:start="97:42" pos:end="97:57">(<argument pos:start="97:43" pos:end="97:56"><expr pos:start="97:43" pos:end="97:56"><name pos:start="97:43" pos:end="97:53"><name pos:start="97:43" pos:end="97:45">ffm</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:53">header</name></name><operator pos:start="97:54" pos:end="97:54">+</operator><literal type="number" pos:start="97:55" pos:end="97:56">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="99:9" pos:end="101:32">else<block type="pseudo" pos:start="101:13" pos:end="101:32"><block_content pos:start="101:13" pos:end="101:32">

            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">pkt</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:20">dts</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:31"><name pos:start="101:24" pos:end="101:26">pkt</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:31">pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:33"><expr pos:start="103:9" pos:end="103:32"><name pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:11">pkt</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:21">duration</name></name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:32">duration</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
