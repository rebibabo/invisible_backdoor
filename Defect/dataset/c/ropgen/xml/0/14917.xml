<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14917.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">rtas_ibm_write_pci_config</name><parameter_list pos:start="1:38" pos:end="7:71">(<parameter pos:start="1:39" pos:end="1:61"><decl pos:start="1:39" pos:end="1:61"><type pos:start="1:39" pos:end="1:61"><name pos:start="1:39" pos:end="1:54">sPAPREnvironment</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">spapr</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:52"><decl pos:start="3:39" pos:end="3:52"><type pos:start="3:39" pos:end="3:52"><name pos:start="3:39" pos:end="3:46">uint32_t</name></type> <name pos:start="3:48" pos:end="3:52">token</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:68"><decl pos:start="3:55" pos:end="3:68"><type pos:start="3:55" pos:end="3:68"><name pos:start="3:55" pos:end="3:62">uint32_t</name></type> <name pos:start="3:64" pos:end="3:68">nargs</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:55"><decl pos:start="5:39" pos:end="5:55"><type pos:start="5:39" pos:end="5:55"><name pos:start="5:39" pos:end="5:50">target_ulong</name></type> <name pos:start="5:52" pos:end="5:55">args</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:51"><decl pos:start="7:39" pos:end="7:51"><type pos:start="7:39" pos:end="7:51"><name pos:start="7:39" pos:end="7:46">uint32_t</name></type> <name pos:start="7:48" pos:end="7:51">nret</name></decl></parameter>, <parameter pos:start="7:54" pos:end="7:70"><decl pos:start="7:54" pos:end="7:70"><type pos:start="7:54" pos:end="7:70"><name pos:start="7:54" pos:end="7:65">target_ulong</name></type> <name pos:start="7:67" pos:end="7:70">rets</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="37:1">{<block_content pos:start="11:5" pos:end="35:24">

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">val</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:19" pos:end="11:22">size</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:25" pos:end="11:28">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:74"><decl pos:start="13:5" pos:end="13:73"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">buid</name> <init pos:start="13:19" pos:end="13:73">= <expr pos:start="13:21" pos:end="13:73"><operator pos:start="13:21" pos:end="13:21">(</operator><operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:30">uint64_t</name><operator pos:start="13:31" pos:end="13:31">)</operator><call pos:start="13:32" pos:end="13:47"><name pos:start="13:32" pos:end="13:38">rtas_ld</name><argument_list pos:start="13:39" pos:end="13:47">(<argument pos:start="13:40" pos:end="13:43"><expr pos:start="13:40" pos:end="13:43"><name pos:start="13:40" pos:end="13:43">args</name></expr></argument>, <argument pos:start="13:46" pos:end="13:46"><expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">1</literal></expr></argument>)</argument_list></call> <operator pos:start="13:49" pos:end="13:50">&lt;&lt;</operator> <literal type="number" pos:start="13:52" pos:end="13:53">32</literal><operator pos:start="13:54" pos:end="13:54">)</operator> <operator pos:start="13:56" pos:end="13:56">|</operator> <call pos:start="13:58" pos:end="13:73"><name pos:start="13:58" pos:end="13:64">rtas_ld</name><argument_list pos:start="13:65" pos:end="13:73">(<argument pos:start="13:66" pos:end="13:69"><expr pos:start="13:66" pos:end="13:69"><name pos:start="13:66" pos:end="13:69">args</name></expr></argument>, <argument pos:start="13:72" pos:end="13:72"><expr pos:start="13:72" pos:end="13:72"><literal type="number" pos:start="13:72" pos:end="13:72">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:61"><decl pos:start="15:5" pos:end="15:60"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">PCIDevice</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:18">dev</name> <init pos:start="15:20" pos:end="15:60">= <expr pos:start="15:22" pos:end="15:60"><call pos:start="15:22" pos:end="15:60"><name pos:start="15:22" pos:end="15:29">find_dev</name><argument_list pos:start="15:30" pos:end="15:60">(<argument pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35">spapr</name></expr></argument>, <argument pos:start="15:38" pos:end="15:41"><expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">buid</name></expr></argument>, <argument pos:start="15:44" pos:end="15:59"><expr pos:start="15:44" pos:end="15:59"><call pos:start="15:44" pos:end="15:59"><name pos:start="15:44" pos:end="15:50">rtas_ld</name><argument_list pos:start="15:51" pos:end="15:59">(<argument pos:start="15:52" pos:end="15:55"><expr pos:start="15:52" pos:end="15:55"><name pos:start="15:52" pos:end="15:55">args</name></expr></argument>, <argument pos:start="15:58" pos:end="15:58"><expr pos:start="15:58" pos:end="15:58"><literal type="number" pos:start="15:58" pos:end="15:58">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">dev</name></expr>)</condition> <block pos:start="19:15" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><call pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:15">rtas_st</name><argument_list pos:start="21:16" pos:end="21:28">(<argument pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:20">rets</name></expr></argument>, <argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><operator pos:start="21:26" pos:end="21:26">-</operator><literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:7">val</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:26"><name pos:start="27:11" pos:end="27:17">rtas_ld</name><argument_list pos:start="27:18" pos:end="27:26">(<argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">args</name></expr></argument>, <argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:8">size</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:27"><name pos:start="29:12" pos:end="29:18">rtas_ld</name><argument_list pos:start="29:19" pos:end="29:27">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">args</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:8">addr</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:45"><name pos:start="31:12" pos:end="31:27">rtas_pci_cfgaddr</name><argument_list pos:start="31:28" pos:end="31:45">(<argument pos:start="31:29" pos:end="31:44"><expr pos:start="31:29" pos:end="31:44"><call pos:start="31:29" pos:end="31:44"><name pos:start="31:29" pos:end="31:35">rtas_ld</name><argument_list pos:start="31:36" pos:end="31:44">(<argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">args</name></expr></argument>, <argument pos:start="31:43" pos:end="31:43"><expr pos:start="31:43" pos:end="31:43"><literal type="number" pos:start="31:43" pos:end="31:43">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:77"><expr pos:start="33:5" pos:end="33:76"><call pos:start="33:5" pos:end="33:76"><name pos:start="33:5" pos:end="33:32">pci_host_config_write_common</name><argument_list pos:start="33:33" pos:end="33:76">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">dev</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">addr</name></expr></argument>, <argument pos:start="33:45" pos:end="33:64"><expr pos:start="33:45" pos:end="33:64"><call pos:start="33:45" pos:end="33:64"><name pos:start="33:45" pos:end="33:59">pci_config_size</name><argument_list pos:start="33:60" pos:end="33:64">(<argument pos:start="33:61" pos:end="33:63"><expr pos:start="33:61" pos:end="33:63"><name pos:start="33:61" pos:end="33:63">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:67" pos:end="33:69"><expr pos:start="33:67" pos:end="33:69"><name pos:start="33:67" pos:end="33:69">val</name></expr></argument>, <argument pos:start="33:72" pos:end="33:75"><expr pos:start="33:72" pos:end="33:75"><name pos:start="33:72" pos:end="33:75">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:11">rtas_st</name><argument_list pos:start="35:12" pos:end="35:23">(<argument pos:start="35:13" pos:end="35:16"><expr pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">rets</name></expr></argument>, <argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></argument>, <argument pos:start="35:22" pos:end="35:22"><expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
