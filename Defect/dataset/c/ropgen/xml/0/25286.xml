<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25286.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:35">gen_op_mov_reg_v</name><parameter_list pos:start="1:36" pos:end="1:61">(<parameter pos:start="1:37" pos:end="1:42"><decl pos:start="1:37" pos:end="1:42"><type pos:start="1:37" pos:end="1:42"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:42">ot</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">reg</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:57">TCGv</name></type> <name pos:start="1:59" pos:end="1:60">t0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <switch pos:start="5:5" pos:end="49:5">switch<condition pos:start="5:11" pos:end="5:14">(<expr pos:start="5:12" pos:end="5:13"><name pos:start="5:12" pos:end="5:13">ot</name></expr>)</condition> <block pos:start="5:16" pos:end="49:5">{<block_content pos:start="7:5" pos:end="48:0">

    <case pos:start="7:5" pos:end="7:17">case <expr pos:start="7:10" pos:end="7:16"><name pos:start="7:10" pos:end="7:16">OT_BYTE</name></expr>:</case>

        <if_stmt pos:start="9:9" pos:end="17:9"><if pos:start="9:9" pos:end="13:9">if <condition pos:start="9:12" pos:end="9:61">(<expr pos:start="9:13" pos:end="9:60"><name pos:start="9:13" pos:end="9:15">reg</name> <operator pos:start="9:17" pos:end="9:17">&lt;</operator> <literal type="number" pos:start="9:19" pos:end="9:19">4</literal> <call pos:start="9:21" pos:end="9:60"><name pos:start="9:21" pos:end="9:30">X86_64_DEF</name><argument_list pos:start="9:31" pos:end="9:60">( <argument pos:start="9:33" pos:end="9:59"><expr pos:start="9:33" pos:end="9:59"><operator pos:start="9:33" pos:end="9:34">||</operator> <name pos:start="9:36" pos:end="9:38">reg</name> <operator pos:start="9:40" pos:end="9:41">&gt;=</operator> <literal type="number" pos:start="9:43" pos:end="9:43">8</literal> <operator pos:start="9:45" pos:end="9:46">||</operator> <name pos:start="9:48" pos:end="9:59">x86_64_hregs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:63" pos:end="13:9">{<block_content pos:start="11:13" pos:end="11:71">

            <expr_stmt pos:start="11:13" pos:end="11:71"><expr pos:start="11:13" pos:end="11:70"><call pos:start="11:13" pos:end="11:70"><name pos:start="11:13" pos:end="11:30">tcg_gen_deposit_tl</name><argument_list pos:start="11:31" pos:end="11:70">(<argument pos:start="11:32" pos:end="11:44"><expr pos:start="11:32" pos:end="11:44"><name pos:start="11:32" pos:end="11:44"><name pos:start="11:32" pos:end="11:39">cpu_regs</name><index pos:start="11:40" pos:end="11:44">[<expr pos:start="11:41" pos:end="11:43"><name pos:start="11:41" pos:end="11:43">reg</name></expr>]</index></name></expr></argument>, <argument pos:start="11:47" pos:end="11:59"><expr pos:start="11:47" pos:end="11:59"><name pos:start="11:47" pos:end="11:59"><name pos:start="11:47" pos:end="11:54">cpu_regs</name><index pos:start="11:55" pos:end="11:59">[<expr pos:start="11:56" pos:end="11:58"><name pos:start="11:56" pos:end="11:58">reg</name></expr>]</index></name></expr></argument>, <argument pos:start="11:62" pos:end="11:63"><expr pos:start="11:62" pos:end="11:63"><name pos:start="11:62" pos:end="11:63">t0</name></expr></argument>, <argument pos:start="11:66" pos:end="11:66"><expr pos:start="11:66" pos:end="11:66"><literal type="number" pos:start="11:66" pos:end="11:66">0</literal></expr></argument>, <argument pos:start="11:69" pos:end="11:69"><expr pos:start="11:69" pos:end="11:69"><literal type="number" pos:start="11:69" pos:end="11:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="13:11" pos:end="17:9">else <block pos:start="13:16" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:79">

            <expr_stmt pos:start="15:13" pos:end="15:79"><expr pos:start="15:13" pos:end="15:78"><call pos:start="15:13" pos:end="15:78"><name pos:start="15:13" pos:end="15:30">tcg_gen_deposit_tl</name><argument_list pos:start="15:31" pos:end="15:78">(<argument pos:start="15:32" pos:end="15:48"><expr pos:start="15:32" pos:end="15:48"><name pos:start="15:32" pos:end="15:48"><name pos:start="15:32" pos:end="15:39">cpu_regs</name><index pos:start="15:40" pos:end="15:48">[<expr pos:start="15:41" pos:end="15:47"><name pos:start="15:41" pos:end="15:43">reg</name> <operator pos:start="15:45" pos:end="15:45">-</operator> <literal type="number" pos:start="15:47" pos:end="15:47">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="15:51" pos:end="15:67"><expr pos:start="15:51" pos:end="15:67"><name pos:start="15:51" pos:end="15:67"><name pos:start="15:51" pos:end="15:58">cpu_regs</name><index pos:start="15:59" pos:end="15:67">[<expr pos:start="15:60" pos:end="15:66"><name pos:start="15:60" pos:end="15:62">reg</name> <operator pos:start="15:64" pos:end="15:64">-</operator> <literal type="number" pos:start="15:66" pos:end="15:66">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="15:70" pos:end="15:71"><expr pos:start="15:70" pos:end="15:71"><name pos:start="15:70" pos:end="15:71">t0</name></expr></argument>, <argument pos:start="15:74" pos:end="15:74"><expr pos:start="15:74" pos:end="15:74"><literal type="number" pos:start="15:74" pos:end="15:74">8</literal></expr></argument>, <argument pos:start="15:77" pos:end="15:77"><expr pos:start="15:77" pos:end="15:77"><literal type="number" pos:start="15:77" pos:end="15:77">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:17">case <expr pos:start="21:10" pos:end="21:16"><name pos:start="21:10" pos:end="21:16">OT_WORD</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:68"><expr pos:start="23:9" pos:end="23:67"><call pos:start="23:9" pos:end="23:67"><name pos:start="23:9" pos:end="23:26">tcg_gen_deposit_tl</name><argument_list pos:start="23:27" pos:end="23:67">(<argument pos:start="23:28" pos:end="23:40"><expr pos:start="23:28" pos:end="23:40"><name pos:start="23:28" pos:end="23:40"><name pos:start="23:28" pos:end="23:35">cpu_regs</name><index pos:start="23:36" pos:end="23:40">[<expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">reg</name></expr>]</index></name></expr></argument>, <argument pos:start="23:43" pos:end="23:55"><expr pos:start="23:43" pos:end="23:55"><name pos:start="23:43" pos:end="23:55"><name pos:start="23:43" pos:end="23:50">cpu_regs</name><index pos:start="23:51" pos:end="23:55">[<expr pos:start="23:52" pos:end="23:54"><name pos:start="23:52" pos:end="23:54">reg</name></expr>]</index></name></expr></argument>, <argument pos:start="23:58" pos:end="23:59"><expr pos:start="23:58" pos:end="23:59"><name pos:start="23:58" pos:end="23:59">t0</name></expr></argument>, <argument pos:start="23:62" pos:end="23:62"><expr pos:start="23:62" pos:end="23:62"><literal type="number" pos:start="23:62" pos:end="23:62">0</literal></expr></argument>, <argument pos:start="23:65" pos:end="23:66"><expr pos:start="23:65" pos:end="23:66"><literal type="number" pos:start="23:65" pos:end="23:66">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <default pos:start="27:5" pos:end="27:12">default:</default> <comment type="block" pos:start="27:14" pos:end="27:57">/* XXX this shouldn't be reached;  abort? */</comment>

    <case pos:start="29:5" pos:end="29:17">case <expr pos:start="29:10" pos:end="29:16"><name pos:start="29:10" pos:end="29:16">OT_LONG</name></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="33:52">/* For x86_64, this sets the higher half of register to zero.

           For i386, this is equivalent to a mov. */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><call pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:25">tcg_gen_ext32u_tl</name><argument_list pos:start="35:26" pos:end="35:44">(<argument pos:start="35:27" pos:end="35:39"><expr pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:34">cpu_regs</name><index pos:start="35:35" pos:end="35:39">[<expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:38">reg</name></expr>]</index></name></expr></argument>, <argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><name pos:start="35:42" pos:end="35:43">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="40:0">break;</break>

<cpp:ifdef pos:start="39:1" pos:end="39:20">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:20">TARGET_X86_64</name></cpp:ifdef>

    <case pos:start="41:5" pos:end="41:17">case <expr pos:start="41:10" pos:end="41:16"><name pos:start="41:10" pos:end="41:16">OT_QUAD</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:22">tcg_gen_mov_tl</name><argument_list pos:start="43:23" pos:end="43:41">(<argument pos:start="43:24" pos:end="43:36"><expr pos:start="43:24" pos:end="43:36"><name pos:start="43:24" pos:end="43:36"><name pos:start="43:24" pos:end="43:31">cpu_regs</name><index pos:start="43:32" pos:end="43:36">[<expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">reg</name></expr>]</index></name></expr></argument>, <argument pos:start="43:39" pos:end="43:40"><expr pos:start="43:39" pos:end="43:40"><name pos:start="43:39" pos:end="43:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="48:0">break;</break>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
