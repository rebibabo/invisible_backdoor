<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24869.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">segment_start</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">seg</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:34">= <expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">seg</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:33"><if pos:start="13:5" pos:end="15:33">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">seg</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">wrap</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:33"><block_content pos:start="15:9" pos:end="15:33">

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">seg</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">number</name></name> <operator pos:start="15:21" pos:end="15:22">%=</operator> <name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:26">seg</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">wrap</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="23:31"><if pos:start="19:5" pos:end="23:31">if <condition pos:start="19:8" pos:end="21:62">(<expr pos:start="19:9" pos:end="21:61"><call pos:start="19:9" pos:end="21:57"><name pos:start="19:9" pos:end="19:29">av_get_frame_filename</name><argument_list pos:start="19:30" pos:end="21:57">(<argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:32">oc</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:42">filename</name></name></expr></argument>, <argument pos:start="19:45" pos:end="19:64"><expr pos:start="19:45" pos:end="19:64"><sizeof pos:start="19:45" pos:end="19:64">sizeof<argument_list pos:start="19:51" pos:end="19:64">(<argument pos:start="19:52" pos:end="19:63"><expr pos:start="19:52" pos:end="19:63"><name pos:start="19:52" pos:end="19:63"><name pos:start="19:52" pos:end="19:53">oc</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:63">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                              <argument pos:start="21:31" pos:end="21:41"><expr pos:start="21:31" pos:end="21:41"><name pos:start="21:31" pos:end="21:41"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:41">filename</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:56"><expr pos:start="21:44" pos:end="21:56"><name pos:start="21:44" pos:end="21:54"><name pos:start="21:44" pos:end="21:46">seg</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:54">number</name></name><operator pos:start="21:55" pos:end="21:56">++</operator></expr></argument>)</argument_list></call> <operator pos:start="21:59" pos:end="21:59">&lt;</operator> <literal type="number" pos:start="21:61" pos:end="21:61">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:19"><if pos:start="27:5" pos:end="31:19">if <condition pos:start="27:8" pos:end="29:61">(<expr pos:start="27:9" pos:end="29:60"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">err</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="29:55"><name pos:start="27:16" pos:end="27:25">avio_open2</name><argument_list pos:start="27:26" pos:end="29:55">(<argument pos:start="27:27" pos:end="27:33"><expr pos:start="27:27" pos:end="27:33"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:33"><name pos:start="27:28" pos:end="27:29">oc</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">pb</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:47"><expr pos:start="27:36" pos:end="27:47"><name pos:start="27:36" pos:end="27:47"><name pos:start="27:36" pos:end="27:37">oc</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:47">filename</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:64"><expr pos:start="27:50" pos:end="27:64"><name pos:start="27:50" pos:end="27:64">AVIO_FLAG_WRITE</name></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:48"><expr pos:start="29:27" pos:end="29:48"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:48"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:48">interrupt_callback</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:54"><expr pos:start="29:51" pos:end="29:54"><name pos:start="29:51" pos:end="29:54">NULL</name></expr></argument>)</argument_list></call><operator pos:start="29:56" pos:end="29:56">)</operator> <operator pos:start="29:58" pos:end="29:58">&lt;</operator> <literal type="number" pos:start="29:60" pos:end="29:60">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="55:5"><if pos:start="35:5" pos:end="55:5">if <condition pos:start="35:8" pos:end="35:58">(<expr pos:start="35:9" pos:end="35:57"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:11">oc</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">priv_data</name></name> <operator pos:start="35:24" pos:end="35:25">&amp;&amp;</operator> <name pos:start="35:27" pos:end="35:53"><name pos:start="35:27" pos:end="35:28">oc</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:37">oformat</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:53">priv_data_size</name></name> <operator pos:start="35:55" pos:end="35:55">&gt;</operator> <literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr>)</condition> <block pos:start="35:60" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:9">

        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:10">oc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:21">priv_data</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:63"><name pos:start="37:25" pos:end="37:34">av_mallocz</name><argument_list pos:start="37:35" pos:end="37:63">(<argument pos:start="37:36" pos:end="37:62"><expr pos:start="37:36" pos:end="37:62"><name pos:start="37:36" pos:end="37:62"><name pos:start="37:36" pos:end="37:37">oc</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:46">oformat</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:62">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:27">(<expr pos:start="39:13" pos:end="39:26"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:15">oc</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:26">priv_data</name></name></expr>)</condition> <block pos:start="39:29" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:35">

            <expr_stmt pos:start="41:13" pos:end="41:31"><expr pos:start="41:13" pos:end="41:30"><call pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:22">avio_close</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:25">oc</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:35">return <expr pos:start="43:20" pos:end="43:34"><call pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:26">AVERROR</name><argument_list pos:start="43:27" pos:end="43:34">(<argument pos:start="43:28" pos:end="43:33"><expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:36">(<expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:14">oc</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:23">oformat</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:35">priv_class</name></name></expr>)</condition> <block pos:start="47:38" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:47">

            <expr_stmt pos:start="49:13" pos:end="49:70"><expr pos:start="49:13" pos:end="49:69"><operator pos:start="49:13" pos:end="49:13">*</operator><operator pos:start="49:14" pos:end="49:14">(</operator><specifier pos:start="49:15" pos:end="49:19">const</specifier> <name pos:start="49:21" pos:end="49:27">AVClass</name><operator pos:start="49:28" pos:end="49:28">*</operator><operator pos:start="49:29" pos:end="49:29">*</operator><operator pos:start="49:30" pos:end="49:30">)</operator><name pos:start="49:31" pos:end="49:43"><name pos:start="49:31" pos:end="49:32">oc</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:43">priv_data</name></name> <operator pos:start="49:45" pos:end="49:45">=</operator> <name pos:start="49:47" pos:end="49:69"><name pos:start="49:47" pos:end="49:48">oc</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:57">oformat</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:69">priv_class</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:47"><expr pos:start="51:13" pos:end="51:46"><call pos:start="51:13" pos:end="51:46"><name pos:start="51:13" pos:end="51:31">av_opt_set_defaults</name><argument_list pos:start="51:32" pos:end="51:46">(<argument pos:start="51:33" pos:end="51:45"><expr pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:34">oc</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:45">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:50">(<expr pos:start="59:9" pos:end="59:49"><operator pos:start="59:9" pos:end="59:9">(</operator><name pos:start="59:10" pos:end="59:12">err</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:44"><name pos:start="59:16" pos:end="59:40"><name pos:start="59:16" pos:end="59:17">oc</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:26">oformat</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:40">write_header</name></name><argument_list pos:start="59:41" pos:end="59:44">(<argument pos:start="59:42" pos:end="59:43"><expr pos:start="59:42" pos:end="59:43"><name pos:start="59:42" pos:end="59:43">oc</name></expr></argument>)</argument_list></call><operator pos:start="59:45" pos:end="59:45">)</operator> <operator pos:start="59:47" pos:end="59:47">&lt;</operator> <literal type="number" pos:start="59:49" pos:end="59:49">0</literal></expr>)</condition> <block pos:start="59:52" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:18">

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>



<label pos:start="71:1" pos:end="71:5"><name pos:start="71:1" pos:end="71:4">fail</name>:</label>

    <expr_stmt pos:start="73:5" pos:end="75:25"><expr pos:start="73:5" pos:end="75:24"><call pos:start="73:5" pos:end="75:24"><name pos:start="73:5" pos:end="73:10">av_log</name><argument_list pos:start="73:11" pos:end="75:24">(<argument pos:start="73:12" pos:end="73:13"><expr pos:start="73:12" pos:end="73:13"><name pos:start="73:12" pos:end="73:13">oc</name></expr></argument>, <argument pos:start="73:16" pos:end="73:27"><expr pos:start="73:16" pos:end="73:27"><name pos:start="73:16" pos:end="73:27">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:30" pos:end="73:76"><expr pos:start="73:30" pos:end="73:76"><literal type="string" pos:start="73:30" pos:end="73:76">"Failure occurred when starting segment '%s'\n"</literal></expr></argument>,

           <argument pos:start="75:12" pos:end="75:23"><expr pos:start="75:12" pos:end="75:23"><name pos:start="75:12" pos:end="75:23"><name pos:start="75:12" pos:end="75:13">oc</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:14">avio_close</name><argument_list pos:start="77:15" pos:end="77:22">(<argument pos:start="77:16" pos:end="77:21"><expr pos:start="77:16" pos:end="77:21"><name pos:start="77:16" pos:end="77:21"><name pos:start="77:16" pos:end="77:17">oc</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:21">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><call pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:12">av_freep</name><argument_list pos:start="79:13" pos:end="79:28">(<argument pos:start="79:14" pos:end="79:27"><expr pos:start="79:14" pos:end="79:27"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:27"><name pos:start="79:15" pos:end="79:16">oc</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:27">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
