<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17151.c" pos:tabs="8"><function pos:start="1:1" pos:end="311:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">bdrv_open</name><parameter_list pos:start="1:14" pos:end="3:42">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><name pos:start="1:15" pos:end="1:30">BlockDriverState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">bs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:63">QDict</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:72">options</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:23"><decl pos:start="3:15" pos:end="3:23"><type pos:start="3:15" pos:end="3:23"><name pos:start="3:15" pos:end="3:17">int</name></type> <name pos:start="3:19" pos:end="3:23">flags</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:36">BlockDriver</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="311:1">{<block_content pos:start="7:5" pos:end="309:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:73">/* TODO: extra byte is a hack to ensure MAX_PATH space on Windows. */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:21">tmp_filename</name><index pos:start="11:22" pos:end="11:35">[<expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:30">PATH_MAX</name> <operator pos:start="11:32" pos:end="11:32">+</operator> <literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">BlockDriverState</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:26">file</name> <init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:15">options</name> <operator pos:start="19:17" pos:end="19:18">==</operator> <name pos:start="19:20" pos:end="19:23">NULL</name></expr>)</condition> <block pos:start="19:26" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:15">options</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:29"><name pos:start="21:19" pos:end="21:27">qdict_new</name><argument_list pos:start="21:28" pos:end="21:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:6">bs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:15">options</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:11">options</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:42"><name pos:start="29:15" pos:end="29:33">qdict_clone_shallow</name><argument_list pos:start="29:34" pos:end="29:42">(<argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:59">/* For snapshot=on, create a temporary qcow2 overlay */</comment>

    <if_stmt pos:start="35:5" pos:end="151:5"><if pos:start="35:5" pos:end="151:5">if <condition pos:start="35:8" pos:end="35:32">(<expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:13">flags</name> <operator pos:start="35:15" pos:end="35:15">&amp;</operator> <name pos:start="35:17" pos:end="35:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="35:34" pos:end="151:5">{<block_content pos:start="37:9" pos:end="149:29">

        <decl_stmt pos:start="37:9" pos:end="37:30"><decl pos:start="37:9" pos:end="37:29"><type pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:24">BlockDriverState</name> <modifier pos:start="37:26" pos:end="37:26">*</modifier></type><name pos:start="37:27" pos:end="37:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:27"><decl pos:start="39:9" pos:end="39:26"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">int64_t</name></type> <name pos:start="39:17" pos:end="39:26">total_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:28"><decl pos:start="41:9" pos:end="41:27"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:23">is_protocol</name> <init pos:start="41:25" pos:end="41:27">= <expr pos:start="41:27" pos:end="41:27"><literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:32"><decl pos:start="43:9" pos:end="43:31"><type pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:19">BlockDriver</name> <modifier pos:start="43:21" pos:end="43:21">*</modifier></type><name pos:start="43:22" pos:end="43:31">bdrv_qcow2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:37"><decl pos:start="45:9" pos:end="45:36"><type pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:27">QEMUOptionParameter</name> <modifier pos:start="45:29" pos:end="45:29">*</modifier></type><name pos:start="45:30" pos:end="45:36">options</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:40"><decl pos:start="47:9" pos:end="47:39"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">char</name></type> <name pos:start="47:14" pos:end="47:39"><name pos:start="47:14" pos:end="47:29">backing_filename</name><index pos:start="47:30" pos:end="47:39">[<expr pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



        <comment type="block" pos:start="51:9" pos:end="53:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="57:9" pos:end="57:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:27"><expr pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:11">bs1</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:26"><name pos:start="59:15" pos:end="59:22">bdrv_new</name><argument_list pos:start="59:23" pos:end="59:26">(<argument pos:start="59:24" pos:end="59:25"><expr pos:start="59:24" pos:end="59:25"><literal type="string" pos:start="59:24" pos:end="59:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:52"><name pos:start="61:15" pos:end="61:23">bdrv_open</name><argument_list pos:start="61:24" pos:end="61:52">(<argument pos:start="61:25" pos:end="61:27"><expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">bs1</name></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:37">filename</name></expr></argument>, <argument pos:start="61:40" pos:end="61:43"><expr pos:start="61:40" pos:end="61:43"><name pos:start="61:40" pos:end="61:43">NULL</name></expr></argument>, <argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr></argument>, <argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:51">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition> <block pos:start="63:22" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:29"><expr pos:start="65:13" pos:end="65:28"><call pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:23">bdrv_delete</name><argument_list pos:start="65:24" pos:end="65:28">(<argument pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:22">goto <name pos:start="67:18" pos:end="67:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:60"><expr pos:start="71:9" pos:end="71:59"><name pos:start="71:9" pos:end="71:18">total_size</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <call pos:start="71:22" pos:end="71:40"><name pos:start="71:22" pos:end="71:35">bdrv_getlength</name><argument_list pos:start="71:36" pos:end="71:40">(<argument pos:start="71:37" pos:end="71:39"><expr pos:start="71:37" pos:end="71:39"><name pos:start="71:37" pos:end="71:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="71:42" pos:end="71:42">&amp;</operator> <name pos:start="71:44" pos:end="71:59">BDRV_SECTOR_MASK</name></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="77:28"><if pos:start="75:9" pos:end="77:28">if <condition pos:start="75:12" pos:end="75:48">(<expr pos:start="75:13" pos:end="75:47"><name pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:15">bs1</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:20">drv</name></name> <operator pos:start="75:22" pos:end="75:23">&amp;&amp;</operator> <name pos:start="75:25" pos:end="75:47"><name pos:start="75:25" pos:end="75:27">bs1</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:32">drv</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:47">protocol_name</name></name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:28"><block_content pos:start="77:13" pos:end="77:28">

            <expr_stmt pos:start="77:13" pos:end="77:28"><expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:23">is_protocol</name> <operator pos:start="77:25" pos:end="77:25">=</operator> <literal type="number" pos:start="77:27" pos:end="77:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:25"><expr pos:start="81:9" pos:end="81:24"><call pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:19">bdrv_delete</name><argument_list pos:start="81:20" pos:end="81:24">(<argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:67"><expr pos:start="85:9" pos:end="85:66"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:66"><name pos:start="85:15" pos:end="85:30">get_tmp_filename</name><argument_list pos:start="85:31" pos:end="85:66">(<argument pos:start="85:32" pos:end="85:43"><expr pos:start="85:32" pos:end="85:43"><name pos:start="85:32" pos:end="85:43">tmp_filename</name></expr></argument>, <argument pos:start="85:46" pos:end="85:65"><expr pos:start="85:46" pos:end="85:65"><sizeof pos:start="85:46" pos:end="85:65">sizeof<argument_list pos:start="85:52" pos:end="85:65">(<argument pos:start="85:53" pos:end="85:64"><expr pos:start="85:53" pos:end="85:64"><name pos:start="85:53" pos:end="85:64">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:20">(<expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">&lt;</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr>)</condition> <block pos:start="87:22" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:22">

            <goto pos:start="89:13" pos:end="89:22">goto <name pos:start="89:18" pos:end="89:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="95:9" pos:end="95:52">/* Real path is meaningless for protocols */</comment>

        <if_stmt pos:start="97:9" pos:end="109:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:23">is_protocol</name></expr>)</condition> <block pos:start="97:26" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:37">

            <expr_stmt pos:start="99:13" pos:end="101:37"><expr pos:start="99:13" pos:end="101:36"><call pos:start="99:13" pos:end="101:36"><name pos:start="99:13" pos:end="99:20">snprintf</name><argument_list pos:start="99:21" pos:end="101:36">(<argument pos:start="99:22" pos:end="99:37"><expr pos:start="99:22" pos:end="99:37"><name pos:start="99:22" pos:end="99:37">backing_filename</name></expr></argument>, <argument pos:start="99:40" pos:end="99:63"><expr pos:start="99:40" pos:end="99:63"><sizeof pos:start="99:40" pos:end="99:63">sizeof<argument_list pos:start="99:46" pos:end="99:63">(<argument pos:start="99:47" pos:end="99:62"><expr pos:start="99:47" pos:end="99:62"><name pos:start="99:47" pos:end="99:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="101:22" pos:end="101:25"><expr pos:start="101:22" pos:end="101:25"><literal type="string" pos:start="101:22" pos:end="101:25">"%s"</literal></expr></argument>, <argument pos:start="101:28" pos:end="101:35"><expr pos:start="101:28" pos:end="101:35"><name pos:start="101:28" pos:end="101:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="103:11" pos:end="109:9">else if <condition pos:start="103:19" pos:end="103:57">(<expr pos:start="103:20" pos:end="103:56"><operator pos:start="103:20" pos:end="103:20">!</operator><call pos:start="103:21" pos:end="103:56"><name pos:start="103:21" pos:end="103:28">realpath</name><argument_list pos:start="103:29" pos:end="103:56">(<argument pos:start="103:30" pos:end="103:37"><expr pos:start="103:30" pos:end="103:37"><name pos:start="103:30" pos:end="103:37">filename</name></expr></argument>, <argument pos:start="103:40" pos:end="103:55"><expr pos:start="103:40" pos:end="103:55"><name pos:start="103:40" pos:end="103:55">backing_filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:59" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:22">

            <expr_stmt pos:start="105:13" pos:end="105:25"><expr pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <operator pos:start="105:19" pos:end="105:19">-</operator><name pos:start="105:20" pos:end="105:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="107:13" pos:end="107:22">goto <name pos:start="107:18" pos:end="107:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:47"><expr pos:start="113:9" pos:end="113:46"><name pos:start="113:9" pos:end="113:18">bdrv_qcow2</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:46"><name pos:start="113:22" pos:end="113:37">bdrv_find_format</name><argument_list pos:start="113:38" pos:end="113:46">(<argument pos:start="113:39" pos:end="113:45"><expr pos:start="113:39" pos:end="113:45"><literal type="string" pos:start="113:39" pos:end="113:45">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:80"><expr pos:start="115:9" pos:end="115:79"><name pos:start="115:9" pos:end="115:15">options</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:79"><name pos:start="115:19" pos:end="115:41">parse_option_parameters</name><argument_list pos:start="115:42" pos:end="115:79">(<argument pos:start="115:43" pos:end="115:44"><expr pos:start="115:43" pos:end="115:44"><literal type="string" pos:start="115:43" pos:end="115:44">""</literal></expr></argument>, <argument pos:start="115:47" pos:end="115:72"><expr pos:start="115:47" pos:end="115:72"><name pos:start="115:47" pos:end="115:72"><name pos:start="115:47" pos:end="115:56">bdrv_qcow2</name><operator pos:start="115:57" pos:end="115:58">-&gt;</operator><name pos:start="115:59" pos:end="115:72">create_options</name></name></expr></argument>, <argument pos:start="115:75" pos:end="115:78"><expr pos:start="115:75" pos:end="115:78"><name pos:start="115:75" pos:end="115:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:70"><expr pos:start="119:9" pos:end="119:69"><call pos:start="119:9" pos:end="119:69"><name pos:start="119:9" pos:end="119:32">set_option_parameter_int</name><argument_list pos:start="119:33" pos:end="119:69">(<argument pos:start="119:34" pos:end="119:40"><expr pos:start="119:34" pos:end="119:40"><name pos:start="119:34" pos:end="119:40">options</name></expr></argument>, <argument pos:start="119:43" pos:end="119:56"><expr pos:start="119:43" pos:end="119:56"><name pos:start="119:43" pos:end="119:56">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="119:59" pos:end="119:68"><expr pos:start="119:59" pos:end="119:68"><name pos:start="119:59" pos:end="119:68">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:80"><expr pos:start="121:9" pos:end="121:79"><call pos:start="121:9" pos:end="121:79"><name pos:start="121:9" pos:end="121:28">set_option_parameter</name><argument_list pos:start="121:29" pos:end="121:79">(<argument pos:start="121:30" pos:end="121:36"><expr pos:start="121:30" pos:end="121:36"><name pos:start="121:30" pos:end="121:36">options</name></expr></argument>, <argument pos:start="121:39" pos:end="121:60"><expr pos:start="121:39" pos:end="121:60"><name pos:start="121:39" pos:end="121:60">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="121:63" pos:end="121:78"><expr pos:start="121:63" pos:end="121:78"><name pos:start="121:63" pos:end="121:78">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:16">(<expr pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">drv</name></expr>)</condition> <block pos:start="123:18" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:34">

            <expr_stmt pos:start="125:13" pos:end="127:34"><expr pos:start="125:13" pos:end="127:33"><call pos:start="125:13" pos:end="127:33"><name pos:start="125:13" pos:end="125:32">set_option_parameter</name><argument_list pos:start="125:33" pos:end="127:33">(<argument pos:start="125:34" pos:end="125:40"><expr pos:start="125:34" pos:end="125:40"><name pos:start="125:34" pos:end="125:40">options</name></expr></argument>, <argument pos:start="125:43" pos:end="125:63"><expr pos:start="125:43" pos:end="125:63"><name pos:start="125:43" pos:end="125:63">BLOCK_OPT_BACKING_FMT</name></expr></argument>,

                <argument pos:start="127:17" pos:end="127:32"><expr pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:19">drv</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:32">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:61"><expr pos:start="133:9" pos:end="133:60"><name pos:start="133:9" pos:end="133:11">ret</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:60"><name pos:start="133:15" pos:end="133:25">bdrv_create</name><argument_list pos:start="133:26" pos:end="133:60">(<argument pos:start="133:27" pos:end="133:36"><expr pos:start="133:27" pos:end="133:36"><name pos:start="133:27" pos:end="133:36">bdrv_qcow2</name></expr></argument>, <argument pos:start="133:39" pos:end="133:50"><expr pos:start="133:39" pos:end="133:50"><name pos:start="133:39" pos:end="133:50">tmp_filename</name></expr></argument>, <argument pos:start="133:53" pos:end="133:59"><expr pos:start="133:53" pos:end="133:59"><name pos:start="133:53" pos:end="133:59">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:40"><expr pos:start="135:9" pos:end="135:39"><call pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:30">free_option_parameters</name><argument_list pos:start="135:31" pos:end="135:39">(<argument pos:start="135:32" pos:end="135:38"><expr pos:start="135:32" pos:end="135:38"><name pos:start="135:32" pos:end="135:38">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="141:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:20">(<expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">&lt;</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>)</condition> <block pos:start="137:22" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:22">

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:32"><expr pos:start="145:9" pos:end="145:31"><name pos:start="145:9" pos:end="145:16">filename</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:25"><expr pos:start="147:9" pos:end="147:24"><name pos:start="147:9" pos:end="147:11">drv</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <name pos:start="147:15" pos:end="147:24">bdrv_qcow2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:29"><expr pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:10">bs</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:24">is_temporary</name></name> <operator pos:start="149:26" pos:end="149:26">=</operator> <literal type="number" pos:start="149:28" pos:end="149:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:46">/* Open image file without format layer */</comment>

    <if_stmt pos:start="157:5" pos:end="161:5"><if pos:start="157:5" pos:end="161:5">if <condition pos:start="157:8" pos:end="157:28">(<expr pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:13">flags</name> <operator pos:start="157:15" pos:end="157:15">&amp;</operator> <name pos:start="157:17" pos:end="157:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="157:30" pos:end="161:5">{<block_content pos:start="159:9" pos:end="159:35">

        <expr_stmt pos:start="159:9" pos:end="159:35"><expr pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:13">flags</name> <operator pos:start="159:15" pos:end="159:16">|=</operator> <name pos:start="159:18" pos:end="159:34">BDRV_O_ALLOW_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:70"><expr pos:start="165:5" pos:end="165:69"><name pos:start="165:5" pos:end="165:7">ret</name> <operator pos:start="165:9" pos:end="165:9">=</operator> <call pos:start="165:11" pos:end="165:69"><name pos:start="165:11" pos:end="165:24">bdrv_file_open</name><argument_list pos:start="165:25" pos:end="165:69">(<argument pos:start="165:26" pos:end="165:30"><expr pos:start="165:26" pos:end="165:30"><operator pos:start="165:26" pos:end="165:26">&amp;</operator><name pos:start="165:27" pos:end="165:30">file</name></expr></argument>, <argument pos:start="165:33" pos:end="165:40"><expr pos:start="165:33" pos:end="165:40"><name pos:start="165:33" pos:end="165:40">filename</name></expr></argument>, <argument pos:start="165:43" pos:end="165:68"><expr pos:start="165:43" pos:end="165:68"><call pos:start="165:43" pos:end="165:68"><name pos:start="165:43" pos:end="165:57">bdrv_open_flags</name><argument_list pos:start="165:58" pos:end="165:68">(<argument pos:start="165:59" pos:end="165:60"><expr pos:start="165:59" pos:end="165:60"><name pos:start="165:59" pos:end="165:60">bs</name></expr></argument>, <argument pos:start="165:63" pos:end="165:67"><expr pos:start="165:63" pos:end="165:67"><name pos:start="165:63" pos:end="165:67">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="171:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:16">(<expr pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">&lt;</operator> <literal type="number" pos:start="167:15" pos:end="167:15">0</literal></expr>)</condition> <block pos:start="167:18" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:18">

        <goto pos:start="169:9" pos:end="169:18">goto <name pos:start="169:14" pos:end="169:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="175:5" pos:end="175:44">/* Find the right image format driver */</comment>

    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:13">(<expr pos:start="177:9" pos:end="177:12"><operator pos:start="177:9" pos:end="177:9">!</operator><name pos:start="177:10" pos:end="177:12">drv</name></expr>)</condition> <block pos:start="177:15" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:54">

        <expr_stmt pos:start="179:9" pos:end="179:54"><expr pos:start="179:9" pos:end="179:53"><name pos:start="179:9" pos:end="179:11">ret</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:53"><name pos:start="179:15" pos:end="179:31">find_image_format</name><argument_list pos:start="179:32" pos:end="179:53">(<argument pos:start="179:33" pos:end="179:36"><expr pos:start="179:33" pos:end="179:36"><name pos:start="179:33" pos:end="179:36">file</name></expr></argument>, <argument pos:start="179:39" pos:end="179:46"><expr pos:start="179:39" pos:end="179:46"><name pos:start="179:39" pos:end="179:46">filename</name></expr></argument>, <argument pos:start="179:49" pos:end="179:52"><expr pos:start="179:49" pos:end="179:52"><operator pos:start="179:49" pos:end="179:49">&amp;</operator><name pos:start="179:50" pos:end="179:52">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="189:5"><if pos:start="185:5" pos:end="189:5">if <condition pos:start="185:8" pos:end="185:13">(<expr pos:start="185:9" pos:end="185:12"><operator pos:start="185:9" pos:end="185:9">!</operator><name pos:start="185:10" pos:end="185:12">drv</name></expr>)</condition> <block pos:start="185:15" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:29">

        <goto pos:start="187:9" pos:end="187:29">goto <name pos:start="187:14" pos:end="187:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="193:5" pos:end="193:24">/* Open the image */</comment>

    <expr_stmt pos:start="195:5" pos:end="195:68"><expr pos:start="195:5" pos:end="195:67"><name pos:start="195:5" pos:end="195:7">ret</name> <operator pos:start="195:9" pos:end="195:9">=</operator> <call pos:start="195:11" pos:end="195:67"><name pos:start="195:11" pos:end="195:26">bdrv_open_common</name><argument_list pos:start="195:27" pos:end="195:67">(<argument pos:start="195:28" pos:end="195:29"><expr pos:start="195:28" pos:end="195:29"><name pos:start="195:28" pos:end="195:29">bs</name></expr></argument>, <argument pos:start="195:32" pos:end="195:35"><expr pos:start="195:32" pos:end="195:35"><name pos:start="195:32" pos:end="195:35">file</name></expr></argument>, <argument pos:start="195:38" pos:end="195:45"><expr pos:start="195:38" pos:end="195:45"><name pos:start="195:38" pos:end="195:45">filename</name></expr></argument>, <argument pos:start="195:48" pos:end="195:54"><expr pos:start="195:48" pos:end="195:54"><name pos:start="195:48" pos:end="195:54">options</name></expr></argument>, <argument pos:start="195:57" pos:end="195:61"><expr pos:start="195:57" pos:end="195:61"><name pos:start="195:57" pos:end="195:61">flags</name></expr></argument>, <argument pos:start="195:64" pos:end="195:66"><expr pos:start="195:64" pos:end="195:66"><name pos:start="195:64" pos:end="195:66">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="201:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:16">(<expr pos:start="197:9" pos:end="197:15"><name pos:start="197:9" pos:end="197:11">ret</name> <operator pos:start="197:13" pos:end="197:13">&lt;</operator> <literal type="number" pos:start="197:15" pos:end="197:15">0</literal></expr>)</condition> <block pos:start="197:18" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:29">

        <goto pos:start="199:9" pos:end="199:29">goto <name pos:start="199:14" pos:end="199:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:25">(<expr pos:start="205:9" pos:end="205:24"><name pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:10">bs</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:16">file</name></name> <operator pos:start="205:18" pos:end="205:19">!=</operator> <name pos:start="205:21" pos:end="205:24">file</name></expr>)</condition> <block pos:start="205:27" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:20">

        <expr_stmt pos:start="207:9" pos:end="207:26"><expr pos:start="207:9" pos:end="207:25"><call pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:19">bdrv_delete</name><argument_list pos:start="207:20" pos:end="207:25">(<argument pos:start="207:21" pos:end="207:24"><expr pos:start="207:21" pos:end="207:24"><name pos:start="207:21" pos:end="207:24">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:20"><expr pos:start="209:9" pos:end="209:19"><name pos:start="209:9" pos:end="209:12">file</name> <operator pos:start="209:14" pos:end="209:14">=</operator> <name pos:start="209:16" pos:end="209:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="215:5" pos:end="215:44">/* If there is a backing file, use it */</comment>

    <if_stmt pos:start="217:5" pos:end="227:5"><if pos:start="217:5" pos:end="227:5">if <condition pos:start="217:8" pos:end="217:41">(<expr pos:start="217:9" pos:end="217:40"><operator pos:start="217:9" pos:end="217:9">(</operator><name pos:start="217:10" pos:end="217:14">flags</name> <operator pos:start="217:16" pos:end="217:16">&amp;</operator> <name pos:start="217:18" pos:end="217:34">BDRV_O_NO_BACKING</name><operator pos:start="217:35" pos:end="217:35">)</operator> <operator pos:start="217:37" pos:end="217:38">==</operator> <literal type="number" pos:start="217:40" pos:end="217:40">0</literal></expr>)</condition> <block pos:start="217:43" pos:end="227:5">{<block_content pos:start="219:9" pos:end="225:9">

        <expr_stmt pos:start="219:9" pos:end="219:41"><expr pos:start="219:9" pos:end="219:40"><name pos:start="219:9" pos:end="219:11">ret</name> <operator pos:start="219:13" pos:end="219:13">=</operator> <call pos:start="219:15" pos:end="219:40"><name pos:start="219:15" pos:end="219:36">bdrv_open_backing_file</name><argument_list pos:start="219:37" pos:end="219:40">(<argument pos:start="219:38" pos:end="219:39"><expr pos:start="219:38" pos:end="219:39"><name pos:start="219:38" pos:end="219:39">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="225:9"><if pos:start="221:9" pos:end="225:9">if <condition pos:start="221:12" pos:end="221:20">(<expr pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:15">ret</name> <operator pos:start="221:17" pos:end="221:17">&lt;</operator> <literal type="number" pos:start="221:19" pos:end="221:19">0</literal></expr>)</condition> <block pos:start="221:22" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:32">

            <goto pos:start="223:13" pos:end="223:32">goto <name pos:start="223:18" pos:end="223:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="231:5" pos:end="231:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="233:5" pos:end="249:5"><if pos:start="233:5" pos:end="249:5">if <condition pos:start="233:8" pos:end="233:33">(<expr pos:start="233:9" pos:end="233:32"><call pos:start="233:9" pos:end="233:27"><name pos:start="233:9" pos:end="233:18">qdict_size</name><argument_list pos:start="233:19" pos:end="233:27">(<argument pos:start="233:20" pos:end="233:26"><expr pos:start="233:20" pos:end="233:26"><name pos:start="233:20" pos:end="233:26">options</name></expr></argument>)</argument_list></call> <operator pos:start="233:29" pos:end="233:30">!=</operator> <literal type="number" pos:start="233:32" pos:end="233:32">0</literal></expr>)</condition> <block pos:start="233:35" pos:end="249:5">{<block_content pos:start="235:9" pos:end="247:28">

        <decl_stmt pos:start="235:9" pos:end="235:55"><decl pos:start="235:9" pos:end="235:54"><type pos:start="235:9" pos:end="235:26"><specifier pos:start="235:9" pos:end="235:13">const</specifier> <name pos:start="235:15" pos:end="235:24">QDictEntry</name> <modifier pos:start="235:26" pos:end="235:26">*</modifier></type><name pos:start="235:27" pos:end="235:31">entry</name> <init pos:start="235:33" pos:end="235:54">= <expr pos:start="235:35" pos:end="235:54"><call pos:start="235:35" pos:end="235:54"><name pos:start="235:35" pos:end="235:45">qdict_first</name><argument_list pos:start="235:46" pos:end="235:54">(<argument pos:start="235:47" pos:end="235:53"><expr pos:start="235:47" pos:end="235:53"><name pos:start="235:47" pos:end="235:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="241:59"><expr pos:start="237:9" pos:end="241:58"><call pos:start="237:9" pos:end="241:58"><name pos:start="237:9" pos:end="237:21">qerror_report</name><argument_list pos:start="237:22" pos:end="241:58">(<argument pos:start="237:23" pos:end="237:47"><expr pos:start="237:23" pos:end="237:47"><name pos:start="237:23" pos:end="237:47">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="237:50" pos:end="239:57"><expr pos:start="237:50" pos:end="239:57"><literal type="string" pos:start="237:50" pos:end="237:77">"Block format '%s' used by "</literal>

            <literal type="string" pos:start="239:13" pos:end="239:57">"device '%s' doesn't support the option '%s'"</literal></expr></argument>,

            <argument pos:start="241:13" pos:end="241:28"><expr pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:15">drv</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:28">format_name</name></name></expr></argument>, <argument pos:start="241:31" pos:end="241:45"><expr pos:start="241:31" pos:end="241:45"><name pos:start="241:31" pos:end="241:45"><name pos:start="241:31" pos:end="241:32">bs</name><operator pos:start="241:33" pos:end="241:34">-&gt;</operator><name pos:start="241:35" pos:end="241:45">device_name</name></name></expr></argument>, <argument pos:start="241:48" pos:end="241:57"><expr pos:start="241:48" pos:end="241:57"><name pos:start="241:48" pos:end="241:57"><name pos:start="241:48" pos:end="241:52">entry</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:57">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:22"><expr pos:start="245:9" pos:end="245:21"><name pos:start="245:9" pos:end="245:11">ret</name> <operator pos:start="245:13" pos:end="245:13">=</operator> <operator pos:start="245:15" pos:end="245:15">-</operator><name pos:start="245:16" pos:end="245:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="247:9" pos:end="247:28">goto <name pos:start="247:14" pos:end="247:27">close_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:21"><expr pos:start="251:5" pos:end="251:20"><call pos:start="251:5" pos:end="251:20"><name pos:start="251:5" pos:end="251:11">QDECREF</name><argument_list pos:start="251:12" pos:end="251:20">(<argument pos:start="251:13" pos:end="251:19"><expr pos:start="251:13" pos:end="251:19"><name pos:start="251:13" pos:end="251:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="255:5" pos:end="259:5"><if pos:start="255:5" pos:end="259:5">if <condition pos:start="255:8" pos:end="255:31">(<expr pos:start="255:9" pos:end="255:30"><operator pos:start="255:9" pos:end="255:9">!</operator><call pos:start="255:10" pos:end="255:30"><name pos:start="255:10" pos:end="255:26">bdrv_key_required</name><argument_list pos:start="255:27" pos:end="255:30">(<argument pos:start="255:28" pos:end="255:29"><expr pos:start="255:28" pos:end="255:29"><name pos:start="255:28" pos:end="255:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:33" pos:end="259:5">{<block_content pos:start="257:9" pos:end="257:43">

        <expr_stmt pos:start="257:9" pos:end="257:43"><expr pos:start="257:9" pos:end="257:42"><call pos:start="257:9" pos:end="257:42"><name pos:start="257:9" pos:end="257:32">bdrv_dev_change_media_cb</name><argument_list pos:start="257:33" pos:end="257:42">(<argument pos:start="257:34" pos:end="257:35"><expr pos:start="257:34" pos:end="257:35"><name pos:start="257:34" pos:end="257:35">bs</name></expr></argument>, <argument pos:start="257:38" pos:end="257:41"><expr pos:start="257:38" pos:end="257:41"><name pos:start="257:38" pos:end="257:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="263:5" pos:end="263:36">/* throttling disk I/O limits */</comment>

    <if_stmt pos:start="265:5" pos:end="269:5"><if pos:start="265:5" pos:end="269:5">if <condition pos:start="265:8" pos:end="265:30">(<expr pos:start="265:9" pos:end="265:29"><name pos:start="265:9" pos:end="265:29"><name pos:start="265:9" pos:end="265:10">bs</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:29">io_limits_enabled</name></name></expr>)</condition> <block pos:start="265:32" pos:end="269:5">{<block_content pos:start="267:9" pos:end="267:34">

        <expr_stmt pos:start="267:9" pos:end="267:34"><expr pos:start="267:9" pos:end="267:33"><call pos:start="267:9" pos:end="267:33"><name pos:start="267:9" pos:end="267:29">bdrv_io_limits_enable</name><argument_list pos:start="267:30" pos:end="267:33">(<argument pos:start="267:31" pos:end="267:32"><expr pos:start="267:31" pos:end="267:32"><name pos:start="267:31" pos:end="267:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="273:5" pos:end="273:13">return <expr pos:start="273:12" pos:end="273:12"><literal type="number" pos:start="273:12" pos:end="273:12">0</literal></expr>;</return>



<label pos:start="277:1" pos:end="277:16"><name pos:start="277:1" pos:end="277:15">unlink_and_fail</name>:</label>

    <if_stmt pos:start="279:5" pos:end="283:5"><if pos:start="279:5" pos:end="283:5">if <condition pos:start="279:8" pos:end="279:21">(<expr pos:start="279:9" pos:end="279:20"><name pos:start="279:9" pos:end="279:12">file</name> <operator pos:start="279:14" pos:end="279:15">!=</operator> <name pos:start="279:17" pos:end="279:20">NULL</name></expr>)</condition> <block pos:start="279:23" pos:end="283:5">{<block_content pos:start="281:9" pos:end="281:26">

        <expr_stmt pos:start="281:9" pos:end="281:26"><expr pos:start="281:9" pos:end="281:25"><call pos:start="281:9" pos:end="281:25"><name pos:start="281:9" pos:end="281:19">bdrv_delete</name><argument_list pos:start="281:20" pos:end="281:25">(<argument pos:start="281:21" pos:end="281:24"><expr pos:start="281:21" pos:end="281:24"><name pos:start="281:21" pos:end="281:24">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="285:5" pos:end="289:5"><if pos:start="285:5" pos:end="289:5">if <condition pos:start="285:8" pos:end="285:25">(<expr pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:10">bs</name><operator pos:start="285:11" pos:end="285:12">-&gt;</operator><name pos:start="285:13" pos:end="285:24">is_temporary</name></name></expr>)</condition> <block pos:start="285:27" pos:end="289:5">{<block_content pos:start="287:9" pos:end="287:25">

        <expr_stmt pos:start="287:9" pos:end="287:25"><expr pos:start="287:9" pos:end="287:24"><call pos:start="287:9" pos:end="287:24"><name pos:start="287:9" pos:end="287:14">unlink</name><argument_list pos:start="287:15" pos:end="287:24">(<argument pos:start="287:16" pos:end="287:23"><expr pos:start="287:16" pos:end="287:23"><name pos:start="287:16" pos:end="287:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="291:1" pos:end="291:5"><name pos:start="291:1" pos:end="291:4">fail</name>:</label>

    <expr_stmt pos:start="293:5" pos:end="293:25"><expr pos:start="293:5" pos:end="293:24"><call pos:start="293:5" pos:end="293:24"><name pos:start="293:5" pos:end="293:11">QDECREF</name><argument_list pos:start="293:12" pos:end="293:24">(<argument pos:start="293:13" pos:end="293:23"><expr pos:start="293:13" pos:end="293:23"><name pos:start="293:13" pos:end="293:23"><name pos:start="293:13" pos:end="293:14">bs</name><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:23">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:21"><expr pos:start="295:5" pos:end="295:20"><call pos:start="295:5" pos:end="295:20"><name pos:start="295:5" pos:end="295:11">QDECREF</name><argument_list pos:start="295:12" pos:end="295:20">(<argument pos:start="295:13" pos:end="295:19"><expr pos:start="295:13" pos:end="295:19"><name pos:start="295:13" pos:end="295:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:23"><expr pos:start="297:5" pos:end="297:22"><name pos:start="297:5" pos:end="297:15"><name pos:start="297:5" pos:end="297:6">bs</name><operator pos:start="297:7" pos:end="297:8">-&gt;</operator><name pos:start="297:9" pos:end="297:15">options</name></name> <operator pos:start="297:17" pos:end="297:17">=</operator> <name pos:start="297:19" pos:end="297:22">NULL</name></expr>;</expr_stmt>

    <return pos:start="299:5" pos:end="299:15">return <expr pos:start="299:12" pos:end="299:14"><name pos:start="299:12" pos:end="299:14">ret</name></expr>;</return>



<label pos:start="303:1" pos:end="303:15"><name pos:start="303:1" pos:end="303:14">close_and_fail</name>:</label>

    <expr_stmt pos:start="305:5" pos:end="305:19"><expr pos:start="305:5" pos:end="305:18"><call pos:start="305:5" pos:end="305:18"><name pos:start="305:5" pos:end="305:14">bdrv_close</name><argument_list pos:start="305:15" pos:end="305:18">(<argument pos:start="305:16" pos:end="305:17"><expr pos:start="305:16" pos:end="305:17"><name pos:start="305:16" pos:end="305:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:21"><expr pos:start="307:5" pos:end="307:20"><call pos:start="307:5" pos:end="307:20"><name pos:start="307:5" pos:end="307:11">QDECREF</name><argument_list pos:start="307:12" pos:end="307:20">(<argument pos:start="307:13" pos:end="307:19"><expr pos:start="307:13" pos:end="307:19"><name pos:start="307:13" pos:end="307:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="309:5" pos:end="309:15">return <expr pos:start="309:12" pos:end="309:14"><name pos:start="309:12" pos:end="309:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
