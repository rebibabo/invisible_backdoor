<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19350.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">net_init_tap</name><parameter_list pos:start="1:17" pos:end="1:81">(<parameter pos:start="1:18" pos:end="1:31"><decl pos:start="1:18" pos:end="1:31"><type pos:start="1:18" pos:end="1:31"><name pos:start="1:18" pos:end="1:25">QemuOpts</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:31">opts</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">Monitor</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">mon</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">name</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:80"><decl pos:start="1:66" pos:end="1:80"><type pos:start="1:66" pos:end="1:80"><name pos:start="1:66" pos:end="1:74">VLANState</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:80">vlan</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TAPState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>, <decl pos:start="7:13" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:20">vnet_hdr</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="71:5"><if pos:start="11:5" pos:end="45:5">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><call pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:20">qemu_opt_get</name><argument_list pos:start="11:21" pos:end="11:32">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">opts</name></expr></argument>, <argument pos:start="11:28" pos:end="11:31"><expr pos:start="11:28" pos:end="11:31"><literal type="string" pos:start="11:28" pos:end="11:31">"fd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:35" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:42">

        <if_stmt pos:start="13:9" pos:end="25:9"><if pos:start="13:9" pos:end="25:9">if <condition pos:start="13:12" pos:end="19:43">(<expr pos:start="13:13" pos:end="19:42"><call pos:start="13:13" pos:end="13:40"><name pos:start="13:13" pos:end="13:24">qemu_opt_get</name><argument_list pos:start="13:25" pos:end="13:40">(<argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">opts</name></expr></argument>, <argument pos:start="13:32" pos:end="13:39"><expr pos:start="13:32" pos:end="13:39"><literal type="string" pos:start="13:32" pos:end="13:39">"ifname"</literal></expr></argument>)</argument_list></call> <operator pos:start="13:42" pos:end="13:43">||</operator>

            <call pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:24">qemu_opt_get</name><argument_list pos:start="15:25" pos:end="15:40">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">opts</name></expr></argument>, <argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><literal type="string" pos:start="15:32" pos:end="15:39">"script"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:42" pos:end="15:43">||</operator>

            <call pos:start="17:13" pos:end="17:44"><name pos:start="17:13" pos:end="17:24">qemu_opt_get</name><argument_list pos:start="17:25" pos:end="17:44">(<argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">opts</name></expr></argument>, <argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><literal type="string" pos:start="17:32" pos:end="17:43">"downscript"</literal></expr></argument>)</argument_list></call> <operator pos:start="17:46" pos:end="17:47">||</operator>

            <call pos:start="19:13" pos:end="19:42"><name pos:start="19:13" pos:end="19:24">qemu_opt_get</name><argument_list pos:start="19:25" pos:end="19:42">(<argument pos:start="19:26" pos:end="19:29"><expr pos:start="19:26" pos:end="19:29"><name pos:start="19:26" pos:end="19:29">opts</name></expr></argument>, <argument pos:start="19:32" pos:end="19:41"><expr pos:start="19:32" pos:end="19:41"><literal type="string" pos:start="19:32" pos:end="19:41">"vnet_hdr"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:45" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:22">

            <expr_stmt pos:start="21:13" pos:end="21:92"><expr pos:start="21:13" pos:end="21:91"><call pos:start="21:13" pos:end="21:91"><name pos:start="21:13" pos:end="21:22">qemu_error</name><argument_list pos:start="21:23" pos:end="21:91">(<argument pos:start="21:24" pos:end="21:90"><expr pos:start="21:24" pos:end="21:90"><literal type="string" pos:start="21:24" pos:end="21:90">"ifname=, script=, downscript= and vnet_hdr= is invalid with fd=\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:64"><expr pos:start="29:9" pos:end="29:63"><name pos:start="29:9" pos:end="29:10">fd</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:63"><name pos:start="29:14" pos:end="29:32">net_handle_fd_param</name><argument_list pos:start="29:33" pos:end="29:63">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">mon</name></expr></argument>, <argument pos:start="29:39" pos:end="29:62"><expr pos:start="29:39" pos:end="29:62"><call pos:start="29:39" pos:end="29:62"><name pos:start="29:39" pos:end="29:50">qemu_opt_get</name><argument_list pos:start="29:51" pos:end="29:62">(<argument pos:start="29:52" pos:end="29:55"><expr pos:start="29:52" pos:end="29:55"><name pos:start="29:52" pos:end="29:55">opts</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><literal type="string" pos:start="29:58" pos:end="29:61">"fd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:14">fd</name> <operator pos:start="31:16" pos:end="31:17">==</operator> <operator pos:start="31:19" pos:end="31:19">-</operator><literal type="number" pos:start="31:20" pos:end="31:20">1</literal></expr>)</condition> <block pos:start="31:23" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><call pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:13">fcntl</name><argument_list pos:start="39:14" pos:end="39:38">(<argument pos:start="39:15" pos:end="39:16"><expr pos:start="39:15" pos:end="39:16"><name pos:start="39:15" pos:end="39:16">fd</name></expr></argument>, <argument pos:start="39:19" pos:end="39:25"><expr pos:start="39:19" pos:end="39:25"><name pos:start="39:19" pos:end="39:25">F_SETFL</name></expr></argument>, <argument pos:start="39:28" pos:end="39:37"><expr pos:start="39:28" pos:end="39:37"><name pos:start="39:28" pos:end="39:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:16">vnet_hdr</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:41"><name pos:start="43:20" pos:end="43:37">tap_probe_vnet_hdr</name><argument_list pos:start="43:38" pos:end="43:41">(<argument pos:start="43:39" pos:end="43:40"><expr pos:start="43:39" pos:end="43:40"><name pos:start="43:39" pos:end="43:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="71:5">else <block pos:start="45:12" pos:end="71:5">{<block_content pos:start="47:9" pos:end="69:9">

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:42">(<expr pos:start="47:13" pos:end="47:41"><operator pos:start="47:13" pos:end="47:13">!</operator><call pos:start="47:14" pos:end="47:41"><name pos:start="47:14" pos:end="47:25">qemu_opt_get</name><argument_list pos:start="47:26" pos:end="47:41">(<argument pos:start="47:27" pos:end="47:30"><expr pos:start="47:27" pos:end="47:30"><name pos:start="47:27" pos:end="47:30">opts</name></expr></argument>, <argument pos:start="47:33" pos:end="47:40"><expr pos:start="47:33" pos:end="47:40"><literal type="string" pos:start="47:33" pos:end="47:40">"script"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:44" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:65">

            <expr_stmt pos:start="49:13" pos:end="49:65"><expr pos:start="49:13" pos:end="49:64"><call pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:24">qemu_opt_set</name><argument_list pos:start="49:25" pos:end="49:64">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">opts</name></expr></argument>, <argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><literal type="string" pos:start="49:32" pos:end="49:39">"script"</literal></expr></argument>, <argument pos:start="49:42" pos:end="49:63"><expr pos:start="49:42" pos:end="49:63"><name pos:start="49:42" pos:end="49:63">DEFAULT_NETWORK_SCRIPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:46">(<expr pos:start="55:13" pos:end="55:45"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:45"><name pos:start="55:14" pos:end="55:25">qemu_opt_get</name><argument_list pos:start="55:26" pos:end="55:45">(<argument pos:start="55:27" pos:end="55:30"><expr pos:start="55:27" pos:end="55:30"><name pos:start="55:27" pos:end="55:30">opts</name></expr></argument>, <argument pos:start="55:33" pos:end="55:44"><expr pos:start="55:33" pos:end="55:44"><literal type="string" pos:start="55:33" pos:end="55:44">"downscript"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:48" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:74">

            <expr_stmt pos:start="57:13" pos:end="57:74"><expr pos:start="57:13" pos:end="57:73"><call pos:start="57:13" pos:end="57:73"><name pos:start="57:13" pos:end="57:24">qemu_opt_set</name><argument_list pos:start="57:25" pos:end="57:73">(<argument pos:start="57:26" pos:end="57:29"><expr pos:start="57:26" pos:end="57:29"><name pos:start="57:26" pos:end="57:29">opts</name></expr></argument>, <argument pos:start="57:32" pos:end="57:43"><expr pos:start="57:32" pos:end="57:43"><literal type="string" pos:start="57:32" pos:end="57:43">"downscript"</literal></expr></argument>, <argument pos:start="57:46" pos:end="57:72"><expr pos:start="57:46" pos:end="57:72"><name pos:start="57:46" pos:end="57:72">DEFAULT_NETWORK_DOWN_SCRIPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:10">fd</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:42"><name pos:start="63:14" pos:end="63:25">net_tap_init</name><argument_list pos:start="63:26" pos:end="63:42">(<argument pos:start="63:27" pos:end="63:30"><expr pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:30">opts</name></expr></argument>, <argument pos:start="63:33" pos:end="63:41"><expr pos:start="63:33" pos:end="63:41"><operator pos:start="63:33" pos:end="63:33">&amp;</operator><name pos:start="63:34" pos:end="63:41">vnet_hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:14">fd</name> <operator pos:start="65:16" pos:end="65:17">==</operator> <operator pos:start="65:19" pos:end="65:19">-</operator><literal type="number" pos:start="65:20" pos:end="65:20">1</literal></expr>)</condition> <block pos:start="65:23" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:22">

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:57"><expr pos:start="75:5" pos:end="75:56"><name pos:start="75:5" pos:end="75:5">s</name> <operator pos:start="75:7" pos:end="75:7">=</operator> <call pos:start="75:9" pos:end="75:56"><name pos:start="75:9" pos:end="75:23">net_tap_fd_init</name><argument_list pos:start="75:24" pos:end="75:56">(<argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">vlan</name></expr></argument>, <argument pos:start="75:31" pos:end="75:35"><expr pos:start="75:31" pos:end="75:35"><literal type="string" pos:start="75:31" pos:end="75:35">"tap"</literal></expr></argument>, <argument pos:start="75:38" pos:end="75:41"><expr pos:start="75:38" pos:end="75:41"><name pos:start="75:38" pos:end="75:41">name</name></expr></argument>, <argument pos:start="75:44" pos:end="75:45"><expr pos:start="75:44" pos:end="75:45"><name pos:start="75:44" pos:end="75:45">fd</name></expr></argument>, <argument pos:start="75:48" pos:end="75:55"><expr pos:start="75:48" pos:end="75:55"><name pos:start="75:48" pos:end="75:55">vnet_hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:11">(<expr pos:start="77:9" pos:end="77:10"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:10">s</name></expr>)</condition> <block pos:start="77:13" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:18">

        <expr_stmt pos:start="79:9" pos:end="79:18"><expr pos:start="79:9" pos:end="79:17"><call pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:13">close</name><argument_list pos:start="79:14" pos:end="79:17">(<argument pos:start="79:15" pos:end="79:16"><expr pos:start="79:15" pos:end="79:16"><name pos:start="79:15" pos:end="79:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:40">(<expr pos:start="87:9" pos:end="87:39"><call pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:22">tap_set_sndbuf</name><argument_list pos:start="87:23" pos:end="87:35">(<argument pos:start="87:24" pos:end="87:28"><expr pos:start="87:24" pos:end="87:28"><name pos:start="87:24" pos:end="87:28"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:28">fd</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:34"><expr pos:start="87:31" pos:end="87:34"><name pos:start="87:31" pos:end="87:34">opts</name></expr></argument>)</argument_list></call> <operator pos:start="87:37" pos:end="87:37">&lt;</operator> <literal type="number" pos:start="87:39" pos:end="87:39">0</literal></expr>)</condition> <block pos:start="87:42" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:18">

        <return pos:start="89:9" pos:end="89:18">return <expr pos:start="89:16" pos:end="89:17"><operator pos:start="89:16" pos:end="89:16">-</operator><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="129:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:33">(<expr pos:start="95:9" pos:end="95:32"><call pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:20">qemu_opt_get</name><argument_list pos:start="95:21" pos:end="95:32">(<argument pos:start="95:22" pos:end="95:25"><expr pos:start="95:22" pos:end="95:25"><name pos:start="95:22" pos:end="95:25">opts</name></expr></argument>, <argument pos:start="95:28" pos:end="95:31"><expr pos:start="95:28" pos:end="95:31"><literal type="string" pos:start="95:28" pos:end="95:31">"fd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:35" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:70">

        <expr_stmt pos:start="97:9" pos:end="97:70"><expr pos:start="97:9" pos:end="97:69"><call pos:start="97:9" pos:end="97:69"><name pos:start="97:9" pos:end="97:16">snprintf</name><argument_list pos:start="97:17" pos:end="97:69">(<argument pos:start="97:18" pos:end="97:31"><expr pos:start="97:18" pos:end="97:31"><name pos:start="97:18" pos:end="97:31"><name pos:start="97:18" pos:end="97:18">s</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:22">nc</name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:31">info_str</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:55"><expr pos:start="97:34" pos:end="97:55"><sizeof pos:start="97:34" pos:end="97:55">sizeof<argument_list pos:start="97:40" pos:end="97:55">(<argument pos:start="97:41" pos:end="97:54"><expr pos:start="97:41" pos:end="97:54"><name pos:start="97:41" pos:end="97:54"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:45">nc</name><operator pos:start="97:46" pos:end="97:46">.</operator><name pos:start="97:47" pos:end="97:54">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:58" pos:end="97:64"><expr pos:start="97:58" pos:end="97:64"><literal type="string" pos:start="97:58" pos:end="97:64">"fd=%d"</literal></expr></argument>, <argument pos:start="97:67" pos:end="97:68"><expr pos:start="97:67" pos:end="97:68"><name pos:start="97:67" pos:end="97:68">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="129:5">else <block pos:start="99:12" pos:end="129:5">{<block_content pos:start="101:9" pos:end="127:9">

        <decl_stmt pos:start="101:9" pos:end="101:49"><decl pos:start="101:9" pos:end="101:26"><type pos:start="101:9" pos:end="101:20"><specifier pos:start="101:9" pos:end="101:13">const</specifier> <name pos:start="101:15" pos:end="101:18">char</name> <modifier pos:start="101:20" pos:end="101:20">*</modifier></type><name pos:start="101:21" pos:end="101:26">ifname</name></decl>, <decl pos:start="101:29" pos:end="101:35"><type ref="prev" pos:start="101:9" pos:end="101:20"><modifier pos:start="101:29" pos:end="101:29">*</modifier></type><name pos:start="101:30" pos:end="101:35">script</name></decl>, <decl pos:start="101:38" pos:end="101:48"><type ref="prev" pos:start="101:9" pos:end="101:20"><modifier pos:start="101:38" pos:end="101:38">*</modifier></type><name pos:start="101:39" pos:end="101:48">downscript</name></decl>;</decl_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:50"><expr pos:start="105:9" pos:end="105:49"><name pos:start="105:9" pos:end="105:14">ifname</name>     <operator pos:start="105:20" pos:end="105:20">=</operator> <call pos:start="105:22" pos:end="105:49"><name pos:start="105:22" pos:end="105:33">qemu_opt_get</name><argument_list pos:start="105:34" pos:end="105:49">(<argument pos:start="105:35" pos:end="105:38"><expr pos:start="105:35" pos:end="105:38"><name pos:start="105:35" pos:end="105:38">opts</name></expr></argument>, <argument pos:start="105:41" pos:end="105:48"><expr pos:start="105:41" pos:end="105:48"><literal type="string" pos:start="105:41" pos:end="105:48">"ifname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:50"><expr pos:start="107:9" pos:end="107:49"><name pos:start="107:9" pos:end="107:14">script</name>     <operator pos:start="107:20" pos:end="107:20">=</operator> <call pos:start="107:22" pos:end="107:49"><name pos:start="107:22" pos:end="107:33">qemu_opt_get</name><argument_list pos:start="107:34" pos:end="107:49">(<argument pos:start="107:35" pos:end="107:38"><expr pos:start="107:35" pos:end="107:38"><name pos:start="107:35" pos:end="107:38">opts</name></expr></argument>, <argument pos:start="107:41" pos:end="107:48"><expr pos:start="107:41" pos:end="107:48"><literal type="string" pos:start="107:41" pos:end="107:48">"script"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:54"><expr pos:start="109:9" pos:end="109:53"><name pos:start="109:9" pos:end="109:18">downscript</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:53"><name pos:start="109:22" pos:end="109:33">qemu_opt_get</name><argument_list pos:start="109:34" pos:end="109:53">(<argument pos:start="109:35" pos:end="109:38"><expr pos:start="109:35" pos:end="109:38"><name pos:start="109:35" pos:end="109:38">opts</name></expr></argument>, <argument pos:start="109:41" pos:end="109:52"><expr pos:start="109:41" pos:end="109:52"><literal type="string" pos:start="109:41" pos:end="109:52">"downscript"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="117:45"><expr pos:start="113:9" pos:end="117:44"><call pos:start="113:9" pos:end="117:44"><name pos:start="113:9" pos:end="113:16">snprintf</name><argument_list pos:start="113:17" pos:end="117:44">(<argument pos:start="113:18" pos:end="113:31"><expr pos:start="113:18" pos:end="113:31"><name pos:start="113:18" pos:end="113:31"><name pos:start="113:18" pos:end="113:18">s</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:22">nc</name><operator pos:start="113:23" pos:end="113:23">.</operator><name pos:start="113:24" pos:end="113:31">info_str</name></name></expr></argument>, <argument pos:start="113:34" pos:end="113:55"><expr pos:start="113:34" pos:end="113:55"><sizeof pos:start="113:34" pos:end="113:55">sizeof<argument_list pos:start="113:40" pos:end="113:55">(<argument pos:start="113:41" pos:end="113:54"><expr pos:start="113:41" pos:end="113:54"><name pos:start="113:41" pos:end="113:54"><name pos:start="113:41" pos:end="113:41">s</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:45">nc</name><operator pos:start="113:46" pos:end="113:46">.</operator><name pos:start="113:47" pos:end="113:54">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="115:18" pos:end="115:52"><expr pos:start="115:18" pos:end="115:52"><literal type="string" pos:start="115:18" pos:end="115:52">"ifname=%s,script=%s,downscript=%s"</literal></expr></argument>,

                 <argument pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:23"><name pos:start="117:18" pos:end="117:23">ifname</name></expr></argument>, <argument pos:start="117:26" pos:end="117:31"><expr pos:start="117:26" pos:end="117:31"><name pos:start="117:26" pos:end="117:31">script</name></expr></argument>, <argument pos:start="117:34" pos:end="117:43"><expr pos:start="117:34" pos:end="117:43"><name pos:start="117:34" pos:end="117:43">downscript</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:42">(<expr pos:start="121:13" pos:end="121:41"><call pos:start="121:13" pos:end="121:36"><name pos:start="121:13" pos:end="121:18">strcmp</name><argument_list pos:start="121:19" pos:end="121:36">(<argument pos:start="121:20" pos:end="121:29"><expr pos:start="121:20" pos:end="121:29"><name pos:start="121:20" pos:end="121:29">downscript</name></expr></argument>, <argument pos:start="121:32" pos:end="121:35"><expr pos:start="121:32" pos:end="121:35"><literal type="string" pos:start="121:32" pos:end="121:35">"no"</literal></expr></argument>)</argument_list></call> <operator pos:start="121:38" pos:end="121:39">!=</operator> <literal type="number" pos:start="121:41" pos:end="121:41">0</literal></expr>)</condition> <block pos:start="121:44" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:83">

            <expr_stmt pos:start="123:13" pos:end="123:79"><expr pos:start="123:13" pos:end="123:78"><call pos:start="123:13" pos:end="123:78"><name pos:start="123:13" pos:end="123:20">snprintf</name><argument_list pos:start="123:21" pos:end="123:78">(<argument pos:start="123:22" pos:end="123:35"><expr pos:start="123:22" pos:end="123:35"><name pos:start="123:22" pos:end="123:35"><name pos:start="123:22" pos:end="123:22">s</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:35">down_script</name></name></expr></argument>, <argument pos:start="123:38" pos:end="123:59"><expr pos:start="123:38" pos:end="123:59"><sizeof pos:start="123:38" pos:end="123:59">sizeof<argument_list pos:start="123:44" pos:end="123:59">(<argument pos:start="123:45" pos:end="123:58"><expr pos:start="123:45" pos:end="123:58"><name pos:start="123:45" pos:end="123:58"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:58">down_script</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="123:62" pos:end="123:65"><expr pos:start="123:62" pos:end="123:65"><literal type="string" pos:start="123:62" pos:end="123:65">"%s"</literal></expr></argument>, <argument pos:start="123:68" pos:end="123:77"><expr pos:start="123:68" pos:end="123:77"><name pos:start="123:68" pos:end="123:77">downscript</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:83"><expr pos:start="125:13" pos:end="125:82"><call pos:start="125:13" pos:end="125:82"><name pos:start="125:13" pos:end="125:20">snprintf</name><argument_list pos:start="125:21" pos:end="125:82">(<argument pos:start="125:22" pos:end="125:39"><expr pos:start="125:22" pos:end="125:39"><name pos:start="125:22" pos:end="125:39"><name pos:start="125:22" pos:end="125:22">s</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:39">down_script_arg</name></name></expr></argument>, <argument pos:start="125:42" pos:end="125:67"><expr pos:start="125:42" pos:end="125:67"><sizeof pos:start="125:42" pos:end="125:67">sizeof<argument_list pos:start="125:48" pos:end="125:67">(<argument pos:start="125:49" pos:end="125:66"><expr pos:start="125:49" pos:end="125:66"><name pos:start="125:49" pos:end="125:66"><name pos:start="125:49" pos:end="125:49">s</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:66">down_script_arg</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="125:70" pos:end="125:73"><expr pos:start="125:70" pos:end="125:73"><literal type="string" pos:start="125:70" pos:end="125:73">"%s"</literal></expr></argument>, <argument pos:start="125:76" pos:end="125:81"><expr pos:start="125:76" pos:end="125:81"><name pos:start="125:76" pos:end="125:81">ifname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:13">(<expr pos:start="133:9" pos:end="133:12"><name pos:start="133:9" pos:end="133:12">vlan</name></expr>)</condition> <block pos:start="133:15" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:29">

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:12">vlan</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:26">nb_host_devs</name></name><operator pos:start="135:27" pos:end="135:28">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
