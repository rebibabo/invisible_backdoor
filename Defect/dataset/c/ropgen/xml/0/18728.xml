<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18728.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">v9fs_req_recv</name><parameter_list pos:start="1:26" pos:end="1:49">(<parameter pos:start="1:27" pos:end="1:36"><decl pos:start="1:27" pos:end="1:36"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:31">P9Req</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">req</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:45">uint8_t</name></type> <name pos:start="1:47" pos:end="1:48">id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:36">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">QVirtIO9P</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">v9p</name> <init pos:start="5:20" pos:end="5:29">= <expr pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:24">req</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:29">v9p</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">P9Hdr</name></type> <name pos:start="7:11" pos:end="7:13">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="33:5">for <control pos:start="13:9" pos:end="13:28">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:23"><expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:22">10</literal></expr>;</condition> <incr pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:25">i</name><operator pos:start="13:26" pos:end="13:27">++</operator></expr></incr>)</control> <block pos:start="13:30" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:31">

        <expr_stmt pos:start="15:9" pos:end="15:63"><expr pos:start="15:9" pos:end="15:62"><call pos:start="15:9" pos:end="15:62"><name pos:start="15:9" pos:end="15:30">qvirtio_wait_queue_isr</name><argument_list pos:start="15:31" pos:end="15:62">(<argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:34">v9p</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">dev</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:48"><expr pos:start="15:42" pos:end="15:48"><name pos:start="15:42" pos:end="15:48"><name pos:start="15:42" pos:end="15:44">v9p</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:48">vq</name></name></expr></argument>, <argument pos:start="15:51" pos:end="15:61"><expr pos:start="15:51" pos:end="15:61"><literal type="number" pos:start="15:51" pos:end="15:54">1000</literal> <operator pos:start="15:56" pos:end="15:56">*</operator> <literal type="number" pos:start="15:58" pos:end="15:61">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:20">v9fs_memread</name><argument_list pos:start="19:21" pos:end="19:34">(<argument pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:24"><name pos:start="19:22" pos:end="19:24">req</name></expr></argument>, <argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:30">hdr</name></expr></argument>, <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:20">le32_to_cpus</name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:30"><expr pos:start="21:22" pos:end="21:30"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:30"><name pos:start="21:23" pos:end="21:25">hdr</name><operator pos:start="21:26" pos:end="21:26">.</operator><name pos:start="21:27" pos:end="21:30">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:20">le16_to_cpus</name><argument_list pos:start="23:21" pos:end="23:30">(<argument pos:start="23:22" pos:end="23:29"><expr pos:start="23:22" pos:end="23:29"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:29"><name pos:start="23:23" pos:end="23:25">hdr</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:29">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:26">(<expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">hdr</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:20">size</name></name> <operator pos:start="25:22" pos:end="25:23">&gt;=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">7</literal></expr>)</condition> <block pos:start="25:28" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><call pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:22">v9fs_memrewind</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">req</name></expr></argument>, <argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><call pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:19">g_assert_cmpint</name><argument_list pos:start="37:20" pos:end="37:36">(<argument pos:start="37:21" pos:end="37:28"><expr pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:23">hdr</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:28">size</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:32"><expr pos:start="37:31" pos:end="37:32"><operator pos:start="37:31" pos:end="37:32">&gt;=</operator></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><call pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:46">(<argument pos:start="39:21" pos:end="39:28"><expr pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:23">hdr</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:28">size</name></name></expr></argument>, <argument pos:start="39:31" pos:end="39:32"><expr pos:start="39:31" pos:end="39:32"><operator pos:start="39:31" pos:end="39:32">&lt;=</operator></expr></argument>, <argument pos:start="39:35" pos:end="39:45"><expr pos:start="39:35" pos:end="39:45"><name pos:start="39:35" pos:end="39:45">P9_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><call pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:19">g_assert_cmpint</name><argument_list pos:start="41:20" pos:end="41:42">(<argument pos:start="41:21" pos:end="41:27"><expr pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:23">hdr</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:27">tag</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:31"><expr pos:start="41:30" pos:end="41:31"><operator pos:start="41:30" pos:end="41:31">==</operator></expr></argument>, <argument pos:start="41:34" pos:end="41:41"><expr pos:start="41:34" pos:end="41:41"><name pos:start="41:34" pos:end="41:41"><name pos:start="41:34" pos:end="41:36">req</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:41">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="63:5"><if pos:start="45:5" pos:end="63:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:11">hdr</name><operator pos:start="45:12" pos:end="45:12">.</operator><name pos:start="45:13" pos:end="45:14">id</name></name> <operator pos:start="45:16" pos:end="45:17">!=</operator> <name pos:start="45:19" pos:end="45:20">id</name></expr>)</condition> <block pos:start="45:23" pos:end="63:5">{<block_content pos:start="47:9" pos:end="61:9">

        <expr_stmt pos:start="47:9" pos:end="49:73"><expr pos:start="47:9" pos:end="49:72"><call pos:start="47:9" pos:end="49:72"><name pos:start="47:9" pos:end="47:18">g_printerr</name><argument_list pos:start="47:19" pos:end="49:72">(<argument pos:start="47:20" pos:end="47:67"><expr pos:start="47:20" pos:end="47:67"><literal type="string" pos:start="47:20" pos:end="47:67">"Received response %d (%s) instead of %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:25"><expr pos:start="49:20" pos:end="49:25"><name pos:start="49:20" pos:end="49:25"><name pos:start="49:20" pos:end="49:22">hdr</name><operator pos:start="49:23" pos:end="49:23">.</operator><name pos:start="49:24" pos:end="49:25">id</name></name></expr></argument>, <argument pos:start="49:28" pos:end="49:48"><expr pos:start="49:28" pos:end="49:48"><call pos:start="49:28" pos:end="49:48"><name pos:start="49:28" pos:end="49:40">rmessage_name</name><argument_list pos:start="49:41" pos:end="49:48">(<argument pos:start="49:42" pos:end="49:47"><expr pos:start="49:42" pos:end="49:47"><name pos:start="49:42" pos:end="49:47"><name pos:start="49:42" pos:end="49:44">hdr</name><operator pos:start="49:45" pos:end="49:45">.</operator><name pos:start="49:46" pos:end="49:47">id</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:51" pos:end="49:52"><expr pos:start="49:51" pos:end="49:52"><name pos:start="49:51" pos:end="49:52">id</name></expr></argument>, <argument pos:start="49:55" pos:end="49:71"><expr pos:start="49:55" pos:end="49:71"><call pos:start="49:55" pos:end="49:71"><name pos:start="49:55" pos:end="49:67">rmessage_name</name><argument_list pos:start="49:68" pos:end="49:71">(<argument pos:start="49:69" pos:end="49:70"><expr pos:start="49:69" pos:end="49:70"><name pos:start="49:69" pos:end="49:70">id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:33">(<expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:15">hdr</name><operator pos:start="53:16" pos:end="53:16">.</operator><name pos:start="53:17" pos:end="53:18">id</name></name> <operator pos:start="53:20" pos:end="53:21">==</operator> <name pos:start="53:23" pos:end="53:32">P9_RLERROR</name></expr>)</condition> <block pos:start="53:35" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:74">

            <decl_stmt pos:start="55:13" pos:end="55:25"><decl pos:start="55:13" pos:end="55:24"><type pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:20">uint32_t</name></type> <name pos:start="55:22" pos:end="55:24">err</name></decl>;</decl_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><call pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:28">v9fs_uint32_read</name><argument_list pos:start="57:29" pos:end="57:39">(<argument pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:32">req</name></expr></argument>, <argument pos:start="57:35" pos:end="57:38"><expr pos:start="57:35" pos:end="57:38"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:38">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:74"><expr pos:start="59:13" pos:end="59:73"><call pos:start="59:13" pos:end="59:73"><name pos:start="59:13" pos:end="59:22">g_printerr</name><argument_list pos:start="59:23" pos:end="59:73">(<argument pos:start="59:24" pos:end="59:52"><expr pos:start="59:24" pos:end="59:52"><literal type="string" pos:start="59:24" pos:end="59:52">"Rlerror has errno %d (%s)\n"</literal></expr></argument>, <argument pos:start="59:55" pos:end="59:57"><expr pos:start="59:55" pos:end="59:57"><name pos:start="59:55" pos:end="59:57">err</name></expr></argument>, <argument pos:start="59:60" pos:end="59:72"><expr pos:start="59:60" pos:end="59:72"><call pos:start="59:60" pos:end="59:72"><name pos:start="59:60" pos:end="59:67">strerror</name><argument_list pos:start="59:68" pos:end="59:72">(<argument pos:start="59:69" pos:end="59:71"><expr pos:start="59:69" pos:end="59:71"><name pos:start="59:69" pos:end="59:71">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><call pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:19">g_assert_cmpint</name><argument_list pos:start="65:20" pos:end="65:35">(<argument pos:start="65:21" pos:end="65:26"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:23">hdr</name><operator pos:start="65:24" pos:end="65:24">.</operator><name pos:start="65:25" pos:end="65:26">id</name></name></expr></argument>, <argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><operator pos:start="65:29" pos:end="65:30">==</operator></expr></argument>, <argument pos:start="65:33" pos:end="65:34"><expr pos:start="65:33" pos:end="65:34"><name pos:start="65:33" pos:end="65:34">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
