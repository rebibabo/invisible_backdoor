<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8781.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">fill_slice_long</name><parameter_list pos:start="1:28" pos:end="3:92">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:78"><decl pos:start="1:52" pos:end="1:78"><type pos:start="1:52" pos:end="1:78"><name pos:start="1:52" pos:end="1:71">DXVA_Slice_H264_Long</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:78">slice</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:57"><decl pos:start="3:29" pos:end="3:57"><type pos:start="3:29" pos:end="3:57"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:53">DXVA_PicParams_H264</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:57">pp</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:76"><decl pos:start="3:60" pos:end="3:76"><type pos:start="3:60" pos:end="3:76"><name pos:start="3:60" pos:end="3:67">unsigned</name></type> <name pos:start="3:69" pos:end="3:76">position</name></decl></parameter>, <parameter pos:start="3:79" pos:end="3:91"><decl pos:start="3:79" pos:end="3:91"><type pos:start="3:79" pos:end="3:91"><name pos:start="3:79" pos:end="3:86">unsigned</name></type> <name pos:start="3:88" pos:end="3:91">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="159:1">{<block_content pos:start="7:5" pos:end="157:43">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:21">H264Context</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">h</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">H264SliceContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sl</name> <init pos:start="9:26" pos:end="9:43">= <expr pos:start="9:28" pos:end="9:43"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:29">h</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">slice_ctx</name><index pos:start="9:41" pos:end="9:43">[<expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">AVDXVAContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">ctx</name> <init pos:start="11:24" pos:end="11:47">= <expr pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:47">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">list</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:36">(<argument pos:start="17:12" pos:end="17:16"><expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:16">slice</name></expr></argument>, <argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></argument>, <argument pos:start="17:22" pos:end="17:35"><expr pos:start="17:22" pos:end="17:35"><sizeof pos:start="17:22" pos:end="17:35">sizeof<argument_list pos:start="17:28" pos:end="17:35">(<argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><operator pos:start="17:29" pos:end="17:29">*</operator><name pos:start="17:30" pos:end="17:34">slice</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:9">slice</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:32">BSNALunitDataLocation</name></name> <operator pos:start="19:34" pos:end="19:34">=</operator> <name pos:start="19:36" pos:end="19:43">position</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:9">slice</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:29">SliceBytesInBuffer</name></name>    <operator pos:start="21:34" pos:end="21:34">=</operator> <name pos:start="21:36" pos:end="21:39">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:9">slice</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:28">wBadSliceChopping</name></name>     <operator pos:start="23:34" pos:end="23:34">=</operator> <literal type="number" pos:start="23:36" pos:end="23:36">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:100"><expr pos:start="27:5" pos:end="27:99"><name pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:9">slice</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:28">first_mb_in_slice</name></name>     <operator pos:start="27:34" pos:end="27:34">=</operator> <operator pos:start="27:36" pos:end="27:36">(</operator><name pos:start="27:37" pos:end="27:44"><name pos:start="27:37" pos:end="27:38">sl</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:44">mb_y</name></name> <operator pos:start="27:46" pos:end="27:47">&gt;&gt;</operator> <call pos:start="27:49" pos:end="27:73"><name pos:start="27:49" pos:end="27:70">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="27:71" pos:end="27:73">(<argument pos:start="27:72" pos:end="27:72"><expr pos:start="27:72" pos:end="27:72"><name pos:start="27:72" pos:end="27:72">h</name></expr></argument>)</argument_list></call><operator pos:start="27:74" pos:end="27:74">)</operator> <operator pos:start="27:76" pos:end="27:76">*</operator> <name pos:start="27:78" pos:end="27:88"><name pos:start="27:78" pos:end="27:78">h</name><operator pos:start="27:79" pos:end="27:80">-&gt;</operator><name pos:start="27:81" pos:end="27:88">mb_width</name></name> <operator pos:start="27:90" pos:end="27:90">+</operator> <name pos:start="27:92" pos:end="27:99"><name pos:start="27:92" pos:end="27:93">sl</name><operator pos:start="27:94" pos:end="27:95">-&gt;</operator><name pos:start="27:96" pos:end="27:99">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:9">slice</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:25">NumMbsForSlice</name></name>        <operator pos:start="29:34" pos:end="29:34">=</operator> <literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="29:39" pos:end="29:81">/* XXX it is set once we have all slices */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:63"><expr pos:start="31:5" pos:end="31:62"><name pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:9">slice</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:31">BitOffsetToSliceData</name></name>  <operator pos:start="31:34" pos:end="31:34">=</operator> <call pos:start="31:36" pos:end="31:58"><name pos:start="31:36" pos:end="31:49">get_bits_count</name><argument_list pos:start="31:50" pos:end="31:58">(<argument pos:start="31:51" pos:end="31:57"><expr pos:start="31:51" pos:end="31:57"><operator pos:start="31:51" pos:end="31:51">&amp;</operator><name pos:start="31:52" pos:end="31:57"><name pos:start="31:52" pos:end="31:53">sl</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:57">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:60" pos:end="31:60">-</operator> <literal type="number" pos:start="31:62" pos:end="31:62">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:9">slice</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">slice_type</name></name>            <operator pos:start="33:34" pos:end="33:34">=</operator> <call pos:start="33:36" pos:end="33:61"><name pos:start="33:36" pos:end="33:57">ff_h264_get_slice_type</name><argument_list pos:start="33:58" pos:end="33:61">(<argument pos:start="33:59" pos:end="33:60"><expr pos:start="33:59" pos:end="33:60"><name pos:start="33:59" pos:end="33:60">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:29">(<expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:10">sl</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:28">slice_type_fixed</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:13">slice</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:25">slice_type</name></name> <operator pos:start="37:27" pos:end="37:28">+=</operator> <literal type="number" pos:start="37:30" pos:end="37:30">5</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:73"><expr pos:start="39:5" pos:end="39:72"><name pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:9">slice</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:33">luma_log2_weight_denom</name></name>       <operator pos:start="39:41" pos:end="39:41">=</operator> <name pos:start="39:43" pos:end="39:72"><name pos:start="39:43" pos:end="39:44">sl</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:49">pwt</name><operator pos:start="39:50" pos:end="39:50">.</operator><name pos:start="39:51" pos:end="39:72">luma_log2_weight_denom</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:75"><expr pos:start="41:5" pos:end="41:74"><name pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:9">slice</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:35">chroma_log2_weight_denom</name></name>     <operator pos:start="41:41" pos:end="41:41">=</operator> <name pos:start="41:43" pos:end="41:74"><name pos:start="41:43" pos:end="41:44">sl</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:49">pwt</name><operator pos:start="41:50" pos:end="41:50">.</operator><name pos:start="41:51" pos:end="41:74">chroma_log2_weight_denom</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:67"><if pos:start="43:5" pos:end="45:67">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:10">sl</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:22">list_count</name></name> <operator pos:start="43:24" pos:end="43:24">&gt;</operator> <literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:67"><block_content pos:start="45:9" pos:end="45:67">

        <expr_stmt pos:start="45:9" pos:end="45:67"><expr pos:start="45:9" pos:end="45:66"><name pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:13">slice</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:43">num_ref_idx_l0_active_minus1</name></name> <operator pos:start="45:45" pos:end="45:45">=</operator> <name pos:start="45:47" pos:end="45:62"><name pos:start="45:47" pos:end="45:48">sl</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:59">ref_count</name><index pos:start="45:60" pos:end="45:62">[<expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">0</literal></expr>]</index></name> <operator pos:start="45:64" pos:end="45:64">-</operator> <literal type="number" pos:start="45:66" pos:end="45:66">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="49:67"><if pos:start="47:5" pos:end="49:67">if <condition pos:start="47:8" pos:end="47:27">(<expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:10">sl</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:22">list_count</name></name> <operator pos:start="47:24" pos:end="47:24">&gt;</operator> <literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:67"><block_content pos:start="49:9" pos:end="49:67">

        <expr_stmt pos:start="49:9" pos:end="49:67"><expr pos:start="49:9" pos:end="49:66"><name pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:13">slice</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:43">num_ref_idx_l1_active_minus1</name></name> <operator pos:start="49:45" pos:end="49:45">=</operator> <name pos:start="49:47" pos:end="49:62"><name pos:start="49:47" pos:end="49:48">sl</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:59">ref_count</name><index pos:start="49:60" pos:end="49:62">[<expr pos:start="49:61" pos:end="49:61"><literal type="number" pos:start="49:61" pos:end="49:61">1</literal></expr>]</index></name> <operator pos:start="49:64" pos:end="49:64">-</operator> <literal type="number" pos:start="49:66" pos:end="49:66">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:72"><expr pos:start="51:5" pos:end="51:71"><name pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:9">slice</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:37">slice_alpha_c0_offset_div2</name></name>   <operator pos:start="51:41" pos:end="51:41">=</operator> <name pos:start="51:43" pos:end="51:67"><name pos:start="51:43" pos:end="51:44">sl</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:67">slice_alpha_c0_offset</name></name> <operator pos:start="51:69" pos:end="51:69">/</operator> <literal type="number" pos:start="51:71" pos:end="51:71">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:72"><expr pos:start="53:5" pos:end="53:71"><name pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:9">slice</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:33">slice_beta_offset_div2</name></name>       <operator pos:start="53:41" pos:end="53:41">=</operator> <name pos:start="53:43" pos:end="53:63"><name pos:start="53:43" pos:end="53:44">sl</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:63">slice_beta_offset</name></name>     <operator pos:start="53:69" pos:end="53:69">/</operator> <literal type="number" pos:start="53:71" pos:end="53:71">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:9">slice</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:24">Reserved8Bits</name></name>                <operator pos:start="55:41" pos:end="55:41">=</operator> <literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr>;</expr_stmt>



    <for pos:start="59:5" pos:end="135:5">for <control pos:start="59:9" pos:end="59:36">(<init pos:start="59:10" pos:end="59:18"><expr pos:start="59:10" pos:end="59:17"><name pos:start="59:10" pos:end="59:13">list</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</init> <condition pos:start="59:20" pos:end="59:28"><expr pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:23">list</name> <operator pos:start="59:25" pos:end="59:25">&lt;</operator> <literal type="number" pos:start="59:27" pos:end="59:27">2</literal></expr>;</condition> <incr pos:start="59:30" pos:end="59:35"><expr pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:33">list</name><operator pos:start="59:34" pos:end="59:35">++</operator></expr></incr>)</control> <block pos:start="59:38" pos:end="135:5">{<block_content pos:start="61:9" pos:end="133:9">

        <decl_stmt pos:start="61:9" pos:end="61:19"><decl pos:start="61:9" pos:end="61:18"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">unsigned</name></type> <name pos:start="61:18" pos:end="61:18">i</name></decl>;</decl_stmt>

        <for pos:start="63:9" pos:end="133:9">for <control pos:start="63:13" pos:end="63:69">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:64"><expr pos:start="63:21" pos:end="63:63"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <call pos:start="63:25" pos:end="63:63"><name pos:start="63:25" pos:end="63:38">FF_ARRAY_ELEMS</name><argument_list pos:start="63:39" pos:end="63:63">(<argument pos:start="63:40" pos:end="63:62"><expr pos:start="63:40" pos:end="63:62"><name pos:start="63:40" pos:end="63:62"><name pos:start="63:40" pos:end="63:44">slice</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:56">RefPicList</name><index pos:start="63:57" pos:end="63:62">[<expr pos:start="63:58" pos:end="63:61"><name pos:start="63:58" pos:end="63:61">list</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="63:66" pos:end="63:68"><expr pos:start="63:66" pos:end="63:68"><name pos:start="63:66" pos:end="63:66">i</name><operator pos:start="63:67" pos:end="63:68">++</operator></expr></incr>)</control> <block pos:start="63:71" pos:end="133:9">{<block_content pos:start="65:13" pos:end="131:13">

            <if_stmt pos:start="65:13" pos:end="131:13"><if pos:start="65:13" pos:end="117:13">if <condition pos:start="65:16" pos:end="65:65">(<expr pos:start="65:17" pos:end="65:64"><name pos:start="65:17" pos:end="65:20">list</name> <operator pos:start="65:22" pos:end="65:22">&lt;</operator> <name pos:start="65:24" pos:end="65:37"><name pos:start="65:24" pos:end="65:25">sl</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:37">list_count</name></name> <operator pos:start="65:39" pos:end="65:40">&amp;&amp;</operator> <name pos:start="65:42" pos:end="65:42">i</name> <operator pos:start="65:44" pos:end="65:44">&lt;</operator> <name pos:start="65:46" pos:end="65:64"><name pos:start="65:46" pos:end="65:47">sl</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:58">ref_count</name><index pos:start="65:59" pos:end="65:64">[<expr pos:start="65:60" pos:end="65:63"><name pos:start="65:60" pos:end="65:63">list</name></expr>]</index></name></expr>)</condition> <block pos:start="65:67" pos:end="117:13">{<block_content pos:start="67:17" pos:end="115:17">

                <decl_stmt pos:start="67:17" pos:end="67:68"><decl pos:start="67:17" pos:end="67:67"><type pos:start="67:17" pos:end="67:35"><specifier pos:start="67:17" pos:end="67:21">const</specifier> <name pos:start="67:23" pos:end="67:33">H264Picture</name> <modifier pos:start="67:35" pos:end="67:35">*</modifier></type><name pos:start="67:36" pos:end="67:36">r</name> <init pos:start="67:38" pos:end="67:67">= <expr pos:start="67:40" pos:end="67:67"><name pos:start="67:40" pos:end="67:60"><name pos:start="67:40" pos:end="67:41">sl</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:51">ref_list</name><index pos:start="67:52" pos:end="67:57">[<expr pos:start="67:53" pos:end="67:56"><name pos:start="67:53" pos:end="67:56">list</name></expr>]</index><index pos:start="67:58" pos:end="67:60">[<expr pos:start="67:59" pos:end="67:59"><name pos:start="67:59" pos:end="67:59">i</name></expr>]</index></name><operator pos:start="67:61" pos:end="67:61">.</operator><name pos:start="67:62" pos:end="67:67">parent</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="69:17" pos:end="69:31"><decl pos:start="69:17" pos:end="69:30"><type pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:24">unsigned</name></type> <name pos:start="69:26" pos:end="69:30">plane</name></decl>;</decl_stmt>

                <decl_stmt pos:start="71:17" pos:end="71:31"><decl pos:start="71:17" pos:end="71:30"><type pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24">unsigned</name></type> <name pos:start="71:26" pos:end="71:30">index</name></decl>;</decl_stmt>

                <if_stmt pos:start="73:17" pos:end="79:95"><if pos:start="73:17" pos:end="75:73">if <condition pos:start="73:20" pos:end="73:95">(<expr pos:start="73:21" pos:end="73:94"><call pos:start="73:21" pos:end="73:55"><name pos:start="73:21" pos:end="73:43">DXVA_CONTEXT_WORKAROUND</name><argument_list pos:start="73:44" pos:end="73:55">(<argument pos:start="73:45" pos:end="73:49"><expr pos:start="73:45" pos:end="73:49"><name pos:start="73:45" pos:end="73:49">avctx</name></expr></argument>, <argument pos:start="73:52" pos:end="73:54"><expr pos:start="73:52" pos:end="73:54"><name pos:start="73:52" pos:end="73:54">ctx</name></expr></argument>)</argument_list></call> <operator pos:start="73:57" pos:end="73:57">&amp;</operator> <name pos:start="73:59" pos:end="73:94">FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO</name></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:73"><block_content pos:start="75:21" pos:end="75:73">

                    <expr_stmt pos:start="75:21" pos:end="75:73"><expr pos:start="75:21" pos:end="75:72"><name pos:start="75:21" pos:end="75:25">index</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <call pos:start="75:29" pos:end="75:72"><name pos:start="75:29" pos:end="75:54">ff_dxva2_get_surface_index</name><argument_list pos:start="75:55" pos:end="75:72">(<argument pos:start="75:56" pos:end="75:60"><expr pos:start="75:56" pos:end="75:60"><name pos:start="75:56" pos:end="75:60">avctx</name></expr></argument>, <argument pos:start="75:63" pos:end="75:65"><expr pos:start="75:63" pos:end="75:65"><name pos:start="75:63" pos:end="75:65">ctx</name></expr></argument>, <argument pos:start="75:68" pos:end="75:71"><expr pos:start="75:68" pos:end="75:71"><name pos:start="75:68" pos:end="75:71"><name pos:start="75:68" pos:end="75:68">r</name><operator pos:start="75:69" pos:end="75:70">-&gt;</operator><name pos:start="75:71" pos:end="75:71">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="77:17" pos:end="79:95">else<block type="pseudo" pos:start="79:21" pos:end="79:95"><block_content pos:start="79:21" pos:end="79:95">

                    <expr_stmt pos:start="79:21" pos:end="79:95"><expr pos:start="79:21" pos:end="79:94"><name pos:start="79:21" pos:end="79:25">index</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <call pos:start="79:29" pos:end="79:94"><name pos:start="79:29" pos:end="79:44">get_refpic_index</name><argument_list pos:start="79:45" pos:end="79:94">(<argument pos:start="79:46" pos:end="79:47"><expr pos:start="79:46" pos:end="79:47"><name pos:start="79:46" pos:end="79:47">pp</name></expr></argument>, <argument pos:start="79:50" pos:end="79:93"><expr pos:start="79:50" pos:end="79:93"><call pos:start="79:50" pos:end="79:93"><name pos:start="79:50" pos:end="79:75">ff_dxva2_get_surface_index</name><argument_list pos:start="79:76" pos:end="79:93">(<argument pos:start="79:77" pos:end="79:81"><expr pos:start="79:77" pos:end="79:81"><name pos:start="79:77" pos:end="79:81">avctx</name></expr></argument>, <argument pos:start="79:84" pos:end="79:86"><expr pos:start="79:84" pos:end="79:86"><name pos:start="79:84" pos:end="79:86">ctx</name></expr></argument>, <argument pos:start="79:89" pos:end="79:92"><expr pos:start="79:89" pos:end="79:92"><name pos:start="79:89" pos:end="79:92"><name pos:start="79:89" pos:end="79:89">r</name><operator pos:start="79:90" pos:end="79:91">-&gt;</operator><name pos:start="79:92" pos:end="79:92">f</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="83:89"><expr pos:start="81:17" pos:end="83:88"><call pos:start="81:17" pos:end="83:88"><name pos:start="81:17" pos:end="81:34">fill_picture_entry</name><argument_list pos:start="81:35" pos:end="83:88">(<argument pos:start="81:36" pos:end="81:62"><expr pos:start="81:36" pos:end="81:62"><operator pos:start="81:36" pos:end="81:36">&amp;</operator><name pos:start="81:37" pos:end="81:62"><name pos:start="81:37" pos:end="81:41">slice</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:53">RefPicList</name><index pos:start="81:54" pos:end="81:59">[<expr pos:start="81:55" pos:end="81:58"><name pos:start="81:55" pos:end="81:58">list</name></expr>]</index><index pos:start="81:60" pos:end="81:62">[<expr pos:start="81:61" pos:end="81:61"><name pos:start="81:61" pos:end="81:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="81:65" pos:end="81:69"><expr pos:start="81:65" pos:end="81:69"><name pos:start="81:65" pos:end="81:69">index</name></expr></argument>,

                                   <argument pos:start="83:36" pos:end="83:87"><expr pos:start="83:36" pos:end="83:87"><name pos:start="83:36" pos:end="83:56"><name pos:start="83:36" pos:end="83:37">sl</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:47">ref_list</name><index pos:start="83:48" pos:end="83:53">[<expr pos:start="83:49" pos:end="83:52"><name pos:start="83:49" pos:end="83:52">list</name></expr>]</index><index pos:start="83:54" pos:end="83:56">[<expr pos:start="83:55" pos:end="83:55"><name pos:start="83:55" pos:end="83:55">i</name></expr>]</index></name><operator pos:start="83:57" pos:end="83:57">.</operator><name pos:start="83:58" pos:end="83:66">reference</name> <operator pos:start="83:68" pos:end="83:69">==</operator> <name pos:start="83:71" pos:end="83:87">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="85:17" pos:end="115:17">for <control pos:start="85:21" pos:end="85:51">(<init pos:start="85:22" pos:end="85:31"><expr pos:start="85:22" pos:end="85:30"><name pos:start="85:22" pos:end="85:26">plane</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>;</init> <condition pos:start="85:33" pos:end="85:42"><expr pos:start="85:33" pos:end="85:41"><name pos:start="85:33" pos:end="85:37">plane</name> <operator pos:start="85:39" pos:end="85:39">&lt;</operator> <literal type="number" pos:start="85:41" pos:end="85:41">3</literal></expr>;</condition> <incr pos:start="85:44" pos:end="85:50"><expr pos:start="85:44" pos:end="85:50"><name pos:start="85:44" pos:end="85:48">plane</name><operator pos:start="85:49" pos:end="85:50">++</operator></expr></incr>)</control> <block pos:start="85:53" pos:end="115:17">{<block_content pos:start="87:21" pos:end="113:58">

                    <decl_stmt pos:start="87:21" pos:end="87:29"><decl pos:start="87:21" pos:end="87:25"><type pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">int</name></type> <name pos:start="87:25" pos:end="87:25">w</name></decl>, <decl pos:start="87:28" pos:end="87:28"><type ref="prev" pos:start="87:21" pos:end="87:23"/><name pos:start="87:28" pos:end="87:28">o</name></decl>;</decl_stmt>

                    <if_stmt pos:start="89:21" pos:end="109:21"><if pos:start="89:21" pos:end="95:21">if <condition pos:start="89:24" pos:end="89:69">(<expr pos:start="89:25" pos:end="89:68"><name pos:start="89:25" pos:end="89:29">plane</name> <operator pos:start="89:31" pos:end="89:32">==</operator> <literal type="number" pos:start="89:34" pos:end="89:34">0</literal> <operator pos:start="89:36" pos:end="89:37">&amp;&amp;</operator> <name pos:start="89:39" pos:end="89:68"><name pos:start="89:39" pos:end="89:40">sl</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:45">pwt</name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:62">luma_weight_flag</name><index pos:start="89:63" pos:end="89:68">[<expr pos:start="89:64" pos:end="89:67"><name pos:start="89:64" pos:end="89:67">list</name></expr>]</index></name></expr>)</condition> <block pos:start="89:71" pos:end="95:21">{<block_content pos:start="91:25" pos:end="93:60">

                        <expr_stmt pos:start="91:25" pos:end="91:60"><expr pos:start="91:25" pos:end="91:59"><name pos:start="91:25" pos:end="91:25">w</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:59"><name pos:start="91:29" pos:end="91:30">sl</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:35">pwt</name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:47">luma_weight</name><index pos:start="91:48" pos:end="91:50">[<expr pos:start="91:49" pos:end="91:49"><name pos:start="91:49" pos:end="91:49">i</name></expr>]</index><index pos:start="91:51" pos:end="91:56">[<expr pos:start="91:52" pos:end="91:55"><name pos:start="91:52" pos:end="91:55">list</name></expr>]</index><index pos:start="91:57" pos:end="91:59">[<expr pos:start="91:58" pos:end="91:58"><literal type="number" pos:start="91:58" pos:end="91:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="93:25" pos:end="93:60"><expr pos:start="93:25" pos:end="93:59"><name pos:start="93:25" pos:end="93:25">o</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:59"><name pos:start="93:29" pos:end="93:30">sl</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:35">pwt</name><operator pos:start="93:36" pos:end="93:36">.</operator><name pos:start="93:37" pos:end="93:47">luma_weight</name><index pos:start="93:48" pos:end="93:50">[<expr pos:start="93:49" pos:end="93:49"><name pos:start="93:49" pos:end="93:49">i</name></expr>]</index><index pos:start="93:51" pos:end="93:56">[<expr pos:start="93:52" pos:end="93:55"><name pos:start="93:52" pos:end="93:55">list</name></expr>]</index><index pos:start="93:57" pos:end="93:59">[<expr pos:start="93:58" pos:end="93:58"><literal type="number" pos:start="93:58" pos:end="93:58">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="95:23" pos:end="101:21">else if <condition pos:start="95:31" pos:end="95:78">(<expr pos:start="95:32" pos:end="95:77"><name pos:start="95:32" pos:end="95:36">plane</name> <operator pos:start="95:38" pos:end="95:39">&gt;=</operator> <literal type="number" pos:start="95:41" pos:end="95:41">1</literal> <operator pos:start="95:43" pos:end="95:44">&amp;&amp;</operator> <name pos:start="95:46" pos:end="95:77"><name pos:start="95:46" pos:end="95:47">sl</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:52">pwt</name><operator pos:start="95:53" pos:end="95:53">.</operator><name pos:start="95:54" pos:end="95:71">chroma_weight_flag</name><index pos:start="95:72" pos:end="95:77">[<expr pos:start="95:73" pos:end="95:76"><name pos:start="95:73" pos:end="95:76">list</name></expr>]</index></name></expr>)</condition> <block pos:start="95:80" pos:end="101:21">{<block_content pos:start="97:25" pos:end="99:71">

                        <expr_stmt pos:start="97:25" pos:end="97:71"><expr pos:start="97:25" pos:end="97:70"><name pos:start="97:25" pos:end="97:25">w</name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:70"><name pos:start="97:29" pos:end="97:30">sl</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:35">pwt</name><operator pos:start="97:36" pos:end="97:36">.</operator><name pos:start="97:37" pos:end="97:49">chroma_weight</name><index pos:start="97:50" pos:end="97:52">[<expr pos:start="97:51" pos:end="97:51"><name pos:start="97:51" pos:end="97:51">i</name></expr>]</index><index pos:start="97:53" pos:end="97:58">[<expr pos:start="97:54" pos:end="97:57"><name pos:start="97:54" pos:end="97:57">list</name></expr>]</index><index pos:start="97:59" pos:end="97:67">[<expr pos:start="97:60" pos:end="97:66"><name pos:start="97:60" pos:end="97:64">plane</name><operator pos:start="97:65" pos:end="97:65">-</operator><literal type="number" pos:start="97:66" pos:end="97:66">1</literal></expr>]</index><index pos:start="97:68" pos:end="97:70">[<expr pos:start="97:69" pos:end="97:69"><literal type="number" pos:start="97:69" pos:end="97:69">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:71"><expr pos:start="99:25" pos:end="99:70"><name pos:start="99:25" pos:end="99:25">o</name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:70"><name pos:start="99:29" pos:end="99:30">sl</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:35">pwt</name><operator pos:start="99:36" pos:end="99:36">.</operator><name pos:start="99:37" pos:end="99:49">chroma_weight</name><index pos:start="99:50" pos:end="99:52">[<expr pos:start="99:51" pos:end="99:51"><name pos:start="99:51" pos:end="99:51">i</name></expr>]</index><index pos:start="99:53" pos:end="99:58">[<expr pos:start="99:54" pos:end="99:57"><name pos:start="99:54" pos:end="99:57">list</name></expr>]</index><index pos:start="99:59" pos:end="99:67">[<expr pos:start="99:60" pos:end="99:66"><name pos:start="99:60" pos:end="99:64">plane</name><operator pos:start="99:65" pos:end="99:65">-</operator><literal type="number" pos:start="99:66" pos:end="99:66">1</literal></expr>]</index><index pos:start="99:68" pos:end="99:70">[<expr pos:start="99:69" pos:end="99:69"><literal type="number" pos:start="99:69" pos:end="99:69">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="101:23" pos:end="109:21">else <block pos:start="101:28" pos:end="109:21">{<block_content pos:start="103:25" pos:end="107:30">

                        <expr_stmt pos:start="103:25" pos:end="105:81"><expr pos:start="103:25" pos:end="105:80"><name pos:start="103:25" pos:end="103:25">w</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:29">1</literal> <operator pos:start="103:31" pos:end="103:32">&lt;&lt;</operator> <operator pos:start="103:34" pos:end="103:34">(</operator><ternary pos:start="103:35" pos:end="105:79"><condition pos:start="103:35" pos:end="103:46"><expr pos:start="103:35" pos:end="103:44"><name pos:start="103:35" pos:end="103:39">plane</name> <operator pos:start="103:41" pos:end="103:42">==</operator> <literal type="number" pos:start="103:44" pos:end="103:44">0</literal></expr> ?</condition><then pos:start="103:48" pos:end="103:77"> <expr pos:start="103:48" pos:end="103:77"><name pos:start="103:48" pos:end="103:77"><name pos:start="103:48" pos:end="103:49">sl</name><operator pos:start="103:50" pos:end="103:51">-&gt;</operator><name pos:start="103:52" pos:end="103:54">pwt</name><operator pos:start="103:55" pos:end="103:55">.</operator><name pos:start="103:56" pos:end="103:77">luma_log2_weight_denom</name></name></expr> </then><else pos:start="103:79" pos:end="105:79">:

                                               <expr pos:start="105:48" pos:end="105:79"><name pos:start="105:48" pos:end="105:79"><name pos:start="105:48" pos:end="105:49">sl</name><operator pos:start="105:50" pos:end="105:51">-&gt;</operator><name pos:start="105:52" pos:end="105:54">pwt</name><operator pos:start="105:55" pos:end="105:55">.</operator><name pos:start="105:56" pos:end="105:79">chroma_log2_weight_denom</name></name></expr></else></ternary><operator pos:start="105:80" pos:end="105:80">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="107:25" pos:end="107:30"><expr pos:start="107:25" pos:end="107:29"><name pos:start="107:25" pos:end="107:25">o</name> <operator pos:start="107:27" pos:end="107:27">=</operator> <literal type="number" pos:start="107:29" pos:end="107:29">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:58"><expr pos:start="111:21" pos:end="111:57"><name pos:start="111:21" pos:end="111:53"><name pos:start="111:21" pos:end="111:25">slice</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:34">Weights</name><index pos:start="111:35" pos:end="111:40">[<expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">list</name></expr>]</index><index pos:start="111:41" pos:end="111:43">[<expr pos:start="111:42" pos:end="111:42"><name pos:start="111:42" pos:end="111:42">i</name></expr>]</index><index pos:start="111:44" pos:end="111:50">[<expr pos:start="111:45" pos:end="111:49"><name pos:start="111:45" pos:end="111:49">plane</name></expr>]</index><index pos:start="111:51" pos:end="111:53">[<expr pos:start="111:52" pos:end="111:52"><literal type="number" pos:start="111:52" pos:end="111:52">0</literal></expr>]</index></name> <operator pos:start="111:55" pos:end="111:55">=</operator> <name pos:start="111:57" pos:end="111:57">w</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:58"><expr pos:start="113:21" pos:end="113:57"><name pos:start="113:21" pos:end="113:53"><name pos:start="113:21" pos:end="113:25">slice</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:34">Weights</name><index pos:start="113:35" pos:end="113:40">[<expr pos:start="113:36" pos:end="113:39"><name pos:start="113:36" pos:end="113:39">list</name></expr>]</index><index pos:start="113:41" pos:end="113:43">[<expr pos:start="113:42" pos:end="113:42"><name pos:start="113:42" pos:end="113:42">i</name></expr>]</index><index pos:start="113:44" pos:end="113:50">[<expr pos:start="113:45" pos:end="113:49"><name pos:start="113:45" pos:end="113:49">plane</name></expr>]</index><index pos:start="113:51" pos:end="113:53">[<expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">1</literal></expr>]</index></name> <operator pos:start="113:55" pos:end="113:55">=</operator> <name pos:start="113:57" pos:end="113:57">o</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="131:13">else <block pos:start="117:20" pos:end="131:13">{<block_content pos:start="119:17" pos:end="129:17">

                <decl_stmt pos:start="119:17" pos:end="119:31"><decl pos:start="119:17" pos:end="119:30"><type pos:start="119:17" pos:end="119:24"><name pos:start="119:17" pos:end="119:24">unsigned</name></type> <name pos:start="119:26" pos:end="119:30">plane</name></decl>;</decl_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:60"><expr pos:start="121:17" pos:end="121:59"><name pos:start="121:17" pos:end="121:42"><name pos:start="121:17" pos:end="121:21">slice</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:33">RefPicList</name><index pos:start="121:34" pos:end="121:39">[<expr pos:start="121:35" pos:end="121:38"><name pos:start="121:35" pos:end="121:38">list</name></expr>]</index><index pos:start="121:40" pos:end="121:42">[<expr pos:start="121:41" pos:end="121:41"><name pos:start="121:41" pos:end="121:41">i</name></expr>]</index></name><operator pos:start="121:43" pos:end="121:43">.</operator><name pos:start="121:44" pos:end="121:52">bPicEntry</name> <operator pos:start="121:54" pos:end="121:54">=</operator> <literal type="number" pos:start="121:56" pos:end="121:59">0xff</literal></expr>;</expr_stmt>

                <for pos:start="123:17" pos:end="129:17">for <control pos:start="123:21" pos:end="123:51">(<init pos:start="123:22" pos:end="123:31"><expr pos:start="123:22" pos:end="123:30"><name pos:start="123:22" pos:end="123:26">plane</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <literal type="number" pos:start="123:30" pos:end="123:30">0</literal></expr>;</init> <condition pos:start="123:33" pos:end="123:42"><expr pos:start="123:33" pos:end="123:41"><name pos:start="123:33" pos:end="123:37">plane</name> <operator pos:start="123:39" pos:end="123:39">&lt;</operator> <literal type="number" pos:start="123:41" pos:end="123:41">3</literal></expr>;</condition> <incr pos:start="123:44" pos:end="123:50"><expr pos:start="123:44" pos:end="123:50"><name pos:start="123:44" pos:end="123:48">plane</name><operator pos:start="123:49" pos:end="123:50">++</operator></expr></incr>)</control> <block pos:start="123:53" pos:end="129:17">{<block_content pos:start="125:21" pos:end="127:58">

                    <expr_stmt pos:start="125:21" pos:end="125:58"><expr pos:start="125:21" pos:end="125:57"><name pos:start="125:21" pos:end="125:53"><name pos:start="125:21" pos:end="125:25">slice</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:34">Weights</name><index pos:start="125:35" pos:end="125:40">[<expr pos:start="125:36" pos:end="125:39"><name pos:start="125:36" pos:end="125:39">list</name></expr>]</index><index pos:start="125:41" pos:end="125:43">[<expr pos:start="125:42" pos:end="125:42"><name pos:start="125:42" pos:end="125:42">i</name></expr>]</index><index pos:start="125:44" pos:end="125:50">[<expr pos:start="125:45" pos:end="125:49"><name pos:start="125:45" pos:end="125:49">plane</name></expr>]</index><index pos:start="125:51" pos:end="125:53">[<expr pos:start="125:52" pos:end="125:52"><literal type="number" pos:start="125:52" pos:end="125:52">0</literal></expr>]</index></name> <operator pos:start="125:55" pos:end="125:55">=</operator> <literal type="number" pos:start="125:57" pos:end="125:57">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:58"><expr pos:start="127:21" pos:end="127:57"><name pos:start="127:21" pos:end="127:53"><name pos:start="127:21" pos:end="127:25">slice</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:34">Weights</name><index pos:start="127:35" pos:end="127:40">[<expr pos:start="127:36" pos:end="127:39"><name pos:start="127:36" pos:end="127:39">list</name></expr>]</index><index pos:start="127:41" pos:end="127:43">[<expr pos:start="127:42" pos:end="127:42"><name pos:start="127:42" pos:end="127:42">i</name></expr>]</index><index pos:start="127:44" pos:end="127:50">[<expr pos:start="127:45" pos:end="127:49"><name pos:start="127:45" pos:end="127:49">plane</name></expr>]</index><index pos:start="127:51" pos:end="127:53">[<expr pos:start="127:52" pos:end="127:52"><literal type="number" pos:start="127:52" pos:end="127:52">1</literal></expr>]</index></name> <operator pos:start="127:55" pos:end="127:55">=</operator> <literal type="number" pos:start="127:57" pos:end="127:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="137:5" pos:end="137:33"><expr pos:start="137:5" pos:end="137:32"><name pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:9">slice</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:25">slice_qs_delta</name></name>    <operator pos:start="137:30" pos:end="137:30">=</operator> <literal type="number" pos:start="137:32" pos:end="137:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="137:35" pos:end="137:69">/* XXX not implemented by FFmpeg */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:63"><expr pos:start="139:5" pos:end="139:62"><name pos:start="139:5" pos:end="139:25"><name pos:start="139:5" pos:end="139:9">slice</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:25">slice_qp_delta</name></name>    <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:41"><name pos:start="139:32" pos:end="139:33">sl</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:41">qscale</name></name> <operator pos:start="139:43" pos:end="139:43">-</operator> <name pos:start="139:45" pos:end="139:62"><name pos:start="139:45" pos:end="139:45">h</name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:49">ps</name><operator pos:start="139:50" pos:end="139:50">.</operator><name pos:start="139:51" pos:end="139:53">pps</name><operator pos:start="139:54" pos:end="139:55">-&gt;</operator><name pos:start="139:56" pos:end="139:62">init_qp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:55"><expr pos:start="141:5" pos:end="141:54"><name pos:start="141:5" pos:end="141:28"><name pos:start="141:5" pos:end="141:9">slice</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:28">redundant_pic_cnt</name></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:54"><name pos:start="141:32" pos:end="141:33">sl</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:54">redundant_pic_count</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="145:72"><if pos:start="143:5" pos:end="145:72">if <condition pos:start="143:8" pos:end="143:44">(<expr pos:start="143:9" pos:end="143:43"><name pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:10">sl</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:22">slice_type</name></name> <operator pos:start="143:24" pos:end="143:25">==</operator> <name pos:start="143:27" pos:end="143:43">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:72"><block_content pos:start="145:9" pos:end="145:72">

        <expr_stmt pos:start="145:9" pos:end="145:72"><expr pos:start="145:9" pos:end="145:71"><name pos:start="145:9" pos:end="145:42"><name pos:start="145:9" pos:end="145:13">slice</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:42">direct_spatial_mv_pred_flag</name></name> <operator pos:start="145:44" pos:end="145:44">=</operator> <name pos:start="145:46" pos:end="145:71"><name pos:start="145:46" pos:end="145:47">sl</name><operator pos:start="145:48" pos:end="145:49">-&gt;</operator><name pos:start="145:50" pos:end="145:71">direct_spatial_mv_pred</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:70"><expr pos:start="147:5" pos:end="147:69"><name pos:start="147:5" pos:end="147:25"><name pos:start="147:5" pos:end="147:9">slice</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:25">cabac_init_idc</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <ternary pos:start="147:29" pos:end="147:69"><condition pos:start="147:29" pos:end="147:46"><expr pos:start="147:29" pos:end="147:44"><name pos:start="147:29" pos:end="147:44"><name pos:start="147:29" pos:end="147:29">h</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:33">ps</name><operator pos:start="147:34" pos:end="147:34">.</operator><name pos:start="147:35" pos:end="147:37">pps</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:44">cabac</name></name></expr> ?</condition><then pos:start="147:48" pos:end="147:65"> <expr pos:start="147:48" pos:end="147:65"><name pos:start="147:48" pos:end="147:65"><name pos:start="147:48" pos:end="147:49">sl</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:65">cabac_init_idc</name></name></expr> </then><else pos:start="147:67" pos:end="147:69">: <expr pos:start="147:69" pos:end="147:69"><literal type="number" pos:start="147:69" pos:end="147:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="155:69"><if pos:start="149:5" pos:end="151:73">if <condition pos:start="149:8" pos:end="149:34">(<expr pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:10">sl</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:29">deblocking_filter</name></name> <operator pos:start="149:31" pos:end="149:31">&lt;</operator> <literal type="number" pos:start="149:33" pos:end="149:33">2</literal></expr>)</condition><block type="pseudo" pos:start="151:9" pos:end="151:73"><block_content pos:start="151:9" pos:end="151:73">

        <expr_stmt pos:start="151:9" pos:end="151:73"><expr pos:start="151:9" pos:end="151:72"><name pos:start="151:9" pos:end="151:44"><name pos:start="151:9" pos:end="151:13">slice</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:44">disable_deblocking_filter_idc</name></name> <operator pos:start="151:46" pos:end="151:46">=</operator> <literal type="number" pos:start="151:48" pos:end="151:50">1</literal> <operator pos:start="151:50" pos:end="151:50">-</operator> <name pos:start="151:52" pos:end="151:72"><name pos:start="151:52" pos:end="151:53">sl</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:72">deblocking_filter</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="153:5" pos:end="155:69">else<block type="pseudo" pos:start="155:9" pos:end="155:69"><block_content pos:start="155:9" pos:end="155:69">

        <expr_stmt pos:start="155:9" pos:end="155:69"><expr pos:start="155:9" pos:end="155:68"><name pos:start="155:9" pos:end="155:44"><name pos:start="155:9" pos:end="155:13">slice</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:44">disable_deblocking_filter_idc</name></name> <operator pos:start="155:46" pos:end="155:46">=</operator> <name pos:start="155:48" pos:end="155:68"><name pos:start="155:48" pos:end="155:49">sl</name><operator pos:start="155:50" pos:end="155:51">-&gt;</operator><name pos:start="155:52" pos:end="155:68">deblocking_filter</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:43"><expr pos:start="157:5" pos:end="157:42"><name pos:start="157:5" pos:end="157:19"><name pos:start="157:5" pos:end="157:9">slice</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:19">slice_id</name></name> <operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:38"><name pos:start="157:23" pos:end="157:23">h</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:38">current_slice</name></name> <operator pos:start="157:40" pos:end="157:40">-</operator> <literal type="number" pos:start="157:42" pos:end="157:42">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
