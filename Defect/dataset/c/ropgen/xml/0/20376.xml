<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20376.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">v9fs_clunk</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:29"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:30">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">V9fsFidState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">V9fsPDU</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pdu</name> <init pos:start="13:18" pos:end="13:25">= <expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">V9fsState</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:16">s</name> <init pos:start="15:18" pos:end="15:25">= <expr pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:25"><name pos:start="15:20" pos:end="15:22">pdu</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:17">pdu_unmarshal</name><argument_list pos:start="19:18" pos:end="19:41">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">pdu</name></expr></argument>, <argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">offset</name></expr></argument>, <argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><literal type="string" pos:start="19:32" pos:end="19:34">"d"</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:40">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><call pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:20">trace_v9fs_clunk</name><argument_list pos:start="21:21" pos:end="21:44">(<argument pos:start="21:22" pos:end="21:29"><expr pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:24">pdu</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:29">tag</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:38"><expr pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:34">pdu</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:38">id</name></name></expr></argument>, <argument pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:43">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:8">fidp</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:28"><name pos:start="25:12" pos:end="25:20">clunk_fid</name><argument_list pos:start="25:21" pos:end="25:28">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">s</name></expr></argument>, <argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:12">fidp</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <name pos:start="27:17" pos:end="27:20">NULL</name></expr>)</condition> <block pos:start="27:23" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:23">

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:11">err</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><name pos:start="29:16" pos:end="29:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:23">goto <name pos:start="31:14" pos:end="31:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="35:5" pos:end="41:7">/*

     * Bump the ref so that put_fid will

     * free the fid.

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:16"><expr pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:8">fidp</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:13">ref</name></name><operator pos:start="43:14" pos:end="43:15">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:17"><expr pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:7">err</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <name pos:start="45:11" pos:end="45:16">offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><call pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:11">put_fid</name><argument_list pos:start="49:12" pos:end="49:22">(<argument pos:start="49:13" pos:end="49:15"><expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">pdu</name></expr></argument>, <argument pos:start="49:18" pos:end="49:21"><expr pos:start="49:18" pos:end="49:21"><name pos:start="49:18" pos:end="49:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="51:1" pos:end="51:10"><name pos:start="51:1" pos:end="51:9">out_nofid</name>:</label>

    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><call pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:16">complete_pdu</name><argument_list pos:start="53:17" pos:end="53:29">(<argument pos:start="53:18" pos:end="53:18"><expr pos:start="53:18" pos:end="53:18"><name pos:start="53:18" pos:end="53:18">s</name></expr></argument>, <argument pos:start="53:21" pos:end="53:23"><expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">pdu</name></expr></argument>, <argument pos:start="53:26" pos:end="53:28"><expr pos:start="53:26" pos:end="53:28"><name pos:start="53:26" pos:end="53:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
