<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8914.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:38">bdrv_new_open</name><parameter_list pos:start="1:39" pos:end="9:50">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:59">filename</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">fmt</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:48"><decl pos:start="5:40" pos:end="5:48"><type pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:48">flags</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:54"><decl pos:start="7:40" pos:end="7:54"><type pos:start="7:40" pos:end="7:54"><name pos:start="7:40" pos:end="7:43">bool</name></type> <name pos:start="7:45" pos:end="7:54">require_io</name></decl></parameter>,

                                       <parameter pos:start="9:40" pos:end="9:49"><decl pos:start="9:40" pos:end="9:49"><type pos:start="9:40" pos:end="9:49"><name pos:start="9:40" pos:end="9:43">bool</name></type> <name pos:start="9:45" pos:end="9:49">quiet</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="95:1">{<block_content pos:start="13:5" pos:end="93:16">

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">BlockDriverState</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">BlockDriver</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:17">password</name><index pos:start="17:18" pos:end="17:22">[<expr pos:start="17:19" pos:end="17:21"><literal type="number" pos:start="17:19" pos:end="17:21">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:20">local_err</name> <init pos:start="19:22" pos:end="19:27">= <expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:6">bs</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:26"><name pos:start="25:10" pos:end="25:17">bdrv_new</name><argument_list pos:start="25:18" pos:end="25:26">(<argument pos:start="25:19" pos:end="25:25"><expr pos:start="25:19" pos:end="25:25"><literal type="string" pos:start="25:19" pos:end="25:25">"image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">fmt</name></expr>)</condition> <block pos:start="29:14" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:11">drv</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:35"><name pos:start="31:15" pos:end="31:30">bdrv_find_format</name><argument_list pos:start="31:31" pos:end="31:35">(<argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:17">(<expr pos:start="33:13" pos:end="33:16"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:16">drv</name></expr>)</condition> <block pos:start="33:19" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:22">

            <expr_stmt pos:start="35:13" pos:end="35:58"><expr pos:start="35:13" pos:end="35:57"><call pos:start="35:13" pos:end="35:57"><name pos:start="35:13" pos:end="35:24">error_report</name><argument_list pos:start="35:25" pos:end="35:57">(<argument pos:start="35:26" pos:end="35:51"><expr pos:start="35:26" pos:end="35:51"><literal type="string" pos:start="35:26" pos:end="35:51">"Unknown file format '%s'"</literal></expr></argument>, <argument pos:start="35:54" pos:end="35:56"><expr pos:start="35:54" pos:end="35:56"><name pos:start="35:54" pos:end="35:56">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="37:13" pos:end="37:22">goto <name pos:start="37:18" pos:end="37:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:19">

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:11">drv</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:71"><expr pos:start="49:5" pos:end="49:70"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:70"><name pos:start="49:11" pos:end="49:19">bdrv_open</name><argument_list pos:start="49:20" pos:end="49:70">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:23">bs</name></expr></argument>, <argument pos:start="49:26" pos:end="49:33"><expr pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:33">filename</name></expr></argument>, <argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">NULL</name></expr></argument>, <argument pos:start="49:42" pos:end="49:45"><expr pos:start="49:42" pos:end="49:45"><name pos:start="49:42" pos:end="49:45">NULL</name></expr></argument>, <argument pos:start="49:48" pos:end="49:52"><expr pos:start="49:48" pos:end="49:52"><name pos:start="49:48" pos:end="49:52">flags</name></expr></argument>, <argument pos:start="49:55" pos:end="49:57"><expr pos:start="49:55" pos:end="49:57"><name pos:start="49:55" pos:end="49:57">drv</name></expr></argument>, <argument pos:start="49:60" pos:end="49:69"><expr pos:start="49:60" pos:end="49:69"><operator pos:start="49:60" pos:end="49:60">&amp;</operator><name pos:start="49:61" pos:end="49:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:18">

        <expr_stmt pos:start="53:9" pos:end="55:50"><expr pos:start="53:9" pos:end="55:49"><call pos:start="53:9" pos:end="55:49"><name pos:start="53:9" pos:end="53:20">error_report</name><argument_list pos:start="53:21" pos:end="55:49">(<argument pos:start="53:22" pos:end="53:46"><expr pos:start="53:22" pos:end="53:46"><literal type="string" pos:start="53:22" pos:end="53:46">"Could not open '%s': %s"</literal></expr></argument>, <argument pos:start="53:49" pos:end="53:56"><expr pos:start="53:49" pos:end="53:56"><name pos:start="53:49" pos:end="53:56">filename</name></expr></argument>,

                     <argument pos:start="55:22" pos:end="55:48"><expr pos:start="55:22" pos:end="55:48"><call pos:start="55:22" pos:end="55:48"><name pos:start="55:22" pos:end="55:37">error_get_pretty</name><argument_list pos:start="55:38" pos:end="55:48">(<argument pos:start="55:39" pos:end="55:47"><expr pos:start="55:39" pos:end="55:47"><name pos:start="55:39" pos:end="55:47">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:18">error_free</name><argument_list pos:start="57:19" pos:end="57:29">(<argument pos:start="57:20" pos:end="57:28"><expr pos:start="57:20" pos:end="57:28"><name pos:start="57:20" pos:end="57:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:18">goto <name pos:start="59:14" pos:end="59:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="85:5"><if pos:start="65:5" pos:end="85:5">if <condition pos:start="65:8" pos:end="65:44">(<expr pos:start="65:9" pos:end="65:43"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:25">bdrv_is_encrypted</name><argument_list pos:start="65:26" pos:end="65:29">(<argument pos:start="65:27" pos:end="65:28"><expr pos:start="65:27" pos:end="65:28"><name pos:start="65:27" pos:end="65:28">bs</name></expr></argument>)</argument_list></call> <operator pos:start="65:31" pos:end="65:32">&amp;&amp;</operator> <name pos:start="65:34" pos:end="65:43">require_io</name></expr>)</condition> <block pos:start="65:46" pos:end="85:5">{<block_content pos:start="67:9" pos:end="83:9">

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><call pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:15">qprintf</name><argument_list pos:start="67:16" pos:end="67:67">(<argument pos:start="67:17" pos:end="67:21"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:21">quiet</name></expr></argument>, <argument pos:start="67:24" pos:end="67:56"><expr pos:start="67:24" pos:end="67:56"><literal type="string" pos:start="67:24" pos:end="67:56">"Disk image '%s' is encrypted.\n"</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:66"><expr pos:start="67:59" pos:end="67:66"><name pos:start="67:59" pos:end="67:66">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:58">(<expr pos:start="69:13" pos:end="69:57"><call pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:25">read_password</name><argument_list pos:start="69:26" pos:end="69:53">(<argument pos:start="69:27" pos:end="69:34"><expr pos:start="69:27" pos:end="69:34"><name pos:start="69:27" pos:end="69:34">password</name></expr></argument>, <argument pos:start="69:37" pos:end="69:52"><expr pos:start="69:37" pos:end="69:52"><sizeof pos:start="69:37" pos:end="69:52">sizeof<argument_list pos:start="69:43" pos:end="69:52">(<argument pos:start="69:44" pos:end="69:51"><expr pos:start="69:44" pos:end="69:51"><name pos:start="69:44" pos:end="69:51">password</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="69:55" pos:end="69:55">&lt;</operator> <literal type="number" pos:start="69:57" pos:end="69:57">0</literal></expr>)</condition> <block pos:start="69:60" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:22">

            <expr_stmt pos:start="71:13" pos:end="71:46"><expr pos:start="71:13" pos:end="71:45"><call pos:start="71:13" pos:end="71:45"><name pos:start="71:13" pos:end="71:24">error_report</name><argument_list pos:start="71:25" pos:end="71:45">(<argument pos:start="71:26" pos:end="71:44"><expr pos:start="71:26" pos:end="71:44"><literal type="string" pos:start="71:26" pos:end="71:44">"No password given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:43">(<expr pos:start="77:13" pos:end="77:42"><call pos:start="77:13" pos:end="77:38"><name pos:start="77:13" pos:end="77:24">bdrv_set_key</name><argument_list pos:start="77:25" pos:end="77:38">(<argument pos:start="77:26" pos:end="77:27"><expr pos:start="77:26" pos:end="77:27"><name pos:start="77:26" pos:end="77:27">bs</name></expr></argument>, <argument pos:start="77:30" pos:end="77:37"><expr pos:start="77:30" pos:end="77:37"><name pos:start="77:30" pos:end="77:37">password</name></expr></argument>)</argument_list></call> <operator pos:start="77:40" pos:end="77:40">&lt;</operator> <literal type="number" pos:start="77:42" pos:end="77:42">0</literal></expr>)</condition> <block pos:start="77:45" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:22">

            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><call pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:24">error_report</name><argument_list pos:start="79:25" pos:end="79:44">(<argument pos:start="79:26" pos:end="79:43"><expr pos:start="79:26" pos:end="79:43"><literal type="string" pos:start="79:26" pos:end="79:43">"invalid password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="87:5" pos:end="87:14">return <expr pos:start="87:12" pos:end="87:13"><name pos:start="87:12" pos:end="87:13">bs</name></expr>;</return>

<label pos:start="89:1" pos:end="89:5"><name pos:start="89:1" pos:end="89:4">fail</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:19"><expr pos:start="91:5" pos:end="91:18"><call pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:14">bdrv_unref</name><argument_list pos:start="91:15" pos:end="91:18">(<argument pos:start="91:16" pos:end="91:17"><expr pos:start="91:16" pos:end="91:17"><name pos:start="91:16" pos:end="91:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:16">return <expr pos:start="93:12" pos:end="93:15"><name pos:start="93:12" pos:end="93:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
