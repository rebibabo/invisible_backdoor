<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20169.c" pos:tabs="8"><function pos:start="1:1" pos:end="991:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">nvenc_encode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="991:1">{<block_content pos:start="5:5" pos:end="989:15">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:70"><type pos:start="5:5" pos:end="5:40"><name pos:start="5:5" pos:end="5:40">NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS</name></type> <name pos:start="5:42" pos:end="5:62">encode_session_params</name> <init pos:start="5:64" pos:end="5:70">= <expr pos:start="5:66" pos:end="5:70"><block pos:start="5:66" pos:end="5:70">{ <expr pos:start="5:68" pos:end="5:68"><literal type="number" pos:start="5:68" pos:end="5:68">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24">NV_ENC_PRESET_CONFIG</name></type> <name pos:start="7:26" pos:end="7:38">preset_config</name> <init pos:start="7:40" pos:end="7:46">= <expr pos:start="7:42" pos:end="7:46"><block pos:start="7:42" pos:end="7:46">{ <expr pos:start="7:44" pos:end="7:44"><literal type="number" pos:start="7:44" pos:end="7:44">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">CUcontext</name></type> <name pos:start="9:15" pos:end="9:29">cu_context_curr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">CUresult</name></type> <name pos:start="11:14" pos:end="11:19">cu_res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">GUID</name></type> <name pos:start="13:10" pos:end="13:23">encoder_preset</name> <init pos:start="13:25" pos:end="13:47">= <expr pos:start="13:27" pos:end="13:47"><name pos:start="13:27" pos:end="13:47">NV_ENC_PRESET_HQ_GUID</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">GUID</name></type> <name pos:start="15:10" pos:end="15:14">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">NVENCSTATUS</name></type> <name pos:start="17:17" pos:end="17:25">nv_status</name> <init pos:start="17:27" pos:end="17:42">= <expr pos:start="17:29" pos:end="17:42"><name pos:start="17:29" pos:end="17:42">NV_ENC_SUCCESS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">surfaceCount</name> <init pos:start="19:22" pos:end="19:24">= <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:18"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:18">num_mbs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">isLL</name> <init pos:start="23:14" pos:end="23:16">= <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">res</name> <init pos:start="25:13" pos:end="25:15">= <expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:15"><decl pos:start="27:5" pos:end="27:10"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:10">dw</name></decl>, <decl pos:start="27:13" pos:end="27:14"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:13" pos:end="27:14">dh</name></decl>;</decl_stmt>



    <decl_stmt pos:start="31:5" pos:end="31:41"><decl pos:start="31:5" pos:end="31:40"><type pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:16">NvencContext</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:21">ctx</name> <init pos:start="31:23" pos:end="31:40">= <expr pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:29">avctx</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:59"><decl pos:start="33:5" pos:end="33:58"><type pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:25">NvencDynLoadFunctions</name> <modifier pos:start="33:27" pos:end="33:27">*</modifier></type><name pos:start="33:28" pos:end="33:32">dl_fn</name> <init pos:start="33:34" pos:end="33:58">= <expr pos:start="33:36" pos:end="33:58"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:58"><name pos:start="33:37" pos:end="33:39">ctx</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:63"><decl pos:start="35:5" pos:end="35:62"><type pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="35:33" pos:end="35:33">*</modifier></type><name pos:start="35:34" pos:end="35:40">p_nvenc</name> <init pos:start="35:42" pos:end="35:62">= <expr pos:start="35:44" pos:end="35:62"><operator pos:start="35:44" pos:end="35:44">&amp;</operator><name pos:start="35:45" pos:end="35:62"><name pos:start="35:45" pos:end="35:49">dl_fn</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:62">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="41:32"><if pos:start="39:5" pos:end="41:32">if <condition pos:start="39:8" pos:end="39:35">(<expr pos:start="39:9" pos:end="39:34"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:34"><name pos:start="39:10" pos:end="39:27">nvenc_dyload_nvenc</name><argument_list pos:start="39:28" pos:end="39:34">(<argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:33">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:32"><block_content pos:start="41:9" pos:end="41:32">

        <return pos:start="41:9" pos:end="41:32">return <expr pos:start="41:16" pos:end="41:31"><name pos:start="41:16" pos:end="41:31">AVERROR_EXTERNAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:9">avctx</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">coded_frame</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:41"><name pos:start="45:26" pos:end="45:39">av_frame_alloc</name><argument_list pos:start="45:40" pos:end="45:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:28">(<expr pos:start="47:9" pos:end="47:27"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:27"><name pos:start="47:10" pos:end="47:14">avctx</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:27">coded_frame</name></name></expr>)</condition> <block pos:start="47:30" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:19">

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:11">res</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:29"><name pos:start="49:15" pos:end="49:21">AVERROR</name><argument_list pos:start="49:22" pos:end="49:29">(<argument pos:start="49:23" pos:end="49:28"><expr pos:start="49:23" pos:end="49:28"><name pos:start="49:23" pos:end="49:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:19">goto <name pos:start="51:14" pos:end="51:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:7">ctx</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:17">last_dts</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:34">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:7">ctx</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:22">encode_config</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:30">version</name></name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:50">NV_ENC_CONFIG_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:67"><expr pos:start="63:5" pos:end="63:66"><name pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:7">ctx</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:27">init_encode_params</name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:35">version</name></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <name pos:start="63:39" pos:end="63:66">NV_ENC_INITIALIZE_PARAMS_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:17">preset_config</name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:25">version</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:52">NV_ENC_PRESET_CONFIG_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:56"><expr pos:start="67:5" pos:end="67:55"><name pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:17">preset_config</name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:27">presetCfg</name><operator pos:start="67:28" pos:end="67:28">.</operator><name pos:start="67:29" pos:end="67:35">version</name></name> <operator pos:start="67:37" pos:end="67:37">=</operator> <name pos:start="67:39" pos:end="67:55">NV_ENC_CONFIG_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:77"><expr pos:start="69:5" pos:end="69:76"><name pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:25">encode_session_params</name><operator pos:start="69:26" pos:end="69:26">.</operator><name pos:start="69:27" pos:end="69:33">version</name></name> <operator pos:start="69:35" pos:end="69:35">=</operator> <name pos:start="69:37" pos:end="69:76">NV_ENC_OPEN_ENCODE_SESSION_EX_PARAMS_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:56"><expr pos:start="71:5" pos:end="71:55"><name pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:25">encode_session_params</name><operator pos:start="71:26" pos:end="71:26">.</operator><name pos:start="71:27" pos:end="71:36">apiVersion</name></name> <operator pos:start="71:38" pos:end="71:38">=</operator> <name pos:start="71:40" pos:end="71:55">NVENCAPI_VERSION</name></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:46">(<expr pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:16">gpu</name></name> <operator pos:start="75:18" pos:end="75:19">&gt;=</operator> <name pos:start="75:21" pos:end="75:45"><name pos:start="75:21" pos:end="75:25">dl_fn</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:45">nvenc_device_count</name></name></expr>)</condition> <block pos:start="75:48" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:19">

        <expr_stmt pos:start="77:9" pos:end="77:128"><expr pos:start="77:9" pos:end="77:127"><call pos:start="77:9" pos:end="77:127"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:127">(<argument pos:start="77:16" pos:end="77:20"><expr pos:start="77:16" pos:end="77:20"><name pos:start="77:16" pos:end="77:20">avctx</name></expr></argument>, <argument pos:start="77:23" pos:end="77:34"><expr pos:start="77:23" pos:end="77:34"><name pos:start="77:23" pos:end="77:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="77:37" pos:end="77:89"><expr pos:start="77:37" pos:end="77:89"><literal type="string" pos:start="77:37" pos:end="77:89">"Requested GPU %d, but only %d GPUs are available!\n"</literal></expr></argument>, <argument pos:start="77:92" pos:end="77:99"><expr pos:start="77:92" pos:end="77:99"><name pos:start="77:92" pos:end="77:99"><name pos:start="77:92" pos:end="77:94">ctx</name><operator pos:start="77:95" pos:end="77:96">-&gt;</operator><name pos:start="77:97" pos:end="77:99">gpu</name></name></expr></argument>, <argument pos:start="77:102" pos:end="77:126"><expr pos:start="77:102" pos:end="77:126"><name pos:start="77:102" pos:end="77:126"><name pos:start="77:102" pos:end="77:106">dl_fn</name><operator pos:start="77:107" pos:end="77:108">-&gt;</operator><name pos:start="77:109" pos:end="77:126">nvenc_device_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:11">res</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:29"><name pos:start="79:15" pos:end="79:21">AVERROR</name><argument_list pos:start="79:22" pos:end="79:29">(<argument pos:start="79:23" pos:end="79:28"><expr pos:start="79:23" pos:end="79:28"><name pos:start="79:23" pos:end="79:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:19">goto <name pos:start="81:14" pos:end="81:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:7">ctx</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:19">cu_context</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:87"><expr pos:start="89:5" pos:end="89:86"><name pos:start="89:5" pos:end="89:10">cu_res</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <call pos:start="89:14" pos:end="89:86"><name pos:start="89:14" pos:end="89:33"><name pos:start="89:14" pos:end="89:18">dl_fn</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:33">cu_ctx_create</name></name><argument_list pos:start="89:34" pos:end="89:86">(<argument pos:start="89:35" pos:end="89:50"><expr pos:start="89:35" pos:end="89:50"><operator pos:start="89:35" pos:end="89:35">&amp;</operator><name pos:start="89:36" pos:end="89:50"><name pos:start="89:36" pos:end="89:38">ctx</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:50">cu_context</name></name></expr></argument>, <argument pos:start="89:53" pos:end="89:53"><expr pos:start="89:53" pos:end="89:53"><literal type="number" pos:start="89:53" pos:end="89:53">0</literal></expr></argument>, <argument pos:start="89:56" pos:end="89:85"><expr pos:start="89:56" pos:end="89:85"><name pos:start="89:56" pos:end="89:85"><name pos:start="89:56" pos:end="89:60">dl_fn</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:75">nvenc_devices</name><index pos:start="89:76" pos:end="89:85">[<expr pos:start="89:77" pos:end="89:84"><name pos:start="89:77" pos:end="89:84"><name pos:start="89:77" pos:end="89:79">ctx</name><operator pos:start="89:80" pos:end="89:81">-&gt;</operator><name pos:start="89:82" pos:end="89:84">gpu</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="101:5"><if pos:start="93:5" pos:end="101:5">if <condition pos:start="93:8" pos:end="93:31">(<expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:14">cu_res</name> <operator pos:start="93:16" pos:end="93:17">!=</operator> <name pos:start="93:19" pos:end="93:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="93:33" pos:end="101:5">{<block_content pos:start="95:9" pos:end="99:19">

        <expr_stmt pos:start="95:9" pos:end="95:99"><expr pos:start="95:9" pos:end="95:98"><call pos:start="95:9" pos:end="95:98"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:98">(<argument pos:start="95:16" pos:end="95:20"><expr pos:start="95:16" pos:end="95:20"><name pos:start="95:16" pos:end="95:20">avctx</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="95:37" pos:end="95:84"><expr pos:start="95:37" pos:end="95:84"><literal type="string" pos:start="95:37" pos:end="95:84">"Failed creating CUDA context for NVENC: 0x%x\n"</literal></expr></argument>, <argument pos:start="95:87" pos:end="95:97"><expr pos:start="95:87" pos:end="95:97"><operator pos:start="95:87" pos:end="95:87">(</operator><name pos:start="95:88" pos:end="95:90">int</name><operator pos:start="95:91" pos:end="95:91">)</operator><name pos:start="95:92" pos:end="95:97">cu_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:11">res</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <name pos:start="97:15" pos:end="97:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:19">goto <name pos:start="99:14" pos:end="99:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:57"><expr pos:start="105:5" pos:end="105:56"><name pos:start="105:5" pos:end="105:10">cu_res</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <call pos:start="105:14" pos:end="105:56"><name pos:start="105:14" pos:end="105:38"><name pos:start="105:14" pos:end="105:18">dl_fn</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:38">cu_ctx_pop_current</name></name><argument_list pos:start="105:39" pos:end="105:56">(<argument pos:start="105:40" pos:end="105:55"><expr pos:start="105:40" pos:end="105:55"><operator pos:start="105:40" pos:end="105:40">&amp;</operator><name pos:start="105:41" pos:end="105:55">cu_context_curr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="109:31">(<expr pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:14">cu_res</name> <operator pos:start="109:16" pos:end="109:17">!=</operator> <name pos:start="109:19" pos:end="109:30">CUDA_SUCCESS</name></expr>)</condition> <block pos:start="109:33" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:19">

        <expr_stmt pos:start="111:9" pos:end="111:88"><expr pos:start="111:9" pos:end="111:87"><call pos:start="111:9" pos:end="111:87"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:87">(<argument pos:start="111:16" pos:end="111:20"><expr pos:start="111:16" pos:end="111:20"><name pos:start="111:16" pos:end="111:20">avctx</name></expr></argument>, <argument pos:start="111:23" pos:end="111:34"><expr pos:start="111:23" pos:end="111:34"><name pos:start="111:23" pos:end="111:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="111:37" pos:end="111:73"><expr pos:start="111:37" pos:end="111:73"><literal type="string" pos:start="111:37" pos:end="111:73">"Failed popping CUDA context: 0x%x\n"</literal></expr></argument>, <argument pos:start="111:76" pos:end="111:86"><expr pos:start="111:76" pos:end="111:86"><operator pos:start="111:76" pos:end="111:76">(</operator><name pos:start="111:77" pos:end="111:79">int</name><operator pos:start="111:80" pos:end="111:80">)</operator><name pos:start="111:81" pos:end="111:86">cu_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:31"><expr pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:11">res</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <name pos:start="113:15" pos:end="113:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="115:9" pos:end="115:19">goto <name pos:start="115:14" pos:end="115:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:51"><expr pos:start="121:5" pos:end="121:50"><name pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:25">encode_session_params</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:32">device</name></name> <operator pos:start="121:34" pos:end="121:34">=</operator> <name pos:start="121:36" pos:end="121:50"><name pos:start="121:36" pos:end="121:38">ctx</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:50">cu_context</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:63"><expr pos:start="123:5" pos:end="123:62"><name pos:start="123:5" pos:end="123:36"><name pos:start="123:5" pos:end="123:25">encode_session_params</name><operator pos:start="123:26" pos:end="123:26">.</operator><name pos:start="123:27" pos:end="123:36">deviceType</name></name> <operator pos:start="123:38" pos:end="123:38">=</operator> <name pos:start="123:40" pos:end="123:62">NV_ENC_DEVICE_TYPE_CUDA</name></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:91"><expr pos:start="127:5" pos:end="127:90"><name pos:start="127:5" pos:end="127:13">nv_status</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:90"><name pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:23">p_nvenc</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:49">nvEncOpenEncodeSessionEx</name></name><argument_list pos:start="127:50" pos:end="127:90">(<argument pos:start="127:51" pos:end="127:72"><expr pos:start="127:51" pos:end="127:72"><operator pos:start="127:51" pos:end="127:51">&amp;</operator><name pos:start="127:52" pos:end="127:72">encode_session_params</name></expr></argument>, <argument pos:start="127:75" pos:end="127:89"><expr pos:start="127:75" pos:end="127:89"><operator pos:start="127:75" pos:end="127:75">&amp;</operator><name pos:start="127:76" pos:end="127:89"><name pos:start="127:76" pos:end="127:78">ctx</name><operator pos:start="127:79" pos:end="127:80">-&gt;</operator><name pos:start="127:81" pos:end="127:89">nvencoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="139:5"><if pos:start="129:5" pos:end="139:5">if <condition pos:start="129:8" pos:end="129:36">(<expr pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:17">nv_status</name> <operator pos:start="129:19" pos:end="129:20">!=</operator> <name pos:start="129:22" pos:end="129:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="129:38" pos:end="139:5">{<block_content pos:start="131:9" pos:end="137:19">

        <expr_stmt pos:start="131:9" pos:end="131:30"><expr pos:start="131:9" pos:end="131:29"><name pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:11">ctx</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:22">nvencoder</name></name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:29">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:113"><expr pos:start="133:9" pos:end="133:112"><call pos:start="133:9" pos:end="133:112"><name pos:start="133:9" pos:end="133:14">av_log</name><argument_list pos:start="133:15" pos:end="133:112">(<argument pos:start="133:16" pos:end="133:20"><expr pos:start="133:16" pos:end="133:20"><name pos:start="133:16" pos:end="133:20">avctx</name></expr></argument>, <argument pos:start="133:23" pos:end="133:34"><expr pos:start="133:23" pos:end="133:34"><name pos:start="133:23" pos:end="133:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="133:37" pos:end="133:95"><expr pos:start="133:37" pos:end="133:95"><literal type="string" pos:start="133:37" pos:end="133:95">"OpenEncodeSessionEx failed: 0x%x - invalid license key?\n"</literal></expr></argument>, <argument pos:start="133:98" pos:end="133:111"><expr pos:start="133:98" pos:end="133:111"><operator pos:start="133:98" pos:end="133:98">(</operator><name pos:start="133:99" pos:end="133:101">int</name><operator pos:start="133:102" pos:end="133:102">)</operator><name pos:start="133:103" pos:end="133:111">nv_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:31"><expr pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:11">res</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <name pos:start="135:15" pos:end="135:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:19">goto <name pos:start="137:14" pos:end="137:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="189:5"><if pos:start="143:5" pos:end="189:5">if <condition pos:start="143:8" pos:end="143:20">(<expr pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:11">ctx</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:19">preset</name></name></expr>)</condition> <block pos:start="143:22" pos:end="189:5">{<block_content pos:start="145:9" pos:end="187:9">

        <if_stmt pos:start="145:9" pos:end="187:9"><if pos:start="145:9" pos:end="149:9">if <condition pos:start="145:12" pos:end="145:39">(<expr pos:start="145:13" pos:end="145:38"><operator pos:start="145:13" pos:end="145:13">!</operator><call pos:start="145:14" pos:end="145:38"><name pos:start="145:14" pos:end="145:19">strcmp</name><argument_list pos:start="145:20" pos:end="145:38">(<argument pos:start="145:21" pos:end="145:31"><expr pos:start="145:21" pos:end="145:31"><name pos:start="145:21" pos:end="145:31"><name pos:start="145:21" pos:end="145:23">ctx</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:31">preset</name></name></expr></argument>, <argument pos:start="145:34" pos:end="145:37"><expr pos:start="145:34" pos:end="145:37"><literal type="string" pos:start="145:34" pos:end="145:37">"hp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:41" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:51">

            <expr_stmt pos:start="147:13" pos:end="147:51"><expr pos:start="147:13" pos:end="147:50"><name pos:start="147:13" pos:end="147:26">encoder_preset</name> <operator pos:start="147:28" pos:end="147:28">=</operator> <name pos:start="147:30" pos:end="147:50">NV_ENC_PRESET_HP_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="149:11" pos:end="153:9">else if <condition pos:start="149:19" pos:end="149:46">(<expr pos:start="149:20" pos:end="149:45"><operator pos:start="149:20" pos:end="149:20">!</operator><call pos:start="149:21" pos:end="149:45"><name pos:start="149:21" pos:end="149:26">strcmp</name><argument_list pos:start="149:27" pos:end="149:45">(<argument pos:start="149:28" pos:end="149:38"><expr pos:start="149:28" pos:end="149:38"><name pos:start="149:28" pos:end="149:38"><name pos:start="149:28" pos:end="149:30">ctx</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:38">preset</name></name></expr></argument>, <argument pos:start="149:41" pos:end="149:44"><expr pos:start="149:41" pos:end="149:44"><literal type="string" pos:start="149:41" pos:end="149:44">"hq"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:48" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:51">

            <expr_stmt pos:start="151:13" pos:end="151:51"><expr pos:start="151:13" pos:end="151:50"><name pos:start="151:13" pos:end="151:26">encoder_preset</name> <operator pos:start="151:28" pos:end="151:28">=</operator> <name pos:start="151:30" pos:end="151:50">NV_ENC_PRESET_HQ_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="153:11" pos:end="157:9">else if <condition pos:start="153:19" pos:end="153:46">(<expr pos:start="153:20" pos:end="153:45"><operator pos:start="153:20" pos:end="153:20">!</operator><call pos:start="153:21" pos:end="153:45"><name pos:start="153:21" pos:end="153:26">strcmp</name><argument_list pos:start="153:27" pos:end="153:45">(<argument pos:start="153:28" pos:end="153:38"><expr pos:start="153:28" pos:end="153:38"><name pos:start="153:28" pos:end="153:38"><name pos:start="153:28" pos:end="153:30">ctx</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:38">preset</name></name></expr></argument>, <argument pos:start="153:41" pos:end="153:44"><expr pos:start="153:41" pos:end="153:44"><literal type="string" pos:start="153:41" pos:end="153:44">"bd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:48" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:51">

            <expr_stmt pos:start="155:13" pos:end="155:51"><expr pos:start="155:13" pos:end="155:50"><name pos:start="155:13" pos:end="155:26">encoder_preset</name> <operator pos:start="155:28" pos:end="155:28">=</operator> <name pos:start="155:30" pos:end="155:50">NV_ENC_PRESET_BD_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="157:11" pos:end="163:9">else if <condition pos:start="157:19" pos:end="157:46">(<expr pos:start="157:20" pos:end="157:45"><operator pos:start="157:20" pos:end="157:20">!</operator><call pos:start="157:21" pos:end="157:45"><name pos:start="157:21" pos:end="157:26">strcmp</name><argument_list pos:start="157:27" pos:end="157:45">(<argument pos:start="157:28" pos:end="157:38"><expr pos:start="157:28" pos:end="157:38"><name pos:start="157:28" pos:end="157:38"><name pos:start="157:28" pos:end="157:30">ctx</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:38">preset</name></name></expr></argument>, <argument pos:start="157:41" pos:end="157:44"><expr pos:start="157:41" pos:end="157:44"><literal type="string" pos:start="157:41" pos:end="157:44">"ll"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:48" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:21">

            <expr_stmt pos:start="159:13" pos:end="159:68"><expr pos:start="159:13" pos:end="159:67"><name pos:start="159:13" pos:end="159:26">encoder_preset</name> <operator pos:start="159:28" pos:end="159:28">=</operator> <name pos:start="159:30" pos:end="159:67">NV_ENC_PRESET_LOW_LATENCY_DEFAULT_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:21"><expr pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:16">isLL</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <literal type="number" pos:start="161:20" pos:end="161:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="163:11" pos:end="169:9">else if <condition pos:start="163:19" pos:end="163:48">(<expr pos:start="163:20" pos:end="163:47"><operator pos:start="163:20" pos:end="163:20">!</operator><call pos:start="163:21" pos:end="163:47"><name pos:start="163:21" pos:end="163:26">strcmp</name><argument_list pos:start="163:27" pos:end="163:47">(<argument pos:start="163:28" pos:end="163:38"><expr pos:start="163:28" pos:end="163:38"><name pos:start="163:28" pos:end="163:38"><name pos:start="163:28" pos:end="163:30">ctx</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:38">preset</name></name></expr></argument>, <argument pos:start="163:41" pos:end="163:46"><expr pos:start="163:41" pos:end="163:46"><literal type="string" pos:start="163:41" pos:end="163:46">"llhp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:50" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:21">

            <expr_stmt pos:start="165:13" pos:end="165:63"><expr pos:start="165:13" pos:end="165:62"><name pos:start="165:13" pos:end="165:26">encoder_preset</name> <operator pos:start="165:28" pos:end="165:28">=</operator> <name pos:start="165:30" pos:end="165:62">NV_ENC_PRESET_LOW_LATENCY_HP_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:21"><expr pos:start="167:13" pos:end="167:20"><name pos:start="167:13" pos:end="167:16">isLL</name> <operator pos:start="167:18" pos:end="167:18">=</operator> <literal type="number" pos:start="167:20" pos:end="167:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="175:9">else if <condition pos:start="169:19" pos:end="169:48">(<expr pos:start="169:20" pos:end="169:47"><operator pos:start="169:20" pos:end="169:20">!</operator><call pos:start="169:21" pos:end="169:47"><name pos:start="169:21" pos:end="169:26">strcmp</name><argument_list pos:start="169:27" pos:end="169:47">(<argument pos:start="169:28" pos:end="169:38"><expr pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:30">ctx</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:38">preset</name></name></expr></argument>, <argument pos:start="169:41" pos:end="169:46"><expr pos:start="169:41" pos:end="169:46"><literal type="string" pos:start="169:41" pos:end="169:46">"llhq"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:50" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:21">

            <expr_stmt pos:start="171:13" pos:end="171:63"><expr pos:start="171:13" pos:end="171:62"><name pos:start="171:13" pos:end="171:26">encoder_preset</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <name pos:start="171:30" pos:end="171:62">NV_ENC_PRESET_LOW_LATENCY_HQ_GUID</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:21"><expr pos:start="173:13" pos:end="173:20"><name pos:start="173:13" pos:end="173:16">isLL</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <literal type="number" pos:start="173:20" pos:end="173:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="175:11" pos:end="179:9">else if <condition pos:start="175:19" pos:end="175:51">(<expr pos:start="175:20" pos:end="175:50"><operator pos:start="175:20" pos:end="175:20">!</operator><call pos:start="175:21" pos:end="175:50"><name pos:start="175:21" pos:end="175:26">strcmp</name><argument_list pos:start="175:27" pos:end="175:50">(<argument pos:start="175:28" pos:end="175:38"><expr pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:30">ctx</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:38">preset</name></name></expr></argument>, <argument pos:start="175:41" pos:end="175:49"><expr pos:start="175:41" pos:end="175:49"><literal type="string" pos:start="175:41" pos:end="175:49">"default"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:53" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:56">

            <expr_stmt pos:start="177:13" pos:end="177:56"><expr pos:start="177:13" pos:end="177:55"><name pos:start="177:13" pos:end="177:26">encoder_preset</name> <operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:55">NV_ENC_PRESET_DEFAULT_GUID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="187:9">else <block pos:start="179:16" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:23">

            <expr_stmt pos:start="181:13" pos:end="181:139"><expr pos:start="181:13" pos:end="181:138"><call pos:start="181:13" pos:end="181:138"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="181:138">(<argument pos:start="181:20" pos:end="181:24"><expr pos:start="181:20" pos:end="181:24"><name pos:start="181:20" pos:end="181:24">avctx</name></expr></argument>, <argument pos:start="181:27" pos:end="181:38"><expr pos:start="181:27" pos:end="181:38"><name pos:start="181:27" pos:end="181:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="181:41" pos:end="181:124"><expr pos:start="181:41" pos:end="181:124"><literal type="string" pos:start="181:41" pos:end="181:124">"Preset \"%s\" is unknown! Supported presets: hp, hq, bd, ll, llhp, llhq, default\n"</literal></expr></argument>, <argument pos:start="181:127" pos:end="181:137"><expr pos:start="181:127" pos:end="181:137"><name pos:start="181:127" pos:end="181:137"><name pos:start="181:127" pos:end="181:129">ctx</name><operator pos:start="181:130" pos:end="181:131">-&gt;</operator><name pos:start="181:132" pos:end="181:137">preset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:34"><expr pos:start="183:13" pos:end="183:33"><name pos:start="183:13" pos:end="183:15">res</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <call pos:start="183:19" pos:end="183:33"><name pos:start="183:19" pos:end="183:25">AVERROR</name><argument_list pos:start="183:26" pos:end="183:33">(<argument pos:start="183:27" pos:end="183:32"><expr pos:start="183:27" pos:end="183:32"><name pos:start="183:27" pos:end="183:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="185:13" pos:end="185:23">goto <name pos:start="185:18" pos:end="185:22">error</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="193:5" pos:end="215:5">switch <condition pos:start="193:12" pos:end="193:29">(<expr pos:start="193:13" pos:end="193:28"><name pos:start="193:13" pos:end="193:28"><name pos:start="193:13" pos:end="193:17">avctx</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:24">codec</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:28">id</name></name></expr>)</condition> <block pos:start="193:31" pos:end="215:5">{<block_content pos:start="195:5" pos:end="213:19">

    <case pos:start="195:5" pos:end="195:26">case <expr pos:start="195:10" pos:end="195:25"><name pos:start="195:10" pos:end="195:25">AV_CODEC_ID_H264</name></expr>:</case>

        <expr_stmt pos:start="197:9" pos:end="197:39"><expr pos:start="197:9" pos:end="197:38"><name pos:start="197:9" pos:end="197:13">codec</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <name pos:start="197:17" pos:end="197:38">NV_ENC_CODEC_H264_GUID</name></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:26">case <expr pos:start="201:10" pos:end="201:25"><name pos:start="201:10" pos:end="201:25">AV_CODEC_ID_H265</name></expr>:</case>

        <expr_stmt pos:start="203:9" pos:end="203:39"><expr pos:start="203:9" pos:end="203:38"><name pos:start="203:9" pos:end="203:13">codec</name> <operator pos:start="203:15" pos:end="203:15">=</operator> <name pos:start="203:17" pos:end="203:38">NV_ENC_CODEC_HEVC_GUID</name></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <default pos:start="207:5" pos:end="207:12">default:</default>

        <expr_stmt pos:start="209:9" pos:end="209:67"><expr pos:start="209:9" pos:end="209:66"><call pos:start="209:9" pos:end="209:66"><name pos:start="209:9" pos:end="209:14">av_log</name><argument_list pos:start="209:15" pos:end="209:66">(<argument pos:start="209:16" pos:end="209:20"><expr pos:start="209:16" pos:end="209:20"><name pos:start="209:16" pos:end="209:20">avctx</name></expr></argument>, <argument pos:start="209:23" pos:end="209:34"><expr pos:start="209:23" pos:end="209:34"><name pos:start="209:23" pos:end="209:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:37" pos:end="209:65"><expr pos:start="209:37" pos:end="209:65"><literal type="string" pos:start="209:37" pos:end="209:65">"nvenc: Unknown codec name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:30"><expr pos:start="211:9" pos:end="211:29"><name pos:start="211:9" pos:end="211:11">res</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:29"><name pos:start="211:15" pos:end="211:21">AVERROR</name><argument_list pos:start="211:22" pos:end="211:29">(<argument pos:start="211:23" pos:end="211:28"><expr pos:start="211:23" pos:end="211:28"><name pos:start="211:23" pos:end="211:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="213:9" pos:end="213:19">goto <name pos:start="213:14" pos:end="213:18">error</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="219:5" pos:end="219:107"><expr pos:start="219:5" pos:end="219:106"><name pos:start="219:5" pos:end="219:13">nv_status</name> <operator pos:start="219:15" pos:end="219:15">=</operator> <call pos:start="219:17" pos:end="219:106"><name pos:start="219:17" pos:end="219:51"><name pos:start="219:17" pos:end="219:23">p_nvenc</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:51">nvEncGetEncodePresetConfig</name></name><argument_list pos:start="219:52" pos:end="219:106">(<argument pos:start="219:53" pos:end="219:66"><expr pos:start="219:53" pos:end="219:66"><name pos:start="219:53" pos:end="219:66"><name pos:start="219:53" pos:end="219:55">ctx</name><operator pos:start="219:56" pos:end="219:57">-&gt;</operator><name pos:start="219:58" pos:end="219:66">nvencoder</name></name></expr></argument>, <argument pos:start="219:69" pos:end="219:73"><expr pos:start="219:69" pos:end="219:73"><name pos:start="219:69" pos:end="219:73">codec</name></expr></argument>, <argument pos:start="219:76" pos:end="219:89"><expr pos:start="219:76" pos:end="219:89"><name pos:start="219:76" pos:end="219:89">encoder_preset</name></expr></argument>, <argument pos:start="219:92" pos:end="219:105"><expr pos:start="219:92" pos:end="219:105"><operator pos:start="219:92" pos:end="219:92">&amp;</operator><name pos:start="219:93" pos:end="219:105">preset_config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="221:5" pos:end="229:5"><if pos:start="221:5" pos:end="229:5">if <condition pos:start="221:8" pos:end="221:36">(<expr pos:start="221:9" pos:end="221:35"><name pos:start="221:9" pos:end="221:17">nv_status</name> <operator pos:start="221:19" pos:end="221:20">!=</operator> <name pos:start="221:22" pos:end="221:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="221:38" pos:end="229:5">{<block_content pos:start="223:9" pos:end="227:19">

        <expr_stmt pos:start="223:9" pos:end="223:92"><expr pos:start="223:9" pos:end="223:91"><call pos:start="223:9" pos:end="223:91"><name pos:start="223:9" pos:end="223:14">av_log</name><argument_list pos:start="223:15" pos:end="223:91">(<argument pos:start="223:16" pos:end="223:20"><expr pos:start="223:16" pos:end="223:20"><name pos:start="223:16" pos:end="223:20">avctx</name></expr></argument>, <argument pos:start="223:23" pos:end="223:34"><expr pos:start="223:23" pos:end="223:34"><name pos:start="223:23" pos:end="223:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="223:37" pos:end="223:74"><expr pos:start="223:37" pos:end="223:74"><literal type="string" pos:start="223:37" pos:end="223:74">"GetEncodePresetConfig failed: 0x%x\n"</literal></expr></argument>, <argument pos:start="223:77" pos:end="223:90"><expr pos:start="223:77" pos:end="223:90"><operator pos:start="223:77" pos:end="223:77">(</operator><name pos:start="223:78" pos:end="223:80">int</name><operator pos:start="223:81" pos:end="223:81">)</operator><name pos:start="223:82" pos:end="223:90">nv_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:31"><expr pos:start="225:9" pos:end="225:30"><name pos:start="225:9" pos:end="225:11">res</name> <operator pos:start="225:13" pos:end="225:13">=</operator> <name pos:start="225:15" pos:end="225:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="227:9" pos:end="227:19">goto <name pos:start="227:14" pos:end="227:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:47"><expr pos:start="233:5" pos:end="233:46"><name pos:start="233:5" pos:end="233:38"><name pos:start="233:5" pos:end="233:7">ctx</name><operator pos:start="233:8" pos:end="233:9">-&gt;</operator><name pos:start="233:10" pos:end="233:27">init_encode_params</name><operator pos:start="233:28" pos:end="233:28">.</operator><name pos:start="233:29" pos:end="233:38">encodeGUID</name></name> <operator pos:start="233:40" pos:end="233:40">=</operator> <name pos:start="233:42" pos:end="233:46">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:57"><expr pos:start="235:5" pos:end="235:56"><name pos:start="235:5" pos:end="235:40"><name pos:start="235:5" pos:end="235:7">ctx</name><operator pos:start="235:8" pos:end="235:9">-&gt;</operator><name pos:start="235:10" pos:end="235:27">init_encode_params</name><operator pos:start="235:28" pos:end="235:28">.</operator><name pos:start="235:29" pos:end="235:40">encodeHeight</name></name> <operator pos:start="235:42" pos:end="235:42">=</operator> <name pos:start="235:44" pos:end="235:56"><name pos:start="235:44" pos:end="235:48">avctx</name><operator pos:start="235:49" pos:end="235:50">-&gt;</operator><name pos:start="235:51" pos:end="235:56">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:55"><expr pos:start="237:5" pos:end="237:54"><name pos:start="237:5" pos:end="237:39"><name pos:start="237:5" pos:end="237:7">ctx</name><operator pos:start="237:8" pos:end="237:9">-&gt;</operator><name pos:start="237:10" pos:end="237:27">init_encode_params</name><operator pos:start="237:28" pos:end="237:28">.</operator><name pos:start="237:29" pos:end="237:39">encodeWidth</name></name> <operator pos:start="237:41" pos:end="237:41">=</operator> <name pos:start="237:43" pos:end="237:54"><name pos:start="237:43" pos:end="237:47">avctx</name><operator pos:start="237:48" pos:end="237:49">-&gt;</operator><name pos:start="237:50" pos:end="237:54">width</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="241:5" pos:end="263:5"><if pos:start="241:5" pos:end="257:5">if <condition pos:start="241:8" pos:end="243:85">(<expr pos:start="241:9" pos:end="243:84"><name pos:start="241:9" pos:end="241:38"><name pos:start="241:9" pos:end="241:13">avctx</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:34">sample_aspect_ratio</name><operator pos:start="241:35" pos:end="241:35">.</operator><name pos:start="241:36" pos:end="241:38">num</name></name> <operator pos:start="241:40" pos:end="241:41">&amp;&amp;</operator> <name pos:start="241:43" pos:end="241:72"><name pos:start="241:43" pos:end="241:47">avctx</name><operator pos:start="241:48" pos:end="241:49">-&gt;</operator><name pos:start="241:50" pos:end="241:68">sample_aspect_ratio</name><operator pos:start="241:69" pos:end="241:69">.</operator><name pos:start="241:70" pos:end="241:72">den</name></name> <operator pos:start="241:74" pos:end="241:75">&amp;&amp;</operator>

        <operator pos:start="243:9" pos:end="243:9">(</operator><name pos:start="243:10" pos:end="243:39"><name pos:start="243:10" pos:end="243:14">avctx</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:35">sample_aspect_ratio</name><operator pos:start="243:36" pos:end="243:36">.</operator><name pos:start="243:37" pos:end="243:39">num</name></name> <operator pos:start="243:41" pos:end="243:42">!=</operator> <literal type="number" pos:start="243:44" pos:end="243:44">1</literal> <operator pos:start="243:46" pos:end="243:47">||</operator> <name pos:start="243:49" pos:end="243:78"><name pos:start="243:49" pos:end="243:53">avctx</name><operator pos:start="243:54" pos:end="243:55">-&gt;</operator><name pos:start="243:56" pos:end="243:74">sample_aspect_ratio</name><operator pos:start="243:75" pos:end="243:75">.</operator><name pos:start="243:76" pos:end="243:78">num</name></name> <operator pos:start="243:80" pos:end="243:81">!=</operator> <literal type="number" pos:start="243:83" pos:end="243:83">1</literal><operator pos:start="243:84" pos:end="243:84">)</operator></expr>)</condition> <block pos:start="243:87" pos:end="257:5">{<block_content pos:start="245:9" pos:end="255:46">

        <expr_stmt pos:start="245:9" pos:end="251:31"><expr pos:start="245:9" pos:end="251:30"><call pos:start="245:9" pos:end="251:30"><name pos:start="245:9" pos:end="245:17">av_reduce</name><argument_list pos:start="245:18" pos:end="251:30">(<argument pos:start="245:19" pos:end="245:21"><expr pos:start="245:19" pos:end="245:21"><operator pos:start="245:19" pos:end="245:19">&amp;</operator><name pos:start="245:20" pos:end="245:21">dw</name></expr></argument>, <argument pos:start="245:24" pos:end="245:26"><expr pos:start="245:24" pos:end="245:26"><operator pos:start="245:24" pos:end="245:24">&amp;</operator><name pos:start="245:25" pos:end="245:26">dh</name></expr></argument>,

                  <argument pos:start="247:19" pos:end="247:63"><expr pos:start="247:19" pos:end="247:63"><name pos:start="247:19" pos:end="247:30"><name pos:start="247:19" pos:end="247:23">avctx</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:30">width</name></name> <operator pos:start="247:32" pos:end="247:32">*</operator> <name pos:start="247:34" pos:end="247:63"><name pos:start="247:34" pos:end="247:38">avctx</name><operator pos:start="247:39" pos:end="247:40">-&gt;</operator><name pos:start="247:41" pos:end="247:59">sample_aspect_ratio</name><operator pos:start="247:60" pos:end="247:60">.</operator><name pos:start="247:61" pos:end="247:63">num</name></name></expr></argument>,

                  <argument pos:start="249:19" pos:end="249:64"><expr pos:start="249:19" pos:end="249:64"><name pos:start="249:19" pos:end="249:31"><name pos:start="249:19" pos:end="249:23">avctx</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:31">height</name></name> <operator pos:start="249:33" pos:end="249:33">*</operator> <name pos:start="249:35" pos:end="249:64"><name pos:start="249:35" pos:end="249:39">avctx</name><operator pos:start="249:40" pos:end="249:41">-&gt;</operator><name pos:start="249:42" pos:end="249:60">sample_aspect_ratio</name><operator pos:start="249:61" pos:end="249:61">.</operator><name pos:start="249:62" pos:end="249:64">den</name></name></expr></argument>,

                  <argument pos:start="251:19" pos:end="251:29"><expr pos:start="251:19" pos:end="251:29"><literal type="number" pos:start="251:19" pos:end="251:22">1024</literal> <operator pos:start="251:24" pos:end="251:24">*</operator> <literal type="number" pos:start="251:26" pos:end="251:29">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:47"><expr pos:start="253:9" pos:end="253:46"><name pos:start="253:9" pos:end="253:41"><name pos:start="253:9" pos:end="253:11">ctx</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:31">init_encode_params</name><operator pos:start="253:32" pos:end="253:32">.</operator><name pos:start="253:33" pos:end="253:41">darHeight</name></name> <operator pos:start="253:43" pos:end="253:43">=</operator> <name pos:start="253:45" pos:end="253:46">dh</name></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:46"><expr pos:start="255:9" pos:end="255:45"><name pos:start="255:9" pos:end="255:40"><name pos:start="255:9" pos:end="255:11">ctx</name><operator pos:start="255:12" pos:end="255:13">-&gt;</operator><name pos:start="255:14" pos:end="255:31">init_encode_params</name><operator pos:start="255:32" pos:end="255:32">.</operator><name pos:start="255:33" pos:end="255:40">darWidth</name></name> <operator pos:start="255:42" pos:end="255:42">=</operator> <name pos:start="255:44" pos:end="255:45">dw</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="257:7" pos:end="263:5">else <block pos:start="257:12" pos:end="263:5">{<block_content pos:start="259:9" pos:end="261:56">

        <expr_stmt pos:start="259:9" pos:end="259:58"><expr pos:start="259:9" pos:end="259:57"><name pos:start="259:9" pos:end="259:41"><name pos:start="259:9" pos:end="259:11">ctx</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:31">init_encode_params</name><operator pos:start="259:32" pos:end="259:32">.</operator><name pos:start="259:33" pos:end="259:41">darHeight</name></name> <operator pos:start="259:43" pos:end="259:43">=</operator> <name pos:start="259:45" pos:end="259:57"><name pos:start="259:45" pos:end="259:49">avctx</name><operator pos:start="259:50" pos:end="259:51">-&gt;</operator><name pos:start="259:52" pos:end="259:57">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:56"><expr pos:start="261:9" pos:end="261:55"><name pos:start="261:9" pos:end="261:40"><name pos:start="261:9" pos:end="261:11">ctx</name><operator pos:start="261:12" pos:end="261:13">-&gt;</operator><name pos:start="261:14" pos:end="261:31">init_encode_params</name><operator pos:start="261:32" pos:end="261:32">.</operator><name pos:start="261:33" pos:end="261:40">darWidth</name></name> <operator pos:start="261:42" pos:end="261:42">=</operator> <name pos:start="261:44" pos:end="261:55"><name pos:start="261:44" pos:end="261:48">avctx</name><operator pos:start="261:49" pos:end="261:50">-&gt;</operator><name pos:start="261:51" pos:end="261:55">width</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="267:5" pos:end="267:70">// De-compensate for hardware, dubiously, trying to compensate for</comment>

    <comment type="line" pos:start="269:5" pos:end="269:35">// playback at 704 pixel width.</comment>

    <if_stmt pos:start="271:5" pos:end="287:5"><if pos:start="271:5" pos:end="287:5">if <condition pos:start="271:8" pos:end="273:55">(<expr pos:start="271:9" pos:end="273:54"><name pos:start="271:9" pos:end="271:20"><name pos:start="271:9" pos:end="271:13">avctx</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:20">width</name></name> <operator pos:start="271:22" pos:end="271:23">==</operator> <literal type="number" pos:start="271:25" pos:end="271:27">720</literal> <operator pos:start="271:29" pos:end="271:30">&amp;&amp;</operator>

        <operator pos:start="273:9" pos:end="273:9">(</operator><name pos:start="273:10" pos:end="273:22"><name pos:start="273:10" pos:end="273:14">avctx</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:22">height</name></name> <operator pos:start="273:24" pos:end="273:25">==</operator> <literal type="number" pos:start="273:27" pos:end="273:29">480</literal> <operator pos:start="273:31" pos:end="273:32">||</operator> <name pos:start="273:34" pos:end="273:46"><name pos:start="273:34" pos:end="273:38">avctx</name><operator pos:start="273:39" pos:end="273:40">-&gt;</operator><name pos:start="273:41" pos:end="273:46">height</name></name> <operator pos:start="273:48" pos:end="273:49">==</operator> <literal type="number" pos:start="273:51" pos:end="273:53">576</literal><operator pos:start="273:54" pos:end="273:54">)</operator></expr>)</condition> <block pos:start="273:57" pos:end="287:5">{<block_content pos:start="275:9" pos:end="285:46">

        <expr_stmt pos:start="275:9" pos:end="281:31"><expr pos:start="275:9" pos:end="281:30"><call pos:start="275:9" pos:end="281:30"><name pos:start="275:9" pos:end="275:17">av_reduce</name><argument_list pos:start="275:18" pos:end="281:30">(<argument pos:start="275:19" pos:end="275:21"><expr pos:start="275:19" pos:end="275:21"><operator pos:start="275:19" pos:end="275:19">&amp;</operator><name pos:start="275:20" pos:end="275:21">dw</name></expr></argument>, <argument pos:start="275:24" pos:end="275:26"><expr pos:start="275:24" pos:end="275:26"><operator pos:start="275:24" pos:end="275:24">&amp;</operator><name pos:start="275:25" pos:end="275:26">dh</name></expr></argument>,

                  <argument pos:start="277:19" pos:end="277:55"><expr pos:start="277:19" pos:end="277:55"><name pos:start="277:19" pos:end="277:50"><name pos:start="277:19" pos:end="277:21">ctx</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:41">init_encode_params</name><operator pos:start="277:42" pos:end="277:42">.</operator><name pos:start="277:43" pos:end="277:50">darWidth</name></name> <operator pos:start="277:52" pos:end="277:52">*</operator> <literal type="number" pos:start="277:54" pos:end="277:55">44</literal></expr></argument>,

                  <argument pos:start="279:19" pos:end="279:56"><expr pos:start="279:19" pos:end="279:56"><name pos:start="279:19" pos:end="279:51"><name pos:start="279:19" pos:end="279:21">ctx</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:41">init_encode_params</name><operator pos:start="279:42" pos:end="279:42">.</operator><name pos:start="279:43" pos:end="279:51">darHeight</name></name> <operator pos:start="279:53" pos:end="279:53">*</operator> <literal type="number" pos:start="279:55" pos:end="279:56">45</literal></expr></argument>,

                  <argument pos:start="281:19" pos:end="281:29"><expr pos:start="281:19" pos:end="281:29"><literal type="number" pos:start="281:19" pos:end="281:22">1024</literal> <operator pos:start="281:24" pos:end="281:24">*</operator> <literal type="number" pos:start="281:26" pos:end="281:29">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:47"><expr pos:start="283:9" pos:end="283:46"><name pos:start="283:9" pos:end="283:41"><name pos:start="283:9" pos:end="283:11">ctx</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:31">init_encode_params</name><operator pos:start="283:32" pos:end="283:32">.</operator><name pos:start="283:33" pos:end="283:41">darHeight</name></name> <operator pos:start="283:43" pos:end="283:43">=</operator> <name pos:start="283:45" pos:end="283:46">dh</name></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:46"><expr pos:start="285:9" pos:end="285:45"><name pos:start="285:9" pos:end="285:40"><name pos:start="285:9" pos:end="285:11">ctx</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:31">init_encode_params</name><operator pos:start="285:32" pos:end="285:32">.</operator><name pos:start="285:33" pos:end="285:40">darWidth</name></name> <operator pos:start="285:42" pos:end="285:42">=</operator> <name pos:start="285:44" pos:end="285:45">dw</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:64"><expr pos:start="291:5" pos:end="291:63"><name pos:start="291:5" pos:end="291:40"><name pos:start="291:5" pos:end="291:7">ctx</name><operator pos:start="291:8" pos:end="291:9">-&gt;</operator><name pos:start="291:10" pos:end="291:27">init_encode_params</name><operator pos:start="291:28" pos:end="291:28">.</operator><name pos:start="291:29" pos:end="291:40">frameRateNum</name></name> <operator pos:start="291:42" pos:end="291:42">=</operator> <name pos:start="291:44" pos:end="291:63"><name pos:start="291:44" pos:end="291:48">avctx</name><operator pos:start="291:49" pos:end="291:50">-&gt;</operator><name pos:start="291:51" pos:end="291:59">time_base</name><operator pos:start="291:60" pos:end="291:60">.</operator><name pos:start="291:61" pos:end="291:63">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:89"><expr pos:start="293:5" pos:end="293:88"><name pos:start="293:5" pos:end="293:40"><name pos:start="293:5" pos:end="293:7">ctx</name><operator pos:start="293:8" pos:end="293:9">-&gt;</operator><name pos:start="293:10" pos:end="293:27">init_encode_params</name><operator pos:start="293:28" pos:end="293:28">.</operator><name pos:start="293:29" pos:end="293:40">frameRateDen</name></name> <operator pos:start="293:42" pos:end="293:42">=</operator> <name pos:start="293:44" pos:end="293:63"><name pos:start="293:44" pos:end="293:48">avctx</name><operator pos:start="293:49" pos:end="293:50">-&gt;</operator><name pos:start="293:51" pos:end="293:59">time_base</name><operator pos:start="293:60" pos:end="293:60">.</operator><name pos:start="293:61" pos:end="293:63">num</name></name> <operator pos:start="293:65" pos:end="293:65">*</operator> <name pos:start="293:67" pos:end="293:88"><name pos:start="293:67" pos:end="293:71">avctx</name><operator pos:start="293:72" pos:end="293:73">-&gt;</operator><name pos:start="293:74" pos:end="293:88">ticks_per_frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:71"><expr pos:start="297:5" pos:end="297:70"><name pos:start="297:5" pos:end="297:11">num_mbs</name> <operator pos:start="297:13" pos:end="297:13">=</operator> <operator pos:start="297:15" pos:end="297:15">(</operator><operator pos:start="297:16" pos:end="297:16">(</operator><name pos:start="297:17" pos:end="297:28"><name pos:start="297:17" pos:end="297:21">avctx</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:28">width</name></name> <operator pos:start="297:30" pos:end="297:30">+</operator> <literal type="number" pos:start="297:32" pos:end="297:33">15</literal><operator pos:start="297:34" pos:end="297:34">)</operator> <operator pos:start="297:36" pos:end="297:37">&gt;&gt;</operator> <literal type="number" pos:start="297:39" pos:end="297:39">4</literal><operator pos:start="297:40" pos:end="297:40">)</operator> <operator pos:start="297:42" pos:end="297:42">*</operator> <operator pos:start="297:44" pos:end="297:44">(</operator><operator pos:start="297:45" pos:end="297:45">(</operator><name pos:start="297:46" pos:end="297:58"><name pos:start="297:46" pos:end="297:50">avctx</name><operator pos:start="297:51" pos:end="297:52">-&gt;</operator><name pos:start="297:53" pos:end="297:58">height</name></name> <operator pos:start="297:60" pos:end="297:60">+</operator> <literal type="number" pos:start="297:62" pos:end="297:63">15</literal><operator pos:start="297:64" pos:end="297:64">)</operator> <operator pos:start="297:66" pos:end="297:67">&gt;&gt;</operator> <literal type="number" pos:start="297:69" pos:end="297:69">4</literal><operator pos:start="297:70" pos:end="297:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:57"><expr pos:start="299:5" pos:end="299:56"><name pos:start="299:5" pos:end="299:26"><name pos:start="299:5" pos:end="299:7">ctx</name><operator pos:start="299:8" pos:end="299:9">-&gt;</operator><name pos:start="299:10" pos:end="299:26">max_surface_count</name></name> <operator pos:start="299:28" pos:end="299:28">=</operator> <ternary pos:start="299:30" pos:end="299:56"><condition pos:start="299:30" pos:end="299:48"><expr pos:start="299:30" pos:end="299:46"><operator pos:start="299:30" pos:end="299:30">(</operator><name pos:start="299:31" pos:end="299:37">num_mbs</name> <operator pos:start="299:39" pos:end="299:40">&gt;=</operator> <literal type="number" pos:start="299:42" pos:end="299:45">8160</literal><operator pos:start="299:46" pos:end="299:46">)</operator></expr> ?</condition><then pos:start="299:50" pos:end="299:51"> <expr pos:start="299:50" pos:end="299:51"><literal type="number" pos:start="299:50" pos:end="299:51">32</literal></expr> </then><else pos:start="299:53" pos:end="299:56">: <expr pos:start="299:55" pos:end="299:56"><literal type="number" pos:start="299:55" pos:end="299:56">48</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:50"><expr pos:start="303:5" pos:end="303:49"><name pos:start="303:5" pos:end="303:45"><name pos:start="303:5" pos:end="303:7">ctx</name><operator pos:start="303:8" pos:end="303:9">-&gt;</operator><name pos:start="303:10" pos:end="303:27">init_encode_params</name><operator pos:start="303:28" pos:end="303:28">.</operator><name pos:start="303:29" pos:end="303:45">enableEncodeAsync</name></name> <operator pos:start="303:47" pos:end="303:47">=</operator> <literal type="number" pos:start="303:49" pos:end="303:49">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:42"><expr pos:start="305:5" pos:end="305:41"><name pos:start="305:5" pos:end="305:37"><name pos:start="305:5" pos:end="305:7">ctx</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:27">init_encode_params</name><operator pos:start="305:28" pos:end="305:28">.</operator><name pos:start="305:29" pos:end="305:37">enablePTD</name></name> <operator pos:start="305:39" pos:end="305:39">=</operator> <literal type="number" pos:start="305:41" pos:end="305:41">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="309:5" pos:end="309:56"><expr pos:start="309:5" pos:end="309:55"><name pos:start="309:5" pos:end="309:38"><name pos:start="309:5" pos:end="309:7">ctx</name><operator pos:start="309:8" pos:end="309:9">-&gt;</operator><name pos:start="309:10" pos:end="309:27">init_encode_params</name><operator pos:start="309:28" pos:end="309:28">.</operator><name pos:start="309:29" pos:end="309:38">presetGUID</name></name> <operator pos:start="309:40" pos:end="309:40">=</operator> <name pos:start="309:42" pos:end="309:55">encoder_preset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="313:5" pos:end="313:63"><expr pos:start="313:5" pos:end="313:62"><name pos:start="313:5" pos:end="313:40"><name pos:start="313:5" pos:end="313:7">ctx</name><operator pos:start="313:8" pos:end="313:9">-&gt;</operator><name pos:start="313:10" pos:end="313:27">init_encode_params</name><operator pos:start="313:28" pos:end="313:28">.</operator><name pos:start="313:29" pos:end="313:40">encodeConfig</name></name> <operator pos:start="313:42" pos:end="313:42">=</operator> <operator pos:start="313:44" pos:end="313:44">&amp;</operator><name pos:start="313:45" pos:end="313:62"><name pos:start="313:45" pos:end="313:47">ctx</name><operator pos:start="313:48" pos:end="313:49">-&gt;</operator><name pos:start="313:50" pos:end="313:62">encode_config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:86"><expr pos:start="315:5" pos:end="315:85"><call pos:start="315:5" pos:end="315:85"><name pos:start="315:5" pos:end="315:10">memcpy</name><argument_list pos:start="315:11" pos:end="315:85">(<argument pos:start="315:12" pos:end="315:30"><expr pos:start="315:12" pos:end="315:30"><operator pos:start="315:12" pos:end="315:12">&amp;</operator><name pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:15">ctx</name><operator pos:start="315:16" pos:end="315:17">-&gt;</operator><name pos:start="315:18" pos:end="315:30">encode_config</name></name></expr></argument>, <argument pos:start="315:33" pos:end="315:56"><expr pos:start="315:33" pos:end="315:56"><operator pos:start="315:33" pos:end="315:33">&amp;</operator><name pos:start="315:34" pos:end="315:56"><name pos:start="315:34" pos:end="315:46">preset_config</name><operator pos:start="315:47" pos:end="315:47">.</operator><name pos:start="315:48" pos:end="315:56">presetCfg</name></name></expr></argument>, <argument pos:start="315:59" pos:end="315:84"><expr pos:start="315:59" pos:end="315:84"><sizeof pos:start="315:59" pos:end="315:84">sizeof<argument_list pos:start="315:65" pos:end="315:84">(<argument pos:start="315:66" pos:end="315:83"><expr pos:start="315:66" pos:end="315:83"><name pos:start="315:66" pos:end="315:83"><name pos:start="315:66" pos:end="315:68">ctx</name><operator pos:start="315:69" pos:end="315:70">-&gt;</operator><name pos:start="315:71" pos:end="315:83">encode_config</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="317:51"><expr pos:start="317:5" pos:end="317:50"><name pos:start="317:5" pos:end="317:30"><name pos:start="317:5" pos:end="317:7">ctx</name><operator pos:start="317:8" pos:end="317:9">-&gt;</operator><name pos:start="317:10" pos:end="317:22">encode_config</name><operator pos:start="317:23" pos:end="317:23">.</operator><name pos:start="317:24" pos:end="317:30">version</name></name> <operator pos:start="317:32" pos:end="317:32">=</operator> <name pos:start="317:34" pos:end="317:50">NV_ENC_CONFIG_VER</name></expr>;</expr_stmt>



    <if_stmt pos:start="321:5" pos:end="343:5"><if pos:start="321:5" pos:end="343:5">if <condition pos:start="321:8" pos:end="321:25">(<expr pos:start="321:9" pos:end="321:24"><name pos:start="321:9" pos:end="321:19"><name pos:start="321:9" pos:end="321:13">avctx</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:19">refs</name></name> <operator pos:start="321:21" pos:end="321:22">&gt;=</operator> <literal type="number" pos:start="321:24" pos:end="321:24">0</literal></expr>)</condition> <block pos:start="321:27" pos:end="343:5">{<block_content pos:start="325:9" pos:end="341:9">

        <comment type="block" pos:start="323:9" pos:end="323:47">/* 0 means "let the hardware decide" */</comment>

        <switch pos:start="325:9" pos:end="341:9">switch <condition pos:start="325:16" pos:end="325:33">(<expr pos:start="325:17" pos:end="325:32"><name pos:start="325:17" pos:end="325:32"><name pos:start="325:17" pos:end="325:21">avctx</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:28">codec</name><operator pos:start="325:29" pos:end="325:30">-&gt;</operator><name pos:start="325:31" pos:end="325:32">id</name></name></expr>)</condition> <block pos:start="325:35" pos:end="341:9">{<block_content pos:start="327:9" pos:end="337:18">

        <case pos:start="327:9" pos:end="327:30">case <expr pos:start="327:14" pos:end="327:29"><name pos:start="327:14" pos:end="327:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="329:13" pos:end="329:90"><expr pos:start="329:13" pos:end="329:89"><name pos:start="329:13" pos:end="329:75"><name pos:start="329:13" pos:end="329:15">ctx</name><operator pos:start="329:16" pos:end="329:17">-&gt;</operator><name pos:start="329:18" pos:end="329:30">encode_config</name><operator pos:start="329:31" pos:end="329:31">.</operator><name pos:start="329:32" pos:end="329:48">encodeCodecConfig</name><operator pos:start="329:49" pos:end="329:49">.</operator><name pos:start="329:50" pos:end="329:59">h264Config</name><operator pos:start="329:60" pos:end="329:60">.</operator><name pos:start="329:61" pos:end="329:75">maxNumRefFrames</name></name> <operator pos:start="329:77" pos:end="329:77">=</operator> <name pos:start="329:79" pos:end="329:89"><name pos:start="329:79" pos:end="329:83">avctx</name><operator pos:start="329:84" pos:end="329:85">-&gt;</operator><name pos:start="329:86" pos:end="329:89">refs</name></name></expr>;</expr_stmt>

            <break pos:start="331:13" pos:end="331:18">break;</break>

        <case pos:start="333:9" pos:end="333:30">case <expr pos:start="333:14" pos:end="333:29"><name pos:start="333:14" pos:end="333:29">AV_CODEC_ID_H265</name></expr>:</case>

            <expr_stmt pos:start="335:13" pos:end="335:95"><expr pos:start="335:13" pos:end="335:94"><name pos:start="335:13" pos:end="335:80"><name pos:start="335:13" pos:end="335:15">ctx</name><operator pos:start="335:16" pos:end="335:17">-&gt;</operator><name pos:start="335:18" pos:end="335:30">encode_config</name><operator pos:start="335:31" pos:end="335:31">.</operator><name pos:start="335:32" pos:end="335:48">encodeCodecConfig</name><operator pos:start="335:49" pos:end="335:49">.</operator><name pos:start="335:50" pos:end="335:59">hevcConfig</name><operator pos:start="335:60" pos:end="335:60">.</operator><name pos:start="335:61" pos:end="335:80">maxNumRefFramesInDPB</name></name> <operator pos:start="335:82" pos:end="335:82">=</operator> <name pos:start="335:84" pos:end="335:94"><name pos:start="335:84" pos:end="335:88">avctx</name><operator pos:start="335:89" pos:end="335:90">-&gt;</operator><name pos:start="335:91" pos:end="335:94">refs</name></name></expr>;</expr_stmt>

            <break pos:start="337:13" pos:end="337:18">break;</break>

        <comment type="block" pos:start="339:9" pos:end="339:73">/* Earlier switch/case will return if unknown codec is passed. */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="347:5" pos:end="403:5"><if pos:start="347:5" pos:end="379:5">if <condition pos:start="347:8" pos:end="347:28">(<expr pos:start="347:9" pos:end="347:27"><name pos:start="347:9" pos:end="347:23"><name pos:start="347:9" pos:end="347:13">avctx</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:23">gop_size</name></name> <operator pos:start="347:25" pos:end="347:25">&gt;</operator> <literal type="number" pos:start="347:27" pos:end="347:27">0</literal></expr>)</condition> <block pos:start="347:30" pos:end="379:5">{<block_content pos:start="349:9" pos:end="377:9">

        <if_stmt pos:start="349:9" pos:end="355:9"><if pos:start="349:9" pos:end="355:9">if <condition pos:start="349:12" pos:end="349:37">(<expr pos:start="349:13" pos:end="349:36"><name pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:17">avctx</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:31">max_b_frames</name></name> <operator pos:start="349:33" pos:end="349:34">&gt;=</operator> <literal type="number" pos:start="349:36" pos:end="349:36">0</literal></expr>)</condition> <block pos:start="349:39" pos:end="355:9">{<block_content pos:start="353:13" pos:end="353:72">

            <comment type="block" pos:start="351:13" pos:end="351:94">/* 0 is intra-only, 1 is I/P only, 2 is one B Frame, 3 two B frames, and so on. */</comment>

            <expr_stmt pos:start="353:13" pos:end="353:72"><expr pos:start="353:13" pos:end="353:71"><name pos:start="353:13" pos:end="353:45"><name pos:start="353:13" pos:end="353:15">ctx</name><operator pos:start="353:16" pos:end="353:17">-&gt;</operator><name pos:start="353:18" pos:end="353:30">encode_config</name><operator pos:start="353:31" pos:end="353:31">.</operator><name pos:start="353:32" pos:end="353:45">frameIntervalP</name></name> <operator pos:start="353:47" pos:end="353:47">=</operator> <name pos:start="353:49" pos:end="353:67"><name pos:start="353:49" pos:end="353:53">avctx</name><operator pos:start="353:54" pos:end="353:55">-&gt;</operator><name pos:start="353:56" pos:end="353:67">max_b_frames</name></name> <operator pos:start="353:69" pos:end="353:69">+</operator> <literal type="number" pos:start="353:71" pos:end="353:71">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="359:9" pos:end="359:55"><expr pos:start="359:9" pos:end="359:54"><name pos:start="359:9" pos:end="359:36"><name pos:start="359:9" pos:end="359:11">ctx</name><operator pos:start="359:12" pos:end="359:13">-&gt;</operator><name pos:start="359:14" pos:end="359:26">encode_config</name><operator pos:start="359:27" pos:end="359:27">.</operator><name pos:start="359:28" pos:end="359:36">gopLength</name></name> <operator pos:start="359:38" pos:end="359:38">=</operator> <name pos:start="359:40" pos:end="359:54"><name pos:start="359:40" pos:end="359:44">avctx</name><operator pos:start="359:45" pos:end="359:46">-&gt;</operator><name pos:start="359:47" pos:end="359:54">gop_size</name></name></expr>;</expr_stmt>

        <switch pos:start="361:9" pos:end="377:9">switch <condition pos:start="361:16" pos:end="361:33">(<expr pos:start="361:17" pos:end="361:32"><name pos:start="361:17" pos:end="361:32"><name pos:start="361:17" pos:end="361:21">avctx</name><operator pos:start="361:22" pos:end="361:23">-&gt;</operator><name pos:start="361:24" pos:end="361:28">codec</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:32">id</name></name></expr>)</condition> <block pos:start="361:35" pos:end="377:9">{<block_content pos:start="363:9" pos:end="373:18">

        <case pos:start="363:9" pos:end="363:30">case <expr pos:start="363:14" pos:end="363:29"><name pos:start="363:14" pos:end="363:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="365:13" pos:end="365:88"><expr pos:start="365:13" pos:end="365:87"><name pos:start="365:13" pos:end="365:69"><name pos:start="365:13" pos:end="365:15">ctx</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:30">encode_config</name><operator pos:start="365:31" pos:end="365:31">.</operator><name pos:start="365:32" pos:end="365:48">encodeCodecConfig</name><operator pos:start="365:49" pos:end="365:49">.</operator><name pos:start="365:50" pos:end="365:59">h264Config</name><operator pos:start="365:60" pos:end="365:60">.</operator><name pos:start="365:61" pos:end="365:69">idrPeriod</name></name> <operator pos:start="365:71" pos:end="365:71">=</operator> <name pos:start="365:73" pos:end="365:87"><name pos:start="365:73" pos:end="365:77">avctx</name><operator pos:start="365:78" pos:end="365:79">-&gt;</operator><name pos:start="365:80" pos:end="365:87">gop_size</name></name></expr>;</expr_stmt>

            <break pos:start="367:13" pos:end="367:18">break;</break>

        <case pos:start="369:9" pos:end="369:30">case <expr pos:start="369:14" pos:end="369:29"><name pos:start="369:14" pos:end="369:29">AV_CODEC_ID_H265</name></expr>:</case>

            <expr_stmt pos:start="371:13" pos:end="371:88"><expr pos:start="371:13" pos:end="371:87"><name pos:start="371:13" pos:end="371:69"><name pos:start="371:13" pos:end="371:15">ctx</name><operator pos:start="371:16" pos:end="371:17">-&gt;</operator><name pos:start="371:18" pos:end="371:30">encode_config</name><operator pos:start="371:31" pos:end="371:31">.</operator><name pos:start="371:32" pos:end="371:48">encodeCodecConfig</name><operator pos:start="371:49" pos:end="371:49">.</operator><name pos:start="371:50" pos:end="371:59">hevcConfig</name><operator pos:start="371:60" pos:end="371:60">.</operator><name pos:start="371:61" pos:end="371:69">idrPeriod</name></name> <operator pos:start="371:71" pos:end="371:71">=</operator> <name pos:start="371:73" pos:end="371:87"><name pos:start="371:73" pos:end="371:77">avctx</name><operator pos:start="371:78" pos:end="371:79">-&gt;</operator><name pos:start="371:80" pos:end="371:87">gop_size</name></name></expr>;</expr_stmt>

            <break pos:start="373:13" pos:end="373:18">break;</break>

        <comment type="block" pos:start="375:9" pos:end="375:73">/* Earlier switch/case will return if unknown codec is passed. */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="379:7" pos:end="403:5">else if <condition pos:start="379:15" pos:end="379:36">(<expr pos:start="379:16" pos:end="379:35"><name pos:start="379:16" pos:end="379:30"><name pos:start="379:16" pos:end="379:20">avctx</name><operator pos:start="379:21" pos:end="379:22">-&gt;</operator><name pos:start="379:23" pos:end="379:30">gop_size</name></name> <operator pos:start="379:32" pos:end="379:33">==</operator> <literal type="number" pos:start="379:35" pos:end="379:35">0</literal></expr>)</condition> <block pos:start="379:38" pos:end="403:5">{<block_content pos:start="381:9" pos:end="401:9">

        <expr_stmt pos:start="381:9" pos:end="381:46"><expr pos:start="381:9" pos:end="381:45"><name pos:start="381:9" pos:end="381:41"><name pos:start="381:9" pos:end="381:11">ctx</name><operator pos:start="381:12" pos:end="381:13">-&gt;</operator><name pos:start="381:14" pos:end="381:26">encode_config</name><operator pos:start="381:27" pos:end="381:27">.</operator><name pos:start="381:28" pos:end="381:41">frameIntervalP</name></name> <operator pos:start="381:43" pos:end="381:43">=</operator> <literal type="number" pos:start="381:45" pos:end="381:45">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:41"><expr pos:start="383:9" pos:end="383:40"><name pos:start="383:9" pos:end="383:36"><name pos:start="383:9" pos:end="383:11">ctx</name><operator pos:start="383:12" pos:end="383:13">-&gt;</operator><name pos:start="383:14" pos:end="383:26">encode_config</name><operator pos:start="383:27" pos:end="383:27">.</operator><name pos:start="383:28" pos:end="383:36">gopLength</name></name> <operator pos:start="383:38" pos:end="383:38">=</operator> <literal type="number" pos:start="383:40" pos:end="383:40">1</literal></expr>;</expr_stmt>

        <switch pos:start="385:9" pos:end="401:9">switch <condition pos:start="385:16" pos:end="385:33">(<expr pos:start="385:17" pos:end="385:32"><name pos:start="385:17" pos:end="385:32"><name pos:start="385:17" pos:end="385:21">avctx</name><operator pos:start="385:22" pos:end="385:23">-&gt;</operator><name pos:start="385:24" pos:end="385:28">codec</name><operator pos:start="385:29" pos:end="385:30">-&gt;</operator><name pos:start="385:31" pos:end="385:32">id</name></name></expr>)</condition> <block pos:start="385:35" pos:end="401:9">{<block_content pos:start="387:9" pos:end="397:18">

        <case pos:start="387:9" pos:end="387:30">case <expr pos:start="387:14" pos:end="387:29"><name pos:start="387:14" pos:end="387:29">AV_CODEC_ID_H264</name></expr>:</case>

            <expr_stmt pos:start="389:13" pos:end="389:74"><expr pos:start="389:13" pos:end="389:73"><name pos:start="389:13" pos:end="389:69"><name pos:start="389:13" pos:end="389:15">ctx</name><operator pos:start="389:16" pos:end="389:17">-&gt;</operator><name pos:start="389:18" pos:end="389:30">encode_config</name><operator pos:start="389:31" pos:end="389:31">.</operator><name pos:start="389:32" pos:end="389:48">encodeCodecConfig</name><operator pos:start="389:49" pos:end="389:49">.</operator><name pos:start="389:50" pos:end="389:59">h264Config</name><operator pos:start="389:60" pos:end="389:60">.</operator><name pos:start="389:61" pos:end="389:69">idrPeriod</name></name> <operator pos:start="389:71" pos:end="389:71">=</operator> <literal type="number" pos:start="389:73" pos:end="389:73">1</literal></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:30">case <expr pos:start="393:14" pos:end="393:29"><name pos:start="393:14" pos:end="393:29">AV_CODEC_ID_H265</name></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:74"><expr pos:start="395:13" pos:end="395:73"><name pos:start="395:13" pos:end="395:69"><name pos:start="395:13" pos:end="395:15">ctx</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:30">encode_config</name><operator pos:start="395:31" pos:end="395:31">.</operator><name pos:start="395:32" pos:end="395:48">encodeCodecConfig</name><operator pos:start="395:49" pos:end="395:49">.</operator><name pos:start="395:50" pos:end="395:59">hevcConfig</name><operator pos:start="395:60" pos:end="395:60">.</operator><name pos:start="395:61" pos:end="395:69">idrPeriod</name></name> <operator pos:start="395:71" pos:end="395:71">=</operator> <literal type="number" pos:start="395:73" pos:end="395:73">1</literal></expr>;</expr_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <comment type="block" pos:start="399:9" pos:end="399:73">/* Earlier switch/case will return if unknown codec is passed. */</comment>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="407:5" pos:end="407:48">/* when there're b frames, set dts offset */</comment>

    <if_stmt pos:start="409:5" pos:end="411:27"><if pos:start="409:5" pos:end="411:27">if <condition pos:start="409:8" pos:end="409:47">(<expr pos:start="409:9" pos:end="409:46"><name pos:start="409:9" pos:end="409:41"><name pos:start="409:9" pos:end="409:11">ctx</name><operator pos:start="409:12" pos:end="409:13">-&gt;</operator><name pos:start="409:14" pos:end="409:26">encode_config</name><operator pos:start="409:27" pos:end="409:27">.</operator><name pos:start="409:28" pos:end="409:41">frameIntervalP</name></name> <operator pos:start="409:43" pos:end="409:44">&gt;=</operator> <literal type="number" pos:start="409:46" pos:end="409:46">2</literal></expr>)</condition><block type="pseudo" pos:start="411:9" pos:end="411:27"><block_content pos:start="411:9" pos:end="411:27">

        <expr_stmt pos:start="411:9" pos:end="411:27"><expr pos:start="411:9" pos:end="411:26"><name pos:start="411:9" pos:end="411:21"><name pos:start="411:9" pos:end="411:11">ctx</name><operator pos:start="411:12" pos:end="411:13">-&gt;</operator><name pos:start="411:14" pos:end="411:21">last_dts</name></name> <operator pos:start="411:23" pos:end="411:23">=</operator> <operator pos:start="411:25" pos:end="411:25">-</operator><literal type="number" pos:start="411:26" pos:end="411:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="415:5" pos:end="417:69"><if pos:start="415:5" pos:end="417:69">if <condition pos:start="415:8" pos:end="415:28">(<expr pos:start="415:9" pos:end="415:27"><name pos:start="415:9" pos:end="415:23"><name pos:start="415:9" pos:end="415:13">avctx</name><operator pos:start="415:14" pos:end="415:15">-&gt;</operator><name pos:start="415:16" pos:end="415:23">bit_rate</name></name> <operator pos:start="415:25" pos:end="415:25">&gt;</operator> <literal type="number" pos:start="415:27" pos:end="415:27">0</literal></expr>)</condition><block type="pseudo" pos:start="417:9" pos:end="417:69"><block_content pos:start="417:9" pos:end="417:69">

        <expr_stmt pos:start="417:9" pos:end="417:69"><expr pos:start="417:9" pos:end="417:68"><name pos:start="417:9" pos:end="417:50"><name pos:start="417:9" pos:end="417:11">ctx</name><operator pos:start="417:12" pos:end="417:13">-&gt;</operator><name pos:start="417:14" pos:end="417:26">encode_config</name><operator pos:start="417:27" pos:end="417:27">.</operator><name pos:start="417:28" pos:end="417:35">rcParams</name><operator pos:start="417:36" pos:end="417:36">.</operator><name pos:start="417:37" pos:end="417:50">averageBitRate</name></name> <operator pos:start="417:52" pos:end="417:52">=</operator> <name pos:start="417:54" pos:end="417:68"><name pos:start="417:54" pos:end="417:58">avctx</name><operator pos:start="417:59" pos:end="417:60">-&gt;</operator><name pos:start="417:61" pos:end="417:68">bit_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="421:5" pos:end="423:68"><if pos:start="421:5" pos:end="423:68">if <condition pos:start="421:8" pos:end="421:31">(<expr pos:start="421:9" pos:end="421:30"><name pos:start="421:9" pos:end="421:26"><name pos:start="421:9" pos:end="421:13">avctx</name><operator pos:start="421:14" pos:end="421:15">-&gt;</operator><name pos:start="421:16" pos:end="421:26">rc_max_rate</name></name> <operator pos:start="421:28" pos:end="421:28">&gt;</operator> <literal type="number" pos:start="421:30" pos:end="421:30">0</literal></expr>)</condition><block type="pseudo" pos:start="423:9" pos:end="423:68"><block_content pos:start="423:9" pos:end="423:68">

        <expr_stmt pos:start="423:9" pos:end="423:68"><expr pos:start="423:9" pos:end="423:67"><name pos:start="423:9" pos:end="423:46"><name pos:start="423:9" pos:end="423:11">ctx</name><operator pos:start="423:12" pos:end="423:13">-&gt;</operator><name pos:start="423:14" pos:end="423:26">encode_config</name><operator pos:start="423:27" pos:end="423:27">.</operator><name pos:start="423:28" pos:end="423:35">rcParams</name><operator pos:start="423:36" pos:end="423:36">.</operator><name pos:start="423:37" pos:end="423:46">maxBitRate</name></name> <operator pos:start="423:48" pos:end="423:48">=</operator> <name pos:start="423:50" pos:end="423:67"><name pos:start="423:50" pos:end="423:54">avctx</name><operator pos:start="423:55" pos:end="423:56">-&gt;</operator><name pos:start="423:57" pos:end="423:67">rc_max_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="427:5" pos:end="501:5"><if pos:start="427:5" pos:end="459:5">if <condition pos:start="427:8" pos:end="427:17">(<expr pos:start="427:9" pos:end="427:16"><name pos:start="427:9" pos:end="427:16"><name pos:start="427:9" pos:end="427:11">ctx</name><operator pos:start="427:12" pos:end="427:13">-&gt;</operator><name pos:start="427:14" pos:end="427:16">cbr</name></name></expr>)</condition> <block pos:start="427:19" pos:end="459:5">{<block_content pos:start="429:9" pos:end="457:9">

        <if_stmt pos:start="429:9" pos:end="457:9"><if pos:start="429:9" pos:end="433:9">if <condition pos:start="429:12" pos:end="429:26">(<expr pos:start="429:13" pos:end="429:25"><operator pos:start="429:13" pos:end="429:13">!</operator><name pos:start="429:14" pos:end="429:25"><name pos:start="429:14" pos:end="429:16">ctx</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:25">twopass</name></name></expr>)</condition> <block pos:start="429:28" pos:end="433:9">{<block_content pos:start="431:13" pos:end="431:79">

            <expr_stmt pos:start="431:13" pos:end="431:79"><expr pos:start="431:13" pos:end="431:78"><name pos:start="431:13" pos:end="431:55"><name pos:start="431:13" pos:end="431:15">ctx</name><operator pos:start="431:16" pos:end="431:17">-&gt;</operator><name pos:start="431:18" pos:end="431:30">encode_config</name><operator pos:start="431:31" pos:end="431:31">.</operator><name pos:start="431:32" pos:end="431:39">rcParams</name><operator pos:start="431:40" pos:end="431:40">.</operator><name pos:start="431:41" pos:end="431:55">rateControlMode</name></name> <operator pos:start="431:57" pos:end="431:57">=</operator> <name pos:start="431:59" pos:end="431:78">NV_ENC_PARAMS_RC_CBR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="433:11" pos:end="453:9">else if <condition pos:start="433:19" pos:end="433:45">(<expr pos:start="433:20" pos:end="433:44"><name pos:start="433:20" pos:end="433:31"><name pos:start="433:20" pos:end="433:22">ctx</name><operator pos:start="433:23" pos:end="433:24">-&gt;</operator><name pos:start="433:25" pos:end="433:31">twopass</name></name> <operator pos:start="433:33" pos:end="433:34">==</operator> <literal type="number" pos:start="433:36" pos:end="433:36">1</literal> <operator pos:start="433:38" pos:end="433:39">||</operator> <name pos:start="433:41" pos:end="433:44">isLL</name></expr>)</condition> <block pos:start="433:47" pos:end="453:9">{<block_content pos:start="435:13" pos:end="451:129">

            <expr_stmt pos:start="435:13" pos:end="435:90"><expr pos:start="435:13" pos:end="435:89"><name pos:start="435:13" pos:end="435:55"><name pos:start="435:13" pos:end="435:15">ctx</name><operator pos:start="435:16" pos:end="435:17">-&gt;</operator><name pos:start="435:18" pos:end="435:30">encode_config</name><operator pos:start="435:31" pos:end="435:31">.</operator><name pos:start="435:32" pos:end="435:39">rcParams</name><operator pos:start="435:40" pos:end="435:40">.</operator><name pos:start="435:41" pos:end="435:55">rateControlMode</name></name> <operator pos:start="435:57" pos:end="435:57">=</operator> <name pos:start="435:59" pos:end="435:89">NV_ENC_PARAMS_RC_2_PASS_QUALITY</name></expr>;</expr_stmt>



            <if_stmt pos:start="439:13" pos:end="445:13"><if pos:start="439:13" pos:end="445:13">if <condition pos:start="439:16" pos:end="439:53">(<expr pos:start="439:17" pos:end="439:52"><name pos:start="439:17" pos:end="439:32"><name pos:start="439:17" pos:end="439:21">avctx</name><operator pos:start="439:22" pos:end="439:23">-&gt;</operator><name pos:start="439:24" pos:end="439:28">codec</name><operator pos:start="439:29" pos:end="439:30">-&gt;</operator><name pos:start="439:31" pos:end="439:32">id</name></name> <operator pos:start="439:34" pos:end="439:35">==</operator> <name pos:start="439:37" pos:end="439:52">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="439:55" pos:end="445:13">{<block_content pos:start="441:17" pos:end="443:98">

                <expr_stmt pos:start="441:17" pos:end="441:126"><expr pos:start="441:17" pos:end="441:125"><name pos:start="441:17" pos:end="441:85"><name pos:start="441:17" pos:end="441:19">ctx</name><operator pos:start="441:20" pos:end="441:21">-&gt;</operator><name pos:start="441:22" pos:end="441:34">encode_config</name><operator pos:start="441:35" pos:end="441:35">.</operator><name pos:start="441:36" pos:end="441:52">encodeCodecConfig</name><operator pos:start="441:53" pos:end="441:53">.</operator><name pos:start="441:54" pos:end="441:63">h264Config</name><operator pos:start="441:64" pos:end="441:64">.</operator><name pos:start="441:65" pos:end="441:85">adaptiveTransformMode</name></name> <operator pos:start="441:87" pos:end="441:87">=</operator> <name pos:start="441:89" pos:end="441:125">NV_ENC_H264_ADAPTIVE_TRANSFORM_ENABLE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="443:17" pos:end="443:98"><expr pos:start="443:17" pos:end="443:97"><name pos:start="443:17" pos:end="443:71"><name pos:start="443:17" pos:end="443:19">ctx</name><operator pos:start="443:20" pos:end="443:21">-&gt;</operator><name pos:start="443:22" pos:end="443:34">encode_config</name><operator pos:start="443:35" pos:end="443:35">.</operator><name pos:start="443:36" pos:end="443:52">encodeCodecConfig</name><operator pos:start="443:53" pos:end="443:53">.</operator><name pos:start="443:54" pos:end="443:63">h264Config</name><operator pos:start="443:64" pos:end="443:64">.</operator><name pos:start="443:65" pos:end="443:71">fmoMode</name></name> <operator pos:start="443:73" pos:end="443:73">=</operator> <name pos:start="443:75" pos:end="443:97">NV_ENC_H264_FMO_DISABLE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="449:13" pos:end="451:129"><if pos:start="449:13" pos:end="451:129">if <condition pos:start="449:16" pos:end="449:22">(<expr pos:start="449:17" pos:end="449:21"><operator pos:start="449:17" pos:end="449:17">!</operator><name pos:start="449:18" pos:end="449:21">isLL</name></expr>)</condition><block type="pseudo" pos:start="451:17" pos:end="451:129"><block_content pos:start="451:17" pos:end="451:129">

                <expr_stmt pos:start="451:17" pos:end="451:129"><expr pos:start="451:17" pos:end="451:128"><call pos:start="451:17" pos:end="451:128"><name pos:start="451:17" pos:end="451:22">av_log</name><argument_list pos:start="451:23" pos:end="451:128">(<argument pos:start="451:24" pos:end="451:28"><expr pos:start="451:24" pos:end="451:28"><name pos:start="451:24" pos:end="451:28">avctx</name></expr></argument>, <argument pos:start="451:31" pos:end="451:44"><expr pos:start="451:31" pos:end="451:44"><name pos:start="451:31" pos:end="451:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="451:47" pos:end="451:127"><expr pos:start="451:47" pos:end="451:127"><literal type="string" pos:start="451:47" pos:end="451:127">"Twopass mode is only known to work with low latency (ll, llhq, llhp) presets.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="453:11" pos:end="457:9">else <block pos:start="453:16" pos:end="457:9">{<block_content pos:start="455:13" pos:end="455:79">

            <expr_stmt pos:start="455:13" pos:end="455:79"><expr pos:start="455:13" pos:end="455:78"><name pos:start="455:13" pos:end="455:55"><name pos:start="455:13" pos:end="455:15">ctx</name><operator pos:start="455:16" pos:end="455:17">-&gt;</operator><name pos:start="455:18" pos:end="455:30">encode_config</name><operator pos:start="455:31" pos:end="455:31">.</operator><name pos:start="455:32" pos:end="455:39">rcParams</name><operator pos:start="455:40" pos:end="455:40">.</operator><name pos:start="455:41" pos:end="455:55">rateControlMode</name></name> <operator pos:start="455:57" pos:end="455:57">=</operator> <name pos:start="455:59" pos:end="455:78">NV_ENC_PARAMS_RC_CBR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="459:7" pos:end="475:5">else if <condition pos:start="459:15" pos:end="459:41">(<expr pos:start="459:16" pos:end="459:40"><name pos:start="459:16" pos:end="459:36"><name pos:start="459:16" pos:end="459:20">avctx</name><operator pos:start="459:21" pos:end="459:22">-&gt;</operator><name pos:start="459:23" pos:end="459:36">global_quality</name></name> <operator pos:start="459:38" pos:end="459:38">&gt;</operator> <literal type="number" pos:start="459:40" pos:end="459:40">0</literal></expr>)</condition> <block pos:start="459:43" pos:end="475:5">{<block_content pos:start="461:9" pos:end="473:25">

        <expr_stmt pos:start="461:9" pos:end="461:79"><expr pos:start="461:9" pos:end="461:78"><name pos:start="461:9" pos:end="461:51"><name pos:start="461:9" pos:end="461:11">ctx</name><operator pos:start="461:12" pos:end="461:13">-&gt;</operator><name pos:start="461:14" pos:end="461:26">encode_config</name><operator pos:start="461:27" pos:end="461:27">.</operator><name pos:start="461:28" pos:end="461:35">rcParams</name><operator pos:start="461:36" pos:end="461:36">.</operator><name pos:start="461:37" pos:end="461:51">rateControlMode</name></name> <operator pos:start="461:53" pos:end="461:53">=</operator> <name pos:start="461:55" pos:end="461:78">NV_ENC_PARAMS_RC_CONSTQP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:77"><expr pos:start="463:9" pos:end="463:76"><name pos:start="463:9" pos:end="463:52"><name pos:start="463:9" pos:end="463:11">ctx</name><operator pos:start="463:12" pos:end="463:13">-&gt;</operator><name pos:start="463:14" pos:end="463:26">encode_config</name><operator pos:start="463:27" pos:end="463:27">.</operator><name pos:start="463:28" pos:end="463:35">rcParams</name><operator pos:start="463:36" pos:end="463:36">.</operator><name pos:start="463:37" pos:end="463:43">constQP</name><operator pos:start="463:44" pos:end="463:44">.</operator><name pos:start="463:45" pos:end="463:52">qpInterB</name></name> <operator pos:start="463:54" pos:end="463:54">=</operator> <name pos:start="463:56" pos:end="463:76"><name pos:start="463:56" pos:end="463:60">avctx</name><operator pos:start="463:61" pos:end="463:62">-&gt;</operator><name pos:start="463:63" pos:end="463:76">global_quality</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:77"><expr pos:start="465:9" pos:end="465:76"><name pos:start="465:9" pos:end="465:52"><name pos:start="465:9" pos:end="465:11">ctx</name><operator pos:start="465:12" pos:end="465:13">-&gt;</operator><name pos:start="465:14" pos:end="465:26">encode_config</name><operator pos:start="465:27" pos:end="465:27">.</operator><name pos:start="465:28" pos:end="465:35">rcParams</name><operator pos:start="465:36" pos:end="465:36">.</operator><name pos:start="465:37" pos:end="465:43">constQP</name><operator pos:start="465:44" pos:end="465:44">.</operator><name pos:start="465:45" pos:end="465:52">qpInterP</name></name> <operator pos:start="465:54" pos:end="465:54">=</operator> <name pos:start="465:56" pos:end="465:76"><name pos:start="465:56" pos:end="465:60">avctx</name><operator pos:start="465:61" pos:end="465:62">-&gt;</operator><name pos:start="465:63" pos:end="465:76">global_quality</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:76"><expr pos:start="467:9" pos:end="467:75"><name pos:start="467:9" pos:end="467:51"><name pos:start="467:9" pos:end="467:11">ctx</name><operator pos:start="467:12" pos:end="467:13">-&gt;</operator><name pos:start="467:14" pos:end="467:26">encode_config</name><operator pos:start="467:27" pos:end="467:27">.</operator><name pos:start="467:28" pos:end="467:35">rcParams</name><operator pos:start="467:36" pos:end="467:36">.</operator><name pos:start="467:37" pos:end="467:43">constQP</name><operator pos:start="467:44" pos:end="467:44">.</operator><name pos:start="467:45" pos:end="467:51">qpIntra</name></name> <operator pos:start="467:53" pos:end="467:53">=</operator> <name pos:start="467:55" pos:end="467:75"><name pos:start="467:55" pos:end="467:59">avctx</name><operator pos:start="467:60" pos:end="467:61">-&gt;</operator><name pos:start="467:62" pos:end="467:75">global_quality</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="471:9" pos:end="471:25"><expr pos:start="471:9" pos:end="471:24"><name pos:start="471:9" pos:end="471:19"><name pos:start="471:9" pos:end="471:13">avctx</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:19">qmin</name></name> <operator pos:start="471:21" pos:end="471:21">=</operator> <operator pos:start="471:23" pos:end="471:23">-</operator><literal type="number" pos:start="471:24" pos:end="471:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:25"><expr pos:start="473:9" pos:end="473:24"><name pos:start="473:9" pos:end="473:19"><name pos:start="473:9" pos:end="473:13">avctx</name><operator pos:start="473:14" pos:end="473:15">-&gt;</operator><name pos:start="473:16" pos:end="473:19">qmax</name></name> <operator pos:start="473:21" pos:end="473:21">=</operator> <operator pos:start="473:23" pos:end="473:23">-</operator><literal type="number" pos:start="473:24" pos:end="473:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="475:7" pos:end="501:5">else if <condition pos:start="475:15" pos:end="475:52">(<expr pos:start="475:16" pos:end="475:51"><name pos:start="475:16" pos:end="475:26"><name pos:start="475:16" pos:end="475:20">avctx</name><operator pos:start="475:21" pos:end="475:22">-&gt;</operator><name pos:start="475:23" pos:end="475:26">qmin</name></name> <operator pos:start="475:28" pos:end="475:29">&gt;=</operator> <literal type="number" pos:start="475:31" pos:end="475:31">0</literal> <operator pos:start="475:33" pos:end="475:34">&amp;&amp;</operator> <name pos:start="475:36" pos:end="475:46"><name pos:start="475:36" pos:end="475:40">avctx</name><operator pos:start="475:41" pos:end="475:42">-&gt;</operator><name pos:start="475:43" pos:end="475:46">qmax</name></name> <operator pos:start="475:48" pos:end="475:49">&gt;=</operator> <literal type="number" pos:start="475:51" pos:end="475:51">0</literal></expr>)</condition> <block pos:start="475:54" pos:end="501:5">{<block_content pos:start="477:9" pos:end="499:64">

        <expr_stmt pos:start="477:9" pos:end="477:75"><expr pos:start="477:9" pos:end="477:74"><name pos:start="477:9" pos:end="477:51"><name pos:start="477:9" pos:end="477:11">ctx</name><operator pos:start="477:12" pos:end="477:13">-&gt;</operator><name pos:start="477:14" pos:end="477:26">encode_config</name><operator pos:start="477:27" pos:end="477:27">.</operator><name pos:start="477:28" pos:end="477:35">rcParams</name><operator pos:start="477:36" pos:end="477:36">.</operator><name pos:start="477:37" pos:end="477:51">rateControlMode</name></name> <operator pos:start="477:53" pos:end="477:53">=</operator> <name pos:start="477:55" pos:end="477:74">NV_ENC_PARAMS_RC_VBR</name></expr>;</expr_stmt>



        <expr_stmt pos:start="481:9" pos:end="481:52"><expr pos:start="481:9" pos:end="481:51"><name pos:start="481:9" pos:end="481:47"><name pos:start="481:9" pos:end="481:11">ctx</name><operator pos:start="481:12" pos:end="481:13">-&gt;</operator><name pos:start="481:14" pos:end="481:26">encode_config</name><operator pos:start="481:27" pos:end="481:27">.</operator><name pos:start="481:28" pos:end="481:35">rcParams</name><operator pos:start="481:36" pos:end="481:36">.</operator><name pos:start="481:37" pos:end="481:47">enableMinQP</name></name> <operator pos:start="481:49" pos:end="481:49">=</operator> <literal type="number" pos:start="481:51" pos:end="481:51">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="483:9" pos:end="483:52"><expr pos:start="483:9" pos:end="483:51"><name pos:start="483:9" pos:end="483:47"><name pos:start="483:9" pos:end="483:11">ctx</name><operator pos:start="483:12" pos:end="483:13">-&gt;</operator><name pos:start="483:14" pos:end="483:26">encode_config</name><operator pos:start="483:27" pos:end="483:27">.</operator><name pos:start="483:28" pos:end="483:35">rcParams</name><operator pos:start="483:36" pos:end="483:36">.</operator><name pos:start="483:37" pos:end="483:47">enableMaxQP</name></name> <operator pos:start="483:49" pos:end="483:49">=</operator> <literal type="number" pos:start="483:51" pos:end="483:51">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="487:9" pos:end="487:65"><expr pos:start="487:9" pos:end="487:64"><name pos:start="487:9" pos:end="487:50"><name pos:start="487:9" pos:end="487:11">ctx</name><operator pos:start="487:12" pos:end="487:13">-&gt;</operator><name pos:start="487:14" pos:end="487:26">encode_config</name><operator pos:start="487:27" pos:end="487:27">.</operator><name pos:start="487:28" pos:end="487:35">rcParams</name><operator pos:start="487:36" pos:end="487:36">.</operator><name pos:start="487:37" pos:end="487:41">minQP</name><operator pos:start="487:42" pos:end="487:42">.</operator><name pos:start="487:43" pos:end="487:50">qpInterB</name></name> <operator pos:start="487:52" pos:end="487:52">=</operator> <name pos:start="487:54" pos:end="487:64"><name pos:start="487:54" pos:end="487:58">avctx</name><operator pos:start="487:59" pos:end="487:60">-&gt;</operator><name pos:start="487:61" pos:end="487:64">qmin</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:65"><expr pos:start="489:9" pos:end="489:64"><name pos:start="489:9" pos:end="489:50"><name pos:start="489:9" pos:end="489:11">ctx</name><operator pos:start="489:12" pos:end="489:13">-&gt;</operator><name pos:start="489:14" pos:end="489:26">encode_config</name><operator pos:start="489:27" pos:end="489:27">.</operator><name pos:start="489:28" pos:end="489:35">rcParams</name><operator pos:start="489:36" pos:end="489:36">.</operator><name pos:start="489:37" pos:end="489:41">minQP</name><operator pos:start="489:42" pos:end="489:42">.</operator><name pos:start="489:43" pos:end="489:50">qpInterP</name></name> <operator pos:start="489:52" pos:end="489:52">=</operator> <name pos:start="489:54" pos:end="489:64"><name pos:start="489:54" pos:end="489:58">avctx</name><operator pos:start="489:59" pos:end="489:60">-&gt;</operator><name pos:start="489:61" pos:end="489:64">qmin</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:64"><expr pos:start="491:9" pos:end="491:63"><name pos:start="491:9" pos:end="491:49"><name pos:start="491:9" pos:end="491:11">ctx</name><operator pos:start="491:12" pos:end="491:13">-&gt;</operator><name pos:start="491:14" pos:end="491:26">encode_config</name><operator pos:start="491:27" pos:end="491:27">.</operator><name pos:start="491:28" pos:end="491:35">rcParams</name><operator pos:start="491:36" pos:end="491:36">.</operator><name pos:start="491:37" pos:end="491:41">minQP</name><operator pos:start="491:42" pos:end="491:42">.</operator><name pos:start="491:43" pos:end="491:49">qpIntra</name></name> <operator pos:start="491:51" pos:end="491:51">=</operator> <name pos:start="491:53" pos:end="491:63"><name pos:start="491:53" pos:end="491:57">avctx</name><operator pos:start="491:58" pos:end="491:59">-&gt;</operator><name pos:start="491:60" pos:end="491:63">qmin</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="495:9" pos:end="495:65"><expr pos:start="495:9" pos:end="495:64"><name pos:start="495:9" pos:end="495:50"><name pos:start="495:9" pos:end="495:11">ctx</name><operator pos:start="495:12" pos:end="495:13">-&gt;</operator><name pos:start="495:14" pos:end="495:26">encode_config</name><operator pos:start="495:27" pos:end="495:27">.</operator><name pos:start="495:28" pos:end="495:35">rcParams</name><operator pos:start="495:36" pos:end="495:36">.</operator><name pos:start="495:37" pos:end="495:41">maxQP</name><operator pos:start="495:42" pos:end="495:42">.</operator><name pos:start="495:43" pos:end="495:50">qpInterB</name></name> <operator pos:start="495:52" pos:end="495:52">=</operator> <name pos:start="495:54" pos:end="495:64"><name pos:start="495:54" pos:end="495:58">avctx</name><operator pos:start="495:59" pos:end="495:60">-&gt;</operator><name pos:start="495:61" pos:end="495:64">qmax</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:65"><expr pos:start="497:9" pos:end="497:64"><name pos:start="497:9" pos:end="497:50"><name pos:start="497:9" pos:end="497:11">ctx</name><operator pos:start="497:12" pos:end="497:13">-&gt;</operator><name pos:start="497:14" pos:end="497:26">encode_config</name><operator pos:start="497:27" pos:end="497:27">.</operator><name pos:start="497:28" pos:end="497:35">rcParams</name><operator pos:start="497:36" pos:end="497:36">.</operator><name pos:start="497:37" pos:end="497:41">maxQP</name><operator pos:start="497:42" pos:end="497:42">.</operator><name pos:start="497:43" pos:end="497:50">qpInterP</name></name> <operator pos:start="497:52" pos:end="497:52">=</operator> <name pos:start="497:54" pos:end="497:64"><name pos:start="497:54" pos:end="497:58">avctx</name><operator pos:start="497:59" pos:end="497:60">-&gt;</operator><name pos:start="497:61" pos:end="497:64">qmax</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="499:9" pos:end="499:64"><expr pos:start="499:9" pos:end="499:63"><name pos:start="499:9" pos:end="499:49"><name pos:start="499:9" pos:end="499:11">ctx</name><operator pos:start="499:12" pos:end="499:13">-&gt;</operator><name pos:start="499:14" pos:end="499:26">encode_config</name><operator pos:start="499:27" pos:end="499:27">.</operator><name pos:start="499:28" pos:end="499:35">rcParams</name><operator pos:start="499:36" pos:end="499:36">.</operator><name pos:start="499:37" pos:end="499:41">maxQP</name><operator pos:start="499:42" pos:end="499:42">.</operator><name pos:start="499:43" pos:end="499:49">qpIntra</name></name> <operator pos:start="499:51" pos:end="499:51">=</operator> <name pos:start="499:53" pos:end="499:63"><name pos:start="499:53" pos:end="499:57">avctx</name><operator pos:start="499:58" pos:end="499:59">-&gt;</operator><name pos:start="499:60" pos:end="499:63">qmax</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="505:5" pos:end="507:74"><if pos:start="505:5" pos:end="507:74">if <condition pos:start="505:8" pos:end="505:34">(<expr pos:start="505:9" pos:end="505:33"><name pos:start="505:9" pos:end="505:29"><name pos:start="505:9" pos:end="505:13">avctx</name><operator pos:start="505:14" pos:end="505:15">-&gt;</operator><name pos:start="505:16" pos:end="505:29">rc_buffer_size</name></name> <operator pos:start="505:31" pos:end="505:31">&gt;</operator> <literal type="number" pos:start="505:33" pos:end="505:33">0</literal></expr>)</condition><block type="pseudo" pos:start="507:9" pos:end="507:74"><block_content pos:start="507:9" pos:end="507:74">

        <expr_stmt pos:start="507:9" pos:end="507:74"><expr pos:start="507:9" pos:end="507:73"><name pos:start="507:9" pos:end="507:49"><name pos:start="507:9" pos:end="507:11">ctx</name><operator pos:start="507:12" pos:end="507:13">-&gt;</operator><name pos:start="507:14" pos:end="507:26">encode_config</name><operator pos:start="507:27" pos:end="507:27">.</operator><name pos:start="507:28" pos:end="507:35">rcParams</name><operator pos:start="507:36" pos:end="507:36">.</operator><name pos:start="507:37" pos:end="507:49">vbvBufferSize</name></name> <operator pos:start="507:51" pos:end="507:51">=</operator> <name pos:start="507:53" pos:end="507:73"><name pos:start="507:53" pos:end="507:57">avctx</name><operator pos:start="507:58" pos:end="507:59">-&gt;</operator><name pos:start="507:60" pos:end="507:73">rc_buffer_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="511:5" pos:end="519:5"><if pos:start="511:5" pos:end="515:5">if <condition pos:start="511:8" pos:end="511:49">(<expr pos:start="511:9" pos:end="511:48"><name pos:start="511:9" pos:end="511:20"><name pos:start="511:9" pos:end="511:13">avctx</name><operator pos:start="511:14" pos:end="511:15">-&gt;</operator><name pos:start="511:16" pos:end="511:20">flags</name></name> <operator pos:start="511:22" pos:end="511:22">&amp;</operator> <name pos:start="511:24" pos:end="511:48">CODEC_FLAG_INTERLACED_DCT</name></expr>)</condition> <block pos:start="511:51" pos:end="515:5">{<block_content pos:start="513:9" pos:end="513:81">

        <expr_stmt pos:start="513:9" pos:end="513:81"><expr pos:start="513:9" pos:end="513:80"><name pos:start="513:9" pos:end="513:41"><name pos:start="513:9" pos:end="513:11">ctx</name><operator pos:start="513:12" pos:end="513:13">-&gt;</operator><name pos:start="513:14" pos:end="513:26">encode_config</name><operator pos:start="513:27" pos:end="513:27">.</operator><name pos:start="513:28" pos:end="513:41">frameFieldMode</name></name> <operator pos:start="513:43" pos:end="513:43">=</operator> <name pos:start="513:45" pos:end="513:80">NV_ENC_PARAMS_FRAME_FIELD_MODE_FIELD</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="515:7" pos:end="519:5">else <block pos:start="515:12" pos:end="519:5">{<block_content pos:start="517:9" pos:end="517:81">

        <expr_stmt pos:start="517:9" pos:end="517:81"><expr pos:start="517:9" pos:end="517:80"><name pos:start="517:9" pos:end="517:41"><name pos:start="517:9" pos:end="517:11">ctx</name><operator pos:start="517:12" pos:end="517:13">-&gt;</operator><name pos:start="517:14" pos:end="517:26">encode_config</name><operator pos:start="517:27" pos:end="517:27">.</operator><name pos:start="517:28" pos:end="517:41">frameFieldMode</name></name> <operator pos:start="517:43" pos:end="517:43">=</operator> <name pos:start="517:45" pos:end="517:80">NV_ENC_PARAMS_FRAME_FIELD_MODE_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="523:5" pos:end="709:5">switch <condition pos:start="523:12" pos:end="523:29">(<expr pos:start="523:13" pos:end="523:28"><name pos:start="523:13" pos:end="523:28"><name pos:start="523:13" pos:end="523:17">avctx</name><operator pos:start="523:18" pos:end="523:19">-&gt;</operator><name pos:start="523:20" pos:end="523:24">codec</name><operator pos:start="523:25" pos:end="523:26">-&gt;</operator><name pos:start="523:27" pos:end="523:28">id</name></name></expr>)</condition> <block pos:start="523:31" pos:end="709:5">{<block_content pos:start="525:5" pos:end="705:14">

    <case pos:start="525:5" pos:end="525:26">case <expr pos:start="525:10" pos:end="525:25"><name pos:start="525:10" pos:end="525:25">AV_CODEC_ID_H264</name></expr>:</case>

        <expr_stmt pos:start="527:9" pos:end="527:107"><expr pos:start="527:9" pos:end="527:106"><name pos:start="527:9" pos:end="527:102"><name pos:start="527:9" pos:end="527:11">ctx</name><operator pos:start="527:12" pos:end="527:13">-&gt;</operator><name pos:start="527:14" pos:end="527:26">encode_config</name><operator pos:start="527:27" pos:end="527:27">.</operator><name pos:start="527:28" pos:end="527:44">encodeCodecConfig</name><operator pos:start="527:45" pos:end="527:45">.</operator><name pos:start="527:46" pos:end="527:55">h264Config</name><operator pos:start="527:56" pos:end="527:56">.</operator><name pos:start="527:57" pos:end="527:73">h264VUIParameters</name><operator pos:start="527:74" pos:end="527:74">.</operator><name pos:start="527:75" pos:end="527:102">colourDescriptionPresentFlag</name></name> <operator pos:start="527:104" pos:end="527:104">=</operator> <literal type="number" pos:start="527:106" pos:end="527:106">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:105"><expr pos:start="529:9" pos:end="529:104"><name pos:start="529:9" pos:end="529:100"><name pos:start="529:9" pos:end="529:11">ctx</name><operator pos:start="529:12" pos:end="529:13">-&gt;</operator><name pos:start="529:14" pos:end="529:26">encode_config</name><operator pos:start="529:27" pos:end="529:27">.</operator><name pos:start="529:28" pos:end="529:44">encodeCodecConfig</name><operator pos:start="529:45" pos:end="529:45">.</operator><name pos:start="529:46" pos:end="529:55">h264Config</name><operator pos:start="529:56" pos:end="529:56">.</operator><name pos:start="529:57" pos:end="529:73">h264VUIParameters</name><operator pos:start="529:74" pos:end="529:74">.</operator><name pos:start="529:75" pos:end="529:100">videoSignalTypePresentFlag</name></name> <operator pos:start="529:102" pos:end="529:102">=</operator> <literal type="number" pos:start="529:104" pos:end="529:104">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="533:9" pos:end="533:107"><expr pos:start="533:9" pos:end="533:106"><name pos:start="533:9" pos:end="533:86"><name pos:start="533:9" pos:end="533:11">ctx</name><operator pos:start="533:12" pos:end="533:13">-&gt;</operator><name pos:start="533:14" pos:end="533:26">encode_config</name><operator pos:start="533:27" pos:end="533:27">.</operator><name pos:start="533:28" pos:end="533:44">encodeCodecConfig</name><operator pos:start="533:45" pos:end="533:45">.</operator><name pos:start="533:46" pos:end="533:55">h264Config</name><operator pos:start="533:56" pos:end="533:56">.</operator><name pos:start="533:57" pos:end="533:73">h264VUIParameters</name><operator pos:start="533:74" pos:end="533:74">.</operator><name pos:start="533:75" pos:end="533:86">colourMatrix</name></name> <operator pos:start="533:88" pos:end="533:88">=</operator> <name pos:start="533:90" pos:end="533:106"><name pos:start="533:90" pos:end="533:94">avctx</name><operator pos:start="533:95" pos:end="533:96">-&gt;</operator><name pos:start="533:97" pos:end="533:106">colorspace</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:115"><expr pos:start="535:9" pos:end="535:114"><name pos:start="535:9" pos:end="535:89"><name pos:start="535:9" pos:end="535:11">ctx</name><operator pos:start="535:12" pos:end="535:13">-&gt;</operator><name pos:start="535:14" pos:end="535:26">encode_config</name><operator pos:start="535:27" pos:end="535:27">.</operator><name pos:start="535:28" pos:end="535:44">encodeCodecConfig</name><operator pos:start="535:45" pos:end="535:45">.</operator><name pos:start="535:46" pos:end="535:55">h264Config</name><operator pos:start="535:56" pos:end="535:56">.</operator><name pos:start="535:57" pos:end="535:73">h264VUIParameters</name><operator pos:start="535:74" pos:end="535:74">.</operator><name pos:start="535:75" pos:end="535:89">colourPrimaries</name></name> <operator pos:start="535:91" pos:end="535:91">=</operator> <name pos:start="535:93" pos:end="535:114"><name pos:start="535:93" pos:end="535:97">avctx</name><operator pos:start="535:98" pos:end="535:99">-&gt;</operator><name pos:start="535:100" pos:end="535:114">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="537:117"><expr pos:start="537:9" pos:end="537:116"><name pos:start="537:9" pos:end="537:97"><name pos:start="537:9" pos:end="537:11">ctx</name><operator pos:start="537:12" pos:end="537:13">-&gt;</operator><name pos:start="537:14" pos:end="537:26">encode_config</name><operator pos:start="537:27" pos:end="537:27">.</operator><name pos:start="537:28" pos:end="537:44">encodeCodecConfig</name><operator pos:start="537:45" pos:end="537:45">.</operator><name pos:start="537:46" pos:end="537:55">h264Config</name><operator pos:start="537:56" pos:end="537:56">.</operator><name pos:start="537:57" pos:end="537:73">h264VUIParameters</name><operator pos:start="537:74" pos:end="537:74">.</operator><name pos:start="537:75" pos:end="537:97">transferCharacteristics</name></name> <operator pos:start="537:99" pos:end="537:99">=</operator> <name pos:start="537:101" pos:end="537:116"><name pos:start="537:101" pos:end="537:105">avctx</name><operator pos:start="537:106" pos:end="537:107">-&gt;</operator><name pos:start="537:108" pos:end="537:116">color_trc</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="541:9" pos:end="541:134"><expr pos:start="541:9" pos:end="541:133"><name pos:start="541:9" pos:end="541:92"><name pos:start="541:9" pos:end="541:11">ctx</name><operator pos:start="541:12" pos:end="541:13">-&gt;</operator><name pos:start="541:14" pos:end="541:26">encode_config</name><operator pos:start="541:27" pos:end="541:27">.</operator><name pos:start="541:28" pos:end="541:44">encodeCodecConfig</name><operator pos:start="541:45" pos:end="541:45">.</operator><name pos:start="541:46" pos:end="541:55">h264Config</name><operator pos:start="541:56" pos:end="541:56">.</operator><name pos:start="541:57" pos:end="541:73">h264VUIParameters</name><operator pos:start="541:74" pos:end="541:74">.</operator><name pos:start="541:75" pos:end="541:92">videoFullRangeFlag</name></name> <operator pos:start="541:94" pos:end="541:94">=</operator> <name pos:start="541:96" pos:end="541:113"><name pos:start="541:96" pos:end="541:100">avctx</name><operator pos:start="541:101" pos:end="541:102">-&gt;</operator><name pos:start="541:103" pos:end="541:113">color_range</name></name> <operator pos:start="541:115" pos:end="541:116">==</operator> <name pos:start="541:118" pos:end="541:133">AVCOL_RANGE_JPEG</name></expr>;</expr_stmt>



        <expr_stmt pos:start="545:9" pos:end="545:122"><expr pos:start="545:9" pos:end="545:121"><name pos:start="545:9" pos:end="545:69"><name pos:start="545:9" pos:end="545:11">ctx</name><operator pos:start="545:12" pos:end="545:13">-&gt;</operator><name pos:start="545:14" pos:end="545:26">encode_config</name><operator pos:start="545:27" pos:end="545:27">.</operator><name pos:start="545:28" pos:end="545:44">encodeCodecConfig</name><operator pos:start="545:45" pos:end="545:45">.</operator><name pos:start="545:46" pos:end="545:55">h264Config</name><operator pos:start="545:56" pos:end="545:56">.</operator><name pos:start="545:57" pos:end="545:69">disableSPSPPS</name></name> <operator pos:start="545:71" pos:end="545:71">=</operator> <ternary pos:start="545:73" pos:end="545:121"><condition pos:start="545:73" pos:end="545:115"><expr pos:start="545:73" pos:end="545:113"><operator pos:start="545:73" pos:end="545:73">(</operator><name pos:start="545:74" pos:end="545:85"><name pos:start="545:74" pos:end="545:78">avctx</name><operator pos:start="545:79" pos:end="545:80">-&gt;</operator><name pos:start="545:81" pos:end="545:85">flags</name></name> <operator pos:start="545:87" pos:end="545:87">&amp;</operator> <name pos:start="545:89" pos:end="545:112">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="545:113" pos:end="545:113">)</operator></expr> ?</condition><then pos:start="545:117" pos:end="545:117"> <expr pos:start="545:117" pos:end="545:117"><literal type="number" pos:start="545:117" pos:end="545:117">1</literal></expr> </then><else pos:start="545:119" pos:end="545:121">: <expr pos:start="545:121" pos:end="545:121"><literal type="number" pos:start="545:121" pos:end="545:121">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="547:9" pos:end="547:121"><expr pos:start="547:9" pos:end="547:120"><name pos:start="547:9" pos:end="547:68"><name pos:start="547:9" pos:end="547:11">ctx</name><operator pos:start="547:12" pos:end="547:13">-&gt;</operator><name pos:start="547:14" pos:end="547:26">encode_config</name><operator pos:start="547:27" pos:end="547:27">.</operator><name pos:start="547:28" pos:end="547:44">encodeCodecConfig</name><operator pos:start="547:45" pos:end="547:45">.</operator><name pos:start="547:46" pos:end="547:55">h264Config</name><operator pos:start="547:56" pos:end="547:56">.</operator><name pos:start="547:57" pos:end="547:68">repeatSPSPPS</name></name> <operator pos:start="547:70" pos:end="547:70">=</operator> <ternary pos:start="547:72" pos:end="547:120"><condition pos:start="547:72" pos:end="547:114"><expr pos:start="547:72" pos:end="547:112"><operator pos:start="547:72" pos:end="547:72">(</operator><name pos:start="547:73" pos:end="547:84"><name pos:start="547:73" pos:end="547:77">avctx</name><operator pos:start="547:78" pos:end="547:79">-&gt;</operator><name pos:start="547:80" pos:end="547:84">flags</name></name> <operator pos:start="547:86" pos:end="547:86">&amp;</operator> <name pos:start="547:88" pos:end="547:111">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="547:112" pos:end="547:112">)</operator></expr> ?</condition><then pos:start="547:116" pos:end="547:116"> <expr pos:start="547:116" pos:end="547:116"><literal type="number" pos:start="547:116" pos:end="547:116">0</literal></expr> </then><else pos:start="547:118" pos:end="547:120">: <expr pos:start="547:120" pos:end="547:120"><literal type="number" pos:start="547:120" pos:end="547:120">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="551:9" pos:end="615:9"><if pos:start="551:9" pos:end="585:9">if <condition pos:start="551:12" pos:end="551:26">(<expr pos:start="551:13" pos:end="551:25"><operator pos:start="551:13" pos:end="551:13">!</operator><name pos:start="551:14" pos:end="551:25"><name pos:start="551:14" pos:end="551:16">ctx</name><operator pos:start="551:17" pos:end="551:18">-&gt;</operator><name pos:start="551:19" pos:end="551:25">profile</name></name></expr>)</condition> <block pos:start="551:28" pos:end="585:9">{<block_content pos:start="553:13" pos:end="583:13">

            <switch pos:start="553:13" pos:end="583:13">switch <condition pos:start="553:20" pos:end="553:35">(<expr pos:start="553:21" pos:end="553:34"><name pos:start="553:21" pos:end="553:34"><name pos:start="553:21" pos:end="553:25">avctx</name><operator pos:start="553:26" pos:end="553:27">-&gt;</operator><name pos:start="553:28" pos:end="553:34">profile</name></name></expr>)</condition> <block pos:start="553:37" pos:end="583:13">{<block_content pos:start="555:13" pos:end="581:22">

            <case pos:start="555:13" pos:end="555:42">case <expr pos:start="555:18" pos:end="555:41"><name pos:start="555:18" pos:end="555:41">FF_PROFILE_H264_BASELINE</name></expr>:</case>

                <expr_stmt pos:start="557:17" pos:end="557:83"><expr pos:start="557:17" pos:end="557:82"><name pos:start="557:17" pos:end="557:46"><name pos:start="557:17" pos:end="557:19">ctx</name><operator pos:start="557:20" pos:end="557:21">-&gt;</operator><name pos:start="557:22" pos:end="557:34">encode_config</name><operator pos:start="557:35" pos:end="557:35">.</operator><name pos:start="557:36" pos:end="557:46">profileGUID</name></name> <operator pos:start="557:48" pos:end="557:48">=</operator> <name pos:start="557:50" pos:end="557:82">NV_ENC_H264_PROFILE_BASELINE_GUID</name></expr>;</expr_stmt>

                <break pos:start="559:17" pos:end="559:22">break;</break>

            <case pos:start="561:13" pos:end="561:38">case <expr pos:start="561:18" pos:end="561:37"><name pos:start="561:18" pos:end="561:37">FF_PROFILE_H264_MAIN</name></expr>:</case>

                <expr_stmt pos:start="563:17" pos:end="563:79"><expr pos:start="563:17" pos:end="563:78"><name pos:start="563:17" pos:end="563:46"><name pos:start="563:17" pos:end="563:19">ctx</name><operator pos:start="563:20" pos:end="563:21">-&gt;</operator><name pos:start="563:22" pos:end="563:34">encode_config</name><operator pos:start="563:35" pos:end="563:35">.</operator><name pos:start="563:36" pos:end="563:46">profileGUID</name></name> <operator pos:start="563:48" pos:end="563:48">=</operator> <name pos:start="563:50" pos:end="563:78">NV_ENC_H264_PROFILE_MAIN_GUID</name></expr>;</expr_stmt>

                <break pos:start="565:17" pos:end="565:22">break;</break>

            <case pos:start="567:13" pos:end="567:38">case <expr pos:start="567:18" pos:end="567:37"><name pos:start="567:18" pos:end="567:37">FF_PROFILE_H264_HIGH</name></expr>:</case>

            <case pos:start="569:13" pos:end="569:36">case <expr pos:start="569:18" pos:end="569:35"><name pos:start="569:18" pos:end="569:35">FF_PROFILE_UNKNOWN</name></expr>:</case>

                <expr_stmt pos:start="571:17" pos:end="571:79"><expr pos:start="571:17" pos:end="571:78"><name pos:start="571:17" pos:end="571:46"><name pos:start="571:17" pos:end="571:19">ctx</name><operator pos:start="571:20" pos:end="571:21">-&gt;</operator><name pos:start="571:22" pos:end="571:34">encode_config</name><operator pos:start="571:35" pos:end="571:35">.</operator><name pos:start="571:36" pos:end="571:46">profileGUID</name></name> <operator pos:start="571:48" pos:end="571:48">=</operator> <name pos:start="571:50" pos:end="571:78">NV_ENC_H264_PROFILE_HIGH_GUID</name></expr>;</expr_stmt>

                <break pos:start="573:17" pos:end="573:22">break;</break>

            <default pos:start="575:13" pos:end="575:20">default:</default>

                <expr_stmt pos:start="577:17" pos:end="577:103"><expr pos:start="577:17" pos:end="577:102"><call pos:start="577:17" pos:end="577:102"><name pos:start="577:17" pos:end="577:22">av_log</name><argument_list pos:start="577:23" pos:end="577:102">(<argument pos:start="577:24" pos:end="577:28"><expr pos:start="577:24" pos:end="577:28"><name pos:start="577:24" pos:end="577:28">avctx</name></expr></argument>, <argument pos:start="577:31" pos:end="577:44"><expr pos:start="577:31" pos:end="577:44"><name pos:start="577:31" pos:end="577:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="577:47" pos:end="577:101"><expr pos:start="577:47" pos:end="577:101"><literal type="string" pos:start="577:47" pos:end="577:101">"Unsupported profile requested, falling back to high\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:79"><expr pos:start="579:17" pos:end="579:78"><name pos:start="579:17" pos:end="579:46"><name pos:start="579:17" pos:end="579:19">ctx</name><operator pos:start="579:20" pos:end="579:21">-&gt;</operator><name pos:start="579:22" pos:end="579:34">encode_config</name><operator pos:start="579:35" pos:end="579:35">.</operator><name pos:start="579:36" pos:end="579:46">profileGUID</name></name> <operator pos:start="579:48" pos:end="579:48">=</operator> <name pos:start="579:50" pos:end="579:78">NV_ENC_H264_PROFILE_HIGH_GUID</name></expr>;</expr_stmt>

                <break pos:start="581:17" pos:end="581:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="585:11" pos:end="615:9">else <block pos:start="585:16" pos:end="615:9">{<block_content pos:start="587:13" pos:end="613:13">

            <if_stmt pos:start="587:13" pos:end="613:13"><if pos:start="587:13" pos:end="593:13">if <condition pos:start="587:16" pos:end="587:46">(<expr pos:start="587:17" pos:end="587:45"><operator pos:start="587:17" pos:end="587:17">!</operator><call pos:start="587:18" pos:end="587:45"><name pos:start="587:18" pos:end="587:23">strcmp</name><argument_list pos:start="587:24" pos:end="587:45">(<argument pos:start="587:25" pos:end="587:36"><expr pos:start="587:25" pos:end="587:36"><name pos:start="587:25" pos:end="587:36"><name pos:start="587:25" pos:end="587:27">ctx</name><operator pos:start="587:28" pos:end="587:29">-&gt;</operator><name pos:start="587:30" pos:end="587:36">profile</name></name></expr></argument>, <argument pos:start="587:39" pos:end="587:44"><expr pos:start="587:39" pos:end="587:44"><literal type="string" pos:start="587:39" pos:end="587:44">"high"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="587:48" pos:end="593:13">{<block_content pos:start="589:17" pos:end="591:54">

                <expr_stmt pos:start="589:17" pos:end="589:79"><expr pos:start="589:17" pos:end="589:78"><name pos:start="589:17" pos:end="589:46"><name pos:start="589:17" pos:end="589:19">ctx</name><operator pos:start="589:20" pos:end="589:21">-&gt;</operator><name pos:start="589:22" pos:end="589:34">encode_config</name><operator pos:start="589:35" pos:end="589:35">.</operator><name pos:start="589:36" pos:end="589:46">profileGUID</name></name> <operator pos:start="589:48" pos:end="589:48">=</operator> <name pos:start="589:50" pos:end="589:78">NV_ENC_H264_PROFILE_HIGH_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="591:17" pos:end="591:54"><expr pos:start="591:17" pos:end="591:53"><name pos:start="591:17" pos:end="591:30"><name pos:start="591:17" pos:end="591:21">avctx</name><operator pos:start="591:22" pos:end="591:23">-&gt;</operator><name pos:start="591:24" pos:end="591:30">profile</name></name> <operator pos:start="591:32" pos:end="591:32">=</operator> <name pos:start="591:34" pos:end="591:53">FF_PROFILE_H264_HIGH</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="593:15" pos:end="599:13">else if <condition pos:start="593:23" pos:end="593:53">(<expr pos:start="593:24" pos:end="593:52"><operator pos:start="593:24" pos:end="593:24">!</operator><call pos:start="593:25" pos:end="593:52"><name pos:start="593:25" pos:end="593:30">strcmp</name><argument_list pos:start="593:31" pos:end="593:52">(<argument pos:start="593:32" pos:end="593:43"><expr pos:start="593:32" pos:end="593:43"><name pos:start="593:32" pos:end="593:43"><name pos:start="593:32" pos:end="593:34">ctx</name><operator pos:start="593:35" pos:end="593:36">-&gt;</operator><name pos:start="593:37" pos:end="593:43">profile</name></name></expr></argument>, <argument pos:start="593:46" pos:end="593:51"><expr pos:start="593:46" pos:end="593:51"><literal type="string" pos:start="593:46" pos:end="593:51">"main"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="593:55" pos:end="599:13">{<block_content pos:start="595:17" pos:end="597:54">

                <expr_stmt pos:start="595:17" pos:end="595:79"><expr pos:start="595:17" pos:end="595:78"><name pos:start="595:17" pos:end="595:46"><name pos:start="595:17" pos:end="595:19">ctx</name><operator pos:start="595:20" pos:end="595:21">-&gt;</operator><name pos:start="595:22" pos:end="595:34">encode_config</name><operator pos:start="595:35" pos:end="595:35">.</operator><name pos:start="595:36" pos:end="595:46">profileGUID</name></name> <operator pos:start="595:48" pos:end="595:48">=</operator> <name pos:start="595:50" pos:end="595:78">NV_ENC_H264_PROFILE_MAIN_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:54"><expr pos:start="597:17" pos:end="597:53"><name pos:start="597:17" pos:end="597:30"><name pos:start="597:17" pos:end="597:21">avctx</name><operator pos:start="597:22" pos:end="597:23">-&gt;</operator><name pos:start="597:24" pos:end="597:30">profile</name></name> <operator pos:start="597:32" pos:end="597:32">=</operator> <name pos:start="597:34" pos:end="597:53">FF_PROFILE_H264_MAIN</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="599:15" pos:end="605:13">else if <condition pos:start="599:23" pos:end="599:57">(<expr pos:start="599:24" pos:end="599:56"><operator pos:start="599:24" pos:end="599:24">!</operator><call pos:start="599:25" pos:end="599:56"><name pos:start="599:25" pos:end="599:30">strcmp</name><argument_list pos:start="599:31" pos:end="599:56">(<argument pos:start="599:32" pos:end="599:43"><expr pos:start="599:32" pos:end="599:43"><name pos:start="599:32" pos:end="599:43"><name pos:start="599:32" pos:end="599:34">ctx</name><operator pos:start="599:35" pos:end="599:36">-&gt;</operator><name pos:start="599:37" pos:end="599:43">profile</name></name></expr></argument>, <argument pos:start="599:46" pos:end="599:55"><expr pos:start="599:46" pos:end="599:55"><literal type="string" pos:start="599:46" pos:end="599:55">"baseline"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="599:59" pos:end="605:13">{<block_content pos:start="601:17" pos:end="603:58">

                <expr_stmt pos:start="601:17" pos:end="601:83"><expr pos:start="601:17" pos:end="601:82"><name pos:start="601:17" pos:end="601:46"><name pos:start="601:17" pos:end="601:19">ctx</name><operator pos:start="601:20" pos:end="601:21">-&gt;</operator><name pos:start="601:22" pos:end="601:34">encode_config</name><operator pos:start="601:35" pos:end="601:35">.</operator><name pos:start="601:36" pos:end="601:46">profileGUID</name></name> <operator pos:start="601:48" pos:end="601:48">=</operator> <name pos:start="601:50" pos:end="601:82">NV_ENC_H264_PROFILE_BASELINE_GUID</name></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:58"><expr pos:start="603:17" pos:end="603:57"><name pos:start="603:17" pos:end="603:30"><name pos:start="603:17" pos:end="603:21">avctx</name><operator pos:start="603:22" pos:end="603:23">-&gt;</operator><name pos:start="603:24" pos:end="603:30">profile</name></name> <operator pos:start="603:32" pos:end="603:32">=</operator> <name pos:start="603:34" pos:end="603:57">FF_PROFILE_H264_BASELINE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="605:15" pos:end="613:13">else <block pos:start="605:20" pos:end="613:13">{<block_content pos:start="607:17" pos:end="611:27">

                <expr_stmt pos:start="607:17" pos:end="607:131"><expr pos:start="607:17" pos:end="607:130"><call pos:start="607:17" pos:end="607:130"><name pos:start="607:17" pos:end="607:22">av_log</name><argument_list pos:start="607:23" pos:end="607:130">(<argument pos:start="607:24" pos:end="607:28"><expr pos:start="607:24" pos:end="607:28"><name pos:start="607:24" pos:end="607:28">avctx</name></expr></argument>, <argument pos:start="607:31" pos:end="607:42"><expr pos:start="607:31" pos:end="607:42"><name pos:start="607:31" pos:end="607:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="607:45" pos:end="607:115"><expr pos:start="607:45" pos:end="607:115"><literal type="string" pos:start="607:45" pos:end="607:115">"Profile \"%s\" is unknown! Supported profiles: high, main, baseline\n"</literal></expr></argument>, <argument pos:start="607:118" pos:end="607:129"><expr pos:start="607:118" pos:end="607:129"><name pos:start="607:118" pos:end="607:129"><name pos:start="607:118" pos:end="607:120">ctx</name><operator pos:start="607:121" pos:end="607:122">-&gt;</operator><name pos:start="607:123" pos:end="607:129">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:38"><expr pos:start="609:17" pos:end="609:37"><name pos:start="609:17" pos:end="609:19">res</name> <operator pos:start="609:21" pos:end="609:21">=</operator> <call pos:start="609:23" pos:end="609:37"><name pos:start="609:23" pos:end="609:29">AVERROR</name><argument_list pos:start="609:30" pos:end="609:37">(<argument pos:start="609:31" pos:end="609:36"><expr pos:start="609:31" pos:end="609:36"><name pos:start="609:31" pos:end="609:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="611:17" pos:end="611:27">goto <name pos:start="611:22" pos:end="611:26">error</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="619:9" pos:end="637:9"><if pos:start="619:9" pos:end="633:9">if <condition pos:start="619:12" pos:end="619:23">(<expr pos:start="619:13" pos:end="619:22"><name pos:start="619:13" pos:end="619:22"><name pos:start="619:13" pos:end="619:15">ctx</name><operator pos:start="619:16" pos:end="619:17">-&gt;</operator><name pos:start="619:18" pos:end="619:22">level</name></name></expr>)</condition> <block pos:start="619:25" pos:end="633:9">{<block_content pos:start="621:13" pos:end="631:13">

            <expr_stmt pos:start="621:13" pos:end="621:140"><expr pos:start="621:13" pos:end="621:139"><name pos:start="621:13" pos:end="621:15">res</name> <operator pos:start="621:17" pos:end="621:17">=</operator> <call pos:start="621:19" pos:end="621:139"><name pos:start="621:19" pos:end="621:40">input_string_to_uint32</name><argument_list pos:start="621:41" pos:end="621:139">(<argument pos:start="621:42" pos:end="621:46"><expr pos:start="621:42" pos:end="621:46"><name pos:start="621:42" pos:end="621:46">avctx</name></expr></argument>, <argument pos:start="621:49" pos:end="621:70"><expr pos:start="621:49" pos:end="621:70"><name pos:start="621:49" pos:end="621:70">nvenc_h264_level_pairs</name></expr></argument>, <argument pos:start="621:73" pos:end="621:82"><expr pos:start="621:73" pos:end="621:82"><name pos:start="621:73" pos:end="621:82"><name pos:start="621:73" pos:end="621:75">ctx</name><operator pos:start="621:76" pos:end="621:77">-&gt;</operator><name pos:start="621:78" pos:end="621:82">level</name></name></expr></argument>, <argument pos:start="621:85" pos:end="621:138"><expr pos:start="621:85" pos:end="621:138"><operator pos:start="621:85" pos:end="621:85">&amp;</operator><name pos:start="621:86" pos:end="621:138"><name pos:start="621:86" pos:end="621:88">ctx</name><operator pos:start="621:89" pos:end="621:90">-&gt;</operator><name pos:start="621:91" pos:end="621:103">encode_config</name><operator pos:start="621:104" pos:end="621:104">.</operator><name pos:start="621:105" pos:end="621:121">encodeCodecConfig</name><operator pos:start="621:122" pos:end="621:122">.</operator><name pos:start="621:123" pos:end="621:132">h264Config</name><operator pos:start="621:133" pos:end="621:133">.</operator><name pos:start="621:134" pos:end="621:138">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="625:13" pos:end="631:13"><if pos:start="625:13" pos:end="631:13">if <condition pos:start="625:16" pos:end="625:20">(<expr pos:start="625:17" pos:end="625:19"><name pos:start="625:17" pos:end="625:19">res</name></expr>)</condition> <block pos:start="625:22" pos:end="631:13">{<block_content pos:start="627:17" pos:end="629:27">

                <expr_stmt pos:start="627:17" pos:end="627:178"><expr pos:start="627:17" pos:end="627:177"><call pos:start="627:17" pos:end="627:177"><name pos:start="627:17" pos:end="627:22">av_log</name><argument_list pos:start="627:23" pos:end="627:177">(<argument pos:start="627:24" pos:end="627:28"><expr pos:start="627:24" pos:end="627:28"><name pos:start="627:24" pos:end="627:28">avctx</name></expr></argument>, <argument pos:start="627:31" pos:end="627:42"><expr pos:start="627:31" pos:end="627:42"><name pos:start="627:31" pos:end="627:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="627:45" pos:end="627:164"><expr pos:start="627:45" pos:end="627:164"><literal type="string" pos:start="627:45" pos:end="627:164">"Level \"%s\" is unknown! Supported levels: auto, 1, 1b, 1.1, 1.2, 1.3, 2, 2.1, 2.2, 3, 3.1, 3.2, 4, 4.1, 4.2, 5, 5.1\n"</literal></expr></argument>, <argument pos:start="627:167" pos:end="627:176"><expr pos:start="627:167" pos:end="627:176"><name pos:start="627:167" pos:end="627:176"><name pos:start="627:167" pos:end="627:169">ctx</name><operator pos:start="627:170" pos:end="627:171">-&gt;</operator><name pos:start="627:172" pos:end="627:176">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="629:17" pos:end="629:27">goto <name pos:start="629:22" pos:end="629:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="633:11" pos:end="637:9">else <block pos:start="633:16" pos:end="637:9">{<block_content pos:start="635:13" pos:end="635:92">

            <expr_stmt pos:start="635:13" pos:end="635:92"><expr pos:start="635:13" pos:end="635:91"><name pos:start="635:13" pos:end="635:65"><name pos:start="635:13" pos:end="635:15">ctx</name><operator pos:start="635:16" pos:end="635:17">-&gt;</operator><name pos:start="635:18" pos:end="635:30">encode_config</name><operator pos:start="635:31" pos:end="635:31">.</operator><name pos:start="635:32" pos:end="635:48">encodeCodecConfig</name><operator pos:start="635:49" pos:end="635:49">.</operator><name pos:start="635:50" pos:end="635:59">h264Config</name><operator pos:start="635:60" pos:end="635:60">.</operator><name pos:start="635:61" pos:end="635:65">level</name></name> <operator pos:start="635:67" pos:end="635:67">=</operator> <name pos:start="635:69" pos:end="635:91">NV_ENC_LEVEL_AUTOSELECT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <break pos:start="641:9" pos:end="641:14">break;</break>

    <case pos:start="643:5" pos:end="643:26">case <expr pos:start="643:10" pos:end="643:25"><name pos:start="643:10" pos:end="643:25">AV_CODEC_ID_H265</name></expr>:</case>

        <expr_stmt pos:start="645:9" pos:end="645:122"><expr pos:start="645:9" pos:end="645:121"><name pos:start="645:9" pos:end="645:69"><name pos:start="645:9" pos:end="645:11">ctx</name><operator pos:start="645:12" pos:end="645:13">-&gt;</operator><name pos:start="645:14" pos:end="645:26">encode_config</name><operator pos:start="645:27" pos:end="645:27">.</operator><name pos:start="645:28" pos:end="645:44">encodeCodecConfig</name><operator pos:start="645:45" pos:end="645:45">.</operator><name pos:start="645:46" pos:end="645:55">hevcConfig</name><operator pos:start="645:56" pos:end="645:56">.</operator><name pos:start="645:57" pos:end="645:69">disableSPSPPS</name></name> <operator pos:start="645:71" pos:end="645:71">=</operator> <ternary pos:start="645:73" pos:end="645:121"><condition pos:start="645:73" pos:end="645:115"><expr pos:start="645:73" pos:end="645:113"><operator pos:start="645:73" pos:end="645:73">(</operator><name pos:start="645:74" pos:end="645:85"><name pos:start="645:74" pos:end="645:78">avctx</name><operator pos:start="645:79" pos:end="645:80">-&gt;</operator><name pos:start="645:81" pos:end="645:85">flags</name></name> <operator pos:start="645:87" pos:end="645:87">&amp;</operator> <name pos:start="645:89" pos:end="645:112">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="645:113" pos:end="645:113">)</operator></expr> ?</condition><then pos:start="645:117" pos:end="645:117"> <expr pos:start="645:117" pos:end="645:117"><literal type="number" pos:start="645:117" pos:end="645:117">1</literal></expr> </then><else pos:start="645:119" pos:end="645:121">: <expr pos:start="645:121" pos:end="645:121"><literal type="number" pos:start="645:121" pos:end="645:121">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="647:9" pos:end="647:121"><expr pos:start="647:9" pos:end="647:120"><name pos:start="647:9" pos:end="647:68"><name pos:start="647:9" pos:end="647:11">ctx</name><operator pos:start="647:12" pos:end="647:13">-&gt;</operator><name pos:start="647:14" pos:end="647:26">encode_config</name><operator pos:start="647:27" pos:end="647:27">.</operator><name pos:start="647:28" pos:end="647:44">encodeCodecConfig</name><operator pos:start="647:45" pos:end="647:45">.</operator><name pos:start="647:46" pos:end="647:55">hevcConfig</name><operator pos:start="647:56" pos:end="647:56">.</operator><name pos:start="647:57" pos:end="647:68">repeatSPSPPS</name></name> <operator pos:start="647:70" pos:end="647:70">=</operator> <ternary pos:start="647:72" pos:end="647:120"><condition pos:start="647:72" pos:end="647:114"><expr pos:start="647:72" pos:end="647:112"><operator pos:start="647:72" pos:end="647:72">(</operator><name pos:start="647:73" pos:end="647:84"><name pos:start="647:73" pos:end="647:77">avctx</name><operator pos:start="647:78" pos:end="647:79">-&gt;</operator><name pos:start="647:80" pos:end="647:84">flags</name></name> <operator pos:start="647:86" pos:end="647:86">&amp;</operator> <name pos:start="647:88" pos:end="647:111">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="647:112" pos:end="647:112">)</operator></expr> ?</condition><then pos:start="647:116" pos:end="647:116"> <expr pos:start="647:116" pos:end="647:116"><literal type="number" pos:start="647:116" pos:end="647:116">0</literal></expr> </then><else pos:start="647:118" pos:end="647:120">: <expr pos:start="647:120" pos:end="647:120"><literal type="number" pos:start="647:120" pos:end="647:120">1</literal></expr></else></ternary></expr>;</expr_stmt>



        <comment type="block" pos:start="651:9" pos:end="651:72">/* No other profile is supported in the current SDK version 5 */</comment>

        <expr_stmt pos:start="653:9" pos:end="653:71"><expr pos:start="653:9" pos:end="653:70"><name pos:start="653:9" pos:end="653:38"><name pos:start="653:9" pos:end="653:11">ctx</name><operator pos:start="653:12" pos:end="653:13">-&gt;</operator><name pos:start="653:14" pos:end="653:26">encode_config</name><operator pos:start="653:27" pos:end="653:27">.</operator><name pos:start="653:28" pos:end="653:38">profileGUID</name></name> <operator pos:start="653:40" pos:end="653:40">=</operator> <name pos:start="653:42" pos:end="653:70">NV_ENC_HEVC_PROFILE_MAIN_GUID</name></expr>;</expr_stmt>

        <expr_stmt pos:start="655:9" pos:end="655:46"><expr pos:start="655:9" pos:end="655:45"><name pos:start="655:9" pos:end="655:22"><name pos:start="655:9" pos:end="655:13">avctx</name><operator pos:start="655:14" pos:end="655:15">-&gt;</operator><name pos:start="655:16" pos:end="655:22">profile</name></name> <operator pos:start="655:24" pos:end="655:24">=</operator> <name pos:start="655:26" pos:end="655:45">FF_PROFILE_HEVC_MAIN</name></expr>;</expr_stmt>



        <if_stmt pos:start="659:9" pos:end="677:9"><if pos:start="659:9" pos:end="673:9">if <condition pos:start="659:12" pos:end="659:23">(<expr pos:start="659:13" pos:end="659:22"><name pos:start="659:13" pos:end="659:22"><name pos:start="659:13" pos:end="659:15">ctx</name><operator pos:start="659:16" pos:end="659:17">-&gt;</operator><name pos:start="659:18" pos:end="659:22">level</name></name></expr>)</condition> <block pos:start="659:25" pos:end="673:9">{<block_content pos:start="661:13" pos:end="671:13">

            <expr_stmt pos:start="661:13" pos:end="661:140"><expr pos:start="661:13" pos:end="661:139"><name pos:start="661:13" pos:end="661:15">res</name> <operator pos:start="661:17" pos:end="661:17">=</operator> <call pos:start="661:19" pos:end="661:139"><name pos:start="661:19" pos:end="661:40">input_string_to_uint32</name><argument_list pos:start="661:41" pos:end="661:139">(<argument pos:start="661:42" pos:end="661:46"><expr pos:start="661:42" pos:end="661:46"><name pos:start="661:42" pos:end="661:46">avctx</name></expr></argument>, <argument pos:start="661:49" pos:end="661:70"><expr pos:start="661:49" pos:end="661:70"><name pos:start="661:49" pos:end="661:70">nvenc_hevc_level_pairs</name></expr></argument>, <argument pos:start="661:73" pos:end="661:82"><expr pos:start="661:73" pos:end="661:82"><name pos:start="661:73" pos:end="661:82"><name pos:start="661:73" pos:end="661:75">ctx</name><operator pos:start="661:76" pos:end="661:77">-&gt;</operator><name pos:start="661:78" pos:end="661:82">level</name></name></expr></argument>, <argument pos:start="661:85" pos:end="661:138"><expr pos:start="661:85" pos:end="661:138"><operator pos:start="661:85" pos:end="661:85">&amp;</operator><name pos:start="661:86" pos:end="661:138"><name pos:start="661:86" pos:end="661:88">ctx</name><operator pos:start="661:89" pos:end="661:90">-&gt;</operator><name pos:start="661:91" pos:end="661:103">encode_config</name><operator pos:start="661:104" pos:end="661:104">.</operator><name pos:start="661:105" pos:end="661:121">encodeCodecConfig</name><operator pos:start="661:122" pos:end="661:122">.</operator><name pos:start="661:123" pos:end="661:132">hevcConfig</name><operator pos:start="661:133" pos:end="661:133">.</operator><name pos:start="661:134" pos:end="661:138">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="665:13" pos:end="671:13"><if pos:start="665:13" pos:end="671:13">if <condition pos:start="665:16" pos:end="665:20">(<expr pos:start="665:17" pos:end="665:19"><name pos:start="665:17" pos:end="665:19">res</name></expr>)</condition> <block pos:start="665:22" pos:end="671:13">{<block_content pos:start="667:17" pos:end="669:27">

                <expr_stmt pos:start="667:17" pos:end="667:162"><expr pos:start="667:17" pos:end="667:161"><call pos:start="667:17" pos:end="667:161"><name pos:start="667:17" pos:end="667:22">av_log</name><argument_list pos:start="667:23" pos:end="667:161">(<argument pos:start="667:24" pos:end="667:28"><expr pos:start="667:24" pos:end="667:28"><name pos:start="667:24" pos:end="667:28">avctx</name></expr></argument>, <argument pos:start="667:31" pos:end="667:42"><expr pos:start="667:31" pos:end="667:42"><name pos:start="667:31" pos:end="667:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="667:45" pos:end="667:148"><expr pos:start="667:45" pos:end="667:148"><literal type="string" pos:start="667:45" pos:end="667:148">"Level \"%s\" is unknown! Supported levels: auto, 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.2, 6, 6.1, 6.2\n"</literal></expr></argument>, <argument pos:start="667:151" pos:end="667:160"><expr pos:start="667:151" pos:end="667:160"><name pos:start="667:151" pos:end="667:160"><name pos:start="667:151" pos:end="667:153">ctx</name><operator pos:start="667:154" pos:end="667:155">-&gt;</operator><name pos:start="667:156" pos:end="667:160">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="669:17" pos:end="669:27">goto <name pos:start="669:22" pos:end="669:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="673:11" pos:end="677:9">else <block pos:start="673:16" pos:end="677:9">{<block_content pos:start="675:13" pos:end="675:92">

            <expr_stmt pos:start="675:13" pos:end="675:92"><expr pos:start="675:13" pos:end="675:91"><name pos:start="675:13" pos:end="675:65"><name pos:start="675:13" pos:end="675:15">ctx</name><operator pos:start="675:16" pos:end="675:17">-&gt;</operator><name pos:start="675:18" pos:end="675:30">encode_config</name><operator pos:start="675:31" pos:end="675:31">.</operator><name pos:start="675:32" pos:end="675:48">encodeCodecConfig</name><operator pos:start="675:49" pos:end="675:49">.</operator><name pos:start="675:50" pos:end="675:59">hevcConfig</name><operator pos:start="675:60" pos:end="675:60">.</operator><name pos:start="675:61" pos:end="675:65">level</name></name> <operator pos:start="675:67" pos:end="675:67">=</operator> <name pos:start="675:69" pos:end="675:91">NV_ENC_LEVEL_AUTOSELECT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="681:9" pos:end="701:9"><if pos:start="681:9" pos:end="701:9">if <condition pos:start="681:12" pos:end="681:22">(<expr pos:start="681:13" pos:end="681:21"><name pos:start="681:13" pos:end="681:21"><name pos:start="681:13" pos:end="681:15">ctx</name><operator pos:start="681:16" pos:end="681:17">-&gt;</operator><name pos:start="681:18" pos:end="681:21">tier</name></name></expr>)</condition> <block pos:start="681:24" pos:end="701:9">{<block_content pos:start="683:13" pos:end="699:13">

            <if_stmt pos:start="683:13" pos:end="699:13"><if pos:start="683:13" pos:end="687:13">if <condition pos:start="683:16" pos:end="683:43">(<expr pos:start="683:17" pos:end="683:42"><operator pos:start="683:17" pos:end="683:17">!</operator><call pos:start="683:18" pos:end="683:42"><name pos:start="683:18" pos:end="683:23">strcmp</name><argument_list pos:start="683:24" pos:end="683:42">(<argument pos:start="683:25" pos:end="683:33"><expr pos:start="683:25" pos:end="683:33"><name pos:start="683:25" pos:end="683:33"><name pos:start="683:25" pos:end="683:27">ctx</name><operator pos:start="683:28" pos:end="683:29">-&gt;</operator><name pos:start="683:30" pos:end="683:33">tier</name></name></expr></argument>, <argument pos:start="683:36" pos:end="683:41"><expr pos:start="683:36" pos:end="683:41"><literal type="string" pos:start="683:36" pos:end="683:41">"main"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="683:45" pos:end="687:13">{<block_content pos:start="685:17" pos:end="685:93">

                <expr_stmt pos:start="685:17" pos:end="685:93"><expr pos:start="685:17" pos:end="685:92"><name pos:start="685:17" pos:end="685:68"><name pos:start="685:17" pos:end="685:19">ctx</name><operator pos:start="685:20" pos:end="685:21">-&gt;</operator><name pos:start="685:22" pos:end="685:34">encode_config</name><operator pos:start="685:35" pos:end="685:35">.</operator><name pos:start="685:36" pos:end="685:52">encodeCodecConfig</name><operator pos:start="685:53" pos:end="685:53">.</operator><name pos:start="685:54" pos:end="685:63">hevcConfig</name><operator pos:start="685:64" pos:end="685:64">.</operator><name pos:start="685:65" pos:end="685:68">tier</name></name> <operator pos:start="685:70" pos:end="685:70">=</operator> <name pos:start="685:72" pos:end="685:92">NV_ENC_TIER_HEVC_MAIN</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="687:15" pos:end="691:13">else if <condition pos:start="687:23" pos:end="687:50">(<expr pos:start="687:24" pos:end="687:49"><operator pos:start="687:24" pos:end="687:24">!</operator><call pos:start="687:25" pos:end="687:49"><name pos:start="687:25" pos:end="687:30">strcmp</name><argument_list pos:start="687:31" pos:end="687:49">(<argument pos:start="687:32" pos:end="687:40"><expr pos:start="687:32" pos:end="687:40"><name pos:start="687:32" pos:end="687:40"><name pos:start="687:32" pos:end="687:34">ctx</name><operator pos:start="687:35" pos:end="687:36">-&gt;</operator><name pos:start="687:37" pos:end="687:40">tier</name></name></expr></argument>, <argument pos:start="687:43" pos:end="687:48"><expr pos:start="687:43" pos:end="687:48"><literal type="string" pos:start="687:43" pos:end="687:48">"high"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="687:52" pos:end="691:13">{<block_content pos:start="689:17" pos:end="689:93">

                <expr_stmt pos:start="689:17" pos:end="689:93"><expr pos:start="689:17" pos:end="689:92"><name pos:start="689:17" pos:end="689:68"><name pos:start="689:17" pos:end="689:19">ctx</name><operator pos:start="689:20" pos:end="689:21">-&gt;</operator><name pos:start="689:22" pos:end="689:34">encode_config</name><operator pos:start="689:35" pos:end="689:35">.</operator><name pos:start="689:36" pos:end="689:52">encodeCodecConfig</name><operator pos:start="689:53" pos:end="689:53">.</operator><name pos:start="689:54" pos:end="689:63">hevcConfig</name><operator pos:start="689:64" pos:end="689:64">.</operator><name pos:start="689:65" pos:end="689:68">tier</name></name> <operator pos:start="689:70" pos:end="689:70">=</operator> <name pos:start="689:72" pos:end="689:92">NV_ENC_TIER_HEVC_HIGH</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="691:15" pos:end="699:13">else <block pos:start="691:20" pos:end="699:13">{<block_content pos:start="693:17" pos:end="697:27">

                <expr_stmt pos:start="693:17" pos:end="693:112"><expr pos:start="693:17" pos:end="693:111"><call pos:start="693:17" pos:end="693:111"><name pos:start="693:17" pos:end="693:22">av_log</name><argument_list pos:start="693:23" pos:end="693:111">(<argument pos:start="693:24" pos:end="693:28"><expr pos:start="693:24" pos:end="693:28"><name pos:start="693:24" pos:end="693:28">avctx</name></expr></argument>, <argument pos:start="693:31" pos:end="693:42"><expr pos:start="693:31" pos:end="693:42"><name pos:start="693:31" pos:end="693:42">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="693:45" pos:end="693:99"><expr pos:start="693:45" pos:end="693:99"><literal type="string" pos:start="693:45" pos:end="693:99">"Tier \"%s\" is unknown! Supported tiers: main, high\n"</literal></expr></argument>, <argument pos:start="693:102" pos:end="693:110"><expr pos:start="693:102" pos:end="693:110"><name pos:start="693:102" pos:end="693:110"><name pos:start="693:102" pos:end="693:104">ctx</name><operator pos:start="693:105" pos:end="693:106">-&gt;</operator><name pos:start="693:107" pos:end="693:110">tier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="695:17" pos:end="695:38"><expr pos:start="695:17" pos:end="695:37"><name pos:start="695:17" pos:end="695:19">res</name> <operator pos:start="695:21" pos:end="695:21">=</operator> <call pos:start="695:23" pos:end="695:37"><name pos:start="695:23" pos:end="695:29">AVERROR</name><argument_list pos:start="695:30" pos:end="695:37">(<argument pos:start="695:31" pos:end="695:36"><expr pos:start="695:31" pos:end="695:36"><name pos:start="695:31" pos:end="695:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="697:17" pos:end="697:27">goto <name pos:start="697:22" pos:end="697:26">error</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <break pos:start="705:9" pos:end="705:14">break;</break>

    <comment type="block" pos:start="707:5" pos:end="707:69">/* Earlier switch/case will return if unknown codec is passed. */</comment>

    </block_content>}</block></switch>



    <expr_stmt pos:start="713:5" pos:end="713:90"><expr pos:start="713:5" pos:end="713:89"><name pos:start="713:5" pos:end="713:13">nv_status</name> <operator pos:start="713:15" pos:end="713:15">=</operator> <call pos:start="713:17" pos:end="713:89"><name pos:start="713:17" pos:end="713:47"><name pos:start="713:17" pos:end="713:23">p_nvenc</name><operator pos:start="713:24" pos:end="713:25">-&gt;</operator><name pos:start="713:26" pos:end="713:47">nvEncInitializeEncoder</name></name><argument_list pos:start="713:48" pos:end="713:89">(<argument pos:start="713:49" pos:end="713:62"><expr pos:start="713:49" pos:end="713:62"><name pos:start="713:49" pos:end="713:62"><name pos:start="713:49" pos:end="713:51">ctx</name><operator pos:start="713:52" pos:end="713:53">-&gt;</operator><name pos:start="713:54" pos:end="713:62">nvencoder</name></name></expr></argument>, <argument pos:start="713:65" pos:end="713:88"><expr pos:start="713:65" pos:end="713:88"><operator pos:start="713:65" pos:end="713:65">&amp;</operator><name pos:start="713:66" pos:end="713:88"><name pos:start="713:66" pos:end="713:68">ctx</name><operator pos:start="713:69" pos:end="713:70">-&gt;</operator><name pos:start="713:71" pos:end="713:88">init_encode_params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="715:5" pos:end="723:5"><if pos:start="715:5" pos:end="723:5">if <condition pos:start="715:8" pos:end="715:36">(<expr pos:start="715:9" pos:end="715:35"><name pos:start="715:9" pos:end="715:17">nv_status</name> <operator pos:start="715:19" pos:end="715:20">!=</operator> <name pos:start="715:22" pos:end="715:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="715:38" pos:end="723:5">{<block_content pos:start="717:9" pos:end="721:19">

        <expr_stmt pos:start="717:9" pos:end="717:88"><expr pos:start="717:9" pos:end="717:87"><call pos:start="717:9" pos:end="717:87"><name pos:start="717:9" pos:end="717:14">av_log</name><argument_list pos:start="717:15" pos:end="717:87">(<argument pos:start="717:16" pos:end="717:20"><expr pos:start="717:16" pos:end="717:20"><name pos:start="717:16" pos:end="717:20">avctx</name></expr></argument>, <argument pos:start="717:23" pos:end="717:34"><expr pos:start="717:23" pos:end="717:34"><name pos:start="717:23" pos:end="717:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="717:37" pos:end="717:70"><expr pos:start="717:37" pos:end="717:70"><literal type="string" pos:start="717:37" pos:end="717:70">"InitializeEncoder failed: 0x%x\n"</literal></expr></argument>, <argument pos:start="717:73" pos:end="717:86"><expr pos:start="717:73" pos:end="717:86"><operator pos:start="717:73" pos:end="717:73">(</operator><name pos:start="717:74" pos:end="717:76">int</name><operator pos:start="717:77" pos:end="717:77">)</operator><name pos:start="717:78" pos:end="717:86">nv_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="719:9" pos:end="719:31"><expr pos:start="719:9" pos:end="719:30"><name pos:start="719:9" pos:end="719:11">res</name> <operator pos:start="719:13" pos:end="719:13">=</operator> <name pos:start="719:15" pos:end="719:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="721:9" pos:end="721:19">goto <name pos:start="721:14" pos:end="721:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="727:5" pos:end="727:91"><expr pos:start="727:5" pos:end="727:90"><name pos:start="727:5" pos:end="727:23"><name pos:start="727:5" pos:end="727:7">ctx</name><operator pos:start="727:8" pos:end="727:9">-&gt;</operator><name pos:start="727:10" pos:end="727:23">input_surfaces</name></name> <operator pos:start="727:25" pos:end="727:25">=</operator> <call pos:start="727:27" pos:end="727:90"><name pos:start="727:27" pos:end="727:35">av_malloc</name><argument_list pos:start="727:36" pos:end="727:90">(<argument pos:start="727:37" pos:end="727:89"><expr pos:start="727:37" pos:end="727:89"><name pos:start="727:37" pos:end="727:58"><name pos:start="727:37" pos:end="727:39">ctx</name><operator pos:start="727:40" pos:end="727:41">-&gt;</operator><name pos:start="727:42" pos:end="727:58">max_surface_count</name></name> <operator pos:start="727:60" pos:end="727:60">*</operator> <sizeof pos:start="727:62" pos:end="727:89">sizeof<argument_list pos:start="727:68" pos:end="727:89">(<argument pos:start="727:69" pos:end="727:88"><expr pos:start="727:69" pos:end="727:88"><operator pos:start="727:69" pos:end="727:69">*</operator><name pos:start="727:70" pos:end="727:88"><name pos:start="727:70" pos:end="727:72">ctx</name><operator pos:start="727:73" pos:end="727:74">-&gt;</operator><name pos:start="727:75" pos:end="727:88">input_surfaces</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="731:5" pos:end="737:5"><if pos:start="731:5" pos:end="737:5">if <condition pos:start="731:8" pos:end="731:29">(<expr pos:start="731:9" pos:end="731:28"><operator pos:start="731:9" pos:end="731:9">!</operator><name pos:start="731:10" pos:end="731:28"><name pos:start="731:10" pos:end="731:12">ctx</name><operator pos:start="731:13" pos:end="731:14">-&gt;</operator><name pos:start="731:15" pos:end="731:28">input_surfaces</name></name></expr>)</condition> <block pos:start="731:31" pos:end="737:5">{<block_content pos:start="733:9" pos:end="735:19">

        <expr_stmt pos:start="733:9" pos:end="733:30"><expr pos:start="733:9" pos:end="733:29"><name pos:start="733:9" pos:end="733:11">res</name> <operator pos:start="733:13" pos:end="733:13">=</operator> <call pos:start="733:15" pos:end="733:29"><name pos:start="733:15" pos:end="733:21">AVERROR</name><argument_list pos:start="733:22" pos:end="733:29">(<argument pos:start="733:23" pos:end="733:28"><expr pos:start="733:23" pos:end="733:28"><name pos:start="733:23" pos:end="733:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="735:9" pos:end="735:19">goto <name pos:start="735:14" pos:end="735:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="741:5" pos:end="741:93"><expr pos:start="741:5" pos:end="741:92"><name pos:start="741:5" pos:end="741:24"><name pos:start="741:5" pos:end="741:7">ctx</name><operator pos:start="741:8" pos:end="741:9">-&gt;</operator><name pos:start="741:10" pos:end="741:24">output_surfaces</name></name> <operator pos:start="741:26" pos:end="741:26">=</operator> <call pos:start="741:28" pos:end="741:92"><name pos:start="741:28" pos:end="741:36">av_malloc</name><argument_list pos:start="741:37" pos:end="741:92">(<argument pos:start="741:38" pos:end="741:91"><expr pos:start="741:38" pos:end="741:91"><name pos:start="741:38" pos:end="741:59"><name pos:start="741:38" pos:end="741:40">ctx</name><operator pos:start="741:41" pos:end="741:42">-&gt;</operator><name pos:start="741:43" pos:end="741:59">max_surface_count</name></name> <operator pos:start="741:61" pos:end="741:61">*</operator> <sizeof pos:start="741:63" pos:end="741:91">sizeof<argument_list pos:start="741:69" pos:end="741:91">(<argument pos:start="741:70" pos:end="741:90"><expr pos:start="741:70" pos:end="741:90"><operator pos:start="741:70" pos:end="741:70">*</operator><name pos:start="741:71" pos:end="741:90"><name pos:start="741:71" pos:end="741:73">ctx</name><operator pos:start="741:74" pos:end="741:75">-&gt;</operator><name pos:start="741:76" pos:end="741:90">output_surfaces</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="745:5" pos:end="751:5"><if pos:start="745:5" pos:end="751:5">if <condition pos:start="745:8" pos:end="745:30">(<expr pos:start="745:9" pos:end="745:29"><operator pos:start="745:9" pos:end="745:9">!</operator><name pos:start="745:10" pos:end="745:29"><name pos:start="745:10" pos:end="745:12">ctx</name><operator pos:start="745:13" pos:end="745:14">-&gt;</operator><name pos:start="745:15" pos:end="745:29">output_surfaces</name></name></expr>)</condition> <block pos:start="745:32" pos:end="751:5">{<block_content pos:start="747:9" pos:end="749:19">

        <expr_stmt pos:start="747:9" pos:end="747:30"><expr pos:start="747:9" pos:end="747:29"><name pos:start="747:9" pos:end="747:11">res</name> <operator pos:start="747:13" pos:end="747:13">=</operator> <call pos:start="747:15" pos:end="747:29"><name pos:start="747:15" pos:end="747:21">AVERROR</name><argument_list pos:start="747:22" pos:end="747:29">(<argument pos:start="747:23" pos:end="747:28"><expr pos:start="747:23" pos:end="747:28"><name pos:start="747:23" pos:end="747:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="749:9" pos:end="749:19">goto <name pos:start="749:14" pos:end="749:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="755:5" pos:end="873:5">for <control pos:start="755:9" pos:end="755:81">(<init pos:start="755:10" pos:end="755:26"><expr pos:start="755:10" pos:end="755:25"><name pos:start="755:10" pos:end="755:21">surfaceCount</name> <operator pos:start="755:23" pos:end="755:23">=</operator> <literal type="number" pos:start="755:25" pos:end="755:25">0</literal></expr>;</init> <condition pos:start="755:28" pos:end="755:65"><expr pos:start="755:28" pos:end="755:64"><name pos:start="755:28" pos:end="755:39">surfaceCount</name> <operator pos:start="755:41" pos:end="755:41">&lt;</operator> <name pos:start="755:43" pos:end="755:64"><name pos:start="755:43" pos:end="755:45">ctx</name><operator pos:start="755:46" pos:end="755:47">-&gt;</operator><name pos:start="755:48" pos:end="755:64">max_surface_count</name></name></expr>;</condition> <incr pos:start="755:67" pos:end="755:80"><expr pos:start="755:67" pos:end="755:80"><operator pos:start="755:67" pos:end="755:68">++</operator><name pos:start="755:69" pos:end="755:80">surfaceCount</name></expr></incr>)</control> <block pos:start="755:83" pos:end="873:5">{<block_content pos:start="757:9" pos:end="871:52">

        <decl_stmt pos:start="757:9" pos:end="757:53"><decl pos:start="757:9" pos:end="757:52"><type pos:start="757:9" pos:end="757:34"><name pos:start="757:9" pos:end="757:34">NV_ENC_CREATE_INPUT_BUFFER</name></type> <name pos:start="757:36" pos:end="757:44">allocSurf</name> <init pos:start="757:46" pos:end="757:52">= <expr pos:start="757:48" pos:end="757:52"><block pos:start="757:48" pos:end="757:52">{ <expr pos:start="757:50" pos:end="757:50"><literal type="number" pos:start="757:50" pos:end="757:50">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="759:9" pos:end="759:56"><decl pos:start="759:9" pos:end="759:55"><type pos:start="759:9" pos:end="759:38"><name pos:start="759:9" pos:end="759:38">NV_ENC_CREATE_BITSTREAM_BUFFER</name></type> <name pos:start="759:40" pos:end="759:47">allocOut</name> <init pos:start="759:49" pos:end="759:55">= <expr pos:start="759:51" pos:end="759:55"><block pos:start="759:51" pos:end="759:55">{ <expr pos:start="759:53" pos:end="759:53"><literal type="number" pos:start="759:53" pos:end="759:53">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="761:9" pos:end="761:59"><expr pos:start="761:9" pos:end="761:58"><name pos:start="761:9" pos:end="761:25"><name pos:start="761:9" pos:end="761:17">allocSurf</name><operator pos:start="761:18" pos:end="761:18">.</operator><name pos:start="761:19" pos:end="761:25">version</name></name> <operator pos:start="761:27" pos:end="761:27">=</operator> <name pos:start="761:29" pos:end="761:58">NV_ENC_CREATE_INPUT_BUFFER_VER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="763:9" pos:end="763:62"><expr pos:start="763:9" pos:end="763:61"><name pos:start="763:9" pos:end="763:24"><name pos:start="763:9" pos:end="763:16">allocOut</name><operator pos:start="763:17" pos:end="763:17">.</operator><name pos:start="763:18" pos:end="763:24">version</name></name> <operator pos:start="763:26" pos:end="763:26">=</operator> <name pos:start="763:28" pos:end="763:61">NV_ENC_CREATE_BITSTREAM_BUFFER_VER</name></expr>;</expr_stmt>



        <expr_stmt pos:start="767:9" pos:end="767:52"><expr pos:start="767:9" pos:end="767:51"><name pos:start="767:9" pos:end="767:23"><name pos:start="767:9" pos:end="767:17">allocSurf</name><operator pos:start="767:18" pos:end="767:18">.</operator><name pos:start="767:19" pos:end="767:23">width</name></name> <operator pos:start="767:25" pos:end="767:25">=</operator> <operator pos:start="767:27" pos:end="767:27">(</operator><name pos:start="767:28" pos:end="767:39"><name pos:start="767:28" pos:end="767:32">avctx</name><operator pos:start="767:33" pos:end="767:34">-&gt;</operator><name pos:start="767:35" pos:end="767:39">width</name></name> <operator pos:start="767:41" pos:end="767:41">+</operator> <literal type="number" pos:start="767:43" pos:end="767:44">31</literal><operator pos:start="767:45" pos:end="767:45">)</operator> <operator pos:start="767:47" pos:end="767:47">&amp;</operator> <operator pos:start="767:49" pos:end="767:49">~</operator><literal type="number" pos:start="767:50" pos:end="767:51">31</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="769:9" pos:end="769:54"><expr pos:start="769:9" pos:end="769:53"><name pos:start="769:9" pos:end="769:24"><name pos:start="769:9" pos:end="769:17">allocSurf</name><operator pos:start="769:18" pos:end="769:18">.</operator><name pos:start="769:19" pos:end="769:24">height</name></name> <operator pos:start="769:26" pos:end="769:26">=</operator> <operator pos:start="769:28" pos:end="769:28">(</operator><name pos:start="769:29" pos:end="769:41"><name pos:start="769:29" pos:end="769:33">avctx</name><operator pos:start="769:34" pos:end="769:35">-&gt;</operator><name pos:start="769:36" pos:end="769:41">height</name></name> <operator pos:start="769:43" pos:end="769:43">+</operator> <literal type="number" pos:start="769:45" pos:end="769:46">31</literal><operator pos:start="769:47" pos:end="769:47">)</operator> <operator pos:start="769:49" pos:end="769:49">&amp;</operator> <operator pos:start="769:51" pos:end="769:51">~</operator><literal type="number" pos:start="769:52" pos:end="769:53">31</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="773:9" pos:end="773:64"><expr pos:start="773:9" pos:end="773:63"><name pos:start="773:9" pos:end="773:28"><name pos:start="773:9" pos:end="773:17">allocSurf</name><operator pos:start="773:18" pos:end="773:18">.</operator><name pos:start="773:19" pos:end="773:28">memoryHeap</name></name> <operator pos:start="773:30" pos:end="773:30">=</operator> <name pos:start="773:32" pos:end="773:63">NV_ENC_MEMORY_HEAP_SYSMEM_CACHED</name></expr>;</expr_stmt>



        <switch pos:start="777:9" pos:end="811:9">switch <condition pos:start="777:16" pos:end="777:31">(<expr pos:start="777:17" pos:end="777:30"><name pos:start="777:17" pos:end="777:30"><name pos:start="777:17" pos:end="777:21">avctx</name><operator pos:start="777:22" pos:end="777:23">-&gt;</operator><name pos:start="777:24" pos:end="777:30">pix_fmt</name></name></expr>)</condition> <block pos:start="777:33" pos:end="811:9">{<block_content pos:start="779:9" pos:end="809:23">

        <case pos:start="779:9" pos:end="779:32">case <expr pos:start="779:14" pos:end="779:31"><name pos:start="779:14" pos:end="779:31">AV_PIX_FMT_YUV420P</name></expr>:</case>

            <expr_stmt pos:start="781:13" pos:end="781:63"><expr pos:start="781:13" pos:end="781:62"><name pos:start="781:13" pos:end="781:31"><name pos:start="781:13" pos:end="781:21">allocSurf</name><operator pos:start="781:22" pos:end="781:22">.</operator><name pos:start="781:23" pos:end="781:31">bufferFmt</name></name> <operator pos:start="781:33" pos:end="781:33">=</operator> <name pos:start="781:35" pos:end="781:62">NV_ENC_BUFFER_FORMAT_YV12_PL</name></expr>;</expr_stmt>

            <break pos:start="783:13" pos:end="783:18">break;</break>



        <case pos:start="787:9" pos:end="787:29">case <expr pos:start="787:14" pos:end="787:28"><name pos:start="787:14" pos:end="787:28">AV_PIX_FMT_NV12</name></expr>:</case>

            <expr_stmt pos:start="789:13" pos:end="789:63"><expr pos:start="789:13" pos:end="789:62"><name pos:start="789:13" pos:end="789:31"><name pos:start="789:13" pos:end="789:21">allocSurf</name><operator pos:start="789:22" pos:end="789:22">.</operator><name pos:start="789:23" pos:end="789:31">bufferFmt</name></name> <operator pos:start="789:33" pos:end="789:33">=</operator> <name pos:start="789:35" pos:end="789:62">NV_ENC_BUFFER_FORMAT_NV12_PL</name></expr>;</expr_stmt>

            <break pos:start="791:13" pos:end="791:18">break;</break>



        <case pos:start="795:9" pos:end="795:32">case <expr pos:start="795:14" pos:end="795:31"><name pos:start="795:14" pos:end="795:31">AV_PIX_FMT_YUV444P</name></expr>:</case>

            <expr_stmt pos:start="797:13" pos:end="797:65"><expr pos:start="797:13" pos:end="797:64"><name pos:start="797:13" pos:end="797:31"><name pos:start="797:13" pos:end="797:21">allocSurf</name><operator pos:start="797:22" pos:end="797:22">.</operator><name pos:start="797:23" pos:end="797:31">bufferFmt</name></name> <operator pos:start="797:33" pos:end="797:33">=</operator> <name pos:start="797:35" pos:end="797:64">NV_ENC_BUFFER_FORMAT_YUV444_PL</name></expr>;</expr_stmt>

            <break pos:start="799:13" pos:end="799:18">break;</break>



        <default pos:start="803:9" pos:end="803:16">default:</default>

            <expr_stmt pos:start="805:13" pos:end="805:72"><expr pos:start="805:13" pos:end="805:71"><call pos:start="805:13" pos:end="805:71"><name pos:start="805:13" pos:end="805:18">av_log</name><argument_list pos:start="805:19" pos:end="805:71">(<argument pos:start="805:20" pos:end="805:24"><expr pos:start="805:20" pos:end="805:24"><name pos:start="805:20" pos:end="805:24">avctx</name></expr></argument>, <argument pos:start="805:27" pos:end="805:38"><expr pos:start="805:27" pos:end="805:38"><name pos:start="805:27" pos:end="805:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="805:41" pos:end="805:70"><expr pos:start="805:41" pos:end="805:70"><literal type="string" pos:start="805:41" pos:end="805:70">"Invalid input pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="807:13" pos:end="807:34"><expr pos:start="807:13" pos:end="807:33"><name pos:start="807:13" pos:end="807:15">res</name> <operator pos:start="807:17" pos:end="807:17">=</operator> <call pos:start="807:19" pos:end="807:33"><name pos:start="807:19" pos:end="807:25">AVERROR</name><argument_list pos:start="807:26" pos:end="807:33">(<argument pos:start="807:27" pos:end="807:32"><expr pos:start="807:27" pos:end="807:32"><name pos:start="807:27" pos:end="807:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="809:13" pos:end="809:23">goto <name pos:start="809:18" pos:end="809:22">error</name>;</goto>

        </block_content>}</block></switch>



        <expr_stmt pos:start="815:9" pos:end="815:80"><expr pos:start="815:9" pos:end="815:79"><name pos:start="815:9" pos:end="815:17">nv_status</name> <operator pos:start="815:19" pos:end="815:19">=</operator> <call pos:start="815:21" pos:end="815:79"><name pos:start="815:21" pos:end="815:51"><name pos:start="815:21" pos:end="815:27">p_nvenc</name><operator pos:start="815:28" pos:end="815:29">-&gt;</operator><name pos:start="815:30" pos:end="815:51">nvEncCreateInputBuffer</name></name><argument_list pos:start="815:52" pos:end="815:79">(<argument pos:start="815:53" pos:end="815:66"><expr pos:start="815:53" pos:end="815:66"><name pos:start="815:53" pos:end="815:66"><name pos:start="815:53" pos:end="815:55">ctx</name><operator pos:start="815:56" pos:end="815:57">-&gt;</operator><name pos:start="815:58" pos:end="815:66">nvencoder</name></name></expr></argument>, <argument pos:start="815:69" pos:end="815:78"><expr pos:start="815:69" pos:end="815:78"><operator pos:start="815:69" pos:end="815:69">&amp;</operator><name pos:start="815:70" pos:end="815:78">allocSurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="817:9" pos:end="825:9"><if pos:start="817:9" pos:end="825:9">if <condition pos:start="817:12" pos:end="817:40">(<expr pos:start="817:13" pos:end="817:39"><name pos:start="817:13" pos:end="817:21">nv_status</name> <operator pos:start="817:23" pos:end="817:24">!=</operator> <name pos:start="817:26" pos:end="817:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="817:42" pos:end="825:9">{<block_content pos:start="819:13" pos:end="823:23">

            <expr_stmt pos:start="819:13" pos:end="819:70"><expr pos:start="819:13" pos:end="819:69"><call pos:start="819:13" pos:end="819:69"><name pos:start="819:13" pos:end="819:18">av_log</name><argument_list pos:start="819:19" pos:end="819:69">(<argument pos:start="819:20" pos:end="819:24"><expr pos:start="819:20" pos:end="819:24"><name pos:start="819:20" pos:end="819:24">avctx</name></expr></argument>, <argument pos:start="819:27" pos:end="819:38"><expr pos:start="819:27" pos:end="819:38"><name pos:start="819:27" pos:end="819:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="819:41" pos:end="819:68"><expr pos:start="819:41" pos:end="819:68"><literal type="string" pos:start="819:41" pos:end="819:68">"CreateInputBuffer failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:35"><expr pos:start="821:13" pos:end="821:34"><name pos:start="821:13" pos:end="821:15">res</name> <operator pos:start="821:17" pos:end="821:17">=</operator> <name pos:start="821:19" pos:end="821:34">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

            <goto pos:start="823:13" pos:end="823:23">goto <name pos:start="823:18" pos:end="823:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="829:9" pos:end="829:56"><expr pos:start="829:9" pos:end="829:55"><name pos:start="829:9" pos:end="829:41"><name pos:start="829:9" pos:end="829:11">ctx</name><operator pos:start="829:12" pos:end="829:13">-&gt;</operator><name pos:start="829:14" pos:end="829:27">input_surfaces</name><index pos:start="829:28" pos:end="829:41">[<expr pos:start="829:29" pos:end="829:40"><name pos:start="829:29" pos:end="829:40">surfaceCount</name></expr>]</index></name><operator pos:start="829:42" pos:end="829:42">.</operator><name pos:start="829:43" pos:end="829:51">lockCount</name> <operator pos:start="829:53" pos:end="829:53">=</operator> <literal type="number" pos:start="829:55" pos:end="829:55">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:80"><expr pos:start="831:9" pos:end="831:79"><name pos:start="831:9" pos:end="831:41"><name pos:start="831:9" pos:end="831:11">ctx</name><operator pos:start="831:12" pos:end="831:13">-&gt;</operator><name pos:start="831:14" pos:end="831:27">input_surfaces</name><index pos:start="831:28" pos:end="831:41">[<expr pos:start="831:29" pos:end="831:40"><name pos:start="831:29" pos:end="831:40">surfaceCount</name></expr>]</index></name><operator pos:start="831:42" pos:end="831:42">.</operator><name pos:start="831:43" pos:end="831:55">input_surface</name> <operator pos:start="831:57" pos:end="831:57">=</operator> <name pos:start="831:59" pos:end="831:79"><name pos:start="831:59" pos:end="831:67">allocSurf</name><operator pos:start="831:68" pos:end="831:68">.</operator><name pos:start="831:69" pos:end="831:79">inputBuffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="833:9" pos:end="833:71"><expr pos:start="833:9" pos:end="833:70"><name pos:start="833:9" pos:end="833:41"><name pos:start="833:9" pos:end="833:11">ctx</name><operator pos:start="833:12" pos:end="833:13">-&gt;</operator><name pos:start="833:14" pos:end="833:27">input_surfaces</name><index pos:start="833:28" pos:end="833:41">[<expr pos:start="833:29" pos:end="833:40"><name pos:start="833:29" pos:end="833:40">surfaceCount</name></expr>]</index></name><operator pos:start="833:42" pos:end="833:42">.</operator><name pos:start="833:43" pos:end="833:48">format</name> <operator pos:start="833:50" pos:end="833:50">=</operator> <name pos:start="833:52" pos:end="833:70"><name pos:start="833:52" pos:end="833:60">allocSurf</name><operator pos:start="833:61" pos:end="833:61">.</operator><name pos:start="833:62" pos:end="833:70">bufferFmt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="835:9" pos:end="835:66"><expr pos:start="835:9" pos:end="835:65"><name pos:start="835:9" pos:end="835:41"><name pos:start="835:9" pos:end="835:11">ctx</name><operator pos:start="835:12" pos:end="835:13">-&gt;</operator><name pos:start="835:14" pos:end="835:27">input_surfaces</name><index pos:start="835:28" pos:end="835:41">[<expr pos:start="835:29" pos:end="835:40"><name pos:start="835:29" pos:end="835:40">surfaceCount</name></expr>]</index></name><operator pos:start="835:42" pos:end="835:42">.</operator><name pos:start="835:43" pos:end="835:47">width</name> <operator pos:start="835:49" pos:end="835:49">=</operator> <name pos:start="835:51" pos:end="835:65"><name pos:start="835:51" pos:end="835:59">allocSurf</name><operator pos:start="835:60" pos:end="835:60">.</operator><name pos:start="835:61" pos:end="835:65">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="837:9" pos:end="837:68"><expr pos:start="837:9" pos:end="837:67"><name pos:start="837:9" pos:end="837:41"><name pos:start="837:9" pos:end="837:11">ctx</name><operator pos:start="837:12" pos:end="837:13">-&gt;</operator><name pos:start="837:14" pos:end="837:27">input_surfaces</name><index pos:start="837:28" pos:end="837:41">[<expr pos:start="837:29" pos:end="837:40"><name pos:start="837:29" pos:end="837:40">surfaceCount</name></expr>]</index></name><operator pos:start="837:42" pos:end="837:42">.</operator><name pos:start="837:43" pos:end="837:48">height</name> <operator pos:start="837:50" pos:end="837:50">=</operator> <name pos:start="837:52" pos:end="837:67"><name pos:start="837:52" pos:end="837:60">allocSurf</name><operator pos:start="837:61" pos:end="837:61">.</operator><name pos:start="837:62" pos:end="837:67">height</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="841:9" pos:end="841:115">/* 1MB is large enough to hold most output frames. NVENC increases this automaticaly if it's not enough. */</comment>

        <expr_stmt pos:start="843:9" pos:end="843:36"><expr pos:start="843:9" pos:end="843:35"><name pos:start="843:9" pos:end="843:21"><name pos:start="843:9" pos:end="843:16">allocOut</name><operator pos:start="843:17" pos:end="843:17">.</operator><name pos:start="843:18" pos:end="843:21">size</name></name> <operator pos:start="843:23" pos:end="843:23">=</operator> <literal type="number" pos:start="843:25" pos:end="843:28">1024</literal> <operator pos:start="843:30" pos:end="843:30">*</operator> <literal type="number" pos:start="843:32" pos:end="843:35">1024</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="847:9" pos:end="847:63"><expr pos:start="847:9" pos:end="847:62"><name pos:start="847:9" pos:end="847:27"><name pos:start="847:9" pos:end="847:16">allocOut</name><operator pos:start="847:17" pos:end="847:17">.</operator><name pos:start="847:18" pos:end="847:27">memoryHeap</name></name> <operator pos:start="847:29" pos:end="847:29">=</operator> <name pos:start="847:31" pos:end="847:62">NV_ENC_MEMORY_HEAP_SYSMEM_CACHED</name></expr>;</expr_stmt>



        <expr_stmt pos:start="851:9" pos:end="851:83"><expr pos:start="851:9" pos:end="851:82"><name pos:start="851:9" pos:end="851:17">nv_status</name> <operator pos:start="851:19" pos:end="851:19">=</operator> <call pos:start="851:21" pos:end="851:82"><name pos:start="851:21" pos:end="851:55"><name pos:start="851:21" pos:end="851:27">p_nvenc</name><operator pos:start="851:28" pos:end="851:29">-&gt;</operator><name pos:start="851:30" pos:end="851:55">nvEncCreateBitstreamBuffer</name></name><argument_list pos:start="851:56" pos:end="851:82">(<argument pos:start="851:57" pos:end="851:70"><expr pos:start="851:57" pos:end="851:70"><name pos:start="851:57" pos:end="851:70"><name pos:start="851:57" pos:end="851:59">ctx</name><operator pos:start="851:60" pos:end="851:61">-&gt;</operator><name pos:start="851:62" pos:end="851:70">nvencoder</name></name></expr></argument>, <argument pos:start="851:73" pos:end="851:81"><expr pos:start="851:73" pos:end="851:81"><operator pos:start="851:73" pos:end="851:73">&amp;</operator><name pos:start="851:74" pos:end="851:81">allocOut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="853:9" pos:end="863:9"><if pos:start="853:9" pos:end="863:9">if <condition pos:start="853:12" pos:end="853:40">(<expr pos:start="853:13" pos:end="853:39"><name pos:start="853:13" pos:end="853:21">nv_status</name> <operator pos:start="853:23" pos:end="853:24">!=</operator> <name pos:start="853:26" pos:end="853:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="853:42" pos:end="863:9">{<block_content pos:start="855:13" pos:end="861:23">

            <expr_stmt pos:start="855:13" pos:end="855:74"><expr pos:start="855:13" pos:end="855:73"><call pos:start="855:13" pos:end="855:73"><name pos:start="855:13" pos:end="855:18">av_log</name><argument_list pos:start="855:19" pos:end="855:73">(<argument pos:start="855:20" pos:end="855:24"><expr pos:start="855:20" pos:end="855:24"><name pos:start="855:20" pos:end="855:24">avctx</name></expr></argument>, <argument pos:start="855:27" pos:end="855:38"><expr pos:start="855:27" pos:end="855:38"><name pos:start="855:27" pos:end="855:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="855:41" pos:end="855:72"><expr pos:start="855:41" pos:end="855:72"><literal type="string" pos:start="855:41" pos:end="855:72">"CreateBitstreamBuffer failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="857:13" pos:end="857:71"><expr pos:start="857:13" pos:end="857:70"><name pos:start="857:13" pos:end="857:48"><name pos:start="857:13" pos:end="857:15">ctx</name><operator pos:start="857:16" pos:end="857:17">-&gt;</operator><name pos:start="857:18" pos:end="857:32">output_surfaces</name><index pos:start="857:33" pos:end="857:48">[<expr pos:start="857:34" pos:end="857:47"><name pos:start="857:34" pos:end="857:45">surfaceCount</name><operator pos:start="857:46" pos:end="857:47">++</operator></expr>]</index></name><operator pos:start="857:49" pos:end="857:49">.</operator><name pos:start="857:50" pos:end="857:63">output_surface</name> <operator pos:start="857:65" pos:end="857:65">=</operator> <name pos:start="857:67" pos:end="857:70">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="859:13" pos:end="859:35"><expr pos:start="859:13" pos:end="859:34"><name pos:start="859:13" pos:end="859:15">res</name> <operator pos:start="859:17" pos:end="859:17">=</operator> <name pos:start="859:19" pos:end="859:34">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

            <goto pos:start="861:13" pos:end="861:23">goto <name pos:start="861:18" pos:end="861:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="867:9" pos:end="867:85"><expr pos:start="867:9" pos:end="867:84"><name pos:start="867:9" pos:end="867:42"><name pos:start="867:9" pos:end="867:11">ctx</name><operator pos:start="867:12" pos:end="867:13">-&gt;</operator><name pos:start="867:14" pos:end="867:28">output_surfaces</name><index pos:start="867:29" pos:end="867:42">[<expr pos:start="867:30" pos:end="867:41"><name pos:start="867:30" pos:end="867:41">surfaceCount</name></expr>]</index></name><operator pos:start="867:43" pos:end="867:43">.</operator><name pos:start="867:44" pos:end="867:57">output_surface</name> <operator pos:start="867:59" pos:end="867:59">=</operator> <name pos:start="867:61" pos:end="867:84"><name pos:start="867:61" pos:end="867:68">allocOut</name><operator pos:start="867:69" pos:end="867:69">.</operator><name pos:start="867:70" pos:end="867:84">bitstreamBuffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="869:9" pos:end="869:64"><expr pos:start="869:9" pos:end="869:63"><name pos:start="869:9" pos:end="869:42"><name pos:start="869:9" pos:end="869:11">ctx</name><operator pos:start="869:12" pos:end="869:13">-&gt;</operator><name pos:start="869:14" pos:end="869:28">output_surfaces</name><index pos:start="869:29" pos:end="869:42">[<expr pos:start="869:30" pos:end="869:41"><name pos:start="869:30" pos:end="869:41">surfaceCount</name></expr>]</index></name><operator pos:start="869:43" pos:end="869:43">.</operator><name pos:start="869:44" pos:end="869:47">size</name> <operator pos:start="869:49" pos:end="869:49">=</operator> <name pos:start="869:51" pos:end="869:63"><name pos:start="869:51" pos:end="869:58">allocOut</name><operator pos:start="869:59" pos:end="869:59">.</operator><name pos:start="869:60" pos:end="869:63">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="871:9" pos:end="871:52"><expr pos:start="871:9" pos:end="871:51"><name pos:start="871:9" pos:end="871:42"><name pos:start="871:9" pos:end="871:11">ctx</name><operator pos:start="871:12" pos:end="871:13">-&gt;</operator><name pos:start="871:14" pos:end="871:28">output_surfaces</name><index pos:start="871:29" pos:end="871:42">[<expr pos:start="871:30" pos:end="871:41"><name pos:start="871:30" pos:end="871:41">surfaceCount</name></expr>]</index></name><operator pos:start="871:43" pos:end="871:43">.</operator><name pos:start="871:44" pos:end="871:47">busy</name> <operator pos:start="871:49" pos:end="871:49">=</operator> <literal type="number" pos:start="871:51" pos:end="871:51">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="877:5" pos:end="927:5"><if pos:start="877:5" pos:end="927:5">if <condition pos:start="877:8" pos:end="877:48">(<expr pos:start="877:9" pos:end="877:47"><name pos:start="877:9" pos:end="877:20"><name pos:start="877:9" pos:end="877:13">avctx</name><operator pos:start="877:14" pos:end="877:15">-&gt;</operator><name pos:start="877:16" pos:end="877:20">flags</name></name> <operator pos:start="877:22" pos:end="877:22">&amp;</operator> <name pos:start="877:24" pos:end="877:47">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="877:50" pos:end="927:5">{<block_content pos:start="879:9" pos:end="925:53">

        <decl_stmt pos:start="879:9" pos:end="879:29"><decl pos:start="879:9" pos:end="879:28"><type pos:start="879:9" pos:end="879:16"><name pos:start="879:9" pos:end="879:16">uint32_t</name></type> <name pos:start="879:18" pos:end="879:24">outSize</name> <init pos:start="879:26" pos:end="879:28">= <expr pos:start="879:28" pos:end="879:28"><literal type="number" pos:start="879:28" pos:end="879:28">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="881:9" pos:end="881:28"><decl pos:start="881:9" pos:end="881:27"><type pos:start="881:9" pos:end="881:12"><name pos:start="881:9" pos:end="881:12">char</name></type> <name pos:start="881:14" pos:end="881:27"><name pos:start="881:14" pos:end="881:22">tmpHeader</name><index pos:start="881:23" pos:end="881:27">[<expr pos:start="881:24" pos:end="881:26"><literal type="number" pos:start="881:24" pos:end="881:26">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="883:9" pos:end="883:54"><decl pos:start="883:9" pos:end="883:53"><type pos:start="883:9" pos:end="883:37"><name pos:start="883:9" pos:end="883:37">NV_ENC_SEQUENCE_PARAM_PAYLOAD</name></type> <name pos:start="883:39" pos:end="883:45">payload</name> <init pos:start="883:47" pos:end="883:53">= <expr pos:start="883:49" pos:end="883:53"><block pos:start="883:49" pos:end="883:53">{ <expr pos:start="883:51" pos:end="883:51"><literal type="number" pos:start="883:51" pos:end="883:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:60"><expr pos:start="885:9" pos:end="885:59"><name pos:start="885:9" pos:end="885:23"><name pos:start="885:9" pos:end="885:15">payload</name><operator pos:start="885:16" pos:end="885:16">.</operator><name pos:start="885:17" pos:end="885:23">version</name></name> <operator pos:start="885:25" pos:end="885:25">=</operator> <name pos:start="885:27" pos:end="885:59">NV_ENC_SEQUENCE_PARAM_PAYLOAD_VER</name></expr>;</expr_stmt>



        <expr_stmt pos:start="889:9" pos:end="889:41"><expr pos:start="889:9" pos:end="889:40"><name pos:start="889:9" pos:end="889:28"><name pos:start="889:9" pos:end="889:15">payload</name><operator pos:start="889:16" pos:end="889:16">.</operator><name pos:start="889:17" pos:end="889:28">spsppsBuffer</name></name> <operator pos:start="889:30" pos:end="889:30">=</operator> <name pos:start="889:32" pos:end="889:40">tmpHeader</name></expr>;</expr_stmt>

        <expr_stmt pos:start="891:9" pos:end="891:49"><expr pos:start="891:9" pos:end="891:48"><name pos:start="891:9" pos:end="891:28"><name pos:start="891:9" pos:end="891:15">payload</name><operator pos:start="891:16" pos:end="891:16">.</operator><name pos:start="891:17" pos:end="891:28">inBufferSize</name></name> <operator pos:start="891:30" pos:end="891:30">=</operator> <sizeof pos:start="891:32" pos:end="891:48">sizeof<argument_list pos:start="891:38" pos:end="891:48">(<argument pos:start="891:39" pos:end="891:47"><expr pos:start="891:39" pos:end="891:47"><name pos:start="891:39" pos:end="891:47">tmpHeader</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="893:9" pos:end="893:48"><expr pos:start="893:9" pos:end="893:47"><name pos:start="893:9" pos:end="893:36"><name pos:start="893:9" pos:end="893:15">payload</name><operator pos:start="893:16" pos:end="893:16">.</operator><name pos:start="893:17" pos:end="893:36">outSPSPPSPayloadSize</name></name> <operator pos:start="893:38" pos:end="893:38">=</operator> <operator pos:start="893:40" pos:end="893:40">&amp;</operator><name pos:start="893:41" pos:end="893:47">outSize</name></expr>;</expr_stmt>



        <expr_stmt pos:start="897:9" pos:end="897:78"><expr pos:start="897:9" pos:end="897:77"><name pos:start="897:9" pos:end="897:17">nv_status</name> <operator pos:start="897:19" pos:end="897:19">=</operator> <call pos:start="897:21" pos:end="897:77"><name pos:start="897:21" pos:end="897:51"><name pos:start="897:21" pos:end="897:27">p_nvenc</name><operator pos:start="897:28" pos:end="897:29">-&gt;</operator><name pos:start="897:30" pos:end="897:51">nvEncGetSequenceParams</name></name><argument_list pos:start="897:52" pos:end="897:77">(<argument pos:start="897:53" pos:end="897:66"><expr pos:start="897:53" pos:end="897:66"><name pos:start="897:53" pos:end="897:66"><name pos:start="897:53" pos:end="897:55">ctx</name><operator pos:start="897:56" pos:end="897:57">-&gt;</operator><name pos:start="897:58" pos:end="897:66">nvencoder</name></name></expr></argument>, <argument pos:start="897:69" pos:end="897:76"><expr pos:start="897:69" pos:end="897:76"><operator pos:start="897:69" pos:end="897:69">&amp;</operator><name pos:start="897:70" pos:end="897:76">payload</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="899:9" pos:end="905:9"><if pos:start="899:9" pos:end="905:9">if <condition pos:start="899:12" pos:end="899:40">(<expr pos:start="899:13" pos:end="899:39"><name pos:start="899:13" pos:end="899:21">nv_status</name> <operator pos:start="899:23" pos:end="899:24">!=</operator> <name pos:start="899:26" pos:end="899:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="899:42" pos:end="905:9">{<block_content pos:start="901:13" pos:end="903:23">

            <expr_stmt pos:start="901:13" pos:end="901:70"><expr pos:start="901:13" pos:end="901:69"><call pos:start="901:13" pos:end="901:69"><name pos:start="901:13" pos:end="901:18">av_log</name><argument_list pos:start="901:19" pos:end="901:69">(<argument pos:start="901:20" pos:end="901:24"><expr pos:start="901:20" pos:end="901:24"><name pos:start="901:20" pos:end="901:24">avctx</name></expr></argument>, <argument pos:start="901:27" pos:end="901:38"><expr pos:start="901:27" pos:end="901:38"><name pos:start="901:27" pos:end="901:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="901:41" pos:end="901:68"><expr pos:start="901:41" pos:end="901:68"><literal type="string" pos:start="901:41" pos:end="901:68">"GetSequenceParams failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="903:13" pos:end="903:23">goto <name pos:start="903:18" pos:end="903:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="909:9" pos:end="909:40"><expr pos:start="909:9" pos:end="909:39"><name pos:start="909:9" pos:end="909:29"><name pos:start="909:9" pos:end="909:13">avctx</name><operator pos:start="909:14" pos:end="909:15">-&gt;</operator><name pos:start="909:16" pos:end="909:29">extradata_size</name></name> <operator pos:start="909:31" pos:end="909:31">=</operator> <name pos:start="909:33" pos:end="909:39">outSize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="911:9" pos:end="911:78"><expr pos:start="911:9" pos:end="911:77"><name pos:start="911:9" pos:end="911:24"><name pos:start="911:9" pos:end="911:13">avctx</name><operator pos:start="911:14" pos:end="911:15">-&gt;</operator><name pos:start="911:16" pos:end="911:24">extradata</name></name> <operator pos:start="911:26" pos:end="911:26">=</operator> <call pos:start="911:28" pos:end="911:77"><name pos:start="911:28" pos:end="911:37">av_mallocz</name><argument_list pos:start="911:38" pos:end="911:77">(<argument pos:start="911:39" pos:end="911:76"><expr pos:start="911:39" pos:end="911:76"><name pos:start="911:39" pos:end="911:45">outSize</name> <operator pos:start="911:47" pos:end="911:47">+</operator> <name pos:start="911:49" pos:end="911:76">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="915:9" pos:end="921:9"><if pos:start="915:9" pos:end="921:9">if <condition pos:start="915:12" pos:end="915:30">(<expr pos:start="915:13" pos:end="915:29"><operator pos:start="915:13" pos:end="915:13">!</operator><name pos:start="915:14" pos:end="915:29"><name pos:start="915:14" pos:end="915:18">avctx</name><operator pos:start="915:19" pos:end="915:20">-&gt;</operator><name pos:start="915:21" pos:end="915:29">extradata</name></name></expr>)</condition> <block pos:start="915:32" pos:end="921:9">{<block_content pos:start="917:13" pos:end="919:23">

            <expr_stmt pos:start="917:13" pos:end="917:34"><expr pos:start="917:13" pos:end="917:33"><name pos:start="917:13" pos:end="917:15">res</name> <operator pos:start="917:17" pos:end="917:17">=</operator> <call pos:start="917:19" pos:end="917:33"><name pos:start="917:19" pos:end="917:25">AVERROR</name><argument_list pos:start="917:26" pos:end="917:33">(<argument pos:start="917:27" pos:end="917:32"><expr pos:start="917:27" pos:end="917:32"><name pos:start="917:27" pos:end="917:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="919:13" pos:end="919:23">goto <name pos:start="919:18" pos:end="919:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="925:9" pos:end="925:53"><expr pos:start="925:9" pos:end="925:52"><call pos:start="925:9" pos:end="925:52"><name pos:start="925:9" pos:end="925:14">memcpy</name><argument_list pos:start="925:15" pos:end="925:52">(<argument pos:start="925:16" pos:end="925:31"><expr pos:start="925:16" pos:end="925:31"><name pos:start="925:16" pos:end="925:31"><name pos:start="925:16" pos:end="925:20">avctx</name><operator pos:start="925:21" pos:end="925:22">-&gt;</operator><name pos:start="925:23" pos:end="925:31">extradata</name></name></expr></argument>, <argument pos:start="925:34" pos:end="925:42"><expr pos:start="925:34" pos:end="925:42"><name pos:start="925:34" pos:end="925:42">tmpHeader</name></expr></argument>, <argument pos:start="925:45" pos:end="925:51"><expr pos:start="925:45" pos:end="925:51"><name pos:start="925:45" pos:end="925:51">outSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="931:5" pos:end="933:32"><if pos:start="931:5" pos:end="933:32">if <condition pos:start="931:8" pos:end="931:46">(<expr pos:start="931:9" pos:end="931:45"><name pos:start="931:9" pos:end="931:41"><name pos:start="931:9" pos:end="931:11">ctx</name><operator pos:start="931:12" pos:end="931:13">-&gt;</operator><name pos:start="931:14" pos:end="931:26">encode_config</name><operator pos:start="931:27" pos:end="931:27">.</operator><name pos:start="931:28" pos:end="931:41">frameIntervalP</name></name> <operator pos:start="931:43" pos:end="931:43">&gt;</operator> <literal type="number" pos:start="931:45" pos:end="931:45">1</literal></expr>)</condition><block type="pseudo" pos:start="933:9" pos:end="933:32"><block_content pos:start="933:9" pos:end="933:32">

        <expr_stmt pos:start="933:9" pos:end="933:32"><expr pos:start="933:9" pos:end="933:31"><name pos:start="933:9" pos:end="933:27"><name pos:start="933:9" pos:end="933:13">avctx</name><operator pos:start="933:14" pos:end="933:15">-&gt;</operator><name pos:start="933:16" pos:end="933:27">has_b_frames</name></name> <operator pos:start="933:29" pos:end="933:29">=</operator> <literal type="number" pos:start="933:31" pos:end="933:31">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="937:5" pos:end="939:69"><if pos:start="937:5" pos:end="939:69">if <condition pos:start="937:8" pos:end="937:55">(<expr pos:start="937:9" pos:end="937:54"><name pos:start="937:9" pos:end="937:50"><name pos:start="937:9" pos:end="937:11">ctx</name><operator pos:start="937:12" pos:end="937:13">-&gt;</operator><name pos:start="937:14" pos:end="937:26">encode_config</name><operator pos:start="937:27" pos:end="937:27">.</operator><name pos:start="937:28" pos:end="937:35">rcParams</name><operator pos:start="937:36" pos:end="937:36">.</operator><name pos:start="937:37" pos:end="937:50">averageBitRate</name></name> <operator pos:start="937:52" pos:end="937:52">&gt;</operator> <literal type="number" pos:start="937:54" pos:end="937:54">0</literal></expr>)</condition><block type="pseudo" pos:start="939:9" pos:end="939:69"><block_content pos:start="939:9" pos:end="939:69">

        <expr_stmt pos:start="939:9" pos:end="939:69"><expr pos:start="939:9" pos:end="939:68"><name pos:start="939:9" pos:end="939:23"><name pos:start="939:9" pos:end="939:13">avctx</name><operator pos:start="939:14" pos:end="939:15">-&gt;</operator><name pos:start="939:16" pos:end="939:23">bit_rate</name></name> <operator pos:start="939:25" pos:end="939:25">=</operator> <name pos:start="939:27" pos:end="939:68"><name pos:start="939:27" pos:end="939:29">ctx</name><operator pos:start="939:30" pos:end="939:31">-&gt;</operator><name pos:start="939:32" pos:end="939:44">encode_config</name><operator pos:start="939:45" pos:end="939:45">.</operator><name pos:start="939:46" pos:end="939:53">rcParams</name><operator pos:start="939:54" pos:end="939:54">.</operator><name pos:start="939:55" pos:end="939:68">averageBitRate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="943:5" pos:end="943:13">return <expr pos:start="943:12" pos:end="943:12"><literal type="number" pos:start="943:12" pos:end="943:12">0</literal></expr>;</return>



<label pos:start="947:1" pos:end="947:6"><name pos:start="947:1" pos:end="947:5">error</name>:</label>



    <for pos:start="951:5" pos:end="959:5">for <control pos:start="951:9" pos:end="951:38">(<init pos:start="951:10" pos:end="951:15"><expr pos:start="951:10" pos:end="951:14"><name pos:start="951:10" pos:end="951:10">i</name> <operator pos:start="951:12" pos:end="951:12">=</operator> <literal type="number" pos:start="951:14" pos:end="951:14">0</literal></expr>;</init> <condition pos:start="951:17" pos:end="951:33"><expr pos:start="951:17" pos:end="951:32"><name pos:start="951:17" pos:end="951:17">i</name> <operator pos:start="951:19" pos:end="951:19">&lt;</operator> <name pos:start="951:21" pos:end="951:32">surfaceCount</name></expr>;</condition> <incr pos:start="951:35" pos:end="951:37"><expr pos:start="951:35" pos:end="951:37"><operator pos:start="951:35" pos:end="951:36">++</operator><name pos:start="951:37" pos:end="951:37">i</name></expr></incr>)</control> <block pos:start="951:40" pos:end="959:5">{<block_content pos:start="953:9" pos:end="957:105">

        <expr_stmt pos:start="953:9" pos:end="953:95"><expr pos:start="953:9" pos:end="953:94"><call pos:start="953:9" pos:end="953:94"><name pos:start="953:9" pos:end="953:40"><name pos:start="953:9" pos:end="953:15">p_nvenc</name><operator pos:start="953:16" pos:end="953:17">-&gt;</operator><name pos:start="953:18" pos:end="953:40">nvEncDestroyInputBuffer</name></name><argument_list pos:start="953:41" pos:end="953:94">(<argument pos:start="953:42" pos:end="953:55"><expr pos:start="953:42" pos:end="953:55"><name pos:start="953:42" pos:end="953:55"><name pos:start="953:42" pos:end="953:44">ctx</name><operator pos:start="953:45" pos:end="953:46">-&gt;</operator><name pos:start="953:47" pos:end="953:55">nvencoder</name></name></expr></argument>, <argument pos:start="953:58" pos:end="953:93"><expr pos:start="953:58" pos:end="953:93"><name pos:start="953:58" pos:end="953:79"><name pos:start="953:58" pos:end="953:60">ctx</name><operator pos:start="953:61" pos:end="953:62">-&gt;</operator><name pos:start="953:63" pos:end="953:76">input_surfaces</name><index pos:start="953:77" pos:end="953:79">[<expr pos:start="953:78" pos:end="953:78"><name pos:start="953:78" pos:end="953:78">i</name></expr>]</index></name><operator pos:start="953:80" pos:end="953:80">.</operator><name pos:start="953:81" pos:end="953:93">input_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="955:9" pos:end="957:105"><if pos:start="955:9" pos:end="957:105">if <condition pos:start="955:12" pos:end="955:51">(<expr pos:start="955:13" pos:end="955:50"><name pos:start="955:13" pos:end="955:35"><name pos:start="955:13" pos:end="955:15">ctx</name><operator pos:start="955:16" pos:end="955:17">-&gt;</operator><name pos:start="955:18" pos:end="955:32">output_surfaces</name><index pos:start="955:33" pos:end="955:35">[<expr pos:start="955:34" pos:end="955:34"><name pos:start="955:34" pos:end="955:34">i</name></expr>]</index></name><operator pos:start="955:36" pos:end="955:36">.</operator><name pos:start="955:37" pos:end="955:50">output_surface</name></expr>)</condition><block type="pseudo" pos:start="957:13" pos:end="957:105"><block_content pos:start="957:13" pos:end="957:105">

            <expr_stmt pos:start="957:13" pos:end="957:105"><expr pos:start="957:13" pos:end="957:104"><call pos:start="957:13" pos:end="957:104"><name pos:start="957:13" pos:end="957:48"><name pos:start="957:13" pos:end="957:19">p_nvenc</name><operator pos:start="957:20" pos:end="957:21">-&gt;</operator><name pos:start="957:22" pos:end="957:48">nvEncDestroyBitstreamBuffer</name></name><argument_list pos:start="957:49" pos:end="957:104">(<argument pos:start="957:50" pos:end="957:63"><expr pos:start="957:50" pos:end="957:63"><name pos:start="957:50" pos:end="957:63"><name pos:start="957:50" pos:end="957:52">ctx</name><operator pos:start="957:53" pos:end="957:54">-&gt;</operator><name pos:start="957:55" pos:end="957:63">nvencoder</name></name></expr></argument>, <argument pos:start="957:66" pos:end="957:103"><expr pos:start="957:66" pos:end="957:103"><name pos:start="957:66" pos:end="957:88"><name pos:start="957:66" pos:end="957:68">ctx</name><operator pos:start="957:69" pos:end="957:70">-&gt;</operator><name pos:start="957:71" pos:end="957:85">output_surfaces</name><index pos:start="957:86" pos:end="957:88">[<expr pos:start="957:87" pos:end="957:87"><name pos:start="957:87" pos:end="957:87">i</name></expr>]</index></name><operator pos:start="957:89" pos:end="957:89">.</operator><name pos:start="957:90" pos:end="957:103">output_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="963:5" pos:end="965:53"><if pos:start="963:5" pos:end="965:53">if <condition pos:start="963:8" pos:end="963:23">(<expr pos:start="963:9" pos:end="963:22"><name pos:start="963:9" pos:end="963:22"><name pos:start="963:9" pos:end="963:11">ctx</name><operator pos:start="963:12" pos:end="963:13">-&gt;</operator><name pos:start="963:14" pos:end="963:22">nvencoder</name></name></expr>)</condition><block type="pseudo" pos:start="965:9" pos:end="965:53"><block_content pos:start="965:9" pos:end="965:53">

        <expr_stmt pos:start="965:9" pos:end="965:53"><expr pos:start="965:9" pos:end="965:52"><call pos:start="965:9" pos:end="965:52"><name pos:start="965:9" pos:end="965:36"><name pos:start="965:9" pos:end="965:15">p_nvenc</name><operator pos:start="965:16" pos:end="965:17">-&gt;</operator><name pos:start="965:18" pos:end="965:36">nvEncDestroyEncoder</name></name><argument_list pos:start="965:37" pos:end="965:52">(<argument pos:start="965:38" pos:end="965:51"><expr pos:start="965:38" pos:end="965:51"><name pos:start="965:38" pos:end="965:51"><name pos:start="965:38" pos:end="965:40">ctx</name><operator pos:start="965:41" pos:end="965:42">-&gt;</operator><name pos:start="965:43" pos:end="965:51">nvencoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="969:5" pos:end="971:47"><if pos:start="969:5" pos:end="971:47">if <condition pos:start="969:8" pos:end="969:24">(<expr pos:start="969:9" pos:end="969:23"><name pos:start="969:9" pos:end="969:23"><name pos:start="969:9" pos:end="969:11">ctx</name><operator pos:start="969:12" pos:end="969:13">-&gt;</operator><name pos:start="969:14" pos:end="969:23">cu_context</name></name></expr>)</condition><block type="pseudo" pos:start="971:9" pos:end="971:47"><block_content pos:start="971:9" pos:end="971:47">

        <expr_stmt pos:start="971:9" pos:end="971:47"><expr pos:start="971:9" pos:end="971:46"><call pos:start="971:9" pos:end="971:46"><name pos:start="971:9" pos:end="971:29"><name pos:start="971:9" pos:end="971:13">dl_fn</name><operator pos:start="971:14" pos:end="971:15">-&gt;</operator><name pos:start="971:16" pos:end="971:29">cu_ctx_destroy</name></name><argument_list pos:start="971:30" pos:end="971:46">(<argument pos:start="971:31" pos:end="971:45"><expr pos:start="971:31" pos:end="971:45"><name pos:start="971:31" pos:end="971:45"><name pos:start="971:31" pos:end="971:33">ctx</name><operator pos:start="971:34" pos:end="971:35">-&gt;</operator><name pos:start="971:36" pos:end="971:45">cu_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="975:5" pos:end="975:39"><expr pos:start="975:5" pos:end="975:38"><call pos:start="975:5" pos:end="975:38"><name pos:start="975:5" pos:end="975:17">av_frame_free</name><argument_list pos:start="975:18" pos:end="975:38">(<argument pos:start="975:19" pos:end="975:37"><expr pos:start="975:19" pos:end="975:37"><operator pos:start="975:19" pos:end="975:19">&amp;</operator><name pos:start="975:20" pos:end="975:37"><name pos:start="975:20" pos:end="975:24">avctx</name><operator pos:start="975:25" pos:end="975:26">-&gt;</operator><name pos:start="975:27" pos:end="975:37">coded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="979:5" pos:end="979:30"><expr pos:start="979:5" pos:end="979:29"><call pos:start="979:5" pos:end="979:29"><name pos:start="979:5" pos:end="979:22">nvenc_unload_nvenc</name><argument_list pos:start="979:23" pos:end="979:29">(<argument pos:start="979:24" pos:end="979:28"><expr pos:start="979:24" pos:end="979:28"><name pos:start="979:24" pos:end="979:28">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="983:5" pos:end="983:26"><expr pos:start="983:5" pos:end="983:25"><name pos:start="983:5" pos:end="983:18"><name pos:start="983:5" pos:end="983:7">ctx</name><operator pos:start="983:8" pos:end="983:9">-&gt;</operator><name pos:start="983:10" pos:end="983:18">nvencoder</name></name> <operator pos:start="983:20" pos:end="983:20">=</operator> <name pos:start="983:22" pos:end="983:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="985:5" pos:end="985:27"><expr pos:start="985:5" pos:end="985:26"><name pos:start="985:5" pos:end="985:19"><name pos:start="985:5" pos:end="985:7">ctx</name><operator pos:start="985:8" pos:end="985:9">-&gt;</operator><name pos:start="985:10" pos:end="985:19">cu_context</name></name> <operator pos:start="985:21" pos:end="985:21">=</operator> <name pos:start="985:23" pos:end="985:26">NULL</name></expr>;</expr_stmt>



    <return pos:start="989:5" pos:end="989:15">return <expr pos:start="989:12" pos:end="989:14"><name pos:start="989:12" pos:end="989:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
