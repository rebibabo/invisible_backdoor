<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5477.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">block_job_defer_to_main_loop_bh</name><parameter_list pos:start="1:44" pos:end="1:57">(<parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:50"><name pos:start="1:45" pos:end="1:48">void</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:17">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:31">BlockJobDeferToMainLoopData</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:37">data</name> <init pos:start="5:39" pos:end="5:46">= <expr pos:start="5:41" pos:end="5:46"><name pos:start="5:41" pos:end="5:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AioContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:27">aio_context</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:58">/* Prevent race with block_job_defer_to_main_loop() */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:23">aio_context_acquire</name><argument_list pos:start="13:24" pos:end="13:42">(<argument pos:start="13:25" pos:end="13:41"><expr pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:28">data</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:41">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:60">/* Fetch BDS AioContext again, in case it has changed */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:15">aio_context</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:53"><name pos:start="19:19" pos:end="19:37">blk_get_aio_context</name><argument_list pos:start="19:38" pos:end="19:53">(<argument pos:start="19:39" pos:end="19:52"><expr pos:start="19:39" pos:end="19:52"><name pos:start="19:39" pos:end="19:52"><name pos:start="19:39" pos:end="19:42">data</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:47">job</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:52">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:19">aio_context</name> <operator pos:start="21:21" pos:end="21:22">!=</operator> <name pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:27">data</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:40">aio_context</name></name></expr>)</condition> <block pos:start="21:43" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:41">

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:27">aio_context_acquire</name><argument_list pos:start="23:28" pos:end="23:40">(<argument pos:start="23:29" pos:end="23:39"><expr pos:start="23:29" pos:end="23:39"><name pos:start="23:29" pos:end="23:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:8">data</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:13">job</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:36">deferred_to_main_loop</name></name> <operator pos:start="29:38" pos:end="29:38">=</operator> <name pos:start="29:40" pos:end="29:44">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><call pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:8">data</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:12">fn</name></name><argument_list pos:start="31:13" pos:end="31:37">(<argument pos:start="31:14" pos:end="31:22"><expr pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:17">data</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:22">job</name></name></expr></argument>, <argument pos:start="31:25" pos:end="31:36"><expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:28">data</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:36">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:41">(<expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:19">aio_context</name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <name pos:start="35:24" pos:end="35:40"><name pos:start="35:24" pos:end="35:27">data</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:40">aio_context</name></name></expr>)</condition> <block pos:start="35:43" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:41">

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:27">aio_context_release</name><argument_list pos:start="37:28" pos:end="37:40">(<argument pos:start="37:29" pos:end="37:39"><expr pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:39">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><call pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:23">aio_context_release</name><argument_list pos:start="43:24" pos:end="43:42">(<argument pos:start="43:25" pos:end="43:41"><expr pos:start="43:25" pos:end="43:41"><name pos:start="43:25" pos:end="43:41"><name pos:start="43:25" pos:end="43:28">data</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:41">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><call pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:10">g_free</name><argument_list pos:start="47:11" pos:end="47:16">(<argument pos:start="47:12" pos:end="47:15"><expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
