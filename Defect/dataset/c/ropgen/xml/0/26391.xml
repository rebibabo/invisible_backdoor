<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26391.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:31"><name pos:start="1:1" pos:end="1:29">MigrationCapabilityStatusList</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:61">qmp_query_migrate_capabilities</name><parameter_list pos:start="1:62" pos:end="1:75">(<parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:70"><name pos:start="1:63" pos:end="1:67">Error</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:16">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:33">MigrationCapabilityStatusList</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:39">head</name> <init pos:start="5:41" pos:end="5:46">= <expr pos:start="5:43" pos:end="5:46"><name pos:start="5:43" pos:end="5:46">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:33">MigrationCapabilityStatusList</name> <modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:39">caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MigrationState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:45">= <expr pos:start="9:25" pos:end="9:45"><call pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:43">migrate_get_current</name><argument_list pos:start="9:44" pos:end="9:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:8">caps</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:15">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="15:18" pos:end="15:47">/* silence compiler warning */</comment>

    <for pos:start="17:5" pos:end="57:5">for <control pos:start="17:9" pos:end="17:51">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:46"><expr pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:45">MIGRATION_CAPABILITY__MAX</name></expr>;</condition> <incr pos:start="17:48" pos:end="17:50"><expr pos:start="17:48" pos:end="17:50"><name pos:start="17:48" pos:end="17:48">i</name><operator pos:start="17:49" pos:end="17:50">++</operator></expr></incr>)</control> <block pos:start="17:53" pos:end="57:5">{<block_content pos:start="21:9" pos:end="55:56">

<cpp:ifndef pos:start="19:1" pos:end="19:35">#<cpp:directive pos:start="19:2" pos:end="19:7">ifndef</cpp:directive> <name pos:start="19:9" pos:end="19:35">CONFIG_LIVE_BLOCK_MIGRATION</name></cpp:ifndef>

        <if_stmt pos:start="21:9" pos:end="28:0"><if pos:start="21:9" pos:end="28:0">if <condition pos:start="21:12" pos:end="21:44">(<expr pos:start="21:13" pos:end="21:43"><name pos:start="21:13" pos:end="21:13">i</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <name pos:start="21:18" pos:end="21:43">MIGRATION_CAPABILITY_BLOCK</name></expr>)</condition> <block pos:start="21:46" pos:end="28:0">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:66">(<expr pos:start="29:13" pos:end="29:65"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <name pos:start="29:18" pos:end="29:44">MIGRATION_CAPABILITY_X_COLO</name> <operator pos:start="29:46" pos:end="29:47">&amp;&amp;</operator> <operator pos:start="29:49" pos:end="29:49">!</operator><call pos:start="29:50" pos:end="29:65"><name pos:start="29:50" pos:end="29:63">colo_supported</name><argument_list pos:start="29:64" pos:end="29:65">()</argument_list></call></expr>)</condition> <block pos:start="29:68" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:21">

            <continue pos:start="31:13" pos:end="31:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="47:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:16">head</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <name pos:start="35:21" pos:end="35:24">NULL</name></expr>)</condition> <block pos:start="35:27" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:24">

            <expr_stmt pos:start="37:13" pos:end="37:44"><expr pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:16">head</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:43"><name pos:start="37:20" pos:end="37:28">g_malloc0</name><argument_list pos:start="37:29" pos:end="37:43">(<argument pos:start="37:30" pos:end="37:42"><expr pos:start="37:30" pos:end="37:42"><sizeof pos:start="37:30" pos:end="37:42">sizeof<argument_list pos:start="37:36" pos:end="37:42">(<argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><operator pos:start="37:37" pos:end="37:37">*</operator><name pos:start="37:38" pos:end="37:41">caps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:16">caps</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:23">head</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="47:9">else <block pos:start="41:16" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:30">

            <expr_stmt pos:start="43:13" pos:end="43:50"><expr pos:start="43:13" pos:end="43:49"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:16">caps</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:22">next</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:49"><name pos:start="43:26" pos:end="43:34">g_malloc0</name><argument_list pos:start="43:35" pos:end="43:49">(<argument pos:start="43:36" pos:end="43:48"><expr pos:start="43:36" pos:end="43:48"><sizeof pos:start="43:36" pos:end="43:48">sizeof<argument_list pos:start="43:42" pos:end="43:48">(<argument pos:start="43:43" pos:end="43:47"><expr pos:start="43:43" pos:end="43:47"><operator pos:start="43:43" pos:end="43:43">*</operator><name pos:start="43:44" pos:end="43:47">caps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:16">caps</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:29"><name pos:start="45:20" pos:end="45:23">caps</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:43"><expr pos:start="49:9" pos:end="51:42"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:12">caps</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:19">value</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator>

            <call pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:20">g_malloc</name><argument_list pos:start="51:21" pos:end="51:42">(<argument pos:start="51:22" pos:end="51:41"><expr pos:start="51:22" pos:end="51:41"><sizeof pos:start="51:22" pos:end="51:41">sizeof<argument_list pos:start="51:28" pos:end="51:41">(<argument pos:start="51:29" pos:end="51:40"><expr pos:start="51:29" pos:end="51:40"><operator pos:start="51:29" pos:end="51:29">*</operator><name pos:start="51:30" pos:end="51:40"><name pos:start="51:30" pos:end="51:33">caps</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:40">value</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:12">caps</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:19">value</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:31">capability</name></name> <operator pos:start="53:33" pos:end="53:33">=</operator> <name pos:start="53:35" pos:end="53:35">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:12">caps</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:19">value</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:26">state</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:55"><name pos:start="55:30" pos:end="55:30">s</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:52">enabled_capabilities</name><index pos:start="55:53" pos:end="55:55">[<expr pos:start="55:54" pos:end="55:54"><name pos:start="55:54" pos:end="55:54">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="61:5" pos:end="61:16">return <expr pos:start="61:12" pos:end="61:15"><name pos:start="61:12" pos:end="61:15">head</name></expr>;</return>

</block_content>}</block></function>
</unit>
