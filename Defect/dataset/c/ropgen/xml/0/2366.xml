<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2366.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vc1_decode_p_mb_intfi</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">VC1Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_pos</name> <init pos:start="11:16" pos:end="11:49">= <expr pos:start="11:18" pos:end="11:49"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">mb_x</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:34"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:34">mb_y</name></name> <operator pos:start="11:36" pos:end="11:36">*</operator> <name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">cbp</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="13:18" pos:end="13:41">/* cbp decoding stuff */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">mqdiff</name></decl>, <decl pos:start="15:17" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:17" pos:end="15:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="15:25" pos:end="15:45">/* MB quantization */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">ttmb</name> <init pos:start="17:14" pos:end="17:23">= <expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">v</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">ttfrm</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="17:26" pos:end="17:48">/* MB Transform type */</comment>



    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21">mb_has_coeffs</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="21:28" pos:end="21:42">/* last_flag */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">dmv_x</name></decl>, <decl pos:start="23:16" pos:end="23:20"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:16" pos:end="23:20">dmv_y</name></decl>;</decl_stmt> <comment type="block" pos:start="23:23" pos:end="23:54">/* Differential MV components */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">val</name></decl>;</decl_stmt> <comment type="block" pos:start="25:14" pos:end="25:30">/* temp values */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:24"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:19">first_block</name> <init pos:start="27:21" pos:end="27:23">= <expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:15"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:15">dst_idx</name></decl>, <decl pos:start="29:18" pos:end="29:20"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:18" pos:end="29:20">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:22"><decl pos:start="31:5" pos:end="31:21"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:17">pred_flag</name> <init pos:start="31:19" pos:end="31:21">= <expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:41"><decl pos:start="33:5" pos:end="33:21"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:17">block_cbp</name> <init pos:start="33:19" pos:end="33:21">= <expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr></init></decl>, <decl pos:start="33:24" pos:end="33:26"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:24" pos:end="33:26">pat</name></decl>, <decl pos:start="33:29" pos:end="33:40"><type ref="prev" pos:start="33:5" pos:end="33:7"/><name pos:start="33:29" pos:end="33:36">block_tt</name> <init pos:start="33:38" pos:end="33:40">= <expr pos:start="33:40" pos:end="33:40"><literal type="number" pos:start="33:40" pos:end="33:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:23"><decl pos:start="35:5" pos:end="35:22"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:18">idx_mbmode</name> <init pos:start="35:20" pos:end="35:22">= <expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:10">mquant</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">v</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">pq</name></name></expr>;</expr_stmt> <comment type="block" pos:start="39:21" pos:end="39:46">/* Lossy initialization */</comment>



    <expr_stmt pos:start="43:5" pos:end="43:79"><expr pos:start="43:5" pos:end="43:78"><name pos:start="43:5" pos:end="43:14">idx_mbmode</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:78"><name pos:start="43:18" pos:end="43:25">get_vlc2</name><argument_list pos:start="43:26" pos:end="43:78">(<argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">gb</name></expr></argument>, <argument pos:start="43:31" pos:end="43:50"><expr pos:start="43:31" pos:end="43:50"><name pos:start="43:31" pos:end="43:50"><name pos:start="43:31" pos:end="43:31">v</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:43">mbmode_vlc</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:50">table</name></name></expr></argument>, <argument pos:start="43:53" pos:end="43:74"><expr pos:start="43:53" pos:end="43:74"><name pos:start="43:53" pos:end="43:74">VC1_IF_MBMODE_VLC_BITS</name></expr></argument>, <argument pos:start="43:77" pos:end="43:77"><expr pos:start="43:77" pos:end="43:77"><literal type="number" pos:start="43:77" pos:end="43:77">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="231:5"><if pos:start="45:5" pos:end="123:5">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:18">idx_mbmode</name> <operator pos:start="45:20" pos:end="45:21">&lt;=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">1</literal></expr>)</condition> <block pos:start="45:26" pos:end="123:5">{<block_content pos:start="47:9" pos:end="121:9"> <comment type="line" pos:start="45:28" pos:end="45:38">// intra MB</comment>

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:9">v</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">is_intra</name><index pos:start="47:20" pos:end="47:28">[<expr pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">mb_x</name></name></expr>]</index></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:35">0x3f</literal></expr>;</expr_stmt> <comment type="line" pos:start="47:38" pos:end="47:66">// Set the bitfield to all 1.</comment>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">mb_intra</name></name>          <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:83"><expr pos:start="51:9" pos:end="51:82"><name pos:start="51:9" pos:end="51:78"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:26">current_picture</name><operator pos:start="51:27" pos:end="51:27">.</operator><name pos:start="51:28" pos:end="51:37">motion_val</name><index pos:start="51:38" pos:end="51:40">[<expr pos:start="51:39" pos:end="51:39"><literal type="number" pos:start="51:39" pos:end="51:39">1</literal></expr>]</index><index pos:start="51:41" pos:end="51:75">[<expr pos:start="51:42" pos:end="51:74"><name pos:start="51:42" pos:end="51:58"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:55">block_index</name><index pos:start="51:56" pos:end="51:58">[<expr pos:start="51:57" pos:end="51:57"><literal type="number" pos:start="51:57" pos:end="51:57">0</literal></expr>]</index></name> <operator pos:start="51:60" pos:end="51:60">+</operator> <name pos:start="51:62" pos:end="51:74"><name pos:start="51:62" pos:end="51:62">v</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:74">blocks_off</name></name></expr>]</index><index pos:start="51:76" pos:end="51:78">[<expr pos:start="51:77" pos:end="51:77"><literal type="number" pos:start="51:77" pos:end="51:77">0</literal></expr>]</index></name> <operator pos:start="51:80" pos:end="51:80">=</operator> <literal type="number" pos:start="51:82" pos:end="51:82">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:83"><expr pos:start="53:9" pos:end="53:82"><name pos:start="53:9" pos:end="53:78"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:26">current_picture</name><operator pos:start="53:27" pos:end="53:27">.</operator><name pos:start="53:28" pos:end="53:37">motion_val</name><index pos:start="53:38" pos:end="53:40">[<expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">1</literal></expr>]</index><index pos:start="53:41" pos:end="53:75">[<expr pos:start="53:42" pos:end="53:74"><name pos:start="53:42" pos:end="53:58"><name pos:start="53:42" pos:end="53:42">s</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:55">block_index</name><index pos:start="53:56" pos:end="53:58">[<expr pos:start="53:57" pos:end="53:57"><literal type="number" pos:start="53:57" pos:end="53:57">0</literal></expr>]</index></name> <operator pos:start="53:60" pos:end="53:60">+</operator> <name pos:start="53:62" pos:end="53:74"><name pos:start="53:62" pos:end="53:62">v</name><operator pos:start="53:63" pos:end="53:64">-&gt;</operator><name pos:start="53:65" pos:end="53:74">blocks_off</name></name></expr>]</index><index pos:start="53:76" pos:end="53:78">[<expr pos:start="53:77" pos:end="53:77"><literal type="number" pos:start="53:77" pos:end="53:77">1</literal></expr>]</index></name> <operator pos:start="53:80" pos:end="53:80">=</operator> <literal type="number" pos:start="53:82" pos:end="53:82">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:71"><expr pos:start="55:9" pos:end="55:70"><name pos:start="55:9" pos:end="55:54"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:26">current_picture</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:34">mb_type</name><index pos:start="55:35" pos:end="55:54">[<expr pos:start="55:36" pos:end="55:53"><name pos:start="55:36" pos:end="55:41">mb_pos</name> <operator pos:start="55:43" pos:end="55:43">+</operator> <name pos:start="55:45" pos:end="55:53"><name pos:start="55:45" pos:end="55:45">v</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:53">mb_off</name></name></expr>]</index></name> <operator pos:start="55:56" pos:end="55:56">=</operator> <name pos:start="55:58" pos:end="55:70">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><call pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:18">GET_MQUANT</name><argument_list pos:start="57:19" pos:end="57:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:26">current_picture</name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:39">qscale_table</name><index pos:start="59:40" pos:end="59:47">[<expr pos:start="59:41" pos:end="59:46"><name pos:start="59:41" pos:end="59:46">mb_pos</name></expr>]</index></name> <operator pos:start="59:49" pos:end="59:49">=</operator> <name pos:start="59:51" pos:end="59:56">mquant</name></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:78">/* Set DC scale - y and c use the same (not sure if necessary here) */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">y_dc_scale</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:51"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:43">y_dc_scale_table</name><index pos:start="63:44" pos:end="63:51">[<expr pos:start="63:45" pos:end="63:50"><name pos:start="63:45" pos:end="63:50">mquant</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">c_dc_scale</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:51"><name pos:start="65:25" pos:end="65:25">s</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:43">c_dc_scale_table</name><index pos:start="65:44" pos:end="65:51">[<expr pos:start="65:45" pos:end="65:50"><name pos:start="65:45" pos:end="65:50">mquant</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:9">v</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:13">.</operator><name pos:start="67:14" pos:end="67:20">ac_pred</name></name>  <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:25">v</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:39">acpred_plane</name><index pos:start="67:40" pos:end="67:47">[<expr pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:46">mb_pos</name></expr>]</index></name> <operator pos:start="67:49" pos:end="67:49">=</operator> <call pos:start="67:51" pos:end="67:63"><name pos:start="67:51" pos:end="67:59">get_bits1</name><argument_list pos:start="67:60" pos:end="67:63">(<argument pos:start="67:61" pos:end="67:62"><expr pos:start="67:61" pos:end="67:62"><name pos:start="67:61" pos:end="67:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:39"><expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:21">mb_has_coeffs</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:34">idx_mbmode</name> <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:86"><if pos:start="71:9" pos:end="73:86">if <condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:25">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:86"><block_content pos:start="73:13" pos:end="73:86">

            <expr_stmt pos:start="73:13" pos:end="73:86"><expr pos:start="73:13" pos:end="73:85"><name pos:start="73:13" pos:end="73:15">cbp</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <literal type="number" pos:start="73:19" pos:end="73:21">1</literal> <operator pos:start="73:21" pos:end="73:21">+</operator> <call pos:start="73:23" pos:end="73:85"><name pos:start="73:23" pos:end="73:30">get_vlc2</name><argument_list pos:start="73:31" pos:end="73:85">(<argument pos:start="73:32" pos:end="73:39"><expr pos:start="73:32" pos:end="73:39"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:39"><name pos:start="73:33" pos:end="73:33">v</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:36">s</name><operator pos:start="73:37" pos:end="73:37">.</operator><name pos:start="73:38" pos:end="73:39">gb</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:60"><expr pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:60"><name pos:start="73:42" pos:end="73:42">v</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:53">cbpcy_vlc</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:60">table</name></name></expr></argument>, <argument pos:start="73:63" pos:end="73:81"><expr pos:start="73:63" pos:end="73:81"><name pos:start="73:63" pos:end="73:81">VC1_ICBPCY_VLC_BITS</name></expr></argument>, <argument pos:start="73:84" pos:end="73:84"><expr pos:start="73:84" pos:end="73:84"><literal type="number" pos:start="73:84" pos:end="73:84">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:20"><expr pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:15">dst_idx</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>;</expr_stmt>

        <for pos:start="77:9" pos:end="121:9">for <control pos:start="77:13" pos:end="77:31">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:25"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <literal type="number" pos:start="77:25" pos:end="77:25">6</literal></expr>;</condition> <incr pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:28">i</name><operator pos:start="77:29" pos:end="77:30">++</operator></expr></incr>)</control> <block pos:start="77:33" pos:end="121:9">{<block_content pos:start="79:13" pos:end="117:69">

            <expr_stmt pos:start="79:13" pos:end="79:49"><expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:13">v</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:22">a_avail</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:35"><name pos:start="79:26" pos:end="79:26">v</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:35">c_avail</name></name>          <operator pos:start="79:46" pos:end="79:46">=</operator> <literal type="number" pos:start="79:48" pos:end="79:48">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:49"><expr pos:start="81:13" pos:end="81:48"><name pos:start="81:13" pos:end="81:44"><name pos:start="81:13" pos:end="81:13">v</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:22">mb_type</name><index pos:start="81:23" pos:end="81:25">[<expr pos:start="81:24" pos:end="81:24"><literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>]</index><index pos:start="81:26" pos:end="81:44">[<expr pos:start="81:27" pos:end="81:43"><name pos:start="81:27" pos:end="81:43"><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:40">block_index</name><index pos:start="81:41" pos:end="81:43">[<expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="81:46" pos:end="81:46">=</operator> <literal type="number" pos:start="81:48" pos:end="81:48">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:49"><expr pos:start="83:13" pos:end="83:48"><name pos:start="83:13" pos:end="83:43"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:21">dc_val</name><index pos:start="83:22" pos:end="83:24">[<expr pos:start="83:23" pos:end="83:23"><literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>]</index><index pos:start="83:25" pos:end="83:43">[<expr pos:start="83:26" pos:end="83:42"><name pos:start="83:26" pos:end="83:42"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:39">block_index</name><index pos:start="83:40" pos:end="83:42">[<expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">i</name></expr>]</index></name></expr>]</index></name>  <operator pos:start="83:46" pos:end="83:46">=</operator> <literal type="number" pos:start="83:48" pos:end="83:48">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:30"><expr pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:19">dst_idx</name> <operator pos:start="85:21" pos:end="85:22">+=</operator> <name pos:start="85:24" pos:end="85:24">i</name> <operator pos:start="85:26" pos:end="85:27">&gt;&gt;</operator> <literal type="number" pos:start="85:29" pos:end="85:29">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:15">val</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <operator pos:start="87:19" pos:end="87:19">(</operator><operator pos:start="87:20" pos:end="87:20">(</operator><name pos:start="87:21" pos:end="87:23">cbp</name> <operator pos:start="87:25" pos:end="87:26">&gt;&gt;</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><literal type="number" pos:start="87:29" pos:end="87:31">5</literal> <operator pos:start="87:31" pos:end="87:31">-</operator> <name pos:start="87:33" pos:end="87:33">i</name><operator pos:start="87:34" pos:end="87:34">)</operator><operator pos:start="87:35" pos:end="87:35">)</operator> <operator pos:start="87:37" pos:end="87:37">&amp;</operator> <literal type="number" pos:start="87:39" pos:end="87:39">1</literal><operator pos:start="87:40" pos:end="87:40">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:81"><if pos:start="89:13" pos:end="91:81">if <condition pos:start="89:16" pos:end="89:57">(<expr pos:start="89:17" pos:end="89:56"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:20">==</operator> <literal type="number" pos:start="89:22" pos:end="89:22">2</literal> <operator pos:start="89:24" pos:end="89:25">||</operator> <name pos:start="89:27" pos:end="89:27">i</name> <operator pos:start="89:29" pos:end="89:30">==</operator> <literal type="number" pos:start="89:32" pos:end="89:32">3</literal> <operator pos:start="89:34" pos:end="89:35">||</operator> <operator pos:start="89:37" pos:end="89:37">!</operator><name pos:start="89:38" pos:end="89:56"><name pos:start="89:38" pos:end="89:38">s</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:56">first_slice_line</name></name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:81"><block_content pos:start="91:17" pos:end="91:81">

                <expr_stmt pos:start="91:17" pos:end="91:81"><expr pos:start="91:17" pos:end="91:80"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:17">v</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">a_avail</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:80"><name pos:start="91:30" pos:end="91:30">v</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:39">mb_type</name><index pos:start="91:40" pos:end="91:42">[<expr pos:start="91:41" pos:end="91:41"><literal type="number" pos:start="91:41" pos:end="91:41">0</literal></expr>]</index><index pos:start="91:43" pos:end="91:80">[<expr pos:start="91:44" pos:end="91:79"><name pos:start="91:44" pos:end="91:60"><name pos:start="91:44" pos:end="91:44">s</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:57">block_index</name><index pos:start="91:58" pos:end="91:60">[<expr pos:start="91:59" pos:end="91:59"><name pos:start="91:59" pos:end="91:59">i</name></expr>]</index></name> <operator pos:start="91:62" pos:end="91:62">-</operator> <name pos:start="91:64" pos:end="91:79"><name pos:start="91:64" pos:end="91:64">s</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:76">block_wrap</name><index pos:start="91:77" pos:end="91:79">[<expr pos:start="91:78" pos:end="91:78"><name pos:start="91:78" pos:end="91:78">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="95:66"><if pos:start="93:13" pos:end="95:66">if <condition pos:start="93:16" pos:end="93:44">(<expr pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <literal type="number" pos:start="93:22" pos:end="93:22">1</literal> <operator pos:start="93:24" pos:end="93:25">||</operator> <name pos:start="93:27" pos:end="93:27">i</name> <operator pos:start="93:29" pos:end="93:30">==</operator> <literal type="number" pos:start="93:32" pos:end="93:32">3</literal> <operator pos:start="93:34" pos:end="93:35">||</operator> <name pos:start="93:37" pos:end="93:43"><name pos:start="93:37" pos:end="93:37">s</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:43">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:66"><block_content pos:start="95:17" pos:end="95:66">

                <expr_stmt pos:start="95:17" pos:end="95:66"><expr pos:start="95:17" pos:end="95:65"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:17">v</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:26">c_avail</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:65"><name pos:start="95:30" pos:end="95:30">v</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:39">mb_type</name><index pos:start="95:40" pos:end="95:42">[<expr pos:start="95:41" pos:end="95:41"><literal type="number" pos:start="95:41" pos:end="95:41">0</literal></expr>]</index><index pos:start="95:43" pos:end="95:65">[<expr pos:start="95:44" pos:end="95:64"><name pos:start="95:44" pos:end="95:60"><name pos:start="95:44" pos:end="95:44">s</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:57">block_index</name><index pos:start="95:58" pos:end="95:60">[<expr pos:start="95:59" pos:end="95:59"><name pos:start="95:59" pos:end="95:59">i</name></expr>]</index></name> <operator pos:start="95:62" pos:end="95:62">-</operator> <literal type="number" pos:start="95:64" pos:end="95:64">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="99:13" pos:end="101:75"><expr pos:start="99:13" pos:end="101:74"><call pos:start="99:13" pos:end="101:74"><name pos:start="99:13" pos:end="99:34">vc1_decode_intra_block</name><argument_list pos:start="99:35" pos:end="101:74">(<argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">v</name></expr></argument>, <argument pos:start="99:39" pos:end="99:49"><expr pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:39">s</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:46">block</name><index pos:start="99:47" pos:end="99:49">[<expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="99:52" pos:end="99:52"><expr pos:start="99:52" pos:end="99:52"><name pos:start="99:52" pos:end="99:52">i</name></expr></argument>, <argument pos:start="99:55" pos:end="99:57"><expr pos:start="99:55" pos:end="99:57"><name pos:start="99:55" pos:end="99:57">val</name></expr></argument>, <argument pos:start="99:60" pos:end="99:65"><expr pos:start="99:60" pos:end="99:65"><name pos:start="99:60" pos:end="99:65">mquant</name></expr></argument>,

                                   <argument pos:start="101:36" pos:end="101:73"><expr pos:start="101:36" pos:end="101:73"><ternary pos:start="101:36" pos:end="101:73"><condition pos:start="101:36" pos:end="101:44"><expr pos:start="101:36" pos:end="101:42"><operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:37">i</name> <operator pos:start="101:39" pos:end="101:39">&amp;</operator> <literal type="number" pos:start="101:41" pos:end="101:41">4</literal><operator pos:start="101:42" pos:end="101:42">)</operator></expr> ?</condition><then pos:start="101:46" pos:end="101:58"> <expr pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:46">v</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:58">codingset2</name></name></expr> </then><else pos:start="101:60" pos:end="101:73">: <expr pos:start="101:62" pos:end="101:73"><name pos:start="101:62" pos:end="101:73"><name pos:start="101:62" pos:end="101:62">v</name><operator pos:start="101:63" pos:end="101:64">-&gt;</operator><name pos:start="101:65" pos:end="101:73">codingset</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:25"><if pos:start="103:13" pos:end="105:25">if <condition pos:start="103:16" pos:end="103:54">(<expr pos:start="103:17" pos:end="103:53"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:18">i</name><operator pos:start="103:19" pos:end="103:19">&gt;</operator><literal type="number" pos:start="103:20" pos:end="103:20">3</literal><operator pos:start="103:21" pos:end="103:21">)</operator> <operator pos:start="103:23" pos:end="103:24">&amp;&amp;</operator> <operator pos:start="103:26" pos:end="103:26">(</operator><name pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:27">s</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:34">flags</name></name> <operator pos:start="103:36" pos:end="103:36">&amp;</operator> <name pos:start="103:38" pos:end="103:52">CODEC_FLAG_GRAY</name><operator pos:start="103:53" pos:end="103:53">)</operator></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:25"><block_content pos:start="105:17" pos:end="105:25">

                <continue pos:start="105:17" pos:end="105:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:53"><expr pos:start="107:13" pos:end="107:52"><call pos:start="107:13" pos:end="107:52"><name pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:13">v</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">vc1dsp</name><operator pos:start="107:22" pos:end="107:22">.</operator><name pos:start="107:23" pos:end="107:39">vc1_inv_trans_8x8</name></name><argument_list pos:start="107:40" pos:end="107:52">(<argument pos:start="107:41" pos:end="107:51"><expr pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:41">s</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:48">block</name><index pos:start="107:49" pos:end="107:51">[<expr pos:start="107:50" pos:end="107:50"><name pos:start="107:50" pos:end="107:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:75"><expr pos:start="109:13" pos:end="109:74"><name pos:start="109:13" pos:end="109:15">off</name>  <operator pos:start="109:18" pos:end="109:18">=</operator> <ternary pos:start="109:20" pos:end="109:74"><condition pos:start="109:20" pos:end="109:28"><expr pos:start="109:20" pos:end="109:26"><operator pos:start="109:20" pos:end="109:20">(</operator><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&amp;</operator> <literal type="number" pos:start="109:25" pos:end="109:25">4</literal><operator pos:start="109:26" pos:end="109:26">)</operator></expr> ?</condition><then pos:start="109:30" pos:end="109:30"> <expr pos:start="109:30" pos:end="109:30"><literal type="number" pos:start="109:30" pos:end="109:30">0</literal></expr> </then><else pos:start="109:32" pos:end="109:74">: <expr pos:start="109:34" pos:end="109:74"><operator pos:start="109:34" pos:end="109:34">(</operator><operator pos:start="109:35" pos:end="109:35">(</operator><name pos:start="109:36" pos:end="109:36">i</name> <operator pos:start="109:38" pos:end="109:38">&amp;</operator> <literal type="number" pos:start="109:40" pos:end="109:40">1</literal><operator pos:start="109:41" pos:end="109:41">)</operator> <operator pos:start="109:43" pos:end="109:43">*</operator> <literal type="number" pos:start="109:45" pos:end="109:47">8</literal> <operator pos:start="109:47" pos:end="109:47">+</operator> <operator pos:start="109:49" pos:end="109:49">(</operator><name pos:start="109:50" pos:end="109:50">i</name> <operator pos:start="109:52" pos:end="109:52">&amp;</operator> <literal type="number" pos:start="109:54" pos:end="109:54">2</literal><operator pos:start="109:55" pos:end="109:55">)</operator> <operator pos:start="109:57" pos:end="109:57">*</operator> <literal type="number" pos:start="109:59" pos:end="109:59">4</literal> <operator pos:start="109:61" pos:end="109:61">*</operator> <name pos:start="109:63" pos:end="109:73"><name pos:start="109:63" pos:end="109:63">s</name><operator pos:start="109:64" pos:end="109:65">-&gt;</operator><name pos:start="109:66" pos:end="109:73">linesize</name></name><operator pos:start="109:74" pos:end="109:74">)</operator></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="117:69"><expr pos:start="111:13" pos:end="117:68"><call pos:start="111:13" pos:end="117:68"><name pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:19">idsp</name><operator pos:start="111:20" pos:end="111:20">.</operator><name pos:start="111:21" pos:end="111:45">put_signed_pixels_clamped</name></name><argument_list pos:start="111:46" pos:end="117:68">(<argument pos:start="111:47" pos:end="111:57"><expr pos:start="111:47" pos:end="111:57"><name pos:start="111:47" pos:end="111:57"><name pos:start="111:47" pos:end="111:47">s</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:54">block</name><index pos:start="111:55" pos:end="111:57">[<expr pos:start="111:56" pos:end="111:56"><name pos:start="111:56" pos:end="111:56">i</name></expr>]</index></name></expr></argument>,

                                              <argument pos:start="113:47" pos:end="113:68"><expr pos:start="113:47" pos:end="113:68"><name pos:start="113:47" pos:end="113:62"><name pos:start="113:47" pos:end="113:47">s</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:53">dest</name><index pos:start="113:54" pos:end="113:62">[<expr pos:start="113:55" pos:end="113:61"><name pos:start="113:55" pos:end="113:61">dst_idx</name></expr>]</index></name> <operator pos:start="113:64" pos:end="113:64">+</operator> <name pos:start="113:66" pos:end="113:68">off</name></expr></argument>,

                                              <argument pos:start="115:47" pos:end="117:67"><expr pos:start="115:47" pos:end="117:67"><ternary pos:start="115:47" pos:end="117:67"><condition pos:start="115:47" pos:end="115:55"><expr pos:start="115:47" pos:end="115:53"><operator pos:start="115:47" pos:end="115:47">(</operator><name pos:start="115:48" pos:end="115:48">i</name> <operator pos:start="115:50" pos:end="115:50">&amp;</operator> <literal type="number" pos:start="115:52" pos:end="115:52">4</literal><operator pos:start="115:53" pos:end="115:53">)</operator></expr> ?</condition><then pos:start="115:57" pos:end="115:69"> <expr pos:start="115:57" pos:end="115:69"><name pos:start="115:57" pos:end="115:69"><name pos:start="115:57" pos:end="115:57">s</name><operator pos:start="115:58" pos:end="115:59">-&gt;</operator><name pos:start="115:60" pos:end="115:69">uvlinesize</name></name></expr>

                                                      </then><else pos:start="117:55" pos:end="117:67">: <expr pos:start="117:57" pos:end="117:67"><name pos:start="117:57" pos:end="117:67"><name pos:start="117:57" pos:end="117:57">s</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:67">linesize</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="119:13" pos:end="119:32">// TODO: loop filter</comment>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="231:5">else <block pos:start="123:12" pos:end="231:5">{<block_content pos:start="125:9" pos:end="229:9">

        <expr_stmt pos:start="125:9" pos:end="125:47"><expr pos:start="125:9" pos:end="125:46"><name pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:19">mb_intra</name></name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:42"><name pos:start="125:23" pos:end="125:23">v</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:33">is_intra</name><index pos:start="125:34" pos:end="125:42">[<expr pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:41"><name pos:start="125:35" pos:end="125:35">s</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:41">mb_x</name></name></expr>]</index></name> <operator pos:start="125:44" pos:end="125:44">=</operator> <literal type="number" pos:start="125:46" pos:end="125:46">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:71"><expr pos:start="127:9" pos:end="127:70"><name pos:start="127:9" pos:end="127:54"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:26">current_picture</name><operator pos:start="127:27" pos:end="127:27">.</operator><name pos:start="127:28" pos:end="127:34">mb_type</name><index pos:start="127:35" pos:end="127:54">[<expr pos:start="127:36" pos:end="127:53"><name pos:start="127:36" pos:end="127:41">mb_pos</name> <operator pos:start="127:43" pos:end="127:43">+</operator> <name pos:start="127:45" pos:end="127:53"><name pos:start="127:45" pos:end="127:45">v</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:53">mb_off</name></name></expr>]</index></name> <operator pos:start="127:56" pos:end="127:56">=</operator> <name pos:start="127:58" pos:end="127:70">MB_TYPE_16x16</name></expr>;</expr_stmt>

        <for pos:start="129:9" pos:end="129:69">for <control pos:start="129:13" pos:end="129:31">(<init pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:18"><name pos:start="129:14" pos:end="129:14">i</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</init> <condition pos:start="129:21" pos:end="129:26"><expr pos:start="129:21" pos:end="129:25"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">&lt;</operator> <literal type="number" pos:start="129:25" pos:end="129:25">6</literal></expr>;</condition> <incr pos:start="129:28" pos:end="129:30"><expr pos:start="129:28" pos:end="129:30"><name pos:start="129:28" pos:end="129:28">i</name><operator pos:start="129:29" pos:end="129:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:33" pos:end="129:69"><block_content pos:start="129:33" pos:end="129:69"> <expr_stmt pos:start="129:33" pos:end="129:69"><expr pos:start="129:33" pos:end="129:68"><name pos:start="129:33" pos:end="129:64"><name pos:start="129:33" pos:end="129:33">v</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:42">mb_type</name><index pos:start="129:43" pos:end="129:45">[<expr pos:start="129:44" pos:end="129:44"><literal type="number" pos:start="129:44" pos:end="129:44">0</literal></expr>]</index><index pos:start="129:46" pos:end="129:64">[<expr pos:start="129:47" pos:end="129:63"><name pos:start="129:47" pos:end="129:63"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:60">block_index</name><index pos:start="129:61" pos:end="129:63">[<expr pos:start="129:62" pos:end="129:62"><name pos:start="129:62" pos:end="129:62">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="129:66" pos:end="129:66">=</operator> <literal type="number" pos:start="129:68" pos:end="129:68">0</literal></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="131:9" pos:end="177:9"><if pos:start="131:9" pos:end="147:9">if <condition pos:start="131:12" pos:end="131:28">(<expr pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:22">idx_mbmode</name> <operator pos:start="131:24" pos:end="131:25">&lt;=</operator> <literal type="number" pos:start="131:27" pos:end="131:27">5</literal></expr>)</condition> <block pos:start="131:30" pos:end="147:9">{<block_content pos:start="133:13" pos:end="145:46"> <comment type="line" pos:start="131:32" pos:end="131:38">// 1-MV</comment>

            <expr_stmt pos:start="133:13" pos:end="133:42"><expr pos:start="133:13" pos:end="133:41"><name pos:start="133:13" pos:end="133:17">dmv_x</name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:25">dmv_y</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <name pos:start="133:29" pos:end="133:37">pred_flag</name> <operator pos:start="133:39" pos:end="133:39">=</operator> <literal type="number" pos:start="133:41" pos:end="133:41">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="139:13"><if pos:start="135:13" pos:end="139:13">if <condition pos:start="135:16" pos:end="135:31">(<expr pos:start="135:17" pos:end="135:30"><name pos:start="135:17" pos:end="135:26">idx_mbmode</name> <operator pos:start="135:28" pos:end="135:28">&amp;</operator> <literal type="number" pos:start="135:30" pos:end="135:30">1</literal></expr>)</condition> <block pos:start="135:33" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:69">

                <expr_stmt pos:start="137:17" pos:end="137:69"><expr pos:start="137:17" pos:end="137:68"><call pos:start="137:17" pos:end="137:68"><name pos:start="137:17" pos:end="137:37">get_mvdata_interlaced</name><argument_list pos:start="137:38" pos:end="137:68">(<argument pos:start="137:39" pos:end="137:39"><expr pos:start="137:39" pos:end="137:39"><name pos:start="137:39" pos:end="137:39">v</name></expr></argument>, <argument pos:start="137:42" pos:end="137:47"><expr pos:start="137:42" pos:end="137:47"><operator pos:start="137:42" pos:end="137:42">&amp;</operator><name pos:start="137:43" pos:end="137:47">dmv_x</name></expr></argument>, <argument pos:start="137:50" pos:end="137:55"><expr pos:start="137:50" pos:end="137:55"><operator pos:start="137:50" pos:end="137:50">&amp;</operator><name pos:start="137:51" pos:end="137:55">dmv_y</name></expr></argument>, <argument pos:start="137:58" pos:end="137:67"><expr pos:start="137:58" pos:end="137:67"><operator pos:start="137:58" pos:end="137:58">&amp;</operator><name pos:start="137:59" pos:end="137:67">pred_flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:103"><expr pos:start="141:13" pos:end="141:102"><call pos:start="141:13" pos:end="141:102"><name pos:start="141:13" pos:end="141:26">ff_vc1_pred_mv</name><argument_list pos:start="141:27" pos:end="141:102">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">v</name></expr></argument>, <argument pos:start="141:31" pos:end="141:31"><expr pos:start="141:31" pos:end="141:31"><literal type="number" pos:start="141:31" pos:end="141:31">0</literal></expr></argument>, <argument pos:start="141:34" pos:end="141:38"><expr pos:start="141:34" pos:end="141:38"><name pos:start="141:34" pos:end="141:38">dmv_x</name></expr></argument>, <argument pos:start="141:41" pos:end="141:45"><expr pos:start="141:41" pos:end="141:45"><name pos:start="141:41" pos:end="141:45">dmv_y</name></expr></argument>, <argument pos:start="141:48" pos:end="141:48"><expr pos:start="141:48" pos:end="141:48"><literal type="number" pos:start="141:48" pos:end="141:48">1</literal></expr></argument>, <argument pos:start="141:51" pos:end="141:60"><expr pos:start="141:51" pos:end="141:60"><name pos:start="141:51" pos:end="141:60"><name pos:start="141:51" pos:end="141:51">v</name><operator pos:start="141:52" pos:end="141:53">-&gt;</operator><name pos:start="141:54" pos:end="141:60">range_x</name></name></expr></argument>, <argument pos:start="141:63" pos:end="141:72"><expr pos:start="141:63" pos:end="141:72"><name pos:start="141:63" pos:end="141:72"><name pos:start="141:63" pos:end="141:63">v</name><operator pos:start="141:64" pos:end="141:65">-&gt;</operator><name pos:start="141:66" pos:end="141:72">range_y</name></name></expr></argument>, <argument pos:start="141:75" pos:end="141:87"><expr pos:start="141:75" pos:end="141:87"><name pos:start="141:75" pos:end="141:87"><name pos:start="141:75" pos:end="141:75">v</name><operator pos:start="141:76" pos:end="141:77">-&gt;</operator><name pos:start="141:78" pos:end="141:84">mb_type</name><index pos:start="141:85" pos:end="141:87">[<expr pos:start="141:86" pos:end="141:86"><literal type="number" pos:start="141:86" pos:end="141:86">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:90" pos:end="141:98"><expr pos:start="141:90" pos:end="141:98"><name pos:start="141:90" pos:end="141:98">pred_flag</name></expr></argument>, <argument pos:start="141:101" pos:end="141:101"><expr pos:start="141:101" pos:end="141:101"><literal type="number" pos:start="141:101" pos:end="141:101">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:31"><call pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:25">ff_vc1_mc_1mv</name><argument_list pos:start="143:26" pos:end="143:31">(<argument pos:start="143:27" pos:end="143:27"><expr pos:start="143:27" pos:end="143:27"><name pos:start="143:27" pos:end="143:27">v</name></expr></argument>, <argument pos:start="143:30" pos:end="143:30"><expr pos:start="143:30" pos:end="143:30"><literal type="number" pos:start="143:30" pos:end="143:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:46"><expr pos:start="145:13" pos:end="145:45"><name pos:start="145:13" pos:end="145:25">mb_has_coeffs</name> <operator pos:start="145:27" pos:end="145:27">=</operator> <operator pos:start="145:29" pos:end="145:29">!</operator><operator pos:start="145:30" pos:end="145:30">(</operator><name pos:start="145:31" pos:end="145:40">idx_mbmode</name> <operator pos:start="145:42" pos:end="145:42">&amp;</operator> <literal type="number" pos:start="145:44" pos:end="145:44">2</literal><operator pos:start="145:45" pos:end="145:45">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="147:11" pos:end="177:9">else <block pos:start="147:16" pos:end="177:9">{<block_content pos:start="149:13" pos:end="175:43"> <comment type="line" pos:start="147:18" pos:end="147:24">// 4-MV</comment>

            <expr_stmt pos:start="149:13" pos:end="149:98"><expr pos:start="149:13" pos:end="149:97"><name pos:start="149:13" pos:end="149:23"><name pos:start="149:13" pos:end="149:13">v</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:23">fourmvbp</name></name> <operator pos:start="149:25" pos:end="149:25">=</operator> <call pos:start="149:27" pos:end="149:97"><name pos:start="149:27" pos:end="149:34">get_vlc2</name><argument_list pos:start="149:35" pos:end="149:97">(<argument pos:start="149:36" pos:end="149:37"><expr pos:start="149:36" pos:end="149:37"><name pos:start="149:36" pos:end="149:37">gb</name></expr></argument>, <argument pos:start="149:40" pos:end="149:61"><expr pos:start="149:40" pos:end="149:61"><name pos:start="149:40" pos:end="149:61"><name pos:start="149:40" pos:end="149:40">v</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:54">fourmvbp_vlc</name><operator pos:start="149:55" pos:end="149:56">-&gt;</operator><name pos:start="149:57" pos:end="149:61">table</name></name></expr></argument>, <argument pos:start="149:64" pos:end="149:93"><expr pos:start="149:64" pos:end="149:93"><name pos:start="149:64" pos:end="149:93">VC1_4MV_BLOCK_PATTERN_VLC_BITS</name></expr></argument>, <argument pos:start="149:96" pos:end="149:96"><expr pos:start="149:96" pos:end="149:96"><literal type="number" pos:start="149:96" pos:end="149:96">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="151:13" pos:end="173:13">for <control pos:start="151:17" pos:end="151:35">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">i</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:30"><expr pos:start="151:25" pos:end="151:29"><name pos:start="151:25" pos:end="151:25">i</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <literal type="number" pos:start="151:29" pos:end="151:29">6</literal></expr>;</condition> <incr pos:start="151:32" pos:end="151:34"><expr pos:start="151:32" pos:end="151:34"><name pos:start="151:32" pos:end="151:32">i</name><operator pos:start="151:33" pos:end="151:34">++</operator></expr></incr>)</control> <block pos:start="151:37" pos:end="173:13">{<block_content pos:start="153:17" pos:end="171:47">

                <if_stmt pos:start="153:17" pos:end="171:47"><if pos:start="153:17" pos:end="169:17">if <condition pos:start="153:20" pos:end="153:26">(<expr pos:start="153:21" pos:end="153:25"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <literal type="number" pos:start="153:25" pos:end="153:25">4</literal></expr>)</condition> <block pos:start="153:28" pos:end="169:17">{<block_content pos:start="155:21" pos:end="167:51">

                    <expr_stmt pos:start="155:21" pos:end="155:50"><expr pos:start="155:21" pos:end="155:49"><name pos:start="155:21" pos:end="155:25">dmv_x</name> <operator pos:start="155:27" pos:end="155:27">=</operator> <name pos:start="155:29" pos:end="155:33">dmv_y</name> <operator pos:start="155:35" pos:end="155:35">=</operator> <name pos:start="155:37" pos:end="155:45">pred_flag</name> <operator pos:start="155:47" pos:end="155:47">=</operator> <literal type="number" pos:start="155:49" pos:end="155:49">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:59"><expr pos:start="157:21" pos:end="157:58"><name pos:start="157:21" pos:end="157:23">val</name>   <operator pos:start="157:27" pos:end="157:27">=</operator> <operator pos:start="157:29" pos:end="157:29">(</operator><operator pos:start="157:30" pos:end="157:30">(</operator><name pos:start="157:31" pos:end="157:41"><name pos:start="157:31" pos:end="157:31">v</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:41">fourmvbp</name></name> <operator pos:start="157:43" pos:end="157:44">&gt;&gt;</operator> <operator pos:start="157:46" pos:end="157:46">(</operator><literal type="number" pos:start="157:47" pos:end="157:49">3</literal> <operator pos:start="157:49" pos:end="157:49">-</operator> <name pos:start="157:51" pos:end="157:51">i</name><operator pos:start="157:52" pos:end="157:52">)</operator><operator pos:start="157:53" pos:end="157:53">)</operator> <operator pos:start="157:55" pos:end="157:55">&amp;</operator> <literal type="number" pos:start="157:57" pos:end="157:57">1</literal><operator pos:start="157:58" pos:end="157:58">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="159:21" pos:end="163:21"><if pos:start="159:21" pos:end="163:21">if <condition pos:start="159:24" pos:end="159:28">(<expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">val</name></expr>)</condition> <block pos:start="159:30" pos:end="163:21">{<block_content pos:start="161:25" pos:end="161:77">

                        <expr_stmt pos:start="161:25" pos:end="161:77"><expr pos:start="161:25" pos:end="161:76"><call pos:start="161:25" pos:end="161:76"><name pos:start="161:25" pos:end="161:45">get_mvdata_interlaced</name><argument_list pos:start="161:46" pos:end="161:76">(<argument pos:start="161:47" pos:end="161:47"><expr pos:start="161:47" pos:end="161:47"><name pos:start="161:47" pos:end="161:47">v</name></expr></argument>, <argument pos:start="161:50" pos:end="161:55"><expr pos:start="161:50" pos:end="161:55"><operator pos:start="161:50" pos:end="161:50">&amp;</operator><name pos:start="161:51" pos:end="161:55">dmv_x</name></expr></argument>, <argument pos:start="161:58" pos:end="161:63"><expr pos:start="161:58" pos:end="161:63"><operator pos:start="161:58" pos:end="161:58">&amp;</operator><name pos:start="161:59" pos:end="161:63">dmv_y</name></expr></argument>, <argument pos:start="161:66" pos:end="161:75"><expr pos:start="161:66" pos:end="161:75"><operator pos:start="161:66" pos:end="161:66">&amp;</operator><name pos:start="161:67" pos:end="161:75">pred_flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:111"><expr pos:start="165:21" pos:end="165:110"><call pos:start="165:21" pos:end="165:110"><name pos:start="165:21" pos:end="165:34">ff_vc1_pred_mv</name><argument_list pos:start="165:35" pos:end="165:110">(<argument pos:start="165:36" pos:end="165:36"><expr pos:start="165:36" pos:end="165:36"><name pos:start="165:36" pos:end="165:36">v</name></expr></argument>, <argument pos:start="165:39" pos:end="165:39"><expr pos:start="165:39" pos:end="165:39"><name pos:start="165:39" pos:end="165:39">i</name></expr></argument>, <argument pos:start="165:42" pos:end="165:46"><expr pos:start="165:42" pos:end="165:46"><name pos:start="165:42" pos:end="165:46">dmv_x</name></expr></argument>, <argument pos:start="165:49" pos:end="165:53"><expr pos:start="165:49" pos:end="165:53"><name pos:start="165:49" pos:end="165:53">dmv_y</name></expr></argument>, <argument pos:start="165:56" pos:end="165:56"><expr pos:start="165:56" pos:end="165:56"><literal type="number" pos:start="165:56" pos:end="165:56">0</literal></expr></argument>, <argument pos:start="165:59" pos:end="165:68"><expr pos:start="165:59" pos:end="165:68"><name pos:start="165:59" pos:end="165:68"><name pos:start="165:59" pos:end="165:59">v</name><operator pos:start="165:60" pos:end="165:61">-&gt;</operator><name pos:start="165:62" pos:end="165:68">range_x</name></name></expr></argument>, <argument pos:start="165:71" pos:end="165:80"><expr pos:start="165:71" pos:end="165:80"><name pos:start="165:71" pos:end="165:80"><name pos:start="165:71" pos:end="165:71">v</name><operator pos:start="165:72" pos:end="165:73">-&gt;</operator><name pos:start="165:74" pos:end="165:80">range_y</name></name></expr></argument>, <argument pos:start="165:83" pos:end="165:95"><expr pos:start="165:83" pos:end="165:95"><name pos:start="165:83" pos:end="165:95"><name pos:start="165:83" pos:end="165:83">v</name><operator pos:start="165:84" pos:end="165:85">-&gt;</operator><name pos:start="165:86" pos:end="165:92">mb_type</name><index pos:start="165:93" pos:end="165:95">[<expr pos:start="165:94" pos:end="165:94"><literal type="number" pos:start="165:94" pos:end="165:94">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:98" pos:end="165:106"><expr pos:start="165:98" pos:end="165:106"><name pos:start="165:98" pos:end="165:106">pred_flag</name></expr></argument>, <argument pos:start="165:109" pos:end="165:109"><expr pos:start="165:109" pos:end="165:109"><literal type="number" pos:start="165:109" pos:end="165:109">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:51"><expr pos:start="167:21" pos:end="167:50"><call pos:start="167:21" pos:end="167:50"><name pos:start="167:21" pos:end="167:38">ff_vc1_mc_4mv_luma</name><argument_list pos:start="167:39" pos:end="167:50">(<argument pos:start="167:40" pos:end="167:40"><expr pos:start="167:40" pos:end="167:40"><name pos:start="167:40" pos:end="167:40">v</name></expr></argument>, <argument pos:start="167:43" pos:end="167:43"><expr pos:start="167:43" pos:end="167:43"><name pos:start="167:43" pos:end="167:43">i</name></expr></argument>, <argument pos:start="167:46" pos:end="167:46"><expr pos:start="167:46" pos:end="167:46"><literal type="number" pos:start="167:46" pos:end="167:46">0</literal></expr></argument>, <argument pos:start="167:49" pos:end="167:49"><expr pos:start="167:49" pos:end="167:49"><literal type="number" pos:start="167:49" pos:end="167:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="169:19" pos:end="171:47">else if <condition pos:start="169:27" pos:end="169:34">(<expr pos:start="169:28" pos:end="169:33"><name pos:start="169:28" pos:end="169:28">i</name> <operator pos:start="169:30" pos:end="169:31">==</operator> <literal type="number" pos:start="169:33" pos:end="169:33">4</literal></expr>)</condition><block type="pseudo" pos:start="171:21" pos:end="171:47"><block_content pos:start="171:21" pos:end="171:47">

                    <expr_stmt pos:start="171:21" pos:end="171:47"><expr pos:start="171:21" pos:end="171:46"><call pos:start="171:21" pos:end="171:46"><name pos:start="171:21" pos:end="171:40">ff_vc1_mc_4mv_chroma</name><argument_list pos:start="171:41" pos:end="171:46">(<argument pos:start="171:42" pos:end="171:42"><expr pos:start="171:42" pos:end="171:42"><name pos:start="171:42" pos:end="171:42">v</name></expr></argument>, <argument pos:start="171:45" pos:end="171:45"><expr pos:start="171:45" pos:end="171:45"><literal type="number" pos:start="171:45" pos:end="171:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="175:13" pos:end="175:43"><expr pos:start="175:13" pos:end="175:42"><name pos:start="175:13" pos:end="175:25">mb_has_coeffs</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:38">idx_mbmode</name> <operator pos:start="175:40" pos:end="175:40">&amp;</operator> <literal type="number" pos:start="175:42" pos:end="175:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="179:9" pos:end="181:87"><if pos:start="179:9" pos:end="181:87">if <condition pos:start="179:12" pos:end="179:26">(<expr pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:25">mb_has_coeffs</name></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:87"><block_content pos:start="181:13" pos:end="181:87">

            <expr_stmt pos:start="181:13" pos:end="181:87"><expr pos:start="181:13" pos:end="181:86"><name pos:start="181:13" pos:end="181:15">cbp</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <literal type="number" pos:start="181:19" pos:end="181:21">1</literal> <operator pos:start="181:21" pos:end="181:21">+</operator> <call pos:start="181:23" pos:end="181:86"><name pos:start="181:23" pos:end="181:30">get_vlc2</name><argument_list pos:start="181:31" pos:end="181:86">(<argument pos:start="181:32" pos:end="181:39"><expr pos:start="181:32" pos:end="181:39"><operator pos:start="181:32" pos:end="181:32">&amp;</operator><name pos:start="181:33" pos:end="181:39"><name pos:start="181:33" pos:end="181:33">v</name><operator pos:start="181:34" pos:end="181:35">-&gt;</operator><name pos:start="181:36" pos:end="181:36">s</name><operator pos:start="181:37" pos:end="181:37">.</operator><name pos:start="181:38" pos:end="181:39">gb</name></name></expr></argument>, <argument pos:start="181:42" pos:end="181:60"><expr pos:start="181:42" pos:end="181:60"><name pos:start="181:42" pos:end="181:60"><name pos:start="181:42" pos:end="181:42">v</name><operator pos:start="181:43" pos:end="181:44">-&gt;</operator><name pos:start="181:45" pos:end="181:53">cbpcy_vlc</name><operator pos:start="181:54" pos:end="181:55">-&gt;</operator><name pos:start="181:56" pos:end="181:60">table</name></name></expr></argument>, <argument pos:start="181:63" pos:end="181:82"><expr pos:start="181:63" pos:end="181:82"><name pos:start="181:63" pos:end="181:82">VC1_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="181:85" pos:end="181:85"><expr pos:start="181:85" pos:end="181:85"><literal type="number" pos:start="181:85" pos:end="181:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="183:9" pos:end="187:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:16">(<expr pos:start="183:13" pos:end="183:15"><name pos:start="183:13" pos:end="183:15">cbp</name></expr>)</condition> <block pos:start="183:18" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:25">

            <expr_stmt pos:start="185:13" pos:end="185:25"><expr pos:start="185:13" pos:end="185:24"><call pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:22">GET_MQUANT</name><argument_list pos:start="185:23" pos:end="185:24">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:57"><expr pos:start="189:9" pos:end="189:56"><name pos:start="189:9" pos:end="189:47"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:26">current_picture</name><operator pos:start="189:27" pos:end="189:27">.</operator><name pos:start="189:28" pos:end="189:39">qscale_table</name><index pos:start="189:40" pos:end="189:47">[<expr pos:start="189:41" pos:end="189:46"><name pos:start="189:41" pos:end="189:46">mb_pos</name></expr>]</index></name> <operator pos:start="189:49" pos:end="189:49">=</operator> <name pos:start="189:51" pos:end="189:56">mquant</name></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="195:9"><if pos:start="191:9" pos:end="195:9">if <condition pos:start="191:12" pos:end="191:29">(<expr pos:start="191:13" pos:end="191:28"><operator pos:start="191:13" pos:end="191:13">!</operator><name pos:start="191:14" pos:end="191:21"><name pos:start="191:14" pos:end="191:14">v</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:21">ttmbf</name></name> <operator pos:start="191:23" pos:end="191:24">&amp;&amp;</operator> <name pos:start="191:26" pos:end="191:28">cbp</name></expr>)</condition> <block pos:start="191:31" pos:end="195:9">{<block_content pos:start="193:13" pos:end="193:90">

            <expr_stmt pos:start="193:13" pos:end="193:90"><expr pos:start="193:13" pos:end="193:89"><name pos:start="193:13" pos:end="193:16">ttmb</name> <operator pos:start="193:18" pos:end="193:18">=</operator> <call pos:start="193:20" pos:end="193:89"><name pos:start="193:20" pos:end="193:27">get_vlc2</name><argument_list pos:start="193:28" pos:end="193:89">(<argument pos:start="193:29" pos:end="193:30"><expr pos:start="193:29" pos:end="193:30"><name pos:start="193:29" pos:end="193:30">gb</name></expr></argument>, <argument pos:start="193:33" pos:end="193:66"><expr pos:start="193:33" pos:end="193:66"><name pos:start="193:33" pos:end="193:60"><name pos:start="193:33" pos:end="193:47">ff_vc1_ttmb_vlc</name><index pos:start="193:48" pos:end="193:60">[<expr pos:start="193:49" pos:end="193:59"><name pos:start="193:49" pos:end="193:59"><name pos:start="193:49" pos:end="193:49">v</name><operator pos:start="193:50" pos:end="193:51">-&gt;</operator><name pos:start="193:52" pos:end="193:59">tt_index</name></name></expr>]</index></name><operator pos:start="193:61" pos:end="193:61">.</operator><name pos:start="193:62" pos:end="193:66">table</name></expr></argument>, <argument pos:start="193:69" pos:end="193:85"><expr pos:start="193:69" pos:end="193:85"><name pos:start="193:69" pos:end="193:85">VC1_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="193:88" pos:end="193:88"><expr pos:start="193:88" pos:end="193:88"><literal type="number" pos:start="193:88" pos:end="193:88">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:20"><expr pos:start="197:9" pos:end="197:19"><name pos:start="197:9" pos:end="197:15">dst_idx</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <literal type="number" pos:start="197:19" pos:end="197:19">0</literal></expr>;</expr_stmt>

        <for pos:start="199:9" pos:end="229:9">for <control pos:start="199:13" pos:end="199:31">(<init pos:start="199:14" pos:end="199:19"><expr pos:start="199:14" pos:end="199:18"><name pos:start="199:14" pos:end="199:14">i</name> <operator pos:start="199:16" pos:end="199:16">=</operator> <literal type="number" pos:start="199:18" pos:end="199:18">0</literal></expr>;</init> <condition pos:start="199:21" pos:end="199:26"><expr pos:start="199:21" pos:end="199:25"><name pos:start="199:21" pos:end="199:21">i</name> <operator pos:start="199:23" pos:end="199:23">&lt;</operator> <literal type="number" pos:start="199:25" pos:end="199:25">6</literal></expr>;</condition> <incr pos:start="199:28" pos:end="199:30"><expr pos:start="199:28" pos:end="199:30"><name pos:start="199:28" pos:end="199:28">i</name><operator pos:start="199:29" pos:end="199:30">++</operator></expr></incr>)</control> <block pos:start="199:33" pos:end="229:9">{<block_content pos:start="201:13" pos:end="227:13">

            <expr_stmt pos:start="201:13" pos:end="201:48"><expr pos:start="201:13" pos:end="201:47"><name pos:start="201:13" pos:end="201:43"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:21">dc_val</name><index pos:start="201:22" pos:end="201:24">[<expr pos:start="201:23" pos:end="201:23"><literal type="number" pos:start="201:23" pos:end="201:23">0</literal></expr>]</index><index pos:start="201:25" pos:end="201:43">[<expr pos:start="201:26" pos:end="201:42"><name pos:start="201:26" pos:end="201:42"><name pos:start="201:26" pos:end="201:26">s</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:39">block_index</name><index pos:start="201:40" pos:end="201:42">[<expr pos:start="201:41" pos:end="201:41"><name pos:start="201:41" pos:end="201:41">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="201:45" pos:end="201:45">=</operator> <literal type="number" pos:start="201:47" pos:end="201:47">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:30"><expr pos:start="203:13" pos:end="203:29"><name pos:start="203:13" pos:end="203:19">dst_idx</name> <operator pos:start="203:21" pos:end="203:22">+=</operator> <name pos:start="203:24" pos:end="203:24">i</name> <operator pos:start="203:26" pos:end="203:27">&gt;&gt;</operator> <literal type="number" pos:start="203:29" pos:end="203:29">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:41"><expr pos:start="205:13" pos:end="205:40"><name pos:start="205:13" pos:end="205:15">val</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <operator pos:start="205:19" pos:end="205:19">(</operator><operator pos:start="205:20" pos:end="205:20">(</operator><name pos:start="205:21" pos:end="205:23">cbp</name> <operator pos:start="205:25" pos:end="205:26">&gt;&gt;</operator> <operator pos:start="205:28" pos:end="205:28">(</operator><literal type="number" pos:start="205:29" pos:end="205:31">5</literal> <operator pos:start="205:31" pos:end="205:31">-</operator> <name pos:start="205:33" pos:end="205:33">i</name><operator pos:start="205:34" pos:end="205:34">)</operator><operator pos:start="205:35" pos:end="205:35">)</operator> <operator pos:start="205:37" pos:end="205:37">&amp;</operator> <literal type="number" pos:start="205:39" pos:end="205:39">1</literal><operator pos:start="205:40" pos:end="205:40">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:72"><expr pos:start="207:13" pos:end="207:71"><name pos:start="207:13" pos:end="207:15">off</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <ternary pos:start="207:19" pos:end="207:71"><condition pos:start="207:19" pos:end="207:27"><expr pos:start="207:19" pos:end="207:25"><operator pos:start="207:19" pos:end="207:19">(</operator><name pos:start="207:20" pos:end="207:20">i</name> <operator pos:start="207:22" pos:end="207:22">&amp;</operator> <literal type="number" pos:start="207:24" pos:end="207:24">4</literal><operator pos:start="207:25" pos:end="207:25">)</operator></expr> ?</condition><then pos:start="207:29" pos:end="207:29"> <expr pos:start="207:29" pos:end="207:29"><literal type="number" pos:start="207:29" pos:end="207:29">0</literal></expr> </then><else pos:start="207:31" pos:end="207:71">: <expr pos:start="207:33" pos:end="207:71"><operator pos:start="207:33" pos:end="207:33">(</operator><name pos:start="207:34" pos:end="207:34">i</name> <operator pos:start="207:36" pos:end="207:36">&amp;</operator> <literal type="number" pos:start="207:38" pos:end="207:38">1</literal><operator pos:start="207:39" pos:end="207:39">)</operator> <operator pos:start="207:41" pos:end="207:41">*</operator> <literal type="number" pos:start="207:43" pos:end="207:45">8</literal> <operator pos:start="207:45" pos:end="207:45">+</operator> <operator pos:start="207:47" pos:end="207:47">(</operator><name pos:start="207:48" pos:end="207:48">i</name> <operator pos:start="207:50" pos:end="207:50">&amp;</operator> <literal type="number" pos:start="207:52" pos:end="207:52">2</literal><operator pos:start="207:53" pos:end="207:53">)</operator> <operator pos:start="207:55" pos:end="207:55">*</operator> <literal type="number" pos:start="207:57" pos:end="207:57">4</literal> <operator pos:start="207:59" pos:end="207:59">*</operator> <name pos:start="207:61" pos:end="207:71"><name pos:start="207:61" pos:end="207:61">s</name><operator pos:start="207:62" pos:end="207:63">-&gt;</operator><name pos:start="207:64" pos:end="207:71">linesize</name></name></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="227:13"><if pos:start="209:13" pos:end="227:13">if <condition pos:start="209:16" pos:end="209:20">(<expr pos:start="209:17" pos:end="209:19"><name pos:start="209:17" pos:end="209:19">val</name></expr>)</condition> <block pos:start="209:22" pos:end="227:13">{<block_content pos:start="211:17" pos:end="225:32">

                <expr_stmt pos:start="211:17" pos:end="219:52"><expr pos:start="211:17" pos:end="219:51"><name pos:start="211:17" pos:end="211:19">pat</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <call pos:start="211:23" pos:end="219:51"><name pos:start="211:23" pos:end="211:40">vc1_decode_p_block</name><argument_list pos:start="211:41" pos:end="219:51">(<argument pos:start="211:42" pos:end="211:42"><expr pos:start="211:42" pos:end="211:42"><name pos:start="211:42" pos:end="211:42">v</name></expr></argument>, <argument pos:start="211:45" pos:end="211:55"><expr pos:start="211:45" pos:end="211:55"><name pos:start="211:45" pos:end="211:55"><name pos:start="211:45" pos:end="211:45">s</name><operator pos:start="211:46" pos:end="211:47">-&gt;</operator><name pos:start="211:48" pos:end="211:52">block</name><index pos:start="211:53" pos:end="211:55">[<expr pos:start="211:54" pos:end="211:54"><name pos:start="211:54" pos:end="211:54">i</name></expr>]</index></name></expr></argument>, <argument pos:start="211:58" pos:end="211:58"><expr pos:start="211:58" pos:end="211:58"><name pos:start="211:58" pos:end="211:58">i</name></expr></argument>, <argument pos:start="211:61" pos:end="211:66"><expr pos:start="211:61" pos:end="211:66"><name pos:start="211:61" pos:end="211:66">mquant</name></expr></argument>, <argument pos:start="211:69" pos:end="211:72"><expr pos:start="211:69" pos:end="211:72"><name pos:start="211:69" pos:end="211:72">ttmb</name></expr></argument>,

                                         <argument pos:start="213:42" pos:end="213:52"><expr pos:start="213:42" pos:end="213:52"><name pos:start="213:42" pos:end="213:52">first_block</name></expr></argument>, <argument pos:start="213:55" pos:end="213:76"><expr pos:start="213:55" pos:end="213:76"><name pos:start="213:55" pos:end="213:70"><name pos:start="213:55" pos:end="213:55">s</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:61">dest</name><index pos:start="213:62" pos:end="213:70">[<expr pos:start="213:63" pos:end="213:69"><name pos:start="213:63" pos:end="213:69">dst_idx</name></expr>]</index></name> <operator pos:start="213:72" pos:end="213:72">+</operator> <name pos:start="213:74" pos:end="213:76">off</name></expr></argument>,

                                         <argument pos:start="215:42" pos:end="215:78"><expr pos:start="215:42" pos:end="215:78"><ternary pos:start="215:42" pos:end="215:78"><condition pos:start="215:42" pos:end="215:50"><expr pos:start="215:42" pos:end="215:48"><operator pos:start="215:42" pos:end="215:42">(</operator><name pos:start="215:43" pos:end="215:43">i</name> <operator pos:start="215:45" pos:end="215:45">&amp;</operator> <literal type="number" pos:start="215:47" pos:end="215:47">4</literal><operator pos:start="215:48" pos:end="215:48">)</operator></expr> ?</condition><then pos:start="215:52" pos:end="215:64"> <expr pos:start="215:52" pos:end="215:64"><name pos:start="215:52" pos:end="215:64"><name pos:start="215:52" pos:end="215:52">s</name><operator pos:start="215:53" pos:end="215:54">-&gt;</operator><name pos:start="215:55" pos:end="215:64">uvlinesize</name></name></expr> </then><else pos:start="215:66" pos:end="215:78">: <expr pos:start="215:68" pos:end="215:78"><name pos:start="215:68" pos:end="215:78"><name pos:start="215:68" pos:end="215:68">s</name><operator pos:start="215:69" pos:end="215:70">-&gt;</operator><name pos:start="215:71" pos:end="215:78">linesize</name></name></expr></else></ternary></expr></argument>,

                                         <argument pos:start="217:42" pos:end="217:80"><expr pos:start="217:42" pos:end="217:80"><operator pos:start="217:42" pos:end="217:42">(</operator><name pos:start="217:43" pos:end="217:43">i</name> <operator pos:start="217:45" pos:end="217:45">&amp;</operator> <literal type="number" pos:start="217:47" pos:end="217:47">4</literal><operator pos:start="217:48" pos:end="217:48">)</operator> <operator pos:start="217:50" pos:end="217:51">&amp;&amp;</operator> <operator pos:start="217:53" pos:end="217:53">(</operator><name pos:start="217:54" pos:end="217:61"><name pos:start="217:54" pos:end="217:54">s</name><operator pos:start="217:55" pos:end="217:56">-&gt;</operator><name pos:start="217:57" pos:end="217:61">flags</name></name> <operator pos:start="217:63" pos:end="217:63">&amp;</operator> <name pos:start="217:65" pos:end="217:79">CODEC_FLAG_GRAY</name><operator pos:start="217:80" pos:end="217:80">)</operator></expr></argument>,

                                         <argument pos:start="219:42" pos:end="219:50"><expr pos:start="219:42" pos:end="219:50"><operator pos:start="219:42" pos:end="219:42">&amp;</operator><name pos:start="219:43" pos:end="219:50">block_tt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:45"><expr pos:start="221:17" pos:end="221:44"><name pos:start="221:17" pos:end="221:25">block_cbp</name> <operator pos:start="221:27" pos:end="221:28">|=</operator> <name pos:start="221:30" pos:end="221:32">pat</name> <operator pos:start="221:34" pos:end="221:35">&lt;&lt;</operator> <operator pos:start="221:37" pos:end="221:37">(</operator><name pos:start="221:38" pos:end="221:38">i</name> <operator pos:start="221:40" pos:end="221:41">&lt;&lt;</operator> <literal type="number" pos:start="221:43" pos:end="221:43">2</literal><operator pos:start="221:44" pos:end="221:44">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="223:17" pos:end="223:53"><if pos:start="223:17" pos:end="223:53">if <condition pos:start="223:20" pos:end="223:42">(<expr pos:start="223:21" pos:end="223:41"><operator pos:start="223:21" pos:end="223:21">!</operator><name pos:start="223:22" pos:end="223:29"><name pos:start="223:22" pos:end="223:22">v</name><operator pos:start="223:23" pos:end="223:24">-&gt;</operator><name pos:start="223:25" pos:end="223:29">ttmbf</name></name> <operator pos:start="223:31" pos:end="223:32">&amp;&amp;</operator> <name pos:start="223:34" pos:end="223:37">ttmb</name> <operator pos:start="223:39" pos:end="223:39">&lt;</operator> <literal type="number" pos:start="223:41" pos:end="223:41">8</literal></expr>)</condition><block type="pseudo" pos:start="223:44" pos:end="223:53"><block_content pos:start="223:44" pos:end="223:53"> <expr_stmt pos:start="223:44" pos:end="223:53"><expr pos:start="223:44" pos:end="223:52"><name pos:start="223:44" pos:end="223:47">ttmb</name> <operator pos:start="223:49" pos:end="223:49">=</operator> <operator pos:start="223:51" pos:end="223:51">-</operator><literal type="number" pos:start="223:52" pos:end="223:52">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:32"><expr pos:start="225:17" pos:end="225:31"><name pos:start="225:17" pos:end="225:27">first_block</name> <operator pos:start="225:29" pos:end="225:29">=</operator> <literal type="number" pos:start="225:31" pos:end="225:31">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="233:5" pos:end="235:91"><if pos:start="233:5" pos:end="235:91">if <condition pos:start="233:8" pos:end="233:35">(<expr pos:start="233:9" pos:end="233:34"><name pos:start="233:9" pos:end="233:15"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:15">mb_x</name></name> <operator pos:start="233:17" pos:end="233:18">==</operator> <name pos:start="233:20" pos:end="233:30"><name pos:start="233:20" pos:end="233:20">s</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:30">mb_width</name></name> <operator pos:start="233:32" pos:end="233:32">-</operator> <literal type="number" pos:start="233:34" pos:end="233:34">1</literal></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:91"><block_content pos:start="235:9" pos:end="235:91">

        <expr_stmt pos:start="235:9" pos:end="235:91"><expr pos:start="235:9" pos:end="235:90"><call pos:start="235:9" pos:end="235:90"><name pos:start="235:9" pos:end="235:15">memmove</name><argument_list pos:start="235:16" pos:end="235:90">(<argument pos:start="235:17" pos:end="235:32"><expr pos:start="235:17" pos:end="235:32"><name pos:start="235:17" pos:end="235:32"><name pos:start="235:17" pos:end="235:17">v</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:32">is_intra_base</name></name></expr></argument>, <argument pos:start="235:35" pos:end="235:45"><expr pos:start="235:35" pos:end="235:45"><name pos:start="235:35" pos:end="235:45"><name pos:start="235:35" pos:end="235:35">v</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:45">is_intra</name></name></expr></argument>, <argument pos:start="235:48" pos:end="235:89"><expr pos:start="235:48" pos:end="235:89"><sizeof pos:start="235:48" pos:end="235:74">sizeof<argument_list pos:start="235:54" pos:end="235:74">(<argument pos:start="235:55" pos:end="235:73"><expr pos:start="235:55" pos:end="235:73"><name pos:start="235:55" pos:end="235:73"><name pos:start="235:55" pos:end="235:55">v</name><operator pos:start="235:56" pos:end="235:57">-&gt;</operator><name pos:start="235:58" pos:end="235:70">is_intra_base</name><index pos:start="235:71" pos:end="235:73">[<expr pos:start="235:72" pos:end="235:72"><literal type="number" pos:start="235:72" pos:end="235:72">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="235:76" pos:end="235:76">*</operator> <name pos:start="235:78" pos:end="235:89"><name pos:start="235:78" pos:end="235:78">s</name><operator pos:start="235:79" pos:end="235:80">-&gt;</operator><name pos:start="235:81" pos:end="235:89">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
