<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13048.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">blk_free</name><parameter_list pos:start="1:20" pos:end="1:45">(<parameter pos:start="1:21" pos:end="1:44"><decl pos:start="1:21" pos:end="1:44"><type pos:start="1:21" pos:end="1:44"><name pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:36">XenDevice</name></name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:78"><decl pos:start="5:5" pos:end="5:77"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:77">= <expr pos:start="5:32" pos:end="5:77"><call pos:start="5:32" pos:end="5:77"><name pos:start="5:32" pos:end="5:43">container_of</name><argument_list pos:start="5:44" pos:end="5:77">(<argument pos:start="5:45" pos:end="5:50"><expr pos:start="5:45" pos:end="5:50"><name pos:start="5:45" pos:end="5:50">xendev</name></expr></argument>, <argument pos:start="5:53" pos:end="5:68"><expr pos:start="5:53" pos:end="5:68">struct <name pos:start="5:60" pos:end="5:68">XenBlkDev</name></expr></argument>, <argument pos:start="5:71" pos:end="5:76"><expr pos:start="5:71" pos:end="5:76"><name pos:start="5:71" pos:end="5:76">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:16">ioreq</name></name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">ioreq</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="21:5">while <condition pos:start="11:11" pos:end="11:42">(<expr pos:start="11:12" pos:end="11:41"><operator pos:start="11:12" pos:end="11:12">!</operator><call pos:start="11:13" pos:end="11:41"><name pos:start="11:13" pos:end="11:22">LIST_EMPTY</name><argument_list pos:start="11:23" pos:end="11:41">(<argument pos:start="11:24" pos:end="11:40"><expr pos:start="11:24" pos:end="11:40"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:30">blkdev</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:40">freelist</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:44" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:25">

	<expr_stmt pos:start="13:9" pos:end="13:46"><expr pos:start="13:9" pos:end="13:45"><name pos:start="13:9" pos:end="13:13">ioreq</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:45"><name pos:start="13:17" pos:end="13:26">LIST_FIRST</name><argument_list pos:start="13:27" pos:end="13:45">(<argument pos:start="13:28" pos:end="13:44"><expr pos:start="13:28" pos:end="13:44"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:34">blkdev</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:44">freelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><call pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:19">LIST_REMOVE</name><argument_list pos:start="15:20" pos:end="15:32">(<argument pos:start="15:21" pos:end="15:25"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:25">ioreq</name></expr></argument>, <argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><call pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:26">qemu_iovec_destroy</name><argument_list pos:start="17:27" pos:end="17:37">(<argument pos:start="17:28" pos:end="17:36"><expr pos:start="17:28" pos:end="17:36"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:33">ioreq</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:36">v</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><call pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:17">qemu_free</name><argument_list pos:start="19:18" pos:end="19:24">(<argument pos:start="19:19" pos:end="19:23"><expr pos:start="19:19" pos:end="19:23"><name pos:start="19:19" pos:end="19:23">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><call pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:13">qemu_free</name><argument_list pos:start="25:14" pos:end="25:29">(<argument pos:start="25:15" pos:end="25:28"><expr pos:start="25:15" pos:end="25:28"><name pos:start="25:15" pos:end="25:28"><name pos:start="25:15" pos:end="25:20">blkdev</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:28">params</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><call pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:13">qemu_free</name><argument_list pos:start="27:14" pos:end="27:27">(<argument pos:start="27:15" pos:end="27:26"><expr pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:20">blkdev</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:26">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><call pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:13">qemu_free</name><argument_list pos:start="29:14" pos:end="29:27">(<argument pos:start="29:15" pos:end="29:26"><expr pos:start="29:15" pos:end="29:26"><name pos:start="29:15" pos:end="29:26"><name pos:start="29:15" pos:end="29:20">blkdev</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:26">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><call pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:13">qemu_free</name><argument_list pos:start="31:14" pos:end="31:26">(<argument pos:start="31:15" pos:end="31:25"><expr pos:start="31:15" pos:end="31:25"><name pos:start="31:15" pos:end="31:25"><name pos:start="31:15" pos:end="31:20">blkdev</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:25">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:13">qemu_free</name><argument_list pos:start="33:14" pos:end="33:30">(<argument pos:start="33:15" pos:end="33:29"><expr pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:20">blkdev</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:29">devtype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><call pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:18">qemu_bh_delete</name><argument_list pos:start="35:19" pos:end="35:30">(<argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:25">blkdev</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
