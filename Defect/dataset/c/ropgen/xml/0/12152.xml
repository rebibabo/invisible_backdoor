<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12152.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:27">gen_jcc1</name><parameter_list pos:start="1:28" pos:end="1:59">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">DisasContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:50"><decl pos:start="1:46" pos:end="1:50"><type pos:start="1:46" pos:end="1:50"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:50">b</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:58"><decl pos:start="1:53" pos:end="1:58"><type pos:start="1:53" pos:end="1:58"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:58">l1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">CCPrepare</name></type> <name pos:start="5:15" pos:end="5:16">cc</name> <init pos:start="5:18" pos:end="5:49">= <expr pos:start="5:20" pos:end="5:49"><call pos:start="5:20" pos:end="5:49"><name pos:start="5:20" pos:end="5:33">gen_prepare_cc</name><argument_list pos:start="5:34" pos:end="5:49">(<argument pos:start="5:35" pos:end="5:35"><expr pos:start="5:35" pos:end="5:35"><name pos:start="5:35" pos:end="5:35">s</name></expr></argument>, <argument pos:start="5:38" pos:end="5:38"><expr pos:start="5:38" pos:end="5:38"><name pos:start="5:38" pos:end="5:38">b</name></expr></argument>, <argument pos:start="5:41" pos:end="5:48"><expr pos:start="5:41" pos:end="5:48"><name pos:start="5:41" pos:end="5:48"><name pos:start="5:41" pos:end="5:45">cpu_T</name><index pos:start="5:46" pos:end="5:48">[<expr pos:start="5:47" pos:end="5:47"><literal type="number" pos:start="5:47" pos:end="5:47">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:20">gen_update_cc_op</name><argument_list pos:start="9:21" pos:end="9:23">(<argument pos:start="9:22" pos:end="9:22"><expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:10">cc</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:15">mask</name></name> <operator pos:start="11:17" pos:end="11:18">!=</operator> <operator pos:start="11:20" pos:end="11:20">-</operator><literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:26">

        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:23">tcg_gen_andi_tl</name><argument_list pos:start="13:24" pos:end="13:50">(<argument pos:start="13:25" pos:end="13:32"><expr pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:29">cpu_T</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="13:35" pos:end="13:40"><expr pos:start="13:35" pos:end="13:40"><name pos:start="13:35" pos:end="13:40"><name pos:start="13:35" pos:end="13:36">cc</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:40">reg</name></name></expr></argument>, <argument pos:start="13:43" pos:end="13:49"><expr pos:start="13:43" pos:end="13:49"><name pos:start="13:43" pos:end="13:49"><name pos:start="13:43" pos:end="13:44">cc</name><operator pos:start="13:45" pos:end="13:45">.</operator><name pos:start="13:46" pos:end="13:49">mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:10">cc</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:14">reg</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:25"><name pos:start="15:18" pos:end="15:22">cpu_T</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:13">set_cc_op</name><argument_list pos:start="19:14" pos:end="19:31">(<argument pos:start="19:15" pos:end="19:15"><expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">s</name></expr></argument>, <argument pos:start="19:18" pos:end="19:30"><expr pos:start="19:18" pos:end="19:30"><name pos:start="19:18" pos:end="19:30">CC_OP_DYNAMIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:10">cc</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:19">use_reg2</name></name></expr>)</condition> <block pos:start="21:22" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:56">

        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><call pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:25">tcg_gen_brcond_tl</name><argument_list pos:start="23:26" pos:end="23:55">(<argument pos:start="23:27" pos:end="23:33"><expr pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:28">cc</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:33">cond</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:41"><expr pos:start="23:36" pos:end="23:41"><name pos:start="23:36" pos:end="23:41"><name pos:start="23:36" pos:end="23:37">cc</name><operator pos:start="23:38" pos:end="23:38">.</operator><name pos:start="23:39" pos:end="23:41">reg</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:50"><expr pos:start="23:44" pos:end="23:50"><name pos:start="23:44" pos:end="23:50"><name pos:start="23:44" pos:end="23:45">cc</name><operator pos:start="23:46" pos:end="23:46">.</operator><name pos:start="23:47" pos:end="23:50">reg2</name></name></expr></argument>, <argument pos:start="23:53" pos:end="23:54"><expr pos:start="23:53" pos:end="23:54"><name pos:start="23:53" pos:end="23:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:56">

        <expr_stmt pos:start="27:9" pos:end="27:56"><expr pos:start="27:9" pos:end="27:55"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:26">tcg_gen_brcondi_tl</name><argument_list pos:start="27:27" pos:end="27:55">(<argument pos:start="27:28" pos:end="27:34"><expr pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:29">cc</name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:34">cond</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:38">cc</name><operator pos:start="27:39" pos:end="27:39">.</operator><name pos:start="27:40" pos:end="27:42">reg</name></name></expr></argument>, <argument pos:start="27:45" pos:end="27:50"><expr pos:start="27:45" pos:end="27:50"><name pos:start="27:45" pos:end="27:50"><name pos:start="27:45" pos:end="27:46">cc</name><operator pos:start="27:47" pos:end="27:47">.</operator><name pos:start="27:48" pos:end="27:50">imm</name></name></expr></argument>, <argument pos:start="27:53" pos:end="27:54"><expr pos:start="27:53" pos:end="27:54"><name pos:start="27:53" pos:end="27:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
