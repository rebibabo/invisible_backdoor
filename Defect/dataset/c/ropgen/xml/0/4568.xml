<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4568.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:12">if_encap</name><parameter_list pos:start="1:13" pos:end="1:44">(<parameter pos:start="1:14" pos:end="1:25"><decl pos:start="1:14" pos:end="1:25"><type pos:start="1:14" pos:end="1:25"><name pos:start="1:14" pos:end="1:18">Slirp</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:25">slirp</name></decl></parameter>, <parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38"><name pos:start="1:28" pos:end="1:33">struct</name> <name pos:start="1:35" pos:end="1:38">mbuf</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ifm</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:21"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:21">[<expr pos:start="5:17" pos:end="5:20"><literal type="number" pos:start="5:17" pos:end="5:20">1600</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:17">ethhdr</name></name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">eh</name> <init pos:start="7:23" pos:end="7:44">= <expr pos:start="7:25" pos:end="7:44"><operator pos:start="7:25" pos:end="7:25">(</operator>struct <name pos:start="7:33" pos:end="7:38">ethhdr</name> <operator pos:start="7:40" pos:end="7:40">*</operator><operator pos:start="7:41" pos:end="7:41">)</operator><name pos:start="7:42" pos:end="7:44">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:19">ethaddr</name><index pos:start="9:20" pos:end="9:29">[<expr pos:start="9:21" pos:end="9:28"><name pos:start="9:21" pos:end="9:28">ETH_ALEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:19"><name pos:start="11:11" pos:end="11:16">struct</name> <name pos:start="11:18" pos:end="11:19">ip</name></name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">iph</name> <init pos:start="11:26" pos:end="11:57">= <expr pos:start="11:28" pos:end="11:57"><operator pos:start="11:28" pos:end="11:28">(</operator><specifier pos:start="11:29" pos:end="11:33">const</specifier> struct <name pos:start="11:42" pos:end="11:43">ip</name> <operator pos:start="11:45" pos:end="11:45">*</operator><operator pos:start="11:46" pos:end="11:46">)</operator><name pos:start="11:47" pos:end="11:57"><name pos:start="11:47" pos:end="11:49">ifm</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:57">m_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">ifm</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">m_len</name></name> <operator pos:start="17:20" pos:end="17:20">+</operator> <name pos:start="17:22" pos:end="17:29">ETH_HLEN</name> <operator pos:start="17:31" pos:end="17:31">&gt;</operator> <sizeof pos:start="17:33" pos:end="17:43">sizeof<argument_list pos:start="17:39" pos:end="17:43">(<argument pos:start="17:40" pos:end="17:42"><expr pos:start="17:40" pos:end="17:42"><name pos:start="17:40" pos:end="17:42">buf</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="17:46" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="25:5" pos:end="49:5">switch <condition pos:start="25:12" pos:end="25:22">(<expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:15">iph</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">ip_v</name></name></expr>)</condition> <block pos:start="25:24" pos:end="49:5">{<block_content pos:start="27:5" pos:end="47:14">

    <case pos:start="27:5" pos:end="27:19">case <expr pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:18">IPVERSION</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:48"><name pos:start="29:15" pos:end="29:23">if_encap4</name><argument_list pos:start="29:24" pos:end="29:48">(<argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">slirp</name></expr></argument>, <argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">ifm</name></expr></argument>, <argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">eh</name></expr></argument>, <argument pos:start="29:41" pos:end="29:47"><expr pos:start="29:41" pos:end="29:47"><name pos:start="29:41" pos:end="29:47">ethaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">2</literal></expr>)</condition> <block pos:start="31:22" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>



    <default pos:start="41:5" pos:end="41:12">default:</default>

        <comment type="block" pos:start="43:9" pos:end="43:60">/* Do not assert while we don't manage IP6VERSION */</comment>

        <comment type="block" pos:start="45:9" pos:end="45:24">/* assert(0); */</comment>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><call pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:41">(<argument pos:start="53:12" pos:end="53:21"><expr pos:start="53:12" pos:end="53:21"><name pos:start="53:12" pos:end="53:21"><name pos:start="53:12" pos:end="53:13">eh</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:21">h_dest</name></name></expr></argument>, <argument pos:start="53:24" pos:end="53:30"><expr pos:start="53:24" pos:end="53:30"><name pos:start="53:24" pos:end="53:30">ethaddr</name></expr></argument>, <argument pos:start="53:33" pos:end="53:40"><expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:40">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="59:68"><expr pos:start="55:5" pos:end="59:67"><call pos:start="55:5" pos:end="59:67"><name pos:start="55:5" pos:end="55:14">DEBUG_ARGS</name><argument_list pos:start="55:15" pos:end="59:67">(<argument pos:start="55:16" pos:end="59:66"><expr pos:start="55:16" pos:end="59:66"><operator pos:start="55:16" pos:end="55:16">(</operator><name pos:start="55:17" pos:end="55:19">dfd</name><operator pos:start="55:20" pos:end="55:20">,</operator> <literal type="string" pos:start="55:22" pos:end="55:61">" src = %02x:%02x:%02x:%02x:%02x:%02x\n"</literal><operator pos:start="55:62" pos:end="55:62">,</operator>

                <name pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:18">eh</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:28">h_source</name><index pos:start="57:29" pos:end="57:31">[<expr pos:start="57:30" pos:end="57:30"><literal type="number" pos:start="57:30" pos:end="57:30">0</literal></expr>]</index></name><operator pos:start="57:32" pos:end="57:32">,</operator> <name pos:start="57:34" pos:end="57:48"><name pos:start="57:34" pos:end="57:35">eh</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:45">h_source</name><index pos:start="57:46" pos:end="57:48">[<expr pos:start="57:47" pos:end="57:47"><literal type="number" pos:start="57:47" pos:end="57:47">1</literal></expr>]</index></name><operator pos:start="57:49" pos:end="57:49">,</operator> <name pos:start="57:51" pos:end="57:65"><name pos:start="57:51" pos:end="57:52">eh</name><operator pos:start="57:53" pos:end="57:54">-&gt;</operator><name pos:start="57:55" pos:end="57:62">h_source</name><index pos:start="57:63" pos:end="57:65">[<expr pos:start="57:64" pos:end="57:64"><literal type="number" pos:start="57:64" pos:end="57:64">2</literal></expr>]</index></name><operator pos:start="57:66" pos:end="57:66">,</operator>

                <name pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:18">eh</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:28">h_source</name><index pos:start="59:29" pos:end="59:31">[<expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">3</literal></expr>]</index></name><operator pos:start="59:32" pos:end="59:32">,</operator> <name pos:start="59:34" pos:end="59:48"><name pos:start="59:34" pos:end="59:35">eh</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:45">h_source</name><index pos:start="59:46" pos:end="59:48">[<expr pos:start="59:47" pos:end="59:47"><literal type="number" pos:start="59:47" pos:end="59:47">4</literal></expr>]</index></name><operator pos:start="59:49" pos:end="59:49">,</operator> <name pos:start="59:51" pos:end="59:65"><name pos:start="59:51" pos:end="59:52">eh</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:62">h_source</name><index pos:start="59:63" pos:end="59:65">[<expr pos:start="59:64" pos:end="59:64"><literal type="number" pos:start="59:64" pos:end="59:64">5</literal></expr>]</index></name><operator pos:start="59:66" pos:end="59:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="65:62"><expr pos:start="61:5" pos:end="65:61"><call pos:start="61:5" pos:end="65:61"><name pos:start="61:5" pos:end="61:14">DEBUG_ARGS</name><argument_list pos:start="61:15" pos:end="65:61">(<argument pos:start="61:16" pos:end="65:60"><expr pos:start="61:16" pos:end="65:60"><operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:19">dfd</name><operator pos:start="61:20" pos:end="61:20">,</operator> <literal type="string" pos:start="61:22" pos:end="61:61">" dst = %02x:%02x:%02x:%02x:%02x:%02x\n"</literal><operator pos:start="61:62" pos:end="61:62">,</operator>

                <name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:18">eh</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:26">h_dest</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr>]</index></name><operator pos:start="63:30" pos:end="63:30">,</operator> <name pos:start="63:32" pos:end="63:44"><name pos:start="63:32" pos:end="63:33">eh</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:41">h_dest</name><index pos:start="63:42" pos:end="63:44">[<expr pos:start="63:43" pos:end="63:43"><literal type="number" pos:start="63:43" pos:end="63:43">1</literal></expr>]</index></name><operator pos:start="63:45" pos:end="63:45">,</operator> <name pos:start="63:47" pos:end="63:59"><name pos:start="63:47" pos:end="63:48">eh</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:56">h_dest</name><index pos:start="63:57" pos:end="63:59">[<expr pos:start="63:58" pos:end="63:58"><literal type="number" pos:start="63:58" pos:end="63:58">2</literal></expr>]</index></name><operator pos:start="63:60" pos:end="63:60">,</operator>

                <name pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:18">eh</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:26">h_dest</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">3</literal></expr>]</index></name><operator pos:start="65:30" pos:end="65:30">,</operator> <name pos:start="65:32" pos:end="65:44"><name pos:start="65:32" pos:end="65:33">eh</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:41">h_dest</name><index pos:start="65:42" pos:end="65:44">[<expr pos:start="65:43" pos:end="65:43"><literal type="number" pos:start="65:43" pos:end="65:43">4</literal></expr>]</index></name><operator pos:start="65:45" pos:end="65:45">,</operator> <name pos:start="65:47" pos:end="65:59"><name pos:start="65:47" pos:end="65:48">eh</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:56">h_dest</name><index pos:start="65:57" pos:end="65:59">[<expr pos:start="65:58" pos:end="65:58"><literal type="number" pos:start="65:58" pos:end="65:58">5</literal></expr>]</index></name><operator pos:start="65:60" pos:end="65:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:65"><expr pos:start="67:5" pos:end="67:64"><call pos:start="67:5" pos:end="67:64"><name pos:start="67:5" pos:end="67:10">memcpy</name><argument_list pos:start="67:11" pos:end="67:64">(<argument pos:start="67:12" pos:end="67:38"><expr pos:start="67:12" pos:end="67:38"><name pos:start="67:12" pos:end="67:14">buf</name> <operator pos:start="67:16" pos:end="67:16">+</operator> <sizeof pos:start="67:18" pos:end="67:38">sizeof<argument_list pos:start="67:24" pos:end="67:38">(<argument pos:start="67:25" pos:end="67:37"><expr pos:start="67:25" pos:end="67:37">struct <name pos:start="67:32" pos:end="67:37">ethhdr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:41" pos:end="67:51"><expr pos:start="67:41" pos:end="67:51"><name pos:start="67:41" pos:end="67:51"><name pos:start="67:41" pos:end="67:43">ifm</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:51">m_data</name></name></expr></argument>, <argument pos:start="67:54" pos:end="67:63"><expr pos:start="67:54" pos:end="67:63"><name pos:start="67:54" pos:end="67:63"><name pos:start="67:54" pos:end="67:56">ifm</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:63">m_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:60"><expr pos:start="69:5" pos:end="69:59"><call pos:start="69:5" pos:end="69:59"><name pos:start="69:5" pos:end="69:16">slirp_output</name><argument_list pos:start="69:17" pos:end="69:59">(<argument pos:start="69:18" pos:end="69:30"><expr pos:start="69:18" pos:end="69:30"><name pos:start="69:18" pos:end="69:30"><name pos:start="69:18" pos:end="69:22">slirp</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:30">opaque</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:35">buf</name></expr></argument>, <argument pos:start="69:38" pos:end="69:58"><expr pos:start="69:38" pos:end="69:58"><name pos:start="69:38" pos:end="69:47"><name pos:start="69:38" pos:end="69:40">ifm</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:47">m_len</name></name> <operator pos:start="69:49" pos:end="69:49">+</operator> <name pos:start="69:51" pos:end="69:58">ETH_HLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
