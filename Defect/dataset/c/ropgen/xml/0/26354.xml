<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26354.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_video_frame</name><parameter_list pos:start="1:27" pos:end="1:100">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:37">VideoState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">is</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">AVFrame</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">int64_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pts</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:81">AVPacket</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">pkt</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:99"><decl pos:start="1:89" pos:end="1:99"><type pos:start="1:89" pos:end="1:99"><name pos:start="1:89" pos:end="1:91">int</name> <modifier pos:start="1:93" pos:end="1:93">*</modifier></type><name pos:start="1:94" pos:end="1:99">serial</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">got_picture</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:58">(<expr pos:start="9:9" pos:end="9:57"><call pos:start="9:9" pos:end="9:53"><name pos:start="9:9" pos:end="9:24">packet_queue_get</name><argument_list pos:start="9:25" pos:end="9:53">(<argument pos:start="9:26" pos:end="9:36"><expr pos:start="9:26" pos:end="9:36"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:36"><name pos:start="9:27" pos:end="9:28">is</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:36">videoq</name></name></expr></argument>, <argument pos:start="9:39" pos:end="9:41"><expr pos:start="9:39" pos:end="9:41"><name pos:start="9:39" pos:end="9:41">pkt</name></expr></argument>, <argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">1</literal></expr></argument>, <argument pos:start="9:47" pos:end="9:52"><expr pos:start="9:47" pos:end="9:52"><name pos:start="9:47" pos:end="9:52">serial</name></expr></argument>)</argument_list></call> <operator pos:start="9:55" pos:end="9:55">&lt;</operator> <literal type="number" pos:start="9:57" pos:end="9:57">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="47:5"><if pos:start="15:5" pos:end="47:5">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">pkt</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:17">data</name></name> <operator pos:start="15:19" pos:end="15:20">==</operator> <name pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:30">flush_pkt</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:35">data</name></name></expr>)</condition> <block pos:start="15:38" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:17">

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:29">avcodec_flush_buffers</name><argument_list pos:start="17:30" pos:end="17:50">(<argument pos:start="17:31" pos:end="17:49"><expr pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:32">is</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:42">video_st</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:49">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:21">SDL_LockMutex</name><argument_list pos:start="21:22" pos:end="21:38">(<argument pos:start="21:23" pos:end="21:37"><expr pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:24">is</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="23:9" pos:end="23:110">// Make sure there are no long delay timers (ideally we should just flush the queue but that's harder)</comment>

        <while pos:start="25:9" pos:end="29:9">while <condition pos:start="25:15" pos:end="25:59">(<expr pos:start="25:16" pos:end="25:58"><name pos:start="25:16" pos:end="25:29"><name pos:start="25:16" pos:end="25:17">is</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:29">pictq_size</name></name> <operator pos:start="25:31" pos:end="25:32">&amp;&amp;</operator> <operator pos:start="25:34" pos:end="25:34">!</operator><name pos:start="25:35" pos:end="25:58"><name pos:start="25:35" pos:end="25:36">is</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:44">videoq</name><operator pos:start="25:45" pos:end="25:45">.</operator><name pos:start="25:46" pos:end="25:58">abort_request</name></name></expr>)</condition> <block pos:start="25:61" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:58">

            <expr_stmt pos:start="27:13" pos:end="27:58"><expr pos:start="27:13" pos:end="27:57"><call pos:start="27:13" pos:end="27:57"><name pos:start="27:13" pos:end="27:24">SDL_CondWait</name><argument_list pos:start="27:25" pos:end="27:57">(<argument pos:start="27:26" pos:end="27:39"><expr pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:27">is</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:39">pictq_cond</name></name></expr></argument>, <argument pos:start="27:42" pos:end="27:56"><expr pos:start="27:42" pos:end="27:56"><name pos:start="27:42" pos:end="27:56"><name pos:start="27:42" pos:end="27:43">is</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:56">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:10">is</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:29">video_current_pos</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <operator pos:start="31:33" pos:end="31:33">-</operator><literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:10">is</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:26">frame_last_pts</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:43">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:10">is</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:31">frame_last_duration</name></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <literal type="number" pos:start="35:35" pos:end="35:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:10">is</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:23">frame_timer</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <operator pos:start="37:27" pos:end="37:27">(</operator><name pos:start="37:28" pos:end="37:33">double</name><operator pos:start="37:34" pos:end="37:34">)</operator><call pos:start="37:35" pos:end="37:46"><name pos:start="37:35" pos:end="37:44">av_gettime</name><argument_list pos:start="37:45" pos:end="37:46">()</argument_list></call> <operator pos:start="37:48" pos:end="37:48">/</operator> <literal type="number" pos:start="37:50" pos:end="37:58">1000000.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:10">is</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:34">frame_last_dropped_pts</name></name> <operator pos:start="39:36" pos:end="39:36">=</operator> <name pos:start="39:38" pos:end="39:51">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><call pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:23">SDL_UnlockMutex</name><argument_list pos:start="41:24" pos:end="41:40">(<argument pos:start="41:25" pos:end="41:39"><expr pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:26">is</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:17"><if pos:start="51:5" pos:end="53:17">if<condition pos:start="51:7" pos:end="51:80">(<expr pos:start="51:8" pos:end="51:79"><call pos:start="51:8" pos:end="51:75"><name pos:start="51:8" pos:end="51:28">avcodec_decode_video2</name><argument_list pos:start="51:29" pos:end="51:75">(<argument pos:start="51:30" pos:end="51:48"><expr pos:start="51:30" pos:end="51:48"><name pos:start="51:30" pos:end="51:48"><name pos:start="51:30" pos:end="51:31">is</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:41">video_st</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:48">codec</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:55"><expr pos:start="51:51" pos:end="51:55"><name pos:start="51:51" pos:end="51:55">frame</name></expr></argument>, <argument pos:start="51:58" pos:end="51:69"><expr pos:start="51:58" pos:end="51:69"><operator pos:start="51:58" pos:end="51:58">&amp;</operator><name pos:start="51:59" pos:end="51:69">got_picture</name></expr></argument>, <argument pos:start="51:72" pos:end="51:74"><expr pos:start="51:72" pos:end="51:74"><name pos:start="51:72" pos:end="51:74">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="51:77" pos:end="51:77">&lt;</operator> <literal type="number" pos:start="51:79" pos:end="51:79">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:17"><block_content pos:start="53:9" pos:end="53:17">

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="125:5"><if pos:start="57:5" pos:end="125:5">if <condition pos:start="57:8" pos:end="57:20">(<expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:19">got_picture</name></expr>)</condition> <block pos:start="57:22" pos:end="125:5">{<block_content pos:start="59:9" pos:end="123:19">

        <decl_stmt pos:start="59:9" pos:end="59:20"><decl pos:start="59:9" pos:end="59:19"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:15">ret</name> <init pos:start="59:17" pos:end="59:19">= <expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="63:9" pos:end="75:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:38">(<expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:31">decoder_reorder_pts</name> <operator pos:start="63:33" pos:end="63:34">==</operator> <operator pos:start="63:36" pos:end="63:36">-</operator><literal type="number" pos:start="63:37" pos:end="63:37">1</literal></expr>)</condition> <block pos:start="63:40" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:61">

            <expr_stmt pos:start="65:13" pos:end="65:61"><expr pos:start="65:13" pos:end="65:60"><operator pos:start="65:13" pos:end="65:13">*</operator><name pos:start="65:14" pos:end="65:16">pts</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:60"><name pos:start="65:20" pos:end="65:53">av_frame_get_best_effort_timestamp</name><argument_list pos:start="65:54" pos:end="65:60">(<argument pos:start="65:55" pos:end="65:59"><expr pos:start="65:55" pos:end="65:59"><name pos:start="65:55" pos:end="65:59">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="71:9">else if <condition pos:start="67:19" pos:end="67:39">(<expr pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:38">decoder_reorder_pts</name></expr>)</condition> <block pos:start="67:41" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:34">

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:16">pts</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:33"><name pos:start="69:20" pos:end="69:24">frame</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:33">pkt_pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="75:9">else <block pos:start="71:16" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:34">

            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><operator pos:start="73:13" pos:end="73:13">*</operator><name pos:start="73:14" pos:end="73:16">pts</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:33"><name pos:start="73:20" pos:end="73:24">frame</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:33">pkt_dts</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:35">(<expr pos:start="79:13" pos:end="79:34"><operator pos:start="79:13" pos:end="79:13">*</operator><name pos:start="79:14" pos:end="79:16">pts</name> <operator pos:start="79:18" pos:end="79:19">==</operator> <name pos:start="79:21" pos:end="79:34">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="79:37" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:21">

            <expr_stmt pos:start="81:13" pos:end="81:21"><expr pos:start="81:13" pos:end="81:20"><operator pos:start="81:13" pos:end="81:13">*</operator><name pos:start="81:14" pos:end="81:16">pts</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="87:9" pos:end="119:9"><if pos:start="87:9" pos:end="119:9">if <condition pos:start="87:12" pos:end="87:91">(<expr pos:start="87:13" pos:end="87:90"><name pos:start="87:13" pos:end="87:21">framedrop</name><operator pos:start="87:22" pos:end="87:22">&gt;</operator><literal type="number" pos:start="87:23" pos:end="87:23">0</literal> <operator pos:start="87:25" pos:end="87:26">||</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:37">framedrop</name> <operator pos:start="87:39" pos:end="87:40">&amp;&amp;</operator> <call pos:start="87:42" pos:end="87:65"><name pos:start="87:42" pos:end="87:61">get_master_sync_type</name><argument_list pos:start="87:62" pos:end="87:65">(<argument pos:start="87:63" pos:end="87:64"><expr pos:start="87:63" pos:end="87:64"><name pos:start="87:63" pos:end="87:64">is</name></expr></argument>)</argument_list></call> <operator pos:start="87:67" pos:end="87:68">!=</operator> <name pos:start="87:70" pos:end="87:89">AV_SYNC_VIDEO_MASTER</name><operator pos:start="87:90" pos:end="87:90">)</operator></expr>)</condition> <block pos:start="87:93" pos:end="119:9">{<block_content pos:start="89:13" pos:end="117:45">

            <expr_stmt pos:start="89:13" pos:end="89:43"><expr pos:start="89:13" pos:end="89:42"><call pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:25">SDL_LockMutex</name><argument_list pos:start="89:26" pos:end="89:42">(<argument pos:start="89:27" pos:end="89:41"><expr pos:start="89:27" pos:end="89:41"><name pos:start="89:27" pos:end="89:41"><name pos:start="89:27" pos:end="89:28">is</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="115:13"><if pos:start="91:13" pos:end="115:13">if <condition pos:start="91:16" pos:end="91:61">(<expr pos:start="91:17" pos:end="91:60"><name pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:18">is</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:34">frame_last_pts</name></name> <operator pos:start="91:36" pos:end="91:37">!=</operator> <name pos:start="91:39" pos:end="91:52">AV_NOPTS_VALUE</name> <operator pos:start="91:54" pos:end="91:55">&amp;&amp;</operator> <operator pos:start="91:57" pos:end="91:57">*</operator><name pos:start="91:58" pos:end="91:60">pts</name></expr>)</condition> <block pos:start="91:63" pos:end="115:13">{<block_content pos:start="93:17" pos:end="113:17">

                <decl_stmt pos:start="93:17" pos:end="93:78"><decl pos:start="93:17" pos:end="93:77"><type pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:22">double</name></type> <name pos:start="93:24" pos:end="93:32">clockdiff</name> <init pos:start="93:34" pos:end="93:77">= <expr pos:start="93:36" pos:end="93:77"><call pos:start="93:36" pos:end="93:54"><name pos:start="93:36" pos:end="93:50">get_video_clock</name><argument_list pos:start="93:51" pos:end="93:54">(<argument pos:start="93:52" pos:end="93:53"><expr pos:start="93:52" pos:end="93:53"><name pos:start="93:52" pos:end="93:53">is</name></expr></argument>)</argument_list></call> <operator pos:start="93:56" pos:end="93:56">-</operator> <call pos:start="93:58" pos:end="93:77"><name pos:start="93:58" pos:end="93:73">get_master_clock</name><argument_list pos:start="93:74" pos:end="93:77">(<argument pos:start="93:75" pos:end="93:76"><expr pos:start="93:75" pos:end="93:76"><name pos:start="93:75" pos:end="93:76">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="95:17" pos:end="95:69"><decl pos:start="95:17" pos:end="95:68"><type pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">double</name></type> <name pos:start="95:24" pos:end="95:27">dpts</name> <init pos:start="95:29" pos:end="95:68">= <expr pos:start="95:31" pos:end="95:68"><call pos:start="95:31" pos:end="95:61"><name pos:start="95:31" pos:end="95:36">av_q2d</name><argument_list pos:start="95:37" pos:end="95:61">(<argument pos:start="95:38" pos:end="95:60"><expr pos:start="95:38" pos:end="95:60"><name pos:start="95:38" pos:end="95:60"><name pos:start="95:38" pos:end="95:39">is</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:49">video_st</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:60">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:63" pos:end="95:63">*</operator> <operator pos:start="95:65" pos:end="95:65">*</operator><name pos:start="95:66" pos:end="95:68">pts</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="97:17" pos:end="97:59"><decl pos:start="97:17" pos:end="97:58"><type pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:22">double</name></type> <name pos:start="97:24" pos:end="97:30">ptsdiff</name> <init pos:start="97:32" pos:end="97:58">= <expr pos:start="97:34" pos:end="97:58"><name pos:start="97:34" pos:end="97:37">dpts</name> <operator pos:start="97:39" pos:end="97:39">-</operator> <name pos:start="97:41" pos:end="97:58"><name pos:start="97:41" pos:end="97:42">is</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:58">frame_last_pts</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="99:17" pos:end="113:17"><if pos:start="99:17" pos:end="113:17">if <condition pos:start="99:20" pos:end="103:75">(<expr pos:start="99:21" pos:end="103:74"><call pos:start="99:21" pos:end="99:35"><name pos:start="99:21" pos:end="99:24">fabs</name><argument_list pos:start="99:25" pos:end="99:35">(<argument pos:start="99:26" pos:end="99:34"><expr pos:start="99:26" pos:end="99:34"><name pos:start="99:26" pos:end="99:34">clockdiff</name></expr></argument>)</argument_list></call> <operator pos:start="99:37" pos:end="99:37">&lt;</operator> <name pos:start="99:39" pos:end="99:57">AV_NOSYNC_THRESHOLD</name> <operator pos:start="99:59" pos:end="99:60">&amp;&amp;</operator>

                     <name pos:start="101:22" pos:end="101:28">ptsdiff</name> <operator pos:start="101:30" pos:end="101:30">&gt;</operator> <literal type="number" pos:start="101:32" pos:end="101:32">0</literal> <operator pos:start="101:34" pos:end="101:35">&amp;&amp;</operator> <name pos:start="101:37" pos:end="101:43">ptsdiff</name> <operator pos:start="101:45" pos:end="101:45">&lt;</operator> <name pos:start="101:47" pos:end="101:65">AV_NOSYNC_THRESHOLD</name> <operator pos:start="101:67" pos:end="101:68">&amp;&amp;</operator>

                     <name pos:start="103:22" pos:end="103:30">clockdiff</name> <operator pos:start="103:32" pos:end="103:32">+</operator> <name pos:start="103:34" pos:end="103:40">ptsdiff</name> <operator pos:start="103:42" pos:end="103:42">-</operator> <name pos:start="103:44" pos:end="103:70"><name pos:start="103:44" pos:end="103:45">is</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:70">frame_last_filter_delay</name></name> <operator pos:start="103:72" pos:end="103:72">&lt;</operator> <literal type="number" pos:start="103:74" pos:end="103:74">0</literal></expr>)</condition> <block pos:start="103:77" pos:end="113:17">{<block_content pos:start="105:21" pos:end="111:28">

                    <expr_stmt pos:start="105:21" pos:end="105:58"><expr pos:start="105:21" pos:end="105:57"><name pos:start="105:21" pos:end="105:46"><name pos:start="105:21" pos:end="105:22">is</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:46">frame_last_dropped_pos</name></name> <operator pos:start="105:48" pos:end="105:48">=</operator> <name pos:start="105:50" pos:end="105:57"><name pos:start="105:50" pos:end="105:52">pkt</name><operator pos:start="105:53" pos:end="105:54">-&gt;</operator><name pos:start="105:55" pos:end="105:57">pos</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:54"><expr pos:start="107:21" pos:end="107:53"><name pos:start="107:21" pos:end="107:46"><name pos:start="107:21" pos:end="107:22">is</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:46">frame_last_dropped_pts</name></name> <operator pos:start="107:48" pos:end="107:48">=</operator> <name pos:start="107:50" pos:end="107:53">dpts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:44"><expr pos:start="109:21" pos:end="109:43"><name pos:start="109:21" pos:end="109:41"><name pos:start="109:21" pos:end="109:22">is</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:41">frame_drops_early</name></name><operator pos:start="109:42" pos:end="109:43">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:28"><expr pos:start="111:21" pos:end="111:27"><name pos:start="111:21" pos:end="111:23">ret</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <literal type="number" pos:start="111:27" pos:end="111:27">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:45"><expr pos:start="117:13" pos:end="117:44"><call pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:27">SDL_UnlockMutex</name><argument_list pos:start="117:28" pos:end="117:44">(<argument pos:start="117:29" pos:end="117:43"><expr pos:start="117:29" pos:end="117:43"><name pos:start="117:29" pos:end="117:43"><name pos:start="117:29" pos:end="117:30">is</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="123:9" pos:end="123:19">return <expr pos:start="123:16" pos:end="123:18"><name pos:start="123:16" pos:end="123:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
