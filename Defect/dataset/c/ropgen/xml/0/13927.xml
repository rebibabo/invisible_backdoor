<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13927.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:51">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, 

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:36"><decl pos:start="5:25" pos:end="5:36"><type pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:31">uint8_t</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:36">buf</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:50"><decl pos:start="5:39" pos:end="5:50"><type pos:start="5:39" pos:end="5:50"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:50">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="123:1">{<block_content pos:start="9:5" pos:end="121:44">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:15">MDECContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier> <specifier pos:start="9:19" pos:end="9:23">const</specifier></type> <name pos:start="9:25" pos:end="9:25">a</name> <init pos:start="9:27" pos:end="9:44">= <expr pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:44"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">picture</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:44"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier> <specifier pos:start="13:15" pos:end="13:19">const</specifier></type> <name pos:start="13:21" pos:end="13:21">p</name><init pos:start="13:22" pos:end="13:44">= <expr pos:start="13:24" pos:end="13:44"><operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:31">AVFrame</name><operator pos:start="13:32" pos:end="13:32">*</operator><operator pos:start="13:33" pos:end="13:33">)</operator><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:44"><name pos:start="13:35" pos:end="13:35">a</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:44">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:39">/* special case for last picture */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:16">buf_size</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>)</condition> <block pos:start="21:24" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:40"><if pos:start="29:5" pos:end="31:40">if<condition pos:start="29:7" pos:end="29:18">(<expr pos:start="29:8" pos:end="29:17"><name pos:start="29:8" pos:end="29:17"><name pos:start="29:8" pos:end="29:8">p</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:14">data</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:40"><block_content pos:start="31:9" pos:end="31:40">

        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:29">release_buffer</name></name><argument_list pos:start="31:30" pos:end="31:39">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">avctx</name></expr></argument>, <argument pos:start="31:38" pos:end="31:38"><expr pos:start="31:38" pos:end="31:38"><name pos:start="31:38" pos:end="31:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:5">p</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:16">reference</name></name><operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:39">(<expr pos:start="37:8" pos:end="37:38"><call pos:start="37:8" pos:end="37:34"><name pos:start="37:8" pos:end="37:24"><name pos:start="37:8" pos:end="37:12">avctx</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:24">get_buffer</name></name><argument_list pos:start="37:25" pos:end="37:34">(<argument pos:start="37:26" pos:end="37:30"><expr pos:start="37:26" pos:end="37:30"><name pos:start="37:26" pos:end="37:30">avctx</name></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">p</name></expr></argument>)</argument_list></call> <operator pos:start="37:36" pos:end="37:36">&lt;</operator> <literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>)</condition><block pos:start="37:40" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><call pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:60">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:59"><expr pos:start="39:37" pos:end="39:59"><literal type="string" pos:start="39:37" pos:end="39:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">p</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">pict_type</name></name><operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:24">I_TYPE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">p</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">key_frame</name></name><operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="53:21"><expr pos:start="49:5" pos:end="53:20"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:5">a</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">last_dc</name><index pos:start="49:15" pos:end="49:17">[<expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>]</index></name><operator pos:start="49:18" pos:end="49:18">=</operator>

    <name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:5">a</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:14">last_dc</name><index pos:start="51:15" pos:end="51:17">[<expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>]</index></name><operator pos:start="51:18" pos:end="51:18">=</operator>

    <name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:5">a</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:14">last_dc</name><index pos:start="53:15" pos:end="53:17">[<expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">2</literal></expr>]</index></name><operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:130"><expr pos:start="57:5" pos:end="57:129"><name pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:5">a</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:23">bitstream_buffer</name></name><operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:129"><name pos:start="57:26" pos:end="57:40">av_fast_realloc</name><argument_list pos:start="57:41" pos:end="57:129">(<argument pos:start="57:42" pos:end="57:60"><expr pos:start="57:42" pos:end="57:60"><name pos:start="57:42" pos:end="57:60"><name pos:start="57:42" pos:end="57:42">a</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:60">bitstream_buffer</name></name></expr></argument>, <argument pos:start="57:63" pos:end="57:87"><expr pos:start="57:63" pos:end="57:87"><operator pos:start="57:63" pos:end="57:63">&amp;</operator><name pos:start="57:64" pos:end="57:87"><name pos:start="57:64" pos:end="57:64">a</name><operator pos:start="57:65" pos:end="57:66">-&gt;</operator><name pos:start="57:67" pos:end="57:87">bitstream_buffer_size</name></name></expr></argument>, <argument pos:start="57:90" pos:end="57:128"><expr pos:start="57:90" pos:end="57:128"><name pos:start="57:90" pos:end="57:97">buf_size</name> <operator pos:start="57:99" pos:end="57:99">+</operator> <name pos:start="57:101" pos:end="57:128">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="65:5">for<control pos:start="59:8" pos:end="59:30">(<init pos:start="59:9" pos:end="59:12"><expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:9">i</name><operator pos:start="59:10" pos:end="59:10">=</operator><literal type="number" pos:start="59:11" pos:end="59:11">0</literal></expr>;</init> <condition pos:start="59:14" pos:end="59:24"><expr pos:start="59:14" pos:end="59:23"><name pos:start="59:14" pos:end="59:14">i</name><operator pos:start="59:15" pos:end="59:15">&lt;</operator><name pos:start="59:16" pos:end="59:23">buf_size</name></expr>;</condition> <incr pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:29"><name pos:start="59:26" pos:end="59:26">i</name><operator pos:start="59:27" pos:end="59:28">+=</operator><literal type="number" pos:start="59:29" pos:end="59:29">2</literal></expr></incr>)</control><block pos:start="59:31" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:43">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:9">a</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:27">bitstream_buffer</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">i</name></expr>]</index></name>  <operator pos:start="61:33" pos:end="61:33">=</operator> <name pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:37">buf</name><index pos:start="61:38" pos:end="61:42">[<expr pos:start="61:39" pos:end="61:41"><name pos:start="61:39" pos:end="61:39">i</name><operator pos:start="61:40" pos:end="61:40">+</operator><literal type="number" pos:start="61:41" pos:end="61:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:9">a</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:27">bitstream_buffer</name><index pos:start="63:28" pos:end="63:32">[<expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:29">i</name><operator pos:start="63:30" pos:end="63:30">+</operator><literal type="number" pos:start="63:31" pos:end="63:31">1</literal></expr>]</index></name><operator pos:start="63:33" pos:end="63:33">=</operator> <name pos:start="63:35" pos:end="63:42"><name pos:start="63:35" pos:end="63:37">buf</name><index pos:start="63:38" pos:end="63:42">[<expr pos:start="63:39" pos:end="63:39"><name pos:start="63:39" pos:end="63:39">i</name></expr>  ]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="67:5" pos:end="67:59"><expr pos:start="67:5" pos:end="67:58"><call pos:start="67:5" pos:end="67:58"><name pos:start="67:5" pos:end="67:17">init_get_bits</name><argument_list pos:start="67:18" pos:end="67:58">(<argument pos:start="67:19" pos:end="67:24"><expr pos:start="67:19" pos:end="67:24"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:20">a</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:24">gb</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:45"><expr pos:start="67:27" pos:end="67:45"><name pos:start="67:27" pos:end="67:45"><name pos:start="67:27" pos:end="67:27">a</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:45">bitstream_buffer</name></name></expr></argument>, <argument pos:start="67:48" pos:end="67:57"><expr pos:start="67:48" pos:end="67:57"><name pos:start="67:48" pos:end="67:55">buf_size</name><operator pos:start="67:56" pos:end="67:56">*</operator><literal type="number" pos:start="67:57" pos:end="67:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="71:5" pos:end="71:78">/* skip over 4 preamble bytes in stream (typically 0xXX 0xXX 0x00 0x38) */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:26"><expr pos:start="73:5" pos:end="73:25"><call pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:13">skip_bits</name><argument_list pos:start="73:14" pos:end="73:25">(<argument pos:start="73:15" pos:end="73:20"><expr pos:start="73:15" pos:end="73:20"><operator pos:start="73:15" pos:end="73:15">&amp;</operator><name pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:16">a</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:20">gb</name></name></expr></argument>, <argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><literal type="number" pos:start="73:23" pos:end="73:24">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:37"><expr pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:5">a</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:13">qscale</name></name><operator pos:start="77:14" pos:end="77:14">=</operator>  <call pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:24">get_bits</name><argument_list pos:start="77:25" pos:end="77:36">(<argument pos:start="77:26" pos:end="77:31"><expr pos:start="77:26" pos:end="77:31"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:31"><name pos:start="77:27" pos:end="77:27">a</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:31">gb</name></name></expr></argument>, <argument pos:start="77:34" pos:end="77:35"><expr pos:start="77:34" pos:end="77:35"><literal type="number" pos:start="77:34" pos:end="77:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:14"><name pos:start="79:5" pos:end="79:5">a</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:14">version</name></name><operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:24">get_bits</name><argument_list pos:start="79:25" pos:end="79:36">(<argument pos:start="79:26" pos:end="79:31"><expr pos:start="79:26" pos:end="79:31"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:31"><name pos:start="79:27" pos:end="79:27">a</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:31">gb</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:35"><expr pos:start="79:34" pos:end="79:35"><literal type="number" pos:start="79:34" pos:end="79:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

<comment type="line" pos:start="83:1" pos:end="83:100">//    printf("qscale:%d (0x%X), version:%d (0x%X)\n", a-&gt;qscale, a-&gt;qscale, a-&gt;version, a-&gt;version);</comment>

    

    <for pos:start="87:5" pos:end="101:5">for<control pos:start="87:8" pos:end="87:50">(<init pos:start="87:9" pos:end="87:18"><expr pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:9">a</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:15">mb_x</name></name><operator pos:start="87:16" pos:end="87:16">=</operator><literal type="number" pos:start="87:17" pos:end="87:17">0</literal></expr>;</init> <condition pos:start="87:20" pos:end="87:39"><expr pos:start="87:20" pos:end="87:38"><name pos:start="87:20" pos:end="87:26"><name pos:start="87:20" pos:end="87:20">a</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:26">mb_x</name></name><operator pos:start="87:27" pos:end="87:27">&lt;</operator><name pos:start="87:28" pos:end="87:38"><name pos:start="87:28" pos:end="87:28">a</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:38">mb_width</name></name></expr>;</condition> <incr pos:start="87:41" pos:end="87:49"><expr pos:start="87:41" pos:end="87:49"><name pos:start="87:41" pos:end="87:47"><name pos:start="87:41" pos:end="87:41">a</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:47">mb_x</name></name><operator pos:start="87:48" pos:end="87:49">++</operator></expr></incr>)</control><block pos:start="87:51" pos:end="101:5">{<block_content pos:start="89:9" pos:end="99:9">

        <for pos:start="89:9" pos:end="99:9">for<control pos:start="89:12" pos:end="89:55">(<init pos:start="89:13" pos:end="89:22"><expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:13">a</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:19">mb_y</name></name><operator pos:start="89:20" pos:end="89:20">=</operator><literal type="number" pos:start="89:21" pos:end="89:21">0</literal></expr>;</init> <condition pos:start="89:24" pos:end="89:44"><expr pos:start="89:24" pos:end="89:43"><name pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:24">a</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">mb_y</name></name><operator pos:start="89:31" pos:end="89:31">&lt;</operator><name pos:start="89:32" pos:end="89:43"><name pos:start="89:32" pos:end="89:32">a</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:43">mb_height</name></name></expr>;</condition> <incr pos:start="89:46" pos:end="89:54"><expr pos:start="89:46" pos:end="89:54"><name pos:start="89:46" pos:end="89:52"><name pos:start="89:46" pos:end="89:46">a</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:52">mb_y</name></name><operator pos:start="89:53" pos:end="89:54">++</operator></expr></incr>)</control><block pos:start="89:56" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:42">

            <if_stmt pos:start="91:13" pos:end="93:26"><if pos:start="91:13" pos:end="93:26">if<condition pos:start="91:15" pos:end="91:42">( <expr pos:start="91:17" pos:end="91:41"><call pos:start="91:17" pos:end="91:38"><name pos:start="91:17" pos:end="91:25">decode_mb</name><argument_list pos:start="91:26" pos:end="91:38">(<argument pos:start="91:27" pos:end="91:27"><expr pos:start="91:27" pos:end="91:27"><name pos:start="91:27" pos:end="91:27">a</name></expr></argument>, <argument pos:start="91:30" pos:end="91:37"><expr pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:30">a</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:37">block</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:40" pos:end="91:40">&lt;</operator><literal type="number" pos:start="91:41" pos:end="91:41">0</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:26"><block_content pos:start="93:17" pos:end="93:26">

                <return pos:start="93:17" pos:end="93:26">return <expr pos:start="93:24" pos:end="93:25"><operator pos:start="93:24" pos:end="93:24">-</operator><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

             

            <expr_stmt pos:start="97:13" pos:end="97:42"><expr pos:start="97:13" pos:end="97:41"><call pos:start="97:13" pos:end="97:41"><name pos:start="97:13" pos:end="97:20">idct_put</name><argument_list pos:start="97:21" pos:end="97:41">(<argument pos:start="97:22" pos:end="97:22"><expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">a</name></expr></argument>, <argument pos:start="97:25" pos:end="97:31"><expr pos:start="97:25" pos:end="97:31"><name pos:start="97:25" pos:end="97:31"><name pos:start="97:25" pos:end="97:25">a</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:31">mb_x</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:40"><expr pos:start="97:34" pos:end="97:40"><name pos:start="97:34" pos:end="97:40"><name pos:start="97:34" pos:end="97:34">a</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:40">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



<comment type="line" pos:start="105:1" pos:end="105:55">//    p-&gt;quality= (32 + a-&gt;inv_qscale/2)/a-&gt;inv_qscale;</comment>

<comment type="line" pos:start="107:1" pos:end="107:67">//    memset(p-&gt;qscale_table, p-&gt;quality, p-&gt;qstride*a-&gt;mb_height);</comment>

    

    <expr_stmt pos:start="111:5" pos:end="111:37"><expr pos:start="111:5" pos:end="111:36"><operator pos:start="111:5" pos:end="111:5">*</operator><name pos:start="111:6" pos:end="111:12">picture</name><operator pos:start="111:13" pos:end="111:13">=</operator> <operator pos:start="111:15" pos:end="111:15">*</operator><operator pos:start="111:16" pos:end="111:16">(</operator><name pos:start="111:17" pos:end="111:23">AVFrame</name><operator pos:start="111:24" pos:end="111:24">*</operator><operator pos:start="111:25" pos:end="111:25">)</operator><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:36"><name pos:start="111:27" pos:end="111:27">a</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:36">picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:35"><expr pos:start="113:5" pos:end="113:34"><operator pos:start="113:5" pos:end="113:5">*</operator><name pos:start="113:6" pos:end="113:14">data_size</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <sizeof pos:start="113:18" pos:end="113:34">sizeof<argument_list pos:start="113:24" pos:end="113:34">(<argument pos:start="113:25" pos:end="113:33"><expr pos:start="113:25" pos:end="113:33"><name pos:start="113:25" pos:end="113:33">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:13"><expr pos:start="117:5" pos:end="117:12"><call pos:start="117:5" pos:end="117:12"><name pos:start="117:5" pos:end="117:10">emms_c</name><argument_list pos:start="117:11" pos:end="117:12">()</argument_list></call></expr>;</expr_stmt>

    

    <return pos:start="121:5" pos:end="121:44">return <expr pos:start="121:12" pos:end="121:43"><operator pos:start="121:12" pos:end="121:12">(</operator><call pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:26">get_bits_count</name><argument_list pos:start="121:27" pos:end="121:34">(<argument pos:start="121:28" pos:end="121:33"><expr pos:start="121:28" pos:end="121:33"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:33"><name pos:start="121:29" pos:end="121:29">a</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:33">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="121:35" pos:end="121:35">+</operator><literal type="number" pos:start="121:36" pos:end="121:37">31</literal><operator pos:start="121:38" pos:end="121:38">)</operator><operator pos:start="121:39" pos:end="121:39">/</operator><literal type="number" pos:start="121:40" pos:end="121:41">32</literal><operator pos:start="121:42" pos:end="121:42">*</operator><literal type="number" pos:start="121:43" pos:end="121:43">4</literal></expr>;</return>

</block_content>}</block></function>
</unit>
