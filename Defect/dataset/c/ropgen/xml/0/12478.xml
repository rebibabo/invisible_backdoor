<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12478.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:8">uint32_t</name> <name pos:start="1:10" pos:end="1:15">HELPER</name></type>(<name pos:start="1:17" pos:end="1:24">get_cp15</name>)<parameter_list pos:start="1:26" pos:end="1:58">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">CPUARMState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint32_t</name></type> <name pos:start="1:54" pos:end="1:57">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">crm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">op1</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:15">insn</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <literal type="number" pos:start="13:20" pos:end="13:21">21</literal><operator pos:start="13:22" pos:end="13:22">)</operator> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <literal type="number" pos:start="13:26" pos:end="13:26">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">op2</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:15">insn</name> <operator pos:start="15:17" pos:end="15:18">&gt;&gt;</operator> <literal type="number" pos:start="15:20" pos:end="15:20">5</literal><operator pos:start="15:21" pos:end="15:21">)</operator> <operator pos:start="15:23" pos:end="15:23">&amp;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">crm</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:14">insn</name> <operator pos:start="17:16" pos:end="17:16">&amp;</operator> <literal type="number" pos:start="17:18" pos:end="17:20">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="125:5">switch <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:17">insn</name> <operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator> <literal type="number" pos:start="19:22" pos:end="19:23">16</literal><operator pos:start="19:24" pos:end="19:24">)</operator> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <literal type="number" pos:start="19:28" pos:end="19:30">0xf</literal></expr>)</condition> <block pos:start="19:33" pos:end="125:5">{<block_content pos:start="21:5" pos:end="123:21">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case> <comment type="block" pos:start="21:13" pos:end="21:28">/* ID codes.  */</comment>

        <switch pos:start="23:9" pos:end="113:9">switch <condition pos:start="23:16" pos:end="23:20">(<expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">op1</name></expr>)</condition> <block pos:start="23:22" pos:end="113:9">{<block_content pos:start="25:9" pos:end="111:25">

        <case pos:start="25:9" pos:end="25:15">case <expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>:</case>

            <switch pos:start="27:13" pos:end="107:13">switch <condition pos:start="27:20" pos:end="27:24">(<expr pos:start="27:21" pos:end="27:23"><name pos:start="27:21" pos:end="27:23">crm</name></expr>)</condition> <block pos:start="27:26" pos:end="107:13">{<block_content pos:start="29:13" pos:end="105:29">

            <case pos:start="29:13" pos:end="29:19">case <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>:</case>

                <switch pos:start="31:17" pos:end="97:17">switch <condition pos:start="31:24" pos:end="31:28">(<expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">op2</name></expr>)</condition> <block pos:start="31:30" pos:end="97:17">{<block_content pos:start="33:17" pos:end="95:33">

                <case pos:start="33:17" pos:end="33:23">case <expr pos:start="33:22" pos:end="33:22"><literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>:</case> <comment type="block" pos:start="33:25" pos:end="33:41">/* Device ID.  */</comment>

                    <return pos:start="35:21" pos:end="35:46">return <expr pos:start="35:28" pos:end="35:45"><name pos:start="35:28" pos:end="35:45"><name pos:start="35:28" pos:end="35:30">env</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:36">cp15</name><operator pos:start="35:37" pos:end="35:37">.</operator><name pos:start="35:38" pos:end="35:45">c0_cpuid</name></name></expr>;</return>

                <case pos:start="37:17" pos:end="37:23">case <expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>:</case> <comment type="block" pos:start="37:25" pos:end="37:42">/* Cache Type.  */</comment>

		    <return pos:start="39:21" pos:end="39:50">return <expr pos:start="39:28" pos:end="39:49"><name pos:start="39:28" pos:end="39:49"><name pos:start="39:28" pos:end="39:30">env</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:36">cp15</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:49">c0_cachetype</name></name></expr>;</return>

                <case pos:start="41:17" pos:end="41:23">case <expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr>:</case> <comment type="block" pos:start="41:25" pos:end="41:42">/* TCM status.  */</comment>

                    <return pos:start="43:21" pos:end="43:29">return <expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr>;</return>

                <case pos:start="45:17" pos:end="45:23">case <expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">3</literal></expr>:</case> <comment type="block" pos:start="45:25" pos:end="45:49">/* TLB type register.  */</comment>

                    <return pos:start="47:21" pos:end="47:29">return <expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>;</return> <comment type="block" pos:start="47:31" pos:end="47:61">/* No lockable TLB entries.  */</comment>

                <case pos:start="49:17" pos:end="49:23">case <expr pos:start="49:22" pos:end="49:22"><literal type="number" pos:start="49:22" pos:end="49:22">5</literal></expr>:</case> <comment type="block" pos:start="49:25" pos:end="49:35">/* MPIDR */</comment>

                    <comment type="block" pos:start="51:21" pos:end="57:23">/* The MPIDR was standardised in v7; prior to

                     * this it was implemented only in the 11MPCore.

                     * For all other pre-v7 cores it does not exist.

                     */</comment>

                    <if_stmt pos:start="59:21" pos:end="89:21"><if pos:start="59:21" pos:end="89:21">if <condition pos:start="59:24" pos:end="61:64">(<expr pos:start="59:25" pos:end="61:63"><call pos:start="59:25" pos:end="59:56"><name pos:start="59:25" pos:end="59:35">arm_feature</name><argument_list pos:start="59:36" pos:end="59:56">(<argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">env</name></expr></argument>, <argument pos:start="59:42" pos:end="59:55"><expr pos:start="59:42" pos:end="59:55"><name pos:start="59:42" pos:end="59:55">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call> <operator pos:start="59:58" pos:end="59:59">||</operator>

                        <call pos:start="61:25" pos:end="61:38"><name pos:start="61:25" pos:end="61:33">ARM_CPUID</name><argument_list pos:start="61:34" pos:end="61:38">(<argument pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:37">env</name></expr></argument>)</argument_list></call> <operator pos:start="61:40" pos:end="61:41">==</operator> <name pos:start="61:43" pos:end="61:63">ARM_CPUID_ARM11MPCORE</name></expr>)</condition> <block pos:start="61:66" pos:end="89:21">{<block_content pos:start="63:25" pos:end="87:37">

                        <decl_stmt pos:start="63:25" pos:end="63:51"><decl pos:start="63:25" pos:end="63:50"><type pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">int</name></type> <name pos:start="63:29" pos:end="63:33">mpidr</name> <init pos:start="63:35" pos:end="63:50">= <expr pos:start="63:37" pos:end="63:50"><name pos:start="63:37" pos:end="63:50"><name pos:start="63:37" pos:end="63:39">env</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:50">cpu_index</name></name></expr></init></decl>;</decl_stmt>

                        <comment type="block" pos:start="65:25" pos:end="69:27">/* We don't support setting cluster ID ([8..11])

                         * so these bits always RAZ.

                         */</comment>

                        <if_stmt pos:start="71:25" pos:end="85:25"><if pos:start="71:25" pos:end="85:25">if <condition pos:start="71:28" pos:end="71:63">(<expr pos:start="71:29" pos:end="71:62"><call pos:start="71:29" pos:end="71:62"><name pos:start="71:29" pos:end="71:39">arm_feature</name><argument_list pos:start="71:40" pos:end="71:62">(<argument pos:start="71:41" pos:end="71:43"><expr pos:start="71:41" pos:end="71:43"><name pos:start="71:41" pos:end="71:43">env</name></expr></argument>, <argument pos:start="71:46" pos:end="71:61"><expr pos:start="71:46" pos:end="71:61"><name pos:start="71:46" pos:end="71:61">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:65" pos:end="85:25">{<block_content pos:start="73:29" pos:end="73:47">

                            <expr_stmt pos:start="73:29" pos:end="73:47"><expr pos:start="73:29" pos:end="73:46"><name pos:start="73:29" pos:end="73:33">mpidr</name> <operator pos:start="73:35" pos:end="73:36">|=</operator> <operator pos:start="73:38" pos:end="73:38">(</operator><literal type="number" pos:start="73:39" pos:end="73:39">1</literal> <operator pos:start="73:41" pos:end="73:42">&lt;&lt;</operator> <literal type="number" pos:start="73:44" pos:end="73:45">31</literal><operator pos:start="73:46" pos:end="73:46">)</operator></expr>;</expr_stmt>

                            <comment type="block" pos:start="75:29" pos:end="83:31">/* Cores which are uniprocessor (non-coherent)

                             * but still implement the MP extensions set

                             * bit 30. (For instance, A9UP.) However we do

                             * not currently model any of those cores.

                             */</comment>

                        </block_content>}</block></if></if_stmt>

                        <return pos:start="87:25" pos:end="87:37">return <expr pos:start="87:32" pos:end="87:36"><name pos:start="87:32" pos:end="87:36">mpidr</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="91:21" pos:end="91:78">/* otherwise fall through to the unimplemented-reg case */</comment>

                <default pos:start="93:17" pos:end="93:24">default:</default>

                    <goto pos:start="95:21" pos:end="95:33">goto <name pos:start="95:26" pos:end="95:32">bad_reg</name>;</goto>

                </block_content>}</block></switch>

            <case pos:start="99:13" pos:end="99:19">case <expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">3</literal></expr>:</case> <case pos:start="99:21" pos:end="99:27">case <expr pos:start="99:26" pos:end="99:26"><literal type="number" pos:start="99:26" pos:end="99:26">4</literal></expr>:</case> <case pos:start="99:29" pos:end="99:35">case <expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">5</literal></expr>:</case> <case pos:start="99:37" pos:end="99:43">case <expr pos:start="99:42" pos:end="99:42"><literal type="number" pos:start="99:42" pos:end="99:42">6</literal></expr>:</case> <case pos:start="99:45" pos:end="99:51">case <expr pos:start="99:50" pos:end="99:50"><literal type="number" pos:start="99:50" pos:end="99:50">7</literal></expr>:</case>

                <return pos:start="101:17" pos:end="101:25">return <expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>;</return>

            <default pos:start="103:13" pos:end="103:20">default:</default>

                <goto pos:start="105:17" pos:end="105:29">goto <name pos:start="105:22" pos:end="105:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        <default pos:start="109:9" pos:end="109:16">default:</default>

            <goto pos:start="111:13" pos:end="111:25">goto <name pos:start="111:18" pos:end="111:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

    <case pos:start="115:5" pos:end="115:11">case <expr pos:start="115:10" pos:end="115:10"><literal type="number" pos:start="115:10" pos:end="115:10">4</literal></expr>:</case> <comment type="block" pos:start="115:13" pos:end="115:28">/* Reserved.  */</comment>

        <goto pos:start="117:9" pos:end="117:21">goto <name pos:start="117:14" pos:end="117:20">bad_reg</name>;</goto>

    <case pos:start="119:5" pos:end="119:12">case <expr pos:start="119:10" pos:end="119:11"><literal type="number" pos:start="119:10" pos:end="119:11">11</literal></expr>:</case> <comment type="block" pos:start="119:14" pos:end="119:36">/* TCM DMA control.  */</comment>

    <case pos:start="121:5" pos:end="121:12">case <expr pos:start="121:10" pos:end="121:11"><literal type="number" pos:start="121:10" pos:end="121:11">12</literal></expr>:</case> <comment type="block" pos:start="121:14" pos:end="121:29">/* Reserved.  */</comment>

        <goto pos:start="123:9" pos:end="123:21">goto <name pos:start="123:14" pos:end="123:20">bad_reg</name>;</goto>

    </block_content>}</block></switch>

<label pos:start="127:1" pos:end="127:8"><name pos:start="127:1" pos:end="127:7">bad_reg</name>:</label>

    <comment type="block" pos:start="129:5" pos:end="129:79">/* ??? For debugging only.  Should raise illegal instruction exception.  */</comment>

    <expr_stmt pos:start="131:5" pos:end="133:49"><expr pos:start="131:5" pos:end="133:48"><call pos:start="131:5" pos:end="133:48"><name pos:start="131:5" pos:end="131:13">cpu_abort</name><argument_list pos:start="131:14" pos:end="133:48">(<argument pos:start="131:15" pos:end="131:17"><expr pos:start="131:15" pos:end="131:17"><name pos:start="131:15" pos:end="131:17">env</name></expr></argument>, <argument pos:start="131:20" pos:end="131:76"><expr pos:start="131:20" pos:end="131:76"><literal type="string" pos:start="131:20" pos:end="131:76">"Unimplemented cp15 register read (c%d, c%d, {%d, %d})\n"</literal></expr></argument>,

              <argument pos:start="133:15" pos:end="133:32"><expr pos:start="133:15" pos:end="133:32"><operator pos:start="133:15" pos:end="133:15">(</operator><name pos:start="133:16" pos:end="133:19">insn</name> <operator pos:start="133:21" pos:end="133:22">&gt;&gt;</operator> <literal type="number" pos:start="133:24" pos:end="133:25">16</literal><operator pos:start="133:26" pos:end="133:26">)</operator> <operator pos:start="133:28" pos:end="133:28">&amp;</operator> <literal type="number" pos:start="133:30" pos:end="133:32">0xf</literal></expr></argument>, <argument pos:start="133:35" pos:end="133:37"><expr pos:start="133:35" pos:end="133:37"><name pos:start="133:35" pos:end="133:37">crm</name></expr></argument>, <argument pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:42">op1</name></expr></argument>, <argument pos:start="133:45" pos:end="133:47"><expr pos:start="133:45" pos:end="133:47"><name pos:start="133:45" pos:end="133:47">op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
