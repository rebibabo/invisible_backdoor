<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23209.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">seg_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">seg</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:34">= <expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">seg</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:48">= <expr pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:48">[<expr pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:33">pkt</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:19">end_pts</name> <init pos:start="11:21" pos:end="11:55">= <expr pos:start="11:23" pos:end="11:55"><name pos:start="11:23" pos:end="11:41"><name pos:start="11:23" pos:end="11:25">seg</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:41">recording_time</name></name> <operator pos:start="11:43" pos:end="11:43">*</operator> <name pos:start="11:45" pos:end="11:55"><name pos:start="11:45" pos:end="11:47">seg</name><operator pos:start="11:48" pos:end="11:49">-&gt;</operator><name pos:start="11:50" pos:end="11:55">number</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:22">can_split</name> <init pos:start="13:24" pos:end="13:26">= <expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:11">oc</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">seg</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">has_video</name></name></expr>)</condition> <block pos:start="23:25" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:49">

        <expr_stmt pos:start="25:9" pos:end="27:49"><expr pos:start="25:9" pos:end="27:48"><name pos:start="25:9" pos:end="25:17">can_split</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:41"><name pos:start="25:21" pos:end="25:22">st</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:29">codec</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:41">codec_type</name></name> <operator pos:start="25:43" pos:end="25:44">==</operator> <name pos:start="25:46" pos:end="25:63">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="25:65" pos:end="25:66">&amp;&amp;</operator>

                    <name pos:start="27:21" pos:end="27:30"><name pos:start="27:21" pos:end="27:23">pkt</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:30">flags</name></name> <operator pos:start="27:32" pos:end="27:32">&amp;</operator> <name pos:start="27:34" pos:end="27:48">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="93:5"><if pos:start="33:5" pos:end="93:5">if <condition pos:start="33:8" pos:end="35:56">(<expr pos:start="33:9" pos:end="35:55"><name pos:start="33:9" pos:end="33:17">can_split</name> <operator pos:start="33:19" pos:end="33:20">&amp;&amp;</operator> <call pos:start="33:22" pos:end="35:50"><name pos:start="33:22" pos:end="33:34">av_compare_ts</name><argument_list pos:start="33:35" pos:end="35:50">(<argument pos:start="33:36" pos:end="33:43"><expr pos:start="33:36" pos:end="33:43"><name pos:start="33:36" pos:end="33:43"><name pos:start="33:36" pos:end="33:38">pkt</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">pts</name></name></expr></argument>, <argument pos:start="33:46" pos:end="33:58"><expr pos:start="33:46" pos:end="33:58"><name pos:start="33:46" pos:end="33:58"><name pos:start="33:46" pos:end="33:47">st</name><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:58">time_base</name></name></expr></argument>, <argument pos:start="33:61" pos:end="33:67"><expr pos:start="33:61" pos:end="33:67"><name pos:start="33:61" pos:end="33:67">end_pts</name></expr></argument>,

                                   <argument pos:start="35:36" pos:end="35:49"><expr pos:start="35:36" pos:end="35:49"><name pos:start="35:36" pos:end="35:49">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call> <operator pos:start="35:52" pos:end="35:53">&gt;=</operator> <literal type="number" pos:start="35:55" pos:end="35:55">0</literal></expr>)</condition> <block pos:start="35:58" pos:end="93:5">{<block_content pos:start="37:9" pos:end="91:9">

        <expr_stmt pos:start="37:9" pos:end="39:44"><expr pos:start="37:9" pos:end="39:43"><call pos:start="37:9" pos:end="39:43"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="39:43">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:33" pos:end="37:71"><expr pos:start="37:33" pos:end="37:71"><literal type="string" pos:start="37:33" pos:end="37:61">"Next segment starts at %d %"</literal><name pos:start="37:62" pos:end="37:67">PRId64</name><literal type="string" pos:start="37:68" pos:end="37:71">"\n"</literal></expr></argument>,

               <argument pos:start="39:16" pos:end="39:32"><expr pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:18">pkt</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:32">stream_index</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:42"><expr pos:start="39:35" pos:end="39:42"><name pos:start="39:35" pos:end="39:42"><name pos:start="39:35" pos:end="39:37">pkt</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:62"><expr pos:start="43:9" pos:end="43:61"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:61"><name pos:start="43:15" pos:end="43:25">segment_end</name><argument_list pos:start="43:26" pos:end="43:61">(<argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">oc</name></expr></argument>, <argument pos:start="43:31" pos:end="43:60"><expr pos:start="43:31" pos:end="43:60"><name pos:start="43:31" pos:end="43:60"><name pos:start="43:31" pos:end="43:33">seg</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:60">individual_header_trailer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="49:67"><if pos:start="47:9" pos:end="49:67">if <condition pos:start="47:12" pos:end="47:17">(<expr pos:start="47:13" pos:end="47:16"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:16">ret</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:67"><block_content pos:start="49:13" pos:end="49:67">

            <expr_stmt pos:start="49:13" pos:end="49:67"><expr pos:start="49:13" pos:end="49:66"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:66"><name pos:start="49:19" pos:end="49:31">segment_start</name><argument_list pos:start="49:32" pos:end="49:66">(<argument pos:start="49:33" pos:end="49:33"><expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">s</name></expr></argument>, <argument pos:start="49:36" pos:end="49:65"><expr pos:start="49:36" pos:end="49:65"><name pos:start="49:36" pos:end="49:65"><name pos:start="49:36" pos:end="49:38">seg</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:65">individual_header_trailer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="53:9" pos:end="55:22"><if pos:start="53:9" pos:end="55:22">if <condition pos:start="53:12" pos:end="53:16">(<expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">ret</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:22"><block_content pos:start="55:13" pos:end="55:22">

            <goto pos:start="55:13" pos:end="55:22">goto <name pos:start="55:18" pos:end="55:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:10">oc</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:16">seg</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:21">avf</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="91:9"><if pos:start="63:9" pos:end="91:9">if <condition pos:start="63:12" pos:end="63:22">(<expr pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:15">seg</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:21">list</name></name></expr>)</condition> <block pos:start="63:24" pos:end="91:9">{<block_content pos:start="65:13" pos:end="89:13">

            <if_stmt pos:start="65:13" pos:end="89:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:43">(<expr pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:19">seg</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:30">list_type</name></name> <operator pos:start="65:32" pos:end="65:33">==</operator> <name pos:start="65:35" pos:end="65:42">LIST_HLS</name></expr>)</condition> <block pos:start="65:45" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:30">

                <if_stmt pos:start="67:17" pos:end="69:30"><if pos:start="67:17" pos:end="69:30">if <condition pos:start="67:20" pos:end="67:57">(<expr pos:start="67:21" pos:end="67:56"><operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:24">ret</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="67:51"><name pos:start="67:28" pos:end="67:45">segment_hls_window</name><argument_list pos:start="67:46" pos:end="67:51">(<argument pos:start="67:47" pos:end="67:47"><expr pos:start="67:47" pos:end="67:47"><name pos:start="67:47" pos:end="67:47">s</name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr></argument>)</argument_list></call><operator pos:start="67:52" pos:end="67:52">)</operator> <operator pos:start="67:54" pos:end="67:54">&lt;</operator> <literal type="number" pos:start="67:56" pos:end="67:56">0</literal></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:30"><block_content pos:start="69:21" pos:end="69:30">

                    <goto pos:start="69:21" pos:end="69:30">goto <name pos:start="69:26" pos:end="69:29">fail</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="89:13">else <block pos:start="71:20" pos:end="89:13">{<block_content pos:start="73:17" pos:end="87:17">

                <expr_stmt pos:start="73:17" pos:end="73:59"><expr pos:start="73:17" pos:end="73:58"><call pos:start="73:17" pos:end="73:58"><name pos:start="73:17" pos:end="73:27">avio_printf</name><argument_list pos:start="73:28" pos:end="73:58">(<argument pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:31">seg</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:35">pb</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:43"><expr pos:start="73:38" pos:end="73:43"><literal type="string" pos:start="73:38" pos:end="73:43">"%s\n"</literal></expr></argument>, <argument pos:start="73:46" pos:end="73:57"><expr pos:start="73:46" pos:end="73:57"><name pos:start="73:46" pos:end="73:57"><name pos:start="73:46" pos:end="73:47">oc</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:57">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:35"><call pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:26">avio_flush</name><argument_list pos:start="75:27" pos:end="75:35">(<argument pos:start="75:28" pos:end="75:34"><expr pos:start="75:28" pos:end="75:34"><name pos:start="75:28" pos:end="75:34"><name pos:start="75:28" pos:end="75:30">seg</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="87:17"><if pos:start="77:17" pos:end="87:17">if <condition pos:start="77:20" pos:end="77:60">(<expr pos:start="77:21" pos:end="77:59"><name pos:start="77:21" pos:end="77:29"><name pos:start="77:21" pos:end="77:23">seg</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:29">size</name></name> <operator pos:start="77:31" pos:end="77:32">&amp;&amp;</operator> <operator pos:start="77:34" pos:end="77:34">!</operator><operator pos:start="77:35" pos:end="77:35">(</operator><name pos:start="77:36" pos:end="77:46"><name pos:start="77:36" pos:end="77:38">seg</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:46">number</name></name> <operator pos:start="77:48" pos:end="77:48">%</operator> <name pos:start="77:50" pos:end="77:58"><name pos:start="77:50" pos:end="77:52">seg</name><operator pos:start="77:53" pos:end="77:54">-&gt;</operator><name pos:start="77:55" pos:end="77:58">size</name></name><operator pos:start="77:59" pos:end="77:59">)</operator></expr>)</condition> <block pos:start="77:62" pos:end="87:17">{<block_content pos:start="79:21" pos:end="85:34">

                    <expr_stmt pos:start="79:21" pos:end="79:42"><expr pos:start="79:21" pos:end="79:41"><call pos:start="79:21" pos:end="79:41"><name pos:start="79:21" pos:end="79:31">avio_closep</name><argument_list pos:start="79:32" pos:end="79:41">(<argument pos:start="79:33" pos:end="79:40"><expr pos:start="79:33" pos:end="79:40"><operator pos:start="79:33" pos:end="79:33">&amp;</operator><name pos:start="79:34" pos:end="79:40"><name pos:start="79:34" pos:end="79:36">seg</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:40">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="81:21" pos:end="85:34"><if pos:start="81:21" pos:end="85:34">if <condition pos:start="81:24" pos:end="83:77">(<expr pos:start="81:25" pos:end="83:76"><operator pos:start="81:25" pos:end="81:25">(</operator><name pos:start="81:26" pos:end="81:28">ret</name> <operator pos:start="81:30" pos:end="81:30">=</operator> <call pos:start="81:32" pos:end="83:71"><name pos:start="81:32" pos:end="81:41">avio_open2</name><argument_list pos:start="81:42" pos:end="83:71">(<argument pos:start="81:43" pos:end="81:50"><expr pos:start="81:43" pos:end="81:50"><operator pos:start="81:43" pos:end="81:43">&amp;</operator><name pos:start="81:44" pos:end="81:50"><name pos:start="81:44" pos:end="81:46">seg</name><operator pos:start="81:47" pos:end="81:48">-&gt;</operator><name pos:start="81:49" pos:end="81:50">pb</name></name></expr></argument>, <argument pos:start="81:53" pos:end="81:61"><expr pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:55">seg</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:61">list</name></name></expr></argument>, <argument pos:start="81:64" pos:end="81:78"><expr pos:start="81:64" pos:end="81:78"><name pos:start="81:64" pos:end="81:78">AVIO_FLAG_WRITE</name></expr></argument>,

                                          <argument pos:start="83:43" pos:end="83:64"><expr pos:start="83:43" pos:end="83:64"><operator pos:start="83:43" pos:end="83:43">&amp;</operator><name pos:start="83:44" pos:end="83:64"><name pos:start="83:44" pos:end="83:44">s</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:64">interrupt_callback</name></name></expr></argument>, <argument pos:start="83:67" pos:end="83:70"><expr pos:start="83:67" pos:end="83:70"><name pos:start="83:67" pos:end="83:70">NULL</name></expr></argument>)</argument_list></call><operator pos:start="83:72" pos:end="83:72">)</operator> <operator pos:start="83:74" pos:end="83:74">&lt;</operator> <literal type="number" pos:start="83:76" pos:end="83:76">0</literal></expr>)</condition><block type="pseudo" pos:start="85:25" pos:end="85:34"><block_content pos:start="85:25" pos:end="85:34">

                        <goto pos:start="85:25" pos:end="85:34">goto <name pos:start="85:30" pos:end="85:33">fail</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:58"><expr pos:start="97:5" pos:end="97:57"><name pos:start="97:5" pos:end="97:7">ret</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:57"><name pos:start="97:11" pos:end="97:26">ff_write_chained</name><argument_list pos:start="97:27" pos:end="97:57">(<argument pos:start="97:28" pos:end="97:29"><expr pos:start="97:28" pos:end="97:29"><name pos:start="97:28" pos:end="97:29">oc</name></expr></argument>, <argument pos:start="97:32" pos:end="97:48"><expr pos:start="97:32" pos:end="97:48"><name pos:start="97:32" pos:end="97:48"><name pos:start="97:32" pos:end="97:34">pkt</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:48">stream_index</name></name></expr></argument>, <argument pos:start="97:51" pos:end="97:53"><expr pos:start="97:51" pos:end="97:53"><name pos:start="97:51" pos:end="97:53">pkt</name></expr></argument>, <argument pos:start="97:56" pos:end="97:56"><expr pos:start="97:56" pos:end="97:56"><name pos:start="97:56" pos:end="97:56">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="101:1" pos:end="101:5"><name pos:start="101:1" pos:end="101:4">fail</name>:</label>

    <if_stmt pos:start="103:5" pos:end="105:30"><if pos:start="103:5" pos:end="105:30">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">&lt;</operator> <literal type="number" pos:start="103:15" pos:end="103:15">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:30"><block_content pos:start="105:9" pos:end="105:30">

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><call pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:24">seg_free_context</name><argument_list pos:start="105:25" pos:end="105:29">(<argument pos:start="105:26" pos:end="105:28"><expr pos:start="105:26" pos:end="105:28"><name pos:start="105:26" pos:end="105:28">seg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
