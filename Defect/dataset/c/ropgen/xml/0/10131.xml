<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10131.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">qemu_remap_bucket</name><parameter_list pos:start="1:30" pos:end="5:63">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:43">MapCacheEntry</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">entry</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:53"><decl pos:start="3:31" pos:end="3:53"><type pos:start="3:31" pos:end="3:53"><name pos:start="3:31" pos:end="3:48">target_phys_addr_t</name></type> <name pos:start="3:50" pos:end="3:53">size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:62"><decl pos:start="5:31" pos:end="5:62"><type pos:start="5:31" pos:end="5:62"><name pos:start="5:31" pos:end="5:48">target_phys_addr_t</name></type> <name pos:start="5:50" pos:end="5:62">address_index</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="103:1">{<block_content pos:start="9:5" pos:end="101:19">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:23">vaddr_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">xen_pfn_t</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:19">pfns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:12">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:18">i</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:21" pos:end="15:21">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:53"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:22">target_phys_addr_t</name></type> <name pos:start="17:24" pos:end="17:29">nb_pfn</name> <init pos:start="17:31" pos:end="17:53">= <expr pos:start="17:33" pos:end="17:53"><name pos:start="17:33" pos:end="17:36">size</name> <operator pos:start="17:38" pos:end="17:39">&gt;&gt;</operator> <name pos:start="17:41" pos:end="17:53">XC_PAGE_SHIFT</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><call pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:27">trace_qemu_remap_bucket</name><argument_list pos:start="21:28" pos:end="21:42">(<argument pos:start="21:29" pos:end="21:41"><expr pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:41">address_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:8">pfns</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:52"><name pos:start="25:12" pos:end="25:23">qemu_mallocz</name><argument_list pos:start="25:24" pos:end="25:52">(<argument pos:start="25:25" pos:end="25:51"><expr pos:start="25:25" pos:end="25:51"><name pos:start="25:25" pos:end="25:30">nb_pfn</name> <operator pos:start="25:32" pos:end="25:32">*</operator> <sizeof pos:start="25:34" pos:end="25:51">sizeof <argument_list pos:start="25:41" pos:end="25:51">(<argument pos:start="25:42" pos:end="25:50"><expr pos:start="25:42" pos:end="25:50"><name pos:start="25:42" pos:end="25:50">xen_pfn_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:7">err</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:45"><name pos:start="27:11" pos:end="27:22">qemu_mallocz</name><argument_list pos:start="27:23" pos:end="27:45">(<argument pos:start="27:24" pos:end="27:44"><expr pos:start="27:24" pos:end="27:44"><name pos:start="27:24" pos:end="27:29">nb_pfn</name> <operator pos:start="27:31" pos:end="27:31">*</operator> <sizeof pos:start="27:33" pos:end="27:44">sizeof <argument_list pos:start="27:40" pos:end="27:44">(<argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:34">(<expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:13">entry</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:25">vaddr_base</name></name> <operator pos:start="31:27" pos:end="31:28">!=</operator> <name pos:start="31:30" pos:end="31:33">NULL</name></expr>)</condition> <block pos:start="31:36" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:9">

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:49">(<expr pos:start="33:13" pos:end="33:48"><call pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:18">munmap</name><argument_list pos:start="33:19" pos:end="33:43">(<argument pos:start="33:20" pos:end="33:36"><expr pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:24">entry</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:36">vaddr_base</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">size</name></expr></argument>)</argument_list></call> <operator pos:start="33:45" pos:end="33:46">!=</operator> <literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>)</condition> <block pos:start="33:51" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:21">

            <expr_stmt pos:start="35:13" pos:end="35:34"><expr pos:start="35:13" pos:end="35:33"><call pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:18">perror</name><argument_list pos:start="35:19" pos:end="35:33">(<argument pos:start="35:20" pos:end="35:32"><expr pos:start="35:20" pos:end="35:32"><literal type="string" pos:start="35:20" pos:end="35:32">"unmap fails"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:20"><call pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:16">exit</name><argument_list pos:start="37:17" pos:end="37:20">(<argument pos:start="37:18" pos:end="37:19"><expr pos:start="37:18" pos:end="37:19"><operator pos:start="37:18" pos:end="37:18">-</operator><literal type="number" pos:start="37:19" pos:end="37:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="45:5" pos:end="49:5">for <control pos:start="45:9" pos:end="45:32">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:27"><expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:26">nb_pfn</name></expr>;</condition> <incr pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:29">i</name><operator pos:start="45:30" pos:end="45:31">++</operator></expr></incr>)</control> <block pos:start="45:34" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:77">

        <expr_stmt pos:start="47:9" pos:end="47:77"><expr pos:start="47:9" pos:end="47:76"><name pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:12">pfns</name><index pos:start="47:13" pos:end="47:15">[<expr pos:start="47:14" pos:end="47:14"><name pos:start="47:14" pos:end="47:14">i</name></expr>]</index></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:32">address_index</name> <operator pos:start="47:34" pos:end="47:35">&lt;&lt;</operator> <operator pos:start="47:37" pos:end="47:37">(</operator><name pos:start="47:38" pos:end="47:56">MCACHE_BUCKET_SHIFT</name><operator pos:start="47:57" pos:end="47:57">-</operator><name pos:start="47:58" pos:end="47:70">XC_PAGE_SHIFT</name><operator pos:start="47:71" pos:end="47:71">)</operator><operator pos:start="47:72" pos:end="47:72">)</operator> <operator pos:start="47:74" pos:end="47:74">+</operator> <name pos:start="47:76" pos:end="47:76">i</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="53:5" pos:end="55:56"><expr pos:start="53:5" pos:end="55:55"><name pos:start="53:5" pos:end="53:14">vaddr_base</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="55:55"><name pos:start="53:18" pos:end="53:36">xc_map_foreign_bulk</name><argument_list pos:start="53:37" pos:end="55:55">(<argument pos:start="53:38" pos:end="53:43"><expr pos:start="53:38" pos:end="53:43"><name pos:start="53:38" pos:end="53:43">xen_xc</name></expr></argument>, <argument pos:start="53:46" pos:end="53:54"><expr pos:start="53:46" pos:end="53:54"><name pos:start="53:46" pos:end="53:54">xen_domid</name></expr></argument>, <argument pos:start="53:57" pos:end="53:76"><expr pos:start="53:57" pos:end="53:76"><name pos:start="53:57" pos:end="53:65">PROT_READ</name><operator pos:start="53:66" pos:end="53:66">|</operator><name pos:start="53:67" pos:end="53:76">PROT_WRITE</name></expr></argument>,

                                     <argument pos:start="55:38" pos:end="55:41"><expr pos:start="55:38" pos:end="55:41"><name pos:start="55:38" pos:end="55:41">pfns</name></expr></argument>, <argument pos:start="55:44" pos:end="55:46"><expr pos:start="55:44" pos:end="55:46"><name pos:start="55:44" pos:end="55:46">err</name></expr></argument>, <argument pos:start="55:49" pos:end="55:54"><expr pos:start="55:49" pos:end="55:54"><name pos:start="55:49" pos:end="55:54">nb_pfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:27">(<expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:18">vaddr_base</name> <operator pos:start="57:20" pos:end="57:21">==</operator> <name pos:start="57:23" pos:end="57:26">NULL</name></expr>)</condition> <block pos:start="57:29" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:17">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:14">perror</name><argument_list pos:start="59:15" pos:end="59:37">(<argument pos:start="59:16" pos:end="59:36"><expr pos:start="59:16" pos:end="59:36"><literal type="string" pos:start="59:16" pos:end="59:36">"xc_map_foreign_bulk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><call pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:12">exit</name><argument_list pos:start="61:13" pos:end="61:16">(<argument pos:start="61:14" pos:end="61:15"><expr pos:start="61:14" pos:end="61:15"><operator pos:start="61:14" pos:end="61:14">-</operator><literal type="number" pos:start="61:15" pos:end="61:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:9">entry</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">vaddr_base</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:34">vaddr_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:9">entry</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:22">paddr_index</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:38">address_index</name></expr>;</expr_stmt>



    <for pos:start="73:5" pos:end="95:5">for <control pos:start="73:9" pos:end="73:47">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:27"><expr pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:26">nb_pfn</name></expr>;</condition> <incr pos:start="73:29" pos:end="73:46"><expr pos:start="73:29" pos:end="73:46"><name pos:start="73:29" pos:end="73:29">i</name> <operator pos:start="73:31" pos:end="73:32">+=</operator> <name pos:start="73:34" pos:end="73:46">BITS_PER_LONG</name></expr></incr>)</control> <block pos:start="73:49" pos:end="95:5">{<block_content pos:start="75:9" pos:end="93:55">

        <decl_stmt pos:start="75:9" pos:end="75:31"><decl pos:start="75:9" pos:end="75:30"><type pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:16">unsigned</name> <name pos:start="75:18" pos:end="75:21">long</name></type> <name pos:start="75:23" pos:end="75:26">word</name> <init pos:start="75:28" pos:end="75:30">= <expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:41">(<expr pos:start="77:13" pos:end="77:40"><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">+</operator> <name pos:start="77:18" pos:end="77:30">BITS_PER_LONG</name><operator pos:start="77:31" pos:end="77:31">)</operator> <operator pos:start="77:33" pos:end="77:33">&gt;</operator> <name pos:start="77:35" pos:end="77:40">nb_pfn</name></expr>)</condition> <block pos:start="77:43" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:39">

            <expr_stmt pos:start="79:13" pos:end="79:39"><expr pos:start="79:13" pos:end="79:38"><name pos:start="79:13" pos:end="79:13">j</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:22">nb_pfn</name> <operator pos:start="79:24" pos:end="79:24">%</operator> <name pos:start="79:26" pos:end="79:38">BITS_PER_LONG</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="85:9">else <block pos:start="81:16" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:30">

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:13">j</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:29">BITS_PER_LONG</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <while pos:start="87:9" pos:end="91:9">while <condition pos:start="87:15" pos:end="87:21">(<expr pos:start="87:16" pos:end="87:20"><name pos:start="87:16" pos:end="87:16">j</name> <operator pos:start="87:18" pos:end="87:18">&gt;</operator> <literal type="number" pos:start="87:20" pos:end="87:20">0</literal></expr>)</condition> <block pos:start="87:23" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:47">

            <expr_stmt pos:start="89:13" pos:end="89:47"><expr pos:start="89:13" pos:end="89:46"><name pos:start="89:13" pos:end="89:16">word</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <operator pos:start="89:20" pos:end="89:20">(</operator><name pos:start="89:21" pos:end="89:24">word</name> <operator pos:start="89:26" pos:end="89:27">&lt;&lt;</operator> <literal type="number" pos:start="89:29" pos:end="89:29">1</literal><operator pos:start="89:30" pos:end="89:30">)</operator> <operator pos:start="89:32" pos:end="89:32">|</operator> <operator pos:start="89:34" pos:end="89:34">!</operator><name pos:start="89:35" pos:end="89:46"><name pos:start="89:35" pos:end="89:37">err</name><index pos:start="89:38" pos:end="89:46">[<expr pos:start="89:39" pos:end="89:45"><name pos:start="89:39" pos:end="89:39">i</name> <operator pos:start="89:41" pos:end="89:41">+</operator> <operator pos:start="89:43" pos:end="89:44">--</operator><name pos:start="89:45" pos:end="89:45">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:13">entry</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:28">valid_mapping</name><index pos:start="93:29" pos:end="93:47">[<expr pos:start="93:30" pos:end="93:46"><name pos:start="93:30" pos:end="93:30">i</name> <operator pos:start="93:32" pos:end="93:32">/</operator> <name pos:start="93:34" pos:end="93:46">BITS_PER_LONG</name></expr>]</index></name> <operator pos:start="93:49" pos:end="93:49">=</operator> <name pos:start="93:51" pos:end="93:54">word</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="99:5" pos:end="99:20"><expr pos:start="99:5" pos:end="99:19"><call pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:13">qemu_free</name><argument_list pos:start="99:14" pos:end="99:19">(<argument pos:start="99:15" pos:end="99:18"><expr pos:start="99:15" pos:end="99:18"><name pos:start="99:15" pos:end="99:18">pfns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:19"><expr pos:start="101:5" pos:end="101:18"><call pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:13">qemu_free</name><argument_list pos:start="101:14" pos:end="101:18">(<argument pos:start="101:15" pos:end="101:17"><expr pos:start="101:15" pos:end="101:17"><name pos:start="101:15" pos:end="101:17">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
