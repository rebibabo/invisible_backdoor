<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14477.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_encode_video2</name><parameter_list pos:start="1:46" pos:end="7:66">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:61"><decl pos:start="3:47" pos:end="3:61"><type pos:start="3:47" pos:end="3:61"><name pos:start="3:47" pos:end="3:54">AVPacket</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">avpkt</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:66"><decl pos:start="5:47" pos:end="5:66"><type pos:start="5:47" pos:end="5:66"><specifier pos:start="5:47" pos:end="5:51">const</specifier> <name pos:start="5:53" pos:end="5:59">AVFrame</name> <modifier pos:start="5:61" pos:end="5:61">*</modifier></type><name pos:start="5:62" pos:end="5:66">frame</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:65"><decl pos:start="7:47" pos:end="7:65"><type pos:start="7:47" pos:end="7:65"><name pos:start="7:47" pos:end="7:49">int</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier></type><name pos:start="7:52" pos:end="7:65">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="129:1">{<block_content pos:start="11:5" pos:end="127:15">

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:21">user_pkt</name> <init pos:start="13:23" pos:end="13:30">= <expr pos:start="13:25" pos:end="13:30"><operator pos:start="13:25" pos:end="13:25">*</operator><name pos:start="13:26" pos:end="13:30">avpkt</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:19">got_packet_ptr</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:66">(<expr pos:start="21:9" pos:end="21:65"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:36"><name pos:start="21:11" pos:end="21:15">avctx</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">codec</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:36">capabilities</name></name> <operator pos:start="21:38" pos:end="21:38">&amp;</operator> <name pos:start="21:40" pos:end="21:54">CODEC_CAP_DELAY</name><operator pos:start="21:55" pos:end="21:55">)</operator> <operator pos:start="21:57" pos:end="21:58">&amp;&amp;</operator> <operator pos:start="21:60" pos:end="21:60">!</operator><name pos:start="21:61" pos:end="21:65">frame</name></expr>)</condition> <block pos:start="21:68" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:17">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:22">av_free_packet</name><argument_list pos:start="23:23" pos:end="23:29">(<argument pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:28">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:22">av_init_packet</name><argument_list pos:start="25:23" pos:end="25:29">(<argument pos:start="25:24" pos:end="25:28"><expr pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:28">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:13">avpkt</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">size</name></name>     <operator pos:start="27:25" pos:end="27:25">=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:67">(<expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:27">av_image_check_size</name><argument_list pos:start="35:28" pos:end="35:66">(<argument pos:start="35:29" pos:end="35:40"><expr pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:33">avctx</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:40">width</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:55"><expr pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:55"><name pos:start="35:43" pos:end="35:47">avctx</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:55">height</name></name></expr></argument>, <argument pos:start="35:58" pos:end="35:58"><expr pos:start="35:58" pos:end="35:58"><literal type="number" pos:start="35:58" pos:end="35:58">0</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:65"><expr pos:start="35:61" pos:end="35:65"><name pos:start="35:61" pos:end="35:65">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:14">av_assert0</name><argument_list pos:start="41:15" pos:end="41:37">(<argument pos:start="41:16" pos:end="41:36"><expr pos:start="41:16" pos:end="41:36"><name pos:start="41:16" pos:end="41:36"><name pos:start="41:16" pos:end="41:20">avctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">codec</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:36">encode2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:69"><expr pos:start="45:5" pos:end="45:68"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:68"><name pos:start="45:11" pos:end="45:31"><name pos:start="45:11" pos:end="45:15">avctx</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:22">codec</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:31">encode2</name></name><argument_list pos:start="45:32" pos:end="45:68">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">avctx</name></expr></argument>, <argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">avpkt</name></expr></argument>, <argument pos:start="45:47" pos:end="45:51"><expr pos:start="45:47" pos:end="45:51"><name pos:start="45:47" pos:end="45:51">frame</name></expr></argument>, <argument pos:start="45:54" pos:end="45:67"><expr pos:start="45:54" pos:end="45:67"><name pos:start="45:54" pos:end="45:67">got_packet_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><call pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:14">av_assert0</name><argument_list pos:start="47:15" pos:end="47:24">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:18">ret</name> <operator pos:start="47:20" pos:end="47:21">&lt;=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="83:5"><if pos:start="51:5" pos:end="83:5">if <condition pos:start="51:8" pos:end="51:67">(<expr pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:13">avpkt</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:19">data</name></name> <operator pos:start="51:21" pos:end="51:22">&amp;&amp;</operator> <name pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:28">avpkt</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:34">data</name></name> <operator pos:start="51:36" pos:end="51:37">==</operator> <name pos:start="51:39" pos:end="51:66"><name pos:start="51:39" pos:end="51:43">avctx</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:53">internal</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:66">byte_buffer</name></name></expr>)</condition> <block pos:start="51:69" pos:end="83:5">{<block_content pos:start="53:9" pos:end="81:9">

        <if_stmt pos:start="53:9" pos:end="81:9"><if pos:start="53:9" pos:end="73:9">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:20">user_pkt</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:25">data</name></name></expr>)</condition> <block pos:start="53:28" pos:end="73:9">{<block_content pos:start="55:13" pos:end="71:48">

            <if_stmt pos:start="55:13" pos:end="67:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:45">(<expr pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:24">user_pkt</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:29">size</name></name> <operator pos:start="55:31" pos:end="55:32">&gt;=</operator> <name pos:start="55:34" pos:end="55:44"><name pos:start="55:34" pos:end="55:38">avpkt</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:44">size</name></name></expr>)</condition> <block pos:start="55:47" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:64">

                <expr_stmt pos:start="57:17" pos:end="57:64"><expr pos:start="57:17" pos:end="57:63"><call pos:start="57:17" pos:end="57:63"><name pos:start="57:17" pos:end="57:22">memcpy</name><argument_list pos:start="57:23" pos:end="57:63">(<argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:31">user_pkt</name><operator pos:start="57:32" pos:end="57:32">.</operator><name pos:start="57:33" pos:end="57:36">data</name></name></expr></argument>, <argument pos:start="57:39" pos:end="57:49"><expr pos:start="57:39" pos:end="57:49"><name pos:start="57:39" pos:end="57:49"><name pos:start="57:39" pos:end="57:43">avpkt</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:49">data</name></name></expr></argument>, <argument pos:start="57:52" pos:end="57:62"><expr pos:start="57:52" pos:end="57:62"><name pos:start="57:52" pos:end="57:62"><name pos:start="57:52" pos:end="57:56">avpkt</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="67:13">else <block pos:start="59:20" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:25">

                <expr_stmt pos:start="61:17" pos:end="61:107"><expr pos:start="61:17" pos:end="61:106"><call pos:start="61:17" pos:end="61:106"><name pos:start="61:17" pos:end="61:22">av_log</name><argument_list pos:start="61:23" pos:end="61:106">(<argument pos:start="61:24" pos:end="61:28"><expr pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:28">avctx</name></expr></argument>, <argument pos:start="61:31" pos:end="61:42"><expr pos:start="61:31" pos:end="61:42"><name pos:start="61:31" pos:end="61:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:45" pos:end="61:92"><expr pos:start="61:45" pos:end="61:92"><literal type="string" pos:start="61:45" pos:end="61:92">"Provided packet is too small, needs to be %d\n"</literal></expr></argument>, <argument pos:start="61:95" pos:end="61:105"><expr pos:start="61:95" pos:end="61:105"><name pos:start="61:95" pos:end="61:105"><name pos:start="61:95" pos:end="61:99">avpkt</name><operator pos:start="61:100" pos:end="61:101">-&gt;</operator><name pos:start="61:102" pos:end="61:105">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:44"><expr pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:27"><name pos:start="63:17" pos:end="63:21">avpkt</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:27">size</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:43"><name pos:start="63:31" pos:end="63:38">user_pkt</name><operator pos:start="63:39" pos:end="63:39">.</operator><name pos:start="63:40" pos:end="63:43">size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:25"><expr pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <operator pos:start="65:23" pos:end="65:23">-</operator><literal type="number" pos:start="65:24" pos:end="65:24">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:44"><expr pos:start="69:13" pos:end="69:43"><name pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:17">avpkt</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">data</name></name>     <operator pos:start="69:29" pos:end="69:29">=</operator> <name pos:start="69:31" pos:end="69:43"><name pos:start="69:31" pos:end="69:38">user_pkt</name><operator pos:start="69:39" pos:end="69:39">.</operator><name pos:start="69:40" pos:end="69:43">data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:48"><expr pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:17">avpkt</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">destruct</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:47"><name pos:start="71:31" pos:end="71:38">user_pkt</name><operator pos:start="71:39" pos:end="71:39">.</operator><name pos:start="71:40" pos:end="71:47">destruct</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="81:9">else <block pos:start="73:16" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:13">

            <if_stmt pos:start="75:13" pos:end="79:13"><if pos:start="75:13" pos:end="79:13">if <condition pos:start="75:16" pos:end="75:41">(<expr pos:start="75:17" pos:end="75:40"><call pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:29">av_dup_packet</name><argument_list pos:start="75:30" pos:end="75:36">(<argument pos:start="75:31" pos:end="75:35"><expr pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:35">avpkt</name></expr></argument>)</argument_list></call> <operator pos:start="75:38" pos:end="75:38">&lt;</operator> <literal type="number" pos:start="75:40" pos:end="75:40">0</literal></expr>)</condition> <block pos:start="75:43" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:38">

                <expr_stmt pos:start="77:17" pos:end="77:38"><expr pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:19">ret</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:37"><name pos:start="77:23" pos:end="77:29">AVERROR</name><argument_list pos:start="77:30" pos:end="77:37">(<argument pos:start="77:31" pos:end="77:36"><expr pos:start="77:31" pos:end="77:36"><name pos:start="77:31" pos:end="77:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="115:5"><if pos:start="87:5" pos:end="115:5">if <condition pos:start="87:8" pos:end="87:13">(<expr pos:start="87:9" pos:end="87:12"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:12">ret</name></expr>)</condition> <block pos:start="87:15" pos:end="115:5">{<block_content pos:start="89:9" pos:end="113:30">

        <if_stmt pos:start="89:9" pos:end="95:49"><if pos:start="89:9" pos:end="91:28">if <condition pos:start="89:12" pos:end="89:29">(<expr pos:start="89:13" pos:end="89:28"><operator pos:start="89:13" pos:end="89:13">!</operator><operator pos:start="89:14" pos:end="89:14">*</operator><name pos:start="89:15" pos:end="89:28">got_packet_ptr</name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:28"><block_content pos:start="91:13" pos:end="91:28">

            <expr_stmt pos:start="91:13" pos:end="91:28"><expr pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:17">avpkt</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:23">size</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="93:9" pos:end="95:49">else if <condition pos:start="93:17" pos:end="93:65">(<expr pos:start="93:18" pos:end="93:64"><operator pos:start="93:18" pos:end="93:18">!</operator><operator pos:start="93:19" pos:end="93:19">(</operator><name pos:start="93:20" pos:end="93:45"><name pos:start="93:20" pos:end="93:24">avctx</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:31">codec</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:45">capabilities</name></name> <operator pos:start="93:47" pos:end="93:47">&amp;</operator> <name pos:start="93:49" pos:end="93:63">CODEC_CAP_DELAY</name><operator pos:start="93:64" pos:end="93:64">)</operator></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:49"><block_content pos:start="95:13" pos:end="95:49">

            <expr_stmt pos:start="95:13" pos:end="95:49"><expr pos:start="95:13" pos:end="95:48"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:17">avpkt</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:22">pts</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:35"><name pos:start="95:26" pos:end="95:30">avpkt</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:35">dts</name></name> <operator pos:start="95:37" pos:end="95:37">=</operator> <name pos:start="95:39" pos:end="95:48"><name pos:start="95:39" pos:end="95:43">frame</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:48">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="109:9"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="101:50">(<expr pos:start="99:13" pos:end="101:49"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:26"><name pos:start="99:14" pos:end="99:21">user_pkt</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:26">data</name></name> <operator pos:start="99:28" pos:end="99:29">&amp;&amp;</operator> <name pos:start="99:31" pos:end="99:41"><name pos:start="99:31" pos:end="99:35">avpkt</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:41">data</name></name> <operator pos:start="99:43" pos:end="99:44">&amp;&amp;</operator>

            <name pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:17">avpkt</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:27">destruct</name></name> <operator pos:start="101:29" pos:end="101:30">==</operator> <name pos:start="101:32" pos:end="101:49">av_destruct_packet</name></expr>)</condition> <block pos:start="101:52" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:39">

            <decl_stmt pos:start="103:13" pos:end="103:100"><decl pos:start="103:13" pos:end="103:99"><type pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:19">uint8_t</name> <modifier pos:start="103:21" pos:end="103:21">*</modifier></type><name pos:start="103:22" pos:end="103:29">new_data</name> <init pos:start="103:31" pos:end="103:99">= <expr pos:start="103:33" pos:end="103:99"><call pos:start="103:33" pos:end="103:99"><name pos:start="103:33" pos:end="103:42">av_realloc</name><argument_list pos:start="103:43" pos:end="103:99">(<argument pos:start="103:44" pos:end="103:54"><expr pos:start="103:44" pos:end="103:54"><name pos:start="103:44" pos:end="103:54"><name pos:start="103:44" pos:end="103:48">avpkt</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:54">data</name></name></expr></argument>, <argument pos:start="103:57" pos:end="103:98"><expr pos:start="103:57" pos:end="103:98"><name pos:start="103:57" pos:end="103:67"><name pos:start="103:57" pos:end="103:61">avpkt</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:67">size</name></name> <operator pos:start="103:69" pos:end="103:69">+</operator> <name pos:start="103:71" pos:end="103:98">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="105:13" pos:end="107:39"><if pos:start="105:13" pos:end="107:39">if <condition pos:start="105:16" pos:end="105:25">(<expr pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:24">new_data</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:39"><block_content pos:start="107:17" pos:end="107:39">

                <expr_stmt pos:start="107:17" pos:end="107:39"><expr pos:start="107:17" pos:end="107:38"><name pos:start="107:17" pos:end="107:27"><name pos:start="107:17" pos:end="107:21">avpkt</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:27">data</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <name pos:start="107:31" pos:end="107:38">new_data</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:30"><expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:13">avctx</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:27">frame_number</name></name><operator pos:start="113:28" pos:end="113:29">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="121:30"><if pos:start="119:5" pos:end="121:30">if <condition pos:start="119:8" pos:end="119:36">(<expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">&lt;</operator> <literal type="number" pos:start="119:15" pos:end="119:15">0</literal> <operator pos:start="119:17" pos:end="119:18">||</operator> <operator pos:start="119:20" pos:end="119:20">!</operator><operator pos:start="119:21" pos:end="119:21">*</operator><name pos:start="119:22" pos:end="119:35">got_packet_ptr</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:30"><block_content pos:start="121:9" pos:end="121:30">

        <expr_stmt pos:start="121:9" pos:end="121:30"><expr pos:start="121:9" pos:end="121:29"><call pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:22">av_free_packet</name><argument_list pos:start="121:23" pos:end="121:29">(<argument pos:start="121:24" pos:end="121:28"><expr pos:start="121:24" pos:end="121:28"><name pos:start="121:24" pos:end="121:28">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:13"><expr pos:start="125:5" pos:end="125:12"><call pos:start="125:5" pos:end="125:12"><name pos:start="125:5" pos:end="125:10">emms_c</name><argument_list pos:start="125:11" pos:end="125:12">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:15">return <expr pos:start="127:12" pos:end="127:14"><name pos:start="127:12" pos:end="127:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
