<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14586.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">bdrv_dirty_bitmap_get_meta</name><parameter_list pos:start="1:31" pos:end="5:46">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:54"><decl pos:start="3:32" pos:end="3:54"><type pos:start="3:32" pos:end="3:54"><name pos:start="3:32" pos:end="3:46">BdrvDirtyBitmap</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">bitmap</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:70"><decl pos:start="3:57" pos:end="3:70"><type pos:start="3:57" pos:end="3:70"><name pos:start="3:57" pos:end="3:63">int64_t</name></type> <name pos:start="3:65" pos:end="3:70">sector</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:45"><decl pos:start="5:32" pos:end="5:45"><type pos:start="5:32" pos:end="5:45"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:45">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="31:1">{<block_content pos:start="9:5" pos:end="29:17">

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">sectors_per_bit</name> <init pos:start="11:25" pos:end="11:64">= <expr pos:start="11:27" pos:end="11:64"><literal type="number" pos:start="11:27" pos:end="11:27">1</literal> <operator pos:start="11:29" pos:end="11:30">&lt;&lt;</operator> <call pos:start="11:32" pos:end="11:64"><name pos:start="11:32" pos:end="11:50">hbitmap_granularity</name><argument_list pos:start="11:51" pos:end="11:64">(<argument pos:start="11:52" pos:end="11:63"><expr pos:start="11:52" pos:end="11:63"><name pos:start="11:52" pos:end="11:63"><name pos:start="11:52" pos:end="11:57">bitmap</name><operator pos:start="11:58" pos:end="11:59">-&gt;</operator><name pos:start="11:60" pos:end="11:63">meta</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:55">/* To optimize: we can make hbitmap to internally check the range in a

     * coarse level, or at least do it word by word. */</comment>

    <for pos:start="19:5" pos:end="27:5">for <control pos:start="19:9" pos:end="19:67">(<init pos:start="19:10" pos:end="19:20"><expr pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:19">sector</name></expr>;</init> <condition pos:start="19:22" pos:end="19:45"><expr pos:start="19:22" pos:end="19:44"><name pos:start="19:22" pos:end="19:22">i</name> <operator pos:start="19:24" pos:end="19:24">&lt;</operator> <name pos:start="19:26" pos:end="19:31">sector</name> <operator pos:start="19:33" pos:end="19:33">+</operator> <name pos:start="19:35" pos:end="19:44">nb_sectors</name></expr>;</condition> <incr pos:start="19:47" pos:end="19:66"><expr pos:start="19:47" pos:end="19:66"><name pos:start="19:47" pos:end="19:47">i</name> <operator pos:start="19:49" pos:end="19:50">+=</operator> <name pos:start="19:52" pos:end="19:66">sectors_per_bit</name></expr></incr>)</control> <block pos:start="19:69" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:9">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:23">hbitmap_get</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:30">bitmap</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:36">meta</name></name></expr></argument>, <argument pos:start="21:39" pos:end="21:39"><expr pos:start="21:39" pos:end="21:39"><name pos:start="21:39" pos:end="21:39">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:43" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:24">

            <return pos:start="23:13" pos:end="23:24">return <expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="29:5" pos:end="29:17">return <expr pos:start="29:12" pos:end="29:16"><name pos:start="29:12" pos:end="29:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
