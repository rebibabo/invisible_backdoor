<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8329.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">write_packet</name><parameter_list pos:start="1:24" pos:end="1:58">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">WVMuxContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">wc</name> <init pos:start="5:22" pos:end="5:35">= <expr pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:35">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">codec</name> <init pos:start="7:27" pos:end="7:48">= <expr pos:start="7:29" pos:end="7:48"><name pos:start="7:29" pos:end="7:41"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:38">streams</name><index pos:start="7:39" pos:end="7:41">[<expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr>]</index></name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:48">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:18">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:17">left</name> <init pos:start="15:19" pos:end="15:29">= <expr pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:23">pkt</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:29">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">ptr</name> <init pos:start="17:18" pos:end="17:28">= <expr pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:22">pkt</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:28">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">off</name> <init pos:start="19:13" pos:end="19:41">= <expr pos:start="19:15" pos:end="19:41"><ternary pos:start="19:15" pos:end="19:41"><condition pos:start="19:15" pos:end="19:35"><expr pos:start="19:15" pos:end="19:33"><name pos:start="19:15" pos:end="19:29"><name pos:start="19:15" pos:end="19:19">codec</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:29">channels</name></name> <operator pos:start="19:31" pos:end="19:31">&gt;</operator> <literal type="number" pos:start="19:33" pos:end="19:33">2</literal></expr> ?</condition><then pos:start="19:37" pos:end="19:37"> <expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">4</literal></expr> </then><else pos:start="19:39" pos:end="19:41">: <expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="25:44">/* FIXME: Simplify decoder/demuxer so bellow code can support midstream

     *        change of stream parameters */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:6">wc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">duration</name></name> <operator pos:start="27:18" pos:end="27:19">+=</operator> <name pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:23">pkt</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:33">duration</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><call pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:16">ffio_wfourcc</name><argument_list pos:start="29:17" pos:end="29:28">(<argument pos:start="29:18" pos:end="29:19"><expr pos:start="29:18" pos:end="29:19"><name pos:start="29:18" pos:end="29:19">pb</name></expr></argument>, <argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><literal type="string" pos:start="29:22" pos:end="29:27">"wvpk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">off</name></expr>)</condition> <block pos:start="31:14" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:19">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:33"><name pos:start="33:16" pos:end="33:22">AV_RL32</name><argument_list pos:start="33:23" pos:end="33:33">(<argument pos:start="33:24" pos:end="33:32"><expr pos:start="33:24" pos:end="33:32"><name pos:start="33:24" pos:end="33:32"><name pos:start="33:24" pos:end="33:26">pkt</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:32">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:39"><if pos:start="35:9" pos:end="37:39">if <condition pos:start="35:12" pos:end="35:23">(<expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:16">size</name> <operator pos:start="35:18" pos:end="35:19">&lt;=</operator> <literal type="number" pos:start="35:21" pos:end="35:22">12</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:39"><block_content pos:start="37:13" pos:end="37:39">

            <return pos:start="37:13" pos:end="37:39">return <expr pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:12">size</name> <operator pos:start="39:14" pos:end="39:15">-=</operator> <literal type="number" pos:start="39:17" pos:end="39:18">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:25">

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:12">size</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:18">pkt</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:24">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:35"><if pos:start="49:5" pos:end="51:35">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:12">size</name> <operator pos:start="49:14" pos:end="49:14">+</operator> <name pos:start="49:16" pos:end="49:18">off</name> <operator pos:start="49:20" pos:end="49:20">&gt;</operator> <name pos:start="49:22" pos:end="49:25">left</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:35"><block_content pos:start="51:9" pos:end="51:35">

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><call pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:13">avio_wl32</name><argument_list pos:start="55:14" pos:end="55:28">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>, <argument pos:start="55:19" pos:end="55:27"><expr pos:start="55:19" pos:end="55:27"><name pos:start="55:19" pos:end="55:22">size</name> <operator pos:start="55:24" pos:end="55:24">+</operator> <literal type="number" pos:start="55:26" pos:end="55:27">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><call pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:13">avio_wl16</name><argument_list pos:start="57:14" pos:end="57:24">(<argument pos:start="57:15" pos:end="57:16"><expr pos:start="57:15" pos:end="57:16"><name pos:start="57:15" pos:end="57:16">pb</name></expr></argument>, <argument pos:start="57:19" pos:end="57:23"><expr pos:start="57:19" pos:end="57:23"><literal type="number" pos:start="57:19" pos:end="57:23">0x410</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:19"><expr pos:start="59:5" pos:end="59:18"><call pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:11">avio_w8</name><argument_list pos:start="59:12" pos:end="59:18">(<argument pos:start="59:13" pos:end="59:14"><expr pos:start="59:13" pos:end="59:14"><name pos:start="59:13" pos:end="59:14">pb</name></expr></argument>, <argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><call pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:11">avio_w8</name><argument_list pos:start="61:12" pos:end="61:18">(<argument pos:start="61:13" pos:end="61:14"><expr pos:start="61:13" pos:end="61:14"><name pos:start="61:13" pos:end="61:14">pb</name></expr></argument>, <argument pos:start="61:17" pos:end="61:17"><expr pos:start="61:17" pos:end="61:17"><literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><call pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:13">avio_wl32</name><argument_list pos:start="63:14" pos:end="63:21">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><operator pos:start="63:19" pos:end="63:19">-</operator><literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><call pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:13">avio_wl32</name><argument_list pos:start="65:14" pos:end="65:27">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:26"><expr pos:start="65:19" pos:end="65:26"><name pos:start="65:19" pos:end="65:26"><name pos:start="65:19" pos:end="65:21">pkt</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:26">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:15"><expr pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">ptr</name> <operator pos:start="67:9" pos:end="67:10">+=</operator> <name pos:start="67:12" pos:end="67:14">off</name></expr>;</expr_stmt> <expr_stmt pos:start="67:17" pos:end="67:28"><expr pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:20">left</name> <operator pos:start="67:22" pos:end="67:23">-=</operator> <name pos:start="67:25" pos:end="67:27">off</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:29"><expr pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:9">flags</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <call pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:19">AV_RL32</name><argument_list pos:start="69:20" pos:end="69:28">(<argument pos:start="69:21" pos:end="69:27"><expr pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:23">ptr</name> <operator pos:start="69:25" pos:end="69:25">+</operator> <literal type="number" pos:start="69:27" pos:end="69:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:30"><expr pos:start="71:5" pos:end="71:29"><call pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:14">avio_write</name><argument_list pos:start="71:15" pos:end="71:29">(<argument pos:start="71:16" pos:end="71:17"><expr pos:start="71:16" pos:end="71:17"><name pos:start="71:16" pos:end="71:17">pb</name></expr></argument>, <argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ptr</name></expr></argument>, <argument pos:start="71:25" pos:end="71:28"><expr pos:start="71:25" pos:end="71:28"><name pos:start="71:25" pos:end="71:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:16"><expr pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:7">ptr</name> <operator pos:start="73:9" pos:end="73:10">+=</operator> <name pos:start="73:12" pos:end="73:15">size</name></expr>;</expr_stmt> <expr_stmt pos:start="73:18" pos:end="73:30"><expr pos:start="73:18" pos:end="73:29"><name pos:start="73:18" pos:end="73:21">left</name> <operator pos:start="73:23" pos:end="73:24">-=</operator> <name pos:start="73:26" pos:end="73:29">size</name></expr>;</expr_stmt>



    <while pos:start="77:5" pos:end="113:5">while <condition pos:start="77:11" pos:end="79:40">(<expr pos:start="77:12" pos:end="79:39"><operator pos:start="77:12" pos:end="77:12">!</operator><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:18">flags</name> <operator pos:start="77:20" pos:end="77:20">&amp;</operator> <name pos:start="77:22" pos:end="77:33">WV_END_BLOCK</name><operator pos:start="77:34" pos:end="77:34">)</operator> <operator pos:start="77:36" pos:end="77:37">&amp;&amp;</operator>

            <operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:17">left</name> <operator pos:start="79:19" pos:end="79:20">&gt;=</operator> <literal type="number" pos:start="79:22" pos:end="79:24">4</literal> <operator pos:start="79:24" pos:end="79:24">+</operator> <name pos:start="79:26" pos:end="79:38">WV_EXTRA_SIZE</name><operator pos:start="79:39" pos:end="79:39">)</operator></expr>)</condition> <block pos:start="79:42" pos:end="113:5">{<block_content pos:start="81:9" pos:end="111:44">

        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><call pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:20">ffio_wfourcc</name><argument_list pos:start="81:21" pos:end="81:32">(<argument pos:start="81:22" pos:end="81:23"><expr pos:start="81:22" pos:end="81:23"><name pos:start="81:22" pos:end="81:23">pb</name></expr></argument>, <argument pos:start="81:26" pos:end="81:31"><expr pos:start="81:26" pos:end="81:31"><literal type="string" pos:start="81:26" pos:end="81:31">"wvpk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:12">size</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:27"><name pos:start="83:16" pos:end="83:22">AV_RL32</name><argument_list pos:start="83:23" pos:end="83:27">(<argument pos:start="83:24" pos:end="83:26"><expr pos:start="83:24" pos:end="83:26"><name pos:start="83:24" pos:end="83:26">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:17"><expr pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:11">ptr</name> <operator pos:start="85:13" pos:end="85:14">+=</operator> <literal type="number" pos:start="85:16" pos:end="85:16">4</literal></expr>;</expr_stmt> <expr_stmt pos:start="85:19" pos:end="85:28"><expr pos:start="85:19" pos:end="85:27"><name pos:start="85:19" pos:end="85:22">left</name> <operator pos:start="85:24" pos:end="85:25">-=</operator> <literal type="number" pos:start="85:27" pos:end="85:27">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:39"><if pos:start="87:9" pos:end="89:39">if <condition pos:start="87:12" pos:end="87:42">(<expr pos:start="87:13" pos:end="87:41"><name pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:16">size</name> <argument_list type="generic" pos:start="87:18" pos:end="87:36">&lt; <argument pos:start="87:20" pos:end="87:34"><expr pos:start="87:20" pos:end="87:34"><literal type="number" pos:start="87:20" pos:end="87:21">24</literal> <operator pos:start="87:23" pos:end="87:24">||</operator> <name pos:start="87:26" pos:end="87:29">size</name> <operator pos:start="87:31" pos:end="87:31">-</operator> <literal type="number" pos:start="87:33" pos:end="87:34">24</literal></expr></argument> &gt;</argument_list></name> <name pos:start="87:38" pos:end="87:41">left</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:39"><block_content pos:start="89:13" pos:end="89:39">

            <return pos:start="89:13" pos:end="89:39">return <expr pos:start="89:20" pos:end="89:38"><name pos:start="89:20" pos:end="89:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><call pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:17">avio_wl32</name><argument_list pos:start="91:18" pos:end="91:27">(<argument pos:start="91:19" pos:end="91:20"><expr pos:start="91:19" pos:end="91:20"><name pos:start="91:19" pos:end="91:20">pb</name></expr></argument>, <argument pos:start="91:23" pos:end="91:26"><expr pos:start="91:23" pos:end="91:26"><name pos:start="91:23" pos:end="91:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><call pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:17">avio_wl16</name><argument_list pos:start="93:18" pos:end="93:28">(<argument pos:start="93:19" pos:end="93:20"><expr pos:start="93:19" pos:end="93:20"><name pos:start="93:19" pos:end="93:20">pb</name></expr></argument>, <argument pos:start="93:23" pos:end="93:27"><expr pos:start="93:23" pos:end="93:27"><literal type="number" pos:start="93:23" pos:end="93:27">0x410</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><call pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:15">avio_w8</name><argument_list pos:start="95:16" pos:end="95:22">(<argument pos:start="95:17" pos:end="95:18"><expr pos:start="95:17" pos:end="95:18"><name pos:start="95:17" pos:end="95:18">pb</name></expr></argument>, <argument pos:start="95:21" pos:end="95:21"><expr pos:start="95:21" pos:end="95:21"><literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:23"><expr pos:start="97:9" pos:end="97:22"><call pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:15">avio_w8</name><argument_list pos:start="97:16" pos:end="97:22">(<argument pos:start="97:17" pos:end="97:18"><expr pos:start="97:17" pos:end="97:18"><name pos:start="97:17" pos:end="97:18">pb</name></expr></argument>, <argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><call pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:17">avio_wl32</name><argument_list pos:start="99:18" pos:end="99:25">(<argument pos:start="99:19" pos:end="99:20"><expr pos:start="99:19" pos:end="99:20"><name pos:start="99:19" pos:end="99:20">pb</name></expr></argument>, <argument pos:start="99:23" pos:end="99:24"><expr pos:start="99:23" pos:end="99:24"><operator pos:start="99:23" pos:end="99:23">-</operator><literal type="number" pos:start="99:24" pos:end="99:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><call pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:17">avio_wl32</name><argument_list pos:start="101:18" pos:end="101:31">(<argument pos:start="101:19" pos:end="101:20"><expr pos:start="101:19" pos:end="101:20"><name pos:start="101:19" pos:end="101:20">pb</name></expr></argument>, <argument pos:start="101:23" pos:end="101:30"><expr pos:start="101:23" pos:end="101:30"><name pos:start="101:23" pos:end="101:30"><name pos:start="101:23" pos:end="101:25">pkt</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:30">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:33"><expr pos:start="103:9" pos:end="103:32"><name pos:start="103:9" pos:end="103:13">flags</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <call pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:23">AV_RL32</name><argument_list pos:start="103:24" pos:end="103:32">(<argument pos:start="103:25" pos:end="103:31"><expr pos:start="103:25" pos:end="103:31"><name pos:start="103:25" pos:end="103:27">ptr</name> <operator pos:start="103:29" pos:end="103:29">+</operator> <literal type="number" pos:start="103:31" pos:end="103:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><call pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:18">avio_write</name><argument_list pos:start="105:19" pos:end="105:42">(<argument pos:start="105:20" pos:end="105:21"><expr pos:start="105:20" pos:end="105:21"><name pos:start="105:20" pos:end="105:21">pb</name></expr></argument>, <argument pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">ptr</name></expr></argument>, <argument pos:start="105:29" pos:end="105:41"><expr pos:start="105:29" pos:end="105:41"><name pos:start="105:29" pos:end="105:41">WV_EXTRA_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:11">ptr</name> <operator pos:start="107:13" pos:end="107:14">+=</operator> <name pos:start="107:16" pos:end="107:28">WV_EXTRA_SIZE</name></expr>;</expr_stmt> <expr_stmt pos:start="107:31" pos:end="107:52"><expr pos:start="107:31" pos:end="107:51"><name pos:start="107:31" pos:end="107:34">left</name> <operator pos:start="107:36" pos:end="107:37">-=</operator> <name pos:start="107:39" pos:end="107:51">WV_EXTRA_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:39"><expr pos:start="109:9" pos:end="109:38"><call pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:18">avio_write</name><argument_list pos:start="109:19" pos:end="109:38">(<argument pos:start="109:20" pos:end="109:21"><expr pos:start="109:20" pos:end="109:21"><name pos:start="109:20" pos:end="109:21">pb</name></expr></argument>, <argument pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:26">ptr</name></expr></argument>, <argument pos:start="109:29" pos:end="109:37"><expr pos:start="109:29" pos:end="109:37"><name pos:start="109:29" pos:end="109:32">size</name> <operator pos:start="109:34" pos:end="109:34">-</operator> <literal type="number" pos:start="109:36" pos:end="109:37">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:25"><expr pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:11">ptr</name> <operator pos:start="111:13" pos:end="111:14">+=</operator> <name pos:start="111:16" pos:end="111:19">size</name> <operator pos:start="111:21" pos:end="111:21">-</operator> <literal type="number" pos:start="111:23" pos:end="111:24">24</literal></expr>;</expr_stmt> <expr_stmt pos:start="111:27" pos:end="111:44"><expr pos:start="111:27" pos:end="111:43"><name pos:start="111:27" pos:end="111:30">left</name> <operator pos:start="111:32" pos:end="111:33">-=</operator> <name pos:start="111:35" pos:end="111:38">size</name> <operator pos:start="111:40" pos:end="111:40">-</operator> <literal type="number" pos:start="111:42" pos:end="111:43">24</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
