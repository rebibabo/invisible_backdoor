<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5620.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">update_packetheader</name><parameter_list pos:start="1:31" pos:end="1:87">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">NUTContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">nut</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:61">ByteIOContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">bc</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:86"><decl pos:start="1:68" pos:end="1:86"><type pos:start="1:68" pos:end="1:86"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:86">additional_size</name></decl></parameter>)</parameter_list><block pos:start="1:88" pos:end="41:1">{<block_content pos:start="3:5" pos:end="39:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">int64_t</name></type> <name pos:start="3:13" pos:end="3:17">start</name><init pos:start="3:18" pos:end="3:36">= <expr pos:start="3:20" pos:end="3:36"><name pos:start="3:20" pos:end="3:36"><name pos:start="3:20" pos:end="3:22">nut</name><operator pos:start="3:23" pos:end="3:24">-&gt;</operator><name pos:start="3:25" pos:end="3:36">packet_start</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">cur</name><init pos:start="5:16" pos:end="5:30">= <expr pos:start="5:18" pos:end="5:30"><call pos:start="5:18" pos:end="5:30"><name pos:start="5:18" pos:end="5:26">url_ftell</name><argument_list pos:start="5:27" pos:end="5:30">(<argument pos:start="5:28" pos:end="5:29"><expr pos:start="5:28" pos:end="5:29"><name pos:start="5:28" pos:end="5:29">bc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name><init pos:start="7:13" pos:end="7:43">= <expr pos:start="7:15" pos:end="7:43"><name pos:start="7:15" pos:end="7:17">cur</name> <operator pos:start="7:19" pos:end="7:19">-</operator> <name pos:start="7:21" pos:end="7:25">start</name> <operator pos:start="7:27" pos:end="7:27">+</operator> <name pos:start="7:29" pos:end="7:43">additional_size</name></expr></init></decl>;</decl_stmt>

    

    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="35:5">if<condition pos:start="11:7" pos:end="11:40">(<expr pos:start="11:8" pos:end="11:39"><name pos:start="11:8" pos:end="11:11">size</name> <operator pos:start="11:13" pos:end="11:14">!=</operator> <name pos:start="11:16" pos:end="11:39"><name pos:start="11:16" pos:end="11:18">nut</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:39">written_packet_size</name></name></expr>)</condition><block pos:start="11:41" pos:end="35:5">{<block_content pos:start="13:9" pos:end="33:39">

        <decl_stmt pos:start="13:9" pos:end="13:14"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:50">( <argument pos:start="17:17" pos:end="17:48"><expr pos:start="17:17" pos:end="17:48"><name pos:start="17:17" pos:end="17:20">size</name> <operator pos:start="17:22" pos:end="17:23">&lt;=</operator> <name pos:start="17:25" pos:end="17:48"><name pos:start="17:25" pos:end="17:27">nut</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:48">written_packet_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    

        <expr_stmt pos:start="21:9" pos:end="21:54"><expr pos:start="21:9" pos:end="21:53"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:17">url_fseek</name><argument_list pos:start="21:18" pos:end="21:53">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">bc</name></expr></argument>, <argument pos:start="21:23" pos:end="21:42"><expr pos:start="21:23" pos:end="21:42"><name pos:start="21:23" pos:end="21:42"><name pos:start="21:23" pos:end="21:25">nut</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:42">packet_size_pos</name></name></expr></argument>, <argument pos:start="21:45" pos:end="21:52"><expr pos:start="21:45" pos:end="21:52"><name pos:start="21:45" pos:end="21:52">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="23:9" pos:end="25:31">for<control pos:start="23:12" pos:end="23:79">(<init pos:start="23:13" pos:end="23:31"><expr pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:13">i</name><operator pos:start="23:14" pos:end="23:14">=</operator><call pos:start="23:15" pos:end="23:30"><name pos:start="23:15" pos:end="23:24">get_length</name><argument_list pos:start="23:25" pos:end="23:30">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">size</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="23:33" pos:end="23:73"><expr pos:start="23:33" pos:end="23:72"><name pos:start="23:33" pos:end="23:33">i</name> <operator pos:start="23:35" pos:end="23:35">&lt;</operator> <call pos:start="23:37" pos:end="23:72"><name pos:start="23:37" pos:end="23:46">get_length</name><argument_list pos:start="23:47" pos:end="23:72">(<argument pos:start="23:48" pos:end="23:71"><expr pos:start="23:48" pos:end="23:71"><name pos:start="23:48" pos:end="23:71"><name pos:start="23:48" pos:end="23:50">nut</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:71">written_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="23:75" pos:end="23:78"><expr pos:start="23:75" pos:end="23:78"><name pos:start="23:75" pos:end="23:75">i</name><operator pos:start="23:76" pos:end="23:77">+=</operator><literal type="number" pos:start="23:78" pos:end="23:78">7</literal></expr></incr>)</control><block type="pseudo" pos:start="25:13" pos:end="25:31"><block_content pos:start="25:13" pos:end="25:31">

            <expr_stmt pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:30"><call pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:20">put_byte</name><argument_list pos:start="25:21" pos:end="25:30">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">bc</name></expr></argument>, <argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><literal type="number" pos:start="25:26" pos:end="25:29">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><call pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">put_v</name><argument_list pos:start="27:14" pos:end="27:23">(<argument pos:start="27:15" pos:end="27:16"><expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">bc</name></expr></argument>, <argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><call pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:17">url_fseek</name><argument_list pos:start="31:18" pos:end="31:36">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">bc</name></expr></argument>, <argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">cur</name></expr></argument>, <argument pos:start="31:28" pos:end="31:35"><expr pos:start="31:28" pos:end="31:35"><name pos:start="31:28" pos:end="31:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:11">nut</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:32">written_packet_size</name></name><operator pos:start="33:33" pos:end="33:33">=</operator> <name pos:start="33:35" pos:end="33:38">size</name></expr>;</expr_stmt> <comment type="line" pos:start="33:41" pos:end="33:123">//FIXME may fail if multiple updates with differing sizes, as get_length may differ</comment>

    </block_content>}</block></if></if_stmt>

    

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
