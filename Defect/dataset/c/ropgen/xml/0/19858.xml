<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19858.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">search_for_quantizers_twoloop</name><parameter_list pos:start="1:42" pos:end="7:61">(<parameter pos:start="1:43" pos:end="1:63"><decl pos:start="1:43" pos:end="1:63"><type pos:start="1:43" pos:end="1:63"><name pos:start="1:43" pos:end="1:56">AVCodecContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">avctx</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:58"><decl pos:start="3:43" pos:end="3:58"><type pos:start="3:43" pos:end="3:58"><name pos:start="3:43" pos:end="3:55">AACEncContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:58">s</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:67"><decl pos:start="5:43" pos:end="5:67"><type pos:start="5:43" pos:end="5:67"><name pos:start="5:43" pos:end="5:62">SingleChannelElement</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:67">sce</name></decl></parameter>,

                                          <parameter pos:start="7:43" pos:end="7:60"><decl pos:start="7:43" pos:end="7:60"><type pos:start="7:43" pos:end="7:60"><specifier pos:start="7:43" pos:end="7:47">const</specifier> <name pos:start="7:49" pos:end="7:53">float</name></type> <name pos:start="7:55" pos:end="7:60">lambda</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="275:1">{<block_content pos:start="11:5" pos:end="273:32">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">start</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>, <decl pos:start="11:20" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:20">i</name></decl>, <decl pos:start="11:23" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:23">w</name></decl>, <decl pos:start="11:26" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:27">w2</name></decl>, <decl pos:start="11:30" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:30">g</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:83"><decl pos:start="13:5" pos:end="13:82"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">destbits</name> <init pos:start="13:18" pos:end="13:82">= <expr pos:start="13:20" pos:end="13:82"><name pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:24">avctx</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:34">bit_rate</name></name> <operator pos:start="13:36" pos:end="13:36">*</operator> <literal type="number" pos:start="13:38" pos:end="13:43">1024.0</literal> <operator pos:start="13:45" pos:end="13:45">/</operator> <name pos:start="13:47" pos:end="13:64"><name pos:start="13:47" pos:end="13:51">avctx</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:64">sample_rate</name></name> <operator pos:start="13:66" pos:end="13:66">/</operator> <name pos:start="13:68" pos:end="13:82"><name pos:start="13:68" pos:end="13:72">avctx</name><operator pos:start="13:73" pos:end="13:74">-&gt;</operator><name pos:start="13:75" pos:end="13:82">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:20"><name pos:start="15:11" pos:end="15:15">dists</name><index pos:start="15:16" pos:end="15:20">[<expr pos:start="15:17" pos:end="15:19"><literal type="number" pos:start="15:17" pos:end="15:19">128</literal></expr>]</index></name></decl>, <decl pos:start="15:23" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:23" pos:end="15:33"><name pos:start="15:23" pos:end="15:28">uplims</name><index pos:start="15:29" pos:end="15:33">[<expr pos:start="15:30" pos:end="15:32"><literal type="number" pos:start="15:30" pos:end="15:32">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">fflag</name></decl>, <decl pos:start="17:16" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:24">minscaler</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">its</name>  <init pos:start="19:14" pos:end="19:16">= <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">allz</name> <init pos:start="21:14" pos:end="21:16">= <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:9">float</name></type> <name pos:start="23:11" pos:end="23:16">minthr</name> <init pos:start="23:18" pos:end="23:27">= <expr pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:27">INFINITY</name></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="27:5" pos:end="27:81">//XXX: some heuristic to determine initial quantizers will reduce search time</comment>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:35">(<argument pos:start="29:12" pos:end="29:16"><expr pos:start="29:12" pos:end="29:16"><name pos:start="29:12" pos:end="29:16">dists</name></expr></argument>, <argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr></argument>, <argument pos:start="29:22" pos:end="29:34"><expr pos:start="29:22" pos:end="29:34"><sizeof pos:start="29:22" pos:end="29:34">sizeof<argument_list pos:start="29:28" pos:end="29:34">(<argument pos:start="29:29" pos:end="29:33"><expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:33">dists</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="31:5" pos:end="31:43">//determine zero bands and upper limits</comment>

    <for pos:start="33:5" pos:end="71:5">for <control pos:start="33:9" pos:end="33:69">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">w</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:41"><expr pos:start="33:17" pos:end="33:40"><name pos:start="33:17" pos:end="33:17">w</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:40"><name pos:start="33:21" pos:end="33:23">sce</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:28">ics</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:40">num_windows</name></name></expr>;</condition> <incr pos:start="33:43" pos:end="33:68"><expr pos:start="33:43" pos:end="33:68"><name pos:start="33:43" pos:end="33:43">w</name> <operator pos:start="33:45" pos:end="33:46">+=</operator> <name pos:start="33:48" pos:end="33:68"><name pos:start="33:48" pos:end="33:50">sce</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:55">ics</name><operator pos:start="33:56" pos:end="33:56">.</operator><name pos:start="33:57" pos:end="33:65">group_len</name><index pos:start="33:66" pos:end="33:68">[<expr pos:start="33:67" pos:end="33:67"><name pos:start="33:67" pos:end="33:67">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="33:71" pos:end="71:5">{<block_content pos:start="35:9" pos:end="69:9">

        <for pos:start="35:9" pos:end="69:9">for <control pos:start="35:13" pos:end="35:47">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">g</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init>  <condition pos:start="35:22" pos:end="35:42"><expr pos:start="35:22" pos:end="35:41"><name pos:start="35:22" pos:end="35:22">g</name> <operator pos:start="35:24" pos:end="35:24">&lt;</operator> <name pos:start="35:26" pos:end="35:41"><name pos:start="35:26" pos:end="35:28">sce</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:33">ics</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:41">num_swb</name></name></expr>;</condition> <incr pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:44">g</name><operator pos:start="35:45" pos:end="35:46">++</operator></expr></incr>)</control> <block pos:start="35:49" pos:end="69:9">{<block_content pos:start="37:13" pos:end="67:35">

            <decl_stmt pos:start="37:13" pos:end="37:23"><decl pos:start="37:13" pos:end="37:22"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:18">nz</name> <init pos:start="37:20" pos:end="37:22">= <expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:31"><decl pos:start="39:13" pos:end="39:30"><type pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:17">float</name></type> <name pos:start="39:19" pos:end="39:23">uplim</name> <init pos:start="39:25" pos:end="39:30">= <expr pos:start="39:27" pos:end="39:30"><literal type="number" pos:start="39:27" pos:end="39:30">0.0f</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="41:13" pos:end="57:13">for <control pos:start="41:17" pos:end="41:58">(<init pos:start="41:18" pos:end="41:24"><expr pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:19">w2</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</init> <condition pos:start="41:26" pos:end="41:52"><expr pos:start="41:26" pos:end="41:51"><name pos:start="41:26" pos:end="41:27">w2</name> <operator pos:start="41:29" pos:end="41:29">&lt;</operator> <name pos:start="41:31" pos:end="41:51"><name pos:start="41:31" pos:end="41:33">sce</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:38">ics</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:48">group_len</name><index pos:start="41:49" pos:end="41:51">[<expr pos:start="41:50" pos:end="41:50"><name pos:start="41:50" pos:end="41:50">w</name></expr>]</index></name></expr>;</condition> <incr pos:start="41:54" pos:end="41:57"><expr pos:start="41:54" pos:end="41:57"><name pos:start="41:54" pos:end="41:55">w2</name><operator pos:start="41:56" pos:end="41:57">++</operator></expr></incr>)</control> <block pos:start="41:60" pos:end="57:13">{<block_content pos:start="43:17" pos:end="55:23">

                <decl_stmt pos:start="43:17" pos:end="43:94"><decl pos:start="43:17" pos:end="43:93"><type pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:25">FFPsyBand</name> <modifier pos:start="43:27" pos:end="43:27">*</modifier></type><name pos:start="43:28" pos:end="43:31">band</name> <init pos:start="43:33" pos:end="43:93">= <expr pos:start="43:35" pos:end="43:93"><operator pos:start="43:35" pos:end="43:35">&amp;</operator><name pos:start="43:36" pos:end="43:93"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:41">psy</name><operator pos:start="43:42" pos:end="43:42">.</operator><name pos:start="43:43" pos:end="43:51">psy_bands</name><index pos:start="43:52" pos:end="43:93">[<expr pos:start="43:53" pos:end="43:92"><name pos:start="43:53" pos:end="43:66"><name pos:start="43:53" pos:end="43:53">s</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:66">cur_channel</name></name><operator pos:start="43:67" pos:end="43:67">*</operator><name pos:start="43:68" pos:end="43:80">PSY_MAX_BANDS</name><operator pos:start="43:81" pos:end="43:81">+</operator><operator pos:start="43:82" pos:end="43:82">(</operator><name pos:start="43:83" pos:end="43:83">w</name><operator pos:start="43:84" pos:end="43:84">+</operator><name pos:start="43:85" pos:end="43:86">w2</name><operator pos:start="43:87" pos:end="43:87">)</operator><operator pos:start="43:88" pos:end="43:88">*</operator><literal type="number" pos:start="43:89" pos:end="43:91">16</literal><operator pos:start="43:91" pos:end="43:91">+</operator><name pos:start="43:92" pos:end="43:92">g</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:41"><expr pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:21">uplim</name> <operator pos:start="45:23" pos:end="45:24">+=</operator> <name pos:start="45:26" pos:end="45:40"><name pos:start="45:26" pos:end="45:29">band</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:40">threshold</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if <condition pos:start="47:20" pos:end="47:79">(<expr pos:start="47:21" pos:end="47:78"><name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:24">band</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:32">energy</name></name> <operator pos:start="47:34" pos:end="47:35">&lt;=</operator> <name pos:start="47:37" pos:end="47:51"><name pos:start="47:37" pos:end="47:40">band</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:51">threshold</name></name> <operator pos:start="47:53" pos:end="47:54">||</operator> <name pos:start="47:56" pos:end="47:70"><name pos:start="47:56" pos:end="47:59">band</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:70">threshold</name></name> <operator pos:start="47:72" pos:end="47:73">==</operator> <literal type="number" pos:start="47:75" pos:end="47:78">0.0f</literal></expr>)</condition> <block pos:start="47:81" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:29">

                    <expr_stmt pos:start="49:21" pos:end="49:49"><expr pos:start="49:21" pos:end="49:48"><name pos:start="49:21" pos:end="49:44"><name pos:start="49:21" pos:end="49:23">sce</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:31">zeroes</name><index pos:start="49:32" pos:end="49:44">[<expr pos:start="49:33" pos:end="49:43"><operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:34">w</name><operator pos:start="49:35" pos:end="49:35">+</operator><name pos:start="49:36" pos:end="49:37">w2</name><operator pos:start="49:38" pos:end="49:38">)</operator><operator pos:start="49:39" pos:end="49:39">*</operator><literal type="number" pos:start="49:40" pos:end="49:41">16</literal><operator pos:start="49:42" pos:end="49:42">+</operator><name pos:start="49:43" pos:end="49:43">g</name></expr>]</index></name> <operator pos:start="49:46" pos:end="49:46">=</operator> <literal type="number" pos:start="49:48" pos:end="49:48">1</literal></expr>;</expr_stmt>

                    <continue pos:start="51:21" pos:end="51:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:23"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:18">nz</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:18">uplims</name><index pos:start="59:19" pos:end="59:26">[<expr pos:start="59:20" pos:end="59:25"><name pos:start="59:20" pos:end="59:20">w</name><operator pos:start="59:21" pos:end="59:21">*</operator><literal type="number" pos:start="59:22" pos:end="59:23">16</literal><operator pos:start="59:24" pos:end="59:24">+</operator><name pos:start="59:25" pos:end="59:25">g</name></expr>]</index></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:34">uplim</name> <operator pos:start="59:36" pos:end="59:36">*</operator><literal type="number" pos:start="59:37" pos:end="59:39">512</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:15">sce</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:23">zeroes</name><index pos:start="61:24" pos:end="61:31">[<expr pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:25">w</name><operator pos:start="61:26" pos:end="61:26">*</operator><literal type="number" pos:start="61:27" pos:end="61:28">16</literal><operator pos:start="61:29" pos:end="61:29">+</operator><name pos:start="61:30" pos:end="61:30">g</name></expr>]</index></name> <operator pos:start="61:33" pos:end="61:33">=</operator> <operator pos:start="61:35" pos:end="61:35">!</operator><name pos:start="61:36" pos:end="61:37">nz</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:46"><if pos:start="63:13" pos:end="65:46">if <condition pos:start="63:16" pos:end="63:19">(<expr pos:start="63:17" pos:end="63:18"><name pos:start="63:17" pos:end="63:18">nz</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:46"><block_content pos:start="65:17" pos:end="65:46">

                <expr_stmt pos:start="65:17" pos:end="65:46"><expr pos:start="65:17" pos:end="65:45"><name pos:start="65:17" pos:end="65:22">minthr</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:45"><name pos:start="65:26" pos:end="65:30">FFMIN</name><argument_list pos:start="65:31" pos:end="65:45">(<argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">minthr</name></expr></argument>, <argument pos:start="65:40" pos:end="65:44"><expr pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:44">uplim</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:16">allz</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:34"><name pos:start="67:20" pos:end="67:24">FFMAX</name><argument_list pos:start="67:25" pos:end="67:34">(<argument pos:start="67:26" pos:end="67:29"><expr pos:start="67:26" pos:end="67:29"><name pos:start="67:26" pos:end="67:29">allz</name></expr></argument>, <argument pos:start="67:32" pos:end="67:33"><expr pos:start="67:32" pos:end="67:33"><name pos:start="67:32" pos:end="67:33">nz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="73:5" pos:end="89:5">for <control pos:start="73:9" pos:end="73:69">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">w</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:41"><expr pos:start="73:17" pos:end="73:40"><name pos:start="73:17" pos:end="73:17">w</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:40"><name pos:start="73:21" pos:end="73:23">sce</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">ics</name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:40">num_windows</name></name></expr>;</condition> <incr pos:start="73:43" pos:end="73:68"><expr pos:start="73:43" pos:end="73:68"><name pos:start="73:43" pos:end="73:43">w</name> <operator pos:start="73:45" pos:end="73:46">+=</operator> <name pos:start="73:48" pos:end="73:68"><name pos:start="73:48" pos:end="73:50">sce</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:55">ics</name><operator pos:start="73:56" pos:end="73:56">.</operator><name pos:start="73:57" pos:end="73:65">group_len</name><index pos:start="73:66" pos:end="73:68">[<expr pos:start="73:67" pos:end="73:67"><name pos:start="73:67" pos:end="73:67">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="73:71" pos:end="89:5">{<block_content pos:start="75:9" pos:end="87:9">

        <for pos:start="75:9" pos:end="87:9">for <control pos:start="75:13" pos:end="75:47">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">g</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init>  <condition pos:start="75:22" pos:end="75:42"><expr pos:start="75:22" pos:end="75:41"><name pos:start="75:22" pos:end="75:22">g</name> <operator pos:start="75:24" pos:end="75:24">&lt;</operator> <name pos:start="75:26" pos:end="75:41"><name pos:start="75:26" pos:end="75:28">sce</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:33">ics</name><operator pos:start="75:34" pos:end="75:34">.</operator><name pos:start="75:35" pos:end="75:41">num_swb</name></name></expr>;</condition> <incr pos:start="75:44" pos:end="75:46"><expr pos:start="75:44" pos:end="75:46"><name pos:start="75:44" pos:end="75:44">g</name><operator pos:start="75:45" pos:end="75:46">++</operator></expr></incr>)</control> <block pos:start="75:49" pos:end="87:9">{<block_content pos:start="77:13" pos:end="85:90">

            <if_stmt pos:start="77:13" pos:end="83:13"><if pos:start="77:13" pos:end="83:13">if <condition pos:start="77:16" pos:end="77:36">(<expr pos:start="77:17" pos:end="77:35"><name pos:start="77:17" pos:end="77:35"><name pos:start="77:17" pos:end="77:19">sce</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:27">zeroes</name><index pos:start="77:28" pos:end="77:35">[<expr pos:start="77:29" pos:end="77:34"><name pos:start="77:29" pos:end="77:29">w</name><operator pos:start="77:30" pos:end="77:30">*</operator><literal type="number" pos:start="77:31" pos:end="77:32">16</literal><operator pos:start="77:33" pos:end="77:33">+</operator><name pos:start="77:34" pos:end="77:34">g</name></expr>]</index></name></expr>)</condition> <block pos:start="77:38" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:25">

                <expr_stmt pos:start="79:17" pos:end="79:52"><expr pos:start="79:17" pos:end="79:51"><name pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:19">sce</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:27">sf_idx</name><index pos:start="79:28" pos:end="79:35">[<expr pos:start="79:29" pos:end="79:34"><name pos:start="79:29" pos:end="79:29">w</name><operator pos:start="79:30" pos:end="79:30">*</operator><literal type="number" pos:start="79:31" pos:end="79:32">16</literal><operator pos:start="79:33" pos:end="79:33">+</operator><name pos:start="79:34" pos:end="79:34">g</name></expr>]</index></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <name pos:start="79:39" pos:end="79:51">SCALE_ONE_POS</name></expr>;</expr_stmt>

                <continue pos:start="81:17" pos:end="81:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:90"><expr pos:start="85:13" pos:end="85:89"><name pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:15">sce</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:23">sf_idx</name><index pos:start="85:24" pos:end="85:31">[<expr pos:start="85:25" pos:end="85:30"><name pos:start="85:25" pos:end="85:25">w</name><operator pos:start="85:26" pos:end="85:26">*</operator><literal type="number" pos:start="85:27" pos:end="85:28">16</literal><operator pos:start="85:29" pos:end="85:29">+</operator><name pos:start="85:30" pos:end="85:30">g</name></expr>]</index></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:47">SCALE_ONE_POS</name> <operator pos:start="85:49" pos:end="85:49">+</operator> <call pos:start="85:51" pos:end="85:89"><name pos:start="85:51" pos:end="85:55">FFMIN</name><argument_list pos:start="85:56" pos:end="85:89">(<argument pos:start="85:57" pos:end="85:85"><expr pos:start="85:57" pos:end="85:85"><call pos:start="85:57" pos:end="85:83"><name pos:start="85:57" pos:end="85:60">log2</name><argument_list pos:start="85:61" pos:end="85:83">(<argument pos:start="85:62" pos:end="85:82"><expr pos:start="85:62" pos:end="85:82"><name pos:start="85:62" pos:end="85:75"><name pos:start="85:62" pos:end="85:67">uplims</name><index pos:start="85:68" pos:end="85:75">[<expr pos:start="85:69" pos:end="85:74"><name pos:start="85:69" pos:end="85:69">w</name><operator pos:start="85:70" pos:end="85:70">*</operator><literal type="number" pos:start="85:71" pos:end="85:73">16</literal><operator pos:start="85:73" pos:end="85:73">+</operator><name pos:start="85:74" pos:end="85:74">g</name></expr>]</index></name><operator pos:start="85:76" pos:end="85:76">/</operator><name pos:start="85:77" pos:end="85:82">minthr</name></expr></argument>)</argument_list></call><operator pos:start="85:84" pos:end="85:84">*</operator><literal type="number" pos:start="85:85" pos:end="85:85">4</literal></expr></argument>,<argument pos:start="85:87" pos:end="85:88"><expr pos:start="85:87" pos:end="85:88"><literal type="number" pos:start="85:87" pos:end="85:88">59</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="93:5" pos:end="95:15"><if pos:start="93:5" pos:end="95:15">if <condition pos:start="93:8" pos:end="93:14">(<expr pos:start="93:9" pos:end="93:13"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:13">allz</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:15"><block_content pos:start="95:9" pos:end="95:15">

        <return pos:start="95:9" pos:end="95:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:46"><expr pos:start="97:5" pos:end="97:45"><call pos:start="97:5" pos:end="97:45"><name pos:start="97:5" pos:end="97:15">abs_pow34_v</name><argument_list pos:start="97:16" pos:end="97:45">(<argument pos:start="97:17" pos:end="97:25"><expr pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:25">scoefs</name></name></expr></argument>, <argument pos:start="97:28" pos:end="97:38"><expr pos:start="97:28" pos:end="97:38"><name pos:start="97:28" pos:end="97:38"><name pos:start="97:28" pos:end="97:30">sce</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:38">coeffs</name></name></expr></argument>, <argument pos:start="97:41" pos:end="97:44"><expr pos:start="97:41" pos:end="97:44"><literal type="number" pos:start="97:41" pos:end="97:44">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="99:5" pos:end="99:29">//perform two-loop search</comment>

    <comment type="line" pos:start="101:5" pos:end="101:34">//outer loop - improve quality</comment>

    <do pos:start="103:5" pos:end="273:32">do <block pos:start="103:8" pos:end="273:5">{<block_content pos:start="105:9" pos:end="271:14">

        <decl_stmt pos:start="105:9" pos:end="105:25"><decl pos:start="105:9" pos:end="105:17"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:17">tbits</name></decl>, <decl pos:start="105:20" pos:end="105:24"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:20" pos:end="105:24">qstep</name></decl>;</decl_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:35"><expr pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:17">minscaler</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:34"><name pos:start="107:21" pos:end="107:23">sce</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:31">sf_idx</name><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><literal type="number" pos:start="107:33" pos:end="107:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="line" pos:start="109:9" pos:end="109:73">//inner loop - quantize spectrum to fit into given number of bits</comment>

        <expr_stmt pos:start="111:9" pos:end="111:29"><expr pos:start="111:9" pos:end="111:28"><name pos:start="111:9" pos:end="111:13">qstep</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <ternary pos:start="111:17" pos:end="111:28"><condition pos:start="111:17" pos:end="111:21"><expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">its</name></expr> ?</condition><then pos:start="111:23" pos:end="111:23"> <expr pos:start="111:23" pos:end="111:23"><literal type="number" pos:start="111:23" pos:end="111:23">1</literal></expr> </then><else pos:start="111:25" pos:end="111:28">: <expr pos:start="111:27" pos:end="111:28"><literal type="number" pos:start="111:27" pos:end="111:28">32</literal></expr></else></ternary></expr>;</expr_stmt>

        <do pos:start="113:9" pos:end="239:24">do <block pos:start="113:12" pos:end="239:9">{<block_content pos:start="115:13" pos:end="237:22">

            <decl_stmt pos:start="115:13" pos:end="115:26"><decl pos:start="115:13" pos:end="115:25"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:20">prev</name> <init pos:start="115:22" pos:end="115:25">= <expr pos:start="115:24" pos:end="115:25"><operator pos:start="115:24" pos:end="115:24">-</operator><literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:22"><expr pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:17">tbits</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <literal type="number" pos:start="117:21" pos:end="117:21">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:22"><expr pos:start="119:13" pos:end="119:21"><name pos:start="119:13" pos:end="119:17">fflag</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <literal type="number" pos:start="119:21" pos:end="119:21">0</literal></expr>;</expr_stmt>

            <for pos:start="121:13" pos:end="209:13">for <control pos:start="121:17" pos:end="121:77">(<init pos:start="121:18" pos:end="121:23"><expr pos:start="121:18" pos:end="121:22"><name pos:start="121:18" pos:end="121:18">w</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>;</init> <condition pos:start="121:25" pos:end="121:49"><expr pos:start="121:25" pos:end="121:48"><name pos:start="121:25" pos:end="121:25">w</name> <operator pos:start="121:27" pos:end="121:27">&lt;</operator> <name pos:start="121:29" pos:end="121:48"><name pos:start="121:29" pos:end="121:31">sce</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:36">ics</name><operator pos:start="121:37" pos:end="121:37">.</operator><name pos:start="121:38" pos:end="121:48">num_windows</name></name></expr>;</condition> <incr pos:start="121:51" pos:end="121:76"><expr pos:start="121:51" pos:end="121:76"><name pos:start="121:51" pos:end="121:51">w</name> <operator pos:start="121:53" pos:end="121:54">+=</operator> <name pos:start="121:56" pos:end="121:76"><name pos:start="121:56" pos:end="121:58">sce</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:63">ics</name><operator pos:start="121:64" pos:end="121:64">.</operator><name pos:start="121:65" pos:end="121:73">group_len</name><index pos:start="121:74" pos:end="121:76">[<expr pos:start="121:75" pos:end="121:75"><name pos:start="121:75" pos:end="121:75">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="121:79" pos:end="209:13">{<block_content pos:start="123:17" pos:end="207:17">

                <expr_stmt pos:start="123:17" pos:end="123:30"><expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:21">start</name> <operator pos:start="123:23" pos:end="123:23">=</operator> <name pos:start="123:25" pos:end="123:25">w</name><operator pos:start="123:26" pos:end="123:26">*</operator><literal type="number" pos:start="123:27" pos:end="123:29">128</literal></expr>;</expr_stmt>

                <for pos:start="125:17" pos:end="207:17">for <control pos:start="125:21" pos:end="125:55">(<init pos:start="125:22" pos:end="125:27"><expr pos:start="125:22" pos:end="125:26"><name pos:start="125:22" pos:end="125:22">g</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <literal type="number" pos:start="125:26" pos:end="125:26">0</literal></expr>;</init>  <condition pos:start="125:30" pos:end="125:50"><expr pos:start="125:30" pos:end="125:49"><name pos:start="125:30" pos:end="125:30">g</name> <operator pos:start="125:32" pos:end="125:32">&lt;</operator> <name pos:start="125:34" pos:end="125:49"><name pos:start="125:34" pos:end="125:36">sce</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:41">ics</name><operator pos:start="125:42" pos:end="125:42">.</operator><name pos:start="125:43" pos:end="125:49">num_swb</name></name></expr>;</condition> <incr pos:start="125:52" pos:end="125:54"><expr pos:start="125:52" pos:end="125:54"><name pos:start="125:52" pos:end="125:52">g</name><operator pos:start="125:53" pos:end="125:54">++</operator></expr></incr>)</control> <block pos:start="125:57" pos:end="207:17">{<block_content pos:start="127:21" pos:end="205:47">

                    <decl_stmt pos:start="127:21" pos:end="127:61"><decl pos:start="127:21" pos:end="127:60"><type pos:start="127:21" pos:end="127:33"><specifier pos:start="127:21" pos:end="127:25">const</specifier> <name pos:start="127:27" pos:end="127:31">float</name> <modifier pos:start="127:33" pos:end="127:33">*</modifier></type><name pos:start="127:34" pos:end="127:38">coefs</name> <init pos:start="127:40" pos:end="127:60">= <expr pos:start="127:42" pos:end="127:60"><name pos:start="127:42" pos:end="127:52"><name pos:start="127:42" pos:end="127:44">sce</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:52">coeffs</name></name> <operator pos:start="127:54" pos:end="127:54">+</operator> <name pos:start="127:56" pos:end="127:60">start</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="129:21" pos:end="129:60"><decl pos:start="129:21" pos:end="129:59"><type pos:start="129:21" pos:end="129:33"><specifier pos:start="129:21" pos:end="129:25">const</specifier> <name pos:start="129:27" pos:end="129:31">float</name> <modifier pos:start="129:33" pos:end="129:33">*</modifier></type><name pos:start="129:34" pos:end="129:39">scaled</name> <init pos:start="129:41" pos:end="129:59">= <expr pos:start="129:43" pos:end="129:59"><name pos:start="129:43" pos:end="129:51"><name pos:start="129:43" pos:end="129:43">s</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:51">scoefs</name></name> <operator pos:start="129:53" pos:end="129:53">+</operator> <name pos:start="129:55" pos:end="129:59">start</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="131:21" pos:end="131:33"><decl pos:start="131:21" pos:end="131:32"><type pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">int</name></type> <name pos:start="131:25" pos:end="131:28">bits</name> <init pos:start="131:30" pos:end="131:32">= <expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">0</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="133:21" pos:end="133:27"><decl pos:start="133:21" pos:end="133:26"><type pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:23">int</name></type> <name pos:start="133:25" pos:end="133:26">cb</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="135:21" pos:end="135:45"><decl pos:start="135:21" pos:end="135:44"><type pos:start="135:21" pos:end="135:25"><name pos:start="135:21" pos:end="135:25">float</name></type> <name pos:start="135:27" pos:end="135:33">mindist</name> <init pos:start="135:35" pos:end="135:44">= <expr pos:start="135:37" pos:end="135:44"><name pos:start="135:37" pos:end="135:44">INFINITY</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="137:21" pos:end="137:36"><decl pos:start="137:21" pos:end="137:35"><type pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">int</name></type> <name pos:start="137:25" pos:end="137:31">minbits</name> <init pos:start="137:33" pos:end="137:35">= <expr pos:start="137:35" pos:end="137:35"><literal type="number" pos:start="137:35" pos:end="137:35">0</literal></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="141:21" pos:end="147:21"><if pos:start="141:21" pos:end="147:21">if <condition pos:start="141:24" pos:end="141:74">(<expr pos:start="141:25" pos:end="141:73"><name pos:start="141:25" pos:end="141:43"><name pos:start="141:25" pos:end="141:27">sce</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:35">zeroes</name><index pos:start="141:36" pos:end="141:43">[<expr pos:start="141:37" pos:end="141:42"><name pos:start="141:37" pos:end="141:37">w</name><operator pos:start="141:38" pos:end="141:38">*</operator><literal type="number" pos:start="141:39" pos:end="141:40">16</literal><operator pos:start="141:41" pos:end="141:41">+</operator><name pos:start="141:42" pos:end="141:42">g</name></expr>]</index></name> <operator pos:start="141:45" pos:end="141:46">||</operator> <name pos:start="141:48" pos:end="141:66"><name pos:start="141:48" pos:end="141:50">sce</name><operator pos:start="141:51" pos:end="141:52">-&gt;</operator><name pos:start="141:53" pos:end="141:58">sf_idx</name><index pos:start="141:59" pos:end="141:66">[<expr pos:start="141:60" pos:end="141:65"><name pos:start="141:60" pos:end="141:60">w</name><operator pos:start="141:61" pos:end="141:61">*</operator><literal type="number" pos:start="141:62" pos:end="141:64">16</literal><operator pos:start="141:64" pos:end="141:64">+</operator><name pos:start="141:65" pos:end="141:65">g</name></expr>]</index></name> <operator pos:start="141:68" pos:end="141:69">&gt;=</operator> <literal type="number" pos:start="141:71" pos:end="141:73">218</literal></expr>)</condition> <block pos:start="141:76" pos:end="147:21">{<block_content pos:start="143:25" pos:end="145:33">

                        <expr_stmt pos:start="143:25" pos:end="143:55"><expr pos:start="143:25" pos:end="143:54"><name pos:start="143:25" pos:end="143:29">start</name> <operator pos:start="143:31" pos:end="143:32">+=</operator> <name pos:start="143:34" pos:end="143:54"><name pos:start="143:34" pos:end="143:36">sce</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:41">ics</name><operator pos:start="143:42" pos:end="143:42">.</operator><name pos:start="143:43" pos:end="143:51">swb_sizes</name><index pos:start="143:52" pos:end="143:54">[<expr pos:start="143:53" pos:end="143:53"><name pos:start="143:53" pos:end="143:53">g</name></expr>]</index></name></expr>;</expr_stmt>

                        <continue pos:start="145:25" pos:end="145:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:70"><expr pos:start="149:21" pos:end="149:69"><name pos:start="149:21" pos:end="149:29">minscaler</name> <operator pos:start="149:31" pos:end="149:31">=</operator> <call pos:start="149:33" pos:end="149:69"><name pos:start="149:33" pos:end="149:37">FFMIN</name><argument_list pos:start="149:38" pos:end="149:69">(<argument pos:start="149:39" pos:end="149:47"><expr pos:start="149:39" pos:end="149:47"><name pos:start="149:39" pos:end="149:47">minscaler</name></expr></argument>, <argument pos:start="149:50" pos:end="149:68"><expr pos:start="149:50" pos:end="149:68"><name pos:start="149:50" pos:end="149:68"><name pos:start="149:50" pos:end="149:52">sce</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:60">sf_idx</name><index pos:start="149:61" pos:end="149:68">[<expr pos:start="149:62" pos:end="149:67"><name pos:start="149:62" pos:end="149:62">w</name><operator pos:start="149:63" pos:end="149:63">*</operator><literal type="number" pos:start="149:64" pos:end="149:66">16</literal><operator pos:start="149:66" pos:end="149:66">+</operator><name pos:start="149:67" pos:end="149:67">g</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="151:21" pos:end="189:21">for <control pos:start="151:25" pos:end="151:52">(<init pos:start="151:26" pos:end="151:32"><expr pos:start="151:26" pos:end="151:31"><name pos:start="151:26" pos:end="151:27">cb</name> <operator pos:start="151:29" pos:end="151:29">=</operator> <literal type="number" pos:start="151:31" pos:end="151:31">0</literal></expr>;</init> <condition pos:start="151:34" pos:end="151:46"><expr pos:start="151:34" pos:end="151:45"><name pos:start="151:34" pos:end="151:35">cb</name> <operator pos:start="151:37" pos:end="151:38">&lt;=</operator> <name pos:start="151:40" pos:end="151:45">ESC_BT</name></expr>;</condition> <incr pos:start="151:48" pos:end="151:51"><expr pos:start="151:48" pos:end="151:51"><name pos:start="151:48" pos:end="151:49">cb</name><operator pos:start="151:50" pos:end="151:51">++</operator></expr></incr>)</control> <block pos:start="151:54" pos:end="189:21">{<block_content pos:start="153:25" pos:end="187:25">

                        <decl_stmt pos:start="153:25" pos:end="153:42"><decl pos:start="153:25" pos:end="153:41"><type pos:start="153:25" pos:end="153:29"><name pos:start="153:25" pos:end="153:29">float</name></type> <name pos:start="153:31" pos:end="153:34">dist</name> <init pos:start="153:36" pos:end="153:41">= <expr pos:start="153:38" pos:end="153:41"><literal type="number" pos:start="153:38" pos:end="153:41">0.0f</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="155:25" pos:end="155:35"><decl pos:start="155:25" pos:end="155:34"><type pos:start="155:25" pos:end="155:27"><name pos:start="155:25" pos:end="155:27">int</name></type> <name pos:start="155:29" pos:end="155:30">bb</name> <init pos:start="155:32" pos:end="155:34">= <expr pos:start="155:34" pos:end="155:34"><literal type="number" pos:start="155:34" pos:end="155:34">0</literal></expr></init></decl>;</decl_stmt>

                        <for pos:start="157:25" pos:end="179:25">for <control pos:start="157:29" pos:end="157:70">(<init pos:start="157:30" pos:end="157:36"><expr pos:start="157:30" pos:end="157:35"><name pos:start="157:30" pos:end="157:31">w2</name> <operator pos:start="157:33" pos:end="157:33">=</operator> <literal type="number" pos:start="157:35" pos:end="157:35">0</literal></expr>;</init> <condition pos:start="157:38" pos:end="157:64"><expr pos:start="157:38" pos:end="157:63"><name pos:start="157:38" pos:end="157:39">w2</name> <operator pos:start="157:41" pos:end="157:41">&lt;</operator> <name pos:start="157:43" pos:end="157:63"><name pos:start="157:43" pos:end="157:45">sce</name><operator pos:start="157:46" pos:end="157:47">-&gt;</operator><name pos:start="157:48" pos:end="157:50">ics</name><operator pos:start="157:51" pos:end="157:51">.</operator><name pos:start="157:52" pos:end="157:60">group_len</name><index pos:start="157:61" pos:end="157:63">[<expr pos:start="157:62" pos:end="157:62"><name pos:start="157:62" pos:end="157:62">w</name></expr>]</index></name></expr>;</condition> <incr pos:start="157:66" pos:end="157:69"><expr pos:start="157:66" pos:end="157:69"><name pos:start="157:66" pos:end="157:67">w2</name><operator pos:start="157:68" pos:end="157:69">++</operator></expr></incr>)</control> <block pos:start="157:72" pos:end="179:25">{<block_content pos:start="159:29" pos:end="177:36">

                            <decl_stmt pos:start="159:29" pos:end="159:34"><decl pos:start="159:29" pos:end="159:33"><type pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">int</name></type> <name pos:start="159:33" pos:end="159:33">b</name></decl>;</decl_stmt>

                            <expr_stmt pos:start="161:29" pos:end="175:59"><expr pos:start="161:29" pos:end="175:58"><name pos:start="161:29" pos:end="161:32">dist</name> <operator pos:start="161:34" pos:end="161:35">+=</operator> <call pos:start="161:37" pos:end="175:58"><name pos:start="161:37" pos:end="161:54">quantize_band_cost</name><argument_list pos:start="161:55" pos:end="175:58">(<argument pos:start="161:56" pos:end="161:56"><expr pos:start="161:56" pos:end="161:56"><name pos:start="161:56" pos:end="161:56">s</name></expr></argument>, <argument pos:start="161:59" pos:end="161:72"><expr pos:start="161:59" pos:end="161:72"><name pos:start="161:59" pos:end="161:63">coefs</name> <operator pos:start="161:65" pos:end="161:65">+</operator> <name pos:start="161:67" pos:end="161:68">w2</name><operator pos:start="161:69" pos:end="161:69">*</operator><literal type="number" pos:start="161:70" pos:end="161:72">128</literal></expr></argument>,

                                                       <argument pos:start="163:56" pos:end="163:70"><expr pos:start="163:56" pos:end="163:70"><name pos:start="163:56" pos:end="163:61">scaled</name> <operator pos:start="163:63" pos:end="163:63">+</operator> <name pos:start="163:65" pos:end="163:66">w2</name><operator pos:start="163:67" pos:end="163:67">*</operator><literal type="number" pos:start="163:68" pos:end="163:70">128</literal></expr></argument>,

                                                       <argument pos:start="165:56" pos:end="165:76"><expr pos:start="165:56" pos:end="165:76"><name pos:start="165:56" pos:end="165:76"><name pos:start="165:56" pos:end="165:58">sce</name><operator pos:start="165:59" pos:end="165:60">-&gt;</operator><name pos:start="165:61" pos:end="165:63">ics</name><operator pos:start="165:64" pos:end="165:64">.</operator><name pos:start="165:65" pos:end="165:73">swb_sizes</name><index pos:start="165:74" pos:end="165:76">[<expr pos:start="165:75" pos:end="165:75"><name pos:start="165:75" pos:end="165:75">g</name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="167:56" pos:end="167:74"><expr pos:start="167:56" pos:end="167:74"><name pos:start="167:56" pos:end="167:74"><name pos:start="167:56" pos:end="167:58">sce</name><operator pos:start="167:59" pos:end="167:60">-&gt;</operator><name pos:start="167:61" pos:end="167:66">sf_idx</name><index pos:start="167:67" pos:end="167:74">[<expr pos:start="167:68" pos:end="167:73"><name pos:start="167:68" pos:end="167:68">w</name><operator pos:start="167:69" pos:end="167:69">*</operator><literal type="number" pos:start="167:70" pos:end="167:72">16</literal><operator pos:start="167:72" pos:end="167:72">+</operator><name pos:start="167:73" pos:end="167:73">g</name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="169:56" pos:end="169:57"><expr pos:start="169:56" pos:end="169:57"><name pos:start="169:56" pos:end="169:57">cb</name></expr></argument>,

                                                       <argument pos:start="171:56" pos:end="171:61"><expr pos:start="171:56" pos:end="171:61"><name pos:start="171:56" pos:end="171:61">lambda</name></expr></argument>,

                                                       <argument pos:start="173:56" pos:end="173:63"><expr pos:start="173:56" pos:end="173:63"><name pos:start="173:56" pos:end="173:63">INFINITY</name></expr></argument>,

                                                       <argument pos:start="175:56" pos:end="175:57"><expr pos:start="175:56" pos:end="175:57"><operator pos:start="175:56" pos:end="175:56">&amp;</operator><name pos:start="175:57" pos:end="175:57">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="177:29" pos:end="177:36"><expr pos:start="177:29" pos:end="177:35"><name pos:start="177:29" pos:end="177:30">bb</name> <operator pos:start="177:32" pos:end="177:33">+=</operator> <name pos:start="177:35" pos:end="177:35">b</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <if_stmt pos:start="181:25" pos:end="187:25"><if pos:start="181:25" pos:end="187:25">if <condition pos:start="181:28" pos:end="181:43">(<expr pos:start="181:29" pos:end="181:42"><name pos:start="181:29" pos:end="181:32">dist</name> <operator pos:start="181:34" pos:end="181:34">&lt;</operator> <name pos:start="181:36" pos:end="181:42">mindist</name></expr>)</condition> <block pos:start="181:45" pos:end="187:25">{<block_content pos:start="183:29" pos:end="185:41">

                            <expr_stmt pos:start="183:29" pos:end="183:43"><expr pos:start="183:29" pos:end="183:42"><name pos:start="183:29" pos:end="183:35">mindist</name> <operator pos:start="183:37" pos:end="183:37">=</operator> <name pos:start="183:39" pos:end="183:42">dist</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="185:29" pos:end="185:41"><expr pos:start="185:29" pos:end="185:40"><name pos:start="185:29" pos:end="185:35">minbits</name> <operator pos:start="185:37" pos:end="185:37">=</operator> <name pos:start="185:39" pos:end="185:40">bb</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="191:21" pos:end="191:65"><expr pos:start="191:21" pos:end="191:64"><name pos:start="191:21" pos:end="191:33"><name pos:start="191:21" pos:end="191:25">dists</name><index pos:start="191:26" pos:end="191:33">[<expr pos:start="191:27" pos:end="191:32"><name pos:start="191:27" pos:end="191:27">w</name><operator pos:start="191:28" pos:end="191:28">*</operator><literal type="number" pos:start="191:29" pos:end="191:30">16</literal><operator pos:start="191:31" pos:end="191:31">+</operator><name pos:start="191:32" pos:end="191:32">g</name></expr>]</index></name> <operator pos:start="191:35" pos:end="191:35">=</operator> <operator pos:start="191:37" pos:end="191:37">(</operator><name pos:start="191:38" pos:end="191:44">mindist</name> <operator pos:start="191:46" pos:end="191:46">-</operator> <name pos:start="191:48" pos:end="191:54">minbits</name><operator pos:start="191:55" pos:end="191:55">)</operator> <operator pos:start="191:57" pos:end="191:57">/</operator> <name pos:start="191:59" pos:end="191:64">lambda</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:35"><expr pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:24">bits</name> <operator pos:start="193:26" pos:end="193:26">=</operator> <name pos:start="193:28" pos:end="193:34">minbits</name></expr>;</expr_stmt>

                    <if_stmt pos:start="195:21" pos:end="199:21"><if pos:start="195:21" pos:end="199:21">if <condition pos:start="195:24" pos:end="195:35">(<expr pos:start="195:25" pos:end="195:34"><name pos:start="195:25" pos:end="195:28">prev</name> <operator pos:start="195:30" pos:end="195:31">!=</operator> <operator pos:start="195:33" pos:end="195:33">-</operator><literal type="number" pos:start="195:34" pos:end="195:34">1</literal></expr>)</condition> <block pos:start="195:37" pos:end="199:21">{<block_content pos:start="197:25" pos:end="197:102">

                        <expr_stmt pos:start="197:25" pos:end="197:102"><expr pos:start="197:25" pos:end="197:101"><name pos:start="197:25" pos:end="197:28">bits</name> <operator pos:start="197:30" pos:end="197:31">+=</operator> <name pos:start="197:33" pos:end="197:101"><name pos:start="197:33" pos:end="197:55">ff_aac_scalefactor_bits</name><index pos:start="197:56" pos:end="197:101">[<expr pos:start="197:57" pos:end="197:100"><name pos:start="197:57" pos:end="197:75"><name pos:start="197:57" pos:end="197:59">sce</name><operator pos:start="197:60" pos:end="197:61">-&gt;</operator><name pos:start="197:62" pos:end="197:67">sf_idx</name><index pos:start="197:68" pos:end="197:75">[<expr pos:start="197:69" pos:end="197:74"><name pos:start="197:69" pos:end="197:69">w</name><operator pos:start="197:70" pos:end="197:70">*</operator><literal type="number" pos:start="197:71" pos:end="197:73">16</literal><operator pos:start="197:73" pos:end="197:73">+</operator><name pos:start="197:74" pos:end="197:74">g</name></expr>]</index></name> <operator pos:start="197:77" pos:end="197:77">-</operator> <name pos:start="197:79" pos:end="197:82">prev</name> <operator pos:start="197:84" pos:end="197:84">+</operator> <name pos:start="197:86" pos:end="197:100">SCALE_DIFF_ZERO</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:34"><expr pos:start="201:21" pos:end="201:33"><name pos:start="201:21" pos:end="201:25">tbits</name> <operator pos:start="201:27" pos:end="201:28">+=</operator> <name pos:start="201:30" pos:end="201:33">bits</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:51"><expr pos:start="203:21" pos:end="203:50"><name pos:start="203:21" pos:end="203:25">start</name> <operator pos:start="203:27" pos:end="203:28">+=</operator> <name pos:start="203:30" pos:end="203:50"><name pos:start="203:30" pos:end="203:32">sce</name><operator pos:start="203:33" pos:end="203:34">-&gt;</operator><name pos:start="203:35" pos:end="203:37">ics</name><operator pos:start="203:38" pos:end="203:38">.</operator><name pos:start="203:39" pos:end="203:47">swb_sizes</name><index pos:start="203:48" pos:end="203:50">[<expr pos:start="203:49" pos:end="203:49"><name pos:start="203:49" pos:end="203:49">g</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:47"><expr pos:start="205:21" pos:end="205:46"><name pos:start="205:21" pos:end="205:24">prev</name> <operator pos:start="205:26" pos:end="205:26">=</operator> <name pos:start="205:28" pos:end="205:46"><name pos:start="205:28" pos:end="205:30">sce</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:38">sf_idx</name><index pos:start="205:39" pos:end="205:46">[<expr pos:start="205:40" pos:end="205:45"><name pos:start="205:40" pos:end="205:40">w</name><operator pos:start="205:41" pos:end="205:41">*</operator><literal type="number" pos:start="205:42" pos:end="205:44">16</literal><operator pos:start="205:44" pos:end="205:44">+</operator><name pos:start="205:45" pos:end="205:45">g</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <if_stmt pos:start="211:13" pos:end="227:13"><if pos:start="211:13" pos:end="219:13">if <condition pos:start="211:16" pos:end="211:33">(<expr pos:start="211:17" pos:end="211:32"><name pos:start="211:17" pos:end="211:21">tbits</name> <operator pos:start="211:23" pos:end="211:23">&gt;</operator> <name pos:start="211:25" pos:end="211:32">destbits</name></expr>)</condition> <block pos:start="211:35" pos:end="219:13">{<block_content pos:start="213:17" pos:end="217:48">

                <for pos:start="213:17" pos:end="217:48">for <control pos:start="213:21" pos:end="213:41">(<init pos:start="213:22" pos:end="213:27"><expr pos:start="213:22" pos:end="213:26"><name pos:start="213:22" pos:end="213:22">i</name> <operator pos:start="213:24" pos:end="213:24">=</operator> <literal type="number" pos:start="213:26" pos:end="213:26">0</literal></expr>;</init> <condition pos:start="213:29" pos:end="213:36"><expr pos:start="213:29" pos:end="213:35"><name pos:start="213:29" pos:end="213:29">i</name> <operator pos:start="213:31" pos:end="213:31">&lt;</operator> <literal type="number" pos:start="213:33" pos:end="213:35">128</literal></expr>;</condition> <incr pos:start="213:38" pos:end="213:40"><expr pos:start="213:38" pos:end="213:40"><name pos:start="213:38" pos:end="213:38">i</name><operator pos:start="213:39" pos:end="213:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="215:21" pos:end="217:48"><block_content pos:start="215:21" pos:end="217:48">

                    <if_stmt pos:start="215:21" pos:end="217:48"><if pos:start="215:21" pos:end="217:48">if <condition pos:start="215:24" pos:end="215:53">(<expr pos:start="215:25" pos:end="215:52"><name pos:start="215:25" pos:end="215:38"><name pos:start="215:25" pos:end="215:27">sce</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:35">sf_idx</name><index pos:start="215:36" pos:end="215:38">[<expr pos:start="215:37" pos:end="215:37"><name pos:start="215:37" pos:end="215:37">i</name></expr>]</index></name> <operator pos:start="215:40" pos:end="215:40">&lt;</operator> <literal type="number" pos:start="215:42" pos:end="215:46">218</literal> <operator pos:start="215:46" pos:end="215:46">-</operator> <name pos:start="215:48" pos:end="215:52">qstep</name></expr>)</condition><block type="pseudo" pos:start="217:25" pos:end="217:48"><block_content pos:start="217:25" pos:end="217:48">

                        <expr_stmt pos:start="217:25" pos:end="217:48"><expr pos:start="217:25" pos:end="217:47"><name pos:start="217:25" pos:end="217:38"><name pos:start="217:25" pos:end="217:27">sce</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:35">sf_idx</name><index pos:start="217:36" pos:end="217:38">[<expr pos:start="217:37" pos:end="217:37"><name pos:start="217:37" pos:end="217:37">i</name></expr>]</index></name> <operator pos:start="217:40" pos:end="217:41">+=</operator> <name pos:start="217:43" pos:end="217:47">qstep</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="219:15" pos:end="227:13">else <block pos:start="219:20" pos:end="227:13">{<block_content pos:start="221:17" pos:end="225:48">

                <for pos:start="221:17" pos:end="225:48">for <control pos:start="221:21" pos:end="221:41">(<init pos:start="221:22" pos:end="221:27"><expr pos:start="221:22" pos:end="221:26"><name pos:start="221:22" pos:end="221:22">i</name> <operator pos:start="221:24" pos:end="221:24">=</operator> <literal type="number" pos:start="221:26" pos:end="221:26">0</literal></expr>;</init> <condition pos:start="221:29" pos:end="221:36"><expr pos:start="221:29" pos:end="221:35"><name pos:start="221:29" pos:end="221:29">i</name> <operator pos:start="221:31" pos:end="221:31">&lt;</operator> <literal type="number" pos:start="221:33" pos:end="221:35">128</literal></expr>;</condition> <incr pos:start="221:38" pos:end="221:40"><expr pos:start="221:38" pos:end="221:40"><name pos:start="221:38" pos:end="221:38">i</name><operator pos:start="221:39" pos:end="221:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="223:21" pos:end="225:48"><block_content pos:start="223:21" pos:end="225:48">

                    <if_stmt pos:start="223:21" pos:end="225:48"><if pos:start="223:21" pos:end="225:48">if <condition pos:start="223:24" pos:end="223:52">(<expr pos:start="223:25" pos:end="223:51"><name pos:start="223:25" pos:end="223:38"><name pos:start="223:25" pos:end="223:27">sce</name><operator pos:start="223:28" pos:end="223:29">-&gt;</operator><name pos:start="223:30" pos:end="223:35">sf_idx</name><index pos:start="223:36" pos:end="223:38">[<expr pos:start="223:37" pos:end="223:37"><name pos:start="223:37" pos:end="223:37">i</name></expr>]</index></name> <operator pos:start="223:40" pos:end="223:40">&gt;</operator> <literal type="number" pos:start="223:42" pos:end="223:45">60</literal> <operator pos:start="223:45" pos:end="223:45">-</operator> <name pos:start="223:47" pos:end="223:51">qstep</name></expr>)</condition><block type="pseudo" pos:start="225:25" pos:end="225:48"><block_content pos:start="225:25" pos:end="225:48">

                        <expr_stmt pos:start="225:25" pos:end="225:48"><expr pos:start="225:25" pos:end="225:47"><name pos:start="225:25" pos:end="225:38"><name pos:start="225:25" pos:end="225:27">sce</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:35">sf_idx</name><index pos:start="225:36" pos:end="225:38">[<expr pos:start="225:37" pos:end="225:37"><name pos:start="225:37" pos:end="225:37">i</name></expr>]</index></name> <operator pos:start="225:40" pos:end="225:41">-=</operator> <name pos:start="225:43" pos:end="225:47">qstep</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:24"><expr pos:start="229:13" pos:end="229:23"><name pos:start="229:13" pos:end="229:17">qstep</name> <operator pos:start="229:19" pos:end="229:21">&gt;&gt;=</operator> <literal type="number" pos:start="229:23" pos:end="229:23">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="231:13" pos:end="233:26"><if pos:start="231:13" pos:end="233:26">if <condition pos:start="231:16" pos:end="231:48">(<expr pos:start="231:17" pos:end="231:47"><operator pos:start="231:17" pos:end="231:17">!</operator><name pos:start="231:18" pos:end="231:22">qstep</name> <operator pos:start="231:24" pos:end="231:25">&amp;&amp;</operator> <name pos:start="231:27" pos:end="231:31">tbits</name> <operator pos:start="231:33" pos:end="231:33">&gt;</operator> <name pos:start="231:35" pos:end="231:42">destbits</name><operator pos:start="231:43" pos:end="231:43">*</operator><literal type="number" pos:start="231:44" pos:end="231:47">1.02</literal></expr>)</condition><block type="pseudo" pos:start="233:17" pos:end="233:26"><block_content pos:start="233:17" pos:end="233:26">

                <expr_stmt pos:start="233:17" pos:end="233:26"><expr pos:start="233:17" pos:end="233:25"><name pos:start="233:17" pos:end="233:21">qstep</name> <operator pos:start="233:23" pos:end="233:23">=</operator> <literal type="number" pos:start="233:25" pos:end="233:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="235:13" pos:end="237:22"><if pos:start="235:13" pos:end="237:22">if <condition pos:start="235:16" pos:end="235:38">(<expr pos:start="235:17" pos:end="235:37"><name pos:start="235:17" pos:end="235:30"><name pos:start="235:17" pos:end="235:19">sce</name><operator pos:start="235:20" pos:end="235:21">-&gt;</operator><name pos:start="235:22" pos:end="235:27">sf_idx</name><index pos:start="235:28" pos:end="235:30">[<expr pos:start="235:29" pos:end="235:29"><literal type="number" pos:start="235:29" pos:end="235:29">0</literal></expr>]</index></name> <operator pos:start="235:32" pos:end="235:33">&gt;=</operator> <literal type="number" pos:start="235:35" pos:end="235:37">217</literal></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:22"><block_content pos:start="237:17" pos:end="237:22">

                <break pos:start="237:17" pos:end="237:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="239:17" pos:end="239:23">(<expr pos:start="239:18" pos:end="239:22"><name pos:start="239:18" pos:end="239:22">qstep</name></expr>)</condition>;</do>



        <expr_stmt pos:start="243:9" pos:end="243:18"><expr pos:start="243:9" pos:end="243:17"><name pos:start="243:9" pos:end="243:13">fflag</name> <operator pos:start="243:15" pos:end="243:15">=</operator> <literal type="number" pos:start="243:17" pos:end="243:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:65"><expr pos:start="245:9" pos:end="245:64"><name pos:start="245:9" pos:end="245:17">minscaler</name> <operator pos:start="245:19" pos:end="245:19">=</operator> <call pos:start="245:21" pos:end="245:64"><name pos:start="245:21" pos:end="245:27">av_clip</name><argument_list pos:start="245:28" pos:end="245:64">(<argument pos:start="245:29" pos:end="245:37"><expr pos:start="245:29" pos:end="245:37"><name pos:start="245:29" pos:end="245:37">minscaler</name></expr></argument>, <argument pos:start="245:40" pos:end="245:41"><expr pos:start="245:40" pos:end="245:41"><literal type="number" pos:start="245:40" pos:end="245:41">60</literal></expr></argument>, <argument pos:start="245:44" pos:end="245:63"><expr pos:start="245:44" pos:end="245:63"><literal type="number" pos:start="245:44" pos:end="245:48">255</literal> <operator pos:start="245:48" pos:end="245:48">-</operator> <name pos:start="245:50" pos:end="245:63">SCALE_MAX_DIFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="247:9" pos:end="269:9">for <control pos:start="247:13" pos:end="247:73">(<init pos:start="247:14" pos:end="247:19"><expr pos:start="247:14" pos:end="247:18"><name pos:start="247:14" pos:end="247:14">w</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <literal type="number" pos:start="247:18" pos:end="247:18">0</literal></expr>;</init> <condition pos:start="247:21" pos:end="247:45"><expr pos:start="247:21" pos:end="247:44"><name pos:start="247:21" pos:end="247:21">w</name> <operator pos:start="247:23" pos:end="247:23">&lt;</operator> <name pos:start="247:25" pos:end="247:44"><name pos:start="247:25" pos:end="247:27">sce</name><operator pos:start="247:28" pos:end="247:29">-&gt;</operator><name pos:start="247:30" pos:end="247:32">ics</name><operator pos:start="247:33" pos:end="247:33">.</operator><name pos:start="247:34" pos:end="247:44">num_windows</name></name></expr>;</condition> <incr pos:start="247:47" pos:end="247:72"><expr pos:start="247:47" pos:end="247:72"><name pos:start="247:47" pos:end="247:47">w</name> <operator pos:start="247:49" pos:end="247:50">+=</operator> <name pos:start="247:52" pos:end="247:72"><name pos:start="247:52" pos:end="247:54">sce</name><operator pos:start="247:55" pos:end="247:56">-&gt;</operator><name pos:start="247:57" pos:end="247:59">ics</name><operator pos:start="247:60" pos:end="247:60">.</operator><name pos:start="247:61" pos:end="247:69">group_len</name><index pos:start="247:70" pos:end="247:72">[<expr pos:start="247:71" pos:end="247:71"><name pos:start="247:71" pos:end="247:71">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="247:75" pos:end="269:9">{<block_content pos:start="249:13" pos:end="267:13">

            <expr_stmt pos:start="249:13" pos:end="249:26"><expr pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:17">start</name> <operator pos:start="249:19" pos:end="249:19">=</operator> <name pos:start="249:21" pos:end="249:21">w</name><operator pos:start="249:22" pos:end="249:22">*</operator><literal type="number" pos:start="249:23" pos:end="249:25">128</literal></expr>;</expr_stmt>

            <for pos:start="251:13" pos:end="267:13">for <control pos:start="251:17" pos:end="251:50">(<init pos:start="251:18" pos:end="251:23"><expr pos:start="251:18" pos:end="251:22"><name pos:start="251:18" pos:end="251:18">g</name> <operator pos:start="251:20" pos:end="251:20">=</operator> <literal type="number" pos:start="251:22" pos:end="251:22">0</literal></expr>;</init> <condition pos:start="251:25" pos:end="251:45"><expr pos:start="251:25" pos:end="251:44"><name pos:start="251:25" pos:end="251:25">g</name> <operator pos:start="251:27" pos:end="251:27">&lt;</operator> <name pos:start="251:29" pos:end="251:44"><name pos:start="251:29" pos:end="251:31">sce</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:36">ics</name><operator pos:start="251:37" pos:end="251:37">.</operator><name pos:start="251:38" pos:end="251:44">num_swb</name></name></expr>;</condition> <incr pos:start="251:47" pos:end="251:49"><expr pos:start="251:47" pos:end="251:49"><name pos:start="251:47" pos:end="251:47">g</name><operator pos:start="251:48" pos:end="251:49">++</operator></expr></incr>)</control> <block pos:start="251:52" pos:end="267:13">{<block_content pos:start="253:17" pos:end="265:30">

                <decl_stmt pos:start="253:17" pos:end="253:49"><decl pos:start="253:17" pos:end="253:48"><type pos:start="253:17" pos:end="253:19"><name pos:start="253:17" pos:end="253:19">int</name></type> <name pos:start="253:21" pos:end="253:26">prevsc</name> <init pos:start="253:28" pos:end="253:48">= <expr pos:start="253:30" pos:end="253:48"><name pos:start="253:30" pos:end="253:48"><name pos:start="253:30" pos:end="253:32">sce</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:40">sf_idx</name><index pos:start="253:41" pos:end="253:48">[<expr pos:start="253:42" pos:end="253:47"><name pos:start="253:42" pos:end="253:42">w</name><operator pos:start="253:43" pos:end="253:43">*</operator><literal type="number" pos:start="253:44" pos:end="253:46">16</literal><operator pos:start="253:46" pos:end="253:46">+</operator><name pos:start="253:47" pos:end="253:47">g</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="255:17" pos:end="257:42"><if pos:start="255:17" pos:end="257:42">if <condition pos:start="255:20" pos:end="255:79">(<expr pos:start="255:21" pos:end="255:78"><name pos:start="255:21" pos:end="255:33"><name pos:start="255:21" pos:end="255:25">dists</name><index pos:start="255:26" pos:end="255:33">[<expr pos:start="255:27" pos:end="255:32"><name pos:start="255:27" pos:end="255:27">w</name><operator pos:start="255:28" pos:end="255:28">*</operator><literal type="number" pos:start="255:29" pos:end="255:30">16</literal><operator pos:start="255:31" pos:end="255:31">+</operator><name pos:start="255:32" pos:end="255:32">g</name></expr>]</index></name> <operator pos:start="255:35" pos:end="255:35">&gt;</operator> <name pos:start="255:37" pos:end="255:50"><name pos:start="255:37" pos:end="255:42">uplims</name><index pos:start="255:43" pos:end="255:50">[<expr pos:start="255:44" pos:end="255:49"><name pos:start="255:44" pos:end="255:44">w</name><operator pos:start="255:45" pos:end="255:45">*</operator><literal type="number" pos:start="255:46" pos:end="255:48">16</literal><operator pos:start="255:48" pos:end="255:48">+</operator><name pos:start="255:49" pos:end="255:49">g</name></expr>]</index></name> <operator pos:start="255:52" pos:end="255:53">&amp;&amp;</operator> <name pos:start="255:55" pos:end="255:73"><name pos:start="255:55" pos:end="255:57">sce</name><operator pos:start="255:58" pos:end="255:59">-&gt;</operator><name pos:start="255:60" pos:end="255:65">sf_idx</name><index pos:start="255:66" pos:end="255:73">[<expr pos:start="255:67" pos:end="255:72"><name pos:start="255:67" pos:end="255:67">w</name><operator pos:start="255:68" pos:end="255:68">*</operator><literal type="number" pos:start="255:69" pos:end="255:71">16</literal><operator pos:start="255:71" pos:end="255:71">+</operator><name pos:start="255:72" pos:end="255:72">g</name></expr>]</index></name> <operator pos:start="255:75" pos:end="255:75">&gt;</operator> <literal type="number" pos:start="255:77" pos:end="255:78">60</literal></expr>)</condition><block type="pseudo" pos:start="257:21" pos:end="257:42"><block_content pos:start="257:21" pos:end="257:42">

                    <expr_stmt pos:start="257:21" pos:end="257:42"><expr pos:start="257:21" pos:end="257:41"><name pos:start="257:21" pos:end="257:39"><name pos:start="257:21" pos:end="257:23">sce</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:31">sf_idx</name><index pos:start="257:32" pos:end="257:39">[<expr pos:start="257:33" pos:end="257:38"><name pos:start="257:33" pos:end="257:33">w</name><operator pos:start="257:34" pos:end="257:34">*</operator><literal type="number" pos:start="257:35" pos:end="257:36">16</literal><operator pos:start="257:37" pos:end="257:37">+</operator><name pos:start="257:38" pos:end="257:38">g</name></expr>]</index></name><operator pos:start="257:40" pos:end="257:41">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:106"><expr pos:start="259:17" pos:end="259:105"><name pos:start="259:17" pos:end="259:35"><name pos:start="259:17" pos:end="259:19">sce</name><operator pos:start="259:20" pos:end="259:21">-&gt;</operator><name pos:start="259:22" pos:end="259:27">sf_idx</name><index pos:start="259:28" pos:end="259:35">[<expr pos:start="259:29" pos:end="259:34"><name pos:start="259:29" pos:end="259:29">w</name><operator pos:start="259:30" pos:end="259:30">*</operator><literal type="number" pos:start="259:31" pos:end="259:32">16</literal><operator pos:start="259:33" pos:end="259:33">+</operator><name pos:start="259:34" pos:end="259:34">g</name></expr>]</index></name> <operator pos:start="259:37" pos:end="259:37">=</operator> <call pos:start="259:39" pos:end="259:105"><name pos:start="259:39" pos:end="259:45">av_clip</name><argument_list pos:start="259:46" pos:end="259:105">(<argument pos:start="259:47" pos:end="259:65"><expr pos:start="259:47" pos:end="259:65"><name pos:start="259:47" pos:end="259:65"><name pos:start="259:47" pos:end="259:49">sce</name><operator pos:start="259:50" pos:end="259:51">-&gt;</operator><name pos:start="259:52" pos:end="259:57">sf_idx</name><index pos:start="259:58" pos:end="259:65">[<expr pos:start="259:59" pos:end="259:64"><name pos:start="259:59" pos:end="259:59">w</name><operator pos:start="259:60" pos:end="259:60">*</operator><literal type="number" pos:start="259:61" pos:end="259:63">16</literal><operator pos:start="259:63" pos:end="259:63">+</operator><name pos:start="259:64" pos:end="259:64">g</name></expr>]</index></name></expr></argument>, <argument pos:start="259:68" pos:end="259:76"><expr pos:start="259:68" pos:end="259:76"><name pos:start="259:68" pos:end="259:76">minscaler</name></expr></argument>, <argument pos:start="259:79" pos:end="259:104"><expr pos:start="259:79" pos:end="259:104"><name pos:start="259:79" pos:end="259:87">minscaler</name> <operator pos:start="259:89" pos:end="259:89">+</operator> <name pos:start="259:91" pos:end="259:104">SCALE_MAX_DIFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:70"><expr pos:start="261:17" pos:end="261:69"><name pos:start="261:17" pos:end="261:35"><name pos:start="261:17" pos:end="261:19">sce</name><operator pos:start="261:20" pos:end="261:21">-&gt;</operator><name pos:start="261:22" pos:end="261:27">sf_idx</name><index pos:start="261:28" pos:end="261:35">[<expr pos:start="261:29" pos:end="261:34"><name pos:start="261:29" pos:end="261:29">w</name><operator pos:start="261:30" pos:end="261:30">*</operator><literal type="number" pos:start="261:31" pos:end="261:32">16</literal><operator pos:start="261:33" pos:end="261:33">+</operator><name pos:start="261:34" pos:end="261:34">g</name></expr>]</index></name> <operator pos:start="261:37" pos:end="261:37">=</operator> <call pos:start="261:39" pos:end="261:69"><name pos:start="261:39" pos:end="261:43">FFMIN</name><argument_list pos:start="261:44" pos:end="261:69">(<argument pos:start="261:45" pos:end="261:63"><expr pos:start="261:45" pos:end="261:63"><name pos:start="261:45" pos:end="261:63"><name pos:start="261:45" pos:end="261:47">sce</name><operator pos:start="261:48" pos:end="261:49">-&gt;</operator><name pos:start="261:50" pos:end="261:55">sf_idx</name><index pos:start="261:56" pos:end="261:63">[<expr pos:start="261:57" pos:end="261:62"><name pos:start="261:57" pos:end="261:57">w</name><operator pos:start="261:58" pos:end="261:58">*</operator><literal type="number" pos:start="261:59" pos:end="261:61">16</literal><operator pos:start="261:61" pos:end="261:61">+</operator><name pos:start="261:62" pos:end="261:62">g</name></expr>]</index></name></expr></argument>, <argument pos:start="261:66" pos:end="261:68"><expr pos:start="261:66" pos:end="261:68"><literal type="number" pos:start="261:66" pos:end="261:68">219</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="263:17" pos:end="265:30"><if pos:start="263:17" pos:end="265:30">if <condition pos:start="263:20" pos:end="263:50">(<expr pos:start="263:21" pos:end="263:49"><name pos:start="263:21" pos:end="263:39"><name pos:start="263:21" pos:end="263:23">sce</name><operator pos:start="263:24" pos:end="263:25">-&gt;</operator><name pos:start="263:26" pos:end="263:31">sf_idx</name><index pos:start="263:32" pos:end="263:39">[<expr pos:start="263:33" pos:end="263:38"><name pos:start="263:33" pos:end="263:33">w</name><operator pos:start="263:34" pos:end="263:34">*</operator><literal type="number" pos:start="263:35" pos:end="263:36">16</literal><operator pos:start="263:37" pos:end="263:37">+</operator><name pos:start="263:38" pos:end="263:38">g</name></expr>]</index></name> <operator pos:start="263:41" pos:end="263:42">!=</operator> <name pos:start="263:44" pos:end="263:49">prevsc</name></expr>)</condition><block type="pseudo" pos:start="265:21" pos:end="265:30"><block_content pos:start="265:21" pos:end="265:30">

                    <expr_stmt pos:start="265:21" pos:end="265:30"><expr pos:start="265:21" pos:end="265:29"><name pos:start="265:21" pos:end="265:25">fflag</name> <operator pos:start="265:27" pos:end="265:27">=</operator> <literal type="number" pos:start="265:29" pos:end="265:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="271:9" pos:end="271:14"><expr pos:start="271:9" pos:end="271:13"><name pos:start="271:9" pos:end="271:11">its</name><operator pos:start="271:12" pos:end="271:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="273:13" pos:end="273:31">(<expr pos:start="273:14" pos:end="273:30"><name pos:start="273:14" pos:end="273:18">fflag</name> <operator pos:start="273:20" pos:end="273:21">&amp;&amp;</operator> <name pos:start="273:23" pos:end="273:25">its</name> <operator pos:start="273:27" pos:end="273:27">&lt;</operator> <literal type="number" pos:start="273:29" pos:end="273:30">10</literal></expr>)</condition>;</do>

</block_content>}</block></function>
</unit>
