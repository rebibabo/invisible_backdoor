<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18979.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">isa_ne2000_set_bootindex</name><parameter_list pos:start="1:37" pos:end="5:50">(<parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:43">Object</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">obj</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:57">Visitor</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">v</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">name</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:67"><decl pos:start="3:56" pos:end="3:67"><type pos:start="3:56" pos:end="3:67"><name pos:start="3:56" pos:end="3:59">void</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:67">opaque</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:42">Error</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:5">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">ISANE2000State</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">isa</name> <init pos:start="9:25" pos:end="9:41">= <expr pos:start="9:27" pos:end="9:41"><call pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:36">ISA_NE2000</name><argument_list pos:start="9:37" pos:end="9:41">(<argument pos:start="9:38" pos:end="9:40"><expr pos:start="9:38" pos:end="9:40"><name pos:start="9:38" pos:end="9:40">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">NE2000State</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">s</name> <init pos:start="11:20" pos:end="11:33">= <expr pos:start="11:22" pos:end="11:33"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:33"><name pos:start="11:23" pos:end="11:25">isa</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">ne2000</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:22">boot_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><call pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:20">visit_type_int32</name><argument_list pos:start="19:21" pos:end="19:54">(<argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">v</name></expr></argument>, <argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">name</name></expr></argument>, <argument pos:start="19:31" pos:end="19:41"><expr pos:start="19:31" pos:end="19:41"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:41">boot_index</name></expr></argument>, <argument pos:start="19:44" pos:end="19:53"><expr pos:start="19:44" pos:end="19:53"><operator pos:start="19:44" pos:end="19:44">&amp;</operator><name pos:start="19:45" pos:end="19:53">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17">local_err</name></expr>)</condition> <block pos:start="21:20" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:67">/* check whether bootindex is present in fw_boot_order list  */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:20">check_boot_index</name><argument_list pos:start="29:21" pos:end="29:44">(<argument pos:start="29:22" pos:end="29:31"><expr pos:start="29:22" pos:end="29:31"><name pos:start="29:22" pos:end="29:31">boot_index</name></expr></argument>, <argument pos:start="29:34" pos:end="29:43"><expr pos:start="29:34" pos:end="29:43"><operator pos:start="29:34" pos:end="29:34">&amp;</operator><name pos:start="29:35" pos:end="29:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:17">local_err</name></expr>)</condition> <block pos:start="31:20" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="37:5" pos:end="37:39">/* change bootindex to a new one */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:8">c</name><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:18">bootindex</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:31">boot_index</name></expr>;</expr_stmt>



<label pos:start="43:1" pos:end="43:4"><name pos:start="43:1" pos:end="43:3">out</name>:</label>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:17">local_err</name></expr>)</condition> <block pos:start="45:20" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:41">

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:23">error_propagate</name><argument_list pos:start="47:24" pos:end="47:40">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">errp</name></expr></argument>, <argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
