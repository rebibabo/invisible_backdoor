<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22478.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:26">next_query_bds</name><parameter_list pos:start="1:27" pos:end="3:44">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:39">BlockBackend</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier><modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">blk</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:63">BlockDriverState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">bs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:43"><decl pos:start="3:28" pos:end="3:43"><type pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:31">bool</name></type> <name pos:start="3:33" pos:end="3:43">query_nodes</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:18">

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:20">(<expr pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:19">query_nodes</name></expr>)</condition> <block pos:start="7:22" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:21">

        <expr_stmt pos:start="9:9" pos:end="9:34"><expr pos:start="9:9" pos:end="9:33"><operator pos:start="9:9" pos:end="9:9">*</operator><name pos:start="9:10" pos:end="9:11">bs</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <call pos:start="9:15" pos:end="9:33"><name pos:start="9:15" pos:end="9:28">bdrv_next_node</name><argument_list pos:start="9:29" pos:end="9:33">(<argument pos:start="9:30" pos:end="9:32"><expr pos:start="9:30" pos:end="9:32"><operator pos:start="9:30" pos:end="9:30">*</operator><name pos:start="9:31" pos:end="9:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:21">return <expr pos:start="11:16" pos:end="11:20"><operator pos:start="11:16" pos:end="11:16">!</operator><operator pos:start="11:17" pos:end="11:17">!</operator><operator pos:start="11:18" pos:end="11:18">*</operator><name pos:start="11:19" pos:end="11:20">bs</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:8">blk</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:19">blk_next</name><argument_list pos:start="17:20" pos:end="17:25">(<argument pos:start="17:21" pos:end="17:24"><expr pos:start="17:21" pos:end="17:24"><operator pos:start="17:21" pos:end="17:21">*</operator><name pos:start="17:22" pos:end="17:24">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:7">bs</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <ternary pos:start="19:11" pos:end="19:36"><condition pos:start="19:11" pos:end="19:16"><expr pos:start="19:11" pos:end="19:14"><operator pos:start="19:11" pos:end="19:11">*</operator><name pos:start="19:12" pos:end="19:14">blk</name></expr> ?</condition><then pos:start="19:18" pos:end="19:29"> <expr pos:start="19:18" pos:end="19:29"><call pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:23">blk_bs</name><argument_list pos:start="19:24" pos:end="19:29">(<argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><operator pos:start="19:25" pos:end="19:25">*</operator><name pos:start="19:26" pos:end="19:28">blk</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="19:31" pos:end="19:36">: <expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <return pos:start="23:5" pos:end="23:18">return <expr pos:start="23:12" pos:end="23:17"><operator pos:start="23:12" pos:end="23:12">!</operator><operator pos:start="23:13" pos:end="23:13">!</operator><operator pos:start="23:14" pos:end="23:14">*</operator><name pos:start="23:15" pos:end="23:17">blk</name></expr>;</return>

</block_content>}</block></function>
</unit>
