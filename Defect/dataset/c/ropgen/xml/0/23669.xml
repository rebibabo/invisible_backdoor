<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23669.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">avcodec_default_get_buffer</name><parameter_list pos:start="1:31" pos:end="1:63">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:57">AVFrame</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pic</name></decl></parameter>)</parameter_list><block pos:start="1:64" pos:end="187:1">{<block_content pos:start="3:5" pos:end="185:13">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">w</name><init pos:start="5:10" pos:end="5:19">= <expr pos:start="5:12" pos:end="5:19"><name pos:start="5:12" pos:end="5:19"><name pos:start="5:12" pos:end="5:12">s</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:19">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">h</name><init pos:start="7:10" pos:end="7:20">= <expr pos:start="7:12" pos:end="7:20"><name pos:start="7:12" pos:end="7:20"><name pos:start="7:12" pos:end="7:12">s</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:20">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">InternalBuffer</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">int</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:23">picture_number</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:30">(<argument pos:start="15:12" pos:end="15:29"><expr pos:start="15:12" pos:end="15:29"><name pos:start="15:12" pos:end="15:23"><name pos:start="15:12" pos:end="15:14">pic</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">data</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>]</index></name><operator pos:start="15:24" pos:end="15:25">==</operator><name pos:start="15:26" pos:end="15:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:59">(<argument pos:start="17:12" pos:end="17:58"><expr pos:start="17:12" pos:end="17:58"><name pos:start="17:12" pos:end="17:31">INTERNAL_BUFFER_SIZE</name> <operator pos:start="17:33" pos:end="17:33">&gt;</operator> <name pos:start="17:35" pos:end="17:58"><name pos:start="17:35" pos:end="17:35">s</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:58">internal_buffer_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if<condition pos:start="21:7" pos:end="21:39">(<expr pos:start="21:8" pos:end="21:38"><call pos:start="21:8" pos:end="21:38"><name pos:start="21:8" pos:end="21:31">avcodec_check_dimensions</name><argument_list pos:start="21:32" pos:end="21:38">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>,<argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">w</name></expr></argument>,<argument pos:start="21:37" pos:end="21:37"><expr pos:start="21:37" pos:end="21:37"><name pos:start="21:37" pos:end="21:37">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="46:0"><if pos:start="27:5" pos:end="46:0">if<condition pos:start="27:7" pos:end="27:32">(<expr pos:start="27:8" pos:end="27:31"><name pos:start="27:8" pos:end="27:25"><name pos:start="27:8" pos:end="27:8">s</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:25">internal_buffer</name></name><operator pos:start="27:26" pos:end="27:27">==</operator><name pos:start="27:28" pos:end="27:31">NULL</name></expr>)</condition><block pos:start="27:33" pos:end="46:0">{<block_content pos:start="29:9" pos:end="29:84">

        <expr_stmt pos:start="29:9" pos:end="29:84"><expr pos:start="29:9" pos:end="29:83"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:26">internal_buffer</name></name><operator pos:start="29:27" pos:end="29:27">=</operator> <call pos:start="29:29" pos:end="29:83"><name pos:start="29:29" pos:end="29:38">av_mallocz</name><argument_list pos:start="29:39" pos:end="29:83">(<argument pos:start="29:40" pos:end="29:82"><expr pos:start="29:40" pos:end="29:82"><name pos:start="29:40" pos:end="29:59">INTERNAL_BUFFER_SIZE</name><operator pos:start="29:60" pos:end="29:60">*</operator><sizeof pos:start="29:61" pos:end="29:82">sizeof<argument_list pos:start="29:67" pos:end="29:82">(<argument pos:start="29:68" pos:end="29:81"><expr pos:start="29:68" pos:end="29:81"><name pos:start="29:68" pos:end="29:81">InternalBuffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="33:1" pos:end="33:5">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:5"><literal type="number" pos:start="33:5" pos:end="33:5">0</literal></expr></cpp:if>

    s-&gt;internal_buffer= av_fast_realloc(

        s-&gt;internal_buffer,

        &amp;s-&gt;internal_buffer_size,

        sizeof(InternalBuffer)*FFMAX(99,  s-&gt;internal_buffer_count+1)<comment type="block" pos:start="41:70" pos:end="41:78">/*FIXME*/</comment>

        );

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:7">buf</name><operator pos:start="49:8" pos:end="49:8">=</operator> <operator pos:start="49:10" pos:end="49:10">&amp;</operator><operator pos:start="49:11" pos:end="49:11">(</operator><operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:26">InternalBuffer</name><operator pos:start="49:27" pos:end="49:27">*</operator><operator pos:start="49:28" pos:end="49:28">)</operator><name pos:start="49:29" pos:end="49:46"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:46">internal_buffer</name></name><operator pos:start="49:47" pos:end="49:47">)</operator><index pos:start="49:48" pos:end="49:73">[<expr pos:start="49:49" pos:end="49:72"><name pos:start="49:49" pos:end="49:72"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:72">internal_buffer_count</name></name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:98"><expr pos:start="51:5" pos:end="51:97"><name pos:start="51:5" pos:end="51:18">picture_number</name><operator pos:start="51:19" pos:end="51:19">=</operator> <operator pos:start="51:21" pos:end="51:21">&amp;</operator><operator pos:start="51:22" pos:end="51:22">(</operator><operator pos:start="51:23" pos:end="51:23">(</operator><operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:38">InternalBuffer</name><operator pos:start="51:39" pos:end="51:39">*</operator><operator pos:start="51:40" pos:end="51:40">)</operator><name pos:start="51:41" pos:end="51:58"><name pos:start="51:41" pos:end="51:41">s</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:58">internal_buffer</name></name><operator pos:start="51:59" pos:end="51:59">)</operator><index pos:start="51:60" pos:end="51:83">[<expr pos:start="51:61" pos:end="51:82"><name pos:start="51:61" pos:end="51:80">INTERNAL_BUFFER_SIZE</name><operator pos:start="51:81" pos:end="51:81">-</operator><literal type="number" pos:start="51:82" pos:end="51:82">1</literal></expr>]</index><operator pos:start="51:84" pos:end="51:84">)</operator><operator pos:start="51:85" pos:end="51:85">.</operator><name pos:start="51:86" pos:end="51:97">last_pic_num</name></expr>;</expr_stmt> <comment type="line" pos:start="51:100" pos:end="51:116">//FIXME ugly hack</comment>

    <expr_stmt pos:start="53:5" pos:end="53:24"><expr pos:start="53:5" pos:end="53:23"><operator pos:start="53:5" pos:end="53:5">(</operator><operator pos:start="53:6" pos:end="53:6">*</operator><name pos:start="53:7" pos:end="53:20">picture_number</name><operator pos:start="53:21" pos:end="53:21">)</operator><operator pos:start="53:22" pos:end="53:23">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="165:5"><if pos:start="57:5" pos:end="63:5">if<condition pos:start="57:7" pos:end="57:20">(<expr pos:start="57:8" pos:end="57:19"><name pos:start="57:8" pos:end="57:19"><name pos:start="57:8" pos:end="57:10">buf</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:16">base</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>]</index></name></expr>)</condition><block pos:start="57:21" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:43">

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">pic</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:16">age</name></name><operator pos:start="59:17" pos:end="59:17">=</operator> <operator pos:start="59:19" pos:end="59:19">*</operator><name pos:start="59:20" pos:end="59:33">picture_number</name> <operator pos:start="59:35" pos:end="59:35">-</operator> <name pos:start="59:37" pos:end="59:53"><name pos:start="59:37" pos:end="59:39">buf</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:53">last_pic_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:11">buf</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:25">last_pic_num</name></name><operator pos:start="61:26" pos:end="61:26">=</operator> <operator pos:start="61:28" pos:end="61:28">*</operator><name pos:start="61:29" pos:end="61:42">picture_number</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="63:6" pos:end="165:5">else<block pos:start="63:10" pos:end="165:5">{<block_content pos:start="65:9" pos:end="163:33">

        <decl_stmt pos:start="65:9" pos:end="65:43"><decl pos:start="65:9" pos:end="65:26"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:26">h_chroma_shift</name></decl>, <decl pos:start="65:29" pos:end="65:42"><type ref="prev" pos:start="65:9" pos:end="65:11"/><name pos:start="65:29" pos:end="65:42">v_chroma_shift</name></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:32"><decl pos:start="67:9" pos:end="67:22"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:22">pixel_size</name></decl>, <decl pos:start="67:25" pos:end="67:31"><type ref="prev" pos:start="67:9" pos:end="67:11"/><name pos:start="67:25" pos:end="67:31"><name pos:start="67:25" pos:end="67:28">size</name><index pos:start="67:29" pos:end="67:31">[<expr pos:start="67:30" pos:end="67:30"><literal type="number" pos:start="67:30" pos:end="67:30">3</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:26"><decl pos:start="69:9" pos:end="69:25"><type pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:17">AVPicture</name></type> <name pos:start="69:19" pos:end="69:25">picture</name></decl>;</decl_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:84"><expr pos:start="73:9" pos:end="73:83"><call pos:start="73:9" pos:end="73:83"><name pos:start="73:9" pos:end="73:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="73:38" pos:end="73:83">(<argument pos:start="73:39" pos:end="73:48"><expr pos:start="73:39" pos:end="73:48"><name pos:start="73:39" pos:end="73:48"><name pos:start="73:39" pos:end="73:39">s</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:48">pix_fmt</name></name></expr></argument>, <argument pos:start="73:51" pos:end="73:65"><expr pos:start="73:51" pos:end="73:65"><operator pos:start="73:51" pos:end="73:51">&amp;</operator><name pos:start="73:52" pos:end="73:65">h_chroma_shift</name></expr></argument>, <argument pos:start="73:68" pos:end="73:82"><expr pos:start="73:68" pos:end="73:82"><operator pos:start="73:68" pos:end="73:68">&amp;</operator><name pos:start="73:69" pos:end="73:82">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:44"><expr pos:start="77:9" pos:end="77:43"><call pos:start="77:9" pos:end="77:43"><name pos:start="77:9" pos:end="77:32">avcodec_align_dimensions</name><argument_list pos:start="77:33" pos:end="77:43">(<argument pos:start="77:34" pos:end="77:34"><expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">s</name></expr></argument>, <argument pos:start="77:37" pos:end="77:38"><expr pos:start="77:37" pos:end="77:38"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:38">w</name></expr></argument>, <argument pos:start="77:41" pos:end="77:42"><expr pos:start="77:41" pos:end="77:42"><operator pos:start="77:41" pos:end="77:41">&amp;</operator><name pos:start="77:42" pos:end="77:42">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if<condition pos:start="81:11" pos:end="81:43">(<expr pos:start="81:12" pos:end="81:42"><operator pos:start="81:12" pos:end="81:12">!</operator><operator pos:start="81:13" pos:end="81:13">(</operator><name pos:start="81:14" pos:end="81:21"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:21">flags</name></name><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:41">CODEC_FLAG_EMU_EDGE</name><operator pos:start="81:42" pos:end="81:42">)</operator></expr>)</condition><block pos:start="81:44" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:29">

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:13">w</name><operator pos:start="83:14" pos:end="83:15">+=</operator> <name pos:start="83:17" pos:end="83:26">EDGE_WIDTH</name><operator pos:start="83:27" pos:end="83:27">*</operator><literal type="number" pos:start="83:28" pos:end="83:28">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:29"><expr pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:13">h</name><operator pos:start="85:14" pos:end="85:15">+=</operator> <name pos:start="85:17" pos:end="85:26">EDGE_WIDTH</name><operator pos:start="85:27" pos:end="85:27">*</operator><literal type="number" pos:start="85:28" pos:end="85:28">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:57"><expr pos:start="89:9" pos:end="89:56"><call pos:start="89:9" pos:end="89:56"><name pos:start="89:9" pos:end="89:22">avpicture_fill</name><argument_list pos:start="89:23" pos:end="89:56">(<argument pos:start="89:24" pos:end="89:31"><expr pos:start="89:24" pos:end="89:31"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:31">picture</name></expr></argument>, <argument pos:start="89:34" pos:end="89:37"><expr pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:37">NULL</name></expr></argument>, <argument pos:start="89:40" pos:end="89:49"><expr pos:start="89:40" pos:end="89:49"><name pos:start="89:40" pos:end="89:49"><name pos:start="89:40" pos:end="89:40">s</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:49">pix_fmt</name></name></expr></argument>, <argument pos:start="89:52" pos:end="89:52"><expr pos:start="89:52" pos:end="89:52"><name pos:start="89:52" pos:end="89:52">w</name></expr></argument>, <argument pos:start="89:55" pos:end="89:55"><expr pos:start="89:55" pos:end="89:55"><name pos:start="89:55" pos:end="89:55">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:46"><expr pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:18">pixel_size</name><operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:27">picture</name><operator pos:start="91:28" pos:end="91:28">.</operator><name pos:start="91:29" pos:end="91:36">linesize</name><index pos:start="91:37" pos:end="91:39">[<expr pos:start="91:38" pos:end="91:38"><literal type="number" pos:start="91:38" pos:end="91:38">0</literal></expr>]</index></name><operator pos:start="91:40" pos:end="91:40">*</operator><literal type="number" pos:start="91:41" pos:end="91:41">8</literal> <operator pos:start="91:43" pos:end="91:43">/</operator> <name pos:start="91:45" pos:end="91:45">w</name></expr>;</expr_stmt>

<comment type="line" pos:start="93:1" pos:end="93:86">//av_log(NULL, AV_LOG_ERROR, "%d %d %d %d\n", (int)picture.data[1], w, h, s-&gt;pix_fmt);</comment>

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><call pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:14">assert</name><argument_list pos:start="95:15" pos:end="95:29">(<argument pos:start="95:16" pos:end="95:28"><expr pos:start="95:16" pos:end="95:28"><name pos:start="95:16" pos:end="95:25">pixel_size</name><operator pos:start="95:26" pos:end="95:27">&gt;=</operator><literal type="number" pos:start="95:28" pos:end="95:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="97:13" pos:end="97:108">//FIXME next ensures that linesize= 2^x uvlinesize, thats needed because some MC code assumes it</comment>

        <if_stmt pos:start="99:9" pos:end="105:82"><if pos:start="99:9" pos:end="101:54">if<condition pos:start="99:11" pos:end="99:29">(<expr pos:start="99:12" pos:end="99:28"><name pos:start="99:12" pos:end="99:21">pixel_size</name> <operator pos:start="99:23" pos:end="99:24">==</operator> <literal type="number" pos:start="99:26" pos:end="99:26">3</literal><operator pos:start="99:27" pos:end="99:27">*</operator><literal type="number" pos:start="99:28" pos:end="99:28">8</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:54"><block_content pos:start="101:13" pos:end="101:54">

            <expr_stmt pos:start="101:13" pos:end="101:54"><expr pos:start="101:13" pos:end="101:53"><name pos:start="101:13" pos:end="101:13">w</name><operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:53"><name pos:start="101:16" pos:end="101:20">ALIGN</name><argument_list pos:start="101:21" pos:end="101:53">(<argument pos:start="101:22" pos:end="101:22"><expr pos:start="101:22" pos:end="101:22"><name pos:start="101:22" pos:end="101:22">w</name></expr></argument>, <argument pos:start="101:25" pos:end="101:52"><expr pos:start="101:25" pos:end="101:52"><name pos:start="101:25" pos:end="101:36">STRIDE_ALIGN</name><operator pos:start="101:37" pos:end="101:38">&lt;&lt;</operator><name pos:start="101:39" pos:end="101:52">h_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="103:9" pos:end="105:82">else<block type="pseudo" pos:start="105:13" pos:end="105:82"><block_content pos:start="105:13" pos:end="105:82">

            <expr_stmt pos:start="105:13" pos:end="105:82"><expr pos:start="105:13" pos:end="105:81"><name pos:start="105:13" pos:end="105:13">w</name><operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:68"><name pos:start="105:16" pos:end="105:20">ALIGN</name><argument_list pos:start="105:21" pos:end="105:68">(<argument pos:start="105:22" pos:end="105:33"><expr pos:start="105:22" pos:end="105:33"><name pos:start="105:22" pos:end="105:31">pixel_size</name><operator pos:start="105:32" pos:end="105:32">*</operator><name pos:start="105:33" pos:end="105:33">w</name></expr></argument>, <argument pos:start="105:36" pos:end="105:67"><expr pos:start="105:36" pos:end="105:67"><name pos:start="105:36" pos:end="105:47">STRIDE_ALIGN</name><operator pos:start="105:48" pos:end="105:49">&lt;&lt;</operator><operator pos:start="105:50" pos:end="105:50">(</operator><name pos:start="105:51" pos:end="105:64">h_chroma_shift</name><operator pos:start="105:65" pos:end="105:65">+</operator><literal type="number" pos:start="105:66" pos:end="105:66">3</literal><operator pos:start="105:67" pos:end="105:67">)</operator></expr></argument>)</argument_list></call> <operator pos:start="105:70" pos:end="105:70">/</operator> <name pos:start="105:72" pos:end="105:81">pixel_size</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:67"><expr pos:start="107:9" pos:end="107:66"><name pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:12">size</name><index pos:start="107:13" pos:end="107:15">[<expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">1</literal></expr>]</index></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:66"><name pos:start="107:19" pos:end="107:32">avpicture_fill</name><argument_list pos:start="107:33" pos:end="107:66">(<argument pos:start="107:34" pos:end="107:41"><expr pos:start="107:34" pos:end="107:41"><operator pos:start="107:34" pos:end="107:34">&amp;</operator><name pos:start="107:35" pos:end="107:41">picture</name></expr></argument>, <argument pos:start="107:44" pos:end="107:47"><expr pos:start="107:44" pos:end="107:47"><name pos:start="107:44" pos:end="107:47">NULL</name></expr></argument>, <argument pos:start="107:50" pos:end="107:59"><expr pos:start="107:50" pos:end="107:59"><name pos:start="107:50" pos:end="107:59"><name pos:start="107:50" pos:end="107:50">s</name><operator pos:start="107:51" pos:end="107:52">-&gt;</operator><name pos:start="107:53" pos:end="107:59">pix_fmt</name></name></expr></argument>, <argument pos:start="107:62" pos:end="107:62"><expr pos:start="107:62" pos:end="107:62"><name pos:start="107:62" pos:end="107:62">w</name></expr></argument>, <argument pos:start="107:65" pos:end="107:65"><expr pos:start="107:65" pos:end="107:65"><name pos:start="107:65" pos:end="107:65">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:42"><expr pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:12">size</name><index pos:start="109:13" pos:end="109:15">[<expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>]</index></name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:37"><name pos:start="109:19" pos:end="109:25">picture</name><operator pos:start="109:26" pos:end="109:26">.</operator><name pos:start="109:27" pos:end="109:34">linesize</name><index pos:start="109:35" pos:end="109:37">[<expr pos:start="109:36" pos:end="109:36"><literal type="number" pos:start="109:36" pos:end="109:36">0</literal></expr>]</index></name> <operator pos:start="109:39" pos:end="109:39">*</operator> <name pos:start="109:41" pos:end="109:41">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:27"><expr pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:12">size</name><index pos:start="111:13" pos:end="111:15">[<expr pos:start="111:14" pos:end="111:14"><literal type="number" pos:start="111:14" pos:end="111:14">1</literal></expr>]</index></name> <operator pos:start="111:17" pos:end="111:18">-=</operator> <name pos:start="111:20" pos:end="111:26"><name pos:start="111:20" pos:end="111:23">size</name><index pos:start="111:24" pos:end="111:26">[<expr pos:start="111:25" pos:end="111:25"><literal type="number" pos:start="111:25" pos:end="111:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="119:23"><if pos:start="113:9" pos:end="115:40">if<condition pos:start="113:11" pos:end="113:27">(<expr pos:start="113:12" pos:end="113:26"><name pos:start="113:12" pos:end="113:26"><name pos:start="113:12" pos:end="113:18">picture</name><operator pos:start="113:19" pos:end="113:19">.</operator><name pos:start="113:20" pos:end="113:23">data</name><index pos:start="113:24" pos:end="113:26">[<expr pos:start="113:25" pos:end="113:25"><literal type="number" pos:start="113:25" pos:end="113:25">2</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:40"><block_content pos:start="115:13" pos:end="115:40">

            <expr_stmt pos:start="115:13" pos:end="115:40"><expr pos:start="115:13" pos:end="115:39"><name pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:16">size</name><index pos:start="115:17" pos:end="115:19">[<expr pos:start="115:18" pos:end="115:18"><literal type="number" pos:start="115:18" pos:end="115:18">1</literal></expr>]</index></name><operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:28"><name pos:start="115:22" pos:end="115:25">size</name><index pos:start="115:26" pos:end="115:28">[<expr pos:start="115:27" pos:end="115:27"><literal type="number" pos:start="115:27" pos:end="115:27">2</literal></expr>]</index></name><operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:37"><name pos:start="115:31" pos:end="115:34">size</name><index pos:start="115:35" pos:end="115:37">[<expr pos:start="115:36" pos:end="115:36"><literal type="number" pos:start="115:36" pos:end="115:36">1</literal></expr>]</index></name><operator pos:start="115:38" pos:end="115:38">/</operator><literal type="number" pos:start="115:39" pos:end="115:39">2</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="117:9" pos:end="119:23">else<block type="pseudo" pos:start="119:13" pos:end="119:23"><block_content pos:start="119:13" pos:end="119:23">

            <expr_stmt pos:start="119:13" pos:end="119:23"><expr pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:19"><name pos:start="119:13" pos:end="119:16">size</name><index pos:start="119:17" pos:end="119:19">[<expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">2</literal></expr>]</index></name><operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:43"><expr pos:start="123:9" pos:end="123:42"><name pos:start="123:9" pos:end="123:25"><name pos:start="123:9" pos:end="123:11">buf</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:25">last_pic_num</name></name><operator pos:start="123:26" pos:end="123:26">=</operator> <operator pos:start="123:28" pos:end="123:28">-</operator><literal type="number" pos:start="123:29" pos:end="123:31">256</literal><operator pos:start="123:32" pos:end="123:32">*</operator><literal type="number" pos:start="123:33" pos:end="123:35">256</literal><operator pos:start="123:36" pos:end="123:36">*</operator><literal type="number" pos:start="123:37" pos:end="123:39">256</literal><operator pos:start="123:40" pos:end="123:40">*</operator><literal type="number" pos:start="123:41" pos:end="123:42">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:48"><expr pos:start="125:9" pos:end="125:47"><call pos:start="125:9" pos:end="125:47"><name pos:start="125:9" pos:end="125:14">memset</name><argument_list pos:start="125:15" pos:end="125:47">(<argument pos:start="125:16" pos:end="125:24"><expr pos:start="125:16" pos:end="125:24"><name pos:start="125:16" pos:end="125:24"><name pos:start="125:16" pos:end="125:18">buf</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:24">base</name></name></expr></argument>, <argument pos:start="125:27" pos:end="125:27"><expr pos:start="125:27" pos:end="125:27"><literal type="number" pos:start="125:27" pos:end="125:27">0</literal></expr></argument>, <argument pos:start="125:30" pos:end="125:46"><expr pos:start="125:30" pos:end="125:46"><sizeof pos:start="125:30" pos:end="125:46">sizeof<argument_list pos:start="125:36" pos:end="125:46">(<argument pos:start="125:37" pos:end="125:45"><expr pos:start="125:37" pos:end="125:45"><name pos:start="125:37" pos:end="125:45"><name pos:start="125:37" pos:end="125:39">buf</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:45">base</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><call pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:14">memset</name><argument_list pos:start="127:15" pos:end="127:47">(<argument pos:start="127:16" pos:end="127:24"><expr pos:start="127:16" pos:end="127:24"><name pos:start="127:16" pos:end="127:24"><name pos:start="127:16" pos:end="127:18">buf</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:24">data</name></name></expr></argument>, <argument pos:start="127:27" pos:end="127:27"><expr pos:start="127:27" pos:end="127:27"><literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr></argument>, <argument pos:start="127:30" pos:end="127:46"><expr pos:start="127:30" pos:end="127:46"><sizeof pos:start="127:30" pos:end="127:46">sizeof<argument_list pos:start="127:36" pos:end="127:46">(<argument pos:start="127:37" pos:end="127:45"><expr pos:start="127:37" pos:end="127:45"><name pos:start="127:37" pos:end="127:45"><name pos:start="127:37" pos:end="127:39">buf</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:45">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="131:9" pos:end="161:9">for<control pos:start="131:12" pos:end="131:37">(<init pos:start="131:13" pos:end="131:16"><expr pos:start="131:13" pos:end="131:15"><name pos:start="131:13" pos:end="131:13">i</name><operator pos:start="131:14" pos:end="131:14">=</operator><literal type="number" pos:start="131:15" pos:end="131:15">0</literal></expr>;</init> <condition pos:start="131:18" pos:end="131:32"><expr pos:start="131:18" pos:end="131:31"><name pos:start="131:18" pos:end="131:18">i</name><operator pos:start="131:19" pos:end="131:19">&lt;</operator><literal type="number" pos:start="131:20" pos:end="131:20">3</literal> <operator pos:start="131:22" pos:end="131:23">&amp;&amp;</operator> <name pos:start="131:25" pos:end="131:31"><name pos:start="131:25" pos:end="131:28">size</name><index pos:start="131:29" pos:end="131:31">[<expr pos:start="131:30" pos:end="131:30"><name pos:start="131:30" pos:end="131:30">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="131:34" pos:end="131:36"><expr pos:start="131:34" pos:end="131:36"><name pos:start="131:34" pos:end="131:34">i</name><operator pos:start="131:35" pos:end="131:36">++</operator></expr></incr>)</control><block pos:start="131:38" pos:end="161:9">{<block_content pos:start="133:13" pos:end="159:130">

            <decl_stmt pos:start="133:13" pos:end="133:57"><decl pos:start="133:13" pos:end="133:56"><type pos:start="133:13" pos:end="133:21"><specifier pos:start="133:13" pos:end="133:17">const</specifier> <name pos:start="133:19" pos:end="133:21">int</name></type> <name pos:start="133:23" pos:end="133:29">h_shift</name><init pos:start="133:30" pos:end="133:56">= <expr pos:start="133:32" pos:end="133:56"><ternary pos:start="133:32" pos:end="133:56"><condition pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:35"><name pos:start="133:32" pos:end="133:32">i</name><operator pos:start="133:33" pos:end="133:34">==</operator><literal type="number" pos:start="133:35" pos:end="133:35">0</literal></expr> ?</condition><then pos:start="133:39" pos:end="133:39"> <expr pos:start="133:39" pos:end="133:39"><literal type="number" pos:start="133:39" pos:end="133:39">0</literal></expr> </then><else pos:start="133:41" pos:end="133:56">: <expr pos:start="133:43" pos:end="133:56"><name pos:start="133:43" pos:end="133:56">h_chroma_shift</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:57"><decl pos:start="135:13" pos:end="135:56"><type pos:start="135:13" pos:end="135:21"><specifier pos:start="135:13" pos:end="135:17">const</specifier> <name pos:start="135:19" pos:end="135:21">int</name></type> <name pos:start="135:23" pos:end="135:29">v_shift</name><init pos:start="135:30" pos:end="135:56">= <expr pos:start="135:32" pos:end="135:56"><ternary pos:start="135:32" pos:end="135:56"><condition pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:35"><name pos:start="135:32" pos:end="135:32">i</name><operator pos:start="135:33" pos:end="135:34">==</operator><literal type="number" pos:start="135:35" pos:end="135:35">0</literal></expr> ?</condition><then pos:start="135:39" pos:end="135:39"> <expr pos:start="135:39" pos:end="135:39"><literal type="number" pos:start="135:39" pos:end="135:39">0</literal></expr> </then><else pos:start="135:41" pos:end="135:56">: <expr pos:start="135:43" pos:end="135:56"><name pos:start="135:43" pos:end="135:56">v_chroma_shift</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:50"><expr pos:start="139:13" pos:end="139:49"><name pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:15">buf</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:25">linesize</name><index pos:start="139:26" pos:end="139:28">[<expr pos:start="139:27" pos:end="139:27"><name pos:start="139:27" pos:end="139:27">i</name></expr>]</index></name><operator pos:start="139:29" pos:end="139:29">=</operator> <name pos:start="139:31" pos:end="139:49"><name pos:start="139:31" pos:end="139:37">picture</name><operator pos:start="139:38" pos:end="139:38">.</operator><name pos:start="139:39" pos:end="139:46">linesize</name><index pos:start="139:47" pos:end="139:49">[<expr pos:start="139:48" pos:end="139:48"><name pos:start="139:48" pos:end="139:48">i</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:48"><expr pos:start="143:13" pos:end="143:47"><name pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:15">buf</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:21">base</name><index pos:start="143:22" pos:end="143:24">[<expr pos:start="143:23" pos:end="143:23"><name pos:start="143:23" pos:end="143:23">i</name></expr>]</index></name><operator pos:start="143:25" pos:end="143:25">=</operator> <call pos:start="143:27" pos:end="143:47"><name pos:start="143:27" pos:end="143:35">av_malloc</name><argument_list pos:start="143:36" pos:end="143:47">(<argument pos:start="143:37" pos:end="143:46"><expr pos:start="143:37" pos:end="143:46"><name pos:start="143:37" pos:end="143:43"><name pos:start="143:37" pos:end="143:40">size</name><index pos:start="143:41" pos:end="143:43">[<expr pos:start="143:42" pos:end="143:42"><name pos:start="143:42" pos:end="143:42">i</name></expr>]</index></name><operator pos:start="143:44" pos:end="143:44">+</operator><literal type="number" pos:start="143:45" pos:end="143:46">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="143:50" pos:end="143:59">//FIXME 16</comment>

            <if_stmt pos:start="145:13" pos:end="145:45"><if pos:start="145:13" pos:end="145:45">if<condition pos:start="145:15" pos:end="145:34">(<expr pos:start="145:16" pos:end="145:33"><name pos:start="145:16" pos:end="145:27"><name pos:start="145:16" pos:end="145:18">buf</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:24">base</name><index pos:start="145:25" pos:end="145:27">[<expr pos:start="145:26" pos:end="145:26"><name pos:start="145:26" pos:end="145:26">i</name></expr>]</index></name><operator pos:start="145:28" pos:end="145:29">==</operator><name pos:start="145:30" pos:end="145:33">NULL</name></expr>)</condition><block type="pseudo" pos:start="145:36" pos:end="145:45"><block_content pos:start="145:36" pos:end="145:45"> <return pos:start="145:36" pos:end="145:45">return <expr pos:start="145:43" pos:end="145:44"><operator pos:start="145:43" pos:end="145:43">-</operator><literal type="number" pos:start="145:44" pos:end="145:44">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:47"><expr pos:start="147:13" pos:end="147:46"><call pos:start="147:13" pos:end="147:46"><name pos:start="147:13" pos:end="147:18">memset</name><argument_list pos:start="147:19" pos:end="147:46">(<argument pos:start="147:20" pos:end="147:31"><expr pos:start="147:20" pos:end="147:31"><name pos:start="147:20" pos:end="147:31"><name pos:start="147:20" pos:end="147:22">buf</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:28">base</name><index pos:start="147:29" pos:end="147:31">[<expr pos:start="147:30" pos:end="147:30"><name pos:start="147:30" pos:end="147:30">i</name></expr>]</index></name></expr></argument>, <argument pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><literal type="number" pos:start="147:34" pos:end="147:36">128</literal></expr></argument>, <argument pos:start="147:39" pos:end="147:45"><expr pos:start="147:39" pos:end="147:45"><name pos:start="147:39" pos:end="147:45"><name pos:start="147:39" pos:end="147:42">size</name><index pos:start="147:43" pos:end="147:45">[<expr pos:start="147:44" pos:end="147:44"><name pos:start="147:44" pos:end="147:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="151:13" pos:end="151:135">// no edge if EDEG EMU or not planar YUV, we check for PAL8 redundantly to protect against a exploitable bug regression ...</comment>

            <if_stmt pos:start="153:13" pos:end="159:130"><if pos:start="153:13" pos:end="155:44">if<condition pos:start="153:15" pos:end="153:90">(<expr pos:start="153:16" pos:end="153:89"><operator pos:start="153:16" pos:end="153:16">(</operator><name pos:start="153:17" pos:end="153:24"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:24">flags</name></name><operator pos:start="153:25" pos:end="153:25">&amp;</operator><name pos:start="153:26" pos:end="153:44">CODEC_FLAG_EMU_EDGE</name><operator pos:start="153:45" pos:end="153:45">)</operator> <operator pos:start="153:47" pos:end="153:48">||</operator> <operator pos:start="153:50" pos:end="153:50">(</operator><name pos:start="153:51" pos:end="153:60"><name pos:start="153:51" pos:end="153:51">s</name><operator pos:start="153:52" pos:end="153:53">-&gt;</operator><name pos:start="153:54" pos:end="153:60">pix_fmt</name></name> <operator pos:start="153:62" pos:end="153:63">==</operator> <name pos:start="153:65" pos:end="153:76">PIX_FMT_PAL8</name><operator pos:start="153:77" pos:end="153:77">)</operator> <operator pos:start="153:79" pos:end="153:80">||</operator> <operator pos:start="153:82" pos:end="153:82">!</operator><name pos:start="153:83" pos:end="153:89"><name pos:start="153:83" pos:end="153:86">size</name><index pos:start="153:87" pos:end="153:89">[<expr pos:start="153:88" pos:end="153:88"><literal type="number" pos:start="153:88" pos:end="153:88">2</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:44"><block_content pos:start="155:17" pos:end="155:44">

                <expr_stmt pos:start="155:17" pos:end="155:44"><expr pos:start="155:17" pos:end="155:43"><name pos:start="155:17" pos:end="155:28"><name pos:start="155:17" pos:end="155:19">buf</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:25">data</name><index pos:start="155:26" pos:end="155:28">[<expr pos:start="155:27" pos:end="155:27"><name pos:start="155:27" pos:end="155:27">i</name></expr>]</index></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:43"><name pos:start="155:32" pos:end="155:34">buf</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:40">base</name><index pos:start="155:41" pos:end="155:43">[<expr pos:start="155:42" pos:end="155:42"><name pos:start="155:42" pos:end="155:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="157:13" pos:end="159:130">else<block type="pseudo" pos:start="159:17" pos:end="159:130"><block_content pos:start="159:17" pos:end="159:130">

                <expr_stmt pos:start="159:17" pos:end="159:130"><expr pos:start="159:17" pos:end="159:129"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:19">buf</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:25">data</name><index pos:start="159:26" pos:end="159:28">[<expr pos:start="159:27" pos:end="159:27"><name pos:start="159:27" pos:end="159:27">i</name></expr>]</index></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:43"><name pos:start="159:32" pos:end="159:34">buf</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:40">base</name><index pos:start="159:41" pos:end="159:43">[<expr pos:start="159:42" pos:end="159:42"><name pos:start="159:42" pos:end="159:42">i</name></expr>]</index></name> <operator pos:start="159:45" pos:end="159:45">+</operator> <call pos:start="159:47" pos:end="159:129"><name pos:start="159:47" pos:end="159:51">ALIGN</name><argument_list pos:start="159:52" pos:end="159:129">(<argument pos:start="159:53" pos:end="159:114"><expr pos:start="159:53" pos:end="159:114"><operator pos:start="159:53" pos:end="159:53">(</operator><name pos:start="159:54" pos:end="159:69"><name pos:start="159:54" pos:end="159:56">buf</name><operator pos:start="159:57" pos:end="159:58">-&gt;</operator><name pos:start="159:59" pos:end="159:66">linesize</name><index pos:start="159:67" pos:end="159:69">[<expr pos:start="159:68" pos:end="159:68"><name pos:start="159:68" pos:end="159:68">i</name></expr>]</index></name><operator pos:start="159:70" pos:end="159:70">*</operator><name pos:start="159:71" pos:end="159:80">EDGE_WIDTH</name><operator pos:start="159:81" pos:end="159:82">&gt;&gt;</operator><name pos:start="159:83" pos:end="159:89">v_shift</name><operator pos:start="159:90" pos:end="159:90">)</operator> <operator pos:start="159:92" pos:end="159:92">+</operator> <operator pos:start="159:94" pos:end="159:94">(</operator><name pos:start="159:95" pos:end="159:104">EDGE_WIDTH</name><operator pos:start="159:105" pos:end="159:106">&gt;&gt;</operator><name pos:start="159:107" pos:end="159:113">h_shift</name><operator pos:start="159:114" pos:end="159:114">)</operator></expr></argument>, <argument pos:start="159:117" pos:end="159:128"><expr pos:start="159:117" pos:end="159:128"><name pos:start="159:117" pos:end="159:128">STRIDE_ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="163:9" pos:end="163:33"><expr pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:16"><name pos:start="163:9" pos:end="163:11">pic</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:16">age</name></name><operator pos:start="163:17" pos:end="163:17">=</operator> <literal type="number" pos:start="163:19" pos:end="163:21">256</literal><operator pos:start="163:22" pos:end="163:22">*</operator><literal type="number" pos:start="163:23" pos:end="163:25">256</literal><operator pos:start="163:26" pos:end="163:26">*</operator><literal type="number" pos:start="163:27" pos:end="163:29">256</literal><operator pos:start="163:30" pos:end="163:30">*</operator><literal type="number" pos:start="163:31" pos:end="163:32">64</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:39"><expr pos:start="167:5" pos:end="167:38"><name pos:start="167:5" pos:end="167:13"><name pos:start="167:5" pos:end="167:7">pic</name><operator pos:start="167:8" pos:end="167:9">-&gt;</operator><name pos:start="167:10" pos:end="167:13">type</name></name><operator pos:start="167:14" pos:end="167:14">=</operator> <name pos:start="167:16" pos:end="167:38">FF_BUFFER_TYPE_INTERNAL</name></expr>;</expr_stmt>



    <for pos:start="171:5" pos:end="179:5">for<control pos:start="171:8" pos:end="171:22">(<init pos:start="171:9" pos:end="171:12"><expr pos:start="171:9" pos:end="171:11"><name pos:start="171:9" pos:end="171:9">i</name><operator pos:start="171:10" pos:end="171:10">=</operator><literal type="number" pos:start="171:11" pos:end="171:11">0</literal></expr>;</init> <condition pos:start="171:14" pos:end="171:17"><expr pos:start="171:14" pos:end="171:16"><name pos:start="171:14" pos:end="171:14">i</name><operator pos:start="171:15" pos:end="171:15">&lt;</operator><literal type="number" pos:start="171:16" pos:end="171:16">4</literal></expr>;</condition> <incr pos:start="171:19" pos:end="171:21"><expr pos:start="171:19" pos:end="171:21"><name pos:start="171:19" pos:end="171:19">i</name><operator pos:start="171:20" pos:end="171:21">++</operator></expr></incr>)</control><block pos:start="171:23" pos:end="179:5">{<block_content pos:start="173:9" pos:end="177:43">

        <expr_stmt pos:start="173:9" pos:end="173:35"><expr pos:start="173:9" pos:end="173:34"><name pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:11">pic</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:17">base</name><index pos:start="173:18" pos:end="173:20">[<expr pos:start="173:19" pos:end="173:19"><name pos:start="173:19" pos:end="173:19">i</name></expr>]</index></name><operator pos:start="173:21" pos:end="173:21">=</operator> <name pos:start="173:23" pos:end="173:34"><name pos:start="173:23" pos:end="173:25">buf</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:31">base</name><index pos:start="173:32" pos:end="173:34">[<expr pos:start="173:33" pos:end="173:33"><name pos:start="173:33" pos:end="173:33">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:35"><expr pos:start="175:9" pos:end="175:34"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:11">pic</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:17">data</name><index pos:start="175:18" pos:end="175:20">[<expr pos:start="175:19" pos:end="175:19"><name pos:start="175:19" pos:end="175:19">i</name></expr>]</index></name><operator pos:start="175:21" pos:end="175:21">=</operator> <name pos:start="175:23" pos:end="175:34"><name pos:start="175:23" pos:end="175:25">buf</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:31">data</name><index pos:start="175:32" pos:end="175:34">[<expr pos:start="175:33" pos:end="175:33"><name pos:start="175:33" pos:end="175:33">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:43"><expr pos:start="177:9" pos:end="177:42"><name pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:11">pic</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:21">linesize</name><index pos:start="177:22" pos:end="177:24">[<expr pos:start="177:23" pos:end="177:23"><name pos:start="177:23" pos:end="177:23">i</name></expr>]</index></name><operator pos:start="177:25" pos:end="177:25">=</operator> <name pos:start="177:27" pos:end="177:42"><name pos:start="177:27" pos:end="177:29">buf</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:39">linesize</name><index pos:start="177:40" pos:end="177:42">[<expr pos:start="177:41" pos:end="177:41"><name pos:start="177:41" pos:end="177:41">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="181:5" pos:end="181:31"><expr pos:start="181:5" pos:end="181:30"><name pos:start="181:5" pos:end="181:28"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:28">internal_buffer_count</name></name><operator pos:start="181:29" pos:end="181:30">++</operator></expr>;</expr_stmt>



    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
