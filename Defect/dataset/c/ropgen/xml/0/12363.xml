<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12363.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ff_dsputil_init_mmx</name><parameter_list pos:start="1:25" pos:end="1:62">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">DSPContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:61"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:41">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">mm_flags</name> <init pos:start="5:18" pos:end="5:37">= <expr pos:start="5:20" pos:end="5:37"><call pos:start="5:20" pos:end="5:37"><name pos:start="5:20" pos:end="5:35">av_get_cpu_flags</name><argument_list pos:start="5:36" pos:end="5:37">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="73:5"><if pos:start="9:5" pos:end="73:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:16">mm_flags</name> <operator pos:start="9:18" pos:end="9:18">&amp;</operator> <name pos:start="9:20" pos:end="9:34">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="9:37" pos:end="73:5">{<block_content pos:start="13:9" pos:end="71:45">

<cpp:if pos:start="11:1" pos:end="11:19">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">HAVE_INLINE_ASM</name></expr></cpp:if>

        <decl_stmt pos:start="13:9" pos:end="13:47"><decl pos:start="13:9" pos:end="13:46"><type pos:start="13:9" pos:end="13:17"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:27">idct_algo</name> <init pos:start="13:29" pos:end="13:46">= <expr pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:35">avctx</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:46">idct_algo</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="68:0"><if pos:start="17:9" pos:end="68:0">if <condition pos:start="17:12" pos:end="17:44">(<expr pos:start="17:13" pos:end="17:43"><name pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:17">avctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:38">bits_per_raw_sample</name></name> <operator pos:start="17:40" pos:end="17:41">&lt;=</operator> <literal type="number" pos:start="17:43" pos:end="17:43">8</literal></expr>)</condition> <block pos:start="17:46" pos:end="68:0">{<block_content pos:start="19:13" pos:end="63:13">

            <if_stmt pos:start="19:13" pos:end="63:13"><if pos:start="19:13" pos:end="29:13">if <condition pos:start="19:16" pos:end="19:76">(<expr pos:start="19:17" pos:end="19:75"><name pos:start="19:17" pos:end="19:25">idct_algo</name> <operator pos:start="19:27" pos:end="19:28">==</operator> <name pos:start="19:30" pos:end="19:41">FF_IDCT_AUTO</name> <operator pos:start="19:43" pos:end="19:44">||</operator> <name pos:start="19:46" pos:end="19:54">idct_algo</name> <operator pos:start="19:56" pos:end="19:57">==</operator> <name pos:start="19:59" pos:end="19:75">FF_IDCT_SIMPLEMMX</name></expr>)</condition> <block pos:start="19:78" pos:end="29:13">{<block_content pos:start="21:17" pos:end="27:63">

                <expr_stmt pos:start="21:17" pos:end="21:66"><expr pos:start="21:17" pos:end="21:65"><name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:17">c</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">idct_put</name></name>              <operator pos:start="21:42" pos:end="21:42">=</operator> <name pos:start="21:44" pos:end="21:65">ff_simple_idct_put_mmx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:66"><expr pos:start="23:17" pos:end="23:65"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:17">c</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">idct_add</name></name>              <operator pos:start="23:42" pos:end="23:42">=</operator> <name pos:start="23:44" pos:end="23:65">ff_simple_idct_add_mmx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:62"><expr pos:start="25:17" pos:end="25:61"><name pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:17">c</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">idct</name></name>                  <operator pos:start="25:42" pos:end="25:42">=</operator> <name pos:start="25:44" pos:end="25:61">ff_simple_idct_mmx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:63"><expr pos:start="27:17" pos:end="27:62"><name pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:17">c</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:40">idct_permutation_type</name></name> <operator pos:start="27:42" pos:end="27:42">=</operator> <name pos:start="27:44" pos:end="27:62">FF_SIMPLE_IDCT_PERM</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="29:15" pos:end="33:13">else if <condition pos:start="29:23" pos:end="29:49">(<expr pos:start="29:24" pos:end="29:48"><name pos:start="29:24" pos:end="29:32">idct_algo</name> <operator pos:start="29:34" pos:end="29:35">==</operator> <name pos:start="29:37" pos:end="29:48">FF_IDCT_CAVS</name></expr>)</condition> <block pos:start="29:51" pos:end="33:13">{<block_content pos:start="31:21" pos:end="31:70">

                    <expr_stmt pos:start="31:21" pos:end="31:70"><expr pos:start="31:21" pos:end="31:69"><name pos:start="31:21" pos:end="31:44"><name pos:start="31:21" pos:end="31:21">c</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:44">idct_permutation_type</name></name> <operator pos:start="31:46" pos:end="31:46">=</operator> <name pos:start="31:48" pos:end="31:69">FF_TRANSPOSE_IDCT_PERM</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="33:15" pos:end="63:13">else if <condition pos:start="33:23" pos:end="33:52">(<expr pos:start="33:24" pos:end="33:51"><name pos:start="33:24" pos:end="33:32">idct_algo</name> <operator pos:start="33:34" pos:end="33:35">==</operator> <name pos:start="33:37" pos:end="33:51">FF_IDCT_XVIDMMX</name></expr>)</condition> <block pos:start="33:54" pos:end="63:13">{<block_content pos:start="35:17" pos:end="61:17">

                <if_stmt pos:start="35:17" pos:end="61:17"><if pos:start="35:17" pos:end="45:17">if <condition pos:start="35:20" pos:end="35:48">(<expr pos:start="35:21" pos:end="35:47"><name pos:start="35:21" pos:end="35:28">mm_flags</name> <operator pos:start="35:30" pos:end="35:30">&amp;</operator> <name pos:start="35:32" pos:end="35:47">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="35:50" pos:end="45:17">{<block_content pos:start="37:21" pos:end="43:65">

                    <expr_stmt pos:start="37:21" pos:end="37:69"><expr pos:start="37:21" pos:end="37:68"><name pos:start="37:21" pos:end="37:31"><name pos:start="37:21" pos:end="37:21">c</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:31">idct_put</name></name>              <operator pos:start="37:46" pos:end="37:46">=</operator> <name pos:start="37:48" pos:end="37:68">ff_idct_xvid_sse2_put</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:69"><expr pos:start="39:21" pos:end="39:68"><name pos:start="39:21" pos:end="39:31"><name pos:start="39:21" pos:end="39:21">c</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:31">idct_add</name></name>              <operator pos:start="39:46" pos:end="39:46">=</operator> <name pos:start="39:48" pos:end="39:68">ff_idct_xvid_sse2_add</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:65"><expr pos:start="41:21" pos:end="41:64"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:21">c</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">idct</name></name>                  <operator pos:start="41:46" pos:end="41:46">=</operator> <name pos:start="41:48" pos:end="41:64">ff_idct_xvid_sse2</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:65"><expr pos:start="43:21" pos:end="43:64"><name pos:start="43:21" pos:end="43:44"><name pos:start="43:21" pos:end="43:21">c</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:44">idct_permutation_type</name></name> <operator pos:start="43:46" pos:end="43:46">=</operator> <name pos:start="43:48" pos:end="43:64">FF_SSE2_IDCT_PERM</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="45:19" pos:end="53:17">else if <condition pos:start="45:27" pos:end="45:57">(<expr pos:start="45:28" pos:end="45:56"><name pos:start="45:28" pos:end="45:35">mm_flags</name> <operator pos:start="45:37" pos:end="45:37">&amp;</operator> <name pos:start="45:39" pos:end="45:56">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="45:59" pos:end="53:17">{<block_content pos:start="47:21" pos:end="51:65">

                    <expr_stmt pos:start="47:21" pos:end="47:69"><expr pos:start="47:21" pos:end="47:68"><name pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:21">c</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:31">idct_put</name></name>              <operator pos:start="47:46" pos:end="47:46">=</operator> <name pos:start="47:48" pos:end="47:68">ff_idct_xvid_mmx2_put</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:69"><expr pos:start="49:21" pos:end="49:68"><name pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:21">c</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:31">idct_add</name></name>              <operator pos:start="49:46" pos:end="49:46">=</operator> <name pos:start="49:48" pos:end="49:68">ff_idct_xvid_mmx2_add</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:65"><expr pos:start="51:21" pos:end="51:64"><name pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:21">c</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:27">idct</name></name>                  <operator pos:start="51:46" pos:end="51:46">=</operator> <name pos:start="51:48" pos:end="51:64">ff_idct_xvid_mmx2</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="53:19" pos:end="61:17">else <block pos:start="53:24" pos:end="61:17">{<block_content pos:start="55:21" pos:end="59:64">

                    <expr_stmt pos:start="55:21" pos:end="55:68"><expr pos:start="55:21" pos:end="55:67"><name pos:start="55:21" pos:end="55:31"><name pos:start="55:21" pos:end="55:21">c</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:31">idct_put</name></name>              <operator pos:start="55:46" pos:end="55:46">=</operator> <name pos:start="55:48" pos:end="55:67">ff_idct_xvid_mmx_put</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:68"><expr pos:start="57:21" pos:end="57:67"><name pos:start="57:21" pos:end="57:31"><name pos:start="57:21" pos:end="57:21">c</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:31">idct_add</name></name>              <operator pos:start="57:46" pos:end="57:46">=</operator> <name pos:start="57:48" pos:end="57:67">ff_idct_xvid_mmx_add</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:64"><expr pos:start="59:21" pos:end="59:63"><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:21">c</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">idct</name></name>                  <operator pos:start="59:46" pos:end="59:46">=</operator> <name pos:start="59:48" pos:end="59:63">ff_idct_xvid_mmx</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="67:8" pos:end="67:28">/* HAVE_INLINE_ASM */</comment>



        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:24">dsputil_init_mmx</name><argument_list pos:start="71:25" pos:end="71:44">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">c</name></expr></argument>, <argument pos:start="71:29" pos:end="71:33"><expr pos:start="71:29" pos:end="71:33"><name pos:start="71:29" pos:end="71:33">avctx</name></expr></argument>, <argument pos:start="71:36" pos:end="71:43"><expr pos:start="71:36" pos:end="71:43"><name pos:start="71:36" pos:end="71:43">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:46"><if pos:start="77:5" pos:end="79:46">if <condition pos:start="77:8" pos:end="77:38">(<expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:16">mm_flags</name> <operator pos:start="77:18" pos:end="77:18">&amp;</operator> <name pos:start="77:20" pos:end="77:37">AV_CPU_FLAG_MMXEXT</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:46"><block_content pos:start="79:9" pos:end="79:46">

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><call pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:25">dsputil_init_mmx2</name><argument_list pos:start="79:26" pos:end="79:45">(<argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><name pos:start="79:27" pos:end="79:27">c</name></expr></argument>, <argument pos:start="79:30" pos:end="79:34"><expr pos:start="79:30" pos:end="79:34"><name pos:start="79:30" pos:end="79:34">avctx</name></expr></argument>, <argument pos:start="79:37" pos:end="79:44"><expr pos:start="79:37" pos:end="79:44"><name pos:start="79:37" pos:end="79:44">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="85:47"><if pos:start="83:5" pos:end="85:47">if <condition pos:start="83:8" pos:end="83:54">(<expr pos:start="83:9" pos:end="83:53"><name pos:start="83:9" pos:end="83:16">mm_flags</name> <operator pos:start="83:18" pos:end="83:18">&amp;</operator> <name pos:start="83:20" pos:end="83:36">AV_CPU_FLAG_3DNOW</name> <operator pos:start="83:38" pos:end="83:39">&amp;&amp;</operator> <name pos:start="83:41" pos:end="83:53">HAVE_AMD3DNOW</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:47"><block_content pos:start="85:9" pos:end="85:47">

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><call pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:26">dsputil_init_3dnow</name><argument_list pos:start="85:27" pos:end="85:46">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">c</name></expr></argument>, <argument pos:start="85:31" pos:end="85:35"><expr pos:start="85:31" pos:end="85:35"><name pos:start="85:31" pos:end="85:35">avctx</name></expr></argument>, <argument pos:start="85:38" pos:end="85:45"><expr pos:start="85:38" pos:end="85:45"><name pos:start="85:38" pos:end="85:45">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:50"><if pos:start="89:5" pos:end="91:50">if <condition pos:start="89:8" pos:end="89:60">(<expr pos:start="89:9" pos:end="89:59"><name pos:start="89:9" pos:end="89:16">mm_flags</name> <operator pos:start="89:18" pos:end="89:18">&amp;</operator> <name pos:start="89:20" pos:end="89:39">AV_CPU_FLAG_3DNOWEXT</name> <operator pos:start="89:41" pos:end="89:42">&amp;&amp;</operator> <name pos:start="89:44" pos:end="89:59">HAVE_AMD3DNOWEXT</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:50"><block_content pos:start="91:9" pos:end="91:50">

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><call pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:29">dsputil_init_3dnowext</name><argument_list pos:start="91:30" pos:end="91:49">(<argument pos:start="91:31" pos:end="91:31"><expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">c</name></expr></argument>, <argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38">avctx</name></expr></argument>, <argument pos:start="91:41" pos:end="91:48"><expr pos:start="91:41" pos:end="91:48"><name pos:start="91:41" pos:end="91:48">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="97:45"><if pos:start="95:5" pos:end="97:45">if <condition pos:start="95:8" pos:end="95:47">(<expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:16">mm_flags</name> <operator pos:start="95:18" pos:end="95:18">&amp;</operator> <name pos:start="95:20" pos:end="95:34">AV_CPU_FLAG_SSE</name> <operator pos:start="95:36" pos:end="95:37">&amp;&amp;</operator> <name pos:start="95:39" pos:end="95:46">HAVE_SSE</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:45"><block_content pos:start="97:9" pos:end="97:45">

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><call pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:24">dsputil_init_sse</name><argument_list pos:start="97:25" pos:end="97:44">(<argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><name pos:start="97:26" pos:end="97:26">c</name></expr></argument>, <argument pos:start="97:29" pos:end="97:33"><expr pos:start="97:29" pos:end="97:33"><name pos:start="97:29" pos:end="97:33">avctx</name></expr></argument>, <argument pos:start="97:36" pos:end="97:43"><expr pos:start="97:36" pos:end="97:43"><name pos:start="97:36" pos:end="97:43">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="103:46"><if pos:start="101:5" pos:end="103:46">if <condition pos:start="101:8" pos:end="101:36">(<expr pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:16">mm_flags</name> <operator pos:start="101:18" pos:end="101:18">&amp;</operator> <name pos:start="101:20" pos:end="101:35">AV_CPU_FLAG_SSE2</name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:46"><block_content pos:start="103:9" pos:end="103:46">

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><call pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:25">dsputil_init_sse2</name><argument_list pos:start="103:26" pos:end="103:45">(<argument pos:start="103:27" pos:end="103:27"><expr pos:start="103:27" pos:end="103:27"><name pos:start="103:27" pos:end="103:27">c</name></expr></argument>, <argument pos:start="103:30" pos:end="103:34"><expr pos:start="103:30" pos:end="103:34"><name pos:start="103:30" pos:end="103:34">avctx</name></expr></argument>, <argument pos:start="103:37" pos:end="103:44"><expr pos:start="103:37" pos:end="103:44"><name pos:start="103:37" pos:end="103:44">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="109:47"><if pos:start="107:5" pos:end="109:47">if <condition pos:start="107:8" pos:end="107:37">(<expr pos:start="107:9" pos:end="107:36"><name pos:start="107:9" pos:end="107:16">mm_flags</name> <operator pos:start="107:18" pos:end="107:18">&amp;</operator> <name pos:start="107:20" pos:end="107:36">AV_CPU_FLAG_SSSE3</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:47"><block_content pos:start="109:9" pos:end="109:47">

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><call pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:26">dsputil_init_ssse3</name><argument_list pos:start="109:27" pos:end="109:46">(<argument pos:start="109:28" pos:end="109:28"><expr pos:start="109:28" pos:end="109:28"><name pos:start="109:28" pos:end="109:28">c</name></expr></argument>, <argument pos:start="109:31" pos:end="109:35"><expr pos:start="109:31" pos:end="109:35"><name pos:start="109:31" pos:end="109:35">avctx</name></expr></argument>, <argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><name pos:start="109:38" pos:end="109:45">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="115:46"><if pos:start="113:5" pos:end="115:46">if <condition pos:start="113:8" pos:end="113:48">(<expr pos:start="113:9" pos:end="113:47"><name pos:start="113:9" pos:end="113:16">mm_flags</name> <operator pos:start="113:18" pos:end="113:18">&amp;</operator> <name pos:start="113:20" pos:end="113:35">AV_CPU_FLAG_SSE4</name> <operator pos:start="113:37" pos:end="113:38">&amp;&amp;</operator> <name pos:start="113:40" pos:end="113:47">HAVE_SSE</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:46"><block_content pos:start="115:9" pos:end="115:46">

        <expr_stmt pos:start="115:9" pos:end="115:46"><expr pos:start="115:9" pos:end="115:45"><call pos:start="115:9" pos:end="115:45"><name pos:start="115:9" pos:end="115:25">dsputil_init_sse4</name><argument_list pos:start="115:26" pos:end="115:45">(<argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><name pos:start="115:27" pos:end="115:27">c</name></expr></argument>, <argument pos:start="115:30" pos:end="115:34"><expr pos:start="115:30" pos:end="115:34"><name pos:start="115:30" pos:end="115:34">avctx</name></expr></argument>, <argument pos:start="115:37" pos:end="115:44"><expr pos:start="115:37" pos:end="115:44"><name pos:start="115:37" pos:end="115:44">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="121:45"><if pos:start="119:5" pos:end="121:45">if <condition pos:start="119:8" pos:end="119:35">(<expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:16">mm_flags</name> <operator pos:start="119:18" pos:end="119:18">&amp;</operator> <name pos:start="119:20" pos:end="119:34">AV_CPU_FLAG_AVX</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:45"><block_content pos:start="121:9" pos:end="121:45">

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><call pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:24">dsputil_init_avx</name><argument_list pos:start="121:25" pos:end="121:44">(<argument pos:start="121:26" pos:end="121:26"><expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">c</name></expr></argument>, <argument pos:start="121:29" pos:end="121:33"><expr pos:start="121:29" pos:end="121:33"><name pos:start="121:29" pos:end="121:33">avctx</name></expr></argument>, <argument pos:start="121:36" pos:end="121:43"><expr pos:start="121:36" pos:end="121:43"><name pos:start="121:36" pos:end="121:43">mm_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="127:41"><if pos:start="125:5" pos:end="127:41">if <condition pos:start="125:8" pos:end="125:24">(<expr pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:23">CONFIG_ENCODERS</name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:41"><block_content pos:start="127:9" pos:end="127:41">

        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><call pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:30">ff_dsputilenc_init_mmx</name><argument_list pos:start="127:31" pos:end="127:40">(<argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><name pos:start="127:32" pos:end="127:32">c</name></expr></argument>, <argument pos:start="127:35" pos:end="127:39"><expr pos:start="127:35" pos:end="127:39"><name pos:start="127:35" pos:end="127:39">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
