<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10016.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">amr_wb_decode_frame</name><parameter_list pos:start="1:31" pos:end="3:63">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:34">int</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:45">data_size</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><name pos:start="3:48" pos:end="3:55">AVPacket</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:23">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">AMRWBContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:19">s</name>    <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:100"><decl pos:start="17:5" pos:end="17:99"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <specifier pos:start="17:12" pos:end="17:16">const</specifier> <name pos:start="17:18" pos:end="17:24">uint8_t</name></type> <name pos:start="17:26" pos:end="17:39"><name pos:start="17:26" pos:end="17:35">block_size</name><index pos:start="17:36" pos:end="17:39">[<expr pos:start="17:37" pos:end="17:38"><literal type="number" pos:start="17:37" pos:end="17:38">16</literal></expr>]</index></name> <init pos:start="17:41" pos:end="17:99">= <expr pos:start="17:43" pos:end="17:99"><block pos:start="17:43" pos:end="17:99">{<expr pos:start="17:44" pos:end="17:45"><literal type="number" pos:start="17:44" pos:end="17:45">18</literal></expr>, <expr pos:start="17:48" pos:end="17:49"><literal type="number" pos:start="17:48" pos:end="17:49">24</literal></expr>, <expr pos:start="17:52" pos:end="17:53"><literal type="number" pos:start="17:52" pos:end="17:53">33</literal></expr>, <expr pos:start="17:56" pos:end="17:57"><literal type="number" pos:start="17:56" pos:end="17:57">37</literal></expr>, <expr pos:start="17:60" pos:end="17:61"><literal type="number" pos:start="17:60" pos:end="17:61">41</literal></expr>, <expr pos:start="17:64" pos:end="17:65"><literal type="number" pos:start="17:64" pos:end="17:65">47</literal></expr>, <expr pos:start="17:68" pos:end="17:69"><literal type="number" pos:start="17:68" pos:end="17:69">51</literal></expr>, <expr pos:start="17:72" pos:end="17:73"><literal type="number" pos:start="17:72" pos:end="17:73">59</literal></expr>, <expr pos:start="17:76" pos:end="17:77"><literal type="number" pos:start="17:76" pos:end="17:77">61</literal></expr>, <expr pos:start="17:80" pos:end="17:80"><literal type="number" pos:start="17:80" pos:end="17:80">6</literal></expr>, <expr pos:start="17:83" pos:end="17:83"><literal type="number" pos:start="17:83" pos:end="17:83">6</literal></expr>, <expr pos:start="17:86" pos:end="17:86"><literal type="number" pos:start="17:86" pos:end="17:86">0</literal></expr>, <expr pos:start="17:89" pos:end="17:89"><literal type="number" pos:start="17:89" pos:end="17:89">0</literal></expr>, <expr pos:start="17:92" pos:end="17:92"><literal type="number" pos:start="17:92" pos:end="17:92">0</literal></expr>, <expr pos:start="17:95" pos:end="17:95"><literal type="number" pos:start="17:95" pos:end="17:95">1</literal></expr>, <expr pos:start="17:98" pos:end="17:98"><literal type="number" pos:start="17:98" pos:end="17:98">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:8">mode</name>        <operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">(</operator><name pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:22">buf</name><index pos:start="21:23" pos:end="21:25">[<expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>]</index></name> <operator pos:start="21:27" pos:end="21:28">&gt;&gt;</operator> <literal type="number" pos:start="21:30" pos:end="21:30">3</literal><operator pos:start="21:31" pos:end="21:31">)</operator> <operator pos:start="21:33" pos:end="21:33">&amp;</operator> <literal type="number" pos:start="21:35" pos:end="21:40">0x000F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:15">packet_size</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:34"><name pos:start="23:19" pos:end="23:28">block_size</name><index pos:start="23:29" pos:end="23:34">[<expr pos:start="23:30" pos:end="23:33"><name pos:start="23:30" pos:end="23:33">mode</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:19">packet_size</name> <operator pos:start="27:21" pos:end="27:21">&gt;</operator> <name pos:start="27:23" pos:end="27:30">buf_size</name></expr>)</condition> <block pos:start="27:33" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:35">

        <expr_stmt pos:start="29:9" pos:end="31:42"><expr pos:start="29:9" pos:end="31:41"><call pos:start="29:9" pos:end="31:41"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="31:41">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:78"><expr pos:start="29:37" pos:end="29:78"><literal type="string" pos:start="29:37" pos:end="29:78">"amr frame too short (%u, should be %u)\n"</literal></expr></argument>,

               <argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23">buf_size</name></expr></argument>, <argument pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:36">packet_size</name> <operator pos:start="31:38" pos:end="31:38">+</operator> <literal type="number" pos:start="31:40" pos:end="31:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><call pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:15">D_IF_decode</name><argument_list pos:start="39:16" pos:end="39:49">(<argument pos:start="39:17" pos:end="39:24"><expr pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:24">state</name></name></expr></argument>, <argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">buf</name></expr></argument>, <argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">data</name></expr></argument>, <argument pos:start="39:38" pos:end="39:48"><expr pos:start="39:38" pos:end="39:48"><name pos:start="39:38" pos:end="39:48">_good_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:14">data_size</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:20">320</literal> <operator pos:start="41:22" pos:end="41:22">*</operator> <literal type="number" pos:start="41:24" pos:end="41:24">2</literal></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:23">return <expr pos:start="43:12" pos:end="43:22"><name pos:start="43:12" pos:end="43:22">packet_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
