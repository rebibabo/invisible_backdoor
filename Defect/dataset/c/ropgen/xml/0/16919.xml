<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16919.c" pos:tabs="8"><function pos:start="1:1" pos:end="383:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">g2m_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:66">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:48">got_picture_ptr</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:58">AVPacket</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="383:1">{<block_content pos:start="7:5" pos:end="381:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">G2MContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">c</name> <init pos:start="11:19" pos:end="11:36">= <expr pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:25">avctx</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pic</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18">GetByteContext</name></type> <name pos:start="15:20" pos:end="15:21">bc</name></decl>, <decl pos:start="15:24" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:18"/><name pos:start="15:24" pos:end="15:26">tbc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">magic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">got_header</name> <init pos:start="19:20" pos:end="19:22">= <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:23">chunk_size</name></decl>, <decl pos:start="21:26" pos:end="21:33"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:26" pos:end="21:33">cur_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">chunk_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:16">buf_size</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:21">12</literal></expr>)</condition> <block pos:start="31:24" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:35">

        <expr_stmt pos:start="33:9" pos:end="37:25"><expr pos:start="33:9" pos:end="37:24"><call pos:start="33:9" pos:end="37:24"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="37:24">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:70"><expr pos:start="35:16" pos:end="35:70"><literal type="string" pos:start="35:16" pos:end="35:70">"Frame should have at least 12 bytes, got %d instead\n"</literal></expr></argument>,

               <argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:20">bytestream2_init</name><argument_list pos:start="45:21" pos:end="45:40">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:24">bc</name></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">buf</name></expr></argument>, <argument pos:start="45:32" pos:end="45:39"><expr pos:start="45:32" pos:end="45:39"><name pos:start="45:32" pos:end="45:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:9">magic</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:32">bytestream2_get_be32</name><argument_list pos:start="49:33" pos:end="49:37">(<argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="53:47">(<expr pos:start="51:9" pos:end="53:46"><operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:14">magic</name> <operator pos:start="51:16" pos:end="51:16">&amp;</operator> <operator pos:start="51:18" pos:end="51:18">~</operator><literal type="number" pos:start="51:19" pos:end="51:21">0xF</literal><operator pos:start="51:22" pos:end="51:22">)</operator> <operator pos:start="51:24" pos:end="51:25">!=</operator> <call pos:start="51:27" pos:end="51:53"><name pos:start="51:27" pos:end="51:33">MKBETAG</name><argument_list pos:start="51:34" pos:end="51:53">(<argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><literal type="char" pos:start="51:35" pos:end="51:37">'G'</literal></expr></argument>, <argument pos:start="51:40" pos:end="51:42"><expr pos:start="51:40" pos:end="51:42"><literal type="char" pos:start="51:40" pos:end="51:42">'2'</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><literal type="char" pos:start="51:45" pos:end="51:47">'M'</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:52"><expr pos:start="51:50" pos:end="51:52"><literal type="char" pos:start="51:50" pos:end="51:52">'0'</literal></expr></argument>)</argument_list></call> <operator pos:start="51:55" pos:end="51:56">||</operator>

        <operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:14">magic</name> <operator pos:start="53:16" pos:end="53:16">&amp;</operator> <literal type="number" pos:start="53:18" pos:end="53:20">0xF</literal><operator pos:start="53:21" pos:end="53:21">)</operator> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">2</literal> <operator pos:start="53:27" pos:end="53:28">||</operator> <operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:35">magic</name> <operator pos:start="53:37" pos:end="53:37">&amp;</operator> <literal type="number" pos:start="53:39" pos:end="53:41">0xF</literal><operator pos:start="53:42" pos:end="53:42">)</operator> <operator pos:start="53:44" pos:end="53:44">&gt;</operator> <literal type="number" pos:start="53:46" pos:end="53:46">4</literal></expr>)</condition> <block pos:start="53:49" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:35">

        <expr_stmt pos:start="55:9" pos:end="55:65"><expr pos:start="55:9" pos:end="55:64"><call pos:start="55:9" pos:end="55:64"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:64">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:56"><expr pos:start="55:37" pos:end="55:56"><literal type="string" pos:start="55:37" pos:end="55:56">"Wrong magic %08X\n"</literal></expr></argument>, <argument pos:start="55:59" pos:end="55:63"><expr pos:start="55:59" pos:end="55:63"><name pos:start="55:59" pos:end="55:63">magic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:27">(<expr pos:start="63:9" pos:end="63:26"><operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:14">magic</name> <operator pos:start="63:16" pos:end="63:16">&amp;</operator> <literal type="number" pos:start="63:18" pos:end="63:20">0xF</literal><operator pos:start="63:21" pos:end="63:21">)</operator> <operator pos:start="63:23" pos:end="63:24">!=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">4</literal></expr>)</condition> <block pos:start="63:29" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:31">

        <expr_stmt pos:start="65:9" pos:end="65:77"><expr pos:start="65:9" pos:end="65:76"><call pos:start="65:9" pos:end="65:76"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:76">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:37" pos:end="65:75"><expr pos:start="65:37" pos:end="65:75"><literal type="string" pos:start="65:37" pos:end="65:75">"G2M2 and G2M3 are not yet supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:31">return <expr pos:start="67:16" pos:end="67:30"><call pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:22">AVERROR</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="73:5" pos:end="337:5">while <condition pos:start="73:11" pos:end="73:47">(<expr pos:start="73:12" pos:end="73:46"><call pos:start="73:12" pos:end="73:42"><name pos:start="73:12" pos:end="73:37">bytestream2_get_bytes_left</name><argument_list pos:start="73:38" pos:end="73:42">(<argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><operator pos:start="73:39" pos:end="73:39">&amp;</operator><name pos:start="73:40" pos:end="73:41">bc</name></expr></argument>)</argument_list></call> <operator pos:start="73:44" pos:end="73:44">&gt;</operator> <literal type="number" pos:start="73:46" pos:end="73:46">5</literal></expr>)</condition> <block pos:start="73:49" pos:end="337:5">{<block_content pos:start="75:9" pos:end="335:9">

        <expr_stmt pos:start="75:9" pos:end="75:51"><expr pos:start="75:9" pos:end="75:50"><name pos:start="75:9" pos:end="75:18">chunk_size</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:46"><name pos:start="75:22" pos:end="75:41">bytestream2_get_le32</name><argument_list pos:start="75:42" pos:end="75:46">(<argument pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><operator pos:start="75:43" pos:end="75:43">&amp;</operator><name pos:start="75:44" pos:end="75:45">bc</name></expr></argument>)</argument_list></call> <operator pos:start="75:48" pos:end="75:48">-</operator> <literal type="number" pos:start="75:50" pos:end="75:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:18">chunk_type</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:46"><name pos:start="77:22" pos:end="77:41">bytestream2_get_byte</name><argument_list pos:start="77:42" pos:end="77:46">(<argument pos:start="77:43" pos:end="77:45"><expr pos:start="77:43" pos:end="77:45"><operator pos:start="77:43" pos:end="77:43">&amp;</operator><name pos:start="77:44" pos:end="77:45">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="87:9"><if pos:start="79:9" pos:end="87:9">if <condition pos:start="79:12" pos:end="79:57">(<expr pos:start="79:13" pos:end="79:56"><name pos:start="79:13" pos:end="79:22">chunk_size</name> <operator pos:start="79:24" pos:end="79:24">&gt;</operator> <call pos:start="79:26" pos:end="79:56"><name pos:start="79:26" pos:end="79:51">bytestream2_get_bytes_left</name><argument_list pos:start="79:52" pos:end="79:56">(<argument pos:start="79:53" pos:end="79:55"><expr pos:start="79:53" pos:end="79:55"><operator pos:start="79:53" pos:end="79:53">&amp;</operator><name pos:start="79:54" pos:end="79:55">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:59" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:18">

            <expr_stmt pos:start="81:13" pos:end="83:43"><expr pos:start="81:13" pos:end="83:42"><call pos:start="81:13" pos:end="83:42"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="83:42">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24">avctx</name></expr></argument>, <argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:41" pos:end="81:75"><expr pos:start="81:41" pos:end="81:75"><literal type="string" pos:start="81:41" pos:end="81:75">"Invalid chunk size %d type %02X\n"</literal></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:29"><expr pos:start="83:20" pos:end="83:29"><name pos:start="83:20" pos:end="83:29">chunk_size</name></expr></argument>, <argument pos:start="83:32" pos:end="83:41"><expr pos:start="83:32" pos:end="83:41"><name pos:start="83:32" pos:end="83:41">chunk_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="89:9" pos:end="335:9">switch <condition pos:start="89:16" pos:end="89:27">(<expr pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:26">chunk_type</name></expr>)</condition> <block pos:start="89:29" pos:end="335:9">{<block_content pos:start="91:9" pos:end="333:46">

        <case pos:start="91:9" pos:end="91:24">case <expr pos:start="91:14" pos:end="91:23"><name pos:start="91:14" pos:end="91:23">FRAME_INFO</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:13">c</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:25">got_header</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <literal type="number" pos:start="93:29" pos:end="93:29">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="103:13"><if pos:start="95:13" pos:end="103:13">if <condition pos:start="95:16" pos:end="95:32">(<expr pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:26">chunk_size</name> <operator pos:start="95:28" pos:end="95:28">&lt;</operator> <literal type="number" pos:start="95:30" pos:end="95:31">21</literal></expr>)</condition> <block pos:start="95:34" pos:end="103:13">{<block_content pos:start="97:17" pos:end="101:22">

                <expr_stmt pos:start="97:17" pos:end="99:35"><expr pos:start="97:17" pos:end="99:34"><call pos:start="97:17" pos:end="99:34"><name pos:start="97:17" pos:end="97:22">av_log</name><argument_list pos:start="97:23" pos:end="99:34">(<argument pos:start="97:24" pos:end="97:28"><expr pos:start="97:24" pos:end="97:28"><name pos:start="97:24" pos:end="97:28">avctx</name></expr></argument>, <argument pos:start="97:31" pos:end="97:42"><expr pos:start="97:31" pos:end="97:42"><name pos:start="97:31" pos:end="97:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:45" pos:end="97:74"><expr pos:start="97:45" pos:end="97:74"><literal type="string" pos:start="97:45" pos:end="97:74">"Invalid frame info size %d\n"</literal></expr></argument>,

                       <argument pos:start="99:24" pos:end="99:33"><expr pos:start="99:24" pos:end="99:33"><name pos:start="99:24" pos:end="99:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="101:17" pos:end="101:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:50"><expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:20">width</name></name>  <operator pos:start="105:23" pos:end="105:23">=</operator> <call pos:start="105:25" pos:end="105:49"><name pos:start="105:25" pos:end="105:44">bytestream2_get_be32</name><argument_list pos:start="105:45" pos:end="105:49">(<argument pos:start="105:46" pos:end="105:48"><expr pos:start="105:46" pos:end="105:48"><operator pos:start="105:46" pos:end="105:46">&amp;</operator><name pos:start="105:47" pos:end="105:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:50"><expr pos:start="107:13" pos:end="107:49"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:13">c</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">height</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <call pos:start="107:25" pos:end="107:49"><name pos:start="107:25" pos:end="107:44">bytestream2_get_be32</name><argument_list pos:start="107:45" pos:end="107:49">(<argument pos:start="107:46" pos:end="107:48"><expr pos:start="107:46" pos:end="107:48"><operator pos:start="107:46" pos:end="107:46">&amp;</operator><name pos:start="107:47" pos:end="107:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="123:13"><if pos:start="109:13" pos:end="123:13">if <condition pos:start="109:16" pos:end="111:60">(<expr pos:start="109:17" pos:end="111:59"><name pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:17">c</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:24">width</name></name>  <operator pos:start="109:27" pos:end="109:27">&lt;</operator> <literal type="number" pos:start="109:29" pos:end="109:30">16</literal> <operator pos:start="109:32" pos:end="109:33">||</operator> <name pos:start="109:35" pos:end="109:42"><name pos:start="109:35" pos:end="109:35">c</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:42">width</name></name>  <operator pos:start="109:45" pos:end="109:45">&gt;</operator> <name pos:start="109:47" pos:end="109:58"><name pos:start="109:47" pos:end="109:51">avctx</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:58">width</name></name> <operator pos:start="109:60" pos:end="109:61">||</operator>

                <name pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:17">c</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:25">height</name></name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <literal type="number" pos:start="111:29" pos:end="111:30">16</literal> <operator pos:start="111:32" pos:end="111:33">||</operator> <name pos:start="111:35" pos:end="111:43"><name pos:start="111:35" pos:end="111:35">c</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:43">height</name></name> <operator pos:start="111:45" pos:end="111:45">&gt;</operator> <name pos:start="111:47" pos:end="111:59"><name pos:start="111:47" pos:end="111:51">avctx</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:59">height</name></name></expr>)</condition> <block pos:start="111:62" pos:end="123:13">{<block_content pos:start="113:17" pos:end="121:71">

                <expr_stmt pos:start="113:17" pos:end="117:44"><expr pos:start="113:17" pos:end="117:43"><call pos:start="113:17" pos:end="117:43"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="117:43">(<argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">avctx</name></expr></argument>, <argument pos:start="113:31" pos:end="113:42"><expr pos:start="113:31" pos:end="113:42"><name pos:start="113:31" pos:end="113:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="115:24" pos:end="115:57"><expr pos:start="115:24" pos:end="115:57"><literal type="string" pos:start="115:24" pos:end="115:57">"Invalid frame dimensions %dx%d\n"</literal></expr></argument>,

                       <argument pos:start="117:24" pos:end="117:31"><expr pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:24">c</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:31">width</name></name></expr></argument>, <argument pos:start="117:34" pos:end="117:42"><expr pos:start="117:34" pos:end="117:42"><name pos:start="117:34" pos:end="117:42"><name pos:start="117:34" pos:end="117:34">c</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:42">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:41"><expr pos:start="119:17" pos:end="119:40"><name pos:start="119:17" pos:end="119:24"><name pos:start="119:17" pos:end="119:17">c</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:24">width</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:36"><name pos:start="119:28" pos:end="119:28">c</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:36">height</name></name> <operator pos:start="119:38" pos:end="119:38">=</operator> <literal type="number" pos:start="119:40" pos:end="119:40">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:71"><expr pos:start="121:17" pos:end="121:70"><call pos:start="121:17" pos:end="121:70"><name pos:start="121:17" pos:end="121:32">bytestream2_skip</name><argument_list pos:start="121:33" pos:end="121:70">(<argument pos:start="121:34" pos:end="121:36"><expr pos:start="121:34" pos:end="121:36"><operator pos:start="121:34" pos:end="121:34">&amp;</operator><name pos:start="121:35" pos:end="121:36">bc</name></expr></argument>, <argument pos:start="121:39" pos:end="121:69"><expr pos:start="121:39" pos:end="121:69"><call pos:start="121:39" pos:end="121:69"><name pos:start="121:39" pos:end="121:64">bytestream2_get_bytes_left</name><argument_list pos:start="121:65" pos:end="121:69">(<argument pos:start="121:66" pos:end="121:68"><expr pos:start="121:66" pos:end="121:68"><operator pos:start="121:66" pos:end="121:66">&amp;</operator><name pos:start="121:67" pos:end="121:68">bc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="125:13" pos:end="127:67"><if pos:start="125:13" pos:end="127:67">if <condition pos:start="125:16" pos:end="125:71">(<expr pos:start="125:17" pos:end="125:70"><name pos:start="125:17" pos:end="125:24"><name pos:start="125:17" pos:end="125:17">c</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:24">width</name></name> <operator pos:start="125:26" pos:end="125:27">!=</operator> <name pos:start="125:29" pos:end="125:40"><name pos:start="125:29" pos:end="125:33">avctx</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:40">width</name></name> <operator pos:start="125:42" pos:end="125:43">||</operator> <name pos:start="125:45" pos:end="125:53"><name pos:start="125:45" pos:end="125:45">c</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:53">height</name></name> <operator pos:start="125:55" pos:end="125:56">!=</operator> <name pos:start="125:58" pos:end="125:70"><name pos:start="125:58" pos:end="125:62">avctx</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:70">height</name></name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:67"><block_content pos:start="127:17" pos:end="127:67">

                <expr_stmt pos:start="127:17" pos:end="127:67"><expr pos:start="127:17" pos:end="127:66"><call pos:start="127:17" pos:end="127:66"><name pos:start="127:17" pos:end="127:38">avcodec_set_dimensions</name><argument_list pos:start="127:39" pos:end="127:66">(<argument pos:start="127:40" pos:end="127:44"><expr pos:start="127:40" pos:end="127:44"><name pos:start="127:40" pos:end="127:44">avctx</name></expr></argument>, <argument pos:start="127:47" pos:end="127:54"><expr pos:start="127:47" pos:end="127:54"><name pos:start="127:47" pos:end="127:54"><name pos:start="127:47" pos:end="127:47">c</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:54">width</name></name></expr></argument>, <argument pos:start="127:57" pos:end="127:65"><expr pos:start="127:57" pos:end="127:65"><name pos:start="127:57" pos:end="127:65"><name pos:start="127:57" pos:end="127:57">c</name><operator pos:start="127:58" pos:end="127:59">-&gt;</operator><name pos:start="127:60" pos:end="127:65">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:55"><expr pos:start="129:13" pos:end="129:54"><name pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:13">c</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:26">compression</name></name> <operator pos:start="129:28" pos:end="129:28">=</operator> <call pos:start="129:30" pos:end="129:54"><name pos:start="129:30" pos:end="129:49">bytestream2_get_be32</name><argument_list pos:start="129:50" pos:end="129:54">(<argument pos:start="129:51" pos:end="129:53"><expr pos:start="129:51" pos:end="129:53"><operator pos:start="129:51" pos:end="129:51">&amp;</operator><name pos:start="129:52" pos:end="129:53">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="141:13"><if pos:start="131:13" pos:end="141:13">if <condition pos:start="131:16" pos:end="131:59">(<expr pos:start="131:17" pos:end="131:58"><name pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:17">c</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:30">compression</name></name> <operator pos:start="131:32" pos:end="131:33">!=</operator> <literal type="number" pos:start="131:35" pos:end="131:35">2</literal> <operator pos:start="131:37" pos:end="131:38">&amp;&amp;</operator> <name pos:start="131:40" pos:end="131:53"><name pos:start="131:40" pos:end="131:40">c</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:53">compression</name></name> <operator pos:start="131:55" pos:end="131:56">!=</operator> <literal type="number" pos:start="131:58" pos:end="131:58">3</literal></expr>)</condition> <block pos:start="131:61" pos:end="141:13">{<block_content pos:start="133:17" pos:end="139:44">

                <expr_stmt pos:start="133:17" pos:end="137:39"><expr pos:start="133:17" pos:end="137:38"><call pos:start="133:17" pos:end="137:38"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="137:38">(<argument pos:start="133:24" pos:end="133:28"><expr pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:28">avctx</name></expr></argument>, <argument pos:start="133:31" pos:end="133:42"><expr pos:start="133:31" pos:end="133:42"><name pos:start="133:31" pos:end="133:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="135:24" pos:end="135:56"><expr pos:start="135:24" pos:end="135:56"><literal type="string" pos:start="135:24" pos:end="135:56">"Unknown compression method %d\n"</literal></expr></argument>,

                       <argument pos:start="137:24" pos:end="137:37"><expr pos:start="137:24" pos:end="137:37"><name pos:start="137:24" pos:end="137:37"><name pos:start="137:24" pos:end="137:24">c</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:37">compression</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="139:17" pos:end="139:44">return <expr pos:start="139:24" pos:end="139:43"><name pos:start="139:24" pos:end="139:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:55"><expr pos:start="143:13" pos:end="143:54"><name pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:13">c</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:25">tile_width</name></name>  <operator pos:start="143:28" pos:end="143:28">=</operator> <call pos:start="143:30" pos:end="143:54"><name pos:start="143:30" pos:end="143:49">bytestream2_get_be32</name><argument_list pos:start="143:50" pos:end="143:54">(<argument pos:start="143:51" pos:end="143:53"><expr pos:start="143:51" pos:end="143:53"><operator pos:start="143:51" pos:end="143:51">&amp;</operator><name pos:start="143:52" pos:end="143:53">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:55"><expr pos:start="145:13" pos:end="145:54"><name pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:13">c</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:26">tile_height</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <call pos:start="145:30" pos:end="145:54"><name pos:start="145:30" pos:end="145:49">bytestream2_get_be32</name><argument_list pos:start="145:50" pos:end="145:54">(<argument pos:start="145:51" pos:end="145:53"><expr pos:start="145:51" pos:end="145:53"><operator pos:start="145:51" pos:end="145:51">&amp;</operator><name pos:start="145:52" pos:end="145:53">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="157:13"><if pos:start="147:13" pos:end="157:13">if <condition pos:start="147:16" pos:end="147:50">(<expr pos:start="147:17" pos:end="147:49"><operator pos:start="147:17" pos:end="147:17">!</operator><name pos:start="147:18" pos:end="147:30"><name pos:start="147:18" pos:end="147:18">c</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:30">tile_width</name></name> <operator pos:start="147:32" pos:end="147:33">||</operator> <operator pos:start="147:35" pos:end="147:35">!</operator><name pos:start="147:36" pos:end="147:49"><name pos:start="147:36" pos:end="147:36">c</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:49">tile_height</name></name></expr>)</condition> <block pos:start="147:52" pos:end="157:13">{<block_content pos:start="149:17" pos:end="155:43">

                <expr_stmt pos:start="149:17" pos:end="153:54"><expr pos:start="149:17" pos:end="153:53"><call pos:start="149:17" pos:end="153:53"><name pos:start="149:17" pos:end="149:22">av_log</name><argument_list pos:start="149:23" pos:end="153:53">(<argument pos:start="149:24" pos:end="149:28"><expr pos:start="149:24" pos:end="149:28"><name pos:start="149:24" pos:end="149:28">avctx</name></expr></argument>, <argument pos:start="149:31" pos:end="149:42"><expr pos:start="149:31" pos:end="149:42"><name pos:start="149:31" pos:end="149:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="151:24" pos:end="151:56"><expr pos:start="151:24" pos:end="151:56"><literal type="string" pos:start="151:24" pos:end="151:56">"Invalid tile dimensions %dx%d\n"</literal></expr></argument>,

                       <argument pos:start="153:24" pos:end="153:36"><expr pos:start="153:24" pos:end="153:36"><name pos:start="153:24" pos:end="153:36"><name pos:start="153:24" pos:end="153:24">c</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:36">tile_width</name></name></expr></argument>, <argument pos:start="153:39" pos:end="153:52"><expr pos:start="153:39" pos:end="153:52"><name pos:start="153:39" pos:end="153:52"><name pos:start="153:39" pos:end="153:39">c</name><operator pos:start="153:40" pos:end="153:41">-&gt;</operator><name pos:start="153:42" pos:end="153:52">tile_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="155:17" pos:end="155:43">return <expr pos:start="155:24" pos:end="155:42"><name pos:start="155:24" pos:end="155:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:74"><expr pos:start="159:13" pos:end="159:73"><name pos:start="159:13" pos:end="159:22"><name pos:start="159:13" pos:end="159:13">c</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:22">tiles_x</name></name> <operator pos:start="159:24" pos:end="159:24">=</operator> <operator pos:start="159:26" pos:end="159:26">(</operator><name pos:start="159:27" pos:end="159:34"><name pos:start="159:27" pos:end="159:27">c</name><operator pos:start="159:28" pos:end="159:29">-&gt;</operator><name pos:start="159:30" pos:end="159:34">width</name></name>  <operator pos:start="159:37" pos:end="159:37">+</operator> <name pos:start="159:39" pos:end="159:51"><name pos:start="159:39" pos:end="159:39">c</name><operator pos:start="159:40" pos:end="159:41">-&gt;</operator><name pos:start="159:42" pos:end="159:51">tile_width</name></name>  <operator pos:start="159:54" pos:end="159:54">-</operator> <literal type="number" pos:start="159:56" pos:end="159:56">1</literal><operator pos:start="159:57" pos:end="159:57">)</operator> <operator pos:start="159:59" pos:end="159:59">/</operator> <name pos:start="159:61" pos:end="159:73"><name pos:start="159:61" pos:end="159:61">c</name><operator pos:start="159:62" pos:end="159:63">-&gt;</operator><name pos:start="159:64" pos:end="159:73">tile_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:75"><expr pos:start="161:13" pos:end="161:74"><name pos:start="161:13" pos:end="161:22"><name pos:start="161:13" pos:end="161:13">c</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:22">tiles_y</name></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <operator pos:start="161:26" pos:end="161:26">(</operator><name pos:start="161:27" pos:end="161:35"><name pos:start="161:27" pos:end="161:27">c</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:35">height</name></name> <operator pos:start="161:37" pos:end="161:37">+</operator> <name pos:start="161:39" pos:end="161:52"><name pos:start="161:39" pos:end="161:39">c</name><operator pos:start="161:40" pos:end="161:41">-&gt;</operator><name pos:start="161:42" pos:end="161:52">tile_height</name></name> <operator pos:start="161:54" pos:end="161:54">-</operator> <literal type="number" pos:start="161:56" pos:end="161:56">1</literal><operator pos:start="161:57" pos:end="161:57">)</operator> <operator pos:start="161:59" pos:end="161:59">/</operator> <name pos:start="161:61" pos:end="161:74"><name pos:start="161:61" pos:end="161:61">c</name><operator pos:start="161:62" pos:end="161:63">-&gt;</operator><name pos:start="161:64" pos:end="161:74">tile_height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:47"><expr pos:start="163:13" pos:end="163:46"><name pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:13">c</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:18">bpp</name></name> <operator pos:start="163:20" pos:end="163:20">=</operator> <call pos:start="163:22" pos:end="163:46"><name pos:start="163:22" pos:end="163:41">bytestream2_get_byte</name><argument_list pos:start="163:42" pos:end="163:46">(<argument pos:start="163:43" pos:end="163:45"><expr pos:start="163:43" pos:end="163:45"><operator pos:start="163:43" pos:end="163:43">&amp;</operator><name pos:start="163:44" pos:end="163:45">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:29"><expr pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:22">chunk_size</name> <operator pos:start="165:24" pos:end="165:25">-=</operator> <literal type="number" pos:start="165:27" pos:end="165:28">21</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:46"><expr pos:start="167:13" pos:end="167:45"><call pos:start="167:13" pos:end="167:45"><name pos:start="167:13" pos:end="167:28">bytestream2_skip</name><argument_list pos:start="167:29" pos:end="167:45">(<argument pos:start="167:30" pos:end="167:32"><expr pos:start="167:30" pos:end="167:32"><operator pos:start="167:30" pos:end="167:30">&amp;</operator><name pos:start="167:31" pos:end="167:32">bc</name></expr></argument>, <argument pos:start="167:35" pos:end="167:44"><expr pos:start="167:35" pos:end="167:44"><name pos:start="167:35" pos:end="167:44">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="171:39"><if pos:start="169:13" pos:end="171:39">if <condition pos:start="169:16" pos:end="169:36">(<expr pos:start="169:17" pos:end="169:35"><call pos:start="169:17" pos:end="169:35"><name pos:start="169:17" pos:end="169:32">g2m_init_buffers</name><argument_list pos:start="169:33" pos:end="169:35">(<argument pos:start="169:34" pos:end="169:34"><expr pos:start="169:34" pos:end="169:34"><name pos:start="169:34" pos:end="169:34">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:39"><block_content pos:start="171:17" pos:end="171:39">

                <return pos:start="171:17" pos:end="171:39">return <expr pos:start="171:24" pos:end="171:38"><call pos:start="171:24" pos:end="171:38"><name pos:start="171:24" pos:end="171:30">AVERROR</name><argument_list pos:start="171:31" pos:end="171:38">(<argument pos:start="171:32" pos:end="171:37"><expr pos:start="171:32" pos:end="171:37"><name pos:start="171:32" pos:end="171:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:27"><expr pos:start="173:13" pos:end="173:26"><name pos:start="173:13" pos:end="173:22">got_header</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <literal type="number" pos:start="173:26" pos:end="173:26">1</literal></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:23">case <expr pos:start="177:14" pos:end="177:22"><name pos:start="177:14" pos:end="177:22">TILE_DATA</name></expr>:</case>

            <if_stmt pos:start="179:13" pos:end="189:13"><if pos:start="179:13" pos:end="189:13">if <condition pos:start="179:16" pos:end="179:43">(<expr pos:start="179:17" pos:end="179:42"><operator pos:start="179:17" pos:end="179:17">!</operator><name pos:start="179:18" pos:end="179:27"><name pos:start="179:18" pos:end="179:18">c</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:27">tiles_x</name></name> <operator pos:start="179:29" pos:end="179:30">||</operator> <operator pos:start="179:32" pos:end="179:32">!</operator><name pos:start="179:33" pos:end="179:42"><name pos:start="179:33" pos:end="179:33">c</name><operator pos:start="179:34" pos:end="179:35">-&gt;</operator><name pos:start="179:36" pos:end="179:42">tiles_y</name></name></expr>)</condition> <block pos:start="179:45" pos:end="189:13">{<block_content pos:start="181:17" pos:end="187:22">

                <expr_stmt pos:start="181:17" pos:end="183:60"><expr pos:start="181:17" pos:end="183:59"><call pos:start="181:17" pos:end="183:59"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="183:59">(<argument pos:start="181:24" pos:end="181:28"><expr pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:28">avctx</name></expr></argument>, <argument pos:start="181:31" pos:end="181:44"><expr pos:start="181:31" pos:end="181:44"><name pos:start="181:31" pos:end="181:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="183:24" pos:end="183:58"><expr pos:start="183:24" pos:end="183:58"><literal type="string" pos:start="183:24" pos:end="183:58">"No frame header - skipping tile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:71"><expr pos:start="185:17" pos:end="185:70"><call pos:start="185:17" pos:end="185:70"><name pos:start="185:17" pos:end="185:32">bytestream2_skip</name><argument_list pos:start="185:33" pos:end="185:70">(<argument pos:start="185:34" pos:end="185:36"><expr pos:start="185:34" pos:end="185:36"><operator pos:start="185:34" pos:end="185:34">&amp;</operator><name pos:start="185:35" pos:end="185:36">bc</name></expr></argument>, <argument pos:start="185:39" pos:end="185:69"><expr pos:start="185:39" pos:end="185:69"><call pos:start="185:39" pos:end="185:69"><name pos:start="185:39" pos:end="185:64">bytestream2_get_bytes_left</name><argument_list pos:start="185:65" pos:end="185:69">(<argument pos:start="185:66" pos:end="185:68"><expr pos:start="185:66" pos:end="185:68"><operator pos:start="185:66" pos:end="185:66">&amp;</operator><name pos:start="185:67" pos:end="185:68">bc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="187:17" pos:end="187:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="191:13" pos:end="199:13"><if pos:start="191:13" pos:end="199:13">if <condition pos:start="191:16" pos:end="191:31">(<expr pos:start="191:17" pos:end="191:30"><name pos:start="191:17" pos:end="191:26">chunk_size</name> <operator pos:start="191:28" pos:end="191:28">&lt;</operator> <literal type="number" pos:start="191:30" pos:end="191:30">2</literal></expr>)</condition> <block pos:start="191:33" pos:end="199:13">{<block_content pos:start="193:17" pos:end="197:22">

                <expr_stmt pos:start="193:17" pos:end="195:35"><expr pos:start="193:17" pos:end="195:34"><call pos:start="193:17" pos:end="195:34"><name pos:start="193:17" pos:end="193:22">av_log</name><argument_list pos:start="193:23" pos:end="195:34">(<argument pos:start="193:24" pos:end="193:28"><expr pos:start="193:24" pos:end="193:28"><name pos:start="193:24" pos:end="193:28">avctx</name></expr></argument>, <argument pos:start="193:31" pos:end="193:42"><expr pos:start="193:31" pos:end="193:42"><name pos:start="193:31" pos:end="193:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="193:45" pos:end="193:73"><expr pos:start="193:45" pos:end="193:73"><literal type="string" pos:start="193:45" pos:end="193:73">"Invalid tile data size %d\n"</literal></expr></argument>,

                       <argument pos:start="195:24" pos:end="195:33"><expr pos:start="195:24" pos:end="195:33"><name pos:start="195:24" pos:end="195:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="197:17" pos:end="197:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:50"><expr pos:start="201:13" pos:end="201:49"><name pos:start="201:13" pos:end="201:21"><name pos:start="201:13" pos:end="201:13">c</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:21">tile_x</name></name> <operator pos:start="201:23" pos:end="201:23">=</operator> <call pos:start="201:25" pos:end="201:49"><name pos:start="201:25" pos:end="201:44">bytestream2_get_byte</name><argument_list pos:start="201:45" pos:end="201:49">(<argument pos:start="201:46" pos:end="201:48"><expr pos:start="201:46" pos:end="201:48"><operator pos:start="201:46" pos:end="201:46">&amp;</operator><name pos:start="201:47" pos:end="201:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:50"><expr pos:start="203:13" pos:end="203:49"><name pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:13">c</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:21">tile_y</name></name> <operator pos:start="203:23" pos:end="203:23">=</operator> <call pos:start="203:25" pos:end="203:49"><name pos:start="203:25" pos:end="203:44">bytestream2_get_byte</name><argument_list pos:start="203:45" pos:end="203:49">(<argument pos:start="203:46" pos:end="203:48"><expr pos:start="203:46" pos:end="203:48"><operator pos:start="203:46" pos:end="203:46">&amp;</operator><name pos:start="203:47" pos:end="203:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="215:13"><if pos:start="205:13" pos:end="215:13">if <condition pos:start="205:16" pos:end="205:67">(<expr pos:start="205:17" pos:end="205:66"><name pos:start="205:17" pos:end="205:25"><name pos:start="205:17" pos:end="205:17">c</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:25">tile_x</name></name> <operator pos:start="205:27" pos:end="205:28">&gt;=</operator> <name pos:start="205:30" pos:end="205:39"><name pos:start="205:30" pos:end="205:30">c</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:39">tiles_x</name></name> <operator pos:start="205:41" pos:end="205:42">||</operator> <name pos:start="205:44" pos:end="205:52"><name pos:start="205:44" pos:end="205:44">c</name><operator pos:start="205:45" pos:end="205:46">-&gt;</operator><name pos:start="205:47" pos:end="205:52">tile_y</name></name> <operator pos:start="205:54" pos:end="205:55">&gt;=</operator> <name pos:start="205:57" pos:end="205:66"><name pos:start="205:57" pos:end="205:57">c</name><operator pos:start="205:58" pos:end="205:59">-&gt;</operator><name pos:start="205:60" pos:end="205:66">tiles_y</name></name></expr>)</condition> <block pos:start="205:69" pos:end="215:13">{<block_content pos:start="207:17" pos:end="213:22">

                <expr_stmt pos:start="207:17" pos:end="211:69"><expr pos:start="207:17" pos:end="211:68"><call pos:start="207:17" pos:end="211:68"><name pos:start="207:17" pos:end="207:22">av_log</name><argument_list pos:start="207:23" pos:end="211:68">(<argument pos:start="207:24" pos:end="207:28"><expr pos:start="207:24" pos:end="207:28"><name pos:start="207:24" pos:end="207:28">avctx</name></expr></argument>, <argument pos:start="207:31" pos:end="207:42"><expr pos:start="207:31" pos:end="207:42"><name pos:start="207:31" pos:end="207:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="209:24" pos:end="209:65"><expr pos:start="209:24" pos:end="209:65"><literal type="string" pos:start="209:24" pos:end="209:65">"Invalid tile pos %d,%d (in %dx%d grid)\n"</literal></expr></argument>,

                       <argument pos:start="211:24" pos:end="211:32"><expr pos:start="211:24" pos:end="211:32"><name pos:start="211:24" pos:end="211:32"><name pos:start="211:24" pos:end="211:24">c</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:32">tile_x</name></name></expr></argument>, <argument pos:start="211:35" pos:end="211:43"><expr pos:start="211:35" pos:end="211:43"><name pos:start="211:35" pos:end="211:43"><name pos:start="211:35" pos:end="211:35">c</name><operator pos:start="211:36" pos:end="211:37">-&gt;</operator><name pos:start="211:38" pos:end="211:43">tile_y</name></name></expr></argument>, <argument pos:start="211:46" pos:end="211:55"><expr pos:start="211:46" pos:end="211:55"><name pos:start="211:46" pos:end="211:55"><name pos:start="211:46" pos:end="211:46">c</name><operator pos:start="211:47" pos:end="211:48">-&gt;</operator><name pos:start="211:49" pos:end="211:55">tiles_x</name></name></expr></argument>, <argument pos:start="211:58" pos:end="211:67"><expr pos:start="211:58" pos:end="211:67"><name pos:start="211:58" pos:end="211:67"><name pos:start="211:58" pos:end="211:58">c</name><operator pos:start="211:59" pos:end="211:60">-&gt;</operator><name pos:start="211:61" pos:end="211:67">tiles_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="213:17" pos:end="213:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:28"><expr pos:start="217:13" pos:end="217:27"><name pos:start="217:13" pos:end="217:22">chunk_size</name> <operator pos:start="217:24" pos:end="217:25">-=</operator> <literal type="number" pos:start="217:27" pos:end="217:27">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:20"><expr pos:start="219:13" pos:end="219:19"><name pos:start="219:13" pos:end="219:15">ret</name> <operator pos:start="219:17" pos:end="219:17">=</operator> <literal type="number" pos:start="219:19" pos:end="219:19">0</literal></expr>;</expr_stmt>

            <switch pos:start="221:13" pos:end="241:13">switch <condition pos:start="221:20" pos:end="221:35">(<expr pos:start="221:21" pos:end="221:34"><name pos:start="221:21" pos:end="221:34"><name pos:start="221:21" pos:end="221:21">c</name><operator pos:start="221:22" pos:end="221:23">-&gt;</operator><name pos:start="221:24" pos:end="221:34">compression</name></name></expr>)</condition> <block pos:start="221:37" pos:end="241:13">{<block_content pos:start="223:13" pos:end="239:22">

            <case pos:start="223:13" pos:end="223:32">case <expr pos:start="223:18" pos:end="223:31"><name pos:start="223:18" pos:end="223:31">COMPR_EPIC_J_B</name></expr>:</case>

                <expr_stmt pos:start="225:17" pos:end="227:72"><expr pos:start="225:17" pos:end="227:71"><call pos:start="225:17" pos:end="227:71"><name pos:start="225:17" pos:end="225:22">av_log</name><argument_list pos:start="225:23" pos:end="227:71">(<argument pos:start="225:24" pos:end="225:28"><expr pos:start="225:24" pos:end="225:28"><name pos:start="225:24" pos:end="225:28">avctx</name></expr></argument>, <argument pos:start="225:31" pos:end="225:42"><expr pos:start="225:31" pos:end="225:42"><name pos:start="225:31" pos:end="225:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="227:24" pos:end="227:70"><expr pos:start="227:24" pos:end="227:70"><literal type="string" pos:start="227:24" pos:end="227:70">"ePIC j-b compression is not implemented yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="229:17" pos:end="229:39">return <expr pos:start="229:24" pos:end="229:38"><call pos:start="229:24" pos:end="229:38"><name pos:start="229:24" pos:end="229:30">AVERROR</name><argument_list pos:start="229:31" pos:end="229:38">(<argument pos:start="229:32" pos:end="229:37"><expr pos:start="229:32" pos:end="229:37"><name pos:start="229:32" pos:end="229:37">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

            <case pos:start="231:13" pos:end="231:33">case <expr pos:start="231:18" pos:end="231:32"><name pos:start="231:18" pos:end="231:32">COMPR_KEMPF_J_B</name></expr>:</case>

                <expr_stmt pos:start="233:17" pos:end="237:52"><expr pos:start="233:17" pos:end="237:51"><name pos:start="233:17" pos:end="233:19">ret</name> <operator pos:start="233:21" pos:end="233:21">=</operator> <call pos:start="233:23" pos:end="237:51"><name pos:start="233:23" pos:end="233:39">kempf_decode_tile</name><argument_list pos:start="233:40" pos:end="237:51">(<argument pos:start="233:41" pos:end="233:41"><expr pos:start="233:41" pos:end="233:41"><name pos:start="233:41" pos:end="233:41">c</name></expr></argument>, <argument pos:start="233:44" pos:end="233:52"><expr pos:start="233:44" pos:end="233:52"><name pos:start="233:44" pos:end="233:52"><name pos:start="233:44" pos:end="233:44">c</name><operator pos:start="233:45" pos:end="233:46">-&gt;</operator><name pos:start="233:47" pos:end="233:52">tile_x</name></name></expr></argument>, <argument pos:start="233:55" pos:end="233:63"><expr pos:start="233:55" pos:end="233:63"><name pos:start="233:55" pos:end="233:63"><name pos:start="233:55" pos:end="233:55">c</name><operator pos:start="233:56" pos:end="233:57">-&gt;</operator><name pos:start="233:58" pos:end="233:63">tile_y</name></name></expr></argument>,

                                        <argument pos:start="235:41" pos:end="235:67"><expr pos:start="235:41" pos:end="235:67"><name pos:start="235:41" pos:end="235:43">buf</name> <operator pos:start="235:45" pos:end="235:45">+</operator> <call pos:start="235:47" pos:end="235:67"><name pos:start="235:47" pos:end="235:62">bytestream2_tell</name><argument_list pos:start="235:63" pos:end="235:67">(<argument pos:start="235:64" pos:end="235:66"><expr pos:start="235:64" pos:end="235:66"><operator pos:start="235:64" pos:end="235:64">&amp;</operator><name pos:start="235:65" pos:end="235:66">bc</name></expr></argument>)</argument_list></call></expr></argument>,

                                        <argument pos:start="237:41" pos:end="237:50"><expr pos:start="237:41" pos:end="237:50"><name pos:start="237:41" pos:end="237:50">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="239:17" pos:end="239:22">break;</break>

            </block_content>}</block></switch>

            <if_stmt pos:start="243:13" pos:end="247:45"><if pos:start="243:13" pos:end="247:45">if <condition pos:start="243:16" pos:end="243:35">(<expr pos:start="243:17" pos:end="243:34"><name pos:start="243:17" pos:end="243:19">ret</name> <operator pos:start="243:21" pos:end="243:22">&amp;&amp;</operator> <name pos:start="243:24" pos:end="243:34"><name pos:start="243:24" pos:end="243:24">c</name><operator pos:start="243:25" pos:end="243:26">-&gt;</operator><name pos:start="243:27" pos:end="243:34">framebuf</name></name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="247:45"><block_content pos:start="245:17" pos:end="247:45">

                <expr_stmt pos:start="245:17" pos:end="247:45"><expr pos:start="245:17" pos:end="247:44"><call pos:start="245:17" pos:end="247:44"><name pos:start="245:17" pos:end="245:22">av_log</name><argument_list pos:start="245:23" pos:end="247:44">(<argument pos:start="245:24" pos:end="245:28"><expr pos:start="245:24" pos:end="245:28"><name pos:start="245:24" pos:end="245:28">avctx</name></expr></argument>, <argument pos:start="245:31" pos:end="245:42"><expr pos:start="245:31" pos:end="245:42"><name pos:start="245:31" pos:end="245:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="245:45" pos:end="245:73"><expr pos:start="245:45" pos:end="245:73"><literal type="string" pos:start="245:45" pos:end="245:73">"Error decoding tile %d,%d\n"</literal></expr></argument>,

                       <argument pos:start="247:24" pos:end="247:32"><expr pos:start="247:24" pos:end="247:32"><name pos:start="247:24" pos:end="247:32"><name pos:start="247:24" pos:end="247:24">c</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:32">tile_x</name></name></expr></argument>, <argument pos:start="247:35" pos:end="247:43"><expr pos:start="247:35" pos:end="247:43"><name pos:start="247:35" pos:end="247:43"><name pos:start="247:35" pos:end="247:35">c</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:43">tile_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:46"><expr pos:start="249:13" pos:end="249:45"><call pos:start="249:13" pos:end="249:45"><name pos:start="249:13" pos:end="249:28">bytestream2_skip</name><argument_list pos:start="249:29" pos:end="249:45">(<argument pos:start="249:30" pos:end="249:32"><expr pos:start="249:30" pos:end="249:32"><operator pos:start="249:30" pos:end="249:30">&amp;</operator><name pos:start="249:31" pos:end="249:32">bc</name></expr></argument>, <argument pos:start="249:35" pos:end="249:44"><expr pos:start="249:35" pos:end="249:44"><name pos:start="249:35" pos:end="249:44">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="251:13" pos:end="251:18">break;</break>

        <case pos:start="253:9" pos:end="253:24">case <expr pos:start="253:14" pos:end="253:23"><name pos:start="253:14" pos:end="253:23">CURSOR_POS</name></expr>:</case>

            <if_stmt pos:start="255:13" pos:end="263:13"><if pos:start="255:13" pos:end="263:13">if <condition pos:start="255:16" pos:end="255:31">(<expr pos:start="255:17" pos:end="255:30"><name pos:start="255:17" pos:end="255:26">chunk_size</name> <operator pos:start="255:28" pos:end="255:28">&lt;</operator> <literal type="number" pos:start="255:30" pos:end="255:30">5</literal></expr>)</condition> <block pos:start="255:33" pos:end="263:13">{<block_content pos:start="257:17" pos:end="261:22">

                <expr_stmt pos:start="257:17" pos:end="259:35"><expr pos:start="257:17" pos:end="259:34"><call pos:start="257:17" pos:end="259:34"><name pos:start="257:17" pos:end="257:22">av_log</name><argument_list pos:start="257:23" pos:end="259:34">(<argument pos:start="257:24" pos:end="257:28"><expr pos:start="257:24" pos:end="257:28"><name pos:start="257:24" pos:end="257:28">avctx</name></expr></argument>, <argument pos:start="257:31" pos:end="257:42"><expr pos:start="257:31" pos:end="257:42"><name pos:start="257:31" pos:end="257:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="257:45" pos:end="257:74"><expr pos:start="257:45" pos:end="257:74"><literal type="string" pos:start="257:45" pos:end="257:74">"Invalid cursor pos size %d\n"</literal></expr></argument>,

                       <argument pos:start="259:24" pos:end="259:33"><expr pos:start="259:24" pos:end="259:33"><name pos:start="259:24" pos:end="259:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="261:17" pos:end="261:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:52"><expr pos:start="265:13" pos:end="265:51"><name pos:start="265:13" pos:end="265:23"><name pos:start="265:13" pos:end="265:13">c</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:23">cursor_x</name></name> <operator pos:start="265:25" pos:end="265:25">=</operator> <call pos:start="265:27" pos:end="265:51"><name pos:start="265:27" pos:end="265:46">bytestream2_get_be16</name><argument_list pos:start="265:47" pos:end="265:51">(<argument pos:start="265:48" pos:end="265:50"><expr pos:start="265:48" pos:end="265:50"><operator pos:start="265:48" pos:end="265:48">&amp;</operator><name pos:start="265:49" pos:end="265:50">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:52"><expr pos:start="267:13" pos:end="267:51"><name pos:start="267:13" pos:end="267:23"><name pos:start="267:13" pos:end="267:13">c</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:23">cursor_y</name></name> <operator pos:start="267:25" pos:end="267:25">=</operator> <call pos:start="267:27" pos:end="267:51"><name pos:start="267:27" pos:end="267:46">bytestream2_get_be16</name><argument_list pos:start="267:47" pos:end="267:51">(<argument pos:start="267:48" pos:end="267:50"><expr pos:start="267:48" pos:end="267:50"><operator pos:start="267:48" pos:end="267:48">&amp;</operator><name pos:start="267:49" pos:end="267:50">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:50"><expr pos:start="269:13" pos:end="269:49"><call pos:start="269:13" pos:end="269:49"><name pos:start="269:13" pos:end="269:28">bytestream2_skip</name><argument_list pos:start="269:29" pos:end="269:49">(<argument pos:start="269:30" pos:end="269:32"><expr pos:start="269:30" pos:end="269:32"><operator pos:start="269:30" pos:end="269:30">&amp;</operator><name pos:start="269:31" pos:end="269:32">bc</name></expr></argument>, <argument pos:start="269:35" pos:end="269:48"><expr pos:start="269:35" pos:end="269:48"><name pos:start="269:35" pos:end="269:44">chunk_size</name> <operator pos:start="269:46" pos:end="269:46">-</operator> <literal type="number" pos:start="269:48" pos:end="269:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="273:26">case <expr pos:start="273:14" pos:end="273:25"><name pos:start="273:14" pos:end="273:25">CURSOR_SHAPE</name></expr>:</case>

            <if_stmt pos:start="275:13" pos:end="283:13"><if pos:start="275:13" pos:end="283:13">if <condition pos:start="275:16" pos:end="275:31">(<expr pos:start="275:17" pos:end="275:30"><name pos:start="275:17" pos:end="275:26">chunk_size</name> <operator pos:start="275:28" pos:end="275:28">&lt;</operator> <literal type="number" pos:start="275:30" pos:end="275:30">8</literal></expr>)</condition> <block pos:start="275:33" pos:end="283:13">{<block_content pos:start="277:17" pos:end="281:22">

                <expr_stmt pos:start="277:17" pos:end="279:35"><expr pos:start="277:17" pos:end="279:34"><call pos:start="277:17" pos:end="279:34"><name pos:start="277:17" pos:end="277:22">av_log</name><argument_list pos:start="277:23" pos:end="279:34">(<argument pos:start="277:24" pos:end="277:28"><expr pos:start="277:24" pos:end="277:28"><name pos:start="277:24" pos:end="277:28">avctx</name></expr></argument>, <argument pos:start="277:31" pos:end="277:42"><expr pos:start="277:31" pos:end="277:42"><name pos:start="277:31" pos:end="277:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:45" pos:end="277:75"><expr pos:start="277:45" pos:end="277:75"><literal type="string" pos:start="277:45" pos:end="277:75">"Invalid cursor data size %d\n"</literal></expr></argument>,

                       <argument pos:start="279:24" pos:end="279:33"><expr pos:start="279:24" pos:end="279:33"><name pos:start="279:24" pos:end="279:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="281:17" pos:end="281:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="285:13" pos:end="287:45"><expr pos:start="285:13" pos:end="287:44"><call pos:start="285:13" pos:end="287:44"><name pos:start="285:13" pos:end="285:28">bytestream2_init</name><argument_list pos:start="285:29" pos:end="287:44">(<argument pos:start="285:30" pos:end="285:33"><expr pos:start="285:30" pos:end="285:33"><operator pos:start="285:30" pos:end="285:30">&amp;</operator><name pos:start="285:31" pos:end="285:33">tbc</name></expr></argument>, <argument pos:start="285:36" pos:end="285:62"><expr pos:start="285:36" pos:end="285:62"><name pos:start="285:36" pos:end="285:38">buf</name> <operator pos:start="285:40" pos:end="285:40">+</operator> <call pos:start="285:42" pos:end="285:62"><name pos:start="285:42" pos:end="285:57">bytestream2_tell</name><argument_list pos:start="285:58" pos:end="285:62">(<argument pos:start="285:59" pos:end="285:61"><expr pos:start="285:59" pos:end="285:61"><operator pos:start="285:59" pos:end="285:59">&amp;</operator><name pos:start="285:60" pos:end="285:61">bc</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="287:30" pos:end="287:43"><expr pos:start="287:30" pos:end="287:43"><name pos:start="287:30" pos:end="287:39">chunk_size</name> <operator pos:start="287:41" pos:end="287:41">-</operator> <literal type="number" pos:start="287:43" pos:end="287:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:57"><expr pos:start="289:13" pos:end="289:56"><name pos:start="289:13" pos:end="289:20">cur_size</name>        <operator pos:start="289:29" pos:end="289:29">=</operator> <call pos:start="289:31" pos:end="289:56"><name pos:start="289:31" pos:end="289:50">bytestream2_get_be32</name><argument_list pos:start="289:51" pos:end="289:56">(<argument pos:start="289:52" pos:end="289:55"><expr pos:start="289:52" pos:end="289:55"><operator pos:start="289:52" pos:end="289:52">&amp;</operator><name pos:start="289:53" pos:end="289:55">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:57"><expr pos:start="291:13" pos:end="291:56"><name pos:start="291:13" pos:end="291:23"><name pos:start="291:13" pos:end="291:13">c</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:23">cursor_w</name></name>     <operator pos:start="291:29" pos:end="291:29">=</operator> <call pos:start="291:31" pos:end="291:56"><name pos:start="291:31" pos:end="291:50">bytestream2_get_byte</name><argument_list pos:start="291:51" pos:end="291:56">(<argument pos:start="291:52" pos:end="291:55"><expr pos:start="291:52" pos:end="291:55"><operator pos:start="291:52" pos:end="291:52">&amp;</operator><name pos:start="291:53" pos:end="291:55">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:57"><expr pos:start="293:13" pos:end="293:56"><name pos:start="293:13" pos:end="293:23"><name pos:start="293:13" pos:end="293:13">c</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:23">cursor_h</name></name>     <operator pos:start="293:29" pos:end="293:29">=</operator> <call pos:start="293:31" pos:end="293:56"><name pos:start="293:31" pos:end="293:50">bytestream2_get_byte</name><argument_list pos:start="293:51" pos:end="293:56">(<argument pos:start="293:52" pos:end="293:55"><expr pos:start="293:52" pos:end="293:55"><operator pos:start="293:52" pos:end="293:52">&amp;</operator><name pos:start="293:53" pos:end="293:55">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:57"><expr pos:start="295:13" pos:end="295:56"><name pos:start="295:13" pos:end="295:27"><name pos:start="295:13" pos:end="295:13">c</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:27">cursor_hot_x</name></name> <operator pos:start="295:29" pos:end="295:29">=</operator> <call pos:start="295:31" pos:end="295:56"><name pos:start="295:31" pos:end="295:50">bytestream2_get_byte</name><argument_list pos:start="295:51" pos:end="295:56">(<argument pos:start="295:52" pos:end="295:55"><expr pos:start="295:52" pos:end="295:55"><operator pos:start="295:52" pos:end="295:52">&amp;</operator><name pos:start="295:53" pos:end="295:55">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:57"><expr pos:start="297:13" pos:end="297:56"><name pos:start="297:13" pos:end="297:27"><name pos:start="297:13" pos:end="297:13">c</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:27">cursor_hot_y</name></name> <operator pos:start="297:29" pos:end="297:29">=</operator> <call pos:start="297:31" pos:end="297:56"><name pos:start="297:31" pos:end="297:50">bytestream2_get_byte</name><argument_list pos:start="297:51" pos:end="297:56">(<argument pos:start="297:52" pos:end="297:55"><expr pos:start="297:52" pos:end="297:55"><operator pos:start="297:52" pos:end="297:52">&amp;</operator><name pos:start="297:53" pos:end="297:55">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:57"><expr pos:start="299:13" pos:end="299:56"><name pos:start="299:13" pos:end="299:25"><name pos:start="299:13" pos:end="299:13">c</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:25">cursor_fmt</name></name>   <operator pos:start="299:29" pos:end="299:29">=</operator> <call pos:start="299:31" pos:end="299:56"><name pos:start="299:31" pos:end="299:50">bytestream2_get_byte</name><argument_list pos:start="299:51" pos:end="299:56">(<argument pos:start="299:52" pos:end="299:55"><expr pos:start="299:52" pos:end="299:55"><operator pos:start="299:52" pos:end="299:52">&amp;</operator><name pos:start="299:53" pos:end="299:55">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="301:13" pos:end="311:13"><if pos:start="301:13" pos:end="311:13">if <condition pos:start="301:16" pos:end="303:57">(<expr pos:start="301:17" pos:end="303:56"><name pos:start="301:17" pos:end="301:24">cur_size</name> <operator pos:start="301:26" pos:end="301:27">&gt;=</operator> <name pos:start="301:29" pos:end="301:38">chunk_size</name> <operator pos:start="301:40" pos:end="301:41">||</operator>

                <name pos:start="303:17" pos:end="303:27"><name pos:start="303:17" pos:end="303:17">c</name><operator pos:start="303:18" pos:end="303:19">-&gt;</operator><name pos:start="303:20" pos:end="303:27">cursor_w</name></name> <operator pos:start="303:29" pos:end="303:29">*</operator> <name pos:start="303:31" pos:end="303:41"><name pos:start="303:31" pos:end="303:31">c</name><operator pos:start="303:32" pos:end="303:33">-&gt;</operator><name pos:start="303:34" pos:end="303:41">cursor_h</name></name> <operator pos:start="303:43" pos:end="303:43">/</operator> <literal type="number" pos:start="303:45" pos:end="303:45">4</literal> <operator pos:start="303:47" pos:end="303:47">&gt;</operator> <name pos:start="303:49" pos:end="303:56">cur_size</name></expr>)</condition> <block pos:start="303:59" pos:end="311:13">{<block_content pos:start="305:17" pos:end="309:22">

                <expr_stmt pos:start="305:17" pos:end="307:35"><expr pos:start="305:17" pos:end="307:34"><call pos:start="305:17" pos:end="307:34"><name pos:start="305:17" pos:end="305:22">av_log</name><argument_list pos:start="305:23" pos:end="307:34">(<argument pos:start="305:24" pos:end="305:28"><expr pos:start="305:24" pos:end="305:28"><name pos:start="305:24" pos:end="305:28">avctx</name></expr></argument>, <argument pos:start="305:31" pos:end="305:42"><expr pos:start="305:31" pos:end="305:42"><name pos:start="305:31" pos:end="305:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="305:45" pos:end="305:75"><expr pos:start="305:45" pos:end="305:75"><literal type="string" pos:start="305:45" pos:end="305:75">"Invalid cursor data size %d\n"</literal></expr></argument>,

                       <argument pos:start="307:24" pos:end="307:33"><expr pos:start="307:24" pos:end="307:33"><name pos:start="307:24" pos:end="307:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="309:17" pos:end="309:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:37"><expr pos:start="313:13" pos:end="313:36"><call pos:start="313:13" pos:end="313:36"><name pos:start="313:13" pos:end="313:27">g2m_load_cursor</name><argument_list pos:start="313:28" pos:end="313:36">(<argument pos:start="313:29" pos:end="313:29"><expr pos:start="313:29" pos:end="313:29"><name pos:start="313:29" pos:end="313:29">c</name></expr></argument>, <argument pos:start="313:32" pos:end="313:35"><expr pos:start="313:32" pos:end="313:35"><operator pos:start="313:32" pos:end="313:32">&amp;</operator><name pos:start="313:33" pos:end="313:35">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:46"><expr pos:start="315:13" pos:end="315:45"><call pos:start="315:13" pos:end="315:45"><name pos:start="315:13" pos:end="315:28">bytestream2_skip</name><argument_list pos:start="315:29" pos:end="315:45">(<argument pos:start="315:30" pos:end="315:32"><expr pos:start="315:30" pos:end="315:32"><operator pos:start="315:30" pos:end="315:30">&amp;</operator><name pos:start="315:31" pos:end="315:32">bc</name></expr></argument>, <argument pos:start="315:35" pos:end="315:44"><expr pos:start="315:35" pos:end="315:44"><name pos:start="315:35" pos:end="315:44">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="317:13" pos:end="317:18">break;</break>

        <case pos:start="319:9" pos:end="319:22">case <expr pos:start="319:14" pos:end="319:21"><name pos:start="319:14" pos:end="319:21">CHUNK_CC</name></expr>:</case>

        <case pos:start="321:9" pos:end="321:22">case <expr pos:start="321:14" pos:end="321:21"><name pos:start="321:14" pos:end="321:21">CHUNK_CD</name></expr>:</case>

            <expr_stmt pos:start="323:13" pos:end="323:46"><expr pos:start="323:13" pos:end="323:45"><call pos:start="323:13" pos:end="323:45"><name pos:start="323:13" pos:end="323:28">bytestream2_skip</name><argument_list pos:start="323:29" pos:end="323:45">(<argument pos:start="323:30" pos:end="323:32"><expr pos:start="323:30" pos:end="323:32"><operator pos:start="323:30" pos:end="323:30">&amp;</operator><name pos:start="323:31" pos:end="323:32">bc</name></expr></argument>, <argument pos:start="323:35" pos:end="323:44"><expr pos:start="323:35" pos:end="323:44"><name pos:start="323:35" pos:end="323:44">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <default pos:start="327:9" pos:end="327:16">default:</default>

            <expr_stmt pos:start="329:13" pos:end="331:31"><expr pos:start="329:13" pos:end="331:30"><call pos:start="329:13" pos:end="331:30"><name pos:start="329:13" pos:end="329:18">av_log</name><argument_list pos:start="329:19" pos:end="331:30">(<argument pos:start="329:20" pos:end="329:24"><expr pos:start="329:20" pos:end="329:24"><name pos:start="329:20" pos:end="329:24">avctx</name></expr></argument>, <argument pos:start="329:27" pos:end="329:40"><expr pos:start="329:27" pos:end="329:40"><name pos:start="329:27" pos:end="329:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="329:43" pos:end="329:70"><expr pos:start="329:43" pos:end="329:70"><literal type="string" pos:start="329:43" pos:end="329:70">"Skipping chunk type %02X\n"</literal></expr></argument>,

                   <argument pos:start="331:20" pos:end="331:29"><expr pos:start="331:20" pos:end="331:29"><name pos:start="331:20" pos:end="331:29">chunk_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:46"><expr pos:start="333:13" pos:end="333:45"><call pos:start="333:13" pos:end="333:45"><name pos:start="333:13" pos:end="333:28">bytestream2_skip</name><argument_list pos:start="333:29" pos:end="333:45">(<argument pos:start="333:30" pos:end="333:32"><expr pos:start="333:30" pos:end="333:32"><operator pos:start="333:30" pos:end="333:30">&amp;</operator><name pos:start="333:31" pos:end="333:32">bc</name></expr></argument>, <argument pos:start="333:35" pos:end="333:44"><expr pos:start="333:35" pos:end="333:44"><name pos:start="333:35" pos:end="333:44">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>

    <if_stmt pos:start="339:5" pos:end="341:26"><if pos:start="339:5" pos:end="341:26">if <condition pos:start="339:8" pos:end="339:19">(<expr pos:start="339:9" pos:end="339:18"><name pos:start="339:9" pos:end="339:18">got_header</name></expr>)</condition><block type="pseudo" pos:start="341:9" pos:end="341:26"><block_content pos:start="341:9" pos:end="341:26">

        <expr_stmt pos:start="341:9" pos:end="341:26"><expr pos:start="341:9" pos:end="341:25"><name pos:start="341:9" pos:end="341:21"><name pos:start="341:9" pos:end="341:9">c</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:21">got_header</name></name> <operator pos:start="341:23" pos:end="341:23">=</operator> <literal type="number" pos:start="341:25" pos:end="341:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="345:5" pos:end="377:5"><if pos:start="345:5" pos:end="377:5">if <condition pos:start="345:8" pos:end="345:45">(<expr pos:start="345:9" pos:end="345:44"><name pos:start="345:9" pos:end="345:16"><name pos:start="345:9" pos:end="345:9">c</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:16">width</name></name> <operator pos:start="345:18" pos:end="345:19">&amp;&amp;</operator> <name pos:start="345:21" pos:end="345:29"><name pos:start="345:21" pos:end="345:21">c</name><operator pos:start="345:22" pos:end="345:23">-&gt;</operator><name pos:start="345:24" pos:end="345:29">height</name></name> <operator pos:start="345:31" pos:end="345:32">&amp;&amp;</operator> <name pos:start="345:34" pos:end="345:44"><name pos:start="345:34" pos:end="345:34">c</name><operator pos:start="345:35" pos:end="345:36">-&gt;</operator><name pos:start="345:37" pos:end="345:44">framebuf</name></name></expr>)</condition> <block pos:start="345:47" pos:end="377:5">{<block_content pos:start="347:9" pos:end="375:29">

        <if_stmt pos:start="347:9" pos:end="353:9"><if pos:start="347:9" pos:end="353:9">if <condition pos:start="347:12" pos:end="347:53">(<expr pos:start="347:13" pos:end="347:52"><operator pos:start="347:13" pos:end="347:13">(</operator><name pos:start="347:14" pos:end="347:16">ret</name> <operator pos:start="347:18" pos:end="347:18">=</operator> <call pos:start="347:20" pos:end="347:47"><name pos:start="347:20" pos:end="347:32">ff_get_buffer</name><argument_list pos:start="347:33" pos:end="347:47">(<argument pos:start="347:34" pos:end="347:38"><expr pos:start="347:34" pos:end="347:38"><name pos:start="347:34" pos:end="347:38">avctx</name></expr></argument>, <argument pos:start="347:41" pos:end="347:43"><expr pos:start="347:41" pos:end="347:43"><name pos:start="347:41" pos:end="347:43">pic</name></expr></argument>, <argument pos:start="347:46" pos:end="347:46"><expr pos:start="347:46" pos:end="347:46"><literal type="number" pos:start="347:46" pos:end="347:46">0</literal></expr></argument>)</argument_list></call><operator pos:start="347:48" pos:end="347:48">)</operator> <operator pos:start="347:50" pos:end="347:50">&lt;</operator> <literal type="number" pos:start="347:52" pos:end="347:52">0</literal></expr>)</condition> <block pos:start="347:55" pos:end="353:9">{<block_content pos:start="349:13" pos:end="351:23">

            <expr_stmt pos:start="349:13" pos:end="349:65"><expr pos:start="349:13" pos:end="349:64"><call pos:start="349:13" pos:end="349:64"><name pos:start="349:13" pos:end="349:18">av_log</name><argument_list pos:start="349:19" pos:end="349:64">(<argument pos:start="349:20" pos:end="349:24"><expr pos:start="349:20" pos:end="349:24"><name pos:start="349:20" pos:end="349:24">avctx</name></expr></argument>, <argument pos:start="349:27" pos:end="349:38"><expr pos:start="349:27" pos:end="349:38"><name pos:start="349:27" pos:end="349:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="349:41" pos:end="349:63"><expr pos:start="349:41" pos:end="349:63"><literal type="string" pos:start="349:41" pos:end="349:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="351:13" pos:end="351:23">return <expr pos:start="351:20" pos:end="351:22"><name pos:start="351:20" pos:end="351:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="357:9" pos:end="357:36"><expr pos:start="357:9" pos:end="357:35"><name pos:start="357:9" pos:end="357:22"><name pos:start="357:9" pos:end="357:11">pic</name><operator pos:start="357:12" pos:end="357:13">-&gt;</operator><name pos:start="357:14" pos:end="357:22">key_frame</name></name> <operator pos:start="357:24" pos:end="357:24">=</operator> <name pos:start="357:26" pos:end="357:35">got_header</name></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:76"><expr pos:start="359:9" pos:end="359:75"><name pos:start="359:9" pos:end="359:22"><name pos:start="359:9" pos:end="359:11">pic</name><operator pos:start="359:12" pos:end="359:13">-&gt;</operator><name pos:start="359:14" pos:end="359:22">pict_type</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <ternary pos:start="359:26" pos:end="359:75"><condition pos:start="359:26" pos:end="359:37"><expr pos:start="359:26" pos:end="359:35"><name pos:start="359:26" pos:end="359:35">got_header</name></expr> ?</condition><then pos:start="359:39" pos:end="359:55"> <expr pos:start="359:39" pos:end="359:55"><name pos:start="359:39" pos:end="359:55">AV_PICTURE_TYPE_I</name></expr> </then><else pos:start="359:57" pos:end="359:75">: <expr pos:start="359:59" pos:end="359:75"><name pos:start="359:59" pos:end="359:75">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="363:9" pos:end="369:33">for <control pos:start="363:13" pos:end="363:43">(<init pos:start="363:14" pos:end="363:19"><expr pos:start="363:14" pos:end="363:18"><name pos:start="363:14" pos:end="363:14">i</name> <operator pos:start="363:16" pos:end="363:16">=</operator> <literal type="number" pos:start="363:18" pos:end="363:18">0</literal></expr>;</init> <condition pos:start="363:21" pos:end="363:38"><expr pos:start="363:21" pos:end="363:37"><name pos:start="363:21" pos:end="363:21">i</name> <operator pos:start="363:23" pos:end="363:23">&lt;</operator> <name pos:start="363:25" pos:end="363:37"><name pos:start="363:25" pos:end="363:29">avctx</name><operator pos:start="363:30" pos:end="363:31">-&gt;</operator><name pos:start="363:32" pos:end="363:37">height</name></name></expr>;</condition> <incr pos:start="363:40" pos:end="363:42"><expr pos:start="363:40" pos:end="363:42"><name pos:start="363:40" pos:end="363:40">i</name><operator pos:start="363:41" pos:end="363:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="365:13" pos:end="369:33"><block_content pos:start="365:13" pos:end="369:33">

            <expr_stmt pos:start="365:13" pos:end="369:33"><expr pos:start="365:13" pos:end="369:32"><call pos:start="365:13" pos:end="369:32"><name pos:start="365:13" pos:end="365:18">memcpy</name><argument_list pos:start="365:19" pos:end="369:32">(<argument pos:start="365:20" pos:end="365:54"><expr pos:start="365:20" pos:end="365:54"><name pos:start="365:20" pos:end="365:31"><name pos:start="365:20" pos:end="365:22">pic</name><operator pos:start="365:23" pos:end="365:24">-&gt;</operator><name pos:start="365:25" pos:end="365:28">data</name><index pos:start="365:29" pos:end="365:31">[<expr pos:start="365:30" pos:end="365:30"><literal type="number" pos:start="365:30" pos:end="365:30">0</literal></expr>]</index></name> <operator pos:start="365:33" pos:end="365:33">+</operator> <name pos:start="365:35" pos:end="365:35">i</name> <operator pos:start="365:37" pos:end="365:37">*</operator> <name pos:start="365:39" pos:end="365:54"><name pos:start="365:39" pos:end="365:41">pic</name><operator pos:start="365:42" pos:end="365:43">-&gt;</operator><name pos:start="365:44" pos:end="365:51">linesize</name><index pos:start="365:52" pos:end="365:54">[<expr pos:start="365:53" pos:end="365:53"><literal type="number" pos:start="365:53" pos:end="365:53">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="367:20" pos:end="367:56"><expr pos:start="367:20" pos:end="367:56"><name pos:start="367:20" pos:end="367:30"><name pos:start="367:20" pos:end="367:20">c</name><operator pos:start="367:21" pos:end="367:22">-&gt;</operator><name pos:start="367:23" pos:end="367:30">framebuf</name></name>  <operator pos:start="367:33" pos:end="367:33">+</operator> <name pos:start="367:35" pos:end="367:35">i</name> <operator pos:start="367:37" pos:end="367:37">*</operator> <name pos:start="367:39" pos:end="367:56"><name pos:start="367:39" pos:end="367:39">c</name><operator pos:start="367:40" pos:end="367:41">-&gt;</operator><name pos:start="367:42" pos:end="367:56">framebuf_stride</name></name></expr></argument>,

                   <argument pos:start="369:20" pos:end="369:31"><expr pos:start="369:20" pos:end="369:31"><name pos:start="369:20" pos:end="369:27"><name pos:start="369:20" pos:end="369:20">c</name><operator pos:start="369:21" pos:end="369:22">-&gt;</operator><name pos:start="369:23" pos:end="369:27">width</name></name> <operator pos:start="369:29" pos:end="369:29">*</operator> <literal type="number" pos:start="369:31" pos:end="369:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="371:9" pos:end="371:60"><expr pos:start="371:9" pos:end="371:59"><call pos:start="371:9" pos:end="371:59"><name pos:start="371:9" pos:end="371:24">g2m_paint_cursor</name><argument_list pos:start="371:25" pos:end="371:59">(<argument pos:start="371:26" pos:end="371:26"><expr pos:start="371:26" pos:end="371:26"><name pos:start="371:26" pos:end="371:26">c</name></expr></argument>, <argument pos:start="371:29" pos:end="371:40"><expr pos:start="371:29" pos:end="371:40"><name pos:start="371:29" pos:end="371:40"><name pos:start="371:29" pos:end="371:31">pic</name><operator pos:start="371:32" pos:end="371:33">-&gt;</operator><name pos:start="371:34" pos:end="371:37">data</name><index pos:start="371:38" pos:end="371:40">[<expr pos:start="371:39" pos:end="371:39"><literal type="number" pos:start="371:39" pos:end="371:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:43" pos:end="371:58"><expr pos:start="371:43" pos:end="371:58"><name pos:start="371:43" pos:end="371:58"><name pos:start="371:43" pos:end="371:45">pic</name><operator pos:start="371:46" pos:end="371:47">-&gt;</operator><name pos:start="371:48" pos:end="371:55">linesize</name><index pos:start="371:56" pos:end="371:58">[<expr pos:start="371:57" pos:end="371:57"><literal type="number" pos:start="371:57" pos:end="371:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="375:9" pos:end="375:29"><expr pos:start="375:9" pos:end="375:28"><operator pos:start="375:9" pos:end="375:9">*</operator><name pos:start="375:10" pos:end="375:24">got_picture_ptr</name> <operator pos:start="375:26" pos:end="375:26">=</operator> <literal type="number" pos:start="375:28" pos:end="375:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="381:5" pos:end="381:20">return <expr pos:start="381:12" pos:end="381:19"><name pos:start="381:12" pos:end="381:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
