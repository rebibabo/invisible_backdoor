<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1813.c" pos:tabs="8"><function pos:start="1:1" pos:end="531:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_frame</name><parameter_list pos:start="1:24" pos:end="3:61">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">AVFrame</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">pict</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:48">int</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:60">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="531:1">{<block_content pos:start="7:5" pos:end="529:15">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">TiffEncoderContext</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:24"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">AVFrame</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><specifier pos:start="9:20" pos:end="9:24">const</specifier></type> <name pos:start="9:26" pos:end="9:26">p</name> <init pos:start="9:28" pos:end="9:33">= <expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">pict</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">strips</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">uint32_t</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:25">strip_sizes</name>   <init pos:start="19:29" pos:end="19:34">= <expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint32_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:27">strip_offsets</name> <init pos:start="21:29" pos:end="21:34">= <expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:21">bytes_per_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:35"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:16">res</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">2</literal></expr>]</index></name>    <init pos:start="25:24" pos:end="25:34">= <expr pos:start="25:26" pos:end="25:34"><block pos:start="25:26" pos:end="25:34">{ <expr pos:start="25:28" pos:end="25:29"><literal type="number" pos:start="25:28" pos:end="25:29">72</literal></expr>, <expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>     <comment type="line" pos:start="25:41" pos:end="25:66">// image resolution (72/1)</comment>

    <decl_stmt pos:start="27:5" pos:end="27:40"><decl pos:start="27:5" pos:end="27:39"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint16_t</name></type> <name pos:start="27:14" pos:end="27:22"><name pos:start="27:14" pos:end="27:20">bpp_tab</name><index pos:start="27:21" pos:end="27:22">[]</index></name> <init pos:start="27:24" pos:end="27:39">= <expr pos:start="27:26" pos:end="27:39"><block pos:start="27:26" pos:end="27:39">{ <expr pos:start="27:28" pos:end="27:28"><literal type="number" pos:start="27:28" pos:end="27:28">8</literal></expr>, <expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">8</literal></expr>, <expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">8</literal></expr>, <expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:12"><decl pos:start="29:5" pos:end="29:11"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:19"><decl pos:start="31:5" pos:end="31:18"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:14">is_yuv</name> <init pos:start="31:16" pos:end="31:18">= <expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:29"><decl pos:start="33:5" pos:end="33:28"><type pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:11">uint8_t</name> <modifier pos:start="33:13" pos:end="33:13">*</modifier></type><name pos:start="33:14" pos:end="33:21">yuv_line</name> <init pos:start="33:23" pos:end="33:28">= <expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:25"><decl pos:start="35:5" pos:end="35:15"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:15">shift_h</name></decl>, <decl pos:start="35:18" pos:end="35:24"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:18" pos:end="35:24">shift_v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:20"><decl pos:start="37:5" pos:end="37:19"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:19">packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:34"><decl pos:start="39:5" pos:end="39:33"><type pos:start="39:5" pos:end="39:30"><specifier pos:start="39:5" pos:end="39:9">const</specifier> <name pos:start="39:11" pos:end="39:28">AVPixFmtDescriptor</name> <modifier pos:start="39:30" pos:end="39:30">*</modifier></type><name pos:start="39:31" pos:end="39:33">pfd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">avctx</name></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:20">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:12">width</name></name>          <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:36"><name pos:start="47:25" pos:end="47:29">avctx</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:36">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:13">height</name></name>         <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:37"><name pos:start="49:25" pos:end="49:29">avctx</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:37">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:18">subsampling</name><index pos:start="51:19" pos:end="51:21">[<expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>]</index></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:18">subsampling</name><index pos:start="53:19" pos:end="53:21">[<expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">1</literal></expr>]</index></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">1</literal></expr>;</expr_stmt>



    <switch pos:start="57:5" pos:end="149:5">switch <condition pos:start="57:12" pos:end="57:27">(<expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">avctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:26">pix_fmt</name></name></expr>)</condition> <block pos:start="57:29" pos:end="149:5">{<block_content pos:start="59:5" pos:end="147:18">

    <case pos:start="59:5" pos:end="59:28">case <expr pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:27">AV_PIX_FMT_RGB48LE</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:29">case <expr pos:start="61:10" pos:end="61:28"><name pos:start="61:10" pos:end="61:28">AV_PIX_FMT_GRAY16LE</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:25">case <expr pos:start="63:10" pos:end="63:24"><name pos:start="63:10" pos:end="63:24">AV_PIX_FMT_RGBA</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:26">case <expr pos:start="65:10" pos:end="65:25"><name pos:start="65:10" pos:end="65:25">AV_PIX_FMT_RGB24</name></expr>:</case>

    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">AV_PIX_FMT_GRAY8</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:25">case <expr pos:start="69:10" pos:end="69:24"><name pos:start="69:10" pos:end="69:24">AV_PIX_FMT_PAL8</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:53"><expr pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:11">pfd</name>    <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:52"><name pos:start="71:18" pos:end="71:36">av_pix_fmt_desc_get</name><argument_list pos:start="71:37" pos:end="71:52">(<argument pos:start="71:38" pos:end="71:51"><expr pos:start="71:38" pos:end="71:51"><name pos:start="71:38" pos:end="71:51"><name pos:start="71:38" pos:end="71:42">avctx</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:51">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">bpp</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <call pos:start="73:18" pos:end="73:43"><name pos:start="73:18" pos:end="73:38">av_get_bits_per_pixel</name><argument_list pos:start="73:39" pos:end="73:43">(<argument pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:42">pfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="85:75"><if pos:start="75:9" pos:end="77:69">if <condition pos:start="75:12" pos:end="75:45">(<expr pos:start="75:13" pos:end="75:44"><name pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:15">pfd</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:22">flags</name></name> <operator pos:start="75:24" pos:end="75:24">&amp;</operator> <name pos:start="75:26" pos:end="75:44">AV_PIX_FMT_FLAG_PAL</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:69"><block_content pos:start="77:13" pos:end="77:69">

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:41">photometric_interpretation</name></name> <operator pos:start="77:43" pos:end="77:43">=</operator> <name pos:start="77:45" pos:end="77:68">TIFF_PHOTOMETRIC_PALETTE</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="79:9" pos:end="81:65">else if <condition pos:start="79:17" pos:end="79:50">(<expr pos:start="79:18" pos:end="79:49"><name pos:start="79:18" pos:end="79:27"><name pos:start="79:18" pos:end="79:20">pfd</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">flags</name></name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <name pos:start="79:31" pos:end="79:49">AV_PIX_FMT_FLAG_RGB</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:65"><block_content pos:start="81:13" pos:end="81:65">

            <expr_stmt pos:start="81:13" pos:end="81:65"><expr pos:start="81:13" pos:end="81:64"><name pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:41">photometric_interpretation</name></name> <operator pos:start="81:43" pos:end="81:43">=</operator> <name pos:start="81:45" pos:end="81:64">TIFF_PHOTOMETRIC_RGB</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="83:9" pos:end="85:75">else<block type="pseudo" pos:start="85:13" pos:end="85:75"><block_content pos:start="85:13" pos:end="85:75">

            <expr_stmt pos:start="85:13" pos:end="85:75"><expr pos:start="85:13" pos:end="85:74"><name pos:start="85:13" pos:end="85:41"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:41">photometric_interpretation</name></name> <operator pos:start="85:43" pos:end="85:43">=</operator> <name pos:start="85:45" pos:end="85:74">TIFF_PHOTOMETRIC_BLACK_IS_ZERO</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:23">bpp_tab_size</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:44"><name pos:start="87:27" pos:end="87:29">pfd</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:44">nb_components</name></name></expr>;</expr_stmt>

        <for pos:start="89:9" pos:end="91:50">for <control pos:start="89:13" pos:end="89:45">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:40"><expr pos:start="89:21" pos:end="89:39"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:39"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:39">bpp_tab_size</name></name></expr>;</condition> <incr pos:start="89:42" pos:end="89:44"><expr pos:start="89:42" pos:end="89:44"><name pos:start="89:42" pos:end="89:42">i</name><operator pos:start="89:43" pos:end="89:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:13" pos:end="91:50"><block_content pos:start="91:13" pos:end="91:50">

            <expr_stmt pos:start="91:13" pos:end="91:50"><expr pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:19">bpp_tab</name><index pos:start="91:20" pos:end="91:22">[<expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">i</name></expr>]</index></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:31"><name pos:start="91:26" pos:end="91:26">s</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:31">bpp</name></name> <operator pos:start="91:33" pos:end="91:33">/</operator> <name pos:start="91:35" pos:end="91:49"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:49">bpp_tab_size</name></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:30">case <expr pos:start="95:10" pos:end="95:29"><name pos:start="95:10" pos:end="95:29">AV_PIX_FMT_MONOBLACK</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:14">bpp</name></name>                        <operator pos:start="97:39" pos:end="97:39">=</operator> <literal type="number" pos:start="97:41" pos:end="97:41">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:71"><expr pos:start="99:9" pos:end="99:70"><name pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:37">photometric_interpretation</name></name> <operator pos:start="99:39" pos:end="99:39">=</operator> <name pos:start="99:41" pos:end="99:70">TIFF_PHOTOMETRIC_BLACK_IS_ZERO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:23">bpp_tab_size</name></name>               <operator pos:start="101:39" pos:end="101:39">=</operator> <literal type="number" pos:start="101:41" pos:end="101:41">0</literal></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:30">case <expr pos:start="105:10" pos:end="105:29"><name pos:start="105:10" pos:end="105:29">AV_PIX_FMT_MONOWHITE</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:14">bpp</name></name>                        <operator pos:start="107:39" pos:end="107:39">=</operator> <literal type="number" pos:start="107:41" pos:end="107:41">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:71"><expr pos:start="109:9" pos:end="109:70"><name pos:start="109:9" pos:end="109:37"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:37">photometric_interpretation</name></name> <operator pos:start="109:39" pos:end="109:39">=</operator> <name pos:start="109:41" pos:end="109:70">TIFF_PHOTOMETRIC_WHITE_IS_ZERO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:23">bpp_tab_size</name></name>               <operator pos:start="111:39" pos:end="111:39">=</operator> <literal type="number" pos:start="111:41" pos:end="111:41">0</literal></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:28">case <expr pos:start="115:10" pos:end="115:27"><name pos:start="115:10" pos:end="115:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

    <case pos:start="117:5" pos:end="117:28">case <expr pos:start="117:10" pos:end="117:27"><name pos:start="117:10" pos:end="117:27">AV_PIX_FMT_YUV422P</name></expr>:</case>

    <case pos:start="119:5" pos:end="119:28">case <expr pos:start="119:10" pos:end="119:27"><name pos:start="119:10" pos:end="119:27">AV_PIX_FMT_YUV444P</name></expr>:</case>

    <case pos:start="121:5" pos:end="121:28">case <expr pos:start="121:10" pos:end="121:27"><name pos:start="121:10" pos:end="121:27">AV_PIX_FMT_YUV410P</name></expr>:</case>

    <case pos:start="123:5" pos:end="123:28">case <expr pos:start="123:10" pos:end="123:27"><name pos:start="123:10" pos:end="123:27">AV_PIX_FMT_YUV411P</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:77"><expr pos:start="125:9" pos:end="125:76"><call pos:start="125:9" pos:end="125:76"><name pos:start="125:9" pos:end="125:40">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="125:41" pos:end="125:76">(<argument pos:start="125:42" pos:end="125:55"><expr pos:start="125:42" pos:end="125:55"><name pos:start="125:42" pos:end="125:55"><name pos:start="125:42" pos:end="125:46">avctx</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:55">pix_fmt</name></name></expr></argument>, <argument pos:start="125:58" pos:end="125:65"><expr pos:start="125:58" pos:end="125:65"><operator pos:start="125:58" pos:end="125:58">&amp;</operator><name pos:start="125:59" pos:end="125:65">shift_h</name></expr></argument>, <argument pos:start="125:68" pos:end="125:75"><expr pos:start="125:68" pos:end="125:75"><operator pos:start="125:68" pos:end="125:68">&amp;</operator><name pos:start="125:69" pos:end="125:75">shift_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:63"><expr pos:start="127:9" pos:end="127:62"><name pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:37">photometric_interpretation</name></name> <operator pos:start="127:39" pos:end="127:39">=</operator> <name pos:start="127:41" pos:end="127:62">TIFF_PHOTOMETRIC_YCBCR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:72"><expr pos:start="129:9" pos:end="129:71"><name pos:start="129:9" pos:end="129:14"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:14">bpp</name></name>                        <operator pos:start="129:39" pos:end="129:39">=</operator> <literal type="number" pos:start="129:41" pos:end="129:43">8</literal> <operator pos:start="129:43" pos:end="129:43">+</operator> <operator pos:start="129:45" pos:end="129:45">(</operator><literal type="number" pos:start="129:46" pos:end="129:47">16</literal> <operator pos:start="129:49" pos:end="129:50">&gt;&gt;</operator> <operator pos:start="129:52" pos:end="129:52">(</operator><name pos:start="129:53" pos:end="129:59">shift_h</name> <operator pos:start="129:61" pos:end="129:61">+</operator> <name pos:start="129:63" pos:end="129:69">shift_v</name><operator pos:start="129:70" pos:end="129:70">)</operator><operator pos:start="129:71" pos:end="129:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:53"><expr pos:start="131:9" pos:end="131:52"><name pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:22">subsampling</name><index pos:start="131:23" pos:end="131:25">[<expr pos:start="131:24" pos:end="131:24"><literal type="number" pos:start="131:24" pos:end="131:24">0</literal></expr>]</index></name>             <operator pos:start="131:39" pos:end="131:39">=</operator> <literal type="number" pos:start="131:41" pos:end="131:41">1</literal> <operator pos:start="131:43" pos:end="131:44">&lt;&lt;</operator> <name pos:start="131:46" pos:end="131:52">shift_h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:53"><expr pos:start="133:9" pos:end="133:52"><name pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:22">subsampling</name><index pos:start="133:23" pos:end="133:25">[<expr pos:start="133:24" pos:end="133:24"><literal type="number" pos:start="133:24" pos:end="133:24">1</literal></expr>]</index></name>             <operator pos:start="133:39" pos:end="133:39">=</operator> <literal type="number" pos:start="133:41" pos:end="133:41">1</literal> <operator pos:start="133:43" pos:end="133:44">&lt;&lt;</operator> <name pos:start="133:46" pos:end="133:52">shift_v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:42"><expr pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:23">bpp_tab_size</name></name>               <operator pos:start="135:39" pos:end="135:39">=</operator> <literal type="number" pos:start="135:41" pos:end="135:41">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:42"><expr pos:start="137:9" pos:end="137:41"><name pos:start="137:9" pos:end="137:14">is_yuv</name>                        <operator pos:start="137:39" pos:end="137:39">=</operator> <literal type="number" pos:start="137:41" pos:end="137:41">1</literal></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <default pos:start="141:5" pos:end="141:12">default:</default>

        <expr_stmt pos:start="143:9" pos:end="145:56"><expr pos:start="143:9" pos:end="145:55"><call pos:start="143:9" pos:end="145:55"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="145:55">(<argument pos:start="143:16" pos:end="143:23"><expr pos:start="143:16" pos:end="143:23"><name pos:start="143:16" pos:end="143:23"><name pos:start="143:16" pos:end="143:16">s</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:23">avctx</name></name></expr></argument>, <argument pos:start="143:26" pos:end="143:37"><expr pos:start="143:26" pos:end="143:37"><name pos:start="143:26" pos:end="143:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="145:16" pos:end="145:54"><expr pos:start="145:16" pos:end="145:54"><literal type="string" pos:start="145:16" pos:end="145:54">"This colors format is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="153:5" pos:end="167:67"><if pos:start="153:5" pos:end="161:27">if <condition pos:start="153:8" pos:end="157:29">(<expr pos:start="153:9" pos:end="157:28"><name pos:start="153:9" pos:end="153:16"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:16">compr</name></name> <operator pos:start="153:18" pos:end="153:19">==</operator> <name pos:start="153:21" pos:end="153:32">TIFF_DEFLATE</name>       <operator pos:start="153:40" pos:end="153:41">||</operator>

        <name pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:16">compr</name></name> <operator pos:start="155:18" pos:end="155:19">==</operator> <name pos:start="155:21" pos:end="155:38">TIFF_ADOBE_DEFLATE</name> <operator pos:start="155:40" pos:end="155:41">||</operator>

        <name pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:16">compr</name></name> <operator pos:start="157:18" pos:end="157:19">==</operator> <name pos:start="157:21" pos:end="157:28">TIFF_LZW</name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:27"><block_content pos:start="161:9" pos:end="161:27">

        <comment type="line" pos:start="159:9" pos:end="159:34">// best choice for DEFLATE</comment>

        <expr_stmt pos:start="161:9" pos:end="161:27"><expr pos:start="161:9" pos:end="161:26"><name pos:start="161:9" pos:end="161:14"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:14">rps</name></name> <operator pos:start="161:16" pos:end="161:16">=</operator> <name pos:start="161:18" pos:end="161:26"><name pos:start="161:18" pos:end="161:18">s</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:26">height</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="163:5" pos:end="167:67">else<block type="pseudo" pos:start="167:9" pos:end="167:67"><block_content pos:start="167:9" pos:end="167:67">

        <comment type="line" pos:start="165:9" pos:end="165:32">// suggest size of strip</comment>

        <expr_stmt pos:start="167:9" pos:end="167:67"><expr pos:start="167:9" pos:end="167:66"><name pos:start="167:9" pos:end="167:14"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:14">rps</name></name> <operator pos:start="167:16" pos:end="167:16">=</operator> <call pos:start="167:18" pos:end="167:66"><name pos:start="167:18" pos:end="167:22">FFMAX</name><argument_list pos:start="167:23" pos:end="167:66">(<argument pos:start="167:24" pos:end="167:62"><expr pos:start="167:24" pos:end="167:62"><literal type="number" pos:start="167:24" pos:end="167:27">8192</literal> <operator pos:start="167:29" pos:end="167:29">/</operator> <operator pos:start="167:31" pos:end="167:31">(</operator><operator pos:start="167:32" pos:end="167:32">(</operator><operator pos:start="167:33" pos:end="167:33">(</operator><name pos:start="167:34" pos:end="167:41"><name pos:start="167:34" pos:end="167:34">s</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:41">width</name></name> <operator pos:start="167:43" pos:end="167:43">*</operator> <name pos:start="167:45" pos:end="167:50"><name pos:start="167:45" pos:end="167:45">s</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:50">bpp</name></name><operator pos:start="167:51" pos:end="167:51">)</operator> <operator pos:start="167:53" pos:end="167:54">&gt;&gt;</operator> <literal type="number" pos:start="167:56" pos:end="167:56">3</literal><operator pos:start="167:57" pos:end="167:57">)</operator> <operator pos:start="167:59" pos:end="167:59">+</operator> <literal type="number" pos:start="167:61" pos:end="167:61">1</literal><operator pos:start="167:62" pos:end="167:62">)</operator></expr></argument>, <argument pos:start="167:65" pos:end="167:65"><expr pos:start="167:65" pos:end="167:65"><literal type="number" pos:start="167:65" pos:end="167:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="line" pos:start="169:5" pos:end="169:19">// round rps up</comment>

    <expr_stmt pos:start="171:5" pos:end="171:72"><expr pos:start="171:5" pos:end="171:71"><name pos:start="171:5" pos:end="171:10"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:10">rps</name></name> <operator pos:start="171:12" pos:end="171:12">=</operator> <operator pos:start="171:14" pos:end="171:14">(</operator><operator pos:start="171:15" pos:end="171:15">(</operator><name pos:start="171:16" pos:end="171:21"><name pos:start="171:16" pos:end="171:16">s</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:21">rps</name></name> <operator pos:start="171:23" pos:end="171:23">-</operator> <literal type="number" pos:start="171:25" pos:end="171:25">1</literal><operator pos:start="171:26" pos:end="171:26">)</operator> <operator pos:start="171:28" pos:end="171:28">/</operator> <name pos:start="171:30" pos:end="171:46"><name pos:start="171:30" pos:end="171:30">s</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:43">subsampling</name><index pos:start="171:44" pos:end="171:46">[<expr pos:start="171:45" pos:end="171:45"><literal type="number" pos:start="171:45" pos:end="171:45">1</literal></expr>]</index></name> <operator pos:start="171:48" pos:end="171:48">+</operator> <literal type="number" pos:start="171:50" pos:end="171:50">1</literal><operator pos:start="171:51" pos:end="171:51">)</operator> <operator pos:start="171:53" pos:end="171:53">*</operator> <name pos:start="171:55" pos:end="171:71"><name pos:start="171:55" pos:end="171:55">s</name><operator pos:start="171:56" pos:end="171:57">-&gt;</operator><name pos:start="171:58" pos:end="171:68">subsampling</name><index pos:start="171:69" pos:end="171:71">[<expr pos:start="171:70" pos:end="171:70"><literal type="number" pos:start="171:70" pos:end="171:70">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:42"><expr pos:start="175:5" pos:end="175:41"><name pos:start="175:5" pos:end="175:10">strips</name> <operator pos:start="175:12" pos:end="175:12">=</operator> <operator pos:start="175:14" pos:end="175:14">(</operator><name pos:start="175:15" pos:end="175:23"><name pos:start="175:15" pos:end="175:15">s</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:23">height</name></name> <operator pos:start="175:25" pos:end="175:25">-</operator> <literal type="number" pos:start="175:27" pos:end="175:27">1</literal><operator pos:start="175:28" pos:end="175:28">)</operator> <operator pos:start="175:30" pos:end="175:30">/</operator> <name pos:start="175:32" pos:end="175:37"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:37">rps</name></name> <operator pos:start="175:39" pos:end="175:39">+</operator> <literal type="number" pos:start="175:41" pos:end="175:41">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="181:57"><expr pos:start="179:5" pos:end="181:56"><name pos:start="179:5" pos:end="179:15">packet_size</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <name pos:start="179:19" pos:end="179:31"><name pos:start="179:19" pos:end="179:23">avctx</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:31">height</name></name> <operator pos:start="179:33" pos:end="179:33">*</operator> <operator pos:start="179:35" pos:end="179:35">(</operator><operator pos:start="179:36" pos:end="179:36">(</operator><name pos:start="179:37" pos:end="179:48"><name pos:start="179:37" pos:end="179:41">avctx</name><operator pos:start="179:42" pos:end="179:43">-&gt;</operator><name pos:start="179:44" pos:end="179:48">width</name></name> <operator pos:start="179:50" pos:end="179:50">*</operator> <name pos:start="179:52" pos:end="179:57"><name pos:start="179:52" pos:end="179:52">s</name><operator pos:start="179:53" pos:end="179:54">-&gt;</operator><name pos:start="179:55" pos:end="179:57">bpp</name></name> <operator pos:start="179:59" pos:end="179:59">+</operator> <literal type="number" pos:start="179:61" pos:end="179:61">7</literal><operator pos:start="179:62" pos:end="179:62">)</operator> <operator pos:start="179:64" pos:end="179:65">&gt;&gt;</operator> <literal type="number" pos:start="179:67" pos:end="179:67">3</literal><operator pos:start="179:68" pos:end="179:68">)</operator> <operator pos:start="179:70" pos:end="179:70">*</operator> <literal type="number" pos:start="179:72" pos:end="179:74">2</literal> <operator pos:start="179:74" pos:end="179:74">+</operator>

                  <name pos:start="181:19" pos:end="181:31"><name pos:start="181:19" pos:end="181:23">avctx</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:31">height</name></name> <operator pos:start="181:33" pos:end="181:33">*</operator> <literal type="number" pos:start="181:35" pos:end="181:37">4</literal> <operator pos:start="181:37" pos:end="181:37">+</operator> <name pos:start="181:39" pos:end="181:56">FF_MIN_BUFFER_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="185:5" pos:end="193:5"><if pos:start="185:5" pos:end="193:5">if <condition pos:start="185:8" pos:end="187:52">(<expr pos:start="185:9" pos:end="187:51"><operator pos:start="185:9" pos:end="185:9">!</operator><name pos:start="185:10" pos:end="185:18"><name pos:start="185:10" pos:end="185:12">pkt</name><operator pos:start="185:13" pos:end="185:14">-&gt;</operator><name pos:start="185:15" pos:end="185:18">data</name></name> <operator pos:start="185:20" pos:end="185:21">&amp;&amp;</operator>

        <operator pos:start="187:9" pos:end="187:9">(</operator><name pos:start="187:10" pos:end="187:12">ret</name> <operator pos:start="187:14" pos:end="187:14">=</operator> <call pos:start="187:16" pos:end="187:46"><name pos:start="187:16" pos:end="187:28">av_new_packet</name><argument_list pos:start="187:29" pos:end="187:46">(<argument pos:start="187:30" pos:end="187:32"><expr pos:start="187:30" pos:end="187:32"><name pos:start="187:30" pos:end="187:32">pkt</name></expr></argument>, <argument pos:start="187:35" pos:end="187:45"><expr pos:start="187:35" pos:end="187:45"><name pos:start="187:35" pos:end="187:45">packet_size</name></expr></argument>)</argument_list></call><operator pos:start="187:47" pos:end="187:47">)</operator> <operator pos:start="187:49" pos:end="187:49">&lt;</operator> <literal type="number" pos:start="187:51" pos:end="187:51">0</literal></expr>)</condition> <block pos:start="187:54" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:19">

        <expr_stmt pos:start="189:9" pos:end="189:70"><expr pos:start="189:9" pos:end="189:69"><call pos:start="189:9" pos:end="189:69"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="189:69">(<argument pos:start="189:16" pos:end="189:20"><expr pos:start="189:16" pos:end="189:20"><name pos:start="189:16" pos:end="189:20">avctx</name></expr></argument>, <argument pos:start="189:23" pos:end="189:34"><expr pos:start="189:23" pos:end="189:34"><name pos:start="189:23" pos:end="189:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:37" pos:end="189:68"><expr pos:start="189:37" pos:end="189:68"><literal type="string" pos:start="189:37" pos:end="189:68">"Error getting output packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:19">return <expr pos:start="191:16" pos:end="191:18"><name pos:start="191:16" pos:end="191:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:29"><expr pos:start="195:5" pos:end="195:28"><name pos:start="195:5" pos:end="195:7">ptr</name>          <operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:28"><name pos:start="195:20" pos:end="195:22">pkt</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:28">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:29"><expr pos:start="197:5" pos:end="197:28"><name pos:start="197:5" pos:end="197:16"><name pos:start="197:5" pos:end="197:5">s</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:16">buf_start</name></name> <operator pos:start="197:18" pos:end="197:18">=</operator> <name pos:start="197:20" pos:end="197:28"><name pos:start="197:20" pos:end="197:22">pkt</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:28">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:24"><expr pos:start="199:5" pos:end="199:23"><name pos:start="199:5" pos:end="199:10"><name pos:start="199:5" pos:end="199:5">s</name><operator pos:start="199:6" pos:end="199:7">-&gt;</operator><name pos:start="199:8" pos:end="199:10">buf</name></name>       <operator pos:start="199:18" pos:end="199:18">=</operator> <operator pos:start="199:20" pos:end="199:20">&amp;</operator><name pos:start="199:21" pos:end="199:23">ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:29"><expr pos:start="201:5" pos:end="201:28"><name pos:start="201:5" pos:end="201:15"><name pos:start="201:5" pos:end="201:5">s</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:15">buf_size</name></name>  <operator pos:start="201:18" pos:end="201:18">=</operator> <name pos:start="201:20" pos:end="201:28"><name pos:start="201:20" pos:end="201:22">pkt</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:28">size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="205:5" pos:end="207:18"><if pos:start="205:5" pos:end="207:18">if <condition pos:start="205:8" pos:end="205:25">(<expr pos:start="205:9" pos:end="205:24"><call pos:start="205:9" pos:end="205:24"><name pos:start="205:9" pos:end="205:18">check_size</name><argument_list pos:start="205:19" pos:end="205:24">(<argument pos:start="205:20" pos:end="205:20"><expr pos:start="205:20" pos:end="205:20"><name pos:start="205:20" pos:end="205:20">s</name></expr></argument>, <argument pos:start="205:23" pos:end="205:23"><expr pos:start="205:23" pos:end="205:23"><literal type="number" pos:start="205:23" pos:end="205:23">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:18"><block_content pos:start="207:9" pos:end="207:18">

        <goto pos:start="207:9" pos:end="207:18">goto <name pos:start="207:14" pos:end="207:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="211:5" pos:end="211:19">// write header</comment>

    <expr_stmt pos:start="213:5" pos:end="213:38"><expr pos:start="213:5" pos:end="213:37"><call pos:start="213:5" pos:end="213:37"><name pos:start="213:5" pos:end="213:23">bytestream_put_le16</name><argument_list pos:start="213:24" pos:end="213:37">(<argument pos:start="213:25" pos:end="213:28"><expr pos:start="213:25" pos:end="213:28"><operator pos:start="213:25" pos:end="213:25">&amp;</operator><name pos:start="213:26" pos:end="213:28">ptr</name></expr></argument>, <argument pos:start="213:31" pos:end="213:36"><expr pos:start="213:31" pos:end="213:36"><literal type="number" pos:start="213:31" pos:end="213:36">0x4949</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:34"><expr pos:start="215:5" pos:end="215:33"><call pos:start="215:5" pos:end="215:33"><name pos:start="215:5" pos:end="215:23">bytestream_put_le16</name><argument_list pos:start="215:24" pos:end="215:33">(<argument pos:start="215:25" pos:end="215:28"><expr pos:start="215:25" pos:end="215:28"><operator pos:start="215:25" pos:end="215:25">&amp;</operator><name pos:start="215:26" pos:end="215:28">ptr</name></expr></argument>, <argument pos:start="215:31" pos:end="215:32"><expr pos:start="215:31" pos:end="215:32"><literal type="number" pos:start="215:31" pos:end="215:32">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:17"><expr pos:start="219:5" pos:end="219:16"><name pos:start="219:5" pos:end="219:10">offset</name> <operator pos:start="219:12" pos:end="219:12">=</operator> <name pos:start="219:14" pos:end="219:16">ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:33"><expr pos:start="221:5" pos:end="221:32"><call pos:start="221:5" pos:end="221:32"><name pos:start="221:5" pos:end="221:23">bytestream_put_le32</name><argument_list pos:start="221:24" pos:end="221:32">(<argument pos:start="221:25" pos:end="221:28"><expr pos:start="221:25" pos:end="221:28"><operator pos:start="221:25" pos:end="221:25">&amp;</operator><name pos:start="221:26" pos:end="221:28">ptr</name></expr></argument>, <argument pos:start="221:31" pos:end="221:31"><expr pos:start="221:31" pos:end="221:31"><literal type="number" pos:start="221:31" pos:end="221:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:67"><expr pos:start="225:5" pos:end="225:66"><name pos:start="225:5" pos:end="225:15">strip_sizes</name>   <operator pos:start="225:19" pos:end="225:19">=</operator> <call pos:start="225:21" pos:end="225:66"><name pos:start="225:21" pos:end="225:36">av_mallocz_array</name><argument_list pos:start="225:37" pos:end="225:66">(<argument pos:start="225:38" pos:end="225:43"><expr pos:start="225:38" pos:end="225:43"><name pos:start="225:38" pos:end="225:43">strips</name></expr></argument>, <argument pos:start="225:46" pos:end="225:65"><expr pos:start="225:46" pos:end="225:65"><sizeof pos:start="225:46" pos:end="225:65">sizeof<argument_list pos:start="225:52" pos:end="225:65">(<argument pos:start="225:53" pos:end="225:64"><expr pos:start="225:53" pos:end="225:64"><operator pos:start="225:53" pos:end="225:53">*</operator><name pos:start="225:54" pos:end="225:64">strip_sizes</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:69"><expr pos:start="227:5" pos:end="227:68"><name pos:start="227:5" pos:end="227:17">strip_offsets</name> <operator pos:start="227:19" pos:end="227:19">=</operator> <call pos:start="227:21" pos:end="227:68"><name pos:start="227:21" pos:end="227:36">av_mallocz_array</name><argument_list pos:start="227:37" pos:end="227:68">(<argument pos:start="227:38" pos:end="227:43"><expr pos:start="227:38" pos:end="227:43"><name pos:start="227:38" pos:end="227:43">strips</name></expr></argument>, <argument pos:start="227:46" pos:end="227:67"><expr pos:start="227:46" pos:end="227:67"><sizeof pos:start="227:46" pos:end="227:67">sizeof<argument_list pos:start="227:52" pos:end="227:67">(<argument pos:start="227:53" pos:end="227:66"><expr pos:start="227:53" pos:end="227:66"><operator pos:start="227:53" pos:end="227:53">*</operator><name pos:start="227:54" pos:end="227:66">strip_offsets</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="235:5"><if pos:start="229:5" pos:end="235:5">if <condition pos:start="229:8" pos:end="229:39">(<expr pos:start="229:9" pos:end="229:38"><operator pos:start="229:9" pos:end="229:9">!</operator><name pos:start="229:10" pos:end="229:20">strip_sizes</name> <operator pos:start="229:22" pos:end="229:23">||</operator> <operator pos:start="229:25" pos:end="229:25">!</operator><name pos:start="229:26" pos:end="229:38">strip_offsets</name></expr>)</condition> <block pos:start="229:41" pos:end="235:5">{<block_content pos:start="231:9" pos:end="233:18">

        <expr_stmt pos:start="231:9" pos:end="231:30"><expr pos:start="231:9" pos:end="231:29"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:29"><name pos:start="231:15" pos:end="231:21">AVERROR</name><argument_list pos:start="231:22" pos:end="231:29">(<argument pos:start="231:23" pos:end="231:28"><expr pos:start="231:23" pos:end="231:28"><name pos:start="231:23" pos:end="231:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="233:9" pos:end="233:18">goto <name pos:start="233:14" pos:end="233:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="241:69"><expr pos:start="239:5" pos:end="241:68"><name pos:start="239:5" pos:end="239:17">bytes_per_row</name> <operator pos:start="239:19" pos:end="239:19">=</operator> <operator pos:start="239:21" pos:end="239:21">(</operator><operator pos:start="239:22" pos:end="239:22">(</operator><operator pos:start="239:23" pos:end="239:23">(</operator><name pos:start="239:24" pos:end="239:31"><name pos:start="239:24" pos:end="239:24">s</name><operator pos:start="239:25" pos:end="239:26">-&gt;</operator><name pos:start="239:27" pos:end="239:31">width</name></name> <operator pos:start="239:33" pos:end="239:33">-</operator> <literal type="number" pos:start="239:35" pos:end="239:35">1</literal><operator pos:start="239:36" pos:end="239:36">)</operator> <operator pos:start="239:38" pos:end="239:38">/</operator> <name pos:start="239:40" pos:end="239:56"><name pos:start="239:40" pos:end="239:40">s</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:53">subsampling</name><index pos:start="239:54" pos:end="239:56">[<expr pos:start="239:55" pos:end="239:55"><literal type="number" pos:start="239:55" pos:end="239:55">0</literal></expr>]</index></name> <operator pos:start="239:58" pos:end="239:58">+</operator> <literal type="number" pos:start="239:60" pos:end="239:60">1</literal><operator pos:start="239:61" pos:end="239:61">)</operator> <operator pos:start="239:63" pos:end="239:63">*</operator> <name pos:start="239:65" pos:end="239:70"><name pos:start="239:65" pos:end="239:65">s</name><operator pos:start="239:66" pos:end="239:67">-&gt;</operator><name pos:start="239:68" pos:end="239:70">bpp</name></name> <operator pos:start="239:72" pos:end="239:72">*</operator>

                     <name pos:start="241:22" pos:end="241:38"><name pos:start="241:22" pos:end="241:22">s</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:35">subsampling</name><index pos:start="241:36" pos:end="241:38">[<expr pos:start="241:37" pos:end="241:37"><literal type="number" pos:start="241:37" pos:end="241:37">0</literal></expr>]</index></name> <operator pos:start="241:40" pos:end="241:40">*</operator> <name pos:start="241:42" pos:end="241:58"><name pos:start="241:42" pos:end="241:42">s</name><operator pos:start="241:43" pos:end="241:44">-&gt;</operator><name pos:start="241:45" pos:end="241:55">subsampling</name><index pos:start="241:56" pos:end="241:58">[<expr pos:start="241:57" pos:end="241:57"><literal type="number" pos:start="241:57" pos:end="241:57">1</literal></expr>]</index></name> <operator pos:start="241:60" pos:end="241:60">+</operator> <literal type="number" pos:start="241:62" pos:end="241:62">7</literal><operator pos:start="241:63" pos:end="241:63">)</operator> <operator pos:start="241:65" pos:end="241:66">&gt;&gt;</operator> <literal type="number" pos:start="241:68" pos:end="241:68">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="262:0"><if pos:start="243:5" pos:end="262:0">if <condition pos:start="243:8" pos:end="243:15">(<expr pos:start="243:9" pos:end="243:14"><name pos:start="243:9" pos:end="243:14">is_yuv</name></expr>)</condition> <block pos:start="243:17" pos:end="262:0">{<block_content pos:start="245:9" pos:end="255:9">

        <expr_stmt pos:start="245:9" pos:end="245:44"><expr pos:start="245:9" pos:end="245:43"><name pos:start="245:9" pos:end="245:16">yuv_line</name> <operator pos:start="245:18" pos:end="245:18">=</operator> <call pos:start="245:20" pos:end="245:43"><name pos:start="245:20" pos:end="245:28">av_malloc</name><argument_list pos:start="245:29" pos:end="245:43">(<argument pos:start="245:30" pos:end="245:42"><expr pos:start="245:30" pos:end="245:42"><name pos:start="245:30" pos:end="245:42">bytes_per_row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="255:9"><if pos:start="247:9" pos:end="255:9">if <condition pos:start="247:12" pos:end="247:22">(<expr pos:start="247:13" pos:end="247:21"><operator pos:start="247:13" pos:end="247:13">!</operator><name pos:start="247:14" pos:end="247:21">yuv_line</name></expr>)</condition> <block pos:start="247:24" pos:end="255:9">{<block_content pos:start="249:13" pos:end="253:22">

            <expr_stmt pos:start="249:13" pos:end="249:66"><expr pos:start="249:13" pos:end="249:65"><call pos:start="249:13" pos:end="249:65"><name pos:start="249:13" pos:end="249:18">av_log</name><argument_list pos:start="249:19" pos:end="249:65">(<argument pos:start="249:20" pos:end="249:27"><expr pos:start="249:20" pos:end="249:27"><name pos:start="249:20" pos:end="249:27"><name pos:start="249:20" pos:end="249:20">s</name><operator pos:start="249:21" pos:end="249:22">-&gt;</operator><name pos:start="249:23" pos:end="249:27">avctx</name></name></expr></argument>, <argument pos:start="249:30" pos:end="249:41"><expr pos:start="249:30" pos:end="249:41"><name pos:start="249:30" pos:end="249:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="249:44" pos:end="249:64"><expr pos:start="249:44" pos:end="249:64"><literal type="string" pos:start="249:44" pos:end="249:64">"Not enough memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:34"><expr pos:start="251:13" pos:end="251:33"><name pos:start="251:13" pos:end="251:15">ret</name> <operator pos:start="251:17" pos:end="251:17">=</operator> <call pos:start="251:19" pos:end="251:33"><name pos:start="251:19" pos:end="251:25">AVERROR</name><argument_list pos:start="251:26" pos:end="251:33">(<argument pos:start="251:27" pos:end="251:32"><expr pos:start="251:27" pos:end="251:32"><name pos:start="251:27" pos:end="251:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="253:13" pos:end="253:22">goto <name pos:start="253:18" pos:end="253:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="261:1" pos:end="261:15">#<cpp:directive pos:start="261:2" pos:end="261:3">if</cpp:directive> <expr pos:start="261:5" pos:end="261:15"><name pos:start="261:5" pos:end="261:15">CONFIG_ZLIB</name></expr></cpp:if>

    <if_stmt pos:start="263:5" pos:end="341:5"><if pos:start="263:5" pos:end="325:5">if <condition pos:start="263:8" pos:end="263:67">(<expr pos:start="263:9" pos:end="263:66"><name pos:start="263:9" pos:end="263:16"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:16">compr</name></name> <operator pos:start="263:18" pos:end="263:19">==</operator> <name pos:start="263:21" pos:end="263:32">TIFF_DEFLATE</name> <operator pos:start="263:34" pos:end="263:35">||</operator> <name pos:start="263:37" pos:end="263:44"><name pos:start="263:37" pos:end="263:37">s</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:44">compr</name></name> <operator pos:start="263:46" pos:end="263:47">==</operator> <name pos:start="263:49" pos:end="263:66">TIFF_ADOBE_DEFLATE</name></expr>)</condition> <block pos:start="263:69" pos:end="325:5">{<block_content pos:start="265:9" pos:end="323:60">

        <decl_stmt pos:start="265:9" pos:end="265:22"><decl pos:start="265:9" pos:end="265:21"><type pos:start="265:9" pos:end="265:17"><name pos:start="265:9" pos:end="265:15">uint8_t</name> <modifier pos:start="265:17" pos:end="265:17">*</modifier></type><name pos:start="265:18" pos:end="265:21">zbuf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="267:9" pos:end="267:21"><decl pos:start="267:9" pos:end="267:16"><type pos:start="267:9" pos:end="267:11"><name pos:start="267:9" pos:end="267:11">int</name></type> <name pos:start="267:13" pos:end="267:16">zlen</name></decl>, <decl pos:start="267:19" pos:end="267:20"><type ref="prev" pos:start="267:9" pos:end="267:11"/><name pos:start="267:19" pos:end="267:20">zn</name></decl>;</decl_stmt>

        <decl_stmt pos:start="269:9" pos:end="269:14"><decl pos:start="269:9" pos:end="269:13"><type pos:start="269:9" pos:end="269:11"><name pos:start="269:9" pos:end="269:11">int</name></type> <name pos:start="269:13" pos:end="269:13">j</name></decl>;</decl_stmt>



        <expr_stmt pos:start="273:9" pos:end="273:38"><expr pos:start="273:9" pos:end="273:37"><name pos:start="273:9" pos:end="273:12">zlen</name> <operator pos:start="273:14" pos:end="273:14">=</operator> <name pos:start="273:16" pos:end="273:28">bytes_per_row</name> <operator pos:start="273:30" pos:end="273:30">*</operator> <name pos:start="273:32" pos:end="273:37"><name pos:start="273:32" pos:end="273:32">s</name><operator pos:start="273:33" pos:end="273:34">-&gt;</operator><name pos:start="273:35" pos:end="273:37">rps</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:31"><expr pos:start="275:9" pos:end="275:30"><name pos:start="275:9" pos:end="275:12">zbuf</name> <operator pos:start="275:14" pos:end="275:14">=</operator> <call pos:start="275:16" pos:end="275:30"><name pos:start="275:16" pos:end="275:24">av_malloc</name><argument_list pos:start="275:25" pos:end="275:30">(<argument pos:start="275:26" pos:end="275:29"><expr pos:start="275:26" pos:end="275:29"><name pos:start="275:26" pos:end="275:29">zlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="277:9" pos:end="283:9"><if pos:start="277:9" pos:end="283:9">if <condition pos:start="277:12" pos:end="277:18">(<expr pos:start="277:13" pos:end="277:17"><operator pos:start="277:13" pos:end="277:13">!</operator><name pos:start="277:14" pos:end="277:17">zbuf</name></expr>)</condition> <block pos:start="277:20" pos:end="283:9">{<block_content pos:start="279:13" pos:end="281:22">

            <expr_stmt pos:start="279:13" pos:end="279:34"><expr pos:start="279:13" pos:end="279:33"><name pos:start="279:13" pos:end="279:15">ret</name> <operator pos:start="279:17" pos:end="279:17">=</operator> <call pos:start="279:19" pos:end="279:33"><name pos:start="279:19" pos:end="279:25">AVERROR</name><argument_list pos:start="279:26" pos:end="279:33">(<argument pos:start="279:27" pos:end="279:32"><expr pos:start="279:27" pos:end="279:32"><name pos:start="279:27" pos:end="279:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="281:13" pos:end="281:22">goto <name pos:start="281:18" pos:end="281:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:43"><expr pos:start="285:9" pos:end="285:42"><name pos:start="285:9" pos:end="285:24"><name pos:start="285:9" pos:end="285:21">strip_offsets</name><index pos:start="285:22" pos:end="285:24">[<expr pos:start="285:23" pos:end="285:23"><literal type="number" pos:start="285:23" pos:end="285:23">0</literal></expr>]</index></name> <operator pos:start="285:26" pos:end="285:26">=</operator> <name pos:start="285:28" pos:end="285:30">ptr</name> <operator pos:start="285:32" pos:end="285:32">-</operator> <name pos:start="285:34" pos:end="285:42"><name pos:start="285:34" pos:end="285:36">pkt</name><operator pos:start="285:37" pos:end="285:38">-&gt;</operator><name pos:start="285:39" pos:end="285:42">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:29"><expr pos:start="287:9" pos:end="287:28"><name pos:start="287:9" pos:end="287:10">zn</name>               <operator pos:start="287:26" pos:end="287:26">=</operator> <literal type="number" pos:start="287:28" pos:end="287:28">0</literal></expr>;</expr_stmt>

        <for pos:start="289:9" pos:end="307:9">for <control pos:start="289:13" pos:end="289:36">(<init pos:start="289:14" pos:end="289:19"><expr pos:start="289:14" pos:end="289:18"><name pos:start="289:14" pos:end="289:14">j</name> <operator pos:start="289:16" pos:end="289:16">=</operator> <literal type="number" pos:start="289:18" pos:end="289:18">0</literal></expr>;</init> <condition pos:start="289:21" pos:end="289:31"><expr pos:start="289:21" pos:end="289:30"><name pos:start="289:21" pos:end="289:21">j</name> <operator pos:start="289:23" pos:end="289:23">&lt;</operator> <name pos:start="289:25" pos:end="289:30"><name pos:start="289:25" pos:end="289:25">s</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:30">rps</name></name></expr>;</condition> <incr pos:start="289:33" pos:end="289:35"><expr pos:start="289:33" pos:end="289:35"><name pos:start="289:33" pos:end="289:33">j</name><operator pos:start="289:34" pos:end="289:35">++</operator></expr></incr>)</control> <block pos:start="289:38" pos:end="307:9">{<block_content pos:start="291:13" pos:end="305:32">

            <if_stmt pos:start="291:13" pos:end="303:71"><if pos:start="291:13" pos:end="299:13">if <condition pos:start="291:16" pos:end="291:23">(<expr pos:start="291:17" pos:end="291:22"><name pos:start="291:17" pos:end="291:22">is_yuv</name></expr>)</condition> <block pos:start="291:25" pos:end="299:13">{<block_content pos:start="293:17" pos:end="297:43">

                <expr_stmt pos:start="293:17" pos:end="293:44"><expr pos:start="293:17" pos:end="293:43"><call pos:start="293:17" pos:end="293:43"><name pos:start="293:17" pos:end="293:24">pack_yuv</name><argument_list pos:start="293:25" pos:end="293:43">(<argument pos:start="293:26" pos:end="293:26"><expr pos:start="293:26" pos:end="293:26"><name pos:start="293:26" pos:end="293:26">s</name></expr></argument>, <argument pos:start="293:29" pos:end="293:29"><expr pos:start="293:29" pos:end="293:29"><name pos:start="293:29" pos:end="293:29">p</name></expr></argument>, <argument pos:start="293:32" pos:end="293:39"><expr pos:start="293:32" pos:end="293:39"><name pos:start="293:32" pos:end="293:39">yuv_line</name></expr></argument>, <argument pos:start="293:42" pos:end="293:42"><expr pos:start="293:42" pos:end="293:42"><name pos:start="293:42" pos:end="293:42">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:59"><expr pos:start="295:17" pos:end="295:58"><call pos:start="295:17" pos:end="295:58"><name pos:start="295:17" pos:end="295:22">memcpy</name><argument_list pos:start="295:23" pos:end="295:58">(<argument pos:start="295:24" pos:end="295:32"><expr pos:start="295:24" pos:end="295:32"><name pos:start="295:24" pos:end="295:27">zbuf</name> <operator pos:start="295:29" pos:end="295:29">+</operator> <name pos:start="295:31" pos:end="295:32">zn</name></expr></argument>, <argument pos:start="295:35" pos:end="295:42"><expr pos:start="295:35" pos:end="295:42"><name pos:start="295:35" pos:end="295:42">yuv_line</name></expr></argument>, <argument pos:start="295:45" pos:end="295:57"><expr pos:start="295:45" pos:end="295:57"><name pos:start="295:45" pos:end="295:57">bytes_per_row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:43"><expr pos:start="297:17" pos:end="297:42"><name pos:start="297:17" pos:end="297:17">j</name> <operator pos:start="297:19" pos:end="297:20">+=</operator> <name pos:start="297:22" pos:end="297:38"><name pos:start="297:22" pos:end="297:22">s</name><operator pos:start="297:23" pos:end="297:24">-&gt;</operator><name pos:start="297:25" pos:end="297:35">subsampling</name><index pos:start="297:36" pos:end="297:38">[<expr pos:start="297:37" pos:end="297:37"><literal type="number" pos:start="297:37" pos:end="297:37">1</literal></expr>]</index></name> <operator pos:start="297:40" pos:end="297:40">-</operator> <literal type="number" pos:start="297:42" pos:end="297:42">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="299:15" pos:end="303:71">else<block type="pseudo" pos:start="301:17" pos:end="303:71"><block_content pos:start="301:17" pos:end="303:71">

                <expr_stmt pos:start="301:17" pos:end="303:71"><expr pos:start="301:17" pos:end="303:70"><call pos:start="301:17" pos:end="303:70"><name pos:start="301:17" pos:end="301:22">memcpy</name><argument_list pos:start="301:23" pos:end="303:70">(<argument pos:start="301:24" pos:end="301:47"><expr pos:start="301:24" pos:end="301:47"><name pos:start="301:24" pos:end="301:27">zbuf</name> <operator pos:start="301:29" pos:end="301:29">+</operator> <name pos:start="301:31" pos:end="301:31">j</name> <operator pos:start="301:33" pos:end="301:33">*</operator> <name pos:start="301:35" pos:end="301:47">bytes_per_row</name></expr></argument>,

                       <argument pos:start="303:24" pos:end="303:54"><expr pos:start="303:24" pos:end="303:54"><name pos:start="303:24" pos:end="303:33"><name pos:start="303:24" pos:end="303:24">p</name><operator pos:start="303:25" pos:end="303:26">-&gt;</operator><name pos:start="303:27" pos:end="303:30">data</name><index pos:start="303:31" pos:end="303:33">[<expr pos:start="303:32" pos:end="303:32"><literal type="number" pos:start="303:32" pos:end="303:32">0</literal></expr>]</index></name> <operator pos:start="303:35" pos:end="303:35">+</operator> <name pos:start="303:37" pos:end="303:37">j</name> <operator pos:start="303:39" pos:end="303:39">*</operator> <name pos:start="303:41" pos:end="303:54"><name pos:start="303:41" pos:end="303:41">p</name><operator pos:start="303:42" pos:end="303:43">-&gt;</operator><name pos:start="303:44" pos:end="303:51">linesize</name><index pos:start="303:52" pos:end="303:54">[<expr pos:start="303:53" pos:end="303:53"><literal type="number" pos:start="303:53" pos:end="303:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="303:57" pos:end="303:69"><expr pos:start="303:57" pos:end="303:69"><name pos:start="303:57" pos:end="303:69">bytes_per_row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:32"><expr pos:start="305:13" pos:end="305:31"><name pos:start="305:13" pos:end="305:14">zn</name> <operator pos:start="305:16" pos:end="305:17">+=</operator> <name pos:start="305:19" pos:end="305:31">bytes_per_row</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="309:9" pos:end="309:55"><expr pos:start="309:9" pos:end="309:54"><name pos:start="309:9" pos:end="309:11">ret</name> <operator pos:start="309:13" pos:end="309:13">=</operator> <call pos:start="309:15" pos:end="309:54"><name pos:start="309:15" pos:end="309:26">encode_strip</name><argument_list pos:start="309:27" pos:end="309:54">(<argument pos:start="309:28" pos:end="309:28"><expr pos:start="309:28" pos:end="309:28"><name pos:start="309:28" pos:end="309:28">s</name></expr></argument>, <argument pos:start="309:31" pos:end="309:34"><expr pos:start="309:31" pos:end="309:34"><name pos:start="309:31" pos:end="309:34">zbuf</name></expr></argument>, <argument pos:start="309:37" pos:end="309:39"><expr pos:start="309:37" pos:end="309:39"><name pos:start="309:37" pos:end="309:39">ptr</name></expr></argument>, <argument pos:start="309:42" pos:end="309:43"><expr pos:start="309:42" pos:end="309:43"><name pos:start="309:42" pos:end="309:43">zn</name></expr></argument>, <argument pos:start="309:46" pos:end="309:53"><expr pos:start="309:46" pos:end="309:53"><name pos:start="309:46" pos:end="309:53"><name pos:start="309:46" pos:end="309:46">s</name><operator pos:start="309:47" pos:end="309:48">-&gt;</operator><name pos:start="309:49" pos:end="309:53">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:22"><expr pos:start="311:9" pos:end="311:21"><call pos:start="311:9" pos:end="311:21"><name pos:start="311:9" pos:end="311:15">av_free</name><argument_list pos:start="311:16" pos:end="311:21">(<argument pos:start="311:17" pos:end="311:20"><expr pos:start="311:17" pos:end="311:20"><name pos:start="311:17" pos:end="311:20">zbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="313:9" pos:end="319:9"><if pos:start="313:9" pos:end="319:9">if <condition pos:start="313:12" pos:end="313:20">(<expr pos:start="313:13" pos:end="313:19"><name pos:start="313:13" pos:end="313:15">ret</name> <operator pos:start="313:17" pos:end="313:17">&lt;</operator> <literal type="number" pos:start="313:19" pos:end="313:19">0</literal></expr>)</condition> <block pos:start="313:22" pos:end="319:9">{<block_content pos:start="315:13" pos:end="317:22">

            <expr_stmt pos:start="315:13" pos:end="315:68"><expr pos:start="315:13" pos:end="315:67"><call pos:start="315:13" pos:end="315:67"><name pos:start="315:13" pos:end="315:18">av_log</name><argument_list pos:start="315:19" pos:end="315:67">(<argument pos:start="315:20" pos:end="315:27"><expr pos:start="315:20" pos:end="315:27"><name pos:start="315:20" pos:end="315:27"><name pos:start="315:20" pos:end="315:20">s</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:27">avctx</name></name></expr></argument>, <argument pos:start="315:30" pos:end="315:41"><expr pos:start="315:30" pos:end="315:41"><name pos:start="315:30" pos:end="315:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="315:44" pos:end="315:66"><expr pos:start="315:44" pos:end="315:66"><literal type="string" pos:start="315:44" pos:end="315:66">"Encode strip failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="317:13" pos:end="317:22">goto <name pos:start="317:18" pos:end="317:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:29"><expr pos:start="321:9" pos:end="321:28"><name pos:start="321:9" pos:end="321:11">ptr</name>           <operator pos:start="321:23" pos:end="321:24">+=</operator> <name pos:start="321:26" pos:end="321:28">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:60"><expr pos:start="323:9" pos:end="323:59"><name pos:start="323:9" pos:end="323:22"><name pos:start="323:9" pos:end="323:19">strip_sizes</name><index pos:start="323:20" pos:end="323:22">[<expr pos:start="323:21" pos:end="323:21"><literal type="number" pos:start="323:21" pos:end="323:21">0</literal></expr>]</index></name> <operator pos:start="323:24" pos:end="323:24">=</operator> <name pos:start="323:26" pos:end="323:28">ptr</name> <operator pos:start="323:30" pos:end="323:30">-</operator> <name pos:start="323:32" pos:end="323:40"><name pos:start="323:32" pos:end="323:34">pkt</name><operator pos:start="323:35" pos:end="323:36">-&gt;</operator><name pos:start="323:37" pos:end="323:40">data</name></name> <operator pos:start="323:42" pos:end="323:42">-</operator> <name pos:start="323:44" pos:end="323:59"><name pos:start="323:44" pos:end="323:56">strip_offsets</name><index pos:start="323:57" pos:end="323:59">[<expr pos:start="323:58" pos:end="323:58"><literal type="number" pos:start="323:58" pos:end="323:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="325:7" pos:end="341:5">else

<cpp:endif pos:start="327:1" pos:end="327:6">#<cpp:directive pos:start="327:2" pos:end="327:6">endif</cpp:directive></cpp:endif>

    if <condition pos:start="329:8" pos:end="329:29">(<expr pos:start="329:9" pos:end="329:28"><name pos:start="329:9" pos:end="329:16"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:16">compr</name></name> <operator pos:start="329:18" pos:end="329:19">==</operator> <name pos:start="329:21" pos:end="329:28">TIFF_LZW</name></expr>)</condition> <block pos:start="329:31" pos:end="341:5">{<block_content pos:start="331:9" pos:end="339:9">

        <expr_stmt pos:start="331:9" pos:end="331:54"><expr pos:start="331:9" pos:end="331:53"><name pos:start="331:9" pos:end="331:15"><name pos:start="331:9" pos:end="331:9">s</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:15">lzws</name></name> <operator pos:start="331:17" pos:end="331:17">=</operator> <call pos:start="331:19" pos:end="331:53"><name pos:start="331:19" pos:end="331:27">av_malloc</name><argument_list pos:start="331:28" pos:end="331:53">(<argument pos:start="331:29" pos:end="331:52"><expr pos:start="331:29" pos:end="331:52"><name pos:start="331:29" pos:end="331:52">ff_lzw_encode_state_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="333:9" pos:end="339:9"><if pos:start="333:9" pos:end="339:9">if <condition pos:start="333:12" pos:end="333:21">(<expr pos:start="333:13" pos:end="333:20"><operator pos:start="333:13" pos:end="333:13">!</operator><name pos:start="333:14" pos:end="333:20"><name pos:start="333:14" pos:end="333:14">s</name><operator pos:start="333:15" pos:end="333:16">-&gt;</operator><name pos:start="333:17" pos:end="333:20">lzws</name></name></expr>)</condition> <block pos:start="333:23" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:22">

            <expr_stmt pos:start="335:13" pos:end="335:34"><expr pos:start="335:13" pos:end="335:33"><name pos:start="335:13" pos:end="335:15">ret</name> <operator pos:start="335:17" pos:end="335:17">=</operator> <call pos:start="335:19" pos:end="335:33"><name pos:start="335:19" pos:end="335:25">AVERROR</name><argument_list pos:start="335:26" pos:end="335:33">(<argument pos:start="335:27" pos:end="335:32"><expr pos:start="335:27" pos:end="335:32"><name pos:start="335:27" pos:end="335:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="337:13" pos:end="337:22">goto <name pos:start="337:18" pos:end="337:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="343:5" pos:end="399:5">for <control pos:start="343:9" pos:end="343:35">(<init pos:start="343:10" pos:end="343:15"><expr pos:start="343:10" pos:end="343:14"><name pos:start="343:10" pos:end="343:10">i</name> <operator pos:start="343:12" pos:end="343:12">=</operator> <literal type="number" pos:start="343:14" pos:end="343:14">0</literal></expr>;</init> <condition pos:start="343:17" pos:end="343:30"><expr pos:start="343:17" pos:end="343:29"><name pos:start="343:17" pos:end="343:17">i</name> <operator pos:start="343:19" pos:end="343:19">&lt;</operator> <name pos:start="343:21" pos:end="343:29"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:29">height</name></name></expr>;</condition> <incr pos:start="343:32" pos:end="343:34"><expr pos:start="343:32" pos:end="343:34"><name pos:start="343:32" pos:end="343:32">i</name><operator pos:start="343:33" pos:end="343:34">++</operator></expr></incr>)</control> <block pos:start="343:37" pos:end="399:5">{<block_content pos:start="345:9" pos:end="397:9">

        <if_stmt pos:start="345:9" pos:end="359:9"><if pos:start="345:9" pos:end="359:9">if <condition pos:start="345:12" pos:end="345:41">(<expr pos:start="345:13" pos:end="345:40"><name pos:start="345:13" pos:end="345:35"><name pos:start="345:13" pos:end="345:23">strip_sizes</name><index pos:start="345:24" pos:end="345:35">[<expr pos:start="345:25" pos:end="345:34"><name pos:start="345:25" pos:end="345:25">i</name> <operator pos:start="345:27" pos:end="345:27">/</operator> <name pos:start="345:29" pos:end="345:34"><name pos:start="345:29" pos:end="345:29">s</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:34">rps</name></name></expr>]</index></name> <operator pos:start="345:37" pos:end="345:38">==</operator> <literal type="number" pos:start="345:40" pos:end="345:40">0</literal></expr>)</condition> <block pos:start="345:43" pos:end="359:9">{<block_content pos:start="347:13" pos:end="357:56">

            <if_stmt pos:start="347:13" pos:end="355:13"><if pos:start="347:13" pos:end="355:13">if <condition pos:start="347:16" pos:end="347:37">(<expr pos:start="347:17" pos:end="347:36"><name pos:start="347:17" pos:end="347:24"><name pos:start="347:17" pos:end="347:17">s</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:24">compr</name></name> <operator pos:start="347:26" pos:end="347:27">==</operator> <name pos:start="347:29" pos:end="347:36">TIFF_LZW</name></expr>)</condition> <block pos:start="347:39" pos:end="355:13">{<block_content pos:start="349:17" pos:end="353:62">

                <expr_stmt pos:start="349:17" pos:end="353:62"><expr pos:start="349:17" pos:end="353:61"><call pos:start="349:17" pos:end="353:61"><name pos:start="349:17" pos:end="349:34">ff_lzw_encode_init</name><argument_list pos:start="349:35" pos:end="353:61">(<argument pos:start="349:36" pos:end="349:42"><expr pos:start="349:36" pos:end="349:42"><name pos:start="349:36" pos:end="349:42"><name pos:start="349:36" pos:end="349:36">s</name><operator pos:start="349:37" pos:end="349:38">-&gt;</operator><name pos:start="349:39" pos:end="349:42">lzws</name></name></expr></argument>, <argument pos:start="349:45" pos:end="349:47"><expr pos:start="349:45" pos:end="349:47"><name pos:start="349:45" pos:end="349:47">ptr</name></expr></argument>,

                                   <argument pos:start="351:36" pos:end="351:73"><expr pos:start="351:36" pos:end="351:73"><name pos:start="351:36" pos:end="351:46"><name pos:start="351:36" pos:end="351:36">s</name><operator pos:start="351:37" pos:end="351:38">-&gt;</operator><name pos:start="351:39" pos:end="351:46">buf_size</name></name> <operator pos:start="351:48" pos:end="351:48">-</operator> <operator pos:start="351:50" pos:end="351:50">(</operator><operator pos:start="351:51" pos:end="351:51">*</operator><name pos:start="351:52" pos:end="351:57"><name pos:start="351:52" pos:end="351:52">s</name><operator pos:start="351:53" pos:end="351:54">-&gt;</operator><name pos:start="351:55" pos:end="351:57">buf</name></name> <operator pos:start="351:59" pos:end="351:59">-</operator> <name pos:start="351:61" pos:end="351:72"><name pos:start="351:61" pos:end="351:61">s</name><operator pos:start="351:62" pos:end="351:63">-&gt;</operator><name pos:start="351:64" pos:end="351:72">buf_start</name></name><operator pos:start="351:73" pos:end="351:73">)</operator></expr></argument>,

                                   <argument pos:start="353:36" pos:end="353:37"><expr pos:start="353:36" pos:end="353:37"><literal type="number" pos:start="353:36" pos:end="353:37">12</literal></expr></argument>, <argument pos:start="353:40" pos:end="353:50"><expr pos:start="353:40" pos:end="353:50"><name pos:start="353:40" pos:end="353:50">FF_LZW_TIFF</name></expr></argument>, <argument pos:start="353:53" pos:end="353:60"><expr pos:start="353:53" pos:end="353:60"><name pos:start="353:53" pos:end="353:60">put_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:56"><expr pos:start="357:13" pos:end="357:55"><name pos:start="357:13" pos:end="357:37"><name pos:start="357:13" pos:end="357:25">strip_offsets</name><index pos:start="357:26" pos:end="357:37">[<expr pos:start="357:27" pos:end="357:36"><name pos:start="357:27" pos:end="357:27">i</name> <operator pos:start="357:29" pos:end="357:29">/</operator> <name pos:start="357:31" pos:end="357:36"><name pos:start="357:31" pos:end="357:31">s</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:36">rps</name></name></expr>]</index></name> <operator pos:start="357:39" pos:end="357:39">=</operator> <name pos:start="357:41" pos:end="357:43">ptr</name> <operator pos:start="357:45" pos:end="357:45">-</operator> <name pos:start="357:47" pos:end="357:55"><name pos:start="357:47" pos:end="357:49">pkt</name><operator pos:start="357:50" pos:end="357:51">-&gt;</operator><name pos:start="357:52" pos:end="357:55">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="361:9" pos:end="373:61"><if pos:start="361:9" pos:end="369:9">if <condition pos:start="361:12" pos:end="361:19">(<expr pos:start="361:13" pos:end="361:18"><name pos:start="361:13" pos:end="361:18">is_yuv</name></expr>)</condition> <block pos:start="361:21" pos:end="369:9">{<block_content pos:start="363:13" pos:end="367:40">

            <expr_stmt pos:start="363:13" pos:end="363:40"><expr pos:start="363:13" pos:end="363:39"><call pos:start="363:13" pos:end="363:39"><name pos:start="363:13" pos:end="363:20">pack_yuv</name><argument_list pos:start="363:21" pos:end="363:39">(<argument pos:start="363:22" pos:end="363:22"><expr pos:start="363:22" pos:end="363:22"><name pos:start="363:22" pos:end="363:22">s</name></expr></argument>, <argument pos:start="363:25" pos:end="363:25"><expr pos:start="363:25" pos:end="363:25"><name pos:start="363:25" pos:end="363:25">p</name></expr></argument>, <argument pos:start="363:28" pos:end="363:35"><expr pos:start="363:28" pos:end="363:35"><name pos:start="363:28" pos:end="363:35">yuv_line</name></expr></argument>, <argument pos:start="363:38" pos:end="363:38"><expr pos:start="363:38" pos:end="363:38"><name pos:start="363:38" pos:end="363:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:74"><expr pos:start="365:13" pos:end="365:73"><name pos:start="365:13" pos:end="365:15">ret</name> <operator pos:start="365:17" pos:end="365:17">=</operator> <call pos:start="365:19" pos:end="365:73"><name pos:start="365:19" pos:end="365:30">encode_strip</name><argument_list pos:start="365:31" pos:end="365:73">(<argument pos:start="365:32" pos:end="365:32"><expr pos:start="365:32" pos:end="365:32"><name pos:start="365:32" pos:end="365:32">s</name></expr></argument>, <argument pos:start="365:35" pos:end="365:42"><expr pos:start="365:35" pos:end="365:42"><name pos:start="365:35" pos:end="365:42">yuv_line</name></expr></argument>, <argument pos:start="365:45" pos:end="365:47"><expr pos:start="365:45" pos:end="365:47"><name pos:start="365:45" pos:end="365:47">ptr</name></expr></argument>, <argument pos:start="365:50" pos:end="365:62"><expr pos:start="365:50" pos:end="365:62"><name pos:start="365:50" pos:end="365:62">bytes_per_row</name></expr></argument>, <argument pos:start="365:65" pos:end="365:72"><expr pos:start="365:65" pos:end="365:72"><name pos:start="365:65" pos:end="365:72"><name pos:start="365:65" pos:end="365:65">s</name><operator pos:start="365:66" pos:end="365:67">-&gt;</operator><name pos:start="365:68" pos:end="365:72">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:40"><expr pos:start="367:13" pos:end="367:39"><name pos:start="367:13" pos:end="367:13">i</name>  <operator pos:start="367:16" pos:end="367:17">+=</operator> <name pos:start="367:19" pos:end="367:35"><name pos:start="367:19" pos:end="367:19">s</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:32">subsampling</name><index pos:start="367:33" pos:end="367:35">[<expr pos:start="367:34" pos:end="367:34"><literal type="number" pos:start="367:34" pos:end="367:34">1</literal></expr>]</index></name> <operator pos:start="367:37" pos:end="367:37">-</operator> <literal type="number" pos:start="367:39" pos:end="367:39">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="369:11" pos:end="373:61">else<block type="pseudo" pos:start="371:13" pos:end="373:61"><block_content pos:start="371:13" pos:end="373:61">

            <expr_stmt pos:start="371:13" pos:end="373:61"><expr pos:start="371:13" pos:end="373:60"><name pos:start="371:13" pos:end="371:15">ret</name> <operator pos:start="371:17" pos:end="371:17">=</operator> <call pos:start="371:19" pos:end="373:60"><name pos:start="371:19" pos:end="371:30">encode_strip</name><argument_list pos:start="371:31" pos:end="373:60">(<argument pos:start="371:32" pos:end="371:32"><expr pos:start="371:32" pos:end="371:32"><name pos:start="371:32" pos:end="371:32">s</name></expr></argument>, <argument pos:start="371:35" pos:end="371:65"><expr pos:start="371:35" pos:end="371:65"><name pos:start="371:35" pos:end="371:44"><name pos:start="371:35" pos:end="371:35">p</name><operator pos:start="371:36" pos:end="371:37">-&gt;</operator><name pos:start="371:38" pos:end="371:41">data</name><index pos:start="371:42" pos:end="371:44">[<expr pos:start="371:43" pos:end="371:43"><literal type="number" pos:start="371:43" pos:end="371:43">0</literal></expr>]</index></name> <operator pos:start="371:46" pos:end="371:46">+</operator> <name pos:start="371:48" pos:end="371:48">i</name> <operator pos:start="371:50" pos:end="371:50">*</operator> <name pos:start="371:52" pos:end="371:65"><name pos:start="371:52" pos:end="371:52">p</name><operator pos:start="371:53" pos:end="371:54">-&gt;</operator><name pos:start="371:55" pos:end="371:62">linesize</name><index pos:start="371:63" pos:end="371:65">[<expr pos:start="371:64" pos:end="371:64"><literal type="number" pos:start="371:64" pos:end="371:64">0</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="373:32" pos:end="373:34"><expr pos:start="373:32" pos:end="373:34"><name pos:start="373:32" pos:end="373:34">ptr</name></expr></argument>, <argument pos:start="373:37" pos:end="373:49"><expr pos:start="373:37" pos:end="373:49"><name pos:start="373:37" pos:end="373:49">bytes_per_row</name></expr></argument>, <argument pos:start="373:52" pos:end="373:59"><expr pos:start="373:52" pos:end="373:59"><name pos:start="373:52" pos:end="373:59"><name pos:start="373:52" pos:end="373:52">s</name><operator pos:start="373:53" pos:end="373:54">-&gt;</operator><name pos:start="373:55" pos:end="373:59">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="375:9" pos:end="381:9"><if pos:start="375:9" pos:end="381:9">if <condition pos:start="375:12" pos:end="375:20">(<expr pos:start="375:13" pos:end="375:19"><name pos:start="375:13" pos:end="375:15">ret</name> <operator pos:start="375:17" pos:end="375:17">&lt;</operator> <literal type="number" pos:start="375:19" pos:end="375:19">0</literal></expr>)</condition> <block pos:start="375:22" pos:end="381:9">{<block_content pos:start="377:13" pos:end="379:22">

            <expr_stmt pos:start="377:13" pos:end="377:68"><expr pos:start="377:13" pos:end="377:67"><call pos:start="377:13" pos:end="377:67"><name pos:start="377:13" pos:end="377:18">av_log</name><argument_list pos:start="377:19" pos:end="377:67">(<argument pos:start="377:20" pos:end="377:27"><expr pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:27"><name pos:start="377:20" pos:end="377:20">s</name><operator pos:start="377:21" pos:end="377:22">-&gt;</operator><name pos:start="377:23" pos:end="377:27">avctx</name></name></expr></argument>, <argument pos:start="377:30" pos:end="377:41"><expr pos:start="377:30" pos:end="377:41"><name pos:start="377:30" pos:end="377:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="377:44" pos:end="377:66"><expr pos:start="377:44" pos:end="377:66"><literal type="string" pos:start="377:44" pos:end="377:66">"Encode strip failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="379:13" pos:end="379:22">goto <name pos:start="379:18" pos:end="379:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:39"><expr pos:start="383:9" pos:end="383:38"><name pos:start="383:9" pos:end="383:31"><name pos:start="383:9" pos:end="383:19">strip_sizes</name><index pos:start="383:20" pos:end="383:31">[<expr pos:start="383:21" pos:end="383:30"><name pos:start="383:21" pos:end="383:21">i</name> <operator pos:start="383:23" pos:end="383:23">/</operator> <name pos:start="383:25" pos:end="383:30"><name pos:start="383:25" pos:end="383:25">s</name><operator pos:start="383:26" pos:end="383:27">-&gt;</operator><name pos:start="383:28" pos:end="383:30">rps</name></name></expr>]</index></name> <operator pos:start="383:33" pos:end="383:34">+=</operator> <name pos:start="383:36" pos:end="383:38">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:39"><expr pos:start="385:9" pos:end="385:38"><name pos:start="385:9" pos:end="385:11">ptr</name>                     <operator pos:start="385:33" pos:end="385:34">+=</operator> <name pos:start="385:36" pos:end="385:38">ret</name></expr>;</expr_stmt>

        <if_stmt pos:start="387:9" pos:end="397:9"><if pos:start="387:9" pos:end="397:9">if <condition pos:start="387:12" pos:end="389:61">(<expr pos:start="387:13" pos:end="389:60"><name pos:start="387:13" pos:end="387:20"><name pos:start="387:13" pos:end="387:13">s</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:20">compr</name></name> <operator pos:start="387:22" pos:end="387:23">==</operator> <name pos:start="387:25" pos:end="387:32">TIFF_LZW</name> <operator pos:start="387:34" pos:end="387:35">&amp;&amp;</operator>

            <operator pos:start="389:13" pos:end="389:13">(</operator><name pos:start="389:14" pos:end="389:14">i</name> <operator pos:start="389:16" pos:end="389:17">==</operator> <name pos:start="389:19" pos:end="389:27"><name pos:start="389:19" pos:end="389:19">s</name><operator pos:start="389:20" pos:end="389:21">-&gt;</operator><name pos:start="389:22" pos:end="389:27">height</name></name> <operator pos:start="389:29" pos:end="389:29">-</operator> <literal type="number" pos:start="389:31" pos:end="389:31">1</literal> <operator pos:start="389:33" pos:end="389:34">||</operator> <name pos:start="389:36" pos:end="389:36">i</name> <operator pos:start="389:38" pos:end="389:38">%</operator> <name pos:start="389:40" pos:end="389:45"><name pos:start="389:40" pos:end="389:40">s</name><operator pos:start="389:41" pos:end="389:42">-&gt;</operator><name pos:start="389:43" pos:end="389:45">rps</name></name> <operator pos:start="389:47" pos:end="389:48">==</operator> <name pos:start="389:50" pos:end="389:55"><name pos:start="389:50" pos:end="389:50">s</name><operator pos:start="389:51" pos:end="389:52">-&gt;</operator><name pos:start="389:53" pos:end="389:55">rps</name></name> <operator pos:start="389:57" pos:end="389:57">-</operator> <literal type="number" pos:start="389:59" pos:end="389:59">1</literal><operator pos:start="389:60" pos:end="389:60">)</operator></expr>)</condition> <block pos:start="389:63" pos:end="397:9">{<block_content pos:start="391:13" pos:end="395:45">

            <expr_stmt pos:start="391:13" pos:end="391:63"><expr pos:start="391:13" pos:end="391:62"><name pos:start="391:13" pos:end="391:15">ret</name> <operator pos:start="391:17" pos:end="391:17">=</operator> <call pos:start="391:19" pos:end="391:62"><name pos:start="391:19" pos:end="391:37">ff_lzw_encode_flush</name><argument_list pos:start="391:38" pos:end="391:62">(<argument pos:start="391:39" pos:end="391:45"><expr pos:start="391:39" pos:end="391:45"><name pos:start="391:39" pos:end="391:45"><name pos:start="391:39" pos:end="391:39">s</name><operator pos:start="391:40" pos:end="391:41">-&gt;</operator><name pos:start="391:42" pos:end="391:45">lzws</name></name></expr></argument>, <argument pos:start="391:48" pos:end="391:61"><expr pos:start="391:48" pos:end="391:61"><name pos:start="391:48" pos:end="391:61">flush_put_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:45"><expr pos:start="393:13" pos:end="393:44"><name pos:start="393:13" pos:end="393:37"><name pos:start="393:13" pos:end="393:23">strip_sizes</name><index pos:start="393:24" pos:end="393:37">[<expr pos:start="393:25" pos:end="393:36"><operator pos:start="393:25" pos:end="393:25">(</operator><name pos:start="393:26" pos:end="393:26">i</name> <operator pos:start="393:28" pos:end="393:28">/</operator> <name pos:start="393:30" pos:end="393:35"><name pos:start="393:30" pos:end="393:30">s</name><operator pos:start="393:31" pos:end="393:32">-&gt;</operator><name pos:start="393:33" pos:end="393:35">rps</name></name><operator pos:start="393:36" pos:end="393:36">)</operator></expr>]</index></name> <operator pos:start="393:39" pos:end="393:40">+=</operator> <name pos:start="393:42" pos:end="393:44">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:45"><expr pos:start="395:13" pos:end="395:44"><name pos:start="395:13" pos:end="395:15">ptr</name>                       <operator pos:start="395:39" pos:end="395:40">+=</operator> <name pos:start="395:42" pos:end="395:44">ret</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="401:5" pos:end="403:25"><if pos:start="401:5" pos:end="403:25">if <condition pos:start="401:8" pos:end="401:29">(<expr pos:start="401:9" pos:end="401:28"><name pos:start="401:9" pos:end="401:16"><name pos:start="401:9" pos:end="401:9">s</name><operator pos:start="401:10" pos:end="401:11">-&gt;</operator><name pos:start="401:12" pos:end="401:16">compr</name></name> <operator pos:start="401:18" pos:end="401:19">==</operator> <name pos:start="401:21" pos:end="401:28">TIFF_LZW</name></expr>)</condition><block type="pseudo" pos:start="403:9" pos:end="403:25"><block_content pos:start="403:9" pos:end="403:25">

        <expr_stmt pos:start="403:9" pos:end="403:25"><expr pos:start="403:9" pos:end="403:24"><call pos:start="403:9" pos:end="403:24"><name pos:start="403:9" pos:end="403:15">av_free</name><argument_list pos:start="403:16" pos:end="403:24">(<argument pos:start="403:17" pos:end="403:23"><expr pos:start="403:17" pos:end="403:23"><name pos:start="403:17" pos:end="403:23"><name pos:start="403:17" pos:end="403:17">s</name><operator pos:start="403:18" pos:end="403:19">-&gt;</operator><name pos:start="403:20" pos:end="403:23">lzws</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="407:5" pos:end="407:23"><expr pos:start="407:5" pos:end="407:22"><name pos:start="407:5" pos:end="407:18"><name pos:start="407:5" pos:end="407:5">s</name><operator pos:start="407:6" pos:end="407:7">-&gt;</operator><name pos:start="407:8" pos:end="407:18">num_entries</name></name> <operator pos:start="407:20" pos:end="407:20">=</operator> <literal type="number" pos:start="407:22" pos:end="407:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="411:5" pos:end="411:46"><expr pos:start="411:5" pos:end="411:45"><call pos:start="411:5" pos:end="411:45"><name pos:start="411:5" pos:end="411:14">add_entry1</name><argument_list pos:start="411:15" pos:end="411:45">(<argument pos:start="411:16" pos:end="411:16"><expr pos:start="411:16" pos:end="411:16"><name pos:start="411:16" pos:end="411:16">s</name></expr></argument>, <argument pos:start="411:19" pos:end="411:30"><expr pos:start="411:19" pos:end="411:30"><name pos:start="411:19" pos:end="411:30">TIFF_SUBFILE</name></expr></argument>, <argument pos:start="411:33" pos:end="411:41"><expr pos:start="411:33" pos:end="411:41"><name pos:start="411:33" pos:end="411:41">TIFF_LONG</name></expr></argument>, <argument pos:start="411:44" pos:end="411:44"><expr pos:start="411:44" pos:end="411:44"><literal type="number" pos:start="411:44" pos:end="411:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="413:5" pos:end="413:53"><expr pos:start="413:5" pos:end="413:52"><call pos:start="413:5" pos:end="413:52"><name pos:start="413:5" pos:end="413:14">add_entry1</name><argument_list pos:start="413:15" pos:end="413:52">(<argument pos:start="413:16" pos:end="413:16"><expr pos:start="413:16" pos:end="413:16"><name pos:start="413:16" pos:end="413:16">s</name></expr></argument>, <argument pos:start="413:19" pos:end="413:28"><expr pos:start="413:19" pos:end="413:28"><name pos:start="413:19" pos:end="413:28">TIFF_WIDTH</name></expr></argument>,   <argument pos:start="413:33" pos:end="413:41"><expr pos:start="413:33" pos:end="413:41"><name pos:start="413:33" pos:end="413:41">TIFF_LONG</name></expr></argument>, <argument pos:start="413:44" pos:end="413:51"><expr pos:start="413:44" pos:end="413:51"><name pos:start="413:44" pos:end="413:51"><name pos:start="413:44" pos:end="413:44">s</name><operator pos:start="413:45" pos:end="413:46">-&gt;</operator><name pos:start="413:47" pos:end="413:51">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="415:5" pos:end="415:54"><expr pos:start="415:5" pos:end="415:53"><call pos:start="415:5" pos:end="415:53"><name pos:start="415:5" pos:end="415:14">add_entry1</name><argument_list pos:start="415:15" pos:end="415:53">(<argument pos:start="415:16" pos:end="415:16"><expr pos:start="415:16" pos:end="415:16"><name pos:start="415:16" pos:end="415:16">s</name></expr></argument>, <argument pos:start="415:19" pos:end="415:29"><expr pos:start="415:19" pos:end="415:29"><name pos:start="415:19" pos:end="415:29">TIFF_HEIGHT</name></expr></argument>,  <argument pos:start="415:33" pos:end="415:41"><expr pos:start="415:33" pos:end="415:41"><name pos:start="415:33" pos:end="415:41">TIFF_LONG</name></expr></argument>, <argument pos:start="415:44" pos:end="415:52"><expr pos:start="415:44" pos:end="415:52"><name pos:start="415:44" pos:end="415:52"><name pos:start="415:44" pos:end="415:44">s</name><operator pos:start="415:45" pos:end="415:46">-&gt;</operator><name pos:start="415:47" pos:end="415:52">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="419:5" pos:end="421:69"><if pos:start="419:5" pos:end="421:69">if <condition pos:start="419:8" pos:end="419:24">(<expr pos:start="419:9" pos:end="419:23"><name pos:start="419:9" pos:end="419:23"><name pos:start="419:9" pos:end="419:9">s</name><operator pos:start="419:10" pos:end="419:11">-&gt;</operator><name pos:start="419:12" pos:end="419:23">bpp_tab_size</name></name></expr>)</condition><block type="pseudo" pos:start="421:9" pos:end="421:69"><block_content pos:start="421:9" pos:end="421:69">

        <expr_stmt pos:start="421:9" pos:end="421:69"><expr pos:start="421:9" pos:end="421:68"><call pos:start="421:9" pos:end="421:68"><name pos:start="421:9" pos:end="421:17">add_entry</name><argument_list pos:start="421:18" pos:end="421:68">(<argument pos:start="421:19" pos:end="421:19"><expr pos:start="421:19" pos:end="421:19"><name pos:start="421:19" pos:end="421:19">s</name></expr></argument>, <argument pos:start="421:22" pos:end="421:29"><expr pos:start="421:22" pos:end="421:29"><name pos:start="421:22" pos:end="421:29">TIFF_BPP</name></expr></argument>, <argument pos:start="421:32" pos:end="421:41"><expr pos:start="421:32" pos:end="421:41"><name pos:start="421:32" pos:end="421:41">TIFF_SHORT</name></expr></argument>, <argument pos:start="421:44" pos:end="421:58"><expr pos:start="421:44" pos:end="421:58"><name pos:start="421:44" pos:end="421:58"><name pos:start="421:44" pos:end="421:44">s</name><operator pos:start="421:45" pos:end="421:46">-&gt;</operator><name pos:start="421:47" pos:end="421:58">bpp_tab_size</name></name></expr></argument>, <argument pos:start="421:61" pos:end="421:67"><expr pos:start="421:61" pos:end="421:67"><name pos:start="421:61" pos:end="421:67">bpp_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="425:5" pos:end="425:58"><expr pos:start="425:5" pos:end="425:57"><call pos:start="425:5" pos:end="425:57"><name pos:start="425:5" pos:end="425:14">add_entry1</name><argument_list pos:start="425:15" pos:end="425:57">(<argument pos:start="425:16" pos:end="425:16"><expr pos:start="425:16" pos:end="425:16"><name pos:start="425:16" pos:end="425:16">s</name></expr></argument>, <argument pos:start="425:19" pos:end="425:28"><expr pos:start="425:19" pos:end="425:28"><name pos:start="425:19" pos:end="425:28">TIFF_COMPR</name></expr></argument>,       <argument pos:start="425:37" pos:end="425:46"><expr pos:start="425:37" pos:end="425:46"><name pos:start="425:37" pos:end="425:46">TIFF_SHORT</name></expr></argument>, <argument pos:start="425:49" pos:end="425:56"><expr pos:start="425:49" pos:end="425:56"><name pos:start="425:49" pos:end="425:56"><name pos:start="425:49" pos:end="425:49">s</name><operator pos:start="425:50" pos:end="425:51">-&gt;</operator><name pos:start="425:52" pos:end="425:56">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="427:5" pos:end="427:79"><expr pos:start="427:5" pos:end="427:78"><call pos:start="427:5" pos:end="427:78"><name pos:start="427:5" pos:end="427:14">add_entry1</name><argument_list pos:start="427:15" pos:end="427:78">(<argument pos:start="427:16" pos:end="427:16"><expr pos:start="427:16" pos:end="427:16"><name pos:start="427:16" pos:end="427:16">s</name></expr></argument>, <argument pos:start="427:19" pos:end="427:34"><expr pos:start="427:19" pos:end="427:34"><name pos:start="427:19" pos:end="427:34">TIFF_PHOTOMETRIC</name></expr></argument>, <argument pos:start="427:37" pos:end="427:46"><expr pos:start="427:37" pos:end="427:46"><name pos:start="427:37" pos:end="427:46">TIFF_SHORT</name></expr></argument>, <argument pos:start="427:49" pos:end="427:77"><expr pos:start="427:49" pos:end="427:77"><name pos:start="427:49" pos:end="427:77"><name pos:start="427:49" pos:end="427:49">s</name><operator pos:start="427:50" pos:end="427:51">-&gt;</operator><name pos:start="427:52" pos:end="427:77">photometric_interpretation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:71"><expr pos:start="429:5" pos:end="429:70"><call pos:start="429:5" pos:end="429:70"><name pos:start="429:5" pos:end="429:13">add_entry</name><argument_list pos:start="429:14" pos:end="429:70">(<argument pos:start="429:15" pos:end="429:15"><expr pos:start="429:15" pos:end="429:15"><name pos:start="429:15" pos:end="429:15">s</name></expr></argument>,  <argument pos:start="429:19" pos:end="429:33"><expr pos:start="429:19" pos:end="429:33"><name pos:start="429:19" pos:end="429:33">TIFF_STRIP_OFFS</name></expr></argument>,  <argument pos:start="429:37" pos:end="429:45"><expr pos:start="429:37" pos:end="429:45"><name pos:start="429:37" pos:end="429:45">TIFF_LONG</name></expr></argument>,  <argument pos:start="429:49" pos:end="429:54"><expr pos:start="429:49" pos:end="429:54"><name pos:start="429:49" pos:end="429:54">strips</name></expr></argument>, <argument pos:start="429:57" pos:end="429:69"><expr pos:start="429:57" pos:end="429:69"><name pos:start="429:57" pos:end="429:69">strip_offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="433:5" pos:end="435:75"><if pos:start="433:5" pos:end="435:75">if <condition pos:start="433:8" pos:end="433:24">(<expr pos:start="433:9" pos:end="433:23"><name pos:start="433:9" pos:end="433:23"><name pos:start="433:9" pos:end="433:9">s</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:23">bpp_tab_size</name></name></expr>)</condition><block type="pseudo" pos:start="435:9" pos:end="435:75"><block_content pos:start="435:9" pos:end="435:75">

        <expr_stmt pos:start="435:9" pos:end="435:75"><expr pos:start="435:9" pos:end="435:74"><call pos:start="435:9" pos:end="435:74"><name pos:start="435:9" pos:end="435:18">add_entry1</name><argument_list pos:start="435:19" pos:end="435:74">(<argument pos:start="435:20" pos:end="435:20"><expr pos:start="435:20" pos:end="435:20"><name pos:start="435:20" pos:end="435:20">s</name></expr></argument>, <argument pos:start="435:23" pos:end="435:44"><expr pos:start="435:23" pos:end="435:44"><name pos:start="435:23" pos:end="435:44">TIFF_SAMPLES_PER_PIXEL</name></expr></argument>, <argument pos:start="435:47" pos:end="435:56"><expr pos:start="435:47" pos:end="435:56"><name pos:start="435:47" pos:end="435:56">TIFF_SHORT</name></expr></argument>, <argument pos:start="435:59" pos:end="435:73"><expr pos:start="435:59" pos:end="435:73"><name pos:start="435:59" pos:end="435:73"><name pos:start="435:59" pos:end="435:59">s</name><operator pos:start="435:60" pos:end="435:61">-&gt;</operator><name pos:start="435:62" pos:end="435:73">bpp_tab_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="439:5" pos:end="439:60"><expr pos:start="439:5" pos:end="439:59"><call pos:start="439:5" pos:end="439:59"><name pos:start="439:5" pos:end="439:14">add_entry1</name><argument_list pos:start="439:15" pos:end="439:59">(<argument pos:start="439:16" pos:end="439:16"><expr pos:start="439:16" pos:end="439:16"><name pos:start="439:16" pos:end="439:16">s</name></expr></argument>, <argument pos:start="439:19" pos:end="439:35"><expr pos:start="439:19" pos:end="439:35"><name pos:start="439:19" pos:end="439:35">TIFF_ROWSPERSTRIP</name></expr></argument>, <argument pos:start="439:38" pos:end="439:46"><expr pos:start="439:38" pos:end="439:46"><name pos:start="439:38" pos:end="439:46">TIFF_LONG</name></expr></argument>,     <argument pos:start="439:53" pos:end="439:58"><expr pos:start="439:53" pos:end="439:58"><name pos:start="439:53" pos:end="439:58"><name pos:start="439:53" pos:end="439:53">s</name><operator pos:start="439:54" pos:end="439:55">-&gt;</operator><name pos:start="439:56" pos:end="439:58">rps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="441:5" pos:end="441:73"><expr pos:start="441:5" pos:end="441:72"><call pos:start="441:5" pos:end="441:72"><name pos:start="441:5" pos:end="441:13">add_entry</name><argument_list pos:start="441:14" pos:end="441:72">(<argument pos:start="441:15" pos:end="441:15"><expr pos:start="441:15" pos:end="441:15"><name pos:start="441:15" pos:end="441:15">s</name></expr></argument>,  <argument pos:start="441:19" pos:end="441:33"><expr pos:start="441:19" pos:end="441:33"><name pos:start="441:19" pos:end="441:33">TIFF_STRIP_SIZE</name></expr></argument>,   <argument pos:start="441:38" pos:end="441:46"><expr pos:start="441:38" pos:end="441:46"><name pos:start="441:38" pos:end="441:46">TIFF_LONG</name></expr></argument>,     <argument pos:start="441:53" pos:end="441:58"><expr pos:start="441:53" pos:end="441:58"><name pos:start="441:53" pos:end="441:58">strips</name></expr></argument>, <argument pos:start="441:61" pos:end="441:71"><expr pos:start="441:61" pos:end="441:71"><name pos:start="441:61" pos:end="441:71">strip_sizes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="443:5" pos:end="443:65"><expr pos:start="443:5" pos:end="443:64"><call pos:start="443:5" pos:end="443:64"><name pos:start="443:5" pos:end="443:13">add_entry</name><argument_list pos:start="443:14" pos:end="443:64">(<argument pos:start="443:15" pos:end="443:15"><expr pos:start="443:15" pos:end="443:15"><name pos:start="443:15" pos:end="443:15">s</name></expr></argument>,  <argument pos:start="443:19" pos:end="443:27"><expr pos:start="443:19" pos:end="443:27"><name pos:start="443:19" pos:end="443:27">TIFF_XRES</name></expr></argument>,         <argument pos:start="443:38" pos:end="443:50"><expr pos:start="443:38" pos:end="443:50"><name pos:start="443:38" pos:end="443:50">TIFF_RATIONAL</name></expr></argument>, <argument pos:start="443:53" pos:end="443:53"><expr pos:start="443:53" pos:end="443:53"><literal type="number" pos:start="443:53" pos:end="443:53">1</literal></expr></argument>,      <argument pos:start="443:61" pos:end="443:63"><expr pos:start="443:61" pos:end="443:63"><name pos:start="443:61" pos:end="443:63">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:65"><expr pos:start="445:5" pos:end="445:64"><call pos:start="445:5" pos:end="445:64"><name pos:start="445:5" pos:end="445:13">add_entry</name><argument_list pos:start="445:14" pos:end="445:64">(<argument pos:start="445:15" pos:end="445:15"><expr pos:start="445:15" pos:end="445:15"><name pos:start="445:15" pos:end="445:15">s</name></expr></argument>,  <argument pos:start="445:19" pos:end="445:27"><expr pos:start="445:19" pos:end="445:27"><name pos:start="445:19" pos:end="445:27">TIFF_YRES</name></expr></argument>,         <argument pos:start="445:38" pos:end="445:50"><expr pos:start="445:38" pos:end="445:50"><name pos:start="445:38" pos:end="445:50">TIFF_RATIONAL</name></expr></argument>, <argument pos:start="445:53" pos:end="445:53"><expr pos:start="445:53" pos:end="445:53"><literal type="number" pos:start="445:53" pos:end="445:53">1</literal></expr></argument>,      <argument pos:start="445:61" pos:end="445:63"><expr pos:start="445:61" pos:end="445:63"><name pos:start="445:61" pos:end="445:63">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:55"><expr pos:start="447:5" pos:end="447:54"><call pos:start="447:5" pos:end="447:54"><name pos:start="447:5" pos:end="447:14">add_entry1</name><argument_list pos:start="447:15" pos:end="447:54">(<argument pos:start="447:16" pos:end="447:16"><expr pos:start="447:16" pos:end="447:16"><name pos:start="447:16" pos:end="447:16">s</name></expr></argument>, <argument pos:start="447:19" pos:end="447:31"><expr pos:start="447:19" pos:end="447:31"><name pos:start="447:19" pos:end="447:31">TIFF_RES_UNIT</name></expr></argument>,     <argument pos:start="447:38" pos:end="447:47"><expr pos:start="447:38" pos:end="447:47"><name pos:start="447:38" pos:end="447:47">TIFF_SHORT</name></expr></argument>,    <argument pos:start="447:53" pos:end="447:53"><expr pos:start="447:53" pos:end="447:53"><literal type="number" pos:start="447:53" pos:end="447:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="451:5" pos:end="455:66"><if pos:start="451:5" pos:end="455:66">if <condition pos:start="451:8" pos:end="451:46">(<expr pos:start="451:9" pos:end="451:45"><operator pos:start="451:9" pos:end="451:9">!</operator><operator pos:start="451:10" pos:end="451:10">(</operator><name pos:start="451:11" pos:end="451:22"><name pos:start="451:11" pos:end="451:15">avctx</name><operator pos:start="451:16" pos:end="451:17">-&gt;</operator><name pos:start="451:18" pos:end="451:22">flags</name></name> <operator pos:start="451:24" pos:end="451:24">&amp;</operator> <name pos:start="451:26" pos:end="451:44">CODEC_FLAG_BITEXACT</name><operator pos:start="451:45" pos:end="451:45">)</operator></expr>)</condition><block type="pseudo" pos:start="453:9" pos:end="455:66"><block_content pos:start="453:9" pos:end="455:66">

        <expr_stmt pos:start="453:9" pos:end="455:66"><expr pos:start="453:9" pos:end="455:65"><call pos:start="453:9" pos:end="455:65"><name pos:start="453:9" pos:end="453:17">add_entry</name><argument_list pos:start="453:18" pos:end="455:65">(<argument pos:start="453:19" pos:end="453:19"><expr pos:start="453:19" pos:end="453:19"><name pos:start="453:19" pos:end="453:19">s</name></expr></argument>, <argument pos:start="453:22" pos:end="453:39"><expr pos:start="453:22" pos:end="453:39"><name pos:start="453:22" pos:end="453:39">TIFF_SOFTWARE_NAME</name></expr></argument>, <argument pos:start="453:42" pos:end="453:52"><expr pos:start="453:42" pos:end="453:52"><name pos:start="453:42" pos:end="453:52">TIFF_STRING</name></expr></argument>,

                  <argument pos:start="455:19" pos:end="455:46"><expr pos:start="455:19" pos:end="455:46"><call pos:start="455:19" pos:end="455:42"><name pos:start="455:19" pos:end="455:24">strlen</name><argument_list pos:start="455:25" pos:end="455:42">(<argument pos:start="455:26" pos:end="455:41"><expr pos:start="455:26" pos:end="455:41"><name pos:start="455:26" pos:end="455:41">LIBAVCODEC_IDENT</name></expr></argument>)</argument_list></call> <operator pos:start="455:44" pos:end="455:44">+</operator> <literal type="number" pos:start="455:46" pos:end="455:46">1</literal></expr></argument>, <argument pos:start="455:49" pos:end="455:64"><expr pos:start="455:49" pos:end="455:64"><name pos:start="455:49" pos:end="455:64">LIBAVCODEC_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="459:5" pos:end="477:5"><if pos:start="459:5" pos:end="477:5">if <condition pos:start="459:8" pos:end="459:42">(<expr pos:start="459:9" pos:end="459:41"><name pos:start="459:9" pos:end="459:22"><name pos:start="459:9" pos:end="459:13">avctx</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:22">pix_fmt</name></name> <operator pos:start="459:24" pos:end="459:25">==</operator> <name pos:start="459:27" pos:end="459:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="459:44" pos:end="477:5">{<block_content pos:start="461:9" pos:end="475:57">

        <decl_stmt pos:start="461:9" pos:end="461:30"><decl pos:start="461:9" pos:end="461:29"><type pos:start="461:9" pos:end="461:16"><name pos:start="461:9" pos:end="461:16">uint16_t</name></type> <name pos:start="461:18" pos:end="461:29"><name pos:start="461:18" pos:end="461:20">pal</name><index pos:start="461:21" pos:end="461:29">[<expr pos:start="461:22" pos:end="461:28"><literal type="number" pos:start="461:22" pos:end="461:24">256</literal> <operator pos:start="461:26" pos:end="461:26">*</operator> <literal type="number" pos:start="461:28" pos:end="461:28">3</literal></expr>]</index></name></decl>;</decl_stmt>

        <for pos:start="463:9" pos:end="473:9">for <control pos:start="463:13" pos:end="463:33">(<init pos:start="463:14" pos:end="463:19"><expr pos:start="463:14" pos:end="463:18"><name pos:start="463:14" pos:end="463:14">i</name> <operator pos:start="463:16" pos:end="463:16">=</operator> <literal type="number" pos:start="463:18" pos:end="463:18">0</literal></expr>;</init> <condition pos:start="463:21" pos:end="463:28"><expr pos:start="463:21" pos:end="463:27"><name pos:start="463:21" pos:end="463:21">i</name> <operator pos:start="463:23" pos:end="463:23">&lt;</operator> <literal type="number" pos:start="463:25" pos:end="463:27">256</literal></expr>;</condition> <incr pos:start="463:30" pos:end="463:32"><expr pos:start="463:30" pos:end="463:32"><name pos:start="463:30" pos:end="463:30">i</name><operator pos:start="463:31" pos:end="463:32">++</operator></expr></incr>)</control> <block pos:start="463:35" pos:end="473:9">{<block_content pos:start="465:13" pos:end="471:54">

            <decl_stmt pos:start="465:13" pos:end="465:62"><decl pos:start="465:13" pos:end="465:61"><type pos:start="465:13" pos:end="465:20"><name pos:start="465:13" pos:end="465:20">uint32_t</name></type> <name pos:start="465:22" pos:end="465:24">rgb</name> <init pos:start="465:26" pos:end="465:61">= <expr pos:start="465:28" pos:end="465:61"><operator pos:start="465:28" pos:end="465:28">*</operator><operator pos:start="465:29" pos:end="465:29">(</operator><name pos:start="465:30" pos:end="465:37">uint32_t</name> <operator pos:start="465:39" pos:end="465:39">*</operator><operator pos:start="465:40" pos:end="465:40">)</operator> <operator pos:start="465:42" pos:end="465:42">(</operator><name pos:start="465:43" pos:end="465:52"><name pos:start="465:43" pos:end="465:43">p</name><operator pos:start="465:44" pos:end="465:45">-&gt;</operator><name pos:start="465:46" pos:end="465:49">data</name><index pos:start="465:50" pos:end="465:52">[<expr pos:start="465:51" pos:end="465:51"><literal type="number" pos:start="465:51" pos:end="465:51">1</literal></expr>]</index></name> <operator pos:start="465:54" pos:end="465:54">+</operator> <name pos:start="465:56" pos:end="465:56">i</name> <operator pos:start="465:58" pos:end="465:58">*</operator> <literal type="number" pos:start="465:60" pos:end="465:60">4</literal><operator pos:start="465:61" pos:end="465:61">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:54"><expr pos:start="467:13" pos:end="467:53"><name pos:start="467:13" pos:end="467:18"><name pos:start="467:13" pos:end="467:15">pal</name><index pos:start="467:16" pos:end="467:18">[<expr pos:start="467:17" pos:end="467:17"><name pos:start="467:17" pos:end="467:17">i</name></expr>]</index></name>       <operator pos:start="467:26" pos:end="467:26">=</operator> <operator pos:start="467:28" pos:end="467:28">(</operator><operator pos:start="467:29" pos:end="467:29">(</operator><name pos:start="467:30" pos:end="467:32">rgb</name> <operator pos:start="467:34" pos:end="467:35">&gt;&gt;</operator> <literal type="number" pos:start="467:37" pos:end="467:38">16</literal><operator pos:start="467:39" pos:end="467:39">)</operator> <operator pos:start="467:41" pos:end="467:41">&amp;</operator> <literal type="number" pos:start="467:43" pos:end="467:46">0xff</literal><operator pos:start="467:47" pos:end="467:47">)</operator> <operator pos:start="467:49" pos:end="467:49">*</operator> <literal type="number" pos:start="467:51" pos:end="467:53">257</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:54"><expr pos:start="469:13" pos:end="469:53"><name pos:start="469:13" pos:end="469:24"><name pos:start="469:13" pos:end="469:15">pal</name><index pos:start="469:16" pos:end="469:24">[<expr pos:start="469:17" pos:end="469:23"><name pos:start="469:17" pos:end="469:17">i</name> <operator pos:start="469:19" pos:end="469:19">+</operator> <literal type="number" pos:start="469:21" pos:end="469:23">256</literal></expr>]</index></name> <operator pos:start="469:26" pos:end="469:26">=</operator> <operator pos:start="469:28" pos:end="469:28">(</operator><operator pos:start="469:29" pos:end="469:29">(</operator><name pos:start="469:30" pos:end="469:32">rgb</name> <operator pos:start="469:34" pos:end="469:35">&gt;&gt;</operator>  <literal type="number" pos:start="469:38" pos:end="469:38">8</literal><operator pos:start="469:39" pos:end="469:39">)</operator> <operator pos:start="469:41" pos:end="469:41">&amp;</operator> <literal type="number" pos:start="469:43" pos:end="469:46">0xff</literal><operator pos:start="469:47" pos:end="469:47">)</operator> <operator pos:start="469:49" pos:end="469:49">*</operator> <literal type="number" pos:start="469:51" pos:end="469:53">257</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:54"><expr pos:start="471:13" pos:end="471:53"><name pos:start="471:13" pos:end="471:24"><name pos:start="471:13" pos:end="471:15">pal</name><index pos:start="471:16" pos:end="471:24">[<expr pos:start="471:17" pos:end="471:23"><name pos:start="471:17" pos:end="471:17">i</name> <operator pos:start="471:19" pos:end="471:19">+</operator> <literal type="number" pos:start="471:21" pos:end="471:23">512</literal></expr>]</index></name> <operator pos:start="471:26" pos:end="471:26">=</operator>  <operator pos:start="471:29" pos:end="471:29">(</operator><name pos:start="471:30" pos:end="471:32">rgb</name>        <operator pos:start="471:41" pos:end="471:41">&amp;</operator> <literal type="number" pos:start="471:43" pos:end="471:46">0xff</literal><operator pos:start="471:47" pos:end="471:47">)</operator> <operator pos:start="471:49" pos:end="471:49">*</operator> <literal type="number" pos:start="471:51" pos:end="471:53">257</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="475:9" pos:end="475:57"><expr pos:start="475:9" pos:end="475:56"><call pos:start="475:9" pos:end="475:56"><name pos:start="475:9" pos:end="475:17">add_entry</name><argument_list pos:start="475:18" pos:end="475:56">(<argument pos:start="475:19" pos:end="475:19"><expr pos:start="475:19" pos:end="475:19"><name pos:start="475:19" pos:end="475:19">s</name></expr></argument>, <argument pos:start="475:22" pos:end="475:29"><expr pos:start="475:22" pos:end="475:29"><name pos:start="475:22" pos:end="475:29">TIFF_PAL</name></expr></argument>, <argument pos:start="475:32" pos:end="475:41"><expr pos:start="475:32" pos:end="475:41"><name pos:start="475:32" pos:end="475:41">TIFF_SHORT</name></expr></argument>, <argument pos:start="475:44" pos:end="475:50"><expr pos:start="475:44" pos:end="475:50"><literal type="number" pos:start="475:44" pos:end="475:46">256</literal> <operator pos:start="475:48" pos:end="475:48">*</operator> <literal type="number" pos:start="475:50" pos:end="475:50">3</literal></expr></argument>, <argument pos:start="475:53" pos:end="475:55"><expr pos:start="475:53" pos:end="475:55"><name pos:start="475:53" pos:end="475:55">pal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="479:5" pos:end="489:5"><if pos:start="479:5" pos:end="489:5">if <condition pos:start="479:8" pos:end="479:15">(<expr pos:start="479:9" pos:end="479:14"><name pos:start="479:9" pos:end="479:14">is_yuv</name></expr>)</condition> <block pos:start="479:17" pos:end="489:5">{<block_content pos:start="483:9" pos:end="487:70">

        <comment type="block" format="doxygen" pos:start="481:9" pos:end="481:53">/** according to CCIR Recommendation 601.1 */</comment>

        <decl_stmt pos:start="483:9" pos:end="483:79"><decl pos:start="483:9" pos:end="483:78"><type pos:start="483:9" pos:end="483:16"><name pos:start="483:9" pos:end="483:16">uint32_t</name></type> <name pos:start="483:18" pos:end="483:26"><name pos:start="483:18" pos:end="483:22">refbw</name><index pos:start="483:23" pos:end="483:26">[<expr pos:start="483:24" pos:end="483:25"><literal type="number" pos:start="483:24" pos:end="483:25">12</literal></expr>]</index></name> <init pos:start="483:28" pos:end="483:78">= <expr pos:start="483:30" pos:end="483:78"><block pos:start="483:30" pos:end="483:78">{ <expr pos:start="483:32" pos:end="483:33"><literal type="number" pos:start="483:32" pos:end="483:33">15</literal></expr>, <expr pos:start="483:36" pos:end="483:36"><literal type="number" pos:start="483:36" pos:end="483:36">1</literal></expr>, <expr pos:start="483:39" pos:end="483:41"><literal type="number" pos:start="483:39" pos:end="483:41">235</literal></expr>, <expr pos:start="483:44" pos:end="483:44"><literal type="number" pos:start="483:44" pos:end="483:44">1</literal></expr>, <expr pos:start="483:47" pos:end="483:49"><literal type="number" pos:start="483:47" pos:end="483:49">128</literal></expr>, <expr pos:start="483:52" pos:end="483:52"><literal type="number" pos:start="483:52" pos:end="483:52">1</literal></expr>, <expr pos:start="483:55" pos:end="483:57"><literal type="number" pos:start="483:55" pos:end="483:57">240</literal></expr>, <expr pos:start="483:60" pos:end="483:60"><literal type="number" pos:start="483:60" pos:end="483:60">1</literal></expr>, <expr pos:start="483:63" pos:end="483:65"><literal type="number" pos:start="483:63" pos:end="483:65">128</literal></expr>, <expr pos:start="483:68" pos:end="483:68"><literal type="number" pos:start="483:68" pos:end="483:68">1</literal></expr>, <expr pos:start="483:71" pos:end="483:73"><literal type="number" pos:start="483:71" pos:end="483:73">240</literal></expr>, <expr pos:start="483:76" pos:end="483:76"><literal type="number" pos:start="483:76" pos:end="483:76">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:79"><expr pos:start="485:9" pos:end="485:78"><call pos:start="485:9" pos:end="485:78"><name pos:start="485:9" pos:end="485:17">add_entry</name><argument_list pos:start="485:18" pos:end="485:78">(<argument pos:start="485:19" pos:end="485:19"><expr pos:start="485:19" pos:end="485:19"><name pos:start="485:19" pos:end="485:19">s</name></expr></argument>, <argument pos:start="485:22" pos:end="485:43"><expr pos:start="485:22" pos:end="485:43"><name pos:start="485:22" pos:end="485:43">TIFF_YCBCR_SUBSAMPLING</name></expr></argument>, <argument pos:start="485:46" pos:end="485:55"><expr pos:start="485:46" pos:end="485:55"><name pos:start="485:46" pos:end="485:55">TIFF_SHORT</name></expr></argument>,    <argument pos:start="485:61" pos:end="485:61"><expr pos:start="485:61" pos:end="485:61"><literal type="number" pos:start="485:61" pos:end="485:61">2</literal></expr></argument>, <argument pos:start="485:64" pos:end="485:77"><expr pos:start="485:64" pos:end="485:77"><name pos:start="485:64" pos:end="485:77"><name pos:start="485:64" pos:end="485:64">s</name><operator pos:start="485:65" pos:end="485:66">-&gt;</operator><name pos:start="485:67" pos:end="485:77">subsampling</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:70"><expr pos:start="487:9" pos:end="487:69"><call pos:start="487:9" pos:end="487:69"><name pos:start="487:9" pos:end="487:17">add_entry</name><argument_list pos:start="487:18" pos:end="487:69">(<argument pos:start="487:19" pos:end="487:19"><expr pos:start="487:19" pos:end="487:19"><name pos:start="487:19" pos:end="487:19">s</name></expr></argument>, <argument pos:start="487:22" pos:end="487:38"><expr pos:start="487:22" pos:end="487:38"><name pos:start="487:22" pos:end="487:38">TIFF_REFERENCE_BW</name></expr></argument>,      <argument pos:start="487:46" pos:end="487:58"><expr pos:start="487:46" pos:end="487:58"><name pos:start="487:46" pos:end="487:58">TIFF_RATIONAL</name></expr></argument>, <argument pos:start="487:61" pos:end="487:61"><expr pos:start="487:61" pos:end="487:61"><literal type="number" pos:start="487:61" pos:end="487:61">6</literal></expr></argument>, <argument pos:start="487:64" pos:end="487:68"><expr pos:start="487:64" pos:end="487:68"><name pos:start="487:64" pos:end="487:68">refbw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="491:5" pos:end="491:26">// write offset to dir</comment>

    <expr_stmt pos:start="493:5" pos:end="493:50"><expr pos:start="493:5" pos:end="493:49"><call pos:start="493:5" pos:end="493:49"><name pos:start="493:5" pos:end="493:23">bytestream_put_le32</name><argument_list pos:start="493:24" pos:end="493:49">(<argument pos:start="493:25" pos:end="493:31"><expr pos:start="493:25" pos:end="493:31"><operator pos:start="493:25" pos:end="493:25">&amp;</operator><name pos:start="493:26" pos:end="493:31">offset</name></expr></argument>, <argument pos:start="493:34" pos:end="493:48"><expr pos:start="493:34" pos:end="493:48"><name pos:start="493:34" pos:end="493:36">ptr</name> <operator pos:start="493:38" pos:end="493:38">-</operator> <name pos:start="493:40" pos:end="493:48"><name pos:start="493:40" pos:end="493:42">pkt</name><operator pos:start="493:43" pos:end="493:44">-&gt;</operator><name pos:start="493:45" pos:end="493:48">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="497:5" pos:end="503:5"><if pos:start="497:5" pos:end="503:5">if <condition pos:start="497:8" pos:end="497:47">(<expr pos:start="497:9" pos:end="497:46"><call pos:start="497:9" pos:end="497:46"><name pos:start="497:9" pos:end="497:18">check_size</name><argument_list pos:start="497:19" pos:end="497:46">(<argument pos:start="497:20" pos:end="497:20"><expr pos:start="497:20" pos:end="497:20"><name pos:start="497:20" pos:end="497:20">s</name></expr></argument>, <argument pos:start="497:23" pos:end="497:45"><expr pos:start="497:23" pos:end="497:45"><literal type="number" pos:start="497:23" pos:end="497:25">6</literal> <operator pos:start="497:25" pos:end="497:25">+</operator> <name pos:start="497:27" pos:end="497:40"><name pos:start="497:27" pos:end="497:27">s</name><operator pos:start="497:28" pos:end="497:29">-&gt;</operator><name pos:start="497:30" pos:end="497:40">num_entries</name></name> <operator pos:start="497:42" pos:end="497:42">*</operator> <literal type="number" pos:start="497:44" pos:end="497:45">12</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="497:49" pos:end="503:5">{<block_content pos:start="499:9" pos:end="501:18">

        <expr_stmt pos:start="499:9" pos:end="499:30"><expr pos:start="499:9" pos:end="499:29"><name pos:start="499:9" pos:end="499:11">ret</name> <operator pos:start="499:13" pos:end="499:13">=</operator> <call pos:start="499:15" pos:end="499:29"><name pos:start="499:15" pos:end="499:21">AVERROR</name><argument_list pos:start="499:22" pos:end="499:29">(<argument pos:start="499:23" pos:end="499:28"><expr pos:start="499:23" pos:end="499:28"><name pos:start="499:23" pos:end="499:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="501:9" pos:end="501:18">goto <name pos:start="501:14" pos:end="501:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:46"><expr pos:start="505:5" pos:end="505:45"><call pos:start="505:5" pos:end="505:45"><name pos:start="505:5" pos:end="505:23">bytestream_put_le16</name><argument_list pos:start="505:24" pos:end="505:45">(<argument pos:start="505:25" pos:end="505:28"><expr pos:start="505:25" pos:end="505:28"><operator pos:start="505:25" pos:end="505:25">&amp;</operator><name pos:start="505:26" pos:end="505:28">ptr</name></expr></argument>, <argument pos:start="505:31" pos:end="505:44"><expr pos:start="505:31" pos:end="505:44"><name pos:start="505:31" pos:end="505:44"><name pos:start="505:31" pos:end="505:31">s</name><operator pos:start="505:32" pos:end="505:33">-&gt;</operator><name pos:start="505:34" pos:end="505:44">num_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="505:49" pos:end="505:66">// write tag count</comment>

    <expr_stmt pos:start="507:5" pos:end="507:65"><expr pos:start="507:5" pos:end="507:64"><call pos:start="507:5" pos:end="507:64"><name pos:start="507:5" pos:end="507:25">bytestream_put_buffer</name><argument_list pos:start="507:26" pos:end="507:64">(<argument pos:start="507:27" pos:end="507:30"><expr pos:start="507:27" pos:end="507:30"><operator pos:start="507:27" pos:end="507:27">&amp;</operator><name pos:start="507:28" pos:end="507:30">ptr</name></expr></argument>, <argument pos:start="507:33" pos:end="507:42"><expr pos:start="507:33" pos:end="507:42"><name pos:start="507:33" pos:end="507:42"><name pos:start="507:33" pos:end="507:33">s</name><operator pos:start="507:34" pos:end="507:35">-&gt;</operator><name pos:start="507:36" pos:end="507:42">entries</name></name></expr></argument>, <argument pos:start="507:45" pos:end="507:63"><expr pos:start="507:45" pos:end="507:63"><name pos:start="507:45" pos:end="507:58"><name pos:start="507:45" pos:end="507:45">s</name><operator pos:start="507:46" pos:end="507:47">-&gt;</operator><name pos:start="507:48" pos:end="507:58">num_entries</name></name> <operator pos:start="507:60" pos:end="507:60">*</operator> <literal type="number" pos:start="507:62" pos:end="507:63">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:33"><expr pos:start="509:5" pos:end="509:32"><call pos:start="509:5" pos:end="509:32"><name pos:start="509:5" pos:end="509:23">bytestream_put_le32</name><argument_list pos:start="509:24" pos:end="509:32">(<argument pos:start="509:25" pos:end="509:28"><expr pos:start="509:25" pos:end="509:28"><operator pos:start="509:25" pos:end="509:25">&amp;</operator><name pos:start="509:26" pos:end="509:28">ptr</name></expr></argument>, <argument pos:start="509:31" pos:end="509:31"><expr pos:start="509:31" pos:end="509:31"><literal type="number" pos:start="509:31" pos:end="509:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="513:5" pos:end="513:34"><expr pos:start="513:5" pos:end="513:33"><name pos:start="513:5" pos:end="513:13"><name pos:start="513:5" pos:end="513:7">pkt</name><operator pos:start="513:8" pos:end="513:9">-&gt;</operator><name pos:start="513:10" pos:end="513:13">size</name></name>   <operator pos:start="513:17" pos:end="513:17">=</operator> <name pos:start="513:19" pos:end="513:21">ptr</name> <operator pos:start="513:23" pos:end="513:23">-</operator> <name pos:start="513:25" pos:end="513:33"><name pos:start="513:25" pos:end="513:27">pkt</name><operator pos:start="513:28" pos:end="513:29">-&gt;</operator><name pos:start="513:30" pos:end="513:33">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="515:5" pos:end="515:34"><expr pos:start="515:5" pos:end="515:33"><name pos:start="515:5" pos:end="515:14"><name pos:start="515:5" pos:end="515:7">pkt</name><operator pos:start="515:8" pos:end="515:9">-&gt;</operator><name pos:start="515:10" pos:end="515:14">flags</name></name> <operator pos:start="515:16" pos:end="515:17">|=</operator> <name pos:start="515:19" pos:end="515:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="517:5" pos:end="517:20"><expr pos:start="517:5" pos:end="517:19"><operator pos:start="517:5" pos:end="517:5">*</operator><name pos:start="517:6" pos:end="517:15">got_packet</name> <operator pos:start="517:17" pos:end="517:17">=</operator> <literal type="number" pos:start="517:19" pos:end="517:19">1</literal></expr>;</expr_stmt>



<label pos:start="521:1" pos:end="521:5"><name pos:start="521:1" pos:end="521:4">fail</name>:</label>

    <expr_stmt pos:start="523:5" pos:end="523:25"><expr pos:start="523:5" pos:end="523:24"><call pos:start="523:5" pos:end="523:24"><name pos:start="523:5" pos:end="523:11">av_free</name><argument_list pos:start="523:12" pos:end="523:24">(<argument pos:start="523:13" pos:end="523:23"><expr pos:start="523:13" pos:end="523:23"><name pos:start="523:13" pos:end="523:23">strip_sizes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="525:5" pos:end="525:27"><expr pos:start="525:5" pos:end="525:26"><call pos:start="525:5" pos:end="525:26"><name pos:start="525:5" pos:end="525:11">av_free</name><argument_list pos:start="525:12" pos:end="525:26">(<argument pos:start="525:13" pos:end="525:25"><expr pos:start="525:13" pos:end="525:25"><name pos:start="525:13" pos:end="525:25">strip_offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="527:5" pos:end="527:22"><expr pos:start="527:5" pos:end="527:21"><call pos:start="527:5" pos:end="527:21"><name pos:start="527:5" pos:end="527:11">av_free</name><argument_list pos:start="527:12" pos:end="527:21">(<argument pos:start="527:13" pos:end="527:20"><expr pos:start="527:13" pos:end="527:20"><name pos:start="527:13" pos:end="527:20">yuv_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="529:5" pos:end="529:15">return <expr pos:start="529:12" pos:end="529:14"><name pos:start="529:12" pos:end="529:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
