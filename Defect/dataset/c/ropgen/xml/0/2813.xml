<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2813.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:27">bit_copy</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:41">PutBitContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">pb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:60">GetBitContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">bits_left</name> <init pos:start="5:19" pos:end="5:37">= <expr pos:start="5:21" pos:end="5:37"><call pos:start="5:21" pos:end="5:37"><name pos:start="5:21" pos:end="5:33">get_bits_left</name><argument_list pos:start="5:34" pos:end="5:37">(<argument pos:start="5:35" pos:end="5:36"><expr pos:start="5:35" pos:end="5:36"><name pos:start="5:35" pos:end="5:36">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <while pos:start="7:5" pos:end="13:5">while <condition pos:start="7:11" pos:end="7:27">(<expr pos:start="7:12" pos:end="7:26"><name pos:start="7:12" pos:end="7:20">bits_left</name> <operator pos:start="7:22" pos:end="7:23">&gt;=</operator> <literal type="number" pos:start="7:25" pos:end="7:26">16</literal></expr>)</condition> <block pos:start="7:29" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:24">

        <expr_stmt pos:start="9:9" pos:end="9:43"><expr pos:start="9:9" pos:end="9:42"><call pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:16">put_bits</name><argument_list pos:start="9:17" pos:end="9:42">(<argument pos:start="9:18" pos:end="9:19"><expr pos:start="9:18" pos:end="9:19"><name pos:start="9:18" pos:end="9:19">pb</name></expr></argument>, <argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><literal type="number" pos:start="9:22" pos:end="9:23">16</literal></expr></argument>, <argument pos:start="9:26" pos:end="9:41"><expr pos:start="9:26" pos:end="9:41"><call pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:33">get_bits</name><argument_list pos:start="9:34" pos:end="9:41">(<argument pos:start="9:35" pos:end="9:36"><expr pos:start="9:35" pos:end="9:36"><name pos:start="9:35" pos:end="9:36">gb</name></expr></argument>, <argument pos:start="9:39" pos:end="9:40"><expr pos:start="9:39" pos:end="9:40"><literal type="number" pos:start="9:39" pos:end="9:40">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:24"><expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:17">bits_left</name> <operator pos:start="11:19" pos:end="11:20">-=</operator> <literal type="number" pos:start="11:22" pos:end="11:23">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:17">bits_left</name> <operator pos:start="15:19" pos:end="15:19">&gt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>)</condition> <block pos:start="15:24" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:57">

        <expr_stmt pos:start="17:9" pos:end="17:57"><expr pos:start="17:9" pos:end="17:56"><call pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:16">put_bits</name><argument_list pos:start="17:17" pos:end="17:56">(<argument pos:start="17:18" pos:end="17:19"><expr pos:start="17:18" pos:end="17:19"><name pos:start="17:18" pos:end="17:19">pb</name></expr></argument>, <argument pos:start="17:22" pos:end="17:30"><expr pos:start="17:22" pos:end="17:30"><name pos:start="17:22" pos:end="17:30">bits_left</name></expr></argument>, <argument pos:start="17:33" pos:end="17:55"><expr pos:start="17:33" pos:end="17:55"><call pos:start="17:33" pos:end="17:55"><name pos:start="17:33" pos:end="17:40">get_bits</name><argument_list pos:start="17:41" pos:end="17:55">(<argument pos:start="17:42" pos:end="17:43"><expr pos:start="17:42" pos:end="17:43"><name pos:start="17:42" pos:end="17:43">gb</name></expr></argument>, <argument pos:start="17:46" pos:end="17:54"><expr pos:start="17:46" pos:end="17:54"><name pos:start="17:46" pos:end="17:54">bits_left</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
