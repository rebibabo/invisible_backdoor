<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12611.c" pos:tabs="8"><function pos:start="1:1" pos:end="287:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">opt_target</name><parameter_list pos:start="1:23" pos:end="1:39">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:35"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="287:1">{<block_content pos:start="5:5" pos:end="285:5">

    <enum pos:start="5:5" pos:end="5:53">enum <block pos:start="5:10" pos:end="5:37">{ <decl pos:start="5:12" pos:end="5:14"><name pos:start="5:12" pos:end="5:14">PAL</name></decl>, <decl pos:start="5:17" pos:end="5:20"><name pos:start="5:17" pos:end="5:20">NTSC</name></decl>, <decl pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:26">FILM</name></decl>, <decl pos:start="5:29" pos:end="5:35"><name pos:start="5:29" pos:end="5:35">UNKNOWN</name></decl> }</block> <decl pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:42">norm</name> <init pos:start="5:44" pos:end="5:52">= <expr pos:start="5:46" pos:end="5:52"><name pos:start="5:46" pos:end="5:52">UNKNOWN</name></expr></init></decl>;</enum>

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:28"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:21">char</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier><specifier pos:start="7:24" pos:end="7:28">const</specifier></type> <name pos:start="7:30" pos:end="7:42"><name pos:start="7:30" pos:end="7:40">frame_rates</name><index pos:start="7:41" pos:end="7:42">[]</index></name> <init pos:start="7:44" pos:end="7:79">= <expr pos:start="7:46" pos:end="7:79"><block pos:start="7:46" pos:end="7:79">{<expr pos:start="7:47" pos:end="7:50"><literal type="string" pos:start="7:47" pos:end="7:50">"25"</literal></expr>, <expr pos:start="7:53" pos:end="7:64"><literal type="string" pos:start="7:53" pos:end="7:64">"30000/1001"</literal></expr>, <expr pos:start="7:67" pos:end="7:78"><literal type="string" pos:start="7:67" pos:end="7:78">"24000/1001"</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="95:5"><if pos:start="11:5" pos:end="17:5">if<condition pos:start="11:7" pos:end="11:32">(<expr pos:start="11:8" pos:end="11:31"><operator pos:start="11:8" pos:end="11:8">!</operator><call pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:15">strncmp</name><argument_list pos:start="11:16" pos:end="11:31">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">arg</name></expr></argument>, <argument pos:start="11:22" pos:end="11:27"><expr pos:start="11:22" pos:end="11:27"><literal type="string" pos:start="11:22" pos:end="11:27">"pal-"</literal></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:34" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:17">

        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:12">norm</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:18">PAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">arg</name> <operator pos:start="15:13" pos:end="15:14">+=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if<condition pos:start="17:14" pos:end="17:40">(<expr pos:start="17:15" pos:end="17:39"><operator pos:start="17:15" pos:end="17:15">!</operator><call pos:start="17:16" pos:end="17:39"><name pos:start="17:16" pos:end="17:22">strncmp</name><argument_list pos:start="17:23" pos:end="17:39">(<argument pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">arg</name></expr></argument>, <argument pos:start="17:29" pos:end="17:35"><expr pos:start="17:29" pos:end="17:35"><literal type="string" pos:start="17:29" pos:end="17:35">"ntsc-"</literal></expr></argument>, <argument pos:start="17:38" pos:end="17:38"><expr pos:start="17:38" pos:end="17:38"><literal type="number" pos:start="17:38" pos:end="17:38">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:42" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:20"><expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:12">norm</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:19">NTSC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:17"><expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">arg</name> <operator pos:start="21:13" pos:end="21:14">+=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">5</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="29:5">else if<condition pos:start="23:14" pos:end="23:40">(<expr pos:start="23:15" pos:end="23:39"><operator pos:start="23:15" pos:end="23:15">!</operator><call pos:start="23:16" pos:end="23:39"><name pos:start="23:16" pos:end="23:22">strncmp</name><argument_list pos:start="23:23" pos:end="23:39">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">arg</name></expr></argument>, <argument pos:start="23:29" pos:end="23:35"><expr pos:start="23:29" pos:end="23:35"><literal type="string" pos:start="23:29" pos:end="23:35">"film-"</literal></expr></argument>, <argument pos:start="23:38" pos:end="23:38"><expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:42" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:12">norm</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:19">FILM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">arg</name> <operator pos:start="27:13" pos:end="27:14">+=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">5</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="95:5">else <block pos:start="29:12" pos:end="95:5">{<block_content pos:start="31:9" pos:end="93:87">

        <decl_stmt pos:start="31:9" pos:end="31:15"><decl pos:start="31:9" pos:end="31:14"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:14">fr</name></decl>;</decl_stmt>

        <comment type="block" pos:start="33:9" pos:end="33:58">/* Calculate FR via float to avoid int overflow */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:61"><expr pos:start="35:9" pos:end="35:60"><name pos:start="35:9" pos:end="35:10">fr</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:17">int</name><operator pos:start="35:18" pos:end="35:18">)</operator><operator pos:start="35:19" pos:end="35:19">(</operator><name pos:start="35:20" pos:end="35:33"><name pos:start="35:20" pos:end="35:29">frame_rate</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:33">num</name></name> <operator pos:start="35:35" pos:end="35:35">*</operator> <literal type="number" pos:start="35:37" pos:end="35:42">1000.0</literal> <operator pos:start="35:44" pos:end="35:44">/</operator> <name pos:start="35:46" pos:end="35:59"><name pos:start="35:46" pos:end="35:55">frame_rate</name><operator pos:start="35:56" pos:end="35:56">.</operator><name pos:start="35:57" pos:end="35:59">den</name></name><operator pos:start="35:60" pos:end="35:60">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="89:9"><if pos:start="37:9" pos:end="41:9">if<condition pos:start="37:11" pos:end="37:23">(<expr pos:start="37:12" pos:end="37:22"><name pos:start="37:12" pos:end="37:13">fr</name> <operator pos:start="37:15" pos:end="37:16">==</operator> <literal type="number" pos:start="37:18" pos:end="37:22">25000</literal></expr>)</condition> <block pos:start="37:25" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:23">

            <expr_stmt pos:start="39:13" pos:end="39:23"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:16">norm</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:22">PAL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="45:9">else if<condition pos:start="41:18" pos:end="41:49">(<expr pos:start="41:19" pos:end="41:48"><operator pos:start="41:19" pos:end="41:19">(</operator><name pos:start="41:20" pos:end="41:21">fr</name> <operator pos:start="41:23" pos:end="41:24">==</operator> <literal type="number" pos:start="41:26" pos:end="41:30">29970</literal><operator pos:start="41:31" pos:end="41:31">)</operator> <operator pos:start="41:33" pos:end="41:34">||</operator> <operator pos:start="41:36" pos:end="41:36">(</operator><name pos:start="41:37" pos:end="41:38">fr</name> <operator pos:start="41:40" pos:end="41:41">==</operator> <literal type="number" pos:start="41:43" pos:end="41:47">23976</literal><operator pos:start="41:48" pos:end="41:48">)</operator></expr>)</condition> <block pos:start="41:51" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:24">

            <expr_stmt pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:16">norm</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:23">NTSC</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="89:9">else <block pos:start="45:16" pos:end="89:9">{<block_content pos:start="49:13" pos:end="87:13">

            <comment type="block" pos:start="47:13" pos:end="47:73">/* Try to determine PAL/NTSC by peeking in the input files */</comment>

            <if_stmt pos:start="49:13" pos:end="87:13"><if pos:start="49:13" pos:end="87:13">if<condition pos:start="49:15" pos:end="49:30">(<expr pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:29">nb_input_files</name></expr>)</condition> <block pos:start="49:32" pos:end="87:13">{<block_content pos:start="51:17" pos:end="85:17">

                <decl_stmt pos:start="51:17" pos:end="51:25"><decl pos:start="51:17" pos:end="51:21"><type pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">int</name></type> <name pos:start="51:21" pos:end="51:21">i</name></decl>, <decl pos:start="51:24" pos:end="51:24"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:24" pos:end="51:24">j</name></decl>;</decl_stmt>

                <for pos:start="53:17" pos:end="85:17">for<control pos:start="53:20" pos:end="53:51">(<init pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">j</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>;</init> <condition pos:start="53:28" pos:end="53:46"><expr pos:start="53:28" pos:end="53:45"><name pos:start="53:28" pos:end="53:28">j</name> <operator pos:start="53:30" pos:end="53:30">&lt;</operator> <name pos:start="53:32" pos:end="53:45">nb_input_files</name></expr>;</condition> <incr pos:start="53:48" pos:end="53:50"><expr pos:start="53:48" pos:end="53:50"><name pos:start="53:48" pos:end="53:48">j</name><operator pos:start="53:49" pos:end="53:50">++</operator></expr></incr>)</control> <block pos:start="53:53" pos:end="85:17">{<block_content pos:start="55:21" pos:end="83:30">

                    <for pos:start="55:21" pos:end="79:21">for<control pos:start="55:24" pos:end="55:67">(<init pos:start="55:25" pos:end="55:30"><expr pos:start="55:25" pos:end="55:29"><name pos:start="55:25" pos:end="55:25">i</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:29">0</literal></expr>;</init> <condition pos:start="55:32" pos:end="55:62"><expr pos:start="55:32" pos:end="55:61"><name pos:start="55:32" pos:end="55:32">i</name> <operator pos:start="55:34" pos:end="55:34">&lt;</operator> <name pos:start="55:36" pos:end="55:49"><name pos:start="55:36" pos:end="55:46">input_files</name><index pos:start="55:47" pos:end="55:49">[<expr pos:start="55:48" pos:end="55:48"><name pos:start="55:48" pos:end="55:48">j</name></expr>]</index></name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:61">nb_streams</name></expr>;</condition> <incr pos:start="55:64" pos:end="55:66"><expr pos:start="55:64" pos:end="55:66"><name pos:start="55:64" pos:end="55:64">i</name><operator pos:start="55:65" pos:end="55:66">++</operator></expr></incr>)</control> <block pos:start="55:69" pos:end="79:21">{<block_content pos:start="57:25" pos:end="77:25">

                        <decl_stmt pos:start="57:25" pos:end="57:78"><decl pos:start="57:25" pos:end="57:77"><type pos:start="57:25" pos:end="57:40"><name pos:start="57:25" pos:end="57:38">AVCodecContext</name> <modifier pos:start="57:40" pos:end="57:40">*</modifier></type><name pos:start="57:41" pos:end="57:41">c</name> <init pos:start="57:43" pos:end="57:77">= <expr pos:start="57:45" pos:end="57:77"><name pos:start="57:45" pos:end="57:58"><name pos:start="57:45" pos:end="57:55">input_files</name><index pos:start="57:56" pos:end="57:58">[<expr pos:start="57:57" pos:end="57:57"><name pos:start="57:57" pos:end="57:57">j</name></expr>]</index></name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:70"><name pos:start="57:61" pos:end="57:67">streams</name><index pos:start="57:68" pos:end="57:70">[<expr pos:start="57:69" pos:end="57:69"><name pos:start="57:69" pos:end="57:69">i</name></expr>]</index></name><operator pos:start="57:71" pos:end="57:72">-&gt;</operator><name pos:start="57:73" pos:end="57:77">codec</name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="59:25" pos:end="61:37"><if pos:start="59:25" pos:end="61:37">if<condition pos:start="59:27" pos:end="59:63">(<expr pos:start="59:28" pos:end="59:62"><name pos:start="59:28" pos:end="59:40"><name pos:start="59:28" pos:end="59:28">c</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:40">codec_type</name></name> <operator pos:start="59:42" pos:end="59:43">!=</operator> <name pos:start="59:45" pos:end="59:62">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="61:29" pos:end="61:37"><block_content pos:start="61:29" pos:end="61:37">

                            <continue pos:start="61:29" pos:end="61:37">continue;</continue></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="63:25" pos:end="63:72"><expr pos:start="63:25" pos:end="63:71"><name pos:start="63:25" pos:end="63:26">fr</name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:45"><name pos:start="63:30" pos:end="63:30">c</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:41">time_base</name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:45">den</name></name> <operator pos:start="63:47" pos:end="63:47">*</operator> <literal type="number" pos:start="63:49" pos:end="63:52">1000</literal> <operator pos:start="63:54" pos:end="63:54">/</operator> <name pos:start="63:56" pos:end="63:71"><name pos:start="63:56" pos:end="63:56">c</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:67">time_base</name><operator pos:start="63:68" pos:end="63:68">.</operator><name pos:start="63:69" pos:end="63:71">num</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="65:25" pos:end="77:25"><if pos:start="65:25" pos:end="71:25">if<condition pos:start="65:27" pos:end="65:39">(<expr pos:start="65:28" pos:end="65:38"><name pos:start="65:28" pos:end="65:29">fr</name> <operator pos:start="65:31" pos:end="65:32">==</operator> <literal type="number" pos:start="65:34" pos:end="65:38">25000</literal></expr>)</condition> <block pos:start="65:41" pos:end="71:25">{<block_content pos:start="67:29" pos:end="69:34">

                            <expr_stmt pos:start="67:29" pos:end="67:39"><expr pos:start="67:29" pos:end="67:38"><name pos:start="67:29" pos:end="67:32">norm</name> <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:38">PAL</name></expr>;</expr_stmt>

                            <break pos:start="69:29" pos:end="69:34">break;</break>

                        </block_content>}</block></if> <if type="elseif" pos:start="71:27" pos:end="77:25">else if<condition pos:start="71:34" pos:end="71:65">(<expr pos:start="71:35" pos:end="71:64"><operator pos:start="71:35" pos:end="71:35">(</operator><name pos:start="71:36" pos:end="71:37">fr</name> <operator pos:start="71:39" pos:end="71:40">==</operator> <literal type="number" pos:start="71:42" pos:end="71:46">29970</literal><operator pos:start="71:47" pos:end="71:47">)</operator> <operator pos:start="71:49" pos:end="71:50">||</operator> <operator pos:start="71:52" pos:end="71:52">(</operator><name pos:start="71:53" pos:end="71:54">fr</name> <operator pos:start="71:56" pos:end="71:57">==</operator> <literal type="number" pos:start="71:59" pos:end="71:63">23976</literal><operator pos:start="71:64" pos:end="71:64">)</operator></expr>)</condition> <block pos:start="71:67" pos:end="77:25">{<block_content pos:start="73:29" pos:end="75:34">

                            <expr_stmt pos:start="73:29" pos:end="73:40"><expr pos:start="73:29" pos:end="73:39"><name pos:start="73:29" pos:end="73:32">norm</name> <operator pos:start="73:34" pos:end="73:34">=</operator> <name pos:start="73:36" pos:end="73:39">NTSC</name></expr>;</expr_stmt>

                            <break pos:start="75:29" pos:end="75:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                    <if_stmt pos:start="81:21" pos:end="83:30"><if pos:start="81:21" pos:end="83:30">if<condition pos:start="81:23" pos:end="81:39">(<expr pos:start="81:24" pos:end="81:38"><name pos:start="81:24" pos:end="81:27">norm</name> <operator pos:start="81:29" pos:end="81:30">!=</operator> <name pos:start="81:32" pos:end="81:38">UNKNOWN</name></expr>)</condition><block type="pseudo" pos:start="83:25" pos:end="83:30"><block_content pos:start="83:25" pos:end="83:30">

                        <break pos:start="83:25" pos:end="83:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="91:9" pos:end="93:87"><if pos:start="91:9" pos:end="93:87">if<condition pos:start="91:11" pos:end="91:38">(<expr pos:start="91:12" pos:end="91:37"><name pos:start="91:12" pos:end="91:18">verbose</name> <operator pos:start="91:20" pos:end="91:21">&amp;&amp;</operator> <name pos:start="91:23" pos:end="91:26">norm</name> <operator pos:start="91:28" pos:end="91:29">!=</operator> <name pos:start="91:31" pos:end="91:37">UNKNOWN</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:87"><block_content pos:start="93:13" pos:end="93:87">

            <expr_stmt pos:start="93:13" pos:end="93:87"><expr pos:start="93:13" pos:end="93:86"><call pos:start="93:13" pos:end="93:86"><name pos:start="93:13" pos:end="93:19">fprintf</name><argument_list pos:start="93:20" pos:end="93:86">(<argument pos:start="93:21" pos:end="93:26"><expr pos:start="93:21" pos:end="93:26"><name pos:start="93:21" pos:end="93:26">stderr</name></expr></argument>, <argument pos:start="93:29" pos:end="93:55"><expr pos:start="93:29" pos:end="93:55"><literal type="string" pos:start="93:29" pos:end="93:55">"Assuming %s for target.\n"</literal></expr></argument>, <argument pos:start="93:58" pos:end="93:85"><expr pos:start="93:58" pos:end="93:85"><ternary pos:start="93:58" pos:end="93:85"><condition pos:start="93:58" pos:end="93:70"><expr pos:start="93:58" pos:end="93:68"><name pos:start="93:58" pos:end="93:61">norm</name> <operator pos:start="93:63" pos:end="93:64">==</operator> <name pos:start="93:66" pos:end="93:68">PAL</name></expr> ?</condition><then pos:start="93:72" pos:end="93:76"> <expr pos:start="93:72" pos:end="93:76"><literal type="string" pos:start="93:72" pos:end="93:76">"PAL"</literal></expr> </then><else pos:start="93:78" pos:end="93:85">: <expr pos:start="93:80" pos:end="93:85"><literal type="string" pos:start="93:80" pos:end="93:85">"NTSC"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="99:5" pos:end="109:5"><if pos:start="99:5" pos:end="109:5">if<condition pos:start="99:7" pos:end="99:23">(<expr pos:start="99:8" pos:end="99:22"><name pos:start="99:8" pos:end="99:11">norm</name> <operator pos:start="99:13" pos:end="99:14">==</operator> <name pos:start="99:16" pos:end="99:22">UNKNOWN</name></expr>)</condition> <block pos:start="99:25" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:23">

        <expr_stmt pos:start="101:9" pos:end="101:87"><expr pos:start="101:9" pos:end="101:86"><call pos:start="101:9" pos:end="101:86"><name pos:start="101:9" pos:end="101:15">fprintf</name><argument_list pos:start="101:16" pos:end="101:86">(<argument pos:start="101:17" pos:end="101:22"><expr pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:22">stderr</name></expr></argument>, <argument pos:start="101:25" pos:end="101:85"><expr pos:start="101:25" pos:end="101:85"><literal type="string" pos:start="101:25" pos:end="101:85">"Could not determine norm (PAL/NTSC/NTSC-Film) for target.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:89"><expr pos:start="103:9" pos:end="103:88"><call pos:start="103:9" pos:end="103:88"><name pos:start="103:9" pos:end="103:15">fprintf</name><argument_list pos:start="103:16" pos:end="103:88">(<argument pos:start="103:17" pos:end="103:22"><expr pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:22">stderr</name></expr></argument>, <argument pos:start="103:25" pos:end="103:87"><expr pos:start="103:25" pos:end="103:87"><literal type="string" pos:start="103:25" pos:end="103:87">"Please prefix target with \"pal-\", \"ntsc-\" or \"film-\",\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:65"><expr pos:start="105:9" pos:end="105:64"><call pos:start="105:9" pos:end="105:64"><name pos:start="105:9" pos:end="105:15">fprintf</name><argument_list pos:start="105:16" pos:end="105:64">(<argument pos:start="105:17" pos:end="105:22"><expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:22">stderr</name></expr></argument>, <argument pos:start="105:25" pos:end="105:63"><expr pos:start="105:25" pos:end="105:63"><literal type="string" pos:start="105:25" pos:end="105:63">"or set a framerate with \"-r xxx\".\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:23"><expr pos:start="107:9" pos:end="107:22"><call pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:19">ffmpeg_exit</name><argument_list pos:start="107:20" pos:end="107:22">(<argument pos:start="107:21" pos:end="107:21"><expr pos:start="107:21" pos:end="107:21"><literal type="number" pos:start="107:21" pos:end="107:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="285:5"><if pos:start="113:5" pos:end="169:5">if<condition pos:start="113:7" pos:end="113:27">(<expr pos:start="113:8" pos:end="113:26"><operator pos:start="113:8" pos:end="113:8">!</operator><call pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:14">strcmp</name><argument_list pos:start="113:15" pos:end="113:26">(<argument pos:start="113:16" pos:end="113:18"><expr pos:start="113:16" pos:end="113:18"><name pos:start="113:16" pos:end="113:18">arg</name></expr></argument>, <argument pos:start="113:21" pos:end="113:25"><expr pos:start="113:21" pos:end="113:25"><literal type="string" pos:start="113:21" pos:end="113:25">"vcd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:29" pos:end="169:5">{<block_content pos:start="117:9" pos:end="167:46">



        <expr_stmt pos:start="117:9" pos:end="117:38"><expr pos:start="117:9" pos:end="117:37"><call pos:start="117:9" pos:end="117:37"><name pos:start="117:9" pos:end="117:23">opt_video_codec</name><argument_list pos:start="117:24" pos:end="117:37">(<argument pos:start="117:25" pos:end="117:36"><expr pos:start="117:25" pos:end="117:36"><literal type="string" pos:start="117:25" pos:end="117:36">"mpeg1video"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:31"><expr pos:start="119:9" pos:end="119:30"><call pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:23">opt_audio_codec</name><argument_list pos:start="119:24" pos:end="119:30">(<argument pos:start="119:25" pos:end="119:29"><expr pos:start="119:25" pos:end="119:29"><literal type="string" pos:start="119:25" pos:end="119:29">"mp2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><call pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:18">opt_format</name><argument_list pos:start="121:19" pos:end="121:25">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><literal type="string" pos:start="121:20" pos:end="121:24">"vcd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:60"><expr pos:start="125:9" pos:end="125:59"><call pos:start="125:9" pos:end="125:59"><name pos:start="125:9" pos:end="125:22">opt_frame_size</name><argument_list pos:start="125:23" pos:end="125:59">(<argument pos:start="125:24" pos:end="125:58"><expr pos:start="125:24" pos:end="125:58"><ternary pos:start="125:24" pos:end="125:58"><condition pos:start="125:24" pos:end="125:36"><expr pos:start="125:24" pos:end="125:34"><name pos:start="125:24" pos:end="125:27">norm</name> <operator pos:start="125:29" pos:end="125:30">==</operator> <name pos:start="125:32" pos:end="125:34">PAL</name></expr> ?</condition><then pos:start="125:38" pos:end="125:46"> <expr pos:start="125:38" pos:end="125:46"><literal type="string" pos:start="125:38" pos:end="125:46">"352x288"</literal></expr> </then><else pos:start="125:48" pos:end="125:58">: <expr pos:start="125:50" pos:end="125:58"><literal type="string" pos:start="125:50" pos:end="125:58">"352x240"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><call pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:22">opt_frame_rate</name><argument_list pos:start="127:23" pos:end="127:47">(<argument pos:start="127:24" pos:end="127:27"><expr pos:start="127:24" pos:end="127:27"><name pos:start="127:24" pos:end="127:27">NULL</name></expr></argument>, <argument pos:start="127:30" pos:end="127:46"><expr pos:start="127:30" pos:end="127:46"><name pos:start="127:30" pos:end="127:46"><name pos:start="127:30" pos:end="127:40">frame_rates</name><index pos:start="127:41" pos:end="127:46">[<expr pos:start="127:42" pos:end="127:45"><name pos:start="127:42" pos:end="127:45">norm</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:52"><expr pos:start="129:9" pos:end="129:51"><call pos:start="129:9" pos:end="129:51"><name pos:start="129:9" pos:end="129:19">opt_default</name><argument_list pos:start="129:20" pos:end="129:51">(<argument pos:start="129:21" pos:end="129:23"><expr pos:start="129:21" pos:end="129:23"><literal type="string" pos:start="129:21" pos:end="129:23">"g"</literal></expr></argument>, <argument pos:start="129:26" pos:end="129:50"><expr pos:start="129:26" pos:end="129:50"><ternary pos:start="129:26" pos:end="129:50"><condition pos:start="129:26" pos:end="129:38"><expr pos:start="129:26" pos:end="129:36"><name pos:start="129:26" pos:end="129:29">norm</name> <operator pos:start="129:31" pos:end="129:32">==</operator> <name pos:start="129:34" pos:end="129:36">PAL</name></expr> ?</condition><then pos:start="129:40" pos:end="129:43"> <expr pos:start="129:40" pos:end="129:43"><literal type="string" pos:start="129:40" pos:end="129:43">"15"</literal></expr> </then><else pos:start="129:45" pos:end="129:50">: <expr pos:start="129:47" pos:end="129:50"><literal type="string" pos:start="129:47" pos:end="129:50">"18"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:36"><expr pos:start="133:9" pos:end="133:35"><call pos:start="133:9" pos:end="133:35"><name pos:start="133:9" pos:end="133:19">opt_default</name><argument_list pos:start="133:20" pos:end="133:35">(<argument pos:start="133:21" pos:end="133:23"><expr pos:start="133:21" pos:end="133:23"><literal type="string" pos:start="133:21" pos:end="133:23">"b"</literal></expr></argument>, <argument pos:start="133:26" pos:end="133:34"><expr pos:start="133:26" pos:end="133:34"><literal type="string" pos:start="133:26" pos:end="133:34">"1150000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:42"><expr pos:start="135:9" pos:end="135:41"><call pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:19">opt_default</name><argument_list pos:start="135:20" pos:end="135:41">(<argument pos:start="135:21" pos:end="135:29"><expr pos:start="135:21" pos:end="135:29"><literal type="string" pos:start="135:21" pos:end="135:29">"maxrate"</literal></expr></argument>, <argument pos:start="135:32" pos:end="135:40"><expr pos:start="135:32" pos:end="135:40"><literal type="string" pos:start="135:32" pos:end="135:40">"1150000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:42"><expr pos:start="137:9" pos:end="137:41"><call pos:start="137:9" pos:end="137:41"><name pos:start="137:9" pos:end="137:19">opt_default</name><argument_list pos:start="137:20" pos:end="137:41">(<argument pos:start="137:21" pos:end="137:29"><expr pos:start="137:21" pos:end="137:29"><literal type="string" pos:start="137:21" pos:end="137:29">"minrate"</literal></expr></argument>, <argument pos:start="137:32" pos:end="137:40"><expr pos:start="137:32" pos:end="137:40"><literal type="string" pos:start="137:32" pos:end="137:40">"1150000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:41"><expr pos:start="139:9" pos:end="139:40"><call pos:start="139:9" pos:end="139:40"><name pos:start="139:9" pos:end="139:19">opt_default</name><argument_list pos:start="139:20" pos:end="139:40">(<argument pos:start="139:21" pos:end="139:29"><expr pos:start="139:21" pos:end="139:29"><literal type="string" pos:start="139:21" pos:end="139:29">"bufsize"</literal></expr></argument>, <argument pos:start="139:32" pos:end="139:39"><expr pos:start="139:32" pos:end="139:39"><literal type="string" pos:start="139:32" pos:end="139:39">"327680"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="139:43" pos:end="139:55">// 40*1024*8;</comment>



        <expr_stmt pos:start="143:9" pos:end="143:36"><expr pos:start="143:9" pos:end="143:35"><call pos:start="143:9" pos:end="143:35"><name pos:start="143:9" pos:end="143:19">opt_default</name><argument_list pos:start="143:20" pos:end="143:35">(<argument pos:start="143:21" pos:end="143:24"><expr pos:start="143:21" pos:end="143:24"><literal type="string" pos:start="143:21" pos:end="143:24">"ab"</literal></expr></argument>, <argument pos:start="143:27" pos:end="143:34"><expr pos:start="143:27" pos:end="143:34"><literal type="string" pos:start="143:27" pos:end="143:34">"224000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:34"><expr pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:25">audio_sample_rate</name> <operator pos:start="145:27" pos:end="145:27">=</operator> <literal type="number" pos:start="145:29" pos:end="145:33">44100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:27"><expr pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:22">audio_channels</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">2</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:42"><expr pos:start="151:9" pos:end="151:41"><call pos:start="151:9" pos:end="151:41"><name pos:start="151:9" pos:end="151:19">opt_default</name><argument_list pos:start="151:20" pos:end="151:41">(<argument pos:start="151:21" pos:end="151:32"><expr pos:start="151:21" pos:end="151:32"><literal type="string" pos:start="151:21" pos:end="151:32">"packetsize"</literal></expr></argument>, <argument pos:start="151:35" pos:end="151:40"><expr pos:start="151:35" pos:end="151:40"><literal type="string" pos:start="151:35" pos:end="151:40">"2324"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:42"><expr pos:start="153:9" pos:end="153:41"><call pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:19">opt_default</name><argument_list pos:start="153:20" pos:end="153:41">(<argument pos:start="153:21" pos:end="153:29"><expr pos:start="153:21" pos:end="153:29"><literal type="string" pos:start="153:21" pos:end="153:29">"muxrate"</literal></expr></argument>, <argument pos:start="153:32" pos:end="153:40"><expr pos:start="153:32" pos:end="153:40"><literal type="string" pos:start="153:32" pos:end="153:40">"1411200"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="153:44" pos:end="153:60">// 2352 * 75 * 8;</comment>



        <comment type="block" pos:start="157:9" pos:end="165:58">/* We have to offset the PTS, so that it is consistent with the SCR.

           SCR starts at 36000, but the first two packs contain only padding

           and the first pack from the other stream, respectively, may also have

           been written before.

           So the real data starts at SCR 36000+3*1200. */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:46"><expr pos:start="167:9" pos:end="167:45"><name pos:start="167:9" pos:end="167:19">mux_preload</name><operator pos:start="167:20" pos:end="167:20">=</operator> <operator pos:start="167:22" pos:end="167:22">(</operator><literal type="number" pos:start="167:23" pos:end="167:28">36000</literal><operator pos:start="167:28" pos:end="167:28">+</operator><literal type="number" pos:start="167:29" pos:end="167:29">3</literal><operator pos:start="167:30" pos:end="167:30">*</operator><literal type="number" pos:start="167:31" pos:end="167:34">1200</literal><operator pos:start="167:35" pos:end="167:35">)</operator> <operator pos:start="167:37" pos:end="167:37">/</operator> <literal type="number" pos:start="167:39" pos:end="167:45">90000.0</literal></expr>;</expr_stmt> <comment type="line" pos:start="167:48" pos:end="167:53">//0.44</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="169:7" pos:end="213:5">else if<condition pos:start="169:14" pos:end="169:35">(<expr pos:start="169:15" pos:end="169:34"><operator pos:start="169:15" pos:end="169:15">!</operator><call pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:21">strcmp</name><argument_list pos:start="169:22" pos:end="169:34">(<argument pos:start="169:23" pos:end="169:25"><expr pos:start="169:23" pos:end="169:25"><name pos:start="169:23" pos:end="169:25">arg</name></expr></argument>, <argument pos:start="169:28" pos:end="169:33"><expr pos:start="169:28" pos:end="169:33"><literal type="string" pos:start="169:28" pos:end="169:33">"svcd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:37" pos:end="213:5">{<block_content pos:start="173:9" pos:end="209:42">



        <expr_stmt pos:start="173:9" pos:end="173:38"><expr pos:start="173:9" pos:end="173:37"><call pos:start="173:9" pos:end="173:37"><name pos:start="173:9" pos:end="173:23">opt_video_codec</name><argument_list pos:start="173:24" pos:end="173:37">(<argument pos:start="173:25" pos:end="173:36"><expr pos:start="173:25" pos:end="173:36"><literal type="string" pos:start="173:25" pos:end="173:36">"mpeg2video"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:31"><expr pos:start="175:9" pos:end="175:30"><call pos:start="175:9" pos:end="175:30"><name pos:start="175:9" pos:end="175:23">opt_audio_codec</name><argument_list pos:start="175:24" pos:end="175:30">(<argument pos:start="175:25" pos:end="175:29"><expr pos:start="175:25" pos:end="175:29"><literal type="string" pos:start="175:25" pos:end="175:29">"mp2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:27"><expr pos:start="177:9" pos:end="177:26"><call pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:18">opt_format</name><argument_list pos:start="177:19" pos:end="177:26">(<argument pos:start="177:20" pos:end="177:25"><expr pos:start="177:20" pos:end="177:25"><literal type="string" pos:start="177:20" pos:end="177:25">"svcd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:60"><expr pos:start="181:9" pos:end="181:59"><call pos:start="181:9" pos:end="181:59"><name pos:start="181:9" pos:end="181:22">opt_frame_size</name><argument_list pos:start="181:23" pos:end="181:59">(<argument pos:start="181:24" pos:end="181:58"><expr pos:start="181:24" pos:end="181:58"><ternary pos:start="181:24" pos:end="181:58"><condition pos:start="181:24" pos:end="181:36"><expr pos:start="181:24" pos:end="181:34"><name pos:start="181:24" pos:end="181:27">norm</name> <operator pos:start="181:29" pos:end="181:30">==</operator> <name pos:start="181:32" pos:end="181:34">PAL</name></expr> ?</condition><then pos:start="181:38" pos:end="181:46"> <expr pos:start="181:38" pos:end="181:46"><literal type="string" pos:start="181:38" pos:end="181:46">"480x576"</literal></expr> </then><else pos:start="181:48" pos:end="181:58">: <expr pos:start="181:50" pos:end="181:58"><literal type="string" pos:start="181:50" pos:end="181:58">"480x480"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:48"><expr pos:start="183:9" pos:end="183:47"><call pos:start="183:9" pos:end="183:47"><name pos:start="183:9" pos:end="183:22">opt_frame_rate</name><argument_list pos:start="183:23" pos:end="183:47">(<argument pos:start="183:24" pos:end="183:27"><expr pos:start="183:24" pos:end="183:27"><name pos:start="183:24" pos:end="183:27">NULL</name></expr></argument>, <argument pos:start="183:30" pos:end="183:46"><expr pos:start="183:30" pos:end="183:46"><name pos:start="183:30" pos:end="183:46"><name pos:start="183:30" pos:end="183:40">frame_rates</name><index pos:start="183:41" pos:end="183:46">[<expr pos:start="183:42" pos:end="183:45"><name pos:start="183:42" pos:end="183:45">norm</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:52"><expr pos:start="185:9" pos:end="185:51"><call pos:start="185:9" pos:end="185:51"><name pos:start="185:9" pos:end="185:19">opt_default</name><argument_list pos:start="185:20" pos:end="185:51">(<argument pos:start="185:21" pos:end="185:23"><expr pos:start="185:21" pos:end="185:23"><literal type="string" pos:start="185:21" pos:end="185:23">"g"</literal></expr></argument>, <argument pos:start="185:26" pos:end="185:50"><expr pos:start="185:26" pos:end="185:50"><ternary pos:start="185:26" pos:end="185:50"><condition pos:start="185:26" pos:end="185:38"><expr pos:start="185:26" pos:end="185:36"><name pos:start="185:26" pos:end="185:29">norm</name> <operator pos:start="185:31" pos:end="185:32">==</operator> <name pos:start="185:34" pos:end="185:36">PAL</name></expr> ?</condition><then pos:start="185:40" pos:end="185:43"> <expr pos:start="185:40" pos:end="185:43"><literal type="string" pos:start="185:40" pos:end="185:43">"15"</literal></expr> </then><else pos:start="185:45" pos:end="185:50">: <expr pos:start="185:47" pos:end="185:50"><literal type="string" pos:start="185:47" pos:end="185:50">"18"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><call pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:19">opt_default</name><argument_list pos:start="189:20" pos:end="189:35">(<argument pos:start="189:21" pos:end="189:23"><expr pos:start="189:21" pos:end="189:23"><literal type="string" pos:start="189:21" pos:end="189:23">"b"</literal></expr></argument>, <argument pos:start="189:26" pos:end="189:34"><expr pos:start="189:26" pos:end="189:34"><literal type="string" pos:start="189:26" pos:end="189:34">"2040000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:42"><expr pos:start="191:9" pos:end="191:41"><call pos:start="191:9" pos:end="191:41"><name pos:start="191:9" pos:end="191:19">opt_default</name><argument_list pos:start="191:20" pos:end="191:41">(<argument pos:start="191:21" pos:end="191:29"><expr pos:start="191:21" pos:end="191:29"><literal type="string" pos:start="191:21" pos:end="191:29">"maxrate"</literal></expr></argument>, <argument pos:start="191:32" pos:end="191:40"><expr pos:start="191:32" pos:end="191:40"><literal type="string" pos:start="191:32" pos:end="191:40">"2516000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:36"><expr pos:start="193:9" pos:end="193:35"><call pos:start="193:9" pos:end="193:35"><name pos:start="193:9" pos:end="193:19">opt_default</name><argument_list pos:start="193:20" pos:end="193:35">(<argument pos:start="193:21" pos:end="193:29"><expr pos:start="193:21" pos:end="193:29"><literal type="string" pos:start="193:21" pos:end="193:29">"minrate"</literal></expr></argument>, <argument pos:start="193:32" pos:end="193:34"><expr pos:start="193:32" pos:end="193:34"><literal type="string" pos:start="193:32" pos:end="193:34">"0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="193:38" pos:end="193:47">//1145000;</comment>

        <expr_stmt pos:start="195:9" pos:end="195:42"><expr pos:start="195:9" pos:end="195:41"><call pos:start="195:9" pos:end="195:41"><name pos:start="195:9" pos:end="195:19">opt_default</name><argument_list pos:start="195:20" pos:end="195:41">(<argument pos:start="195:21" pos:end="195:29"><expr pos:start="195:21" pos:end="195:29"><literal type="string" pos:start="195:21" pos:end="195:29">"bufsize"</literal></expr></argument>, <argument pos:start="195:32" pos:end="195:40"><expr pos:start="195:32" pos:end="195:40"><literal type="string" pos:start="195:32" pos:end="195:40">"1835008"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="195:44" pos:end="195:56">//224*1024*8;</comment>

        <expr_stmt pos:start="197:9" pos:end="197:45"><expr pos:start="197:9" pos:end="197:44"><call pos:start="197:9" pos:end="197:44"><name pos:start="197:9" pos:end="197:19">opt_default</name><argument_list pos:start="197:20" pos:end="197:44">(<argument pos:start="197:21" pos:end="197:27"><expr pos:start="197:21" pos:end="197:27"><literal type="string" pos:start="197:21" pos:end="197:27">"flags"</literal></expr></argument>, <argument pos:start="197:30" pos:end="197:43"><expr pos:start="197:30" pos:end="197:43"><literal type="string" pos:start="197:30" pos:end="197:43">"+scan_offset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="203:9" pos:end="203:36"><expr pos:start="203:9" pos:end="203:35"><call pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:19">opt_default</name><argument_list pos:start="203:20" pos:end="203:35">(<argument pos:start="203:21" pos:end="203:24"><expr pos:start="203:21" pos:end="203:24"><literal type="string" pos:start="203:21" pos:end="203:24">"ab"</literal></expr></argument>, <argument pos:start="203:27" pos:end="203:34"><expr pos:start="203:27" pos:end="203:34"><literal type="string" pos:start="203:27" pos:end="203:34">"224000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:34"><expr pos:start="205:9" pos:end="205:33"><name pos:start="205:9" pos:end="205:25">audio_sample_rate</name> <operator pos:start="205:27" pos:end="205:27">=</operator> <literal type="number" pos:start="205:29" pos:end="205:33">44100</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:42"><expr pos:start="209:9" pos:end="209:41"><call pos:start="209:9" pos:end="209:41"><name pos:start="209:9" pos:end="209:19">opt_default</name><argument_list pos:start="209:20" pos:end="209:41">(<argument pos:start="209:21" pos:end="209:32"><expr pos:start="209:21" pos:end="209:32"><literal type="string" pos:start="209:21" pos:end="209:32">"packetsize"</literal></expr></argument>, <argument pos:start="209:35" pos:end="209:40"><expr pos:start="209:35" pos:end="209:40"><literal type="string" pos:start="209:35" pos:end="209:40">"2324"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="213:7" pos:end="255:5">else if<condition pos:start="213:14" pos:end="213:34">(<expr pos:start="213:15" pos:end="213:33"><operator pos:start="213:15" pos:end="213:15">!</operator><call pos:start="213:16" pos:end="213:33"><name pos:start="213:16" pos:end="213:21">strcmp</name><argument_list pos:start="213:22" pos:end="213:33">(<argument pos:start="213:23" pos:end="213:25"><expr pos:start="213:23" pos:end="213:25"><name pos:start="213:23" pos:end="213:25">arg</name></expr></argument>, <argument pos:start="213:28" pos:end="213:32"><expr pos:start="213:28" pos:end="213:32"><literal type="string" pos:start="213:28" pos:end="213:32">"dvd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="213:36" pos:end="255:5">{<block_content pos:start="217:9" pos:end="251:34">



        <expr_stmt pos:start="217:9" pos:end="217:38"><expr pos:start="217:9" pos:end="217:37"><call pos:start="217:9" pos:end="217:37"><name pos:start="217:9" pos:end="217:23">opt_video_codec</name><argument_list pos:start="217:24" pos:end="217:37">(<argument pos:start="217:25" pos:end="217:36"><expr pos:start="217:25" pos:end="217:36"><literal type="string" pos:start="217:25" pos:end="217:36">"mpeg2video"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:31"><expr pos:start="219:9" pos:end="219:30"><call pos:start="219:9" pos:end="219:30"><name pos:start="219:9" pos:end="219:23">opt_audio_codec</name><argument_list pos:start="219:24" pos:end="219:30">(<argument pos:start="219:25" pos:end="219:29"><expr pos:start="219:25" pos:end="219:29"><literal type="string" pos:start="219:25" pos:end="219:29">"ac3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:26"><expr pos:start="221:9" pos:end="221:25"><call pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:18">opt_format</name><argument_list pos:start="221:19" pos:end="221:25">(<argument pos:start="221:20" pos:end="221:24"><expr pos:start="221:20" pos:end="221:24"><literal type="string" pos:start="221:20" pos:end="221:24">"dvd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:60"><expr pos:start="225:9" pos:end="225:59"><call pos:start="225:9" pos:end="225:59"><name pos:start="225:9" pos:end="225:22">opt_frame_size</name><argument_list pos:start="225:23" pos:end="225:59">(<argument pos:start="225:24" pos:end="225:58"><expr pos:start="225:24" pos:end="225:58"><ternary pos:start="225:24" pos:end="225:58"><condition pos:start="225:24" pos:end="225:36"><expr pos:start="225:24" pos:end="225:34"><name pos:start="225:24" pos:end="225:27">norm</name> <operator pos:start="225:29" pos:end="225:30">==</operator> <name pos:start="225:32" pos:end="225:34">PAL</name></expr> ?</condition><then pos:start="225:38" pos:end="225:46"> <expr pos:start="225:38" pos:end="225:46"><literal type="string" pos:start="225:38" pos:end="225:46">"720x576"</literal></expr> </then><else pos:start="225:48" pos:end="225:58">: <expr pos:start="225:50" pos:end="225:58"><literal type="string" pos:start="225:50" pos:end="225:58">"720x480"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:48"><expr pos:start="227:9" pos:end="227:47"><call pos:start="227:9" pos:end="227:47"><name pos:start="227:9" pos:end="227:22">opt_frame_rate</name><argument_list pos:start="227:23" pos:end="227:47">(<argument pos:start="227:24" pos:end="227:27"><expr pos:start="227:24" pos:end="227:27"><name pos:start="227:24" pos:end="227:27">NULL</name></expr></argument>, <argument pos:start="227:30" pos:end="227:46"><expr pos:start="227:30" pos:end="227:46"><name pos:start="227:30" pos:end="227:46"><name pos:start="227:30" pos:end="227:40">frame_rates</name><index pos:start="227:41" pos:end="227:46">[<expr pos:start="227:42" pos:end="227:45"><name pos:start="227:42" pos:end="227:45">norm</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:52"><expr pos:start="229:9" pos:end="229:51"><call pos:start="229:9" pos:end="229:51"><name pos:start="229:9" pos:end="229:19">opt_default</name><argument_list pos:start="229:20" pos:end="229:51">(<argument pos:start="229:21" pos:end="229:23"><expr pos:start="229:21" pos:end="229:23"><literal type="string" pos:start="229:21" pos:end="229:23">"g"</literal></expr></argument>, <argument pos:start="229:26" pos:end="229:50"><expr pos:start="229:26" pos:end="229:50"><ternary pos:start="229:26" pos:end="229:50"><condition pos:start="229:26" pos:end="229:38"><expr pos:start="229:26" pos:end="229:36"><name pos:start="229:26" pos:end="229:29">norm</name> <operator pos:start="229:31" pos:end="229:32">==</operator> <name pos:start="229:34" pos:end="229:36">PAL</name></expr> ?</condition><then pos:start="229:40" pos:end="229:43"> <expr pos:start="229:40" pos:end="229:43"><literal type="string" pos:start="229:40" pos:end="229:43">"15"</literal></expr> </then><else pos:start="229:45" pos:end="229:50">: <expr pos:start="229:47" pos:end="229:50"><literal type="string" pos:start="229:47" pos:end="229:50">"18"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:36"><expr pos:start="233:9" pos:end="233:35"><call pos:start="233:9" pos:end="233:35"><name pos:start="233:9" pos:end="233:19">opt_default</name><argument_list pos:start="233:20" pos:end="233:35">(<argument pos:start="233:21" pos:end="233:23"><expr pos:start="233:21" pos:end="233:23"><literal type="string" pos:start="233:21" pos:end="233:23">"b"</literal></expr></argument>, <argument pos:start="233:26" pos:end="233:34"><expr pos:start="233:26" pos:end="233:34"><literal type="string" pos:start="233:26" pos:end="233:34">"6000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:42"><expr pos:start="235:9" pos:end="235:41"><call pos:start="235:9" pos:end="235:41"><name pos:start="235:9" pos:end="235:19">opt_default</name><argument_list pos:start="235:20" pos:end="235:41">(<argument pos:start="235:21" pos:end="235:29"><expr pos:start="235:21" pos:end="235:29"><literal type="string" pos:start="235:21" pos:end="235:29">"maxrate"</literal></expr></argument>, <argument pos:start="235:32" pos:end="235:40"><expr pos:start="235:32" pos:end="235:40"><literal type="string" pos:start="235:32" pos:end="235:40">"9000000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:36"><expr pos:start="237:9" pos:end="237:35"><call pos:start="237:9" pos:end="237:35"><name pos:start="237:9" pos:end="237:19">opt_default</name><argument_list pos:start="237:20" pos:end="237:35">(<argument pos:start="237:21" pos:end="237:29"><expr pos:start="237:21" pos:end="237:29"><literal type="string" pos:start="237:21" pos:end="237:29">"minrate"</literal></expr></argument>, <argument pos:start="237:32" pos:end="237:34"><expr pos:start="237:32" pos:end="237:34"><literal type="string" pos:start="237:32" pos:end="237:34">"0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="237:38" pos:end="237:47">//1500000;</comment>

        <expr_stmt pos:start="239:9" pos:end="239:42"><expr pos:start="239:9" pos:end="239:41"><call pos:start="239:9" pos:end="239:41"><name pos:start="239:9" pos:end="239:19">opt_default</name><argument_list pos:start="239:20" pos:end="239:41">(<argument pos:start="239:21" pos:end="239:29"><expr pos:start="239:21" pos:end="239:29"><literal type="string" pos:start="239:21" pos:end="239:29">"bufsize"</literal></expr></argument>, <argument pos:start="239:32" pos:end="239:40"><expr pos:start="239:32" pos:end="239:40"><literal type="string" pos:start="239:32" pos:end="239:40">"1835008"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="239:44" pos:end="239:56">//224*1024*8;</comment>



        <expr_stmt pos:start="243:9" pos:end="243:42"><expr pos:start="243:9" pos:end="243:41"><call pos:start="243:9" pos:end="243:41"><name pos:start="243:9" pos:end="243:19">opt_default</name><argument_list pos:start="243:20" pos:end="243:41">(<argument pos:start="243:21" pos:end="243:32"><expr pos:start="243:21" pos:end="243:32"><literal type="string" pos:start="243:21" pos:end="243:32">"packetsize"</literal></expr></argument>, <argument pos:start="243:35" pos:end="243:40"><expr pos:start="243:35" pos:end="243:40"><literal type="string" pos:start="243:35" pos:end="243:40">"2048"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="243:45" pos:end="243:144">// from www.mpucoder.com: DVD sectors contain 2048 bytes of data, this is also the size of one pack.</comment>

        <expr_stmt pos:start="245:9" pos:end="245:43"><expr pos:start="245:9" pos:end="245:42"><call pos:start="245:9" pos:end="245:42"><name pos:start="245:9" pos:end="245:19">opt_default</name><argument_list pos:start="245:20" pos:end="245:42">(<argument pos:start="245:21" pos:end="245:29"><expr pos:start="245:21" pos:end="245:29"><literal type="string" pos:start="245:21" pos:end="245:29">"muxrate"</literal></expr></argument>, <argument pos:start="245:32" pos:end="245:41"><expr pos:start="245:32" pos:end="245:41"><literal type="string" pos:start="245:32" pos:end="245:41">"10080000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="245:45" pos:end="245:112">// from mplex project: data_rate = 1260000. mux_rate = data_rate * 8</comment>



        <expr_stmt pos:start="249:9" pos:end="249:36"><expr pos:start="249:9" pos:end="249:35"><call pos:start="249:9" pos:end="249:35"><name pos:start="249:9" pos:end="249:19">opt_default</name><argument_list pos:start="249:20" pos:end="249:35">(<argument pos:start="249:21" pos:end="249:24"><expr pos:start="249:21" pos:end="249:24"><literal type="string" pos:start="249:21" pos:end="249:24">"ab"</literal></expr></argument>, <argument pos:start="249:27" pos:end="249:34"><expr pos:start="249:27" pos:end="249:34"><literal type="string" pos:start="249:27" pos:end="249:34">"448000"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:34"><expr pos:start="251:9" pos:end="251:33"><name pos:start="251:9" pos:end="251:25">audio_sample_rate</name> <operator pos:start="251:27" pos:end="251:27">=</operator> <literal type="number" pos:start="251:29" pos:end="251:33">48000</literal></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="255:7" pos:end="279:5">else if<condition pos:start="255:14" pos:end="255:37">(<expr pos:start="255:15" pos:end="255:36"><operator pos:start="255:15" pos:end="255:15">!</operator><call pos:start="255:16" pos:end="255:36"><name pos:start="255:16" pos:end="255:22">strncmp</name><argument_list pos:start="255:23" pos:end="255:36">(<argument pos:start="255:24" pos:end="255:26"><expr pos:start="255:24" pos:end="255:26"><name pos:start="255:24" pos:end="255:26">arg</name></expr></argument>, <argument pos:start="255:29" pos:end="255:32"><expr pos:start="255:29" pos:end="255:32"><literal type="string" pos:start="255:29" pos:end="255:32">"dv"</literal></expr></argument>, <argument pos:start="255:35" pos:end="255:35"><expr pos:start="255:35" pos:end="255:35"><literal type="number" pos:start="255:35" pos:end="255:35">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:39" pos:end="279:5">{<block_content pos:start="259:9" pos:end="275:27">



        <expr_stmt pos:start="259:9" pos:end="259:25"><expr pos:start="259:9" pos:end="259:24"><call pos:start="259:9" pos:end="259:24"><name pos:start="259:9" pos:end="259:18">opt_format</name><argument_list pos:start="259:19" pos:end="259:24">(<argument pos:start="259:20" pos:end="259:23"><expr pos:start="259:20" pos:end="259:23"><literal type="string" pos:start="259:20" pos:end="259:23">"dv"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="263:9" pos:end="263:60"><expr pos:start="263:9" pos:end="263:59"><call pos:start="263:9" pos:end="263:59"><name pos:start="263:9" pos:end="263:22">opt_frame_size</name><argument_list pos:start="263:23" pos:end="263:59">(<argument pos:start="263:24" pos:end="263:58"><expr pos:start="263:24" pos:end="263:58"><ternary pos:start="263:24" pos:end="263:58"><condition pos:start="263:24" pos:end="263:36"><expr pos:start="263:24" pos:end="263:34"><name pos:start="263:24" pos:end="263:27">norm</name> <operator pos:start="263:29" pos:end="263:30">==</operator> <name pos:start="263:32" pos:end="263:34">PAL</name></expr> ?</condition><then pos:start="263:38" pos:end="263:46"> <expr pos:start="263:38" pos:end="263:46"><literal type="string" pos:start="263:38" pos:end="263:46">"720x576"</literal></expr> </then><else pos:start="263:48" pos:end="263:58">: <expr pos:start="263:50" pos:end="263:58"><literal type="string" pos:start="263:50" pos:end="263:58">"720x480"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="267:65"><expr pos:start="265:9" pos:end="267:64"><call pos:start="265:9" pos:end="267:64"><name pos:start="265:9" pos:end="265:25">opt_frame_pix_fmt</name><argument_list pos:start="265:26" pos:end="267:64">(<argument pos:start="265:27" pos:end="267:63"><expr pos:start="265:27" pos:end="267:63"><ternary pos:start="265:27" pos:end="267:63"><condition pos:start="265:27" pos:end="265:52"><expr pos:start="265:27" pos:end="265:50"><operator pos:start="265:27" pos:end="265:27">!</operator><call pos:start="265:28" pos:end="265:50"><name pos:start="265:28" pos:end="265:34">strncmp</name><argument_list pos:start="265:35" pos:end="265:50">(<argument pos:start="265:36" pos:end="265:38"><expr pos:start="265:36" pos:end="265:38"><name pos:start="265:36" pos:end="265:38">arg</name></expr></argument>, <argument pos:start="265:41" pos:end="265:46"><expr pos:start="265:41" pos:end="265:46"><literal type="string" pos:start="265:41" pos:end="265:46">"dv50"</literal></expr></argument>, <argument pos:start="265:49" pos:end="265:49"><expr pos:start="265:49" pos:end="265:49"><literal type="number" pos:start="265:49" pos:end="265:49">4</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="265:54" pos:end="265:62"> <expr pos:start="265:54" pos:end="265:62"><literal type="string" pos:start="265:54" pos:end="265:62">"yuv422p"</literal></expr> </then><else pos:start="265:64" pos:end="267:63">:

                          <expr pos:start="267:27" pos:end="267:63"><operator pos:start="267:27" pos:end="267:27">(</operator><ternary pos:start="267:28" pos:end="267:62"><condition pos:start="267:28" pos:end="267:40"><expr pos:start="267:28" pos:end="267:38"><name pos:start="267:28" pos:end="267:31">norm</name> <operator pos:start="267:33" pos:end="267:34">==</operator> <name pos:start="267:36" pos:end="267:38">PAL</name></expr> ?</condition><then pos:start="267:42" pos:end="267:50"> <expr pos:start="267:42" pos:end="267:50"><literal type="string" pos:start="267:42" pos:end="267:50">"yuv420p"</literal></expr> </then><else pos:start="267:52" pos:end="267:62">: <expr pos:start="267:54" pos:end="267:62"><literal type="string" pos:start="267:54" pos:end="267:62">"yuv411p"</literal></expr></else></ternary><operator pos:start="267:63" pos:end="267:63">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:48"><expr pos:start="269:9" pos:end="269:47"><call pos:start="269:9" pos:end="269:47"><name pos:start="269:9" pos:end="269:22">opt_frame_rate</name><argument_list pos:start="269:23" pos:end="269:47">(<argument pos:start="269:24" pos:end="269:27"><expr pos:start="269:24" pos:end="269:27"><name pos:start="269:24" pos:end="269:27">NULL</name></expr></argument>, <argument pos:start="269:30" pos:end="269:46"><expr pos:start="269:30" pos:end="269:46"><name pos:start="269:30" pos:end="269:46"><name pos:start="269:30" pos:end="269:40">frame_rates</name><index pos:start="269:41" pos:end="269:46">[<expr pos:start="269:42" pos:end="269:45"><name pos:start="269:42" pos:end="269:45">norm</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="273:9" pos:end="273:34"><expr pos:start="273:9" pos:end="273:33"><name pos:start="273:9" pos:end="273:25">audio_sample_rate</name> <operator pos:start="273:27" pos:end="273:27">=</operator> <literal type="number" pos:start="273:29" pos:end="273:33">48000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:27"><expr pos:start="275:9" pos:end="275:26"><name pos:start="275:9" pos:end="275:22">audio_channels</name> <operator pos:start="275:24" pos:end="275:24">=</operator> <literal type="number" pos:start="275:26" pos:end="275:26">2</literal></expr>;</expr_stmt>



    </block_content>}</block></if> <else pos:start="279:7" pos:end="285:5">else <block pos:start="279:12" pos:end="285:5">{<block_content pos:start="281:9" pos:end="283:23">

        <expr_stmt pos:start="281:9" pos:end="281:53"><expr pos:start="281:9" pos:end="281:52"><call pos:start="281:9" pos:end="281:52"><name pos:start="281:9" pos:end="281:15">fprintf</name><argument_list pos:start="281:16" pos:end="281:52">(<argument pos:start="281:17" pos:end="281:22"><expr pos:start="281:17" pos:end="281:22"><name pos:start="281:17" pos:end="281:22">stderr</name></expr></argument>, <argument pos:start="281:25" pos:end="281:46"><expr pos:start="281:25" pos:end="281:46"><literal type="string" pos:start="281:25" pos:end="281:46">"Unknown target: %s\n"</literal></expr></argument>, <argument pos:start="281:49" pos:end="281:51"><expr pos:start="281:49" pos:end="281:51"><name pos:start="281:49" pos:end="281:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:23"><expr pos:start="283:9" pos:end="283:22"><call pos:start="283:9" pos:end="283:22"><name pos:start="283:9" pos:end="283:19">ffmpeg_exit</name><argument_list pos:start="283:20" pos:end="283:22">(<argument pos:start="283:21" pos:end="283:21"><expr pos:start="283:21" pos:end="283:21"><literal type="number" pos:start="283:21" pos:end="283:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
