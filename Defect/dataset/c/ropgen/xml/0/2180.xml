<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2180.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:31"><name pos:start="1:1" pos:end="1:16">e1000_mmio_write</name><argument_list pos:start="1:17" pos:end="3:31">(<argument pos:start="1:18" pos:end="1:29">void *opaque</argument>, <argument pos:start="1:32" pos:end="1:54">target_phys_addr_t addr</argument>, <argument pos:start="1:57" pos:end="1:68">uint64_t val</argument>,

                 <argument pos:start="3:18" pos:end="3:30">unsigned size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:5">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">E1000State</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:26">= <expr pos:start="7:21" pos:end="7:26"><name pos:start="7:21" pos:end="7:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:22">index</name> <init pos:start="9:24" pos:end="9:46">= <expr pos:start="9:26" pos:end="9:46"><operator pos:start="9:26" pos:end="9:26">(</operator><name pos:start="9:27" pos:end="9:30">addr</name> <operator pos:start="9:32" pos:end="9:32">&amp;</operator> <literal type="number" pos:start="9:34" pos:end="9:40">0x1ffff</literal><operator pos:start="9:41" pos:end="9:41">)</operator> <operator pos:start="9:43" pos:end="9:44">&gt;&gt;</operator> <literal type="number" pos:start="9:46" pos:end="9:46">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:52">(<expr pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:13">index</name> <operator pos:start="13:15" pos:end="13:15">&lt;</operator> <name pos:start="13:17" pos:end="13:25">NWRITEOPS</name> <operator pos:start="13:27" pos:end="13:28">&amp;&amp;</operator> <name pos:start="13:30" pos:end="13:51"><name pos:start="13:30" pos:end="13:44">macreg_writeops</name><index pos:start="13:45" pos:end="13:51">[<expr pos:start="13:46" pos:end="13:50"><name pos:start="13:46" pos:end="13:50">index</name></expr>]</index></name></expr>)</condition> <block pos:start="13:54" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:46">

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:23">macreg_writeops</name><index pos:start="15:24" pos:end="15:30">[<expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:29">index</name></expr>]</index></name><operator pos:start="15:31" pos:end="15:31">(</operator><name pos:start="15:32" pos:end="15:32">s</name><operator pos:start="15:33" pos:end="15:33">,</operator> <name pos:start="15:35" pos:end="15:39">index</name><operator pos:start="15:40" pos:end="15:40">,</operator> <name pos:start="15:42" pos:end="15:44">val</name><operator pos:start="15:45" pos:end="15:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="21:5">else if <condition pos:start="17:15" pos:end="17:57">(<expr pos:start="17:16" pos:end="17:56"><name pos:start="17:16" pos:end="17:20">index</name> <operator pos:start="17:22" pos:end="17:22">&lt;</operator> <name pos:start="17:24" pos:end="17:31">NREADOPS</name> <operator pos:start="17:33" pos:end="17:34">&amp;&amp;</operator> <name pos:start="17:36" pos:end="17:56"><name pos:start="17:36" pos:end="17:49">macreg_readops</name><index pos:start="17:50" pos:end="17:56">[<expr pos:start="17:51" pos:end="17:55"><name pos:start="17:51" pos:end="17:55">index</name></expr>]</index></name></expr>)</condition> <block pos:start="17:59" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:80">

        <expr_stmt pos:start="19:9" pos:end="19:80"><expr pos:start="19:9" pos:end="19:79"><call pos:start="19:9" pos:end="19:79"><name pos:start="19:9" pos:end="19:14">DBGOUT</name><argument_list pos:start="19:15" pos:end="19:79">(<argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">MMIO</name></expr></argument>, <argument pos:start="19:22" pos:end="19:63"><expr pos:start="19:22" pos:end="19:63"><literal type="string" pos:start="19:22" pos:end="19:53">"e1000_mmio_writel RO %x: 0x%04"</literal><name pos:start="19:54" pos:end="19:59">PRIx64</name><literal type="string" pos:start="19:60" pos:end="19:63">"\n"</literal></expr></argument>, <argument pos:start="19:66" pos:end="19:73"><expr pos:start="19:66" pos:end="19:73"><name pos:start="19:66" pos:end="19:70">index</name><operator pos:start="19:71" pos:end="19:72">&lt;&lt;</operator><literal type="number" pos:start="19:73" pos:end="19:73">2</literal></expr></argument>, <argument pos:start="19:76" pos:end="19:78"><expr pos:start="19:76" pos:end="19:78"><name pos:start="19:76" pos:end="19:78">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:30">

        <expr_stmt pos:start="23:9" pos:end="25:30"><expr pos:start="23:9" pos:end="25:29"><call pos:start="23:9" pos:end="25:29"><name pos:start="23:9" pos:end="23:14">DBGOUT</name><argument_list pos:start="23:15" pos:end="25:29">(<argument pos:start="23:16" pos:end="23:22"><expr pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:22">UNKNOWN</name></expr></argument>, <argument pos:start="23:25" pos:end="23:76"><expr pos:start="23:25" pos:end="23:76"><literal type="string" pos:start="23:25" pos:end="23:66">"MMIO unknown write addr=0x%08x,val=0x%08"</literal><name pos:start="23:67" pos:end="23:72">PRIx64</name><literal type="string" pos:start="23:73" pos:end="23:76">"\n"</literal></expr></argument>,

               <argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:20">index</name><operator pos:start="25:21" pos:end="25:22">&lt;&lt;</operator><literal type="number" pos:start="25:23" pos:end="25:23">2</literal></expr></argument>, <argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
