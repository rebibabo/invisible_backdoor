<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15814.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">xen_pt_byte_reg_write</name><parameter_list pos:start="1:33" pos:end="5:52">(<parameter pos:start="1:34" pos:end="1:58"><decl pos:start="1:34" pos:end="1:58"><type pos:start="1:34" pos:end="1:58"><name pos:start="1:34" pos:end="1:55">XenPCIPassthroughState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:79"><decl pos:start="1:61" pos:end="1:79"><type pos:start="1:61" pos:end="1:79"><name pos:start="1:61" pos:end="1:68">XenPTReg</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:79">cfg_entry</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">val</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:64"><decl pos:start="3:48" pos:end="3:64"><type pos:start="3:48" pos:end="3:64"><name pos:start="3:48" pos:end="3:54">uint8_t</name></type> <name pos:start="3:56" pos:end="3:64">dev_value</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:51"><decl pos:start="5:34" pos:end="5:51"><type pos:start="5:34" pos:end="5:51"><name pos:start="5:34" pos:end="5:40">uint8_t</name></type> <name pos:start="5:42" pos:end="5:51">valid_mask</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:13">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">XenPTRegInfo</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">reg</name> <init pos:start="9:23" pos:end="9:38">= <expr pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:33">cfg_entry</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:38">reg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:25">writable_mask</name> <init pos:start="11:27" pos:end="11:29">= <expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:72"><decl pos:start="13:5" pos:end="13:71"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:28">throughable_mask</name> <init pos:start="13:30" pos:end="13:71">= <expr pos:start="13:32" pos:end="13:71"><call pos:start="13:32" pos:end="13:71"><name pos:start="13:32" pos:end="13:51">get_throughable_mask</name><argument_list pos:start="13:52" pos:end="13:71">(<argument pos:start="13:53" pos:end="13:53"><expr pos:start="13:53" pos:end="13:53"><name pos:start="13:53" pos:end="13:53">s</name></expr></argument>, <argument pos:start="13:56" pos:end="13:58"><expr pos:start="13:56" pos:end="13:58"><name pos:start="13:56" pos:end="13:58">reg</name></expr></argument>, <argument pos:start="13:61" pos:end="13:70"><expr pos:start="13:61" pos:end="13:70"><name pos:start="13:61" pos:end="13:70">valid_mask</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:33">/* modify emulate register */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:17">writable_mask</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:23">reg</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:33">emu_mask</name></name> <operator pos:start="19:35" pos:end="19:35">&amp;</operator> <operator pos:start="19:37" pos:end="19:37">~</operator><name pos:start="19:38" pos:end="19:49"><name pos:start="19:38" pos:end="19:40">reg</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:49">ro_mask</name></name> <operator pos:start="19:51" pos:end="19:51">&amp;</operator> <name pos:start="19:53" pos:end="19:62">valid_mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:79"><expr pos:start="21:5" pos:end="21:78"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:13">cfg_entry</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:19">data</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="21:78"><name pos:start="21:23" pos:end="21:40">XEN_PT_MERGE_VALUE</name><argument_list pos:start="21:41" pos:end="21:78">(<argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><operator pos:start="21:42" pos:end="21:42">*</operator><name pos:start="21:43" pos:end="21:45">val</name></expr></argument>, <argument pos:start="21:48" pos:end="21:62"><expr pos:start="21:48" pos:end="21:62"><name pos:start="21:48" pos:end="21:62"><name pos:start="21:48" pos:end="21:56">cfg_entry</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:62">data</name></name></expr></argument>, <argument pos:start="21:65" pos:end="21:77"><expr pos:start="21:65" pos:end="21:77"><name pos:start="21:65" pos:end="21:77">writable_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:57">/* create value for writing to I/O device register */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:65"><expr pos:start="27:5" pos:end="27:64"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:8">val</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:64"><name pos:start="27:12" pos:end="27:29">XEN_PT_MERGE_VALUE</name><argument_list pos:start="27:30" pos:end="27:64">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><operator pos:start="27:31" pos:end="27:31">*</operator><name pos:start="27:32" pos:end="27:34">val</name></expr></argument>, <argument pos:start="27:37" pos:end="27:45"><expr pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:45">dev_value</name></expr></argument>, <argument pos:start="27:48" pos:end="27:63"><expr pos:start="27:48" pos:end="27:63"><name pos:start="27:48" pos:end="27:63">throughable_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
