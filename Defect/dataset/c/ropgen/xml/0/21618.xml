<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21618.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">stream_component_open</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:43">VideoState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">is</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:65">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">ic</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:28">is</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:32">ic</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVCodec</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">SDL_AudioSpec</name></type> <name pos:start="11:19" pos:end="11:29">wanted_spec</name></decl>, <decl pos:start="11:32" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:32" pos:end="11:35">spec</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:59">(<expr pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:20">stream_index</name> <operator pos:start="15:22" pos:end="15:22">&lt;</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal> <operator pos:start="15:26" pos:end="15:27">||</operator> <name pos:start="15:29" pos:end="15:40">stream_index</name> <operator pos:start="15:42" pos:end="15:43">&gt;=</operator> <name pos:start="15:45" pos:end="15:58"><name pos:start="15:45" pos:end="15:46">ic</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:58">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:7">enc</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:35"><name pos:start="19:11" pos:end="19:12">ic</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:21">streams</name><index pos:start="19:22" pos:end="19:35">[<expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">stream_index</name></expr>]</index></name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:42">codec</name></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:30">/* prepare audio output */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">enc</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">codec_type</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:43">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="25:46" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:9">

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:30">(<expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">enc</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:25">channels</name></name> <operator pos:start="27:27" pos:end="27:27">&gt;</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>)</condition> <block pos:start="27:32" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:60">

            <expr_stmt pos:start="29:13" pos:end="29:60"><expr pos:start="29:13" pos:end="29:59"><name pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:15">enc</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:33">request_channels</name></name> <operator pos:start="29:35" pos:end="29:35">=</operator> <call pos:start="29:37" pos:end="29:59"><name pos:start="29:37" pos:end="29:41">FFMIN</name><argument_list pos:start="29:42" pos:end="29:59">(<argument pos:start="29:43" pos:end="29:43"><expr pos:start="29:43" pos:end="29:43"><literal type="number" pos:start="29:43" pos:end="29:43">2</literal></expr></argument>, <argument pos:start="29:46" pos:end="29:58"><expr pos:start="29:46" pos:end="29:58"><name pos:start="29:46" pos:end="29:58"><name pos:start="29:46" pos:end="29:48">enc</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:58">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:38">

            <expr_stmt pos:start="33:13" pos:end="33:38"><expr pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:15">enc</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:33">request_channels</name></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <literal type="number" pos:start="33:37" pos:end="33:37">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:9">codec</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:32">avcodec_find_decoder</name><argument_list pos:start="41:33" pos:end="41:47">(<argument pos:start="41:34" pos:end="41:46"><expr pos:start="41:34" pos:end="41:46"><name pos:start="41:34" pos:end="41:46"><name pos:start="41:34" pos:end="41:36">enc</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:46">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:7">enc</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:17">debug_mv</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:28">debug_mv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:7">enc</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:14">debug</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:22">debug</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:7">enc</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:24">workaround_bugs</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:42">workaround_bugs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:7">enc</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:15">lowres</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:24">lowres</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="51:49"><if pos:start="51:5" pos:end="51:49">if<condition pos:start="51:7" pos:end="51:14">(<expr pos:start="51:8" pos:end="51:13"><name pos:start="51:8" pos:end="51:13">lowres</name></expr>)</condition><block type="pseudo" pos:start="51:16" pos:end="51:49"><block_content pos:start="51:16" pos:end="51:49"> <expr_stmt pos:start="51:16" pos:end="51:49"><expr pos:start="51:16" pos:end="51:48"><name pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:18">enc</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:25">flags</name></name> <operator pos:start="51:27" pos:end="51:28">|=</operator> <name pos:start="51:30" pos:end="51:48">CODEC_FLAG_EMU_EDGE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:25"><expr pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:7">enc</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:18">idct_algo</name></name><operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:24">idct</name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="55:45"><if pos:start="55:5" pos:end="55:45">if<condition pos:start="55:7" pos:end="55:12">(<expr pos:start="55:8" pos:end="55:11"><name pos:start="55:8" pos:end="55:11">fast</name></expr>)</condition><block type="pseudo" pos:start="55:14" pos:end="55:45"><block_content pos:start="55:14" pos:end="55:45"> <expr_stmt pos:start="55:14" pos:end="55:45"><expr pos:start="55:14" pos:end="55:44"><name pos:start="55:14" pos:end="55:24"><name pos:start="55:14" pos:end="55:16">enc</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:24">flags2</name></name> <operator pos:start="55:26" pos:end="55:27">|=</operator> <name pos:start="55:29" pos:end="55:44">CODEC_FLAG2_FAST</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:7">enc</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:19">skip_frame</name></name><operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:31">skip_frame</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:7">enc</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:18">skip_idct</name></name><operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:29">skip_idct</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:7">enc</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:25">skip_loop_filter</name></name><operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:43">skip_loop_filter</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:7">enc</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:26">error_recognition</name></name><operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:45">error_recognition</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:46"><expr pos:start="65:5" pos:end="65:45"><name pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:7">enc</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:26">error_concealment</name></name><operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:45">error_concealment</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:60"><expr pos:start="69:5" pos:end="69:59"><call pos:start="69:5" pos:end="69:59"><name pos:start="69:5" pos:end="69:20">set_context_opts</name><argument_list pos:start="69:21" pos:end="69:59">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><name pos:start="69:22" pos:end="69:24">enc</name></expr></argument>, <argument pos:start="69:27" pos:end="69:55"><expr pos:start="69:27" pos:end="69:55"><name pos:start="69:27" pos:end="69:55"><name pos:start="69:27" pos:end="69:38">avcodec_opts</name><index pos:start="69:39" pos:end="69:55">[<expr pos:start="69:40" pos:end="69:54"><name pos:start="69:40" pos:end="69:54"><name pos:start="69:40" pos:end="69:42">enc</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:54">codec_type</name></name></expr>]</index></name></expr></argument>, <argument pos:start="69:58" pos:end="69:58"><expr pos:start="69:58" pos:end="69:58"><literal type="number" pos:start="69:58" pos:end="69:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="77:18"><if pos:start="73:5" pos:end="77:18">if <condition pos:start="73:8" pos:end="75:37">(<expr pos:start="73:9" pos:end="75:36"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:14">codec</name> <operator pos:start="73:16" pos:end="73:17">||</operator>

        <call pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:20">avcodec_open</name><argument_list pos:start="75:21" pos:end="75:32">(<argument pos:start="75:22" pos:end="75:24"><expr pos:start="75:22" pos:end="75:24"><name pos:start="75:22" pos:end="75:24">enc</name></expr></argument>, <argument pos:start="75:27" pos:end="75:31"><expr pos:start="75:27" pos:end="75:31"><name pos:start="75:27" pos:end="75:31">codec</name></expr></argument>)</argument_list></call> <operator pos:start="75:34" pos:end="75:34">&lt;</operator> <literal type="number" pos:start="75:36" pos:end="75:36">0</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:30">/* prepare audio output */</comment>

    <if_stmt pos:start="83:5" pos:end="111:5"><if pos:start="83:5" pos:end="111:5">if <condition pos:start="83:8" pos:end="83:44">(<expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:11">enc</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:23">codec_type</name></name> <operator pos:start="83:25" pos:end="83:26">==</operator> <name pos:start="83:28" pos:end="83:43">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="83:46" pos:end="111:5">{<block_content pos:start="85:9" pos:end="109:42">

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:19">wanted_spec</name><operator pos:start="85:20" pos:end="85:20">.</operator><name pos:start="85:21" pos:end="85:24">freq</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:43"><name pos:start="85:28" pos:end="85:30">enc</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:43">sample_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:19">wanted_spec</name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:26">format</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:41">AUDIO_S16SYS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:45"><expr pos:start="89:9" pos:end="89:44"><name pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:19">wanted_spec</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:28">channels</name></name> <operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:34">enc</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:44">channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:19">wanted_spec</name><operator pos:start="91:20" pos:end="91:20">.</operator><name pos:start="91:21" pos:end="91:27">silence</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:19">wanted_spec</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:27">samples</name></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:51">SDL_AUDIO_BUFFER_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:50"><expr pos:start="95:9" pos:end="95:49"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:19">wanted_spec</name><operator pos:start="95:20" pos:end="95:20">.</operator><name pos:start="95:21" pos:end="95:28">callback</name></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <name pos:start="95:32" pos:end="95:49">sdl_audio_callback</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:34"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:19">wanted_spec</name><operator pos:start="97:20" pos:end="97:20">.</operator><name pos:start="97:21" pos:end="97:28">userdata</name></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <name pos:start="97:32" pos:end="97:33">is</name></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:51">(<expr pos:start="99:13" pos:end="99:50"><call pos:start="99:13" pos:end="99:46"><name pos:start="99:13" pos:end="99:25">SDL_OpenAudio</name><argument_list pos:start="99:26" pos:end="99:46">(<argument pos:start="99:27" pos:end="99:38"><expr pos:start="99:27" pos:end="99:38"><operator pos:start="99:27" pos:end="99:27">&amp;</operator><name pos:start="99:28" pos:end="99:38">wanted_spec</name></expr></argument>, <argument pos:start="99:41" pos:end="99:45"><expr pos:start="99:41" pos:end="99:45"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:45">spec</name></expr></argument>)</argument_list></call> <operator pos:start="99:48" pos:end="99:48">&lt;</operator> <literal type="number" pos:start="99:50" pos:end="99:50">0</literal></expr>)</condition> <block pos:start="99:53" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:22">

            <expr_stmt pos:start="101:13" pos:end="101:67"><expr pos:start="101:13" pos:end="101:66"><call pos:start="101:13" pos:end="101:66"><name pos:start="101:13" pos:end="101:19">fprintf</name><argument_list pos:start="101:20" pos:end="101:66">(<argument pos:start="101:21" pos:end="101:26"><expr pos:start="101:21" pos:end="101:26"><name pos:start="101:21" pos:end="101:26">stderr</name></expr></argument>, <argument pos:start="101:29" pos:end="101:49"><expr pos:start="101:29" pos:end="101:49"><literal type="string" pos:start="101:29" pos:end="101:49">"SDL_OpenAudio: %s\n"</literal></expr></argument>, <argument pos:start="101:52" pos:end="101:65"><expr pos:start="101:52" pos:end="101:65"><call pos:start="101:52" pos:end="101:65"><name pos:start="101:52" pos:end="101:63">SDL_GetError</name><argument_list pos:start="101:64" pos:end="101:65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:10">is</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:29">audio_hw_buf_size</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:41"><name pos:start="107:33" pos:end="107:36">spec</name><operator pos:start="107:37" pos:end="107:37">.</operator><name pos:start="107:38" pos:end="107:41">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:42"><expr pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:10">is</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:25">audio_src_fmt</name></name><operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:41">SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="117:47"><if pos:start="115:5" pos:end="117:47">if<condition pos:start="115:7" pos:end="115:22">(<expr pos:start="115:8" pos:end="115:21"><name pos:start="115:8" pos:end="115:19">thread_count</name><operator pos:start="115:20" pos:end="115:20">&gt;</operator><literal type="number" pos:start="115:21" pos:end="115:21">1</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:47"><block_content pos:start="117:9" pos:end="117:47">

        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><call pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:27">avcodec_thread_init</name><argument_list pos:start="117:28" pos:end="117:46">(<argument pos:start="117:29" pos:end="117:31"><expr pos:start="117:29" pos:end="117:31"><name pos:start="117:29" pos:end="117:31">enc</name></expr></argument>, <argument pos:start="117:34" pos:end="117:45"><expr pos:start="117:34" pos:end="117:45"><name pos:start="117:34" pos:end="117:45">thread_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:21"><name pos:start="119:5" pos:end="119:7">enc</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:21">thread_count</name></name><operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:35">thread_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:59"><expr pos:start="121:5" pos:end="121:58"><name pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:6">ic</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:15">streams</name><index pos:start="121:16" pos:end="121:29">[<expr pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:28">stream_index</name></expr>]</index></name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:38">discard</name> <operator pos:start="121:40" pos:end="121:40">=</operator> <name pos:start="121:42" pos:end="121:58">AVDISCARD_DEFAULT</name></expr>;</expr_stmt>

    <switch pos:start="123:5" pos:end="199:5">switch<condition pos:start="123:11" pos:end="123:27">(<expr pos:start="123:12" pos:end="123:26"><name pos:start="123:12" pos:end="123:26"><name pos:start="123:12" pos:end="123:14">enc</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:26">codec_type</name></name></expr>)</condition> <block pos:start="123:29" pos:end="199:5">{<block_content pos:start="125:5" pos:end="197:14">

    <case pos:start="125:5" pos:end="125:26">case <expr pos:start="125:10" pos:end="125:25"><name pos:start="125:10" pos:end="125:25">CODEC_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:40"><expr pos:start="127:9" pos:end="127:39"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:10">is</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:24">audio_stream</name></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:39">stream_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:49"><expr pos:start="129:9" pos:end="129:48"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:10">is</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:20">audio_st</name></name> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:48"><name pos:start="129:24" pos:end="129:25">ic</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:34">streams</name><index pos:start="129:35" pos:end="129:48">[<expr pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:47">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:31"><expr pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:26"><name pos:start="131:9" pos:end="131:10">is</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:26">audio_buf_size</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:32"><expr pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:10">is</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:27">audio_buf_index</name></name> <operator pos:start="133:29" pos:end="133:29">=</operator> <literal type="number" pos:start="133:31" pos:end="133:31">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="137:9" pos:end="137:35">/* init averaging filter */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:69"><expr pos:start="139:9" pos:end="139:68"><name pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:10">is</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:31">audio_diff_avg_coef</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <call pos:start="139:35" pos:end="139:68"><name pos:start="139:35" pos:end="139:37">exp</name><argument_list pos:start="139:38" pos:end="139:68">(<argument pos:start="139:39" pos:end="139:67"><expr pos:start="139:39" pos:end="139:67"><call pos:start="139:39" pos:end="139:47"><name pos:start="139:39" pos:end="139:41">log</name><argument_list pos:start="139:42" pos:end="139:47">(<argument pos:start="139:43" pos:end="139:46"><expr pos:start="139:43" pos:end="139:46"><literal type="number" pos:start="139:43" pos:end="139:46">0.01</literal></expr></argument>)</argument_list></call> <operator pos:start="139:49" pos:end="139:49">/</operator> <name pos:start="139:51" pos:end="139:67">AUDIO_DIFF_AVG_NB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:37"><expr pos:start="141:9" pos:end="141:36"><name pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:10">is</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:32">audio_diff_avg_count</name></name> <operator pos:start="141:34" pos:end="141:34">=</operator> <literal type="number" pos:start="141:36" pos:end="141:36">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="143:9" pos:end="145:70">/* since we do not have a precise anough audio fifo fullness,

           we correct audio sync only if larger than this threshold */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:82"><expr pos:start="147:9" pos:end="147:81"><name pos:start="147:9" pos:end="147:32"><name pos:start="147:9" pos:end="147:10">is</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:32">audio_diff_threshold</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <literal type="number" pos:start="147:36" pos:end="147:38">2.0</literal> <operator pos:start="147:40" pos:end="147:40">*</operator> <name pos:start="147:42" pos:end="147:62">SDL_AUDIO_BUFFER_SIZE</name> <operator pos:start="147:64" pos:end="147:64">/</operator> <name pos:start="147:66" pos:end="147:81"><name pos:start="147:66" pos:end="147:68">enc</name><operator pos:start="147:69" pos:end="147:70">-&gt;</operator><name pos:start="147:71" pos:end="147:81">sample_rate</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:57"><expr pos:start="151:9" pos:end="151:56"><call pos:start="151:9" pos:end="151:56"><name pos:start="151:9" pos:end="151:14">memset</name><argument_list pos:start="151:15" pos:end="151:56">(<argument pos:start="151:16" pos:end="151:29"><expr pos:start="151:16" pos:end="151:29"><operator pos:start="151:16" pos:end="151:16">&amp;</operator><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:18">is</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:29">audio_pkt</name></name></expr></argument>, <argument pos:start="151:32" pos:end="151:32"><expr pos:start="151:32" pos:end="151:32"><literal type="number" pos:start="151:32" pos:end="151:32">0</literal></expr></argument>, <argument pos:start="151:35" pos:end="151:55"><expr pos:start="151:35" pos:end="151:55"><sizeof pos:start="151:35" pos:end="151:55">sizeof<argument_list pos:start="151:41" pos:end="151:55">(<argument pos:start="151:42" pos:end="151:54"><expr pos:start="151:42" pos:end="151:54"><name pos:start="151:42" pos:end="151:54"><name pos:start="151:42" pos:end="151:43">is</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:54">audio_pkt</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:39"><expr pos:start="153:9" pos:end="153:38"><call pos:start="153:9" pos:end="153:38"><name pos:start="153:9" pos:end="153:25">packet_queue_init</name><argument_list pos:start="153:26" pos:end="153:38">(<argument pos:start="153:27" pos:end="153:37"><expr pos:start="153:27" pos:end="153:37"><operator pos:start="153:27" pos:end="153:27">&amp;</operator><name pos:start="153:28" pos:end="153:37"><name pos:start="153:28" pos:end="153:29">is</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:37">audioq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:26"><expr pos:start="155:9" pos:end="155:25"><call pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:22">SDL_PauseAudio</name><argument_list pos:start="155:23" pos:end="155:25">(<argument pos:start="155:24" pos:end="155:24"><expr pos:start="155:24" pos:end="155:24"><literal type="number" pos:start="155:24" pos:end="155:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:26">case <expr pos:start="159:10" pos:end="159:25"><name pos:start="159:10" pos:end="159:25">CODEC_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="161:40"><expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:10">is</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:24">video_stream</name></name> <operator pos:start="161:26" pos:end="161:26">=</operator> <name pos:start="161:28" pos:end="161:39">stream_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:49"><expr pos:start="163:9" pos:end="163:48"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:10">is</name><operator pos:start="163:11" pos:end="163:12">-&gt;</operator><name pos:start="163:13" pos:end="163:20">video_st</name></name> <operator pos:start="163:22" pos:end="163:22">=</operator> <name pos:start="163:24" pos:end="163:48"><name pos:start="163:24" pos:end="163:25">ic</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:34">streams</name><index pos:start="163:35" pos:end="163:48">[<expr pos:start="163:36" pos:end="163:47"><name pos:start="163:36" pos:end="163:47">stream_index</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:37"><expr pos:start="167:9" pos:end="167:36"><name pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:10">is</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:28">frame_last_delay</name></name> <operator pos:start="167:30" pos:end="167:30">=</operator> <literal type="number" pos:start="167:32" pos:end="167:36">40e-3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:59"><expr pos:start="169:9" pos:end="169:58"><name pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:10">is</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:23">frame_timer</name></name> <operator pos:start="169:25" pos:end="169:25">=</operator> <operator pos:start="169:27" pos:end="169:27">(</operator><name pos:start="169:28" pos:end="169:33">double</name><operator pos:start="169:34" pos:end="169:34">)</operator><call pos:start="169:35" pos:end="169:46"><name pos:start="169:35" pos:end="169:44">av_gettime</name><argument_list pos:start="169:45" pos:end="169:46">()</argument_list></call> <operator pos:start="169:48" pos:end="169:48">/</operator> <literal type="number" pos:start="169:50" pos:end="169:58">1000000.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:50"><expr pos:start="171:9" pos:end="171:49"><name pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:10">is</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:34">video_current_pts_time</name></name> <operator pos:start="171:36" pos:end="171:36">=</operator> <call pos:start="171:38" pos:end="171:49"><name pos:start="171:38" pos:end="171:47">av_gettime</name><argument_list pos:start="171:48" pos:end="171:49">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:39"><expr pos:start="175:9" pos:end="175:38"><call pos:start="175:9" pos:end="175:38"><name pos:start="175:9" pos:end="175:25">packet_queue_init</name><argument_list pos:start="175:26" pos:end="175:38">(<argument pos:start="175:27" pos:end="175:37"><expr pos:start="175:27" pos:end="175:37"><operator pos:start="175:27" pos:end="175:27">&amp;</operator><name pos:start="175:28" pos:end="175:37"><name pos:start="175:28" pos:end="175:29">is</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:37">videoq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:59"><expr pos:start="177:9" pos:end="177:58"><name pos:start="177:9" pos:end="177:21"><name pos:start="177:9" pos:end="177:10">is</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:21">video_tid</name></name> <operator pos:start="177:23" pos:end="177:23">=</operator> <call pos:start="177:25" pos:end="177:58"><name pos:start="177:25" pos:end="177:40">SDL_CreateThread</name><argument_list pos:start="177:41" pos:end="177:58">(<argument pos:start="177:42" pos:end="177:53"><expr pos:start="177:42" pos:end="177:53"><name pos:start="177:42" pos:end="177:53">video_thread</name></expr></argument>, <argument pos:start="177:56" pos:end="177:57"><expr pos:start="177:56" pos:end="177:57"><name pos:start="177:56" pos:end="177:57">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:29">case <expr pos:start="181:10" pos:end="181:28"><name pos:start="181:10" pos:end="181:28">CODEC_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="183:9" pos:end="183:43"><expr pos:start="183:9" pos:end="183:42"><name pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:10">is</name><operator pos:start="183:11" pos:end="183:12">-&gt;</operator><name pos:start="183:13" pos:end="183:27">subtitle_stream</name></name> <operator pos:start="183:29" pos:end="183:29">=</operator> <name pos:start="183:31" pos:end="183:42">stream_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:52"><expr pos:start="185:9" pos:end="185:51"><name pos:start="185:9" pos:end="185:23"><name pos:start="185:9" pos:end="185:10">is</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:23">subtitle_st</name></name> <operator pos:start="185:25" pos:end="185:25">=</operator> <name pos:start="185:27" pos:end="185:51"><name pos:start="185:27" pos:end="185:28">ic</name><operator pos:start="185:29" pos:end="185:30">-&gt;</operator><name pos:start="185:31" pos:end="185:37">streams</name><index pos:start="185:38" pos:end="185:51">[<expr pos:start="185:39" pos:end="185:50"><name pos:start="185:39" pos:end="185:50">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:42"><expr pos:start="187:9" pos:end="187:41"><call pos:start="187:9" pos:end="187:41"><name pos:start="187:9" pos:end="187:25">packet_queue_init</name><argument_list pos:start="187:26" pos:end="187:41">(<argument pos:start="187:27" pos:end="187:40"><expr pos:start="187:27" pos:end="187:40"><operator pos:start="187:27" pos:end="187:27">&amp;</operator><name pos:start="187:28" pos:end="187:40"><name pos:start="187:28" pos:end="187:29">is</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:40">subtitleq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="191:9" pos:end="191:65"><expr pos:start="191:9" pos:end="191:64"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:10">is</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:24">subtitle_tid</name></name> <operator pos:start="191:26" pos:end="191:26">=</operator> <call pos:start="191:28" pos:end="191:64"><name pos:start="191:28" pos:end="191:43">SDL_CreateThread</name><argument_list pos:start="191:44" pos:end="191:64">(<argument pos:start="191:45" pos:end="191:59"><expr pos:start="191:45" pos:end="191:59"><name pos:start="191:45" pos:end="191:59">subtitle_thread</name></expr></argument>, <argument pos:start="191:62" pos:end="191:63"><expr pos:start="191:62" pos:end="191:63"><name pos:start="191:62" pos:end="191:63">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <default pos:start="195:5" pos:end="195:12">default:</default>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
