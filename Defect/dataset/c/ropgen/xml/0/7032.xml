<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7032.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">v9fs_xattrwalk</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:28">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">V9fsString</name></type> <name pos:start="7:16" pos:end="7:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">err</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:17">offset</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:15">fid</name></decl>, <decl pos:start="13:18" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:23">newfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">V9fsFidState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:27">file_fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">V9fsFidState</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:28">xattr_fidp</name> <init pos:start="17:30" pos:end="17:35">= <expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">V9fsPDU</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">pdu</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:13">V9fsState</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:16">s</name> <init pos:start="21:18" pos:end="21:25">= <expr pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:22">pdu</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><call pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:17">pdu_unmarshal</name><argument_list pos:start="25:18" pos:end="25:59">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">pdu</name></expr></argument>, <argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">offset</name></expr></argument>, <argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><literal type="string" pos:start="25:32" pos:end="25:36">"dds"</literal></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:42">fid</name></expr></argument>, <argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:51">newfid</name></expr></argument>, <argument pos:start="25:54" pos:end="25:58"><expr pos:start="25:54" pos:end="25:58"><operator pos:start="25:54" pos:end="25:54">&amp;</operator><name pos:start="25:55" pos:end="25:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:68"><expr pos:start="27:5" pos:end="27:67"><call pos:start="27:5" pos:end="27:67"><name pos:start="27:5" pos:end="27:24">trace_v9fs_xattrwalk</name><argument_list pos:start="27:25" pos:end="27:67">(<argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><name pos:start="27:26" pos:end="27:33"><name pos:start="27:26" pos:end="27:28">pdu</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:33">tag</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:38">pdu</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:42">id</name></name></expr></argument>, <argument pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:47">fid</name></expr></argument>, <argument pos:start="27:50" pos:end="27:55"><expr pos:start="27:50" pos:end="27:55"><name pos:start="27:50" pos:end="27:55">newfid</name></expr></argument>, <argument pos:start="27:58" pos:end="27:66"><expr pos:start="27:58" pos:end="27:66"><name pos:start="27:58" pos:end="27:66"><name pos:start="27:58" pos:end="27:61">name</name><operator pos:start="27:62" pos:end="27:62">.</operator><name pos:start="27:63" pos:end="27:66">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:13">file_fidp</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:23">get_fid</name><argument_list pos:start="31:24" pos:end="31:33">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">pdu</name></expr></argument>, <argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:17">file_fidp</name> <operator pos:start="33:19" pos:end="33:20">==</operator> <name pos:start="33:22" pos:end="33:25">NULL</name></expr>)</condition> <block pos:start="33:28" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:23">

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">err</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">-</operator><name pos:start="35:16" pos:end="35:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:23">goto <name pos:start="37:14" pos:end="37:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:14">xattr_fidp</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:37"><name pos:start="41:18" pos:end="41:26">alloc_fid</name><argument_list pos:start="41:27" pos:end="41:37">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>, <argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36">newfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:18">xattr_fidp</name> <operator pos:start="43:20" pos:end="43:21">==</operator> <name pos:start="43:23" pos:end="43:26">NULL</name></expr>)</condition> <block pos:start="43:29" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">err</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">-</operator><name pos:start="45:16" pos:end="45:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><call pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:18">v9fs_path_copy</name><argument_list pos:start="51:19" pos:end="51:55">(<argument pos:start="51:20" pos:end="51:36"><expr pos:start="51:20" pos:end="51:36"><operator pos:start="51:20" pos:end="51:20">&amp;</operator><name pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:30">xattr_fidp</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:36">path</name></name></expr></argument>, <argument pos:start="51:39" pos:end="51:54"><expr pos:start="51:39" pos:end="51:54"><operator pos:start="51:39" pos:end="51:39">&amp;</operator><name pos:start="51:40" pos:end="51:54"><name pos:start="51:40" pos:end="51:48">file_fidp</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:54">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="169:5"><if pos:start="53:5" pos:end="109:5">if <condition pos:start="53:8" pos:end="53:26">(<expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">name</name><operator pos:start="53:13" pos:end="53:13">.</operator><name pos:start="53:14" pos:end="53:17">data</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>]</index></name> <operator pos:start="53:22" pos:end="53:23">==</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>)</condition> <block pos:start="53:28" pos:end="109:5">{<block_content pos:start="61:9" pos:end="107:21">

        <comment type="block" pos:start="55:9" pos:end="59:11">/*

         * listxattr request. Get the size first

         */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:67"><expr pos:start="61:9" pos:end="61:66"><name pos:start="61:9" pos:end="61:12">size</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:66"><name pos:start="61:16" pos:end="61:33">v9fs_co_llistxattr</name><argument_list pos:start="61:34" pos:end="61:66">(<argument pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:37">pdu</name></expr></argument>, <argument pos:start="61:40" pos:end="61:56"><expr pos:start="61:40" pos:end="61:56"><operator pos:start="61:40" pos:end="61:40">&amp;</operator><name pos:start="61:41" pos:end="61:56"><name pos:start="61:41" pos:end="61:50">xattr_fidp</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:56">path</name></name></expr></argument>, <argument pos:start="61:59" pos:end="61:62"><expr pos:start="61:59" pos:end="61:62"><name pos:start="61:59" pos:end="61:62">NULL</name></expr></argument>, <argument pos:start="61:65" pos:end="61:65"><expr pos:start="61:65" pos:end="61:65"><literal type="number" pos:start="61:65" pos:end="61:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:21">(<expr pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:16">size</name> <operator pos:start="63:18" pos:end="63:18">&lt;</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>)</condition> <block pos:start="63:23" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:21">

            <expr_stmt pos:start="65:13" pos:end="65:23"><expr pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:15">err</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:22">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:42"><expr pos:start="67:13" pos:end="67:41"><call pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:21">clunk_fid</name><argument_list pos:start="67:22" pos:end="67:41">(<argument pos:start="67:23" pos:end="67:23"><expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">s</name></expr></argument>, <argument pos:start="67:26" pos:end="67:40"><expr pos:start="67:26" pos:end="67:40"><name pos:start="67:26" pos:end="67:40"><name pos:start="67:26" pos:end="67:35">xattr_fidp</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:40">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="69:13" pos:end="69:21">goto <name pos:start="69:18" pos:end="69:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="73:9" pos:end="77:11">/*

         * Read the xattr value

         */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:32"><name pos:start="79:9" pos:end="79:18">xattr_fidp</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:22">fs</name><operator pos:start="79:23" pos:end="79:23">.</operator><name pos:start="79:24" pos:end="79:28">xattr</name><operator pos:start="79:29" pos:end="79:29">.</operator><name pos:start="79:30" pos:end="79:32">len</name></name> <operator pos:start="79:34" pos:end="79:34">=</operator> <name pos:start="79:36" pos:end="79:39">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:44"><expr pos:start="81:9" pos:end="81:43"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:18">xattr_fidp</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:28">fid_type</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <name pos:start="81:32" pos:end="81:43">P9_FID_XATTR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:45"><expr pos:start="83:9" pos:end="83:44"><name pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:18">xattr_fidp</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:22">fs</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:28">xattr</name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:39">copied_len</name></name> <operator pos:start="83:41" pos:end="83:41">=</operator> <operator pos:start="83:43" pos:end="83:43">-</operator><literal type="number" pos:start="83:44" pos:end="83:44">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="103:9"><if pos:start="85:9" pos:end="103:9">if <condition pos:start="85:12" pos:end="85:17">(<expr pos:start="85:13" pos:end="85:16"><name pos:start="85:13" pos:end="85:16">size</name></expr>)</condition> <block pos:start="85:19" pos:end="103:9">{<block_content pos:start="87:13" pos:end="101:13">

            <expr_stmt pos:start="87:13" pos:end="87:56"><expr pos:start="87:13" pos:end="87:55"><name pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:22">xattr_fidp</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:26">fs</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:32">xattr</name><operator pos:start="87:33" pos:end="87:33">.</operator><name pos:start="87:34" pos:end="87:38">value</name></name> <operator pos:start="87:40" pos:end="87:40">=</operator> <call pos:start="87:42" pos:end="87:55"><name pos:start="87:42" pos:end="87:49">g_malloc</name><argument_list pos:start="87:50" pos:end="87:55">(<argument pos:start="87:51" pos:end="87:54"><expr pos:start="87:51" pos:end="87:54"><name pos:start="87:51" pos:end="87:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="93:63"><expr pos:start="89:13" pos:end="93:62"><name pos:start="89:13" pos:end="89:15">err</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="93:62"><name pos:start="89:19" pos:end="89:36">v9fs_co_llistxattr</name><argument_list pos:start="89:37" pos:end="93:62">(<argument pos:start="89:38" pos:end="89:40"><expr pos:start="89:38" pos:end="89:40"><name pos:start="89:38" pos:end="89:40">pdu</name></expr></argument>, <argument pos:start="89:43" pos:end="89:59"><expr pos:start="89:43" pos:end="89:59"><operator pos:start="89:43" pos:end="89:43">&amp;</operator><name pos:start="89:44" pos:end="89:59"><name pos:start="89:44" pos:end="89:53">xattr_fidp</name><operator pos:start="89:54" pos:end="89:55">-&gt;</operator><name pos:start="89:56" pos:end="89:59">path</name></name></expr></argument>,

                                     <argument pos:start="91:38" pos:end="91:63"><expr pos:start="91:38" pos:end="91:63"><name pos:start="91:38" pos:end="91:63"><name pos:start="91:38" pos:end="91:47">xattr_fidp</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:51">fs</name><operator pos:start="91:52" pos:end="91:52">.</operator><name pos:start="91:53" pos:end="91:57">xattr</name><operator pos:start="91:58" pos:end="91:58">.</operator><name pos:start="91:59" pos:end="91:63">value</name></name></expr></argument>,

                                     <argument pos:start="93:38" pos:end="93:61"><expr pos:start="93:38" pos:end="93:61"><name pos:start="93:38" pos:end="93:61"><name pos:start="93:38" pos:end="93:47">xattr_fidp</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:51">fs</name><operator pos:start="93:52" pos:end="93:52">.</operator><name pos:start="93:53" pos:end="93:57">xattr</name><operator pos:start="93:58" pos:end="93:58">.</operator><name pos:start="93:59" pos:end="93:61">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="101:13"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:24">(<expr pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:19">err</name> <operator pos:start="95:21" pos:end="95:21">&lt;</operator> <literal type="number" pos:start="95:23" pos:end="95:23">0</literal></expr>)</condition> <block pos:start="95:26" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:25">

                <expr_stmt pos:start="97:17" pos:end="97:46"><expr pos:start="97:17" pos:end="97:45"><call pos:start="97:17" pos:end="97:45"><name pos:start="97:17" pos:end="97:25">clunk_fid</name><argument_list pos:start="97:26" pos:end="97:45">(<argument pos:start="97:27" pos:end="97:27"><expr pos:start="97:27" pos:end="97:27"><name pos:start="97:27" pos:end="97:27">s</name></expr></argument>, <argument pos:start="97:30" pos:end="97:44"><expr pos:start="97:30" pos:end="97:44"><name pos:start="97:30" pos:end="97:44"><name pos:start="97:30" pos:end="97:39">xattr_fidp</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:44">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="99:17" pos:end="99:25">goto <name pos:start="99:22" pos:end="99:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:54"><expr pos:start="105:9" pos:end="105:53"><name pos:start="105:9" pos:end="105:14">offset</name> <operator pos:start="105:16" pos:end="105:17">+=</operator> <call pos:start="105:19" pos:end="105:53"><name pos:start="105:19" pos:end="105:29">pdu_marshal</name><argument_list pos:start="105:30" pos:end="105:53">(<argument pos:start="105:31" pos:end="105:33"><expr pos:start="105:31" pos:end="105:33"><name pos:start="105:31" pos:end="105:33">pdu</name></expr></argument>, <argument pos:start="105:36" pos:end="105:41"><expr pos:start="105:36" pos:end="105:41"><name pos:start="105:36" pos:end="105:41">offset</name></expr></argument>, <argument pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><literal type="string" pos:start="105:44" pos:end="105:46">"q"</literal></expr></argument>, <argument pos:start="105:49" pos:end="105:52"><expr pos:start="105:49" pos:end="105:52"><name pos:start="105:49" pos:end="105:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:21"><expr pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:11">err</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <name pos:start="107:15" pos:end="107:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="169:5">else <block pos:start="109:12" pos:end="169:5">{<block_content pos:start="119:9" pos:end="167:21">

        <comment type="block" pos:start="111:9" pos:end="117:11">/*

         * specific xattr fid. We check for xattr

         * presence also collect the xattr size

         */</comment>

        <expr_stmt pos:start="119:9" pos:end="121:49"><expr pos:start="119:9" pos:end="121:48"><name pos:start="119:9" pos:end="119:12">size</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="121:48"><name pos:start="119:16" pos:end="119:32">v9fs_co_lgetxattr</name><argument_list pos:start="119:33" pos:end="121:48">(<argument pos:start="119:34" pos:end="119:36"><expr pos:start="119:34" pos:end="119:36"><name pos:start="119:34" pos:end="119:36">pdu</name></expr></argument>, <argument pos:start="119:39" pos:end="119:55"><expr pos:start="119:39" pos:end="119:55"><operator pos:start="119:39" pos:end="119:39">&amp;</operator><name pos:start="119:40" pos:end="119:55"><name pos:start="119:40" pos:end="119:49">xattr_fidp</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:55">path</name></name></expr></argument>,

                                 <argument pos:start="121:34" pos:end="121:38"><expr pos:start="121:34" pos:end="121:38"><operator pos:start="121:34" pos:end="121:34">&amp;</operator><name pos:start="121:35" pos:end="121:38">name</name></expr></argument>, <argument pos:start="121:41" pos:end="121:44"><expr pos:start="121:41" pos:end="121:44"><name pos:start="121:41" pos:end="121:44">NULL</name></expr></argument>, <argument pos:start="121:47" pos:end="121:47"><expr pos:start="121:47" pos:end="121:47"><literal type="number" pos:start="121:47" pos:end="121:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:21">(<expr pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:16">size</name> <operator pos:start="123:18" pos:end="123:18">&lt;</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>)</condition> <block pos:start="123:23" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:21">

            <expr_stmt pos:start="125:13" pos:end="125:23"><expr pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:15">err</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:22">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:42"><expr pos:start="127:13" pos:end="127:41"><call pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:21">clunk_fid</name><argument_list pos:start="127:22" pos:end="127:41">(<argument pos:start="127:23" pos:end="127:23"><expr pos:start="127:23" pos:end="127:23"><name pos:start="127:23" pos:end="127:23">s</name></expr></argument>, <argument pos:start="127:26" pos:end="127:40"><expr pos:start="127:26" pos:end="127:40"><name pos:start="127:26" pos:end="127:40"><name pos:start="127:26" pos:end="127:35">xattr_fidp</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:40">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="129:13" pos:end="129:21">goto <name pos:start="129:18" pos:end="129:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="133:9" pos:end="137:11">/*

         * Read the xattr value

         */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:40"><expr pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:32"><name pos:start="139:9" pos:end="139:18">xattr_fidp</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:22">fs</name><operator pos:start="139:23" pos:end="139:23">.</operator><name pos:start="139:24" pos:end="139:28">xattr</name><operator pos:start="139:29" pos:end="139:29">.</operator><name pos:start="139:30" pos:end="139:32">len</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:39">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:44"><expr pos:start="141:9" pos:end="141:43"><name pos:start="141:9" pos:end="141:28"><name pos:start="141:9" pos:end="141:18">xattr_fidp</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:28">fid_type</name></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:43">P9_FID_XATTR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:45"><expr pos:start="143:9" pos:end="143:44"><name pos:start="143:9" pos:end="143:39"><name pos:start="143:9" pos:end="143:18">xattr_fidp</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:22">fs</name><operator pos:start="143:23" pos:end="143:23">.</operator><name pos:start="143:24" pos:end="143:28">xattr</name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:39">copied_len</name></name> <operator pos:start="143:41" pos:end="143:41">=</operator> <operator pos:start="143:43" pos:end="143:43">-</operator><literal type="number" pos:start="143:44" pos:end="143:44">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="163:9"><if pos:start="145:9" pos:end="163:9">if <condition pos:start="145:12" pos:end="145:17">(<expr pos:start="145:13" pos:end="145:16"><name pos:start="145:13" pos:end="145:16">size</name></expr>)</condition> <block pos:start="145:19" pos:end="163:9">{<block_content pos:start="147:13" pos:end="161:13">

            <expr_stmt pos:start="147:13" pos:end="147:56"><expr pos:start="147:13" pos:end="147:55"><name pos:start="147:13" pos:end="147:38"><name pos:start="147:13" pos:end="147:22">xattr_fidp</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:26">fs</name><operator pos:start="147:27" pos:end="147:27">.</operator><name pos:start="147:28" pos:end="147:32">xattr</name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:38">value</name></name> <operator pos:start="147:40" pos:end="147:40">=</operator> <call pos:start="147:42" pos:end="147:55"><name pos:start="147:42" pos:end="147:49">g_malloc</name><argument_list pos:start="147:50" pos:end="147:55">(<argument pos:start="147:51" pos:end="147:54"><expr pos:start="147:51" pos:end="147:54"><name pos:start="147:51" pos:end="147:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="153:62"><expr pos:start="149:13" pos:end="153:61"><name pos:start="149:13" pos:end="149:15">err</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="153:61"><name pos:start="149:19" pos:end="149:35">v9fs_co_lgetxattr</name><argument_list pos:start="149:36" pos:end="153:61">(<argument pos:start="149:37" pos:end="149:39"><expr pos:start="149:37" pos:end="149:39"><name pos:start="149:37" pos:end="149:39">pdu</name></expr></argument>, <argument pos:start="149:42" pos:end="149:58"><expr pos:start="149:42" pos:end="149:58"><operator pos:start="149:42" pos:end="149:42">&amp;</operator><name pos:start="149:43" pos:end="149:58"><name pos:start="149:43" pos:end="149:52">xattr_fidp</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:58">path</name></name></expr></argument>,

                                    <argument pos:start="151:37" pos:end="151:41"><expr pos:start="151:37" pos:end="151:41"><operator pos:start="151:37" pos:end="151:37">&amp;</operator><name pos:start="151:38" pos:end="151:41">name</name></expr></argument>, <argument pos:start="151:44" pos:end="151:69"><expr pos:start="151:44" pos:end="151:69"><name pos:start="151:44" pos:end="151:69"><name pos:start="151:44" pos:end="151:53">xattr_fidp</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:57">fs</name><operator pos:start="151:58" pos:end="151:58">.</operator><name pos:start="151:59" pos:end="151:63">xattr</name><operator pos:start="151:64" pos:end="151:64">.</operator><name pos:start="151:65" pos:end="151:69">value</name></name></expr></argument>,

                                    <argument pos:start="153:37" pos:end="153:60"><expr pos:start="153:37" pos:end="153:60"><name pos:start="153:37" pos:end="153:60"><name pos:start="153:37" pos:end="153:46">xattr_fidp</name><operator pos:start="153:47" pos:end="153:48">-&gt;</operator><name pos:start="153:49" pos:end="153:50">fs</name><operator pos:start="153:51" pos:end="153:51">.</operator><name pos:start="153:52" pos:end="153:56">xattr</name><operator pos:start="153:57" pos:end="153:57">.</operator><name pos:start="153:58" pos:end="153:60">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:24">(<expr pos:start="155:17" pos:end="155:23"><name pos:start="155:17" pos:end="155:19">err</name> <operator pos:start="155:21" pos:end="155:21">&lt;</operator> <literal type="number" pos:start="155:23" pos:end="155:23">0</literal></expr>)</condition> <block pos:start="155:26" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:25">

                <expr_stmt pos:start="157:17" pos:end="157:46"><expr pos:start="157:17" pos:end="157:45"><call pos:start="157:17" pos:end="157:45"><name pos:start="157:17" pos:end="157:25">clunk_fid</name><argument_list pos:start="157:26" pos:end="157:45">(<argument pos:start="157:27" pos:end="157:27"><expr pos:start="157:27" pos:end="157:27"><name pos:start="157:27" pos:end="157:27">s</name></expr></argument>, <argument pos:start="157:30" pos:end="157:44"><expr pos:start="157:30" pos:end="157:44"><name pos:start="157:30" pos:end="157:44"><name pos:start="157:30" pos:end="157:39">xattr_fidp</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:44">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="159:17" pos:end="159:25">goto <name pos:start="159:22" pos:end="159:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:54"><expr pos:start="165:9" pos:end="165:53"><name pos:start="165:9" pos:end="165:14">offset</name> <operator pos:start="165:16" pos:end="165:17">+=</operator> <call pos:start="165:19" pos:end="165:53"><name pos:start="165:19" pos:end="165:29">pdu_marshal</name><argument_list pos:start="165:30" pos:end="165:53">(<argument pos:start="165:31" pos:end="165:33"><expr pos:start="165:31" pos:end="165:33"><name pos:start="165:31" pos:end="165:33">pdu</name></expr></argument>, <argument pos:start="165:36" pos:end="165:41"><expr pos:start="165:36" pos:end="165:41"><name pos:start="165:36" pos:end="165:41">offset</name></expr></argument>, <argument pos:start="165:44" pos:end="165:46"><expr pos:start="165:44" pos:end="165:46"><literal type="string" pos:start="165:44" pos:end="165:46">"q"</literal></expr></argument>, <argument pos:start="165:49" pos:end="165:52"><expr pos:start="165:49" pos:end="165:52"><name pos:start="165:49" pos:end="165:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:21"><expr pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:11">err</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <name pos:start="167:15" pos:end="167:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:57"><expr pos:start="171:5" pos:end="171:56"><call pos:start="171:5" pos:end="171:56"><name pos:start="171:5" pos:end="171:31">trace_v9fs_xattrwalk_return</name><argument_list pos:start="171:32" pos:end="171:56">(<argument pos:start="171:33" pos:end="171:40"><expr pos:start="171:33" pos:end="171:40"><name pos:start="171:33" pos:end="171:40"><name pos:start="171:33" pos:end="171:35">pdu</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:40">tag</name></name></expr></argument>, <argument pos:start="171:43" pos:end="171:49"><expr pos:start="171:43" pos:end="171:49"><name pos:start="171:43" pos:end="171:49"><name pos:start="171:43" pos:end="171:45">pdu</name><operator pos:start="171:46" pos:end="171:47">-&gt;</operator><name pos:start="171:48" pos:end="171:49">id</name></name></expr></argument>, <argument pos:start="171:52" pos:end="171:55"><expr pos:start="171:52" pos:end="171:55"><name pos:start="171:52" pos:end="171:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="173:1" pos:end="173:4"><name pos:start="173:1" pos:end="173:3">out</name>:</label>

    <expr_stmt pos:start="175:5" pos:end="175:28"><expr pos:start="175:5" pos:end="175:27"><call pos:start="175:5" pos:end="175:27"><name pos:start="175:5" pos:end="175:11">put_fid</name><argument_list pos:start="175:12" pos:end="175:27">(<argument pos:start="175:13" pos:end="175:15"><expr pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">pdu</name></expr></argument>, <argument pos:start="175:18" pos:end="175:26"><expr pos:start="175:18" pos:end="175:26"><name pos:start="175:18" pos:end="175:26">file_fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:19">(<expr pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:18">xattr_fidp</name></expr>)</condition> <block pos:start="177:21" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:33">

        <expr_stmt pos:start="179:9" pos:end="179:33"><expr pos:start="179:9" pos:end="179:32"><call pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:15">put_fid</name><argument_list pos:start="179:16" pos:end="179:32">(<argument pos:start="179:17" pos:end="179:19"><expr pos:start="179:17" pos:end="179:19"><name pos:start="179:17" pos:end="179:19">pdu</name></expr></argument>, <argument pos:start="179:22" pos:end="179:31"><expr pos:start="179:22" pos:end="179:31"><name pos:start="179:22" pos:end="179:31">xattr_fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="183:1" pos:end="183:10"><name pos:start="183:1" pos:end="183:9">out_nofid</name>:</label>

    <expr_stmt pos:start="185:5" pos:end="185:30"><expr pos:start="185:5" pos:end="185:29"><call pos:start="185:5" pos:end="185:29"><name pos:start="185:5" pos:end="185:16">complete_pdu</name><argument_list pos:start="185:17" pos:end="185:29">(<argument pos:start="185:18" pos:end="185:18"><expr pos:start="185:18" pos:end="185:18"><name pos:start="185:18" pos:end="185:18">s</name></expr></argument>, <argument pos:start="185:21" pos:end="185:23"><expr pos:start="185:21" pos:end="185:23"><name pos:start="185:21" pos:end="185:23">pdu</name></expr></argument>, <argument pos:start="185:26" pos:end="185:28"><expr pos:start="185:26" pos:end="185:28"><name pos:start="185:26" pos:end="185:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:28"><expr pos:start="187:5" pos:end="187:27"><call pos:start="187:5" pos:end="187:27"><name pos:start="187:5" pos:end="187:20">v9fs_string_free</name><argument_list pos:start="187:21" pos:end="187:27">(<argument pos:start="187:22" pos:end="187:26"><expr pos:start="187:22" pos:end="187:26"><operator pos:start="187:22" pos:end="187:22">&amp;</operator><name pos:start="187:23" pos:end="187:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
