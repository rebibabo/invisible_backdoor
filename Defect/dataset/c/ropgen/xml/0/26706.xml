<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26706.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">serial_update_irq</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:41">SerialState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:19">tmp_iir</name> <init pos:start="5:21" pos:end="5:37">= <expr pos:start="5:23" pos:end="5:37"><name pos:start="5:23" pos:end="5:37">UART_IIR_NO_INT</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="43:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:64">(<expr pos:start="9:9" pos:end="9:63"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:15">ier</name></name> <operator pos:start="9:17" pos:end="9:17">&amp;</operator> <name pos:start="9:19" pos:end="9:31">UART_IER_RLSI</name><operator pos:start="9:32" pos:end="9:32">)</operator> <operator pos:start="9:34" pos:end="9:35">&amp;&amp;</operator> <operator pos:start="9:37" pos:end="9:37">(</operator><name pos:start="9:38" pos:end="9:43"><name pos:start="9:38" pos:end="9:38">s</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:43">lsr</name></name> <operator pos:start="9:45" pos:end="9:45">&amp;</operator> <name pos:start="9:47" pos:end="9:62">UART_LSR_INT_ANY</name><operator pos:start="9:63" pos:end="9:63">)</operator></expr>)</condition> <block pos:start="9:66" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:32">

        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:15">tmp_iir</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:31">UART_IIR_RLSI</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="23:5">else if <condition pos:start="13:15" pos:end="13:62">(<expr pos:start="13:16" pos:end="13:61"><operator pos:start="13:16" pos:end="13:16">(</operator><name pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:22">ier</name></name> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <name pos:start="13:26" pos:end="13:37">UART_IER_RDI</name><operator pos:start="13:38" pos:end="13:38">)</operator> <operator pos:start="13:40" pos:end="13:41">&amp;&amp;</operator> <name pos:start="13:43" pos:end="13:61"><name pos:start="13:43" pos:end="13:43">s</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:61">timeout_ipending</name></name></expr>)</condition> <block pos:start="13:64" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:31">

        <comment type="block" pos:start="15:9" pos:end="19:24">/* Note that(s-&gt;ier &amp; UART_IER_RDI) can mask this interrupt,

         * this is not in the specification but is observed on existing

         * hardware.  */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:15">tmp_iir</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:30">UART_IIR_CTI</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="35:5">else if <condition pos:start="23:15" pos:end="23:65">(<expr pos:start="23:16" pos:end="23:64"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">ier</name></name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:37">UART_IER_RDI</name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">&amp;&amp;</operator> <operator pos:start="23:43" pos:end="23:43">(</operator><name pos:start="23:44" pos:end="23:49"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:49">lsr</name></name> <operator pos:start="23:51" pos:end="23:51">&amp;</operator> <name pos:start="23:53" pos:end="23:63">UART_LSR_DR</name><operator pos:start="23:64" pos:end="23:64">)</operator></expr>)</condition> <block pos:start="23:67" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:9">

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:36">(<expr pos:start="25:13" pos:end="25:35"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:20"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">fcr</name></name> <operator pos:start="25:22" pos:end="25:22">&amp;</operator> <name pos:start="25:24" pos:end="25:34">UART_FCR_FE</name><operator pos:start="25:35" pos:end="25:35">)</operator></expr>)</condition> <block pos:start="25:38" pos:end="29:9">{<block_content pos:start="27:12" pos:end="27:34">

           <expr_stmt pos:start="27:12" pos:end="27:34"><expr pos:start="27:12" pos:end="27:33"><name pos:start="27:12" pos:end="27:18">tmp_iir</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:33">UART_IIR_RDI</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="33:9">else if <condition pos:start="29:19" pos:end="29:58">(<expr pos:start="29:20" pos:end="29:57"><name pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:31">recv_fifo</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:37">count</name></name> <operator pos:start="29:39" pos:end="29:40">&gt;=</operator> <name pos:start="29:42" pos:end="29:57"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:53">recv_fifo</name><operator pos:start="29:54" pos:end="29:54">.</operator><name pos:start="29:55" pos:end="29:57">itl</name></name></expr>)</condition> <block pos:start="29:60" pos:end="33:9">{<block_content pos:start="31:12" pos:end="31:34">

           <expr_stmt pos:start="31:12" pos:end="31:34"><expr pos:start="31:12" pos:end="31:33"><name pos:start="31:12" pos:end="31:18">tmp_iir</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:33">UART_IIR_RDI</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:59">(<expr pos:start="35:16" pos:end="35:58"><operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">ier</name></name> <operator pos:start="35:24" pos:end="35:24">&amp;</operator> <name pos:start="35:26" pos:end="35:38">UART_IER_THRI</name><operator pos:start="35:39" pos:end="35:39">)</operator> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator> <name pos:start="35:44" pos:end="35:58"><name pos:start="35:44" pos:end="35:44">s</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:58">thr_ipending</name></name></expr>)</condition> <block pos:start="35:61" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:32">

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:15">tmp_iir</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:31">UART_IIR_THRI</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="43:5">else if <condition pos:start="39:15" pos:end="39:72">(<expr pos:start="39:16" pos:end="39:71"><operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:22">ier</name></name> <operator pos:start="39:24" pos:end="39:24">&amp;</operator> <name pos:start="39:26" pos:end="39:37">UART_IER_MSI</name><operator pos:start="39:38" pos:end="39:38">)</operator> <operator pos:start="39:40" pos:end="39:41">&amp;&amp;</operator> <operator pos:start="39:43" pos:end="39:43">(</operator><name pos:start="39:44" pos:end="39:49"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:49">msr</name></name> <operator pos:start="39:51" pos:end="39:51">&amp;</operator> <name pos:start="39:53" pos:end="39:70">UART_MSR_ANY_DELTA</name><operator pos:start="39:71" pos:end="39:71">)</operator></expr>)</condition> <block pos:start="39:74" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:31">

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:15">tmp_iir</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:30">UART_IIR_MSI</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:10">iir</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:20">tmp_iir</name> <operator pos:start="47:22" pos:end="47:22">|</operator> <operator pos:start="47:24" pos:end="47:24">(</operator><name pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:30">iir</name></name> <operator pos:start="47:32" pos:end="47:32">&amp;</operator> <literal type="number" pos:start="47:34" pos:end="47:37">0xF0</literal><operator pos:start="47:38" pos:end="47:38">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:35">(<expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:15">tmp_iir</name> <operator pos:start="51:17" pos:end="51:18">!=</operator> <name pos:start="51:20" pos:end="51:34">UART_IIR_NO_INT</name></expr>)</condition> <block pos:start="51:37" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:31">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:22">qemu_irq_raise</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:31">

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:22">qemu_irq_lower</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
