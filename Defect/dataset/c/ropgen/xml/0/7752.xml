<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7752.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">scsi_write_do_fua</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:41">SCSIDiskReq</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">r</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:28">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:65"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:65">= <expr pos:start="5:24" pos:end="5:65"><call pos:start="5:24" pos:end="5:65"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:65">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:64"><expr pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:55">r</name><operator pos:start="5:56" pos:end="5:57">-&gt;</operator><name pos:start="5:58" pos:end="5:60">req</name><operator pos:start="5:61" pos:end="5:61">.</operator><name pos:start="5:62" pos:end="5:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:27">(<expr pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:9">r</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:14">req</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:26">io_canceled</name></name></expr>)</condition> <block pos:start="9:29" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:18">

        <expr_stmt pos:start="11:9" pos:end="11:42"><expr pos:start="11:9" pos:end="11:41"><call pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:32">scsi_req_cancel_complete</name><argument_list pos:start="11:33" pos:end="11:41">(<argument pos:start="11:34" pos:end="11:40"><expr pos:start="11:34" pos:end="11:40"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:40"><name pos:start="11:35" pos:end="11:35">r</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:40">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="13:9" pos:end="13:18">goto <name pos:start="13:14" pos:end="13:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:37">(<expr pos:start="19:9" pos:end="19:36"><call pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:23">scsi_is_cmd_fua</name><argument_list pos:start="19:24" pos:end="19:36">(<argument pos:start="19:25" pos:end="19:35"><expr pos:start="19:25" pos:end="19:35"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:35"><name pos:start="19:26" pos:end="19:26">r</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:31">req</name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:35">cmd</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:39" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:15">

        <expr_stmt pos:start="21:9" pos:end="23:43"><expr pos:start="21:9" pos:end="23:42"><call pos:start="21:9" pos:end="23:42"><name pos:start="21:9" pos:end="21:24">block_acct_start</name><argument_list pos:start="21:25" pos:end="23:42">(<argument pos:start="21:26" pos:end="21:56"><expr pos:start="21:26" pos:end="21:56"><call pos:start="21:26" pos:end="21:56"><name pos:start="21:26" pos:end="21:39">bdrv_get_stats</name><argument_list pos:start="21:40" pos:end="21:56">(<argument pos:start="21:41" pos:end="21:55"><expr pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:41">s</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:47">qdev</name><operator pos:start="21:48" pos:end="21:48">.</operator><name pos:start="21:49" pos:end="21:52">conf</name><operator pos:start="21:53" pos:end="21:53">.</operator><name pos:start="21:54" pos:end="21:55">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:59" pos:end="21:66"><expr pos:start="21:59" pos:end="21:66"><operator pos:start="21:59" pos:end="21:59">&amp;</operator><name pos:start="21:60" pos:end="21:66"><name pos:start="21:60" pos:end="21:60">r</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:66">acct</name></name></expr></argument>, <argument pos:start="21:69" pos:end="21:69"><expr pos:start="21:69" pos:end="21:69"><literal type="number" pos:start="21:69" pos:end="21:69">0</literal></expr></argument>,

                         <argument pos:start="23:26" pos:end="23:41"><expr pos:start="23:26" pos:end="23:41"><name pos:start="23:26" pos:end="23:41">BLOCK_ACCT_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:77"><expr pos:start="25:9" pos:end="25:76"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">r</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">req</name><operator pos:start="25:15" pos:end="25:15">.</operator><name pos:start="25:16" pos:end="25:20">aiocb</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:76"><name pos:start="25:24" pos:end="25:37">bdrv_aio_flush</name><argument_list pos:start="25:38" pos:end="25:76">(<argument pos:start="25:39" pos:end="25:53"><expr pos:start="25:39" pos:end="25:53"><name pos:start="25:39" pos:end="25:53"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:45">qdev</name><operator pos:start="25:46" pos:end="25:46">.</operator><name pos:start="25:47" pos:end="25:50">conf</name><operator pos:start="25:51" pos:end="25:51">.</operator><name pos:start="25:52" pos:end="25:53">bs</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:72"><expr pos:start="25:56" pos:end="25:72"><name pos:start="25:56" pos:end="25:72">scsi_aio_complete</name></expr></argument>, <argument pos:start="25:75" pos:end="25:75"><expr pos:start="25:75" pos:end="25:75"><name pos:start="25:75" pos:end="25:75">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><call pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:21">scsi_req_complete</name><argument_list pos:start="33:22" pos:end="33:36">(<argument pos:start="33:23" pos:end="33:29"><expr pos:start="33:23" pos:end="33:29"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:24">r</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:29">req</name></name></expr></argument>, <argument pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:35">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="37:1" pos:end="37:5"><name pos:start="37:1" pos:end="37:4">done</name>:</label>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><call pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:18">scsi_req_unref</name><argument_list pos:start="39:19" pos:end="39:27">(<argument pos:start="39:20" pos:end="39:26"><expr pos:start="39:20" pos:end="39:26"><operator pos:start="39:20" pos:end="39:20">&amp;</operator><name pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:21">r</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:26">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
