<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13400.c" pos:tabs="8"><function pos:start="1:1" pos:end="449:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">av_noinline</name> <name pos:start="1:20" pos:end="1:23">void</name> <name pos:start="1:25" pos:end="1:28">FUNC</name></type>(<name pos:start="1:30" pos:end="1:41">hl_decode_mb</name>)<parameter_list pos:start="1:43" pos:end="1:80">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:79"><decl pos:start="1:60" pos:end="1:79"><type pos:start="1:60" pos:end="1:79"><name pos:start="1:60" pos:end="1:75">H264SliceContext</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:79">sl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="449:1">{<block_content pos:start="5:5" pos:end="447:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">mb_x</name>    <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><name pos:start="5:25" pos:end="5:31"><name pos:start="5:25" pos:end="5:25">h</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:31">mb_x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">mb_y</name>    <init pos:start="7:23" pos:end="7:31">= <expr pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">h</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">mb_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:19">mb_xy</name>   <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:25">h</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">mb_xy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:21">mb_type</name> <init pos:start="11:23" pos:end="11:49">= <expr pos:start="11:25" pos:end="11:49"><name pos:start="11:25" pos:end="11:49"><name pos:start="11:25" pos:end="11:25">h</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:34">cur_pic</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:42">mb_type</name><index pos:start="11:43" pos:end="11:49">[<expr pos:start="11:44" pos:end="11:48"><name pos:start="11:44" pos:end="11:48">mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:19">dest_y</name></decl>, <decl pos:start="13:22" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:29">dest_cb</name></decl>, <decl pos:start="13:32" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:32" pos:end="13:32">*</modifier></type><name pos:start="13:33" pos:end="13:39">dest_cr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">linesize</name></decl>, <decl pos:start="15:19" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:28">uvlinesize</name></decl> <comment type="block" pos:start="15:30" pos:end="15:43">/*dct_offset*/</comment>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">int</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:21">block_offset</name> <init pos:start="19:23" pos:end="19:43">= <expr pos:start="19:25" pos:end="19:43"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:43"><name pos:start="19:26" pos:end="19:26">h</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:40">block_offset</name><index pos:start="19:41" pos:end="19:43">[<expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:89"><decl pos:start="21:5" pos:end="21:88"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:30">transform_bypass</name> <init pos:start="21:32" pos:end="21:88">= <expr pos:start="21:34" pos:end="21:88"><operator pos:start="21:34" pos:end="21:34">!</operator><name pos:start="21:35" pos:end="21:40">SIMPLE</name> <operator pos:start="21:42" pos:end="21:43">&amp;&amp;</operator> <operator pos:start="21:45" pos:end="21:45">(</operator><name pos:start="21:46" pos:end="21:55"><name pos:start="21:46" pos:end="21:47">sl</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:55">qscale</name></name> <operator pos:start="21:57" pos:end="21:58">==</operator> <literal type="number" pos:start="21:60" pos:end="21:60">0</literal> <operator pos:start="21:62" pos:end="21:63">&amp;&amp;</operator> <name pos:start="21:65" pos:end="21:87"><name pos:start="21:65" pos:end="21:65">h</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:70">sps</name><operator pos:start="21:71" pos:end="21:71">.</operator><name pos:start="21:72" pos:end="21:87">transform_bypass</name></name><operator pos:start="21:88" pos:end="21:88">)</operator></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:60">/* is_h264 should always be true if SVQ3 is disabled. */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:97"><decl pos:start="25:5" pos:end="25:96"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:21">is_h264</name> <init pos:start="25:23" pos:end="25:96">= <expr pos:start="25:25" pos:end="25:96"><operator pos:start="25:25" pos:end="25:25">!</operator><name pos:start="25:26" pos:end="25:44">CONFIG_SVQ3_DECODER</name> <operator pos:start="25:46" pos:end="25:47">||</operator> <name pos:start="25:49" pos:end="25:54">SIMPLE</name> <operator pos:start="25:56" pos:end="25:57">||</operator> <name pos:start="25:59" pos:end="25:76"><name pos:start="25:59" pos:end="25:59">h</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:66">avctx</name><operator pos:start="25:67" pos:end="25:68">-&gt;</operator><name pos:start="25:69" pos:end="25:76">codec_id</name></name> <operator pos:start="25:78" pos:end="25:79">==</operator> <name pos:start="25:81" pos:end="25:96">AV_CODEC_ID_H264</name></expr></init></decl>;</decl_stmt>

    <function_decl pos:start="27:5" pos:end="27:63"><type pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:8">void</name></type> (<modifier pos:start="27:11" pos:end="27:11">*</modifier><name pos:start="27:12" pos:end="27:19">idct_add</name>)<parameter_list pos:start="27:21" pos:end="27:62">(<parameter pos:start="27:22" pos:end="27:33"><decl pos:start="27:22" pos:end="27:33"><type pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:28">uint8_t</name> <modifier pos:start="27:30" pos:end="27:30">*</modifier></type><name pos:start="27:31" pos:end="27:33">dst</name></decl></parameter>, <parameter pos:start="27:36" pos:end="27:49"><decl pos:start="27:36" pos:end="27:49"><type pos:start="27:36" pos:end="27:49"><name pos:start="27:36" pos:end="27:42">int16_t</name> <modifier pos:start="27:44" pos:end="27:44">*</modifier></type><name pos:start="27:45" pos:end="27:49">block</name></decl></parameter>, <parameter pos:start="27:52" pos:end="27:61"><decl pos:start="27:52" pos:end="27:61"><type pos:start="27:52" pos:end="27:61"><name pos:start="27:52" pos:end="27:54">int</name></type> <name pos:start="27:56" pos:end="27:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="29:5" pos:end="29:50"><decl pos:start="29:5" pos:end="29:49"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:21">block_h</name>   <init pos:start="29:25" pos:end="29:49">= <expr pos:start="29:27" pos:end="29:49"><literal type="number" pos:start="29:27" pos:end="29:28">16</literal> <operator pos:start="29:30" pos:end="29:31">&gt;&gt;</operator> <name pos:start="29:33" pos:end="29:49"><name pos:start="29:33" pos:end="29:33">h</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:49">chroma_y_shift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:39"><decl pos:start="31:5" pos:end="31:38"><type pos:start="31:5" pos:end="31:13"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:13">int</name></type> <name pos:start="31:15" pos:end="31:23">chroma422</name> <init pos:start="31:25" pos:end="31:38">= <expr pos:start="31:27" pos:end="31:38"><call pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:35">CHROMA422</name><argument_list pos:start="31:36" pos:end="31:38">(<argument pos:start="31:37" pos:end="31:37"><expr pos:start="31:37" pos:end="31:37"><name pos:start="31:37" pos:end="31:37">h</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:92"><expr pos:start="35:5" pos:end="35:91"><name pos:start="35:5" pos:end="35:10">dest_y</name>  <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:34"><name pos:start="35:15" pos:end="35:15">h</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">cur_pic</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:26">f</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:31">data</name><index pos:start="35:32" pos:end="35:34">[<expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">0</literal></expr>]</index></name> <operator pos:start="35:36" pos:end="35:36">+</operator> <operator pos:start="35:38" pos:end="35:38">(</operator><operator pos:start="35:39" pos:end="35:39">(</operator><name pos:start="35:40" pos:end="35:43">mb_x</name> <operator pos:start="35:45" pos:end="35:46">&lt;&lt;</operator> <name pos:start="35:48" pos:end="35:58">PIXEL_SHIFT</name><operator pos:start="35:59" pos:end="35:59">)</operator>     <operator pos:start="35:65" pos:end="35:65">+</operator> <name pos:start="35:67" pos:end="35:70">mb_y</name> <operator pos:start="35:72" pos:end="35:72">*</operator> <name pos:start="35:74" pos:end="35:84"><name pos:start="35:74" pos:end="35:74">h</name><operator pos:start="35:75" pos:end="35:76">-&gt;</operator><name pos:start="35:77" pos:end="35:84">linesize</name></name><operator pos:start="35:85" pos:end="35:85">)</operator>  <operator pos:start="35:88" pos:end="35:88">*</operator> <literal type="number" pos:start="35:90" pos:end="35:91">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:97"><expr pos:start="37:5" pos:end="37:96"><name pos:start="37:5" pos:end="37:11">dest_cb</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:34"><name pos:start="37:15" pos:end="37:15">h</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:24">cur_pic</name><operator pos:start="37:25" pos:end="37:25">.</operator><name pos:start="37:26" pos:end="37:26">f</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:31">data</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr>]</index></name> <operator pos:start="37:36" pos:end="37:36">+</operator>  <operator pos:start="37:39" pos:end="37:39">(</operator><name pos:start="37:40" pos:end="37:43">mb_x</name> <operator pos:start="37:45" pos:end="37:46">&lt;&lt;</operator> <name pos:start="37:48" pos:end="37:58">PIXEL_SHIFT</name><operator pos:start="37:59" pos:end="37:59">)</operator> <operator pos:start="37:61" pos:end="37:61">*</operator> <literal type="number" pos:start="37:63" pos:end="37:65">8</literal> <operator pos:start="37:65" pos:end="37:65">+</operator> <name pos:start="37:67" pos:end="37:70">mb_y</name> <operator pos:start="37:72" pos:end="37:72">*</operator> <name pos:start="37:74" pos:end="37:86"><name pos:start="37:74" pos:end="37:74">h</name><operator pos:start="37:75" pos:end="37:76">-&gt;</operator><name pos:start="37:77" pos:end="37:86">uvlinesize</name></name> <operator pos:start="37:88" pos:end="37:88">*</operator> <name pos:start="37:90" pos:end="37:96">block_h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:97"><expr pos:start="39:5" pos:end="39:96"><name pos:start="39:5" pos:end="39:11">dest_cr</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:34"><name pos:start="39:15" pos:end="39:15">h</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:24">cur_pic</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:26">f</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:31">data</name><index pos:start="39:32" pos:end="39:34">[<expr pos:start="39:33" pos:end="39:33"><literal type="number" pos:start="39:33" pos:end="39:33">2</literal></expr>]</index></name> <operator pos:start="39:36" pos:end="39:36">+</operator>  <operator pos:start="39:39" pos:end="39:39">(</operator><name pos:start="39:40" pos:end="39:43">mb_x</name> <operator pos:start="39:45" pos:end="39:46">&lt;&lt;</operator> <name pos:start="39:48" pos:end="39:58">PIXEL_SHIFT</name><operator pos:start="39:59" pos:end="39:59">)</operator> <operator pos:start="39:61" pos:end="39:61">*</operator> <literal type="number" pos:start="39:63" pos:end="39:65">8</literal> <operator pos:start="39:65" pos:end="39:65">+</operator> <name pos:start="39:67" pos:end="39:70">mb_y</name> <operator pos:start="39:72" pos:end="39:72">*</operator> <name pos:start="39:74" pos:end="39:86"><name pos:start="39:74" pos:end="39:74">h</name><operator pos:start="39:75" pos:end="39:76">-&gt;</operator><name pos:start="39:77" pos:end="39:86">uvlinesize</name></name> <operator pos:start="39:88" pos:end="39:88">*</operator> <name pos:start="39:90" pos:end="39:96">block_h</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:110"><expr pos:start="43:5" pos:end="43:109"><call pos:start="43:5" pos:end="43:109"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:5">h</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">vdsp</name><operator pos:start="43:12" pos:end="43:12">.</operator><name pos:start="43:13" pos:end="43:20">prefetch</name></name><argument_list pos:start="43:21" pos:end="43:109">(<argument pos:start="43:22" pos:end="43:86"><expr pos:start="43:22" pos:end="43:86"><name pos:start="43:22" pos:end="43:27">dest_y</name>  <operator pos:start="43:30" pos:end="43:30">+</operator> <operator pos:start="43:32" pos:end="43:32">(</operator><name pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:33">h</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">mb_x</name></name> <operator pos:start="43:41" pos:end="43:41">&amp;</operator> <literal type="number" pos:start="43:43" pos:end="43:43">3</literal><operator pos:start="43:44" pos:end="43:44">)</operator> <operator pos:start="43:46" pos:end="43:46">*</operator> <literal type="number" pos:start="43:48" pos:end="43:48">4</literal> <operator pos:start="43:50" pos:end="43:50">*</operator> <name pos:start="43:52" pos:end="43:62"><name pos:start="43:52" pos:end="43:52">h</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:62">linesize</name></name>   <operator pos:start="43:66" pos:end="43:66">+</operator> <operator pos:start="43:68" pos:end="43:68">(</operator><literal type="number" pos:start="43:69" pos:end="43:70">64</literal> <operator pos:start="43:72" pos:end="43:73">&lt;&lt;</operator> <name pos:start="43:75" pos:end="43:85">PIXEL_SHIFT</name><operator pos:start="43:86" pos:end="43:86">)</operator></expr></argument>, <argument pos:start="43:89" pos:end="43:99"><expr pos:start="43:89" pos:end="43:99"><name pos:start="43:89" pos:end="43:99"><name pos:start="43:89" pos:end="43:89">h</name><operator pos:start="43:90" pos:end="43:91">-&gt;</operator><name pos:start="43:92" pos:end="43:99">linesize</name></name></expr></argument>,       <argument pos:start="43:108" pos:end="43:108"><expr pos:start="43:108" pos:end="43:108"><literal type="number" pos:start="43:108" pos:end="43:108">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:110"><expr pos:start="45:5" pos:end="45:109"><call pos:start="45:5" pos:end="45:109"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:5">h</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:11">vdsp</name><operator pos:start="45:12" pos:end="45:12">.</operator><name pos:start="45:13" pos:end="45:20">prefetch</name></name><argument_list pos:start="45:21" pos:end="45:109">(<argument pos:start="45:22" pos:end="45:86"><expr pos:start="45:22" pos:end="45:86"><name pos:start="45:22" pos:end="45:28">dest_cb</name> <operator pos:start="45:30" pos:end="45:30">+</operator> <operator pos:start="45:32" pos:end="45:32">(</operator><name pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:33">h</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:39">mb_x</name></name> <operator pos:start="45:41" pos:end="45:41">&amp;</operator> <literal type="number" pos:start="45:43" pos:end="45:43">7</literal><operator pos:start="45:44" pos:end="45:44">)</operator>     <operator pos:start="45:50" pos:end="45:50">*</operator> <name pos:start="45:52" pos:end="45:64"><name pos:start="45:52" pos:end="45:52">h</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:64">uvlinesize</name></name> <operator pos:start="45:66" pos:end="45:66">+</operator> <operator pos:start="45:68" pos:end="45:68">(</operator><literal type="number" pos:start="45:69" pos:end="45:70">64</literal> <operator pos:start="45:72" pos:end="45:73">&lt;&lt;</operator> <name pos:start="45:75" pos:end="45:85">PIXEL_SHIFT</name><operator pos:start="45:86" pos:end="45:86">)</operator></expr></argument>, <argument pos:start="45:89" pos:end="45:105"><expr pos:start="45:89" pos:end="45:105"><name pos:start="45:89" pos:end="45:95">dest_cr</name> <operator pos:start="45:97" pos:end="45:97">-</operator> <name pos:start="45:99" pos:end="45:105">dest_cb</name></expr></argument>, <argument pos:start="45:108" pos:end="45:108"><expr pos:start="45:108" pos:end="45:108"><literal type="number" pos:start="45:108" pos:end="45:108">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:5">h</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:18">list_counts</name><index pos:start="49:19" pos:end="49:25">[<expr pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:24">mb_xy</name></expr>]</index></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:42"><name pos:start="49:29" pos:end="49:30">sl</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:42">list_count</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="115:5"><if pos:start="53:5" pos:end="107:5">if <condition pos:start="53:8" pos:end="53:31">(<expr pos:start="53:9" pos:end="53:30"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:15">SIMPLE</name> <operator pos:start="53:17" pos:end="53:18">&amp;&amp;</operator> <call pos:start="53:20" pos:end="53:30"><name pos:start="53:20" pos:end="53:27">MB_FIELD</name><argument_list pos:start="53:28" pos:end="53:30">(<argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:33" pos:end="107:5">{<block_content pos:start="55:9" pos:end="105:9">

        <expr_stmt pos:start="55:9" pos:end="55:57"><expr pos:start="55:9" pos:end="55:56"><name pos:start="55:9" pos:end="55:16">linesize</name>     <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:38"><name pos:start="55:24" pos:end="55:25">sl</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:38">mb_linesize</name></name> <operator pos:start="55:40" pos:end="55:40">=</operator> <name pos:start="55:42" pos:end="55:52"><name pos:start="55:42" pos:end="55:42">h</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:52">linesize</name></name> <operator pos:start="55:54" pos:end="55:54">*</operator> <literal type="number" pos:start="55:56" pos:end="55:56">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:61"><expr pos:start="57:9" pos:end="57:60"><name pos:start="57:9" pos:end="57:18">uvlinesize</name>   <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:40"><name pos:start="57:24" pos:end="57:25">sl</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:40">mb_uvlinesize</name></name> <operator pos:start="57:42" pos:end="57:42">=</operator> <name pos:start="57:44" pos:end="57:56"><name pos:start="57:44" pos:end="57:44">h</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:56">uvlinesize</name></name> <operator pos:start="57:58" pos:end="57:58">*</operator> <literal type="number" pos:start="57:60" pos:end="57:60">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:20">block_offset</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:43"><name pos:start="59:25" pos:end="59:25">h</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:39">block_offset</name><index pos:start="59:40" pos:end="59:43">[<expr pos:start="59:41" pos:end="59:42"><literal type="number" pos:start="59:41" pos:end="59:42">48</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:16">mb_y</name> <operator pos:start="61:18" pos:end="61:18">&amp;</operator> <literal type="number" pos:start="61:20" pos:end="61:20">1</literal></expr>)</condition> <block pos:start="61:23" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:53"> <comment type="line" pos:start="61:25" pos:end="61:59">// FIXME move out of this function?</comment>

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:18">dest_y</name>  <operator pos:start="63:21" pos:end="63:22">-=</operator> <name pos:start="63:24" pos:end="63:34"><name pos:start="63:24" pos:end="63:24">h</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:34">linesize</name></name> <operator pos:start="63:36" pos:end="63:36">*</operator> <literal type="number" pos:start="63:38" pos:end="63:39">15</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:53"><expr pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:19">dest_cb</name> <operator pos:start="65:21" pos:end="65:22">-=</operator> <name pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:24">h</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:36">uvlinesize</name></name> <operator pos:start="65:38" pos:end="65:38">*</operator> <operator pos:start="65:40" pos:end="65:40">(</operator><name pos:start="65:41" pos:end="65:47">block_h</name> <operator pos:start="65:49" pos:end="65:49">-</operator> <literal type="number" pos:start="65:51" pos:end="65:51">1</literal><operator pos:start="65:52" pos:end="65:52">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:53"><expr pos:start="67:13" pos:end="67:52"><name pos:start="67:13" pos:end="67:19">dest_cr</name> <operator pos:start="67:21" pos:end="67:22">-=</operator> <name pos:start="67:24" pos:end="67:36"><name pos:start="67:24" pos:end="67:24">h</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:36">uvlinesize</name></name> <operator pos:start="67:38" pos:end="67:38">*</operator> <operator pos:start="67:40" pos:end="67:40">(</operator><name pos:start="67:41" pos:end="67:47">block_h</name> <operator pos:start="67:49" pos:end="67:49">-</operator> <literal type="number" pos:start="67:51" pos:end="67:51">1</literal><operator pos:start="67:52" pos:end="67:52">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="105:9"><if pos:start="71:9" pos:end="105:9">if <condition pos:start="71:12" pos:end="71:27">(<expr pos:start="71:13" pos:end="71:26"><call pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:23">FRAME_MBAFF</name><argument_list pos:start="71:24" pos:end="71:26">(<argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><name pos:start="71:25" pos:end="71:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:29" pos:end="105:9">{<block_content pos:start="73:13" pos:end="103:13">

            <decl_stmt pos:start="73:13" pos:end="73:21"><decl pos:start="73:13" pos:end="73:20"><type pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">int</name></type> <name pos:start="73:17" pos:end="73:20">list</name></decl>;</decl_stmt>

            <for pos:start="75:13" pos:end="103:13">for <control pos:start="75:17" pos:end="75:57">(<init pos:start="75:18" pos:end="75:26"><expr pos:start="75:18" pos:end="75:25"><name pos:start="75:18" pos:end="75:21">list</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>;</init> <condition pos:start="75:28" pos:end="75:49"><expr pos:start="75:28" pos:end="75:48"><name pos:start="75:28" pos:end="75:31">list</name> <operator pos:start="75:33" pos:end="75:33">&lt;</operator> <name pos:start="75:35" pos:end="75:48"><name pos:start="75:35" pos:end="75:36">sl</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:48">list_count</name></name></expr>;</condition> <incr pos:start="75:51" pos:end="75:56"><expr pos:start="75:51" pos:end="75:56"><name pos:start="75:51" pos:end="75:54">list</name><operator pos:start="75:55" pos:end="75:56">++</operator></expr></incr>)</control> <block pos:start="75:59" pos:end="103:13">{<block_content pos:start="77:17" pos:end="101:17">

                <if_stmt pos:start="77:17" pos:end="79:29"><if pos:start="77:17" pos:end="79:29">if <condition pos:start="77:20" pos:end="77:46">(<expr pos:start="77:21" pos:end="77:45"><operator pos:start="77:21" pos:end="77:21">!</operator><call pos:start="77:22" pos:end="77:45"><name pos:start="77:22" pos:end="77:30">USES_LIST</name><argument_list pos:start="77:31" pos:end="77:45">(<argument pos:start="77:32" pos:end="77:38"><expr pos:start="77:32" pos:end="77:38"><name pos:start="77:32" pos:end="77:38">mb_type</name></expr></argument>, <argument pos:start="77:41" pos:end="77:44"><expr pos:start="77:41" pos:end="77:44"><name pos:start="77:41" pos:end="77:44">list</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:29"><block_content pos:start="79:21" pos:end="79:29">

                    <continue pos:start="79:21" pos:end="79:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="81:17" pos:end="101:17"><if pos:start="81:17" pos:end="87:17">if <condition pos:start="81:20" pos:end="81:38">(<expr pos:start="81:21" pos:end="81:37"><call pos:start="81:21" pos:end="81:37"><name pos:start="81:21" pos:end="81:28">IS_16X16</name><argument_list pos:start="81:29" pos:end="81:37">(<argument pos:start="81:30" pos:end="81:36"><expr pos:start="81:30" pos:end="81:36"><name pos:start="81:30" pos:end="81:36">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:40" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:81">

                    <decl_stmt pos:start="83:21" pos:end="83:65"><decl pos:start="83:21" pos:end="83:64"><type pos:start="83:21" pos:end="83:28"><name pos:start="83:21" pos:end="83:26">int8_t</name> <modifier pos:start="83:28" pos:end="83:28">*</modifier></type><name pos:start="83:29" pos:end="83:31">ref</name> <init pos:start="83:33" pos:end="83:64">= <expr pos:start="83:35" pos:end="83:64"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:64"><name pos:start="83:36" pos:end="83:37">sl</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:48">ref_cache</name><index pos:start="83:49" pos:end="83:54">[<expr pos:start="83:50" pos:end="83:53"><name pos:start="83:50" pos:end="83:53">list</name></expr>]</index><index pos:start="83:55" pos:end="83:64">[<expr pos:start="83:56" pos:end="83:63"><name pos:start="83:56" pos:end="83:63"><name pos:start="83:56" pos:end="83:60">scan8</name><index pos:start="83:61" pos:end="83:63">[<expr pos:start="83:62" pos:end="83:62"><literal type="number" pos:start="83:62" pos:end="83:62">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:81"><expr pos:start="85:21" pos:end="85:80"><call pos:start="85:21" pos:end="85:80"><name pos:start="85:21" pos:end="85:34">fill_rectangle</name><argument_list pos:start="85:35" pos:end="85:80">(<argument pos:start="85:36" pos:end="85:38"><expr pos:start="85:36" pos:end="85:38"><name pos:start="85:36" pos:end="85:38">ref</name></expr></argument>, <argument pos:start="85:41" pos:end="85:41"><expr pos:start="85:41" pos:end="85:41"><literal type="number" pos:start="85:41" pos:end="85:41">4</literal></expr></argument>, <argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">4</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">8</literal></expr></argument>, <argument pos:start="85:50" pos:end="85:76"><expr pos:start="85:50" pos:end="85:76"><operator pos:start="85:50" pos:end="85:50">(</operator><literal type="number" pos:start="85:51" pos:end="85:54">16</literal> <operator pos:start="85:54" pos:end="85:54">+</operator> <operator pos:start="85:56" pos:end="85:56">*</operator><name pos:start="85:57" pos:end="85:59">ref</name><operator pos:start="85:60" pos:end="85:60">)</operator> <operator pos:start="85:62" pos:end="85:62">^</operator> <operator pos:start="85:64" pos:end="85:64">(</operator><name pos:start="85:65" pos:end="85:71"><name pos:start="85:65" pos:end="85:65">h</name><operator pos:start="85:66" pos:end="85:67">-&gt;</operator><name pos:start="85:68" pos:end="85:71">mb_y</name></name> <operator pos:start="85:73" pos:end="85:73">&amp;</operator> <literal type="number" pos:start="85:75" pos:end="85:75">1</literal><operator pos:start="85:76" pos:end="85:76">)</operator></expr></argument>, <argument pos:start="85:79" pos:end="85:79"><expr pos:start="85:79" pos:end="85:79"><literal type="number" pos:start="85:79" pos:end="85:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="87:19" pos:end="101:17">else <block pos:start="87:24" pos:end="101:17">{<block_content pos:start="89:21" pos:end="99:21">

                    <for pos:start="89:21" pos:end="99:21">for <control pos:start="89:25" pos:end="89:47">(<init pos:start="89:26" pos:end="89:31"><expr pos:start="89:26" pos:end="89:30"><name pos:start="89:26" pos:end="89:26">i</name> <operator pos:start="89:28" pos:end="89:28">=</operator> <literal type="number" pos:start="89:30" pos:end="89:30">0</literal></expr>;</init> <condition pos:start="89:33" pos:end="89:39"><expr pos:start="89:33" pos:end="89:38"><name pos:start="89:33" pos:end="89:33">i</name> <operator pos:start="89:35" pos:end="89:35">&lt;</operator> <literal type="number" pos:start="89:37" pos:end="89:38">16</literal></expr>;</condition> <incr pos:start="89:41" pos:end="89:46"><expr pos:start="89:41" pos:end="89:46"><name pos:start="89:41" pos:end="89:41">i</name> <operator pos:start="89:43" pos:end="89:44">+=</operator> <literal type="number" pos:start="89:46" pos:end="89:46">4</literal></expr></incr>)</control> <block pos:start="89:49" pos:end="99:21">{<block_content pos:start="91:25" pos:end="97:77">

                        <decl_stmt pos:start="91:25" pos:end="91:64"><decl pos:start="91:25" pos:end="91:63"><type pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">int</name></type> <name pos:start="91:29" pos:end="91:31">ref</name> <init pos:start="91:33" pos:end="91:63">= <expr pos:start="91:35" pos:end="91:63"><name pos:start="91:35" pos:end="91:63"><name pos:start="91:35" pos:end="91:36">sl</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:47">ref_cache</name><index pos:start="91:48" pos:end="91:53">[<expr pos:start="91:49" pos:end="91:52"><name pos:start="91:49" pos:end="91:52">list</name></expr>]</index><index pos:start="91:54" pos:end="91:63">[<expr pos:start="91:55" pos:end="91:62"><name pos:start="91:55" pos:end="91:62"><name pos:start="91:55" pos:end="91:59">scan8</name><index pos:start="91:60" pos:end="91:62">[<expr pos:start="91:61" pos:end="91:61"><name pos:start="91:61" pos:end="91:61">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="93:25" pos:end="97:77"><if pos:start="93:25" pos:end="97:77">if <condition pos:start="93:28" pos:end="93:37">(<expr pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:31">ref</name> <operator pos:start="93:33" pos:end="93:34">&gt;=</operator> <literal type="number" pos:start="93:36" pos:end="93:36">0</literal></expr>)</condition><block type="pseudo" pos:start="95:29" pos:end="97:77"><block_content pos:start="95:29" pos:end="97:77">

                            <expr_stmt pos:start="95:29" pos:end="97:77"><expr pos:start="95:29" pos:end="97:76"><call pos:start="95:29" pos:end="97:76"><name pos:start="95:29" pos:end="95:42">fill_rectangle</name><argument_list pos:start="95:43" pos:end="97:76">(<argument pos:start="95:44" pos:end="95:73"><expr pos:start="95:44" pos:end="95:73"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:73"><name pos:start="95:45" pos:end="95:46">sl</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:57">ref_cache</name><index pos:start="95:58" pos:end="95:63">[<expr pos:start="95:59" pos:end="95:62"><name pos:start="95:59" pos:end="95:62">list</name></expr>]</index><index pos:start="95:64" pos:end="95:73">[<expr pos:start="95:65" pos:end="95:72"><name pos:start="95:65" pos:end="95:72"><name pos:start="95:65" pos:end="95:69">scan8</name><index pos:start="95:70" pos:end="95:72">[<expr pos:start="95:71" pos:end="95:71"><name pos:start="95:71" pos:end="95:71">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="95:76" pos:end="95:76"><expr pos:start="95:76" pos:end="95:76"><literal type="number" pos:start="95:76" pos:end="95:76">2</literal></expr></argument>, <argument pos:start="95:79" pos:end="95:79"><expr pos:start="95:79" pos:end="95:79"><literal type="number" pos:start="95:79" pos:end="95:79">2</literal></expr></argument>,

                                           <argument pos:start="97:44" pos:end="97:44"><expr pos:start="97:44" pos:end="97:44"><literal type="number" pos:start="97:44" pos:end="97:44">8</literal></expr></argument>, <argument pos:start="97:47" pos:end="97:72"><expr pos:start="97:47" pos:end="97:72"><operator pos:start="97:47" pos:end="97:47">(</operator><literal type="number" pos:start="97:48" pos:end="97:51">16</literal> <operator pos:start="97:51" pos:end="97:51">+</operator> <name pos:start="97:53" pos:end="97:55">ref</name><operator pos:start="97:56" pos:end="97:56">)</operator> <operator pos:start="97:58" pos:end="97:58">^</operator> <operator pos:start="97:60" pos:end="97:60">(</operator><name pos:start="97:61" pos:end="97:67"><name pos:start="97:61" pos:end="97:61">h</name><operator pos:start="97:62" pos:end="97:63">-&gt;</operator><name pos:start="97:64" pos:end="97:67">mb_y</name></name> <operator pos:start="97:69" pos:end="97:69">&amp;</operator> <literal type="number" pos:start="97:71" pos:end="97:71">1</literal><operator pos:start="97:72" pos:end="97:72">)</operator></expr></argument>, <argument pos:start="97:75" pos:end="97:75"><expr pos:start="97:75" pos:end="97:75"><literal type="number" pos:start="97:75" pos:end="97:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="115:5">else <block pos:start="107:12" pos:end="115:5">{<block_content pos:start="109:9" pos:end="111:55">

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:16">linesize</name>   <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:36"><name pos:start="109:22" pos:end="109:23">sl</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:36">mb_linesize</name></name>   <operator pos:start="109:40" pos:end="109:40">=</operator> <name pos:start="109:42" pos:end="109:52"><name pos:start="109:42" pos:end="109:42">h</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:52">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:55"><expr pos:start="111:9" pos:end="111:54"><name pos:start="111:9" pos:end="111:18">uvlinesize</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:38"><name pos:start="111:22" pos:end="111:23">sl</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:38">mb_uvlinesize</name></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:54"><name pos:start="111:42" pos:end="111:42">h</name><operator pos:start="111:43" pos:end="111:44">-&gt;</operator><name pos:start="111:45" pos:end="111:54">uvlinesize</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="113:9" pos:end="113:41">// dct_offset = s-&gt;linesize * 16;</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="119:5" pos:end="447:5"><if pos:start="119:5" pos:end="233:5">if <condition pos:start="119:8" pos:end="119:41">(<expr pos:start="119:9" pos:end="119:40"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:15">SIMPLE</name> <operator pos:start="119:17" pos:end="119:18">&amp;&amp;</operator> <call pos:start="119:20" pos:end="119:40"><name pos:start="119:20" pos:end="119:31">IS_INTRA_PCM</name><argument_list pos:start="119:32" pos:end="119:40">(<argument pos:start="119:33" pos:end="119:39"><expr pos:start="119:33" pos:end="119:39"><name pos:start="119:33" pos:end="119:39">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:43" pos:end="233:5">{<block_content pos:start="121:9" pos:end="231:9">

        <if_stmt pos:start="121:9" pos:end="231:9"><if pos:start="121:9" pos:end="195:9">if <condition pos:start="121:12" pos:end="121:24">(<expr pos:start="121:13" pos:end="121:23"><name pos:start="121:13" pos:end="121:23">PIXEL_SHIFT</name></expr>)</condition> <block pos:start="121:26" pos:end="195:9">{<block_content pos:start="123:13" pos:end="193:13">

            <decl_stmt pos:start="123:13" pos:end="123:56"><decl pos:start="123:13" pos:end="123:55"><type pos:start="123:13" pos:end="123:21"><specifier pos:start="123:13" pos:end="123:17">const</specifier> <name pos:start="123:19" pos:end="123:21">int</name></type> <name pos:start="123:23" pos:end="123:31">bit_depth</name> <init pos:start="123:33" pos:end="123:55">= <expr pos:start="123:35" pos:end="123:55"><name pos:start="123:35" pos:end="123:55"><name pos:start="123:35" pos:end="123:35">h</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:40">sps</name><operator pos:start="123:41" pos:end="123:41">.</operator><name pos:start="123:42" pos:end="123:55">bit_depth_luma</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="125:13" pos:end="125:18"><decl pos:start="125:13" pos:end="125:17"><type pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">int</name></type> <name pos:start="125:17" pos:end="125:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="127:13" pos:end="127:29"><decl pos:start="127:13" pos:end="127:28"><type pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:25">GetBitContext</name></type> <name pos:start="127:27" pos:end="127:28">gb</name></decl>;</decl_stmt>

            <expr_stmt pos:start="129:13" pos:end="131:82"><expr pos:start="129:13" pos:end="131:81"><call pos:start="129:13" pos:end="131:81"><name pos:start="129:13" pos:end="129:25">init_get_bits</name><argument_list pos:start="129:26" pos:end="131:81">(<argument pos:start="129:27" pos:end="129:29"><expr pos:start="129:27" pos:end="129:29"><operator pos:start="129:27" pos:end="129:27">&amp;</operator><name pos:start="129:28" pos:end="129:29">gb</name></expr></argument>, <argument pos:start="129:32" pos:end="129:48"><expr pos:start="129:32" pos:end="129:48"><name pos:start="129:32" pos:end="129:48"><name pos:start="129:32" pos:end="129:33">sl</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:48">intra_pcm_ptr</name></name></expr></argument>,

                          <argument pos:start="131:27" pos:end="131:80"><expr pos:start="131:27" pos:end="131:80"><name pos:start="131:27" pos:end="131:68"><name pos:start="131:27" pos:end="131:42">ff_h264_mb_sizes</name><index pos:start="131:43" pos:end="131:68">[<expr pos:start="131:44" pos:end="131:67"><name pos:start="131:44" pos:end="131:67"><name pos:start="131:44" pos:end="131:44">h</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:49">sps</name><operator pos:start="131:50" pos:end="131:50">.</operator><name pos:start="131:51" pos:end="131:67">chroma_format_idc</name></name></expr>]</index></name> <operator pos:start="131:70" pos:end="131:70">*</operator> <name pos:start="131:72" pos:end="131:80">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="135:13" pos:end="143:13">for <control pos:start="135:17" pos:end="135:36">(<init pos:start="135:18" pos:end="135:23"><expr pos:start="135:18" pos:end="135:22"><name pos:start="135:18" pos:end="135:18">i</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <literal type="number" pos:start="135:22" pos:end="135:22">0</literal></expr>;</init> <condition pos:start="135:25" pos:end="135:31"><expr pos:start="135:25" pos:end="135:30"><name pos:start="135:25" pos:end="135:25">i</name> <operator pos:start="135:27" pos:end="135:27">&lt;</operator> <literal type="number" pos:start="135:29" pos:end="135:30">16</literal></expr>;</condition> <incr pos:start="135:33" pos:end="135:35"><expr pos:start="135:33" pos:end="135:35"><name pos:start="135:33" pos:end="135:33">i</name><operator pos:start="135:34" pos:end="135:35">++</operator></expr></incr>)</control> <block pos:start="135:38" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:56">

                <decl_stmt pos:start="137:17" pos:end="137:70"><decl pos:start="137:17" pos:end="137:69"><type pos:start="137:17" pos:end="137:26"><name pos:start="137:17" pos:end="137:24">uint16_t</name> <modifier pos:start="137:26" pos:end="137:26">*</modifier></type><name pos:start="137:27" pos:end="137:31">tmp_y</name> <init pos:start="137:33" pos:end="137:69">= <expr pos:start="137:35" pos:end="137:69"><operator pos:start="137:35" pos:end="137:35">(</operator><name pos:start="137:36" pos:end="137:43">uint16_t</name> <operator pos:start="137:45" pos:end="137:45">*</operator><operator pos:start="137:46" pos:end="137:46">)</operator><operator pos:start="137:47" pos:end="137:47">(</operator><name pos:start="137:48" pos:end="137:53">dest_y</name> <operator pos:start="137:55" pos:end="137:55">+</operator> <name pos:start="137:57" pos:end="137:57">i</name> <operator pos:start="137:59" pos:end="137:59">*</operator> <name pos:start="137:61" pos:end="137:68">linesize</name><operator pos:start="137:69" pos:end="137:69">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="139:17" pos:end="141:56">for <control pos:start="139:21" pos:end="139:40">(<init pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:22">j</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</init> <condition pos:start="139:29" pos:end="139:35"><expr pos:start="139:29" pos:end="139:34"><name pos:start="139:29" pos:end="139:29">j</name> <operator pos:start="139:31" pos:end="139:31">&lt;</operator> <literal type="number" pos:start="139:33" pos:end="139:34">16</literal></expr>;</condition> <incr pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:37">j</name><operator pos:start="139:38" pos:end="139:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:21" pos:end="141:56"><block_content pos:start="141:21" pos:end="141:56">

                    <expr_stmt pos:start="141:21" pos:end="141:56"><expr pos:start="141:21" pos:end="141:55"><name pos:start="141:21" pos:end="141:28"><name pos:start="141:21" pos:end="141:25">tmp_y</name><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><name pos:start="141:27" pos:end="141:27">j</name></expr>]</index></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <call pos:start="141:32" pos:end="141:55"><name pos:start="141:32" pos:end="141:39">get_bits</name><argument_list pos:start="141:40" pos:end="141:55">(<argument pos:start="141:41" pos:end="141:43"><expr pos:start="141:41" pos:end="141:43"><operator pos:start="141:41" pos:end="141:41">&amp;</operator><name pos:start="141:42" pos:end="141:43">gb</name></expr></argument>, <argument pos:start="141:46" pos:end="141:54"><expr pos:start="141:46" pos:end="141:54"><name pos:start="141:46" pos:end="141:54">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></for>

            <if_stmt pos:start="145:13" pos:end="193:13"><if pos:start="145:13" pos:end="193:13">if <condition pos:start="145:16" pos:end="145:72">(<expr pos:start="145:17" pos:end="145:71"><name pos:start="145:17" pos:end="145:22">SIMPLE</name> <operator pos:start="145:24" pos:end="145:25">||</operator> <operator pos:start="145:27" pos:end="145:27">!</operator><name pos:start="145:28" pos:end="145:38">CONFIG_GRAY</name> <operator pos:start="145:40" pos:end="145:41">||</operator> <operator pos:start="145:43" pos:end="145:43">!</operator><operator pos:start="145:44" pos:end="145:44">(</operator><name pos:start="145:45" pos:end="145:52"><name pos:start="145:45" pos:end="145:45">h</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:52">flags</name></name> <operator pos:start="145:54" pos:end="145:54">&amp;</operator> <name pos:start="145:56" pos:end="145:70">CODEC_FLAG_GRAY</name><operator pos:start="145:71" pos:end="145:71">)</operator></expr>)</condition> <block pos:start="145:74" pos:end="193:13">{<block_content pos:start="147:17" pos:end="191:17">

                <if_stmt pos:start="147:17" pos:end="191:17"><if pos:start="147:17" pos:end="169:17">if <condition pos:start="147:20" pos:end="147:46">(<expr pos:start="147:21" pos:end="147:45"><operator pos:start="147:21" pos:end="147:21">!</operator><name pos:start="147:22" pos:end="147:45"><name pos:start="147:22" pos:end="147:22">h</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:27">sps</name><operator pos:start="147:28" pos:end="147:28">.</operator><name pos:start="147:29" pos:end="147:45">chroma_format_idc</name></name></expr>)</condition> <block pos:start="147:48" pos:end="169:17">{<block_content pos:start="149:21" pos:end="167:21">

                    <for pos:start="149:21" pos:end="157:21">for <control pos:start="149:25" pos:end="149:49">(<init pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:30"><name pos:start="149:26" pos:end="149:26">i</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr>;</init> <condition pos:start="149:33" pos:end="149:44"><expr pos:start="149:33" pos:end="149:43"><name pos:start="149:33" pos:end="149:33">i</name> <operator pos:start="149:35" pos:end="149:35">&lt;</operator> <name pos:start="149:37" pos:end="149:43">block_h</name></expr>;</condition> <incr pos:start="149:46" pos:end="149:48"><expr pos:start="149:46" pos:end="149:48"><name pos:start="149:46" pos:end="149:46">i</name><operator pos:start="149:47" pos:end="149:48">++</operator></expr></incr>)</control> <block pos:start="149:51" pos:end="157:21">{<block_content pos:start="151:25" pos:end="155:61">

                        <decl_stmt pos:start="151:25" pos:end="151:82"><decl pos:start="151:25" pos:end="151:81"><type pos:start="151:25" pos:end="151:34"><name pos:start="151:25" pos:end="151:32">uint16_t</name> <modifier pos:start="151:34" pos:end="151:34">*</modifier></type><name pos:start="151:35" pos:end="151:40">tmp_cb</name> <init pos:start="151:42" pos:end="151:81">= <expr pos:start="151:44" pos:end="151:81"><operator pos:start="151:44" pos:end="151:44">(</operator><name pos:start="151:45" pos:end="151:52">uint16_t</name> <operator pos:start="151:54" pos:end="151:54">*</operator><operator pos:start="151:55" pos:end="151:55">)</operator><operator pos:start="151:56" pos:end="151:56">(</operator><name pos:start="151:57" pos:end="151:63">dest_cb</name> <operator pos:start="151:65" pos:end="151:65">+</operator> <name pos:start="151:67" pos:end="151:67">i</name> <operator pos:start="151:69" pos:end="151:69">*</operator> <name pos:start="151:71" pos:end="151:80">uvlinesize</name><operator pos:start="151:81" pos:end="151:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="153:25" pos:end="155:61">for <control pos:start="153:29" pos:end="153:47">(<init pos:start="153:30" pos:end="153:35"><expr pos:start="153:30" pos:end="153:34"><name pos:start="153:30" pos:end="153:30">j</name> <operator pos:start="153:32" pos:end="153:32">=</operator> <literal type="number" pos:start="153:34" pos:end="153:34">0</literal></expr>;</init> <condition pos:start="153:37" pos:end="153:42"><expr pos:start="153:37" pos:end="153:41"><name pos:start="153:37" pos:end="153:37">j</name> <operator pos:start="153:39" pos:end="153:39">&lt;</operator> <literal type="number" pos:start="153:41" pos:end="153:41">8</literal></expr>;</condition> <incr pos:start="153:44" pos:end="153:46"><expr pos:start="153:44" pos:end="153:46"><name pos:start="153:44" pos:end="153:44">j</name><operator pos:start="153:45" pos:end="153:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:29" pos:end="155:61"><block_content pos:start="155:29" pos:end="155:61">

                            <expr_stmt pos:start="155:29" pos:end="155:61"><expr pos:start="155:29" pos:end="155:60"><name pos:start="155:29" pos:end="155:37"><name pos:start="155:29" pos:end="155:34">tmp_cb</name><index pos:start="155:35" pos:end="155:37">[<expr pos:start="155:36" pos:end="155:36"><name pos:start="155:36" pos:end="155:36">j</name></expr>]</index></name> <operator pos:start="155:39" pos:end="155:39">=</operator> <literal type="number" pos:start="155:41" pos:end="155:41">1</literal> <operator pos:start="155:43" pos:end="155:44">&lt;&lt;</operator> <operator pos:start="155:46" pos:end="155:46">(</operator><name pos:start="155:47" pos:end="155:55">bit_depth</name> <operator pos:start="155:57" pos:end="155:57">-</operator> <literal type="number" pos:start="155:59" pos:end="155:59">1</literal><operator pos:start="155:60" pos:end="155:60">)</operator></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                    <for pos:start="159:21" pos:end="167:21">for <control pos:start="159:25" pos:end="159:49">(<init pos:start="159:26" pos:end="159:31"><expr pos:start="159:26" pos:end="159:30"><name pos:start="159:26" pos:end="159:26">i</name> <operator pos:start="159:28" pos:end="159:28">=</operator> <literal type="number" pos:start="159:30" pos:end="159:30">0</literal></expr>;</init> <condition pos:start="159:33" pos:end="159:44"><expr pos:start="159:33" pos:end="159:43"><name pos:start="159:33" pos:end="159:33">i</name> <operator pos:start="159:35" pos:end="159:35">&lt;</operator> <name pos:start="159:37" pos:end="159:43">block_h</name></expr>;</condition> <incr pos:start="159:46" pos:end="159:48"><expr pos:start="159:46" pos:end="159:48"><name pos:start="159:46" pos:end="159:46">i</name><operator pos:start="159:47" pos:end="159:48">++</operator></expr></incr>)</control> <block pos:start="159:51" pos:end="167:21">{<block_content pos:start="161:25" pos:end="165:61">

                        <decl_stmt pos:start="161:25" pos:end="161:82"><decl pos:start="161:25" pos:end="161:81"><type pos:start="161:25" pos:end="161:34"><name pos:start="161:25" pos:end="161:32">uint16_t</name> <modifier pos:start="161:34" pos:end="161:34">*</modifier></type><name pos:start="161:35" pos:end="161:40">tmp_cr</name> <init pos:start="161:42" pos:end="161:81">= <expr pos:start="161:44" pos:end="161:81"><operator pos:start="161:44" pos:end="161:44">(</operator><name pos:start="161:45" pos:end="161:52">uint16_t</name> <operator pos:start="161:54" pos:end="161:54">*</operator><operator pos:start="161:55" pos:end="161:55">)</operator><operator pos:start="161:56" pos:end="161:56">(</operator><name pos:start="161:57" pos:end="161:63">dest_cr</name> <operator pos:start="161:65" pos:end="161:65">+</operator> <name pos:start="161:67" pos:end="161:67">i</name> <operator pos:start="161:69" pos:end="161:69">*</operator> <name pos:start="161:71" pos:end="161:80">uvlinesize</name><operator pos:start="161:81" pos:end="161:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="163:25" pos:end="165:61">for <control pos:start="163:29" pos:end="163:47">(<init pos:start="163:30" pos:end="163:35"><expr pos:start="163:30" pos:end="163:34"><name pos:start="163:30" pos:end="163:30">j</name> <operator pos:start="163:32" pos:end="163:32">=</operator> <literal type="number" pos:start="163:34" pos:end="163:34">0</literal></expr>;</init> <condition pos:start="163:37" pos:end="163:42"><expr pos:start="163:37" pos:end="163:41"><name pos:start="163:37" pos:end="163:37">j</name> <operator pos:start="163:39" pos:end="163:39">&lt;</operator> <literal type="number" pos:start="163:41" pos:end="163:41">8</literal></expr>;</condition> <incr pos:start="163:44" pos:end="163:46"><expr pos:start="163:44" pos:end="163:46"><name pos:start="163:44" pos:end="163:44">j</name><operator pos:start="163:45" pos:end="163:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="165:29" pos:end="165:61"><block_content pos:start="165:29" pos:end="165:61">

                            <expr_stmt pos:start="165:29" pos:end="165:61"><expr pos:start="165:29" pos:end="165:60"><name pos:start="165:29" pos:end="165:37"><name pos:start="165:29" pos:end="165:34">tmp_cr</name><index pos:start="165:35" pos:end="165:37">[<expr pos:start="165:36" pos:end="165:36"><name pos:start="165:36" pos:end="165:36">j</name></expr>]</index></name> <operator pos:start="165:39" pos:end="165:39">=</operator> <literal type="number" pos:start="165:41" pos:end="165:41">1</literal> <operator pos:start="165:43" pos:end="165:44">&lt;&lt;</operator> <operator pos:start="165:46" pos:end="165:46">(</operator><name pos:start="165:47" pos:end="165:55">bit_depth</name> <operator pos:start="165:57" pos:end="165:57">-</operator> <literal type="number" pos:start="165:59" pos:end="165:59">1</literal><operator pos:start="165:60" pos:end="165:60">)</operator></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="169:19" pos:end="191:17">else <block pos:start="169:24" pos:end="191:17">{<block_content pos:start="171:21" pos:end="189:21">

                    <for pos:start="171:21" pos:end="179:21">for <control pos:start="171:25" pos:end="171:49">(<init pos:start="171:26" pos:end="171:31"><expr pos:start="171:26" pos:end="171:30"><name pos:start="171:26" pos:end="171:26">i</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>;</init> <condition pos:start="171:33" pos:end="171:44"><expr pos:start="171:33" pos:end="171:43"><name pos:start="171:33" pos:end="171:33">i</name> <operator pos:start="171:35" pos:end="171:35">&lt;</operator> <name pos:start="171:37" pos:end="171:43">block_h</name></expr>;</condition> <incr pos:start="171:46" pos:end="171:48"><expr pos:start="171:46" pos:end="171:48"><name pos:start="171:46" pos:end="171:46">i</name><operator pos:start="171:47" pos:end="171:48">++</operator></expr></incr>)</control> <block pos:start="171:51" pos:end="179:21">{<block_content pos:start="173:25" pos:end="177:65">

                        <decl_stmt pos:start="173:25" pos:end="173:82"><decl pos:start="173:25" pos:end="173:81"><type pos:start="173:25" pos:end="173:34"><name pos:start="173:25" pos:end="173:32">uint16_t</name> <modifier pos:start="173:34" pos:end="173:34">*</modifier></type><name pos:start="173:35" pos:end="173:40">tmp_cb</name> <init pos:start="173:42" pos:end="173:81">= <expr pos:start="173:44" pos:end="173:81"><operator pos:start="173:44" pos:end="173:44">(</operator><name pos:start="173:45" pos:end="173:52">uint16_t</name> <operator pos:start="173:54" pos:end="173:54">*</operator><operator pos:start="173:55" pos:end="173:55">)</operator><operator pos:start="173:56" pos:end="173:56">(</operator><name pos:start="173:57" pos:end="173:63">dest_cb</name> <operator pos:start="173:65" pos:end="173:65">+</operator> <name pos:start="173:67" pos:end="173:67">i</name> <operator pos:start="173:69" pos:end="173:69">*</operator> <name pos:start="173:71" pos:end="173:80">uvlinesize</name><operator pos:start="173:81" pos:end="173:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="175:25" pos:end="177:65">for <control pos:start="175:29" pos:end="175:47">(<init pos:start="175:30" pos:end="175:35"><expr pos:start="175:30" pos:end="175:34"><name pos:start="175:30" pos:end="175:30">j</name> <operator pos:start="175:32" pos:end="175:32">=</operator> <literal type="number" pos:start="175:34" pos:end="175:34">0</literal></expr>;</init> <condition pos:start="175:37" pos:end="175:42"><expr pos:start="175:37" pos:end="175:41"><name pos:start="175:37" pos:end="175:37">j</name> <operator pos:start="175:39" pos:end="175:39">&lt;</operator> <literal type="number" pos:start="175:41" pos:end="175:41">8</literal></expr>;</condition> <incr pos:start="175:44" pos:end="175:46"><expr pos:start="175:44" pos:end="175:46"><name pos:start="175:44" pos:end="175:44">j</name><operator pos:start="175:45" pos:end="175:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:29" pos:end="177:65"><block_content pos:start="177:29" pos:end="177:65">

                            <expr_stmt pos:start="177:29" pos:end="177:65"><expr pos:start="177:29" pos:end="177:64"><name pos:start="177:29" pos:end="177:37"><name pos:start="177:29" pos:end="177:34">tmp_cb</name><index pos:start="177:35" pos:end="177:37">[<expr pos:start="177:36" pos:end="177:36"><name pos:start="177:36" pos:end="177:36">j</name></expr>]</index></name> <operator pos:start="177:39" pos:end="177:39">=</operator> <call pos:start="177:41" pos:end="177:64"><name pos:start="177:41" pos:end="177:48">get_bits</name><argument_list pos:start="177:49" pos:end="177:64">(<argument pos:start="177:50" pos:end="177:52"><expr pos:start="177:50" pos:end="177:52"><operator pos:start="177:50" pos:end="177:50">&amp;</operator><name pos:start="177:51" pos:end="177:52">gb</name></expr></argument>, <argument pos:start="177:55" pos:end="177:63"><expr pos:start="177:55" pos:end="177:63"><name pos:start="177:55" pos:end="177:63">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                    <for pos:start="181:21" pos:end="189:21">for <control pos:start="181:25" pos:end="181:49">(<init pos:start="181:26" pos:end="181:31"><expr pos:start="181:26" pos:end="181:30"><name pos:start="181:26" pos:end="181:26">i</name> <operator pos:start="181:28" pos:end="181:28">=</operator> <literal type="number" pos:start="181:30" pos:end="181:30">0</literal></expr>;</init> <condition pos:start="181:33" pos:end="181:44"><expr pos:start="181:33" pos:end="181:43"><name pos:start="181:33" pos:end="181:33">i</name> <operator pos:start="181:35" pos:end="181:35">&lt;</operator> <name pos:start="181:37" pos:end="181:43">block_h</name></expr>;</condition> <incr pos:start="181:46" pos:end="181:48"><expr pos:start="181:46" pos:end="181:48"><name pos:start="181:46" pos:end="181:46">i</name><operator pos:start="181:47" pos:end="181:48">++</operator></expr></incr>)</control> <block pos:start="181:51" pos:end="189:21">{<block_content pos:start="183:25" pos:end="187:65">

                        <decl_stmt pos:start="183:25" pos:end="183:82"><decl pos:start="183:25" pos:end="183:81"><type pos:start="183:25" pos:end="183:34"><name pos:start="183:25" pos:end="183:32">uint16_t</name> <modifier pos:start="183:34" pos:end="183:34">*</modifier></type><name pos:start="183:35" pos:end="183:40">tmp_cr</name> <init pos:start="183:42" pos:end="183:81">= <expr pos:start="183:44" pos:end="183:81"><operator pos:start="183:44" pos:end="183:44">(</operator><name pos:start="183:45" pos:end="183:52">uint16_t</name> <operator pos:start="183:54" pos:end="183:54">*</operator><operator pos:start="183:55" pos:end="183:55">)</operator><operator pos:start="183:56" pos:end="183:56">(</operator><name pos:start="183:57" pos:end="183:63">dest_cr</name> <operator pos:start="183:65" pos:end="183:65">+</operator> <name pos:start="183:67" pos:end="183:67">i</name> <operator pos:start="183:69" pos:end="183:69">*</operator> <name pos:start="183:71" pos:end="183:80">uvlinesize</name><operator pos:start="183:81" pos:end="183:81">)</operator></expr></init></decl>;</decl_stmt>

                        <for pos:start="185:25" pos:end="187:65">for <control pos:start="185:29" pos:end="185:47">(<init pos:start="185:30" pos:end="185:35"><expr pos:start="185:30" pos:end="185:34"><name pos:start="185:30" pos:end="185:30">j</name> <operator pos:start="185:32" pos:end="185:32">=</operator> <literal type="number" pos:start="185:34" pos:end="185:34">0</literal></expr>;</init> <condition pos:start="185:37" pos:end="185:42"><expr pos:start="185:37" pos:end="185:41"><name pos:start="185:37" pos:end="185:37">j</name> <operator pos:start="185:39" pos:end="185:39">&lt;</operator> <literal type="number" pos:start="185:41" pos:end="185:41">8</literal></expr>;</condition> <incr pos:start="185:44" pos:end="185:46"><expr pos:start="185:44" pos:end="185:46"><name pos:start="185:44" pos:end="185:44">j</name><operator pos:start="185:45" pos:end="185:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:29" pos:end="187:65"><block_content pos:start="187:29" pos:end="187:65">

                            <expr_stmt pos:start="187:29" pos:end="187:65"><expr pos:start="187:29" pos:end="187:64"><name pos:start="187:29" pos:end="187:37"><name pos:start="187:29" pos:end="187:34">tmp_cr</name><index pos:start="187:35" pos:end="187:37">[<expr pos:start="187:36" pos:end="187:36"><name pos:start="187:36" pos:end="187:36">j</name></expr>]</index></name> <operator pos:start="187:39" pos:end="187:39">=</operator> <call pos:start="187:41" pos:end="187:64"><name pos:start="187:41" pos:end="187:48">get_bits</name><argument_list pos:start="187:49" pos:end="187:64">(<argument pos:start="187:50" pos:end="187:52"><expr pos:start="187:50" pos:end="187:52"><operator pos:start="187:50" pos:end="187:50">&amp;</operator><name pos:start="187:51" pos:end="187:52">gb</name></expr></argument>, <argument pos:start="187:55" pos:end="187:63"><expr pos:start="187:55" pos:end="187:63"><name pos:start="187:55" pos:end="187:63">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="195:11" pos:end="231:9">else <block pos:start="195:16" pos:end="231:9">{<block_content pos:start="197:13" pos:end="229:13">

            <for pos:start="197:13" pos:end="199:78">for <control pos:start="197:17" pos:end="197:36">(<init pos:start="197:18" pos:end="197:23"><expr pos:start="197:18" pos:end="197:22"><name pos:start="197:18" pos:end="197:18">i</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>;</init> <condition pos:start="197:25" pos:end="197:31"><expr pos:start="197:25" pos:end="197:30"><name pos:start="197:25" pos:end="197:25">i</name> <operator pos:start="197:27" pos:end="197:27">&lt;</operator> <literal type="number" pos:start="197:29" pos:end="197:30">16</literal></expr>;</condition> <incr pos:start="197:33" pos:end="197:35"><expr pos:start="197:33" pos:end="197:35"><name pos:start="197:33" pos:end="197:33">i</name><operator pos:start="197:34" pos:end="197:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:17" pos:end="199:78"><block_content pos:start="199:17" pos:end="199:78">

                <expr_stmt pos:start="199:17" pos:end="199:78"><expr pos:start="199:17" pos:end="199:77"><call pos:start="199:17" pos:end="199:77"><name pos:start="199:17" pos:end="199:22">memcpy</name><argument_list pos:start="199:23" pos:end="199:77">(<argument pos:start="199:24" pos:end="199:44"><expr pos:start="199:24" pos:end="199:44"><name pos:start="199:24" pos:end="199:29">dest_y</name> <operator pos:start="199:31" pos:end="199:31">+</operator> <name pos:start="199:33" pos:end="199:33">i</name> <operator pos:start="199:35" pos:end="199:35">*</operator> <name pos:start="199:37" pos:end="199:44">linesize</name></expr></argument>, <argument pos:start="199:47" pos:end="199:72"><expr pos:start="199:47" pos:end="199:72"><name pos:start="199:47" pos:end="199:63"><name pos:start="199:47" pos:end="199:48">sl</name><operator pos:start="199:49" pos:end="199:50">-&gt;</operator><name pos:start="199:51" pos:end="199:63">intra_pcm_ptr</name></name> <operator pos:start="199:65" pos:end="199:65">+</operator> <name pos:start="199:67" pos:end="199:67">i</name> <operator pos:start="199:69" pos:end="199:69">*</operator> <literal type="number" pos:start="199:71" pos:end="199:72">16</literal></expr></argument>, <argument pos:start="199:75" pos:end="199:76"><expr pos:start="199:75" pos:end="199:76"><literal type="number" pos:start="199:75" pos:end="199:76">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="201:13" pos:end="229:13"><if pos:start="201:13" pos:end="229:13">if <condition pos:start="201:16" pos:end="201:72">(<expr pos:start="201:17" pos:end="201:71"><name pos:start="201:17" pos:end="201:22">SIMPLE</name> <operator pos:start="201:24" pos:end="201:25">||</operator> <operator pos:start="201:27" pos:end="201:27">!</operator><name pos:start="201:28" pos:end="201:38">CONFIG_GRAY</name> <operator pos:start="201:40" pos:end="201:41">||</operator> <operator pos:start="201:43" pos:end="201:43">!</operator><operator pos:start="201:44" pos:end="201:44">(</operator><name pos:start="201:45" pos:end="201:52"><name pos:start="201:45" pos:end="201:45">h</name><operator pos:start="201:46" pos:end="201:47">-&gt;</operator><name pos:start="201:48" pos:end="201:52">flags</name></name> <operator pos:start="201:54" pos:end="201:54">&amp;</operator> <name pos:start="201:56" pos:end="201:70">CODEC_FLAG_GRAY</name><operator pos:start="201:71" pos:end="201:71">)</operator></expr>)</condition> <block pos:start="201:74" pos:end="229:13">{<block_content pos:start="203:17" pos:end="227:17">

                <if_stmt pos:start="203:17" pos:end="227:17"><if pos:start="203:17" pos:end="213:17">if <condition pos:start="203:20" pos:end="203:46">(<expr pos:start="203:21" pos:end="203:45"><operator pos:start="203:21" pos:end="203:21">!</operator><name pos:start="203:22" pos:end="203:45"><name pos:start="203:22" pos:end="203:22">h</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:27">sps</name><operator pos:start="203:28" pos:end="203:28">.</operator><name pos:start="203:29" pos:end="203:45">chroma_format_idc</name></name></expr>)</condition> <block pos:start="203:48" pos:end="213:17">{<block_content pos:start="205:21" pos:end="211:21">

                    <for pos:start="205:21" pos:end="211:21">for <control pos:start="205:25" pos:end="205:49">(<init pos:start="205:26" pos:end="205:31"><expr pos:start="205:26" pos:end="205:30"><name pos:start="205:26" pos:end="205:26">i</name> <operator pos:start="205:28" pos:end="205:28">=</operator> <literal type="number" pos:start="205:30" pos:end="205:30">0</literal></expr>;</init> <condition pos:start="205:33" pos:end="205:44"><expr pos:start="205:33" pos:end="205:43"><name pos:start="205:33" pos:end="205:33">i</name> <operator pos:start="205:35" pos:end="205:35">&lt;</operator> <name pos:start="205:37" pos:end="205:43">block_h</name></expr>;</condition> <incr pos:start="205:46" pos:end="205:48"><expr pos:start="205:46" pos:end="205:48"><name pos:start="205:46" pos:end="205:46">i</name><operator pos:start="205:47" pos:end="205:48">++</operator></expr></incr>)</control> <block pos:start="205:51" pos:end="211:21">{<block_content pos:start="207:25" pos:end="209:65">

                        <expr_stmt pos:start="207:25" pos:end="207:65"><expr pos:start="207:25" pos:end="207:64"><call pos:start="207:25" pos:end="207:64"><name pos:start="207:25" pos:end="207:30">memset</name><argument_list pos:start="207:31" pos:end="207:64">(<argument pos:start="207:32" pos:end="207:55"><expr pos:start="207:32" pos:end="207:55"><name pos:start="207:32" pos:end="207:38">dest_cb</name> <operator pos:start="207:40" pos:end="207:40">+</operator> <name pos:start="207:42" pos:end="207:42">i</name> <operator pos:start="207:44" pos:end="207:44">*</operator> <name pos:start="207:46" pos:end="207:55">uvlinesize</name></expr></argument>, <argument pos:start="207:58" pos:end="207:60"><expr pos:start="207:58" pos:end="207:60"><literal type="number" pos:start="207:58" pos:end="207:60">128</literal></expr></argument>, <argument pos:start="207:63" pos:end="207:63"><expr pos:start="207:63" pos:end="207:63"><literal type="number" pos:start="207:63" pos:end="207:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:65"><expr pos:start="209:25" pos:end="209:64"><call pos:start="209:25" pos:end="209:64"><name pos:start="209:25" pos:end="209:30">memset</name><argument_list pos:start="209:31" pos:end="209:64">(<argument pos:start="209:32" pos:end="209:55"><expr pos:start="209:32" pos:end="209:55"><name pos:start="209:32" pos:end="209:38">dest_cr</name> <operator pos:start="209:40" pos:end="209:40">+</operator> <name pos:start="209:42" pos:end="209:42">i</name> <operator pos:start="209:44" pos:end="209:44">*</operator> <name pos:start="209:46" pos:end="209:55">uvlinesize</name></expr></argument>, <argument pos:start="209:58" pos:end="209:60"><expr pos:start="209:58" pos:end="209:60"><literal type="number" pos:start="209:58" pos:end="209:60">128</literal></expr></argument>, <argument pos:start="209:63" pos:end="209:63"><expr pos:start="209:63" pos:end="209:63"><literal type="number" pos:start="209:63" pos:end="209:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="213:19" pos:end="227:17">else <block pos:start="213:24" pos:end="227:17">{<block_content pos:start="215:21" pos:end="225:21">

                    <decl_stmt pos:start="215:21" pos:end="215:68"><decl pos:start="215:21" pos:end="215:67"><type pos:start="215:21" pos:end="215:35"><specifier pos:start="215:21" pos:end="215:25">const</specifier> <name pos:start="215:27" pos:end="215:33">uint8_t</name> <modifier pos:start="215:35" pos:end="215:35">*</modifier></type><name pos:start="215:36" pos:end="215:41">src_cb</name> <init pos:start="215:43" pos:end="215:67">= <expr pos:start="215:45" pos:end="215:67"><name pos:start="215:45" pos:end="215:61"><name pos:start="215:45" pos:end="215:46">sl</name><operator pos:start="215:47" pos:end="215:48">-&gt;</operator><name pos:start="215:49" pos:end="215:61">intra_pcm_ptr</name></name> <operator pos:start="215:63" pos:end="215:63">+</operator> <literal type="number" pos:start="215:65" pos:end="215:67">256</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="217:21" pos:end="217:82"><decl pos:start="217:21" pos:end="217:81"><type pos:start="217:21" pos:end="217:35"><specifier pos:start="217:21" pos:end="217:25">const</specifier> <name pos:start="217:27" pos:end="217:33">uint8_t</name> <modifier pos:start="217:35" pos:end="217:35">*</modifier></type><name pos:start="217:36" pos:end="217:41">src_cr</name> <init pos:start="217:43" pos:end="217:81">= <expr pos:start="217:45" pos:end="217:81"><name pos:start="217:45" pos:end="217:61"><name pos:start="217:45" pos:end="217:46">sl</name><operator pos:start="217:47" pos:end="217:48">-&gt;</operator><name pos:start="217:49" pos:end="217:61">intra_pcm_ptr</name></name> <operator pos:start="217:63" pos:end="217:63">+</operator> <literal type="number" pos:start="217:65" pos:end="217:69">256</literal> <operator pos:start="217:69" pos:end="217:69">+</operator> <name pos:start="217:71" pos:end="217:77">block_h</name> <operator pos:start="217:79" pos:end="217:79">*</operator> <literal type="number" pos:start="217:81" pos:end="217:81">8</literal></expr></init></decl>;</decl_stmt>

                    <for pos:start="219:21" pos:end="225:21">for <control pos:start="219:25" pos:end="219:49">(<init pos:start="219:26" pos:end="219:31"><expr pos:start="219:26" pos:end="219:30"><name pos:start="219:26" pos:end="219:26">i</name> <operator pos:start="219:28" pos:end="219:28">=</operator> <literal type="number" pos:start="219:30" pos:end="219:30">0</literal></expr>;</init> <condition pos:start="219:33" pos:end="219:44"><expr pos:start="219:33" pos:end="219:43"><name pos:start="219:33" pos:end="219:33">i</name> <operator pos:start="219:35" pos:end="219:35">&lt;</operator> <name pos:start="219:37" pos:end="219:43">block_h</name></expr>;</condition> <incr pos:start="219:46" pos:end="219:48"><expr pos:start="219:46" pos:end="219:48"><name pos:start="219:46" pos:end="219:46">i</name><operator pos:start="219:47" pos:end="219:48">++</operator></expr></incr>)</control> <block pos:start="219:51" pos:end="225:21">{<block_content pos:start="221:25" pos:end="223:76">

                        <expr_stmt pos:start="221:25" pos:end="221:76"><expr pos:start="221:25" pos:end="221:75"><call pos:start="221:25" pos:end="221:75"><name pos:start="221:25" pos:end="221:30">memcpy</name><argument_list pos:start="221:31" pos:end="221:75">(<argument pos:start="221:32" pos:end="221:55"><expr pos:start="221:32" pos:end="221:55"><name pos:start="221:32" pos:end="221:38">dest_cb</name> <operator pos:start="221:40" pos:end="221:40">+</operator> <name pos:start="221:42" pos:end="221:42">i</name> <operator pos:start="221:44" pos:end="221:44">*</operator> <name pos:start="221:46" pos:end="221:55">uvlinesize</name></expr></argument>, <argument pos:start="221:58" pos:end="221:71"><expr pos:start="221:58" pos:end="221:71"><name pos:start="221:58" pos:end="221:63">src_cb</name> <operator pos:start="221:65" pos:end="221:65">+</operator> <name pos:start="221:67" pos:end="221:67">i</name> <operator pos:start="221:69" pos:end="221:69">*</operator> <literal type="number" pos:start="221:71" pos:end="221:71">8</literal></expr></argument>, <argument pos:start="221:74" pos:end="221:74"><expr pos:start="221:74" pos:end="221:74"><literal type="number" pos:start="221:74" pos:end="221:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="223:25" pos:end="223:76"><expr pos:start="223:25" pos:end="223:75"><call pos:start="223:25" pos:end="223:75"><name pos:start="223:25" pos:end="223:30">memcpy</name><argument_list pos:start="223:31" pos:end="223:75">(<argument pos:start="223:32" pos:end="223:55"><expr pos:start="223:32" pos:end="223:55"><name pos:start="223:32" pos:end="223:38">dest_cr</name> <operator pos:start="223:40" pos:end="223:40">+</operator> <name pos:start="223:42" pos:end="223:42">i</name> <operator pos:start="223:44" pos:end="223:44">*</operator> <name pos:start="223:46" pos:end="223:55">uvlinesize</name></expr></argument>, <argument pos:start="223:58" pos:end="223:71"><expr pos:start="223:58" pos:end="223:71"><name pos:start="223:58" pos:end="223:63">src_cr</name> <operator pos:start="223:65" pos:end="223:65">+</operator> <name pos:start="223:67" pos:end="223:67">i</name> <operator pos:start="223:69" pos:end="223:69">*</operator> <literal type="number" pos:start="223:71" pos:end="223:71">8</literal></expr></argument>, <argument pos:start="223:74" pos:end="223:74"><expr pos:start="223:74" pos:end="223:74"><literal type="number" pos:start="223:74" pos:end="223:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="233:7" pos:end="447:5">else <block pos:start="233:12" pos:end="447:5">{<block_content pos:start="235:9" pos:end="445:9">

        <if_stmt pos:start="235:9" pos:end="297:9"><if pos:start="235:9" pos:end="269:9">if <condition pos:start="235:12" pos:end="235:30">(<expr pos:start="235:13" pos:end="235:29"><call pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:20">IS_INTRA</name><argument_list pos:start="235:21" pos:end="235:29">(<argument pos:start="235:22" pos:end="235:28"><expr pos:start="235:22" pos:end="235:28"><name pos:start="235:22" pos:end="235:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="235:32" pos:end="269:9">{<block_content pos:start="237:13" pos:end="267:70">

            <if_stmt pos:start="237:13" pos:end="241:70"><if pos:start="237:13" pos:end="241:70">if <condition pos:start="237:16" pos:end="237:37">(<expr pos:start="237:17" pos:end="237:36"><name pos:start="237:17" pos:end="237:36"><name pos:start="237:17" pos:end="237:17">h</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:36">deblocking_filter</name></name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="241:70"><block_content pos:start="239:17" pos:end="241:70">

                <expr_stmt pos:start="239:17" pos:end="241:70"><expr pos:start="239:17" pos:end="241:69"><call pos:start="239:17" pos:end="241:69"><name pos:start="239:17" pos:end="239:30">xchg_mb_border</name><argument_list pos:start="239:31" pos:end="241:69">(<argument pos:start="239:32" pos:end="239:32"><expr pos:start="239:32" pos:end="239:32"><name pos:start="239:32" pos:end="239:32">h</name></expr></argument>, <argument pos:start="239:35" pos:end="239:36"><expr pos:start="239:35" pos:end="239:36"><name pos:start="239:35" pos:end="239:36">sl</name></expr></argument>, <argument pos:start="239:39" pos:end="239:44"><expr pos:start="239:39" pos:end="239:44"><name pos:start="239:39" pos:end="239:44">dest_y</name></expr></argument>, <argument pos:start="239:47" pos:end="239:53"><expr pos:start="239:47" pos:end="239:53"><name pos:start="239:47" pos:end="239:53">dest_cb</name></expr></argument>, <argument pos:start="239:56" pos:end="239:62"><expr pos:start="239:56" pos:end="239:62"><name pos:start="239:56" pos:end="239:62">dest_cr</name></expr></argument>, <argument pos:start="239:65" pos:end="239:72"><expr pos:start="239:65" pos:end="239:72"><name pos:start="239:65" pos:end="239:72">linesize</name></expr></argument>,

                               <argument pos:start="241:32" pos:end="241:41"><expr pos:start="241:32" pos:end="241:41"><name pos:start="241:32" pos:end="241:41">uvlinesize</name></expr></argument>, <argument pos:start="241:44" pos:end="241:44"><expr pos:start="241:44" pos:end="241:44"><literal type="number" pos:start="241:44" pos:end="241:44">1</literal></expr></argument>, <argument pos:start="241:47" pos:end="241:47"><expr pos:start="241:47" pos:end="241:47"><literal type="number" pos:start="241:47" pos:end="241:47">0</literal></expr></argument>, <argument pos:start="241:50" pos:end="241:55"><expr pos:start="241:50" pos:end="241:55"><name pos:start="241:50" pos:end="241:55">SIMPLE</name></expr></argument>, <argument pos:start="241:58" pos:end="241:68"><expr pos:start="241:58" pos:end="241:68"><name pos:start="241:58" pos:end="241:68">PIXEL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="245:13" pos:end="251:13"><if pos:start="245:13" pos:end="251:13">if <condition pos:start="245:16" pos:end="245:72">(<expr pos:start="245:17" pos:end="245:71"><name pos:start="245:17" pos:end="245:22">SIMPLE</name> <operator pos:start="245:24" pos:end="245:25">||</operator> <operator pos:start="245:27" pos:end="245:27">!</operator><name pos:start="245:28" pos:end="245:38">CONFIG_GRAY</name> <operator pos:start="245:40" pos:end="245:41">||</operator> <operator pos:start="245:43" pos:end="245:43">!</operator><operator pos:start="245:44" pos:end="245:44">(</operator><name pos:start="245:45" pos:end="245:52"><name pos:start="245:45" pos:end="245:45">h</name><operator pos:start="245:46" pos:end="245:47">-&gt;</operator><name pos:start="245:48" pos:end="245:52">flags</name></name> <operator pos:start="245:54" pos:end="245:54">&amp;</operator> <name pos:start="245:56" pos:end="245:70">CODEC_FLAG_GRAY</name><operator pos:start="245:71" pos:end="245:71">)</operator></expr>)</condition> <block pos:start="245:74" pos:end="251:13">{<block_content pos:start="247:17" pos:end="249:74">

                <expr_stmt pos:start="247:17" pos:end="247:74"><expr pos:start="247:17" pos:end="247:73"><name pos:start="247:17" pos:end="247:52"><name pos:start="247:17" pos:end="247:17">h</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:22">hpc</name><operator pos:start="247:23" pos:end="247:23">.</operator><name pos:start="247:24" pos:end="247:30">pred8x8</name><index pos:start="247:31" pos:end="247:52">[<expr pos:start="247:32" pos:end="247:51"><name pos:start="247:32" pos:end="247:51"><name pos:start="247:32" pos:end="247:33">sl</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:51">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="247:53" pos:end="247:53">(</operator><name pos:start="247:54" pos:end="247:60">dest_cb</name><operator pos:start="247:61" pos:end="247:61">,</operator> <name pos:start="247:63" pos:end="247:72">uvlinesize</name><operator pos:start="247:73" pos:end="247:73">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:74"><expr pos:start="249:17" pos:end="249:73"><name pos:start="249:17" pos:end="249:52"><name pos:start="249:17" pos:end="249:17">h</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:22">hpc</name><operator pos:start="249:23" pos:end="249:23">.</operator><name pos:start="249:24" pos:end="249:30">pred8x8</name><index pos:start="249:31" pos:end="249:52">[<expr pos:start="249:32" pos:end="249:51"><name pos:start="249:32" pos:end="249:51"><name pos:start="249:32" pos:end="249:33">sl</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:51">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="249:53" pos:end="249:53">(</operator><name pos:start="249:54" pos:end="249:60">dest_cr</name><operator pos:start="249:61" pos:end="249:61">,</operator> <name pos:start="249:63" pos:end="249:72">uvlinesize</name><operator pos:start="249:73" pos:end="249:73">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="255:13" pos:end="259:73"><expr pos:start="255:13" pos:end="259:72"><call pos:start="255:13" pos:end="259:72"><name pos:start="255:13" pos:end="255:37">hl_decode_mb_predict_luma</name><argument_list pos:start="255:38" pos:end="259:72">(<argument pos:start="255:39" pos:end="255:39"><expr pos:start="255:39" pos:end="255:39"><name pos:start="255:39" pos:end="255:39">h</name></expr></argument>, <argument pos:start="255:42" pos:end="255:43"><expr pos:start="255:42" pos:end="255:43"><name pos:start="255:42" pos:end="255:43">sl</name></expr></argument>, <argument pos:start="255:46" pos:end="255:52"><expr pos:start="255:46" pos:end="255:52"><name pos:start="255:46" pos:end="255:52">mb_type</name></expr></argument>, <argument pos:start="255:55" pos:end="255:61"><expr pos:start="255:55" pos:end="255:61"><name pos:start="255:55" pos:end="255:61">is_h264</name></expr></argument>, <argument pos:start="255:64" pos:end="255:69"><expr pos:start="255:64" pos:end="255:69"><name pos:start="255:64" pos:end="255:69">SIMPLE</name></expr></argument>,

                                      <argument pos:start="257:39" pos:end="257:54"><expr pos:start="257:39" pos:end="257:54"><name pos:start="257:39" pos:end="257:54">transform_bypass</name></expr></argument>, <argument pos:start="257:57" pos:end="257:67"><expr pos:start="257:57" pos:end="257:67"><name pos:start="257:57" pos:end="257:67">PIXEL_SHIFT</name></expr></argument>,

                                      <argument pos:start="259:39" pos:end="259:50"><expr pos:start="259:39" pos:end="259:50"><name pos:start="259:39" pos:end="259:50">block_offset</name></expr></argument>, <argument pos:start="259:53" pos:end="259:60"><expr pos:start="259:53" pos:end="259:60"><name pos:start="259:53" pos:end="259:60">linesize</name></expr></argument>, <argument pos:start="259:63" pos:end="259:68"><expr pos:start="259:63" pos:end="259:68"><name pos:start="259:63" pos:end="259:68">dest_y</name></expr></argument>, <argument pos:start="259:71" pos:end="259:71"><expr pos:start="259:71" pos:end="259:71"><literal type="number" pos:start="259:71" pos:end="259:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="263:13" pos:end="267:70"><if pos:start="263:13" pos:end="267:70">if <condition pos:start="263:16" pos:end="263:37">(<expr pos:start="263:17" pos:end="263:36"><name pos:start="263:17" pos:end="263:36"><name pos:start="263:17" pos:end="263:17">h</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:36">deblocking_filter</name></name></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="267:70"><block_content pos:start="265:17" pos:end="267:70">

                <expr_stmt pos:start="265:17" pos:end="267:70"><expr pos:start="265:17" pos:end="267:69"><call pos:start="265:17" pos:end="267:69"><name pos:start="265:17" pos:end="265:30">xchg_mb_border</name><argument_list pos:start="265:31" pos:end="267:69">(<argument pos:start="265:32" pos:end="265:32"><expr pos:start="265:32" pos:end="265:32"><name pos:start="265:32" pos:end="265:32">h</name></expr></argument>, <argument pos:start="265:35" pos:end="265:36"><expr pos:start="265:35" pos:end="265:36"><name pos:start="265:35" pos:end="265:36">sl</name></expr></argument>, <argument pos:start="265:39" pos:end="265:44"><expr pos:start="265:39" pos:end="265:44"><name pos:start="265:39" pos:end="265:44">dest_y</name></expr></argument>, <argument pos:start="265:47" pos:end="265:53"><expr pos:start="265:47" pos:end="265:53"><name pos:start="265:47" pos:end="265:53">dest_cb</name></expr></argument>, <argument pos:start="265:56" pos:end="265:62"><expr pos:start="265:56" pos:end="265:62"><name pos:start="265:56" pos:end="265:62">dest_cr</name></expr></argument>, <argument pos:start="265:65" pos:end="265:72"><expr pos:start="265:65" pos:end="265:72"><name pos:start="265:65" pos:end="265:72">linesize</name></expr></argument>,

                               <argument pos:start="267:32" pos:end="267:41"><expr pos:start="267:32" pos:end="267:41"><name pos:start="267:32" pos:end="267:41">uvlinesize</name></expr></argument>, <argument pos:start="267:44" pos:end="267:44"><expr pos:start="267:44" pos:end="267:44"><literal type="number" pos:start="267:44" pos:end="267:44">0</literal></expr></argument>, <argument pos:start="267:47" pos:end="267:47"><expr pos:start="267:47" pos:end="267:47"><literal type="number" pos:start="267:47" pos:end="267:47">0</literal></expr></argument>, <argument pos:start="267:50" pos:end="267:55"><expr pos:start="267:50" pos:end="267:55"><name pos:start="267:50" pos:end="267:55">SIMPLE</name></expr></argument>, <argument pos:start="267:58" pos:end="267:68"><expr pos:start="267:58" pos:end="267:68"><name pos:start="267:58" pos:end="267:68">PIXEL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="269:11" pos:end="297:9">else if <condition pos:start="269:19" pos:end="269:27">(<expr pos:start="269:20" pos:end="269:26"><name pos:start="269:20" pos:end="269:26">is_h264</name></expr>)</condition> <block pos:start="269:29" pos:end="297:9">{<block_content pos:start="271:13" pos:end="295:13">

            <if_stmt pos:start="271:13" pos:end="295:13"><if pos:start="271:13" pos:end="283:13">if <condition pos:start="271:16" pos:end="271:26">(<expr pos:start="271:17" pos:end="271:25"><name pos:start="271:17" pos:end="271:25">chroma422</name></expr>)</condition> <block pos:start="271:28" pos:end="283:13">{<block_content pos:start="273:17" pos:end="281:67">

                <function_decl pos:start="273:17" pos:end="281:67"><type pos:start="273:17" pos:end="273:20"><name pos:start="273:17" pos:end="273:20">FUNC</name></type>(<name pos:start="273:22" pos:end="273:34">hl_motion_422</name>)<parameter_list pos:start="273:36" pos:end="281:66">(<parameter pos:start="273:37" pos:end="273:37"><decl pos:start="273:37" pos:end="273:37"><type pos:start="273:37" pos:end="273:37"><name pos:start="273:37" pos:end="273:37">h</name></type></decl></parameter>, <parameter pos:start="273:40" pos:end="273:41"><decl pos:start="273:40" pos:end="273:41"><type pos:start="273:40" pos:end="273:41"><name pos:start="273:40" pos:end="273:41">sl</name></type></decl></parameter>, <parameter pos:start="273:44" pos:end="273:49"><decl pos:start="273:44" pos:end="273:49"><type pos:start="273:44" pos:end="273:49"><name pos:start="273:44" pos:end="273:49">dest_y</name></type></decl></parameter>, <parameter pos:start="273:52" pos:end="273:58"><decl pos:start="273:52" pos:end="273:58"><type pos:start="273:52" pos:end="273:58"><name pos:start="273:52" pos:end="273:58">dest_cb</name></type></decl></parameter>, <parameter pos:start="273:61" pos:end="273:67"><decl pos:start="273:61" pos:end="273:67"><type pos:start="273:61" pos:end="273:67"><name pos:start="273:61" pos:end="273:67">dest_cr</name></type></decl></parameter>,

                              <parameter pos:start="275:31" pos:end="275:41"><decl pos:start="275:31" pos:end="275:41"><type pos:start="275:31" pos:end="275:41"><name pos:start="275:31" pos:end="275:41"><name pos:start="275:31" pos:end="275:31">h</name><operator pos:start="275:32" pos:end="275:33">-&gt;</operator><name pos:start="275:34" pos:end="275:41">qpel_put</name></name></type></decl></parameter>, <parameter pos:start="275:44" pos:end="275:83"><decl pos:start="275:44" pos:end="275:83"><type pos:start="275:44" pos:end="275:83"><name pos:start="275:44" pos:end="275:83"><name pos:start="275:44" pos:end="275:44">h</name><operator pos:start="275:45" pos:end="275:46">-&gt;</operator><name pos:start="275:47" pos:end="275:56">h264chroma</name><operator pos:start="275:57" pos:end="275:57">.</operator><name pos:start="275:58" pos:end="275:83">put_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="277:31" pos:end="277:41"><decl pos:start="277:31" pos:end="277:41"><type pos:start="277:31" pos:end="277:41"><name pos:start="277:31" pos:end="277:41"><name pos:start="277:31" pos:end="277:31">h</name><operator pos:start="277:32" pos:end="277:33">-&gt;</operator><name pos:start="277:34" pos:end="277:41">qpel_avg</name></name></type></decl></parameter>, <parameter pos:start="277:44" pos:end="277:83"><decl pos:start="277:44" pos:end="277:83"><type pos:start="277:44" pos:end="277:83"><name pos:start="277:44" pos:end="277:83"><name pos:start="277:44" pos:end="277:44">h</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:56">h264chroma</name><operator pos:start="277:57" pos:end="277:57">.</operator><name pos:start="277:58" pos:end="277:83">avg_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="279:31" pos:end="279:63"><decl pos:start="279:31" pos:end="279:63"><type pos:start="279:31" pos:end="279:63"><name pos:start="279:31" pos:end="279:63"><name pos:start="279:31" pos:end="279:31">h</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:40">h264dsp</name><operator pos:start="279:41" pos:end="279:41">.</operator><name pos:start="279:42" pos:end="279:63">weight_h264_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="281:31" pos:end="281:65"><decl pos:start="281:31" pos:end="281:65"><type pos:start="281:31" pos:end="281:65"><name pos:start="281:31" pos:end="281:65"><name pos:start="281:31" pos:end="281:31">h</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:40">h264dsp</name><operator pos:start="281:41" pos:end="281:41">.</operator><name pos:start="281:42" pos:end="281:65">biweight_h264_pixels_tab</name></name></type></decl></parameter>)</parameter_list>;</function_decl>

            </block_content>}</block></if> <else pos:start="283:15" pos:end="295:13">else <block pos:start="283:20" pos:end="295:13">{<block_content pos:start="285:17" pos:end="293:67">

                <function_decl pos:start="285:17" pos:end="293:67"><type pos:start="285:17" pos:end="285:20"><name pos:start="285:17" pos:end="285:20">FUNC</name></type>(<name pos:start="285:22" pos:end="285:34">hl_motion_420</name>)<parameter_list pos:start="285:36" pos:end="293:66">(<parameter pos:start="285:37" pos:end="285:37"><decl pos:start="285:37" pos:end="285:37"><type pos:start="285:37" pos:end="285:37"><name pos:start="285:37" pos:end="285:37">h</name></type></decl></parameter>, <parameter pos:start="285:40" pos:end="285:41"><decl pos:start="285:40" pos:end="285:41"><type pos:start="285:40" pos:end="285:41"><name pos:start="285:40" pos:end="285:41">sl</name></type></decl></parameter>, <parameter pos:start="285:44" pos:end="285:49"><decl pos:start="285:44" pos:end="285:49"><type pos:start="285:44" pos:end="285:49"><name pos:start="285:44" pos:end="285:49">dest_y</name></type></decl></parameter>, <parameter pos:start="285:52" pos:end="285:58"><decl pos:start="285:52" pos:end="285:58"><type pos:start="285:52" pos:end="285:58"><name pos:start="285:52" pos:end="285:58">dest_cb</name></type></decl></parameter>, <parameter pos:start="285:61" pos:end="285:67"><decl pos:start="285:61" pos:end="285:67"><type pos:start="285:61" pos:end="285:67"><name pos:start="285:61" pos:end="285:67">dest_cr</name></type></decl></parameter>,

                              <parameter pos:start="287:31" pos:end="287:41"><decl pos:start="287:31" pos:end="287:41"><type pos:start="287:31" pos:end="287:41"><name pos:start="287:31" pos:end="287:41"><name pos:start="287:31" pos:end="287:31">h</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:41">qpel_put</name></name></type></decl></parameter>, <parameter pos:start="287:44" pos:end="287:83"><decl pos:start="287:44" pos:end="287:83"><type pos:start="287:44" pos:end="287:83"><name pos:start="287:44" pos:end="287:83"><name pos:start="287:44" pos:end="287:44">h</name><operator pos:start="287:45" pos:end="287:46">-&gt;</operator><name pos:start="287:47" pos:end="287:56">h264chroma</name><operator pos:start="287:57" pos:end="287:57">.</operator><name pos:start="287:58" pos:end="287:83">put_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="289:31" pos:end="289:41"><decl pos:start="289:31" pos:end="289:41"><type pos:start="289:31" pos:end="289:41"><name pos:start="289:31" pos:end="289:41"><name pos:start="289:31" pos:end="289:31">h</name><operator pos:start="289:32" pos:end="289:33">-&gt;</operator><name pos:start="289:34" pos:end="289:41">qpel_avg</name></name></type></decl></parameter>, <parameter pos:start="289:44" pos:end="289:83"><decl pos:start="289:44" pos:end="289:83"><type pos:start="289:44" pos:end="289:83"><name pos:start="289:44" pos:end="289:83"><name pos:start="289:44" pos:end="289:44">h</name><operator pos:start="289:45" pos:end="289:46">-&gt;</operator><name pos:start="289:47" pos:end="289:56">h264chroma</name><operator pos:start="289:57" pos:end="289:57">.</operator><name pos:start="289:58" pos:end="289:83">avg_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="291:31" pos:end="291:63"><decl pos:start="291:31" pos:end="291:63"><type pos:start="291:31" pos:end="291:63"><name pos:start="291:31" pos:end="291:63"><name pos:start="291:31" pos:end="291:31">h</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:40">h264dsp</name><operator pos:start="291:41" pos:end="291:41">.</operator><name pos:start="291:42" pos:end="291:63">weight_h264_pixels_tab</name></name></type></decl></parameter>,

                              <parameter pos:start="293:31" pos:end="293:65"><decl pos:start="293:31" pos:end="293:65"><type pos:start="293:31" pos:end="293:65"><name pos:start="293:31" pos:end="293:65"><name pos:start="293:31" pos:end="293:31">h</name><operator pos:start="293:32" pos:end="293:33">-&gt;</operator><name pos:start="293:34" pos:end="293:40">h264dsp</name><operator pos:start="293:41" pos:end="293:41">.</operator><name pos:start="293:42" pos:end="293:65">biweight_h264_pixels_tab</name></name></type></decl></parameter>)</parameter_list>;</function_decl>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="301:9" pos:end="303:79"><expr pos:start="301:9" pos:end="303:78"><call pos:start="301:9" pos:end="303:78"><name pos:start="301:9" pos:end="301:30">hl_decode_mb_idct_luma</name><argument_list pos:start="301:31" pos:end="303:78">(<argument pos:start="301:32" pos:end="301:32"><expr pos:start="301:32" pos:end="301:32"><name pos:start="301:32" pos:end="301:32">h</name></expr></argument>, <argument pos:start="301:35" pos:end="301:36"><expr pos:start="301:35" pos:end="301:36"><name pos:start="301:35" pos:end="301:36">sl</name></expr></argument>, <argument pos:start="301:39" pos:end="301:45"><expr pos:start="301:39" pos:end="301:45"><name pos:start="301:39" pos:end="301:45">mb_type</name></expr></argument>, <argument pos:start="301:48" pos:end="301:54"><expr pos:start="301:48" pos:end="301:54"><name pos:start="301:48" pos:end="301:54">is_h264</name></expr></argument>, <argument pos:start="301:57" pos:end="301:62"><expr pos:start="301:57" pos:end="301:62"><name pos:start="301:57" pos:end="301:62">SIMPLE</name></expr></argument>, <argument pos:start="301:65" pos:end="301:80"><expr pos:start="301:65" pos:end="301:80"><name pos:start="301:65" pos:end="301:80">transform_bypass</name></expr></argument>,

                               <argument pos:start="303:32" pos:end="303:42"><expr pos:start="303:32" pos:end="303:42"><name pos:start="303:32" pos:end="303:42">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="303:45" pos:end="303:56"><expr pos:start="303:45" pos:end="303:56"><name pos:start="303:45" pos:end="303:56">block_offset</name></expr></argument>, <argument pos:start="303:59" pos:end="303:66"><expr pos:start="303:59" pos:end="303:66"><name pos:start="303:59" pos:end="303:66">linesize</name></expr></argument>, <argument pos:start="303:69" pos:end="303:74"><expr pos:start="303:69" pos:end="303:74"><name pos:start="303:69" pos:end="303:74">dest_y</name></expr></argument>, <argument pos:start="303:77" pos:end="303:77"><expr pos:start="303:77" pos:end="303:77"><literal type="number" pos:start="303:77" pos:end="303:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="307:9" pos:end="445:9"><if pos:start="307:9" pos:end="445:9">if <condition pos:start="307:12" pos:end="309:29">(<expr pos:start="307:13" pos:end="309:28"><operator pos:start="307:13" pos:end="307:13">(</operator><name pos:start="307:14" pos:end="307:19">SIMPLE</name> <operator pos:start="307:21" pos:end="307:22">||</operator> <operator pos:start="307:24" pos:end="307:24">!</operator><name pos:start="307:25" pos:end="307:35">CONFIG_GRAY</name> <operator pos:start="307:37" pos:end="307:38">||</operator> <operator pos:start="307:40" pos:end="307:40">!</operator><operator pos:start="307:41" pos:end="307:41">(</operator><name pos:start="307:42" pos:end="307:49"><name pos:start="307:42" pos:end="307:42">h</name><operator pos:start="307:43" pos:end="307:44">-&gt;</operator><name pos:start="307:45" pos:end="307:49">flags</name></name> <operator pos:start="307:51" pos:end="307:51">&amp;</operator> <name pos:start="307:53" pos:end="307:67">CODEC_FLAG_GRAY</name><operator pos:start="307:68" pos:end="307:68">)</operator><operator pos:start="307:69" pos:end="307:69">)</operator> <operator pos:start="307:71" pos:end="307:72">&amp;&amp;</operator>

            <operator pos:start="309:13" pos:end="309:13">(</operator><name pos:start="309:14" pos:end="309:20"><name pos:start="309:14" pos:end="309:15">sl</name><operator pos:start="309:16" pos:end="309:17">-&gt;</operator><name pos:start="309:18" pos:end="309:20">cbp</name></name> <operator pos:start="309:22" pos:end="309:22">&amp;</operator> <literal type="number" pos:start="309:24" pos:end="309:27">0x30</literal><operator pos:start="309:28" pos:end="309:28">)</operator></expr>)</condition> <block pos:start="309:31" pos:end="445:9">{<block_content pos:start="311:13" pos:end="443:13">

            <decl_stmt pos:start="311:13" pos:end="311:52"><decl pos:start="311:13" pos:end="311:51"><type pos:start="311:13" pos:end="311:21"><name pos:start="311:13" pos:end="311:19">uint8_t</name> <modifier pos:start="311:21" pos:end="311:21">*</modifier></type><name pos:start="311:22" pos:end="311:28"><name pos:start="311:22" pos:end="311:25">dest</name><index pos:start="311:26" pos:end="311:28">[<expr pos:start="311:27" pos:end="311:27"><literal type="number" pos:start="311:27" pos:end="311:27">2</literal></expr>]</index></name> <init pos:start="311:30" pos:end="311:51">= <expr pos:start="311:32" pos:end="311:51"><block pos:start="311:32" pos:end="311:51">{ <expr pos:start="311:34" pos:end="311:40"><name pos:start="311:34" pos:end="311:40">dest_cb</name></expr>, <expr pos:start="311:43" pos:end="311:49"><name pos:start="311:43" pos:end="311:49">dest_cr</name></expr> }</block></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="313:13" pos:end="443:13"><if pos:start="313:13" pos:end="375:13">if <condition pos:start="313:16" pos:end="313:33">(<expr pos:start="313:17" pos:end="313:32"><name pos:start="313:17" pos:end="313:32">transform_bypass</name></expr>)</condition> <block pos:start="313:35" pos:end="375:13">{<block_content pos:start="315:17" pos:end="373:17">

                <if_stmt pos:start="315:17" pos:end="373:17"><if pos:start="315:17" pos:end="337:17">if <condition pos:start="315:20" pos:end="319:58">(<expr pos:start="315:21" pos:end="319:57"><call pos:start="315:21" pos:end="315:37"><name pos:start="315:21" pos:end="315:28">IS_INTRA</name><argument_list pos:start="315:29" pos:end="315:37">(<argument pos:start="315:30" pos:end="315:36"><expr pos:start="315:30" pos:end="315:36"><name pos:start="315:30" pos:end="315:36">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="315:39" pos:end="315:40">&amp;&amp;</operator> <name pos:start="315:42" pos:end="315:59"><name pos:start="315:42" pos:end="315:42">h</name><operator pos:start="315:43" pos:end="315:44">-&gt;</operator><name pos:start="315:45" pos:end="315:47">sps</name><operator pos:start="315:48" pos:end="315:48">.</operator><name pos:start="315:49" pos:end="315:59">profile_idc</name></name> <operator pos:start="315:61" pos:end="315:62">==</operator> <literal type="number" pos:start="315:64" pos:end="315:66">244</literal> <operator pos:start="315:68" pos:end="315:69">&amp;&amp;</operator>

                    <operator pos:start="317:21" pos:end="317:21">(</operator><name pos:start="317:22" pos:end="317:41"><name pos:start="317:22" pos:end="317:23">sl</name><operator pos:start="317:24" pos:end="317:25">-&gt;</operator><name pos:start="317:26" pos:end="317:41">chroma_pred_mode</name></name> <operator pos:start="317:43" pos:end="317:44">==</operator> <name pos:start="317:46" pos:end="317:57">VERT_PRED8x8</name> <operator pos:start="317:59" pos:end="317:60">||</operator>

                     <name pos:start="319:22" pos:end="319:41"><name pos:start="319:22" pos:end="319:23">sl</name><operator pos:start="319:24" pos:end="319:25">-&gt;</operator><name pos:start="319:26" pos:end="319:41">chroma_pred_mode</name></name> <operator pos:start="319:43" pos:end="319:44">==</operator> <name pos:start="319:46" pos:end="319:56">HOR_PRED8x8</name><operator pos:start="319:57" pos:end="319:57">)</operator></expr>)</condition> <block pos:start="319:60" pos:end="337:17">{<block_content pos:start="321:21" pos:end="335:72">

                    <expr_stmt pos:start="321:21" pos:end="327:72"><expr pos:start="321:21" pos:end="327:71"><name pos:start="321:21" pos:end="321:60"><name pos:start="321:21" pos:end="321:21">h</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:26">hpc</name><operator pos:start="321:27" pos:end="321:27">.</operator><name pos:start="321:28" pos:end="321:38">pred8x8_add</name><index pos:start="321:39" pos:end="321:60">[<expr pos:start="321:40" pos:end="321:59"><name pos:start="321:40" pos:end="321:59"><name pos:start="321:40" pos:end="321:41">sl</name><operator pos:start="321:42" pos:end="321:43">-&gt;</operator><name pos:start="321:44" pos:end="321:59">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="321:61" pos:end="321:61">(</operator><name pos:start="321:62" pos:end="321:68"><name pos:start="321:62" pos:end="321:65">dest</name><index pos:start="321:66" pos:end="321:68">[<expr pos:start="321:67" pos:end="321:67"><literal type="number" pos:start="321:67" pos:end="321:67">0</literal></expr>]</index></name><operator pos:start="321:69" pos:end="321:69">,</operator>

                                                            <name pos:start="323:61" pos:end="323:72">block_offset</name> <operator pos:start="323:74" pos:end="323:74">+</operator> <literal type="number" pos:start="323:76" pos:end="323:77">16</literal><operator pos:start="323:78" pos:end="323:78">,</operator>

                                                            <name pos:start="325:61" pos:end="325:66"><name pos:start="325:61" pos:end="325:62">sl</name><operator pos:start="325:63" pos:end="325:64">-&gt;</operator><name pos:start="325:65" pos:end="325:66">mb</name></name> <operator pos:start="325:68" pos:end="325:68">+</operator> <operator pos:start="325:70" pos:end="325:70">(</operator><literal type="number" pos:start="325:71" pos:end="325:72">16</literal> <operator pos:start="325:74" pos:end="325:74">*</operator> <literal type="number" pos:start="325:76" pos:end="325:77">16</literal> <operator pos:start="325:79" pos:end="325:79">*</operator> <literal type="number" pos:start="325:81" pos:end="325:81">1</literal> <operator pos:start="325:83" pos:end="325:84">&lt;&lt;</operator> <name pos:start="325:86" pos:end="325:96">PIXEL_SHIFT</name><operator pos:start="325:97" pos:end="325:97">)</operator><operator pos:start="325:98" pos:end="325:98">,</operator>

                                                            <name pos:start="327:61" pos:end="327:70">uvlinesize</name><operator pos:start="327:71" pos:end="327:71">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="335:72"><expr pos:start="329:21" pos:end="335:71"><name pos:start="329:21" pos:end="329:60"><name pos:start="329:21" pos:end="329:21">h</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:26">hpc</name><operator pos:start="329:27" pos:end="329:27">.</operator><name pos:start="329:28" pos:end="329:38">pred8x8_add</name><index pos:start="329:39" pos:end="329:60">[<expr pos:start="329:40" pos:end="329:59"><name pos:start="329:40" pos:end="329:59"><name pos:start="329:40" pos:end="329:41">sl</name><operator pos:start="329:42" pos:end="329:43">-&gt;</operator><name pos:start="329:44" pos:end="329:59">chroma_pred_mode</name></name></expr>]</index></name><operator pos:start="329:61" pos:end="329:61">(</operator><name pos:start="329:62" pos:end="329:68"><name pos:start="329:62" pos:end="329:65">dest</name><index pos:start="329:66" pos:end="329:68">[<expr pos:start="329:67" pos:end="329:67"><literal type="number" pos:start="329:67" pos:end="329:67">1</literal></expr>]</index></name><operator pos:start="329:69" pos:end="329:69">,</operator>

                                                            <name pos:start="331:61" pos:end="331:72">block_offset</name> <operator pos:start="331:74" pos:end="331:74">+</operator> <literal type="number" pos:start="331:76" pos:end="331:77">32</literal><operator pos:start="331:78" pos:end="331:78">,</operator>

                                                            <name pos:start="333:61" pos:end="333:66"><name pos:start="333:61" pos:end="333:62">sl</name><operator pos:start="333:63" pos:end="333:64">-&gt;</operator><name pos:start="333:65" pos:end="333:66">mb</name></name> <operator pos:start="333:68" pos:end="333:68">+</operator> <operator pos:start="333:70" pos:end="333:70">(</operator><literal type="number" pos:start="333:71" pos:end="333:72">16</literal> <operator pos:start="333:74" pos:end="333:74">*</operator> <literal type="number" pos:start="333:76" pos:end="333:77">16</literal> <operator pos:start="333:79" pos:end="333:79">*</operator> <literal type="number" pos:start="333:81" pos:end="333:81">2</literal> <operator pos:start="333:83" pos:end="333:84">&lt;&lt;</operator> <name pos:start="333:86" pos:end="333:96">PIXEL_SHIFT</name><operator pos:start="333:97" pos:end="333:97">)</operator><operator pos:start="333:98" pos:end="333:98">,</operator>

                                                            <name pos:start="335:61" pos:end="335:70">uvlinesize</name><operator pos:start="335:71" pos:end="335:71">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="337:19" pos:end="373:17">else <block pos:start="337:24" pos:end="373:17">{<block_content pos:start="339:21" pos:end="371:21">

                    <expr_stmt pos:start="339:21" pos:end="339:65"><expr pos:start="339:21" pos:end="339:64"><name pos:start="339:21" pos:end="339:28">idct_add</name> <operator pos:start="339:30" pos:end="339:30">=</operator> <name pos:start="339:32" pos:end="339:64"><name pos:start="339:32" pos:end="339:32">h</name><operator pos:start="339:33" pos:end="339:34">-&gt;</operator><name pos:start="339:35" pos:end="339:41">h264dsp</name><operator pos:start="339:42" pos:end="339:42">.</operator><name pos:start="339:43" pos:end="339:64">h264_add_pixels4_clear</name></name></expr>;</expr_stmt>

                    <for pos:start="341:21" pos:end="371:21">for <control pos:start="341:25" pos:end="341:43">(<init pos:start="341:26" pos:end="341:31"><expr pos:start="341:26" pos:end="341:30"><name pos:start="341:26" pos:end="341:26">j</name> <operator pos:start="341:28" pos:end="341:28">=</operator> <literal type="number" pos:start="341:30" pos:end="341:30">1</literal></expr>;</init> <condition pos:start="341:33" pos:end="341:38"><expr pos:start="341:33" pos:end="341:37"><name pos:start="341:33" pos:end="341:33">j</name> <operator pos:start="341:35" pos:end="341:35">&lt;</operator> <literal type="number" pos:start="341:37" pos:end="341:37">3</literal></expr>;</condition> <incr pos:start="341:40" pos:end="341:42"><expr pos:start="341:40" pos:end="341:42"><name pos:start="341:40" pos:end="341:40">j</name><operator pos:start="341:41" pos:end="341:42">++</operator></expr></incr>)</control> <block pos:start="341:45" pos:end="371:21">{<block_content pos:start="343:25" pos:end="369:25">

                        <for pos:start="343:25" pos:end="353:53">for <control pos:start="343:29" pos:end="343:61">(<init pos:start="343:30" pos:end="343:40"><expr pos:start="343:30" pos:end="343:39"><name pos:start="343:30" pos:end="343:30">i</name> <operator pos:start="343:32" pos:end="343:32">=</operator> <name pos:start="343:34" pos:end="343:34">j</name> <operator pos:start="343:36" pos:end="343:36">*</operator> <literal type="number" pos:start="343:38" pos:end="343:39">16</literal></expr>;</init> <condition pos:start="343:42" pos:end="343:56"><expr pos:start="343:42" pos:end="343:55"><name pos:start="343:42" pos:end="343:42">i</name> <operator pos:start="343:44" pos:end="343:44">&lt;</operator> <name pos:start="343:46" pos:end="343:46">j</name> <operator pos:start="343:48" pos:end="343:48">*</operator> <literal type="number" pos:start="343:50" pos:end="343:53">16</literal> <operator pos:start="343:53" pos:end="343:53">+</operator> <literal type="number" pos:start="343:55" pos:end="343:55">4</literal></expr>;</condition> <incr pos:start="343:58" pos:end="343:60"><expr pos:start="343:58" pos:end="343:60"><name pos:start="343:58" pos:end="343:58">i</name><operator pos:start="343:59" pos:end="343:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="345:29" pos:end="353:53"><block_content pos:start="345:29" pos:end="353:53">

                            <if_stmt pos:start="345:29" pos:end="353:53"><if pos:start="345:29" pos:end="353:53">if <condition pos:start="345:32" pos:end="347:73">(<expr pos:start="345:33" pos:end="347:72"><name pos:start="345:33" pos:end="345:66"><name pos:start="345:33" pos:end="345:34">sl</name><operator pos:start="345:35" pos:end="345:36">-&gt;</operator><name pos:start="345:37" pos:end="345:56">non_zero_count_cache</name><index pos:start="345:57" pos:end="345:66">[<expr pos:start="345:58" pos:end="345:65"><name pos:start="345:58" pos:end="345:65"><name pos:start="345:58" pos:end="345:62">scan8</name><index pos:start="345:63" pos:end="345:65">[<expr pos:start="345:64" pos:end="345:64"><name pos:start="345:64" pos:end="345:64">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="345:68" pos:end="345:69">||</operator>

                                <call pos:start="347:33" pos:end="347:72"><name pos:start="347:33" pos:end="347:43">dctcoef_get</name><argument_list pos:start="347:44" pos:end="347:72">(<argument pos:start="347:45" pos:end="347:50"><expr pos:start="347:45" pos:end="347:50"><name pos:start="347:45" pos:end="347:50"><name pos:start="347:45" pos:end="347:46">sl</name><operator pos:start="347:47" pos:end="347:48">-&gt;</operator><name pos:start="347:49" pos:end="347:50">mb</name></name></expr></argument>, <argument pos:start="347:53" pos:end="347:63"><expr pos:start="347:53" pos:end="347:63"><name pos:start="347:53" pos:end="347:63">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="347:66" pos:end="347:71"><expr pos:start="347:66" pos:end="347:71"><name pos:start="347:66" pos:end="347:66">i</name> <operator pos:start="347:68" pos:end="347:68">*</operator> <literal type="number" pos:start="347:70" pos:end="347:71">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="349:33" pos:end="353:53"><block_content pos:start="349:33" pos:end="353:53">

                                <expr_stmt pos:start="349:33" pos:end="353:53"><expr pos:start="349:33" pos:end="353:52"><call pos:start="349:33" pos:end="353:52"><name pos:start="349:33" pos:end="349:40">idct_add</name><argument_list pos:start="349:41" pos:end="353:52">(<argument pos:start="349:42" pos:end="349:70"><expr pos:start="349:42" pos:end="349:70"><name pos:start="349:42" pos:end="349:52"><name pos:start="349:42" pos:end="349:45">dest</name><index pos:start="349:46" pos:end="349:52">[<expr pos:start="349:47" pos:end="349:51"><name pos:start="349:47" pos:end="349:47">j</name> <operator pos:start="349:49" pos:end="349:49">-</operator> <literal type="number" pos:start="349:51" pos:end="349:51">1</literal></expr>]</index></name> <operator pos:start="349:54" pos:end="349:54">+</operator> <name pos:start="349:56" pos:end="349:70"><name pos:start="349:56" pos:end="349:67">block_offset</name><index pos:start="349:68" pos:end="349:70">[<expr pos:start="349:69" pos:end="349:69"><name pos:start="349:69" pos:end="349:69">i</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="351:42" pos:end="351:73"><expr pos:start="351:42" pos:end="351:73"><name pos:start="351:42" pos:end="351:47"><name pos:start="351:42" pos:end="351:43">sl</name><operator pos:start="351:44" pos:end="351:45">-&gt;</operator><name pos:start="351:46" pos:end="351:47">mb</name></name> <operator pos:start="351:49" pos:end="351:49">+</operator> <operator pos:start="351:51" pos:end="351:51">(</operator><name pos:start="351:52" pos:end="351:52">i</name> <operator pos:start="351:54" pos:end="351:54">*</operator> <literal type="number" pos:start="351:56" pos:end="351:57">16</literal> <operator pos:start="351:59" pos:end="351:60">&lt;&lt;</operator> <name pos:start="351:62" pos:end="351:72">PIXEL_SHIFT</name><operator pos:start="351:73" pos:end="351:73">)</operator></expr></argument>,

                                         <argument pos:start="353:42" pos:end="353:51"><expr pos:start="353:42" pos:end="353:51"><name pos:start="353:42" pos:end="353:51">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        <if_stmt pos:start="355:25" pos:end="369:25"><if pos:start="355:25" pos:end="369:25">if <condition pos:start="355:28" pos:end="355:38">(<expr pos:start="355:29" pos:end="355:37"><name pos:start="355:29" pos:end="355:37">chroma422</name></expr>)</condition> <block pos:start="355:40" pos:end="369:25">{<block_content pos:start="357:29" pos:end="367:57">

                            <for pos:start="357:29" pos:end="367:57">for <control pos:start="357:33" pos:end="357:69">(<init pos:start="357:34" pos:end="357:48"><expr pos:start="357:34" pos:end="357:47"><name pos:start="357:34" pos:end="357:34">i</name> <operator pos:start="357:36" pos:end="357:36">=</operator> <name pos:start="357:38" pos:end="357:38">j</name> <operator pos:start="357:40" pos:end="357:40">*</operator> <literal type="number" pos:start="357:42" pos:end="357:45">16</literal> <operator pos:start="357:45" pos:end="357:45">+</operator> <literal type="number" pos:start="357:47" pos:end="357:47">4</literal></expr>;</init> <condition pos:start="357:50" pos:end="357:64"><expr pos:start="357:50" pos:end="357:63"><name pos:start="357:50" pos:end="357:50">i</name> <operator pos:start="357:52" pos:end="357:52">&lt;</operator> <name pos:start="357:54" pos:end="357:54">j</name> <operator pos:start="357:56" pos:end="357:56">*</operator> <literal type="number" pos:start="357:58" pos:end="357:61">16</literal> <operator pos:start="357:61" pos:end="357:61">+</operator> <literal type="number" pos:start="357:63" pos:end="357:63">8</literal></expr>;</condition> <incr pos:start="357:66" pos:end="357:68"><expr pos:start="357:66" pos:end="357:68"><name pos:start="357:66" pos:end="357:66">i</name><operator pos:start="357:67" pos:end="357:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="359:33" pos:end="367:57"><block_content pos:start="359:33" pos:end="367:57">

                                <if_stmt pos:start="359:33" pos:end="367:57"><if pos:start="359:33" pos:end="367:57">if <condition pos:start="359:36" pos:end="361:77">(<expr pos:start="359:37" pos:end="361:76"><name pos:start="359:37" pos:end="359:74"><name pos:start="359:37" pos:end="359:38">sl</name><operator pos:start="359:39" pos:end="359:40">-&gt;</operator><name pos:start="359:41" pos:end="359:60">non_zero_count_cache</name><index pos:start="359:61" pos:end="359:74">[<expr pos:start="359:62" pos:end="359:73"><name pos:start="359:62" pos:end="359:73"><name pos:start="359:62" pos:end="359:66">scan8</name><index pos:start="359:67" pos:end="359:73">[<expr pos:start="359:68" pos:end="359:72"><name pos:start="359:68" pos:end="359:68">i</name> <operator pos:start="359:70" pos:end="359:70">+</operator> <literal type="number" pos:start="359:72" pos:end="359:72">4</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="359:76" pos:end="359:77">||</operator>

                                    <call pos:start="361:37" pos:end="361:76"><name pos:start="361:37" pos:end="361:47">dctcoef_get</name><argument_list pos:start="361:48" pos:end="361:76">(<argument pos:start="361:49" pos:end="361:54"><expr pos:start="361:49" pos:end="361:54"><name pos:start="361:49" pos:end="361:54"><name pos:start="361:49" pos:end="361:50">sl</name><operator pos:start="361:51" pos:end="361:52">-&gt;</operator><name pos:start="361:53" pos:end="361:54">mb</name></name></expr></argument>, <argument pos:start="361:57" pos:end="361:67"><expr pos:start="361:57" pos:end="361:67"><name pos:start="361:57" pos:end="361:67">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="361:70" pos:end="361:75"><expr pos:start="361:70" pos:end="361:75"><name pos:start="361:70" pos:end="361:70">i</name> <operator pos:start="361:72" pos:end="361:72">*</operator> <literal type="number" pos:start="361:74" pos:end="361:75">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="363:37" pos:end="367:57"><block_content pos:start="363:37" pos:end="367:57">

                                    <expr_stmt pos:start="363:37" pos:end="367:57"><expr pos:start="363:37" pos:end="367:56"><call pos:start="363:37" pos:end="367:56"><name pos:start="363:37" pos:end="363:44">idct_add</name><argument_list pos:start="363:45" pos:end="367:56">(<argument pos:start="363:46" pos:end="363:78"><expr pos:start="363:46" pos:end="363:78"><name pos:start="363:46" pos:end="363:56"><name pos:start="363:46" pos:end="363:49">dest</name><index pos:start="363:50" pos:end="363:56">[<expr pos:start="363:51" pos:end="363:55"><name pos:start="363:51" pos:end="363:51">j</name> <operator pos:start="363:53" pos:end="363:53">-</operator> <literal type="number" pos:start="363:55" pos:end="363:55">1</literal></expr>]</index></name> <operator pos:start="363:58" pos:end="363:58">+</operator> <name pos:start="363:60" pos:end="363:78"><name pos:start="363:60" pos:end="363:71">block_offset</name><index pos:start="363:72" pos:end="363:78">[<expr pos:start="363:73" pos:end="363:77"><name pos:start="363:73" pos:end="363:73">i</name> <operator pos:start="363:75" pos:end="363:75">+</operator> <literal type="number" pos:start="363:77" pos:end="363:77">4</literal></expr>]</index></name></expr></argument>,

                                             <argument pos:start="365:46" pos:end="365:77"><expr pos:start="365:46" pos:end="365:77"><name pos:start="365:46" pos:end="365:51"><name pos:start="365:46" pos:end="365:47">sl</name><operator pos:start="365:48" pos:end="365:49">-&gt;</operator><name pos:start="365:50" pos:end="365:51">mb</name></name> <operator pos:start="365:53" pos:end="365:53">+</operator> <operator pos:start="365:55" pos:end="365:55">(</operator><name pos:start="365:56" pos:end="365:56">i</name> <operator pos:start="365:58" pos:end="365:58">*</operator> <literal type="number" pos:start="365:60" pos:end="365:61">16</literal> <operator pos:start="365:63" pos:end="365:64">&lt;&lt;</operator> <name pos:start="365:66" pos:end="365:76">PIXEL_SHIFT</name><operator pos:start="365:77" pos:end="365:77">)</operator></expr></argument>,

                                             <argument pos:start="367:46" pos:end="367:55"><expr pos:start="367:46" pos:end="367:55"><name pos:start="367:46" pos:end="367:55">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="375:15" pos:end="443:13">else <block pos:start="375:20" pos:end="443:13">{<block_content pos:start="377:17" pos:end="441:17">

                <if_stmt pos:start="377:17" pos:end="441:17"><if pos:start="377:17" pos:end="413:17">if <condition pos:start="377:20" pos:end="377:28">(<expr pos:start="377:21" pos:end="377:27"><name pos:start="377:21" pos:end="377:27">is_h264</name></expr>)</condition> <block pos:start="377:30" pos:end="413:17">{<block_content pos:start="379:21" pos:end="411:72">

                    <decl_stmt pos:start="379:21" pos:end="379:30"><decl pos:start="379:21" pos:end="379:29"><type pos:start="379:21" pos:end="379:23"><name pos:start="379:21" pos:end="379:23">int</name></type> <name pos:start="379:25" pos:end="379:29"><name pos:start="379:25" pos:end="379:26">qp</name><index pos:start="379:27" pos:end="379:29">[<expr pos:start="379:28" pos:end="379:28"><literal type="number" pos:start="379:28" pos:end="379:28">2</literal></expr>]</index></name></decl>;</decl_stmt>

                    <if_stmt pos:start="381:21" pos:end="393:21"><if pos:start="381:21" pos:end="387:21">if <condition pos:start="381:24" pos:end="381:34">(<expr pos:start="381:25" pos:end="381:33"><name pos:start="381:25" pos:end="381:33">chroma422</name></expr>)</condition> <block pos:start="381:36" pos:end="387:21">{<block_content pos:start="383:25" pos:end="385:53">

                        <expr_stmt pos:start="383:25" pos:end="383:53"><expr pos:start="383:25" pos:end="383:52"><name pos:start="383:25" pos:end="383:29"><name pos:start="383:25" pos:end="383:26">qp</name><index pos:start="383:27" pos:end="383:29">[<expr pos:start="383:28" pos:end="383:28"><literal type="number" pos:start="383:28" pos:end="383:28">0</literal></expr>]</index></name> <operator pos:start="383:31" pos:end="383:31">=</operator> <name pos:start="383:33" pos:end="383:48"><name pos:start="383:33" pos:end="383:34">sl</name><operator pos:start="383:35" pos:end="383:36">-&gt;</operator><name pos:start="383:37" pos:end="383:45">chroma_qp</name><index pos:start="383:46" pos:end="383:48">[<expr pos:start="383:47" pos:end="383:47"><literal type="number" pos:start="383:47" pos:end="383:47">0</literal></expr>]</index></name> <operator pos:start="383:50" pos:end="383:50">+</operator> <literal type="number" pos:start="383:52" pos:end="383:52">3</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="385:25" pos:end="385:53"><expr pos:start="385:25" pos:end="385:52"><name pos:start="385:25" pos:end="385:29"><name pos:start="385:25" pos:end="385:26">qp</name><index pos:start="385:27" pos:end="385:29">[<expr pos:start="385:28" pos:end="385:28"><literal type="number" pos:start="385:28" pos:end="385:28">1</literal></expr>]</index></name> <operator pos:start="385:31" pos:end="385:31">=</operator> <name pos:start="385:33" pos:end="385:48"><name pos:start="385:33" pos:end="385:34">sl</name><operator pos:start="385:35" pos:end="385:36">-&gt;</operator><name pos:start="385:37" pos:end="385:45">chroma_qp</name><index pos:start="385:46" pos:end="385:48">[<expr pos:start="385:47" pos:end="385:47"><literal type="number" pos:start="385:47" pos:end="385:47">1</literal></expr>]</index></name> <operator pos:start="385:50" pos:end="385:50">+</operator> <literal type="number" pos:start="385:52" pos:end="385:52">3</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="387:23" pos:end="393:21">else <block pos:start="387:28" pos:end="393:21">{<block_content pos:start="389:25" pos:end="391:49">

                        <expr_stmt pos:start="389:25" pos:end="389:49"><expr pos:start="389:25" pos:end="389:48"><name pos:start="389:25" pos:end="389:29"><name pos:start="389:25" pos:end="389:26">qp</name><index pos:start="389:27" pos:end="389:29">[<expr pos:start="389:28" pos:end="389:28"><literal type="number" pos:start="389:28" pos:end="389:28">0</literal></expr>]</index></name> <operator pos:start="389:31" pos:end="389:31">=</operator> <name pos:start="389:33" pos:end="389:48"><name pos:start="389:33" pos:end="389:34">sl</name><operator pos:start="389:35" pos:end="389:36">-&gt;</operator><name pos:start="389:37" pos:end="389:45">chroma_qp</name><index pos:start="389:46" pos:end="389:48">[<expr pos:start="389:47" pos:end="389:47"><literal type="number" pos:start="389:47" pos:end="389:47">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="391:25" pos:end="391:49"><expr pos:start="391:25" pos:end="391:48"><name pos:start="391:25" pos:end="391:29"><name pos:start="391:25" pos:end="391:26">qp</name><index pos:start="391:27" pos:end="391:29">[<expr pos:start="391:28" pos:end="391:28"><literal type="number" pos:start="391:28" pos:end="391:28">1</literal></expr>]</index></name> <operator pos:start="391:31" pos:end="391:31">=</operator> <name pos:start="391:33" pos:end="391:48"><name pos:start="391:33" pos:end="391:34">sl</name><operator pos:start="391:35" pos:end="391:36">-&gt;</operator><name pos:start="391:37" pos:end="391:45">chroma_qp</name><index pos:start="391:46" pos:end="391:48">[<expr pos:start="391:47" pos:end="391:47"><literal type="number" pos:start="391:47" pos:end="391:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="395:21" pos:end="399:119"><if pos:start="395:21" pos:end="399:119">if <condition pos:start="395:24" pos:end="395:83">(<expr pos:start="395:25" pos:end="395:82"><name pos:start="395:25" pos:end="395:82"><name pos:start="395:25" pos:end="395:26">sl</name><operator pos:start="395:27" pos:end="395:28">-&gt;</operator><name pos:start="395:29" pos:end="395:48">non_zero_count_cache</name><index pos:start="395:49" pos:end="395:82">[<expr pos:start="395:50" pos:end="395:81"><name pos:start="395:50" pos:end="395:81"><name pos:start="395:50" pos:end="395:54">scan8</name><index pos:start="395:55" pos:end="395:81">[<expr pos:start="395:56" pos:end="395:80"><name pos:start="395:56" pos:end="395:76">CHROMA_DC_BLOCK_INDEX</name> <operator pos:start="395:78" pos:end="395:78">+</operator> <literal type="number" pos:start="395:80" pos:end="395:80">0</literal></expr>]</index></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="397:25" pos:end="399:119"><block_content pos:start="397:25" pos:end="399:119">

                        <expr_stmt pos:start="397:25" pos:end="399:119"><expr pos:start="397:25" pos:end="399:118"><call pos:start="397:25" pos:end="399:118"><name pos:start="397:25" pos:end="397:62"><name pos:start="397:25" pos:end="397:25">h</name><operator pos:start="397:26" pos:end="397:27">-&gt;</operator><name pos:start="397:28" pos:end="397:34">h264dsp</name><operator pos:start="397:35" pos:end="397:35">.</operator><name pos:start="397:36" pos:end="397:62">h264_chroma_dc_dequant_idct</name></name><argument_list pos:start="397:63" pos:end="399:118">(<argument pos:start="397:64" pos:end="397:100"><expr pos:start="397:64" pos:end="397:100"><name pos:start="397:64" pos:end="397:69"><name pos:start="397:64" pos:end="397:65">sl</name><operator pos:start="397:66" pos:end="397:67">-&gt;</operator><name pos:start="397:68" pos:end="397:69">mb</name></name> <operator pos:start="397:71" pos:end="397:71">+</operator> <operator pos:start="397:73" pos:end="397:73">(</operator><literal type="number" pos:start="397:74" pos:end="397:75">16</literal> <operator pos:start="397:77" pos:end="397:77">*</operator> <literal type="number" pos:start="397:79" pos:end="397:80">16</literal> <operator pos:start="397:82" pos:end="397:82">*</operator> <literal type="number" pos:start="397:84" pos:end="397:84">1</literal> <operator pos:start="397:86" pos:end="397:87">&lt;&lt;</operator> <name pos:start="397:89" pos:end="397:99">PIXEL_SHIFT</name><operator pos:start="397:100" pos:end="397:100">)</operator></expr></argument>,

                                                               <argument pos:start="399:64" pos:end="399:117"><expr pos:start="399:64" pos:end="399:117"><name pos:start="399:64" pos:end="399:117"><name pos:start="399:64" pos:end="399:64">h</name><operator pos:start="399:65" pos:end="399:66">-&gt;</operator><name pos:start="399:67" pos:end="399:80">dequant4_coeff</name><index pos:start="399:81" pos:end="399:107">[<expr pos:start="399:82" pos:end="399:106"><ternary pos:start="399:82" pos:end="399:106"><condition pos:start="399:82" pos:end="399:100"><expr pos:start="399:82" pos:end="399:98"><call pos:start="399:82" pos:end="399:98"><name pos:start="399:82" pos:end="399:89">IS_INTRA</name><argument_list pos:start="399:90" pos:end="399:98">(<argument pos:start="399:91" pos:end="399:97"><expr pos:start="399:91" pos:end="399:97"><name pos:start="399:91" pos:end="399:97">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="399:102" pos:end="399:102"> <expr pos:start="399:102" pos:end="399:102"><literal type="number" pos:start="399:102" pos:end="399:102">1</literal></expr> </then><else pos:start="399:104" pos:end="399:106">: <expr pos:start="399:106" pos:end="399:106"><literal type="number" pos:start="399:106" pos:end="399:106">4</literal></expr></else></ternary></expr>]</index><index pos:start="399:108" pos:end="399:114">[<expr pos:start="399:109" pos:end="399:113"><name pos:start="399:109" pos:end="399:113"><name pos:start="399:109" pos:end="399:110">qp</name><index pos:start="399:111" pos:end="399:113">[<expr pos:start="399:112" pos:end="399:112"><literal type="number" pos:start="399:112" pos:end="399:112">0</literal></expr>]</index></name></expr>]</index><index pos:start="399:115" pos:end="399:117">[<expr pos:start="399:116" pos:end="399:116"><literal type="number" pos:start="399:116" pos:end="399:116">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="401:21" pos:end="405:119"><if pos:start="401:21" pos:end="405:119">if <condition pos:start="401:24" pos:end="401:83">(<expr pos:start="401:25" pos:end="401:82"><name pos:start="401:25" pos:end="401:82"><name pos:start="401:25" pos:end="401:26">sl</name><operator pos:start="401:27" pos:end="401:28">-&gt;</operator><name pos:start="401:29" pos:end="401:48">non_zero_count_cache</name><index pos:start="401:49" pos:end="401:82">[<expr pos:start="401:50" pos:end="401:81"><name pos:start="401:50" pos:end="401:81"><name pos:start="401:50" pos:end="401:54">scan8</name><index pos:start="401:55" pos:end="401:81">[<expr pos:start="401:56" pos:end="401:80"><name pos:start="401:56" pos:end="401:76">CHROMA_DC_BLOCK_INDEX</name> <operator pos:start="401:78" pos:end="401:78">+</operator> <literal type="number" pos:start="401:80" pos:end="401:80">1</literal></expr>]</index></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="403:25" pos:end="405:119"><block_content pos:start="403:25" pos:end="405:119">

                        <expr_stmt pos:start="403:25" pos:end="405:119"><expr pos:start="403:25" pos:end="405:118"><call pos:start="403:25" pos:end="405:118"><name pos:start="403:25" pos:end="403:62"><name pos:start="403:25" pos:end="403:25">h</name><operator pos:start="403:26" pos:end="403:27">-&gt;</operator><name pos:start="403:28" pos:end="403:34">h264dsp</name><operator pos:start="403:35" pos:end="403:35">.</operator><name pos:start="403:36" pos:end="403:62">h264_chroma_dc_dequant_idct</name></name><argument_list pos:start="403:63" pos:end="405:118">(<argument pos:start="403:64" pos:end="403:100"><expr pos:start="403:64" pos:end="403:100"><name pos:start="403:64" pos:end="403:69"><name pos:start="403:64" pos:end="403:65">sl</name><operator pos:start="403:66" pos:end="403:67">-&gt;</operator><name pos:start="403:68" pos:end="403:69">mb</name></name> <operator pos:start="403:71" pos:end="403:71">+</operator> <operator pos:start="403:73" pos:end="403:73">(</operator><literal type="number" pos:start="403:74" pos:end="403:75">16</literal> <operator pos:start="403:77" pos:end="403:77">*</operator> <literal type="number" pos:start="403:79" pos:end="403:80">16</literal> <operator pos:start="403:82" pos:end="403:82">*</operator> <literal type="number" pos:start="403:84" pos:end="403:84">2</literal> <operator pos:start="403:86" pos:end="403:87">&lt;&lt;</operator> <name pos:start="403:89" pos:end="403:99">PIXEL_SHIFT</name><operator pos:start="403:100" pos:end="403:100">)</operator></expr></argument>,

                                                               <argument pos:start="405:64" pos:end="405:117"><expr pos:start="405:64" pos:end="405:117"><name pos:start="405:64" pos:end="405:117"><name pos:start="405:64" pos:end="405:64">h</name><operator pos:start="405:65" pos:end="405:66">-&gt;</operator><name pos:start="405:67" pos:end="405:80">dequant4_coeff</name><index pos:start="405:81" pos:end="405:107">[<expr pos:start="405:82" pos:end="405:106"><ternary pos:start="405:82" pos:end="405:106"><condition pos:start="405:82" pos:end="405:100"><expr pos:start="405:82" pos:end="405:98"><call pos:start="405:82" pos:end="405:98"><name pos:start="405:82" pos:end="405:89">IS_INTRA</name><argument_list pos:start="405:90" pos:end="405:98">(<argument pos:start="405:91" pos:end="405:97"><expr pos:start="405:91" pos:end="405:97"><name pos:start="405:91" pos:end="405:97">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="405:102" pos:end="405:102"> <expr pos:start="405:102" pos:end="405:102"><literal type="number" pos:start="405:102" pos:end="405:102">2</literal></expr> </then><else pos:start="405:104" pos:end="405:106">: <expr pos:start="405:106" pos:end="405:106"><literal type="number" pos:start="405:106" pos:end="405:106">5</literal></expr></else></ternary></expr>]</index><index pos:start="405:108" pos:end="405:114">[<expr pos:start="405:109" pos:end="405:113"><name pos:start="405:109" pos:end="405:113"><name pos:start="405:109" pos:end="405:110">qp</name><index pos:start="405:111" pos:end="405:113">[<expr pos:start="405:112" pos:end="405:112"><literal type="number" pos:start="405:112" pos:end="405:112">1</literal></expr>]</index></name></expr>]</index><index pos:start="405:115" pos:end="405:117">[<expr pos:start="405:116" pos:end="405:116"><literal type="number" pos:start="405:116" pos:end="405:116">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="407:21" pos:end="411:72"><expr pos:start="407:21" pos:end="411:71"><call pos:start="407:21" pos:end="411:71"><name pos:start="407:21" pos:end="407:45"><name pos:start="407:21" pos:end="407:21">h</name><operator pos:start="407:22" pos:end="407:23">-&gt;</operator><name pos:start="407:24" pos:end="407:30">h264dsp</name><operator pos:start="407:31" pos:end="407:31">.</operator><name pos:start="407:32" pos:end="407:45">h264_idct_add8</name></name><argument_list pos:start="407:46" pos:end="411:71">(<argument pos:start="407:47" pos:end="407:50"><expr pos:start="407:47" pos:end="407:50"><name pos:start="407:47" pos:end="407:50">dest</name></expr></argument>, <argument pos:start="407:53" pos:end="407:64"><expr pos:start="407:53" pos:end="407:64"><name pos:start="407:53" pos:end="407:64">block_offset</name></expr></argument>,

                                              <argument pos:start="409:47" pos:end="409:52"><expr pos:start="409:47" pos:end="409:52"><name pos:start="409:47" pos:end="409:52"><name pos:start="409:47" pos:end="409:48">sl</name><operator pos:start="409:49" pos:end="409:50">-&gt;</operator><name pos:start="409:51" pos:end="409:52">mb</name></name></expr></argument>, <argument pos:start="409:55" pos:end="409:64"><expr pos:start="409:55" pos:end="409:64"><name pos:start="409:55" pos:end="409:64">uvlinesize</name></expr></argument>,

                                              <argument pos:start="411:47" pos:end="411:70"><expr pos:start="411:47" pos:end="411:70"><name pos:start="411:47" pos:end="411:70"><name pos:start="411:47" pos:end="411:48">sl</name><operator pos:start="411:49" pos:end="411:50">-&gt;</operator><name pos:start="411:51" pos:end="411:70">non_zero_count_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="413:19" pos:end="441:17">else if <condition pos:start="413:27" pos:end="413:47">(<expr pos:start="413:28" pos:end="413:46"><name pos:start="413:28" pos:end="413:46">CONFIG_SVQ3_DECODER</name></expr>)</condition> <block pos:start="413:49" pos:end="441:17">{<block_content pos:start="415:21" pos:end="439:21">

                    <expr_stmt pos:start="415:21" pos:end="417:126"><expr pos:start="415:21" pos:end="417:125"><call pos:start="415:21" pos:end="417:125"><name pos:start="415:21" pos:end="415:58"><name pos:start="415:21" pos:end="415:21">h</name><operator pos:start="415:22" pos:end="415:23">-&gt;</operator><name pos:start="415:24" pos:end="415:30">h264dsp</name><operator pos:start="415:31" pos:end="415:31">.</operator><name pos:start="415:32" pos:end="415:58">h264_chroma_dc_dequant_idct</name></name><argument_list pos:start="415:59" pos:end="417:125">(<argument pos:start="415:60" pos:end="415:79"><expr pos:start="415:60" pos:end="415:79"><name pos:start="415:60" pos:end="415:65"><name pos:start="415:60" pos:end="415:61">sl</name><operator pos:start="415:62" pos:end="415:63">-&gt;</operator><name pos:start="415:64" pos:end="415:65">mb</name></name> <operator pos:start="415:67" pos:end="415:67">+</operator> <literal type="number" pos:start="415:69" pos:end="415:70">16</literal> <operator pos:start="415:72" pos:end="415:72">*</operator> <literal type="number" pos:start="415:74" pos:end="415:75">16</literal> <operator pos:start="415:77" pos:end="415:77">*</operator> <literal type="number" pos:start="415:79" pos:end="415:79">1</literal></expr></argument>,

                                                           <argument pos:start="417:60" pos:end="417:124"><expr pos:start="417:60" pos:end="417:124"><name pos:start="417:60" pos:end="417:124"><name pos:start="417:60" pos:end="417:60">h</name><operator pos:start="417:61" pos:end="417:62">-&gt;</operator><name pos:start="417:63" pos:end="417:76">dequant4_coeff</name><index pos:start="417:77" pos:end="417:103">[<expr pos:start="417:78" pos:end="417:102"><ternary pos:start="417:78" pos:end="417:102"><condition pos:start="417:78" pos:end="417:96"><expr pos:start="417:78" pos:end="417:94"><call pos:start="417:78" pos:end="417:94"><name pos:start="417:78" pos:end="417:85">IS_INTRA</name><argument_list pos:start="417:86" pos:end="417:94">(<argument pos:start="417:87" pos:end="417:93"><expr pos:start="417:87" pos:end="417:93"><name pos:start="417:87" pos:end="417:93">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="417:98" pos:end="417:98"> <expr pos:start="417:98" pos:end="417:98"><literal type="number" pos:start="417:98" pos:end="417:98">1</literal></expr> </then><else pos:start="417:100" pos:end="417:102">: <expr pos:start="417:102" pos:end="417:102"><literal type="number" pos:start="417:102" pos:end="417:102">4</literal></expr></else></ternary></expr>]</index><index pos:start="417:104" pos:end="417:121">[<expr pos:start="417:105" pos:end="417:120"><name pos:start="417:105" pos:end="417:120"><name pos:start="417:105" pos:end="417:106">sl</name><operator pos:start="417:107" pos:end="417:108">-&gt;</operator><name pos:start="417:109" pos:end="417:117">chroma_qp</name><index pos:start="417:118" pos:end="417:120">[<expr pos:start="417:119" pos:end="417:119"><literal type="number" pos:start="417:119" pos:end="417:119">0</literal></expr>]</index></name></expr>]</index><index pos:start="417:122" pos:end="417:124">[<expr pos:start="417:123" pos:end="417:123"><literal type="number" pos:start="417:123" pos:end="417:123">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="419:21" pos:end="421:126"><expr pos:start="419:21" pos:end="421:125"><call pos:start="419:21" pos:end="421:125"><name pos:start="419:21" pos:end="419:58"><name pos:start="419:21" pos:end="419:21">h</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:30">h264dsp</name><operator pos:start="419:31" pos:end="419:31">.</operator><name pos:start="419:32" pos:end="419:58">h264_chroma_dc_dequant_idct</name></name><argument_list pos:start="419:59" pos:end="421:125">(<argument pos:start="419:60" pos:end="419:79"><expr pos:start="419:60" pos:end="419:79"><name pos:start="419:60" pos:end="419:65"><name pos:start="419:60" pos:end="419:61">sl</name><operator pos:start="419:62" pos:end="419:63">-&gt;</operator><name pos:start="419:64" pos:end="419:65">mb</name></name> <operator pos:start="419:67" pos:end="419:67">+</operator> <literal type="number" pos:start="419:69" pos:end="419:70">16</literal> <operator pos:start="419:72" pos:end="419:72">*</operator> <literal type="number" pos:start="419:74" pos:end="419:75">16</literal> <operator pos:start="419:77" pos:end="419:77">*</operator> <literal type="number" pos:start="419:79" pos:end="419:79">2</literal></expr></argument>,

                                                           <argument pos:start="421:60" pos:end="421:124"><expr pos:start="421:60" pos:end="421:124"><name pos:start="421:60" pos:end="421:124"><name pos:start="421:60" pos:end="421:60">h</name><operator pos:start="421:61" pos:end="421:62">-&gt;</operator><name pos:start="421:63" pos:end="421:76">dequant4_coeff</name><index pos:start="421:77" pos:end="421:103">[<expr pos:start="421:78" pos:end="421:102"><ternary pos:start="421:78" pos:end="421:102"><condition pos:start="421:78" pos:end="421:96"><expr pos:start="421:78" pos:end="421:94"><call pos:start="421:78" pos:end="421:94"><name pos:start="421:78" pos:end="421:85">IS_INTRA</name><argument_list pos:start="421:86" pos:end="421:94">(<argument pos:start="421:87" pos:end="421:93"><expr pos:start="421:87" pos:end="421:93"><name pos:start="421:87" pos:end="421:93">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="421:98" pos:end="421:98"> <expr pos:start="421:98" pos:end="421:98"><literal type="number" pos:start="421:98" pos:end="421:98">2</literal></expr> </then><else pos:start="421:100" pos:end="421:102">: <expr pos:start="421:102" pos:end="421:102"><literal type="number" pos:start="421:102" pos:end="421:102">5</literal></expr></else></ternary></expr>]</index><index pos:start="421:104" pos:end="421:121">[<expr pos:start="421:105" pos:end="421:120"><name pos:start="421:105" pos:end="421:120"><name pos:start="421:105" pos:end="421:106">sl</name><operator pos:start="421:107" pos:end="421:108">-&gt;</operator><name pos:start="421:109" pos:end="421:117">chroma_qp</name><index pos:start="421:118" pos:end="421:120">[<expr pos:start="421:119" pos:end="421:119"><literal type="number" pos:start="421:119" pos:end="421:119">1</literal></expr>]</index></name></expr>]</index><index pos:start="421:122" pos:end="421:124">[<expr pos:start="421:123" pos:end="421:123"><literal type="number" pos:start="421:123" pos:end="421:123">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="423:21" pos:end="439:21">for <control pos:start="423:25" pos:end="423:43">(<init pos:start="423:26" pos:end="423:31"><expr pos:start="423:26" pos:end="423:30"><name pos:start="423:26" pos:end="423:26">j</name> <operator pos:start="423:28" pos:end="423:28">=</operator> <literal type="number" pos:start="423:30" pos:end="423:30">1</literal></expr>;</init> <condition pos:start="423:33" pos:end="423:38"><expr pos:start="423:33" pos:end="423:37"><name pos:start="423:33" pos:end="423:33">j</name> <operator pos:start="423:35" pos:end="423:35">&lt;</operator> <literal type="number" pos:start="423:37" pos:end="423:37">3</literal></expr>;</condition> <incr pos:start="423:40" pos:end="423:42"><expr pos:start="423:40" pos:end="423:42"><name pos:start="423:40" pos:end="423:40">j</name><operator pos:start="423:41" pos:end="423:42">++</operator></expr></incr>)</control> <block pos:start="423:45" pos:end="439:21">{<block_content pos:start="425:25" pos:end="437:29">

                        <for pos:start="425:25" pos:end="437:29">for <control pos:start="425:29" pos:end="425:61">(<init pos:start="425:30" pos:end="425:40"><expr pos:start="425:30" pos:end="425:39"><name pos:start="425:30" pos:end="425:30">i</name> <operator pos:start="425:32" pos:end="425:32">=</operator> <name pos:start="425:34" pos:end="425:34">j</name> <operator pos:start="425:36" pos:end="425:36">*</operator> <literal type="number" pos:start="425:38" pos:end="425:39">16</literal></expr>;</init> <condition pos:start="425:42" pos:end="425:56"><expr pos:start="425:42" pos:end="425:55"><name pos:start="425:42" pos:end="425:42">i</name> <operator pos:start="425:44" pos:end="425:44">&lt;</operator> <name pos:start="425:46" pos:end="425:46">j</name> <operator pos:start="425:48" pos:end="425:48">*</operator> <literal type="number" pos:start="425:50" pos:end="425:53">16</literal> <operator pos:start="425:53" pos:end="425:53">+</operator> <literal type="number" pos:start="425:55" pos:end="425:55">4</literal></expr>;</condition> <incr pos:start="425:58" pos:end="425:60"><expr pos:start="425:58" pos:end="425:60"><name pos:start="425:58" pos:end="425:58">i</name><operator pos:start="425:59" pos:end="425:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="427:29" pos:end="437:29"><block_content pos:start="427:29" pos:end="437:29">

                            <if_stmt pos:start="427:29" pos:end="437:29"><if pos:start="427:29" pos:end="437:29">if <condition pos:start="427:32" pos:end="427:85">(<expr pos:start="427:33" pos:end="427:84"><name pos:start="427:33" pos:end="427:66"><name pos:start="427:33" pos:end="427:34">sl</name><operator pos:start="427:35" pos:end="427:36">-&gt;</operator><name pos:start="427:37" pos:end="427:56">non_zero_count_cache</name><index pos:start="427:57" pos:end="427:66">[<expr pos:start="427:58" pos:end="427:65"><name pos:start="427:58" pos:end="427:65"><name pos:start="427:58" pos:end="427:62">scan8</name><index pos:start="427:63" pos:end="427:65">[<expr pos:start="427:64" pos:end="427:64"><name pos:start="427:64" pos:end="427:64">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="427:68" pos:end="427:69">||</operator> <name pos:start="427:71" pos:end="427:84"><name pos:start="427:71" pos:end="427:72">sl</name><operator pos:start="427:73" pos:end="427:74">-&gt;</operator><name pos:start="427:75" pos:end="427:76">mb</name><index pos:start="427:77" pos:end="427:84">[<expr pos:start="427:78" pos:end="427:83"><name pos:start="427:78" pos:end="427:78">i</name> <operator pos:start="427:80" pos:end="427:80">*</operator> <literal type="number" pos:start="427:82" pos:end="427:83">16</literal></expr>]</index></name></expr>)</condition> <block pos:start="427:87" pos:end="437:29">{<block_content pos:start="429:33" pos:end="435:98">

                                <decl_stmt pos:start="429:33" pos:end="429:83"><decl pos:start="429:33" pos:end="429:82"><type pos:start="429:33" pos:end="429:46"><name pos:start="429:33" pos:end="429:39">uint8_t</name> <modifier pos:start="429:41" pos:end="429:41">*</modifier><specifier pos:start="429:42" pos:end="429:46">const</specifier></type> <name pos:start="429:48" pos:end="429:50">ptr</name> <init pos:start="429:52" pos:end="429:82">= <expr pos:start="429:54" pos:end="429:82"><name pos:start="429:54" pos:end="429:64"><name pos:start="429:54" pos:end="429:57">dest</name><index pos:start="429:58" pos:end="429:64">[<expr pos:start="429:59" pos:end="429:63"><name pos:start="429:59" pos:end="429:59">j</name> <operator pos:start="429:61" pos:end="429:61">-</operator> <literal type="number" pos:start="429:63" pos:end="429:63">1</literal></expr>]</index></name> <operator pos:start="429:66" pos:end="429:66">+</operator> <name pos:start="429:68" pos:end="429:82"><name pos:start="429:68" pos:end="429:79">block_offset</name><index pos:start="429:80" pos:end="429:82">[<expr pos:start="429:81" pos:end="429:81"><name pos:start="429:81" pos:end="429:81">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                                <expr_stmt pos:start="431:33" pos:end="435:98"><expr pos:start="431:33" pos:end="435:97"><call pos:start="431:33" pos:end="435:97"><name pos:start="431:33" pos:end="431:50">ff_svq3_add_idct_c</name><argument_list pos:start="431:51" pos:end="435:97">(<argument pos:start="431:52" pos:end="431:54"><expr pos:start="431:52" pos:end="431:54"><name pos:start="431:52" pos:end="431:54">ptr</name></expr></argument>, <argument pos:start="431:57" pos:end="431:71"><expr pos:start="431:57" pos:end="431:71"><name pos:start="431:57" pos:end="431:62"><name pos:start="431:57" pos:end="431:58">sl</name><operator pos:start="431:59" pos:end="431:60">-&gt;</operator><name pos:start="431:61" pos:end="431:62">mb</name></name> <operator pos:start="431:64" pos:end="431:64">+</operator> <name pos:start="431:66" pos:end="431:66">i</name> <operator pos:start="431:68" pos:end="431:68">*</operator> <literal type="number" pos:start="431:70" pos:end="431:71">16</literal></expr></argument>,

                                                   <argument pos:start="433:52" pos:end="433:61"><expr pos:start="433:52" pos:end="433:61"><name pos:start="433:52" pos:end="433:61">uvlinesize</name></expr></argument>,

                                                   <argument pos:start="435:52" pos:end="435:93"><expr pos:start="435:52" pos:end="435:93"><name pos:start="435:52" pos:end="435:88"><name pos:start="435:52" pos:end="435:68">ff_h264_chroma_qp</name><index pos:start="435:69" pos:end="435:71">[<expr pos:start="435:70" pos:end="435:70"><literal type="number" pos:start="435:70" pos:end="435:70">0</literal></expr>]</index><index pos:start="435:72" pos:end="435:88">[<expr pos:start="435:73" pos:end="435:87"><name pos:start="435:73" pos:end="435:82"><name pos:start="435:73" pos:end="435:74">sl</name><operator pos:start="435:75" pos:end="435:76">-&gt;</operator><name pos:start="435:77" pos:end="435:82">qscale</name></name> <operator pos:start="435:84" pos:end="435:84">+</operator> <literal type="number" pos:start="435:86" pos:end="435:87">12</literal></expr>]</index></name> <operator pos:start="435:90" pos:end="435:90">-</operator> <literal type="number" pos:start="435:92" pos:end="435:93">12</literal></expr></argument>, <argument pos:start="435:96" pos:end="435:96"><expr pos:start="435:96" pos:end="435:96"><literal type="number" pos:start="435:96" pos:end="435:96">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt></block_content></block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
