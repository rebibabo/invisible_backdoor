<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22435.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_pulse_audio_get_devices</name><parameter_list pos:start="1:31" pos:end="1:89">(<parameter pos:start="1:32" pos:end="1:56"><decl pos:start="1:32" pos:end="1:56"><type pos:start="1:32" pos:end="1:56"><name pos:start="1:32" pos:end="1:47">AVDeviceInfoList</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">devices</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:76">server</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:88"><decl pos:start="1:79" pos:end="1:88"><type pos:start="1:79" pos:end="1:88"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:88">output</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:31">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">pa_mainloop</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:22">pa_ml</name> <init pos:start="5:24" pos:end="5:29">= <expr pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">pa_mainloop_api</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:29">pa_mlapi</name> <init pos:start="7:31" pos:end="7:36">= <expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">pa_operation</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">pa_op</name> <init pos:start="9:25" pos:end="9:30">= <expr pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">pa_context</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">pa_ctx</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:27">pa_operation_state</name></name></type> <name pos:start="13:29" pos:end="13:36">op_state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:72"><decl pos:start="15:5" pos:end="15:71"><type pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:31">PulseAudioContextState</name></name></type> <name pos:start="15:33" pos:end="15:42">loop_state</name> <init pos:start="15:44" pos:end="15:71">= <expr pos:start="15:46" pos:end="15:71"><name pos:start="15:46" pos:end="15:71">PULSE_CONTEXT_INITIALIZING</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:24">PulseAudioDeviceList</name></type> <name pos:start="17:26" pos:end="17:33">dev_list</name> <init pos:start="17:35" pos:end="17:41">= <expr pos:start="17:37" pos:end="17:41"><block pos:start="17:37" pos:end="17:41">{ <expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:12">dev_list</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:19">output</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:28">output</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:12">dev_list</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:20">devices</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:30">devices</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:16">devices</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:11">devices</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:23">nb_devices</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:11">devices</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:20">devices</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:27">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:37">(<expr pos:start="35:9" pos:end="35:36"><operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:15">pa_ml</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:35"><name pos:start="35:19" pos:end="35:33">pa_mainloop_new</name><argument_list pos:start="35:34" pos:end="35:35">()</argument_list></call><operator pos:start="35:36" pos:end="35:36">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:49">(<expr pos:start="39:9" pos:end="39:48"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:18">pa_mlapi</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:47"><name pos:start="39:22" pos:end="39:40">pa_mainloop_get_api</name><argument_list pos:start="39:41" pos:end="39:47">(<argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">pa_ml</name></expr></argument>)</argument_list></call><operator pos:start="39:48" pos:end="39:48">)</operator></expr>)</condition> <block pos:start="39:51" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:18">

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:16">dev_list</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:27">error_code</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:62">(<expr pos:start="47:9" pos:end="47:61"><operator pos:start="47:9" pos:end="47:9">!</operator><operator pos:start="47:10" pos:end="47:10">(</operator><name pos:start="47:11" pos:end="47:16">pa_ctx</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:60"><name pos:start="47:20" pos:end="47:33">pa_context_new</name><argument_list pos:start="47:34" pos:end="47:60">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42">pa_mlapi</name></expr></argument>, <argument pos:start="47:45" pos:end="47:59"><expr pos:start="47:45" pos:end="47:59"><literal type="string" pos:start="47:45" pos:end="47:59">"Query devices"</literal></expr></argument>)</argument_list></call><operator pos:start="47:61" pos:end="47:61">)</operator></expr>)</condition> <block pos:start="47:64" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:16">dev_list</name><operator pos:start="49:17" pos:end="49:17">.</operator><name pos:start="49:18" pos:end="49:27">error_code</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <call pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:37">AVERROR</name><argument_list pos:start="49:38" pos:end="49:45">(<argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:68"><expr pos:start="55:5" pos:end="55:67"><call pos:start="55:5" pos:end="55:67"><name pos:start="55:5" pos:end="55:33">pa_context_set_state_callback</name><argument_list pos:start="55:34" pos:end="55:67">(<argument pos:start="55:35" pos:end="55:40"><expr pos:start="55:35" pos:end="55:40"><name pos:start="55:35" pos:end="55:40">pa_ctx</name></expr></argument>, <argument pos:start="55:43" pos:end="55:53"><expr pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:53">pa_state_cb</name></expr></argument>, <argument pos:start="55:56" pos:end="55:66"><expr pos:start="55:56" pos:end="55:66"><operator pos:start="55:56" pos:end="55:56">&amp;</operator><name pos:start="55:57" pos:end="55:66">loop_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:56">(<expr pos:start="57:9" pos:end="57:55"><call pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:26">pa_context_connect</name><argument_list pos:start="57:27" pos:end="57:51">(<argument pos:start="57:28" pos:end="57:33"><expr pos:start="57:28" pos:end="57:33"><name pos:start="57:28" pos:end="57:33">pa_ctx</name></expr></argument>, <argument pos:start="57:36" pos:end="57:41"><expr pos:start="57:36" pos:end="57:41"><name pos:start="57:36" pos:end="57:41">server</name></expr></argument>, <argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">0</literal></expr></argument>, <argument pos:start="57:47" pos:end="57:50"><expr pos:start="57:47" pos:end="57:50"><name pos:start="57:47" pos:end="57:50">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="57:53" pos:end="57:53">&lt;</operator> <literal type="number" pos:start="57:55" pos:end="57:55">0</literal></expr>)</condition> <block pos:start="57:58" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:16">dev_list</name><operator pos:start="59:17" pos:end="59:17">.</operator><name pos:start="59:18" pos:end="59:27">error_code</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <while pos:start="67:5" pos:end="69:44">while <condition pos:start="67:11" pos:end="67:52">(<expr pos:start="67:12" pos:end="67:51"><name pos:start="67:12" pos:end="67:21">loop_state</name> <operator pos:start="67:23" pos:end="67:24">==</operator> <name pos:start="67:26" pos:end="67:51">PULSE_CONTEXT_INITIALIZING</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:44"><block_content pos:start="69:9" pos:end="69:44">

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:27">pa_mainloop_iterate</name><argument_list pos:start="69:28" pos:end="69:43">(<argument pos:start="69:29" pos:end="69:33"><expr pos:start="69:29" pos:end="69:33"><name pos:start="69:29" pos:end="69:33">pa_ml</name></expr></argument>, <argument pos:start="69:36" pos:end="69:36"><expr pos:start="69:36" pos:end="69:36"><literal type="number" pos:start="69:36" pos:end="69:36">1</literal></expr></argument>, <argument pos:start="69:39" pos:end="69:42"><expr pos:start="69:39" pos:end="69:42"><name pos:start="69:39" pos:end="69:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:45">(<expr pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:18">loop_state</name> <operator pos:start="71:20" pos:end="71:21">==</operator> <name pos:start="71:23" pos:end="71:44">PULSE_CONTEXT_FINISHED</name></expr>)</condition> <block pos:start="71:47" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:16">dev_list</name><operator pos:start="73:17" pos:end="73:17">.</operator><name pos:start="73:18" pos:end="73:27">error_code</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="87:97"><if pos:start="81:5" pos:end="83:93">if <condition pos:start="81:8" pos:end="81:15">(<expr pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:14">output</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:93"><block_content pos:start="83:9" pos:end="83:93">

        <expr_stmt pos:start="83:9" pos:end="83:93"><expr pos:start="83:9" pos:end="83:92"><name pos:start="83:9" pos:end="83:13">pa_op</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <call pos:start="83:17" pos:end="83:92"><name pos:start="83:17" pos:end="83:45">pa_context_get_sink_info_list</name><argument_list pos:start="83:46" pos:end="83:92">(<argument pos:start="83:47" pos:end="83:52"><expr pos:start="83:47" pos:end="83:52"><name pos:start="83:47" pos:end="83:52">pa_ctx</name></expr></argument>, <argument pos:start="83:55" pos:end="83:80"><expr pos:start="83:55" pos:end="83:80"><name pos:start="83:55" pos:end="83:80">pulse_audio_sink_device_cb</name></expr></argument>, <argument pos:start="83:83" pos:end="83:91"><expr pos:start="83:83" pos:end="83:91"><operator pos:start="83:83" pos:end="83:83">&amp;</operator><name pos:start="83:84" pos:end="83:91">dev_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="85:5" pos:end="87:97">else<block type="pseudo" pos:start="87:9" pos:end="87:97"><block_content pos:start="87:9" pos:end="87:97">

        <expr_stmt pos:start="87:9" pos:end="87:97"><expr pos:start="87:9" pos:end="87:96"><name pos:start="87:9" pos:end="87:13">pa_op</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:96"><name pos:start="87:17" pos:end="87:47">pa_context_get_source_info_list</name><argument_list pos:start="87:48" pos:end="87:96">(<argument pos:start="87:49" pos:end="87:54"><expr pos:start="87:49" pos:end="87:54"><name pos:start="87:49" pos:end="87:54">pa_ctx</name></expr></argument>, <argument pos:start="87:57" pos:end="87:84"><expr pos:start="87:57" pos:end="87:84"><name pos:start="87:57" pos:end="87:84">pulse_audio_source_device_cb</name></expr></argument>, <argument pos:start="87:87" pos:end="87:95"><expr pos:start="87:87" pos:end="87:95"><operator pos:start="87:87" pos:end="87:87">&amp;</operator><name pos:start="87:88" pos:end="87:95">dev_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <while pos:start="89:5" pos:end="91:44">while <condition pos:start="89:11" pos:end="89:78">(<expr pos:start="89:12" pos:end="89:77"><operator pos:start="89:12" pos:end="89:12">(</operator><name pos:start="89:13" pos:end="89:20">op_state</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:52"><name pos:start="89:24" pos:end="89:45">pa_operation_get_state</name><argument_list pos:start="89:46" pos:end="89:52">(<argument pos:start="89:47" pos:end="89:51"><expr pos:start="89:47" pos:end="89:51"><name pos:start="89:47" pos:end="89:51">pa_op</name></expr></argument>)</argument_list></call><operator pos:start="89:53" pos:end="89:53">)</operator> <operator pos:start="89:55" pos:end="89:56">==</operator> <name pos:start="89:58" pos:end="89:77">PA_OPERATION_RUNNING</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:44"><block_content pos:start="91:9" pos:end="91:44">

        <expr_stmt pos:start="91:9" pos:end="91:44"><expr pos:start="91:9" pos:end="91:43"><call pos:start="91:9" pos:end="91:43"><name pos:start="91:9" pos:end="91:27">pa_mainloop_iterate</name><argument_list pos:start="91:28" pos:end="91:43">(<argument pos:start="91:29" pos:end="91:33"><expr pos:start="91:29" pos:end="91:33"><name pos:start="91:29" pos:end="91:33">pa_ml</name></expr></argument>, <argument pos:start="91:36" pos:end="91:36"><expr pos:start="91:36" pos:end="91:36"><literal type="number" pos:start="91:36" pos:end="91:36">1</literal></expr></argument>, <argument pos:start="91:39" pos:end="91:42"><expr pos:start="91:39" pos:end="91:42"><name pos:start="91:39" pos:end="91:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="93:5" pos:end="95:47"><if pos:start="93:5" pos:end="95:47">if <condition pos:start="93:8" pos:end="93:38">(<expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:16">op_state</name> <operator pos:start="93:18" pos:end="93:19">!=</operator> <name pos:start="93:21" pos:end="93:37">PA_OPERATION_DONE</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:47"><block_content pos:start="95:9" pos:end="95:47">

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:16">dev_list</name><operator pos:start="95:17" pos:end="95:17">.</operator><name pos:start="95:18" pos:end="95:27">error_code</name></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><call pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:22">pa_operation_unref</name><argument_list pos:start="97:23" pos:end="97:29">(<argument pos:start="97:24" pos:end="97:28"><expr pos:start="97:24" pos:end="97:28"><name pos:start="97:24" pos:end="97:28">pa_op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:18"><if pos:start="99:5" pos:end="101:18">if <condition pos:start="99:8" pos:end="99:32">(<expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:16">dev_list</name><operator pos:start="99:17" pos:end="99:17">.</operator><name pos:start="99:18" pos:end="99:27">error_code</name></name> <operator pos:start="99:29" pos:end="99:29">&lt;</operator> <literal type="number" pos:start="99:31" pos:end="99:31">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:18"><block_content pos:start="101:9" pos:end="101:18">

        <goto pos:start="101:9" pos:end="101:18">goto <name pos:start="101:14" pos:end="101:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:80"><expr pos:start="105:5" pos:end="105:79"><name pos:start="105:5" pos:end="105:9">pa_op</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <call pos:start="105:13" pos:end="105:79"><name pos:start="105:13" pos:end="105:38">pa_context_get_server_info</name><argument_list pos:start="105:39" pos:end="105:79">(<argument pos:start="105:40" pos:end="105:45"><expr pos:start="105:40" pos:end="105:45"><name pos:start="105:40" pos:end="105:45">pa_ctx</name></expr></argument>, <argument pos:start="105:48" pos:end="105:67"><expr pos:start="105:48" pos:end="105:67"><name pos:start="105:48" pos:end="105:67">pulse_server_info_cb</name></expr></argument>, <argument pos:start="105:70" pos:end="105:78"><expr pos:start="105:70" pos:end="105:78"><operator pos:start="105:70" pos:end="105:70">&amp;</operator><name pos:start="105:71" pos:end="105:78">dev_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="107:5" pos:end="109:44">while <condition pos:start="107:11" pos:end="107:78">(<expr pos:start="107:12" pos:end="107:77"><operator pos:start="107:12" pos:end="107:12">(</operator><name pos:start="107:13" pos:end="107:20">op_state</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <call pos:start="107:24" pos:end="107:52"><name pos:start="107:24" pos:end="107:45">pa_operation_get_state</name><argument_list pos:start="107:46" pos:end="107:52">(<argument pos:start="107:47" pos:end="107:51"><expr pos:start="107:47" pos:end="107:51"><name pos:start="107:47" pos:end="107:51">pa_op</name></expr></argument>)</argument_list></call><operator pos:start="107:53" pos:end="107:53">)</operator> <operator pos:start="107:55" pos:end="107:56">==</operator> <name pos:start="107:58" pos:end="107:77">PA_OPERATION_RUNNING</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:44"><block_content pos:start="109:9" pos:end="109:44">

        <expr_stmt pos:start="109:9" pos:end="109:44"><expr pos:start="109:9" pos:end="109:43"><call pos:start="109:9" pos:end="109:43"><name pos:start="109:9" pos:end="109:27">pa_mainloop_iterate</name><argument_list pos:start="109:28" pos:end="109:43">(<argument pos:start="109:29" pos:end="109:33"><expr pos:start="109:29" pos:end="109:33"><name pos:start="109:29" pos:end="109:33">pa_ml</name></expr></argument>, <argument pos:start="109:36" pos:end="109:36"><expr pos:start="109:36" pos:end="109:36"><literal type="number" pos:start="109:36" pos:end="109:36">1</literal></expr></argument>, <argument pos:start="109:39" pos:end="109:42"><expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="111:5" pos:end="113:47"><if pos:start="111:5" pos:end="113:47">if <condition pos:start="111:8" pos:end="111:38">(<expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:16">op_state</name> <operator pos:start="111:18" pos:end="111:19">!=</operator> <name pos:start="111:21" pos:end="111:37">PA_OPERATION_DONE</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:47"><block_content pos:start="113:9" pos:end="113:47">

        <expr_stmt pos:start="113:9" pos:end="113:47"><expr pos:start="113:9" pos:end="113:46"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:16">dev_list</name><operator pos:start="113:17" pos:end="113:17">.</operator><name pos:start="113:18" pos:end="113:27">error_code</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:46">AVERROR_EXTERNAL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><call pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:22">pa_operation_unref</name><argument_list pos:start="115:23" pos:end="115:29">(<argument pos:start="115:24" pos:end="115:28"><expr pos:start="115:24" pos:end="115:28"><name pos:start="115:24" pos:end="115:28">pa_op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="119:18"><if pos:start="117:5" pos:end="119:18">if <condition pos:start="117:8" pos:end="117:32">(<expr pos:start="117:9" pos:end="117:31"><name pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:16">dev_list</name><operator pos:start="117:17" pos:end="117:17">.</operator><name pos:start="117:18" pos:end="117:27">error_code</name></name> <operator pos:start="117:29" pos:end="117:29">&lt;</operator> <literal type="number" pos:start="117:31" pos:end="117:31">0</literal></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:18"><block_content pos:start="119:9" pos:end="119:18">

        <goto pos:start="119:9" pos:end="119:18">goto <name pos:start="119:14" pos:end="119:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:33"><expr pos:start="123:5" pos:end="123:32"><name pos:start="123:5" pos:end="123:27"><name pos:start="123:5" pos:end="123:11">devices</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:27">default_device</name></name> <operator pos:start="123:29" pos:end="123:29">=</operator> <operator pos:start="123:31" pos:end="123:31">-</operator><literal type="number" pos:start="123:32" pos:end="123:32">1</literal></expr>;</expr_stmt>

    <for pos:start="125:5" pos:end="135:5">for <control pos:start="125:9" pos:end="125:45">(<init pos:start="125:10" pos:end="125:15"><expr pos:start="125:10" pos:end="125:14"><name pos:start="125:10" pos:end="125:10">i</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <literal type="number" pos:start="125:14" pos:end="125:14">0</literal></expr>;</init> <condition pos:start="125:17" pos:end="125:40"><expr pos:start="125:17" pos:end="125:39"><name pos:start="125:17" pos:end="125:17">i</name> <operator pos:start="125:19" pos:end="125:19">&lt;</operator> <name pos:start="125:21" pos:end="125:39"><name pos:start="125:21" pos:end="125:27">devices</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:39">nb_devices</name></name></expr>;</condition> <incr pos:start="125:42" pos:end="125:44"><expr pos:start="125:42" pos:end="125:44"><name pos:start="125:42" pos:end="125:42">i</name><operator pos:start="125:43" pos:end="125:44">++</operator></expr></incr>)</control> <block pos:start="125:47" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:9">

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:79">(<expr pos:start="127:13" pos:end="127:78"><operator pos:start="127:13" pos:end="127:13">!</operator><call pos:start="127:14" pos:end="127:78"><name pos:start="127:14" pos:end="127:19">strcmp</name><argument_list pos:start="127:20" pos:end="127:78">(<argument pos:start="127:21" pos:end="127:52"><expr pos:start="127:21" pos:end="127:52"><name pos:start="127:21" pos:end="127:39"><name pos:start="127:21" pos:end="127:27">devices</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:36">devices</name><index pos:start="127:37" pos:end="127:39">[<expr pos:start="127:38" pos:end="127:38"><name pos:start="127:38" pos:end="127:38">i</name></expr>]</index></name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:52">device_name</name></expr></argument>, <argument pos:start="127:55" pos:end="127:77"><expr pos:start="127:55" pos:end="127:77"><name pos:start="127:55" pos:end="127:77"><name pos:start="127:55" pos:end="127:62">dev_list</name><operator pos:start="127:63" pos:end="127:63">.</operator><name pos:start="127:64" pos:end="127:77">default_device</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:81" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:18">

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:19">devices</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:35">default_device</name></name> <operator pos:start="129:37" pos:end="129:37">=</operator> <name pos:start="129:39" pos:end="129:39">i</name></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



  <label pos:start="139:3" pos:end="139:7"><name pos:start="139:3" pos:end="139:6">fail</name>:</label>

    <expr_stmt pos:start="141:5" pos:end="141:37"><expr pos:start="141:5" pos:end="141:36"><call pos:start="141:5" pos:end="141:36"><name pos:start="141:5" pos:end="141:11">av_free</name><argument_list pos:start="141:12" pos:end="141:36">(<argument pos:start="141:13" pos:end="141:35"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:20">dev_list</name><operator pos:start="141:21" pos:end="141:21">.</operator><name pos:start="141:22" pos:end="141:35">default_device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="145:38"><if pos:start="143:5" pos:end="145:38">if<condition pos:start="143:7" pos:end="143:14">(<expr pos:start="143:8" pos:end="143:13"><name pos:start="143:8" pos:end="143:13">pa_ctx</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:38"><block_content pos:start="145:9" pos:end="145:38">

        <expr_stmt pos:start="145:9" pos:end="145:38"><expr pos:start="145:9" pos:end="145:37"><call pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:29">pa_context_disconnect</name><argument_list pos:start="145:30" pos:end="145:37">(<argument pos:start="145:31" pos:end="145:36"><expr pos:start="145:31" pos:end="145:36"><name pos:start="145:31" pos:end="145:36">pa_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="149:33"><if pos:start="147:5" pos:end="149:33">if <condition pos:start="147:8" pos:end="147:15">(<expr pos:start="147:9" pos:end="147:14"><name pos:start="147:9" pos:end="147:14">pa_ctx</name></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:33"><block_content pos:start="149:9" pos:end="149:33">

        <expr_stmt pos:start="149:9" pos:end="149:33"><expr pos:start="149:9" pos:end="149:32"><call pos:start="149:9" pos:end="149:32"><name pos:start="149:9" pos:end="149:24">pa_context_unref</name><argument_list pos:start="149:25" pos:end="149:32">(<argument pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:31"><name pos:start="149:26" pos:end="149:31">pa_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="153:32"><if pos:start="151:5" pos:end="153:32">if <condition pos:start="151:8" pos:end="151:14">(<expr pos:start="151:9" pos:end="151:13"><name pos:start="151:9" pos:end="151:13">pa_ml</name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:32"><block_content pos:start="153:9" pos:end="153:32">

        <expr_stmt pos:start="153:9" pos:end="153:32"><expr pos:start="153:9" pos:end="153:31"><call pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:24">pa_mainloop_free</name><argument_list pos:start="153:25" pos:end="153:31">(<argument pos:start="153:26" pos:end="153:30"><expr pos:start="153:26" pos:end="153:30"><name pos:start="153:26" pos:end="153:30">pa_ml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="155:5" pos:end="155:31">return <expr pos:start="155:12" pos:end="155:30"><name pos:start="155:12" pos:end="155:30"><name pos:start="155:12" pos:end="155:19">dev_list</name><operator pos:start="155:20" pos:end="155:20">.</operator><name pos:start="155:21" pos:end="155:30">error_code</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
