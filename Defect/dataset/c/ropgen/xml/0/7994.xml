<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7994.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:32">ff_dsputil_init_ppc</name><parameter_list pos:start="1:33" pos:end="1:70">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">DSPContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:62">AVCodecContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="86:0">

    <decl_stmt pos:start="5:5" pos:end="5:62"><decl pos:start="5:5" pos:end="5:61"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:28">high_bit_depth</name> <init pos:start="5:30" pos:end="5:61">= <expr pos:start="5:32" pos:end="5:61"><name pos:start="5:32" pos:end="5:57"><name pos:start="5:32" pos:end="5:36">avctx</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:57">bits_per_raw_sample</name></name> <operator pos:start="5:59" pos:end="5:59">&gt;</operator> <literal type="number" pos:start="5:61" pos:end="5:61">8</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="9:5" pos:end="9:63">// Common optimizations whether AltiVec is available or not</comment>

    <if_stmt pos:start="11:5" pos:end="38:0"><if pos:start="11:5" pos:end="38:0">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:23">high_bit_depth</name></expr>)</condition> <block pos:start="11:26" pos:end="38:0">{<block_content pos:start="13:5" pos:end="31:5">

    <switch pos:start="13:5" pos:end="31:5">switch <condition pos:start="13:12" pos:end="13:33">(<expr pos:start="13:13" pos:end="13:32"><call pos:start="13:13" pos:end="13:32"><name pos:start="13:13" pos:end="13:30">check_dcbzl_effect</name><argument_list pos:start="13:31" pos:end="13:32">()</argument_list></call></expr>)</condition> <block pos:start="13:35" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:18">

        <case pos:start="15:9" pos:end="15:16">case <expr pos:start="15:14" pos:end="15:15"><literal type="number" pos:start="15:14" pos:end="15:15">32</literal></expr>:</case>

            <expr_stmt pos:start="17:13" pos:end="17:54"><expr pos:start="17:13" pos:end="17:53"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:13">c</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:27">clear_blocks</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:53">clear_blocks_dcbz32_ppc</name></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        <case pos:start="21:9" pos:end="21:17">case <expr pos:start="21:14" pos:end="21:16"><literal type="number" pos:start="21:14" pos:end="21:16">128</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:55"><expr pos:start="23:13" pos:end="23:54"><name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:13">c</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:27">clear_blocks</name></name> <operator pos:start="23:29" pos:end="23:29">=</operator> <name pos:start="23:31" pos:end="23:54">clear_blocks_dcbz128_ppc</name></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <default pos:start="27:9" pos:end="27:16">default:</default>

            <break pos:start="29:13" pos:end="29:18">break;</break>

    </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="37:1" pos:end="37:16">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:16">HAVE_ALTIVEC</name></expr></cpp:if>

    <if_stmt pos:start="39:5" pos:end="86:0"><if pos:start="39:5" pos:end="86:0">if <condition pos:start="39:8" pos:end="39:49">(<expr pos:start="39:9" pos:end="39:48"><call pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:24">av_get_cpu_flags</name><argument_list pos:start="39:25" pos:end="39:26">()</argument_list></call> <operator pos:start="39:28" pos:end="39:28">&amp;</operator> <name pos:start="39:30" pos:end="39:48">AV_CPU_FLAG_ALTIVEC</name></expr>)</condition> <block pos:start="39:51" pos:end="86:0">{<block_content pos:start="41:9" pos:end="79:9">

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><call pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:31">ff_dsputil_init_altivec</name><argument_list pos:start="41:32" pos:end="41:41">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">c</name></expr></argument>, <argument pos:start="41:36" pos:end="41:40"><expr pos:start="41:36" pos:end="41:40"><name pos:start="41:36" pos:end="41:40">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><call pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:27">ff_int_init_altivec</name><argument_list pos:start="43:28" pos:end="43:37">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">c</name></expr></argument>, <argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="50:0"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">gmc1</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:33">ff_gmc1_altivec</name></expr>;</expr_stmt>



<cpp:if pos:start="49:1" pos:end="49:19">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:19">CONFIG_ENCODERS</name></expr></cpp:if>

        <if_stmt pos:start="51:9" pos:end="62:0"><if pos:start="51:9" pos:end="62:0">if <condition pos:start="51:12" pos:end="55:48">(<expr pos:start="51:13" pos:end="55:47"><name pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:17">avctx</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:38">bits_per_raw_sample</name></name> <operator pos:start="51:40" pos:end="51:41">&lt;=</operator> <literal type="number" pos:start="51:43" pos:end="51:43">8</literal> <operator pos:start="51:45" pos:end="51:46">&amp;&amp;</operator>

            <operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:28"><name pos:start="53:14" pos:end="53:18">avctx</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:28">dct_algo</name></name> <operator pos:start="53:30" pos:end="53:31">==</operator> <name pos:start="53:33" pos:end="53:43">FF_DCT_AUTO</name> <operator pos:start="53:45" pos:end="53:46">||</operator>

             <name pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:18">avctx</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:28">dct_algo</name></name> <operator pos:start="55:30" pos:end="55:31">==</operator> <name pos:start="55:33" pos:end="55:46">FF_DCT_ALTIVEC</name><operator pos:start="55:47" pos:end="55:47">)</operator></expr>)</condition> <block pos:start="55:50" pos:end="62:0">{<block_content pos:start="57:13" pos:end="57:38">

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:13">c</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">fdct</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:37">ff_fdct_altivec</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif> <comment type="line" pos:start="61:8" pos:end="61:24">//CONFIG_ENCODERS</comment>



        <if_stmt pos:start="65:9" pos:end="79:9"><if pos:start="65:9" pos:end="79:9">if <condition pos:start="65:12" pos:end="65:44">(<expr pos:start="65:13" pos:end="65:43"><name pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:17">avctx</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:38">bits_per_raw_sample</name></name> <operator pos:start="65:40" pos:end="65:41">&lt;=</operator> <literal type="number" pos:start="65:43" pos:end="65:43">8</literal></expr>)</condition> <block pos:start="65:46" pos:end="79:9">{<block_content pos:start="67:13" pos:end="77:13">

            <if_stmt pos:start="67:13" pos:end="77:13"><if pos:start="67:13" pos:end="77:13">if <condition pos:start="67:16" pos:end="69:54">(<expr pos:start="67:17" pos:end="69:53"><operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:33"><name pos:start="67:18" pos:end="67:22">avctx</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:33">idct_algo</name></name> <operator pos:start="67:35" pos:end="67:36">==</operator> <name pos:start="67:38" pos:end="67:49">FF_IDCT_AUTO</name><operator pos:start="67:50" pos:end="67:50">)</operator> <operator pos:start="67:52" pos:end="67:53">||</operator>

                <operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:33"><name pos:start="69:18" pos:end="69:22">avctx</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:33">idct_algo</name></name> <operator pos:start="69:35" pos:end="69:36">==</operator> <name pos:start="69:38" pos:end="69:52">FF_IDCT_ALTIVEC</name><operator pos:start="69:53" pos:end="69:53">)</operator></expr>)</condition> <block pos:start="69:56" pos:end="77:13">{<block_content pos:start="71:17" pos:end="75:66">

                <expr_stmt pos:start="71:17" pos:end="71:50"><expr pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:17">c</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">idct_put</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:49">ff_idct_put_altivec</name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:50"><expr pos:start="73:17" pos:end="73:49"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:17">c</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:27">idct_add</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:49">ff_idct_add_altivec</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:66"><expr pos:start="75:17" pos:end="75:65"><name pos:start="75:17" pos:end="75:40"><name pos:start="75:17" pos:end="75:17">c</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:40">idct_permutation_type</name></name> <operator pos:start="75:42" pos:end="75:42">=</operator> <name pos:start="75:44" pos:end="75:65">FF_TRANSPOSE_IDCT_PERM</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="85:8" pos:end="85:25">/* HAVE_ALTIVEC */</comment>

</block_content>}</block></function>
</unit>
