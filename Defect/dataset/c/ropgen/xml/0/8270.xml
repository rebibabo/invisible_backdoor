<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8270.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">wm8750_event</name><parameter_list pos:start="1:24" pos:end="1:60">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">I2CSlave</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">i2c</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:43">enum</name> <name pos:start="1:45" pos:end="1:53">i2c_event</name></name></type> <name pos:start="1:55" pos:end="1:59">event</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">WM8750State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:32">= <expr pos:start="5:22" pos:end="5:32"><call pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:27">WM8750</name><argument_list pos:start="5:28" pos:end="5:32">(<argument pos:start="5:29" pos:end="5:31"><expr pos:start="5:29" pos:end="5:31"><name pos:start="5:29" pos:end="5:31">i2c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="35:5">switch <condition pos:start="9:12" pos:end="9:18">(<expr pos:start="9:13" pos:end="9:17"><name pos:start="9:13" pos:end="9:17">event</name></expr>)</condition> <block pos:start="9:20" pos:end="35:5">{<block_content pos:start="11:5" pos:end="33:14">

    <case pos:start="11:5" pos:end="11:24">case <expr pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:23">I2C_START_SEND</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">i2c_len</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="20:0">case <expr pos:start="17:10" pos:end="17:19"><name pos:start="17:10" pos:end="17:19">I2C_FINISH</name></expr>:</case>

<cpp:ifdef pos:start="19:1" pos:end="19:14">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:14">VERBOSE</name></cpp:ifdef>

        <if_stmt pos:start="21:9" pos:end="28:0"><if pos:start="21:9" pos:end="28:0">if <condition pos:start="21:12" pos:end="21:27">(<expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">i2c_len</name></name> <operator pos:start="21:24" pos:end="21:24">&lt;</operator> <literal type="number" pos:start="21:26" pos:end="21:26">2</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="28:0"><block_content pos:start="23:13" pos:end="28:0">

            <expr_stmt pos:start="23:13" pos:end="28:0"><expr pos:start="23:13" pos:end="25:53"><call pos:start="23:13" pos:end="25:53"><name pos:start="23:13" pos:end="23:18">printf</name><argument_list pos:start="23:19" pos:end="25:53">(<argument pos:start="23:20" pos:end="23:55"><expr pos:start="23:20" pos:end="23:55"><literal type="string" pos:start="23:20" pos:end="23:55">"%s: message too short (%i bytes)\n"</literal></expr></argument>,

                            <argument pos:start="25:29" pos:end="25:40"><expr pos:start="25:29" pos:end="25:40"><name pos:start="25:29" pos:end="25:40">__FUNCTION__</name></expr></argument>, <argument pos:start="25:43" pos:end="25:52"><expr pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:52"><name pos:start="25:43" pos:end="25:43">s</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:52">i2c_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
