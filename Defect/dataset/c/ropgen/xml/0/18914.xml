<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18914.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:37">bonito_spciconf_readl</name><parameter_list pos:start="1:38" pos:end="1:76">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:75"><decl pos:start="1:53" pos:end="1:75"><type pos:start="1:53" pos:end="1:75"><name pos:start="1:53" pos:end="1:70">target_phys_addr_t</name></type> <name pos:start="1:72" pos:end="1:75">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:55">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCIBonitoState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">d</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:29">PCI_DEVICE</name><argument_list pos:start="7:30" pos:end="7:32">(<argument pos:start="7:31" pos:end="7:31"><expr pos:start="7:31" pos:end="7:31"><name pos:start="7:31" pos:end="7:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">PCIHostState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">phb</name> <init pos:start="9:23" pos:end="9:51">= <expr pos:start="9:25" pos:end="9:51"><call pos:start="9:25" pos:end="9:51"><name pos:start="9:25" pos:end="9:39">PCI_HOST_BRIDGE</name><argument_list pos:start="9:40" pos:end="9:51">(<argument pos:start="9:41" pos:end="9:50"><expr pos:start="9:41" pos:end="9:50"><name pos:start="9:41" pos:end="9:50"><name pos:start="9:41" pos:end="9:41">s</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:50">pcihost</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:20">pciaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint16_t</name></type> <name pos:start="13:14" pos:end="13:19">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><call pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:11">DPRINTF</name><argument_list pos:start="17:12" pos:end="17:61">(<argument pos:start="17:13" pos:end="17:54"><expr pos:start="17:13" pos:end="17:54"><literal type="string" pos:start="17:13" pos:end="17:36">"bonito_spciconf_readl "</literal><name pos:start="17:37" pos:end="17:50">TARGET_FMT_plx</name><literal type="string" pos:start="17:51" pos:end="17:54">"\n"</literal></expr></argument>, <argument pos:start="17:57" pos:end="17:60"><expr pos:start="17:57" pos:end="17:60"><name pos:start="17:57" pos:end="17:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><call pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:29">(<argument pos:start="19:12" pos:end="19:28"><expr pos:start="19:12" pos:end="19:28"><operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:16">addr</name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <literal type="number" pos:start="19:20" pos:end="19:22">0x3</literal><operator pos:start="19:23" pos:end="19:23">)</operator> <operator pos:start="19:25" pos:end="19:26">==</operator> <literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:11">pciaddr</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:45"><name pos:start="23:15" pos:end="23:36">bonito_sbridge_pciaddr</name><argument_list pos:start="23:37" pos:end="23:45">(<argument pos:start="23:38" pos:end="23:38"><expr pos:start="23:38" pos:end="23:38"><name pos:start="23:38" pos:end="23:38">s</name></expr></argument>, <argument pos:start="23:41" pos:end="23:44"><expr pos:start="23:41" pos:end="23:44"><name pos:start="23:41" pos:end="23:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:15">pciaddr</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <literal type="number" pos:start="27:20" pos:end="27:29">0xffffffff</literal></expr>)</condition> <block pos:start="27:32" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:26">

        <return pos:start="29:9" pos:end="29:26">return <expr pos:start="29:16" pos:end="29:25"><literal type="number" pos:start="29:16" pos:end="29:25">0xffffffff</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:46">/* set the pci address in s-&gt;config_reg */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:7">phb</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:19">config_reg</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:30">pciaddr</name><operator pos:start="37:31" pos:end="37:31">)</operator> <operator pos:start="37:33" pos:end="37:33">|</operator> <operator pos:start="37:35" pos:end="37:35">(</operator><literal type="number" pos:start="37:36" pos:end="37:37">1u</literal> <operator pos:start="37:39" pos:end="37:40">&lt;&lt;</operator> <literal type="number" pos:start="37:42" pos:end="37:43">31</literal><operator pos:start="37:44" pos:end="37:44">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:75">/* clear PCI_STATUS_REC_MASTER_ABORT and PCI_STATUS_REC_TARGET_ABORT */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:10">status</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:49"><name pos:start="43:14" pos:end="43:25">pci_get_word</name><argument_list pos:start="43:26" pos:end="43:49">(<argument pos:start="43:27" pos:end="43:48"><expr pos:start="43:27" pos:end="43:48"><name pos:start="43:27" pos:end="43:35"><name pos:start="43:27" pos:end="43:27">d</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:35">config</name></name> <operator pos:start="43:37" pos:end="43:37">+</operator> <name pos:start="43:39" pos:end="43:48">PCI_STATUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:75"><expr pos:start="45:5" pos:end="45:74"><name pos:start="45:5" pos:end="45:10">status</name> <operator pos:start="45:12" pos:end="45:13">&amp;=</operator> <operator pos:start="45:15" pos:end="45:15">~</operator><operator pos:start="45:16" pos:end="45:16">(</operator><name pos:start="45:17" pos:end="45:43">PCI_STATUS_REC_MASTER_ABORT</name> <operator pos:start="45:45" pos:end="45:45">|</operator> <name pos:start="45:47" pos:end="45:73">PCI_STATUS_REC_TARGET_ABORT</name><operator pos:start="45:74" pos:end="45:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><call pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:16">pci_set_word</name><argument_list pos:start="47:17" pos:end="47:48">(<argument pos:start="47:18" pos:end="47:39"><expr pos:start="47:18" pos:end="47:39"><name pos:start="47:18" pos:end="47:26"><name pos:start="47:18" pos:end="47:18">d</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:26">config</name></name> <operator pos:start="47:28" pos:end="47:28">+</operator> <name pos:start="47:30" pos:end="47:39">PCI_STATUS</name></expr></argument>, <argument pos:start="47:42" pos:end="47:47"><expr pos:start="47:42" pos:end="47:47"><name pos:start="47:42" pos:end="47:47">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:55">return <expr pos:start="51:12" pos:end="51:54"><call pos:start="51:12" pos:end="51:54"><name pos:start="51:12" pos:end="51:24">pci_data_read</name><argument_list pos:start="51:25" pos:end="51:54">(<argument pos:start="51:26" pos:end="51:33"><expr pos:start="51:26" pos:end="51:33"><name pos:start="51:26" pos:end="51:33"><name pos:start="51:26" pos:end="51:28">phb</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:33">bus</name></name></expr></argument>, <argument pos:start="51:36" pos:end="51:50"><expr pos:start="51:36" pos:end="51:50"><name pos:start="51:36" pos:end="51:50"><name pos:start="51:36" pos:end="51:38">phb</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:50">config_reg</name></name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">4</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
