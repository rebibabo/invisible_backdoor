<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24574.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">mxf_write_partition</name><parameter_list pos:start="1:32" pos:end="5:71">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:63">bodysid</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:44">indexsid</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:50"><decl pos:start="5:33" pos:end="5:50"><type pos:start="5:33" pos:end="5:50"><specifier pos:start="5:33" pos:end="5:37">const</specifier> <name pos:start="5:39" pos:end="5:45">uint8_t</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:50">key</name></decl></parameter>, <parameter pos:start="5:53" pos:end="5:70"><decl pos:start="5:53" pos:end="5:70"><type pos:start="5:53" pos:end="5:70"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:70">write_metadata</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="193:1">{<block_content pos:start="9:5" pos:end="191:25">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">MXFContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">mxf</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">ByteIOContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">pb</name> <init pos:start="11:23" pos:end="11:29">= <expr pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:36">header_byte_count_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:29">index_byte_count</name> <init pos:start="15:31" pos:end="15:33">= <expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:29">partition_offset</name> <init pos:start="17:31" pos:end="17:45">= <expr pos:start="17:33" pos:end="17:45"><call pos:start="17:33" pos:end="17:45"><name pos:start="17:33" pos:end="17:41">url_ftell</name><argument_list pos:start="17:42" pos:end="17:45">(<argument pos:start="17:43" pos:end="17:44"><expr pos:start="17:43" pos:end="17:44"><name pos:start="17:43" pos:end="17:44">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:30">(<expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:11">mxf</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:29">edit_units_count</name></name></expr>)</condition> <block pos:start="21:32" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:60">

        <expr_stmt pos:start="23:9" pos:end="25:58"><expr pos:start="23:9" pos:end="25:57"><name pos:start="23:9" pos:end="23:24">index_byte_count</name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:32">109</literal> <operator pos:start="23:32" pos:end="23:32">+</operator> <operator pos:start="23:34" pos:end="23:34">(</operator><name pos:start="23:35" pos:end="23:47"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:47">nb_streams</name></name><operator pos:start="23:48" pos:end="23:48">+</operator><literal type="number" pos:start="23:49" pos:end="23:49">1</literal><operator pos:start="23:50" pos:end="23:50">)</operator><operator pos:start="23:51" pos:end="23:51">*</operator><literal type="number" pos:start="23:52" pos:end="23:54">6</literal> <operator pos:start="23:54" pos:end="23:54">+</operator>

            <name pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:15">mxf</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:33">edit_units_count</name></name><operator pos:start="25:34" pos:end="25:34">*</operator><operator pos:start="25:35" pos:end="25:35">(</operator><literal type="number" pos:start="25:36" pos:end="25:38">11</literal><operator pos:start="25:38" pos:end="25:38">+</operator><name pos:start="25:39" pos:end="25:54"><name pos:start="25:39" pos:end="25:41">mxf</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:54">slice_count</name></name><operator pos:start="25:55" pos:end="25:55">*</operator><literal type="number" pos:start="25:56" pos:end="25:56">4</literal><operator pos:start="25:57" pos:end="25:57">)</operator></expr>;</expr_stmt>

        <comment type="line" pos:start="27:9" pos:end="27:33">// add encoded ber length</comment>

        <expr_stmt pos:start="29:9" pos:end="29:66"><expr pos:start="29:9" pos:end="29:65"><name pos:start="29:9" pos:end="29:24">index_byte_count</name> <operator pos:start="29:26" pos:end="29:27">+=</operator> <literal type="number" pos:start="29:29" pos:end="29:32">16</literal> <operator pos:start="29:32" pos:end="29:32">+</operator> <call pos:start="29:34" pos:end="29:65"><name pos:start="29:34" pos:end="29:47">klv_ber_length</name><argument_list pos:start="29:48" pos:end="29:65">(<argument pos:start="29:49" pos:end="29:64"><expr pos:start="29:49" pos:end="29:64"><name pos:start="29:49" pos:end="29:64">index_byte_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:24">index_byte_count</name> <operator pos:start="31:26" pos:end="31:27">+=</operator> <call pos:start="31:29" pos:end="31:59"><name pos:start="31:29" pos:end="31:41">klv_fill_size</name><argument_list pos:start="31:42" pos:end="31:59">(<argument pos:start="31:43" pos:end="31:58"><expr pos:start="31:43" pos:end="31:58"><name pos:start="31:43" pos:end="31:58">index_byte_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:45">(<expr pos:start="37:9" pos:end="37:44"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:44"><name pos:start="37:10" pos:end="37:15">memcmp</name><argument_list pos:start="37:16" pos:end="37:44">(<argument pos:start="37:17" pos:end="37:19"><expr pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:19">key</name></expr></argument>, <argument pos:start="37:22" pos:end="37:39"><expr pos:start="37:22" pos:end="37:39"><name pos:start="37:22" pos:end="37:39">body_partition_key</name></expr></argument>, <argument pos:start="37:42" pos:end="37:43"><expr pos:start="37:42" pos:end="37:43"><literal type="number" pos:start="37:42" pos:end="37:43">16</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:47" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:84">

        <expr_stmt pos:start="39:9" pos:end="45:60"><expr pos:start="39:9" pos:end="45:59"><name pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:11">mxf</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:34">body_partition_offset</name></name> <operator pos:start="39:36" pos:end="39:36">=</operator>

            <call pos:start="41:13" pos:end="45:59"><name pos:start="41:13" pos:end="41:22">av_realloc</name><argument_list pos:start="41:23" pos:end="45:59">(<argument pos:start="41:24" pos:end="41:49"><expr pos:start="41:24" pos:end="41:49"><name pos:start="41:24" pos:end="41:49"><name pos:start="41:24" pos:end="41:26">mxf</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:49">body_partition_offset</name></name></expr></argument>,

                       <argument pos:start="43:24" pos:end="45:58"><expr pos:start="43:24" pos:end="45:58"><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:50"><name pos:start="43:25" pos:end="43:27">mxf</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:50">body_partitions_count</name></name><operator pos:start="43:51" pos:end="43:51">+</operator><literal type="number" pos:start="43:52" pos:end="43:52">1</literal><operator pos:start="43:53" pos:end="43:53">)</operator><operator pos:start="43:54" pos:end="43:54">*</operator>

                       <sizeof pos:start="45:24" pos:end="45:58">sizeof<argument_list pos:start="45:30" pos:end="45:58">(<argument pos:start="45:31" pos:end="45:57"><expr pos:start="45:31" pos:end="45:57"><operator pos:start="45:31" pos:end="45:31">*</operator><name pos:start="45:32" pos:end="45:57"><name pos:start="45:32" pos:end="45:34">mxf</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:57">body_partition_offset</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:84"><expr pos:start="47:9" pos:end="47:83"><name pos:start="47:9" pos:end="47:64"><name pos:start="47:9" pos:end="47:11">mxf</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:34">body_partition_offset</name><index pos:start="47:35" pos:end="47:64">[<expr pos:start="47:36" pos:end="47:63"><name pos:start="47:36" pos:end="47:61"><name pos:start="47:36" pos:end="47:38">mxf</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:61">body_partitions_count</name></name><operator pos:start="47:62" pos:end="47:63">++</operator></expr>]</index></name> <operator pos:start="47:66" pos:end="47:66">=</operator> <name pos:start="47:68" pos:end="47:83">partition_offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="53:5" pos:end="53:16">// write klv</comment>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><call pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:14">put_buffer</name><argument_list pos:start="55:15" pos:end="55:27">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">pb</name></expr></argument>, <argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">key</name></expr></argument>, <argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><literal type="number" pos:start="55:25" pos:end="55:26">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:70"><expr pos:start="59:5" pos:end="59:69"><call pos:start="59:5" pos:end="59:69"><name pos:start="59:5" pos:end="59:25">klv_encode_ber_length</name><argument_list pos:start="59:26" pos:end="59:69">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">pb</name></expr></argument>, <argument pos:start="59:31" pos:end="59:68"><expr pos:start="59:31" pos:end="59:68"><literal type="number" pos:start="59:31" pos:end="59:34">88</literal> <operator pos:start="59:34" pos:end="59:34">+</operator> <literal type="number" pos:start="59:36" pos:end="59:37">16</literal> <operator pos:start="59:39" pos:end="59:39">*</operator> <name pos:start="59:41" pos:end="59:68"><name pos:start="59:41" pos:end="59:43">mxf</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:68">essence_container_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:28">// write partition value</comment>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><call pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:12">put_be16</name><argument_list pos:start="65:13" pos:end="65:19">(<argument pos:start="65:14" pos:end="65:15"><expr pos:start="65:14" pos:end="65:15"><name pos:start="65:14" pos:end="65:15">pb</name></expr></argument>, <argument pos:start="65:18" pos:end="65:18"><expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:22" pos:end="65:36">// majorVersion</comment>

    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><call pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:12">put_be16</name><argument_list pos:start="67:13" pos:end="67:19">(<argument pos:start="67:14" pos:end="67:15"><expr pos:start="67:14" pos:end="67:15"><name pos:start="67:14" pos:end="67:15">pb</name></expr></argument>, <argument pos:start="67:18" pos:end="67:18"><expr pos:start="67:18" pos:end="67:18"><literal type="number" pos:start="67:18" pos:end="67:18">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="67:22" pos:end="67:36">// minorVersion</comment>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:12">put_be32</name><argument_list pos:start="69:13" pos:end="69:26">(<argument pos:start="69:14" pos:end="69:15"><expr pos:start="69:14" pos:end="69:15"><name pos:start="69:14" pos:end="69:15">pb</name></expr></argument>, <argument pos:start="69:18" pos:end="69:25"><expr pos:start="69:18" pos:end="69:25"><name pos:start="69:18" pos:end="69:25">KAG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="69:29" pos:end="69:38">// KAGSize</comment>



    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><call pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:12">put_be64</name><argument_list pos:start="73:13" pos:end="73:34">(<argument pos:start="73:14" pos:end="73:15"><expr pos:start="73:14" pos:end="73:15"><name pos:start="73:14" pos:end="73:15">pb</name></expr></argument>, <argument pos:start="73:18" pos:end="73:33"><expr pos:start="73:18" pos:end="73:33"><name pos:start="73:18" pos:end="73:33">partition_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="73:37" pos:end="73:52">// ThisPartition</comment>



    <if_stmt pos:start="77:5" pos:end="87:24"><if pos:start="77:5" pos:end="79:79">if <condition pos:start="77:8" pos:end="77:79">(<expr pos:start="77:9" pos:end="77:78"><operator pos:start="77:9" pos:end="77:9">!</operator><call pos:start="77:10" pos:end="77:44"><name pos:start="77:10" pos:end="77:15">memcmp</name><argument_list pos:start="77:16" pos:end="77:44">(<argument pos:start="77:17" pos:end="77:19"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">key</name></expr></argument>, <argument pos:start="77:22" pos:end="77:39"><expr pos:start="77:22" pos:end="77:39"><name pos:start="77:22" pos:end="77:39">body_partition_key</name></expr></argument>, <argument pos:start="77:42" pos:end="77:43"><expr pos:start="77:42" pos:end="77:43"><literal type="number" pos:start="77:42" pos:end="77:43">16</literal></expr></argument>)</argument_list></call> <operator pos:start="77:46" pos:end="77:47">&amp;&amp;</operator> <name pos:start="77:49" pos:end="77:74"><name pos:start="77:49" pos:end="77:51">mxf</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:74">body_partitions_count</name></name> <operator pos:start="77:76" pos:end="77:76">&gt;</operator> <literal type="number" pos:start="77:78" pos:end="77:78">1</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:79"><block_content pos:start="79:9" pos:end="79:79">

        <expr_stmt pos:start="79:9" pos:end="79:79"><expr pos:start="79:9" pos:end="79:78"><call pos:start="79:9" pos:end="79:78"><name pos:start="79:9" pos:end="79:16">put_be64</name><argument_list pos:start="79:17" pos:end="79:78">(<argument pos:start="79:18" pos:end="79:19"><expr pos:start="79:18" pos:end="79:19"><name pos:start="79:18" pos:end="79:19">pb</name></expr></argument>, <argument pos:start="79:22" pos:end="79:77"><expr pos:start="79:22" pos:end="79:77"><name pos:start="79:22" pos:end="79:77"><name pos:start="79:22" pos:end="79:24">mxf</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:47">body_partition_offset</name><index pos:start="79:48" pos:end="79:77">[<expr pos:start="79:49" pos:end="79:76"><name pos:start="79:49" pos:end="79:74"><name pos:start="79:49" pos:end="79:51">mxf</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:74">body_partitions_count</name></name><operator pos:start="79:75" pos:end="79:75">-</operator><literal type="number" pos:start="79:76" pos:end="79:76">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="79:81" pos:end="79:100">// PreviousPartition</comment>

    <if type="elseif" pos:start="81:5" pos:end="83:79">else if <condition pos:start="81:13" pos:end="81:52">(<expr pos:start="81:14" pos:end="81:51"><operator pos:start="81:14" pos:end="81:14">!</operator><call pos:start="81:15" pos:end="81:51"><name pos:start="81:15" pos:end="81:20">memcmp</name><argument_list pos:start="81:21" pos:end="81:51">(<argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">key</name></expr></argument>, <argument pos:start="81:27" pos:end="81:46"><expr pos:start="81:27" pos:end="81:46"><name pos:start="81:27" pos:end="81:46">footer_partition_key</name></expr></argument>, <argument pos:start="81:49" pos:end="81:50"><expr pos:start="81:49" pos:end="81:50"><literal type="number" pos:start="81:49" pos:end="81:50">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:79"><block_content pos:start="83:9" pos:end="83:79">

        <expr_stmt pos:start="83:9" pos:end="83:79"><expr pos:start="83:9" pos:end="83:78"><call pos:start="83:9" pos:end="83:78"><name pos:start="83:9" pos:end="83:16">put_be64</name><argument_list pos:start="83:17" pos:end="83:78">(<argument pos:start="83:18" pos:end="83:19"><expr pos:start="83:18" pos:end="83:19"><name pos:start="83:18" pos:end="83:19">pb</name></expr></argument>, <argument pos:start="83:22" pos:end="83:77"><expr pos:start="83:22" pos:end="83:77"><name pos:start="83:22" pos:end="83:77"><name pos:start="83:22" pos:end="83:24">mxf</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:47">body_partition_offset</name><index pos:start="83:48" pos:end="83:77">[<expr pos:start="83:49" pos:end="83:76"><name pos:start="83:49" pos:end="83:74"><name pos:start="83:49" pos:end="83:51">mxf</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:74">body_partitions_count</name></name><operator pos:start="83:75" pos:end="83:75">-</operator><literal type="number" pos:start="83:76" pos:end="83:76">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="83:81" pos:end="83:100">// PreviousPartition</comment>

    <else pos:start="85:5" pos:end="87:24">else<block type="pseudo" pos:start="87:9" pos:end="87:24"><block_content pos:start="87:9" pos:end="87:24">

        <expr_stmt pos:start="87:9" pos:end="87:24"><expr pos:start="87:9" pos:end="87:23"><call pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:16">put_be64</name><argument_list pos:start="87:17" pos:end="87:23">(<argument pos:start="87:18" pos:end="87:19"><expr pos:start="87:18" pos:end="87:19"><name pos:start="87:18" pos:end="87:19">pb</name></expr></argument>, <argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:47"><expr pos:start="91:5" pos:end="91:46"><call pos:start="91:5" pos:end="91:46"><name pos:start="91:5" pos:end="91:12">put_be64</name><argument_list pos:start="91:13" pos:end="91:46">(<argument pos:start="91:14" pos:end="91:15"><expr pos:start="91:14" pos:end="91:15"><name pos:start="91:14" pos:end="91:15">pb</name></expr></argument>, <argument pos:start="91:18" pos:end="91:45"><expr pos:start="91:18" pos:end="91:45"><name pos:start="91:18" pos:end="91:45"><name pos:start="91:18" pos:end="91:20">mxf</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:45">footer_partition_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="91:49" pos:end="91:66">// footerPartition</comment>



    <comment type="line" pos:start="95:5" pos:end="95:17">// set offset</comment>

    <expr_stmt pos:start="97:5" pos:end="97:45"><expr pos:start="97:5" pos:end="97:44"><name pos:start="97:5" pos:end="97:28">header_byte_count_offset</name> <operator pos:start="97:30" pos:end="97:30">=</operator> <call pos:start="97:32" pos:end="97:44"><name pos:start="97:32" pos:end="97:40">url_ftell</name><argument_list pos:start="97:41" pos:end="97:44">(<argument pos:start="97:42" pos:end="97:43"><expr pos:start="97:42" pos:end="97:43"><name pos:start="97:42" pos:end="97:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:20"><expr pos:start="99:5" pos:end="99:19"><call pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:12">put_be64</name><argument_list pos:start="99:13" pos:end="99:19">(<argument pos:start="99:14" pos:end="99:15"><expr pos:start="99:14" pos:end="99:15"><name pos:start="99:14" pos:end="99:15">pb</name></expr></argument>, <argument pos:start="99:18" pos:end="99:18"><expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="99:22" pos:end="99:53">// headerByteCount, update later</comment>



    <comment type="line" pos:start="103:5" pos:end="103:17">// indexTable</comment>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><call pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:12">put_be64</name><argument_list pos:start="105:13" pos:end="105:34">(<argument pos:start="105:14" pos:end="105:15"><expr pos:start="105:14" pos:end="105:15"><name pos:start="105:14" pos:end="105:15">pb</name></expr></argument>, <argument pos:start="105:18" pos:end="105:33"><expr pos:start="105:18" pos:end="105:33"><name pos:start="105:18" pos:end="105:33">index_byte_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="105:37" pos:end="105:53">// indexByteCount</comment>

    <expr_stmt pos:start="107:5" pos:end="107:50"><expr pos:start="107:5" pos:end="107:49"><call pos:start="107:5" pos:end="107:49"><name pos:start="107:5" pos:end="107:12">put_be32</name><argument_list pos:start="107:13" pos:end="107:49">(<argument pos:start="107:14" pos:end="107:15"><expr pos:start="107:14" pos:end="107:15"><name pos:start="107:14" pos:end="107:15">pb</name></expr></argument>, <argument pos:start="107:18" pos:end="107:48"><expr pos:start="107:18" pos:end="107:48"><ternary pos:start="107:18" pos:end="107:48"><condition pos:start="107:18" pos:end="107:35"><expr pos:start="107:18" pos:end="107:33"><name pos:start="107:18" pos:end="107:33">index_byte_count</name></expr> ?</condition><then pos:start="107:37" pos:end="107:44"> <expr pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:44">indexsid</name></expr> </then><else pos:start="107:46" pos:end="107:48">: <expr pos:start="107:48" pos:end="107:48"><literal type="number" pos:start="107:48" pos:end="107:48">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="107:52" pos:end="107:62">// indexSID</comment>



    <comment type="line" pos:start="111:5" pos:end="111:17">// BodyOffset</comment>

    <if_stmt pos:start="113:5" pos:end="125:24"><if pos:start="113:5" pos:end="123:5">if <condition pos:start="113:8" pos:end="113:41">(<expr pos:start="113:9" pos:end="113:40"><name pos:start="113:9" pos:end="113:15">bodysid</name> <operator pos:start="113:17" pos:end="113:18">&amp;&amp;</operator> <name pos:start="113:20" pos:end="113:40"><name pos:start="113:20" pos:end="113:22">mxf</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:40">edit_units_count</name></name></expr>)</condition> <block pos:start="113:43" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:65">

        <decl_stmt pos:start="115:9" pos:end="117:44"><decl pos:start="115:9" pos:end="117:43"><type pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:16">uint64_t</name></type> <name pos:start="115:18" pos:end="115:30">partition_end</name> <init pos:start="115:32" pos:end="117:43">= <expr pos:start="115:34" pos:end="117:43"><call pos:start="115:34" pos:end="115:46"><name pos:start="115:34" pos:end="115:42">url_ftell</name><argument_list pos:start="115:43" pos:end="115:46">(<argument pos:start="115:44" pos:end="115:45"><expr pos:start="115:44" pos:end="115:45"><name pos:start="115:44" pos:end="115:45">pb</name></expr></argument>)</argument_list></call> <operator pos:start="115:48" pos:end="115:48">+</operator> <literal type="number" pos:start="115:50" pos:end="115:52">8</literal> <operator pos:start="115:52" pos:end="115:52">+</operator> <literal type="number" pos:start="115:54" pos:end="115:56">4</literal> <operator pos:start="115:56" pos:end="115:56">+</operator> <literal type="number" pos:start="115:58" pos:end="115:61">16</literal> <operator pos:start="115:61" pos:end="115:61">+</operator> <literal type="number" pos:start="115:63" pos:end="115:65">8</literal> <operator pos:start="115:65" pos:end="115:65">+</operator>

            <literal type="number" pos:start="117:13" pos:end="117:14">16</literal><operator pos:start="117:15" pos:end="117:15">*</operator><name pos:start="117:16" pos:end="117:43"><name pos:start="117:16" pos:end="117:18">mxf</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:43">essence_container_count</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="121:65"><expr pos:start="119:9" pos:end="121:64"><call pos:start="119:9" pos:end="121:64"><name pos:start="119:9" pos:end="119:16">put_be64</name><argument_list pos:start="119:17" pos:end="121:64">(<argument pos:start="119:18" pos:end="119:19"><expr pos:start="119:18" pos:end="119:19"><name pos:start="119:18" pos:end="119:19">pb</name></expr></argument>, <argument pos:start="119:22" pos:end="121:63"><expr pos:start="119:22" pos:end="121:63"><name pos:start="119:22" pos:end="119:34">partition_end</name> <operator pos:start="119:36" pos:end="119:36">+</operator> <call pos:start="119:38" pos:end="119:65"><name pos:start="119:38" pos:end="119:50">klv_fill_size</name><argument_list pos:start="119:51" pos:end="119:65">(<argument pos:start="119:52" pos:end="119:64"><expr pos:start="119:52" pos:end="119:64"><name pos:start="119:52" pos:end="119:64">partition_end</name></expr></argument>)</argument_list></call> <operator pos:start="119:67" pos:end="119:67">+</operator>

                 <name pos:start="121:18" pos:end="121:33">index_byte_count</name> <operator pos:start="121:35" pos:end="121:35">-</operator> <name pos:start="121:37" pos:end="121:63"><name pos:start="121:37" pos:end="121:39">mxf</name><operator pos:start="121:40" pos:end="121:41">-&gt;</operator><name pos:start="121:42" pos:end="121:63">first_edit_unit_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="125:24">else<block type="pseudo" pos:start="125:9" pos:end="125:24"><block_content pos:start="125:9" pos:end="125:24">

        <expr_stmt pos:start="125:9" pos:end="125:24"><expr pos:start="125:9" pos:end="125:23"><call pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:16">put_be64</name><argument_list pos:start="125:17" pos:end="125:23">(<argument pos:start="125:18" pos:end="125:19"><expr pos:start="125:18" pos:end="125:19"><name pos:start="125:18" pos:end="125:19">pb</name></expr></argument>, <argument pos:start="125:22" pos:end="125:22"><expr pos:start="125:22" pos:end="125:22"><literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:26"><expr pos:start="129:5" pos:end="129:25"><call pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:12">put_be32</name><argument_list pos:start="129:13" pos:end="129:25">(<argument pos:start="129:14" pos:end="129:15"><expr pos:start="129:14" pos:end="129:15"><name pos:start="129:14" pos:end="129:15">pb</name></expr></argument>, <argument pos:start="129:18" pos:end="129:24"><expr pos:start="129:18" pos:end="129:24"><name pos:start="129:18" pos:end="129:24">bodysid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="129:28" pos:end="129:37">// bodySID</comment>



    <comment type="line" pos:start="133:5" pos:end="133:26">// operational pattern</comment>

    <if_stmt pos:start="135:5" pos:end="145:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:26">(<expr pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:21">nb_streams</name></name> <operator pos:start="135:23" pos:end="135:23">&gt;</operator> <literal type="number" pos:start="135:25" pos:end="135:25">1</literal></expr>)</condition> <block pos:start="135:28" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:29">

        <expr_stmt pos:start="137:9" pos:end="137:36"><expr pos:start="137:9" pos:end="137:35"><call pos:start="137:9" pos:end="137:35"><name pos:start="137:9" pos:end="137:18">put_buffer</name><argument_list pos:start="137:19" pos:end="137:35">(<argument pos:start="137:20" pos:end="137:21"><expr pos:start="137:20" pos:end="137:21"><name pos:start="137:20" pos:end="137:21">pb</name></expr></argument>, <argument pos:start="137:24" pos:end="137:30"><expr pos:start="137:24" pos:end="137:30"><name pos:start="137:24" pos:end="137:30">op1a_ul</name></expr></argument>, <argument pos:start="137:33" pos:end="137:34"><expr pos:start="137:33" pos:end="137:34"><literal type="number" pos:start="137:33" pos:end="137:34">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><call pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:16">put_be16</name><argument_list pos:start="139:17" pos:end="139:28">(<argument pos:start="139:18" pos:end="139:19"><expr pos:start="139:18" pos:end="139:19"><name pos:start="139:18" pos:end="139:19">pb</name></expr></argument>, <argument pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:27"><literal type="number" pos:start="139:22" pos:end="139:27">0x0900</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="139:31" pos:end="139:44">// multi track</comment>

    </block_content>}</block></if> <else pos:start="141:7" pos:end="145:5">else <block pos:start="141:12" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:36">

        <expr_stmt pos:start="143:9" pos:end="143:36"><expr pos:start="143:9" pos:end="143:35"><call pos:start="143:9" pos:end="143:35"><name pos:start="143:9" pos:end="143:18">put_buffer</name><argument_list pos:start="143:19" pos:end="143:35">(<argument pos:start="143:20" pos:end="143:21"><expr pos:start="143:20" pos:end="143:21"><name pos:start="143:20" pos:end="143:21">pb</name></expr></argument>, <argument pos:start="143:24" pos:end="143:30"><expr pos:start="143:24" pos:end="143:30"><name pos:start="143:24" pos:end="143:30">op1a_ul</name></expr></argument>, <argument pos:start="143:33" pos:end="143:34"><expr pos:start="143:33" pos:end="143:34"><literal type="number" pos:start="143:33" pos:end="143:34">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="149:5" pos:end="149:24">// essence container</comment>

    <expr_stmt pos:start="151:5" pos:end="151:40"><expr pos:start="151:5" pos:end="151:39"><call pos:start="151:5" pos:end="151:39"><name pos:start="151:5" pos:end="151:36">mxf_write_essence_container_refs</name><argument_list pos:start="151:37" pos:end="151:39">(<argument pos:start="151:38" pos:end="151:38"><expr pos:start="151:38" pos:end="151:38"><name pos:start="151:38" pos:end="151:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="155:5" pos:end="187:5"><if pos:start="155:5" pos:end="187:5">if <condition pos:start="155:8" pos:end="155:23">(<expr pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:22">write_metadata</name></expr>)</condition> <block pos:start="155:25" pos:end="187:5">{<block_content pos:start="159:9" pos:end="185:37">

        <comment type="line" pos:start="157:9" pos:end="157:75">// mark the start of the headermetadata and calculate metadata size</comment>

        <decl_stmt pos:start="159:9" pos:end="159:27"><decl pos:start="159:9" pos:end="159:19"><type pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:15">int64_t</name></type> <name pos:start="159:17" pos:end="159:19">pos</name></decl>, <decl pos:start="159:22" pos:end="159:26"><type ref="prev" pos:start="159:9" pos:end="159:15"/><name pos:start="159:22" pos:end="159:26">start</name></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:35"><decl pos:start="161:9" pos:end="161:34"><type pos:start="161:9" pos:end="161:16"><name pos:start="161:9" pos:end="161:16">unsigned</name></type> <name pos:start="161:18" pos:end="161:34">header_byte_count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:30"><expr pos:start="165:9" pos:end="165:29"><call pos:start="165:9" pos:end="165:29"><name pos:start="165:9" pos:end="165:26">mxf_write_klv_fill</name><argument_list pos:start="165:27" pos:end="165:29">(<argument pos:start="165:28" pos:end="165:28"><expr pos:start="165:28" pos:end="165:28"><name pos:start="165:28" pos:end="165:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:33"><expr pos:start="167:9" pos:end="167:32"><name pos:start="167:9" pos:end="167:13">start</name> <operator pos:start="167:15" pos:end="167:15">=</operator> <call pos:start="167:17" pos:end="167:32"><name pos:start="167:17" pos:end="167:25">url_ftell</name><argument_list pos:start="167:26" pos:end="167:32">(<argument pos:start="167:27" pos:end="167:31"><expr pos:start="167:27" pos:end="167:31"><name pos:start="167:27" pos:end="167:31"><name pos:start="167:27" pos:end="167:27">s</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:33"><expr pos:start="169:9" pos:end="169:32"><call pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:29">mxf_write_primer_pack</name><argument_list pos:start="169:30" pos:end="169:32">(<argument pos:start="169:31" pos:end="169:31"><expr pos:start="169:31" pos:end="169:31"><name pos:start="169:31" pos:end="169:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:42"><expr pos:start="171:9" pos:end="171:41"><call pos:start="171:9" pos:end="171:41"><name pos:start="171:9" pos:end="171:38">mxf_write_header_metadata_sets</name><argument_list pos:start="171:39" pos:end="171:41">(<argument pos:start="171:40" pos:end="171:40"><expr pos:start="171:40" pos:end="171:40"><name pos:start="171:40" pos:end="171:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:31"><expr pos:start="173:9" pos:end="173:30"><name pos:start="173:9" pos:end="173:11">pos</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:30"><name pos:start="173:15" pos:end="173:23">url_ftell</name><argument_list pos:start="173:24" pos:end="173:30">(<argument pos:start="173:25" pos:end="173:29"><expr pos:start="173:25" pos:end="173:29"><name pos:start="173:25" pos:end="173:29"><name pos:start="173:25" pos:end="173:25">s</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:61"><expr pos:start="175:9" pos:end="175:60"><name pos:start="175:9" pos:end="175:25">header_byte_count</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:31">pos</name> <operator pos:start="175:33" pos:end="175:33">-</operator> <name pos:start="175:35" pos:end="175:39">start</name> <operator pos:start="175:41" pos:end="175:41">+</operator> <call pos:start="175:43" pos:end="175:60"><name pos:start="175:43" pos:end="175:55">klv_fill_size</name><argument_list pos:start="175:56" pos:end="175:60">(<argument pos:start="175:57" pos:end="175:59"><expr pos:start="175:57" pos:end="175:59"><name pos:start="175:57" pos:end="175:59">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="179:9" pos:end="179:35">// update header_byte_count</comment>

        <expr_stmt pos:start="181:9" pos:end="181:58"><expr pos:start="181:9" pos:end="181:57"><call pos:start="181:9" pos:end="181:57"><name pos:start="181:9" pos:end="181:17">url_fseek</name><argument_list pos:start="181:18" pos:end="181:57">(<argument pos:start="181:19" pos:end="181:20"><expr pos:start="181:19" pos:end="181:20"><name pos:start="181:19" pos:end="181:20">pb</name></expr></argument>, <argument pos:start="181:23" pos:end="181:46"><expr pos:start="181:23" pos:end="181:46"><name pos:start="181:23" pos:end="181:46">header_byte_count_offset</name></expr></argument>, <argument pos:start="181:49" pos:end="181:56"><expr pos:start="181:49" pos:end="181:56"><name pos:start="181:49" pos:end="181:56">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:40"><expr pos:start="183:9" pos:end="183:39"><call pos:start="183:9" pos:end="183:39"><name pos:start="183:9" pos:end="183:16">put_be64</name><argument_list pos:start="183:17" pos:end="183:39">(<argument pos:start="183:18" pos:end="183:19"><expr pos:start="183:18" pos:end="183:19"><name pos:start="183:18" pos:end="183:19">pb</name></expr></argument>, <argument pos:start="183:22" pos:end="183:38"><expr pos:start="183:22" pos:end="183:38"><name pos:start="183:22" pos:end="183:38">header_byte_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:37"><expr pos:start="185:9" pos:end="185:36"><call pos:start="185:9" pos:end="185:36"><name pos:start="185:9" pos:end="185:17">url_fseek</name><argument_list pos:start="185:18" pos:end="185:36">(<argument pos:start="185:19" pos:end="185:20"><expr pos:start="185:19" pos:end="185:20"><name pos:start="185:19" pos:end="185:20">pb</name></expr></argument>, <argument pos:start="185:23" pos:end="185:25"><expr pos:start="185:23" pos:end="185:25"><name pos:start="185:23" pos:end="185:25">pos</name></expr></argument>, <argument pos:start="185:28" pos:end="185:35"><expr pos:start="185:28" pos:end="185:35"><name pos:start="185:28" pos:end="185:35">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:25"><expr pos:start="191:5" pos:end="191:24"><call pos:start="191:5" pos:end="191:24"><name pos:start="191:5" pos:end="191:20">put_flush_packet</name><argument_list pos:start="191:21" pos:end="191:24">(<argument pos:start="191:22" pos:end="191:23"><expr pos:start="191:22" pos:end="191:23"><name pos:start="191:22" pos:end="191:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
