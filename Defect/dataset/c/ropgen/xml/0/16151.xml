<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16151.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">ppc_set_irq</name> <parameter_list pos:start="1:18" pos:end="1:54">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:26">CPUState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:42"><decl pos:start="1:34" pos:end="1:42"><type pos:start="1:34" pos:end="1:42"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:42">n_IRQ</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:53"><decl pos:start="1:45" pos:end="1:53"><type pos:start="1:45" pos:end="1:53"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:53">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="34:0">

    <if_stmt pos:start="5:5" pos:end="22:0"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:14">(<expr pos:start="5:9" pos:end="5:13"><name pos:start="5:9" pos:end="5:13">level</name></expr>)</condition> <block pos:start="5:16" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:47">

        <expr_stmt pos:start="7:9" pos:end="7:46"><expr pos:start="7:9" pos:end="7:45"><name pos:start="7:9" pos:end="7:31"><name pos:start="7:9" pos:end="7:11">env</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:31">pending_interrupts</name></name> <operator pos:start="7:33" pos:end="7:34">|=</operator> <literal type="number" pos:start="7:36" pos:end="7:36">1</literal> <operator pos:start="7:38" pos:end="7:39">&lt;&lt;</operator> <name pos:start="7:41" pos:end="7:45">n_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:47"><expr pos:start="9:9" pos:end="9:46"><call pos:start="9:9" pos:end="9:46"><name pos:start="9:9" pos:end="9:21">cpu_interrupt</name><argument_list pos:start="9:22" pos:end="9:46">(<argument pos:start="9:23" pos:end="9:25"><expr pos:start="9:23" pos:end="9:25"><name pos:start="9:23" pos:end="9:25">env</name></expr></argument>, <argument pos:start="9:28" pos:end="9:45"><expr pos:start="9:28" pos:end="9:45"><name pos:start="9:28" pos:end="9:45">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="11:7" pos:end="22:0">else <block pos:start="11:12" pos:end="22:0">{<block_content pos:start="13:9" pos:end="17:57">

        <expr_stmt pos:start="13:9" pos:end="13:49"><expr pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:11">env</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:31">pending_interrupts</name></name> <operator pos:start="13:33" pos:end="13:34">&amp;=</operator> <operator pos:start="13:36" pos:end="13:36">~</operator><operator pos:start="13:37" pos:end="13:37">(</operator><literal type="number" pos:start="13:38" pos:end="13:38">1</literal> <operator pos:start="13:40" pos:end="13:41">&lt;&lt;</operator> <name pos:start="13:43" pos:end="13:47">n_IRQ</name><operator pos:start="13:48" pos:end="13:48">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:57"><if pos:start="15:9" pos:end="17:57">if <condition pos:start="15:12" pos:end="15:41">(<expr pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:15">env</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:35">pending_interrupts</name></name> <operator pos:start="15:37" pos:end="15:38">==</operator> <literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:57"><block_content pos:start="17:13" pos:end="17:57">

            <expr_stmt pos:start="17:13" pos:end="17:57"><expr pos:start="17:13" pos:end="17:56"><call pos:start="17:13" pos:end="17:56"><name pos:start="17:13" pos:end="17:31">cpu_reset_interrupt</name><argument_list pos:start="17:32" pos:end="17:56">(<argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">env</name></expr></argument>, <argument pos:start="17:38" pos:end="17:55"><expr pos:start="17:38" pos:end="17:55"><name pos:start="17:38" pos:end="17:55">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:if pos:start="21:1" pos:end="21:26">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:11">defined</name><argument_list pos:start="21:12" pos:end="21:26">(<argument pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:25">PPC_DEBUG_IRQ</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="23:5" pos:end="34:0"><if pos:start="23:5" pos:end="34:0">if <condition pos:start="23:8" pos:end="23:31">(<expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:16">loglevel</name> <operator pos:start="23:18" pos:end="23:18">&amp;</operator> <name pos:start="23:20" pos:end="23:30">CPU_LOG_INT</name></expr>)</condition> <block pos:start="23:33" pos:end="34:0">{<block_content pos:start="25:9" pos:end="29:65">

        <expr_stmt pos:start="25:9" pos:end="29:65"><expr pos:start="25:9" pos:end="29:64"><call pos:start="25:9" pos:end="29:64"><name pos:start="25:9" pos:end="25:15">fprintf</name><argument_list pos:start="25:16" pos:end="29:64">(<argument pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:23">logfile</name></expr></argument>, <argument pos:start="25:26" pos:end="25:78"><expr pos:start="25:26" pos:end="25:78"><literal type="string" pos:start="25:26" pos:end="25:78">"%s: %p n_IRQ %d level %d =&gt; pending %08x req %08x\n"</literal></expr></argument>,

                <argument pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:24"><name pos:start="27:17" pos:end="27:24">__func__</name></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">env</name></expr></argument>, <argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:36">n_IRQ</name></expr></argument>, <argument pos:start="27:39" pos:end="27:43"><expr pos:start="27:39" pos:end="27:43"><name pos:start="27:39" pos:end="27:43">level</name></expr></argument>,

                <argument pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:39"><name pos:start="29:17" pos:end="29:19">env</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:39">pending_interrupts</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:63"><expr pos:start="29:42" pos:end="29:63"><name pos:start="29:42" pos:end="29:63"><name pos:start="29:42" pos:end="29:44">env</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:63">interrupt_request</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
