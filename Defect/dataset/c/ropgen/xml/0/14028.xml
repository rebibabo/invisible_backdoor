<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14028.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:39">encode_line</name><parameter_list pos:start="1:40" pos:end="5:66">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">FFV1Context</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:61"><decl pos:start="1:57" pos:end="1:61"><type pos:start="1:57" pos:end="1:61"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:61">w</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:47">int16_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:55">sample</name><index pos:start="3:56" pos:end="3:58">[<expr pos:start="3:57" pos:end="3:57"><literal type="number" pos:start="3:57" pos:end="3:57">3</literal></expr>]</index></name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:55"><decl pos:start="5:41" pos:end="5:55"><type pos:start="5:41" pos:end="5:55"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:55">plane_index</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:65"><decl pos:start="5:58" pos:end="5:65"><type pos:start="5:58" pos:end="5:65"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:65">bits</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="177:1">{<block_content pos:start="9:5" pos:end="175:13">

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:16">PlaneContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier><specifier pos:start="9:19" pos:end="9:23">const</specifier></type> <name pos:start="9:25" pos:end="9:25">p</name> <init pos:start="9:27" pos:end="9:50">= <expr pos:start="9:29" pos:end="9:50"><operator pos:start="9:29" pos:end="9:29">&amp;</operator><name pos:start="9:30" pos:end="9:50"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">plane</name><index pos:start="9:38" pos:end="9:50">[<expr pos:start="9:39" pos:end="9:49"><name pos:start="9:39" pos:end="9:49">plane_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:14">RangeCoder</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier><specifier pos:start="11:17" pos:end="11:21">const</specifier></type> <name pos:start="11:23" pos:end="11:23">c</name>   <init pos:start="11:27" pos:end="11:33">= <expr pos:start="11:29" pos:end="11:33"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:30">s</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:33">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">run_index</name> <init pos:start="15:19" pos:end="15:32">= <expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:32">run_index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">run_count</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">run_mode</name>  <init pos:start="19:19" pos:end="19:21">= <expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="43:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">ac</name></name></expr>)</condition> <block pos:start="23:16" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:9">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:55">(<expr pos:start="25:13" pos:end="25:54"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:13">c</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">bytestream_end</name></name> <operator pos:start="25:31" pos:end="25:31">-</operator> <name pos:start="25:33" pos:end="25:45"><name pos:start="25:33" pos:end="25:33">c</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:45">bytestream</name></name> <operator pos:start="25:47" pos:end="25:47">&lt;</operator> <name pos:start="25:49" pos:end="25:49">w</name> <operator pos:start="25:51" pos:end="25:51">*</operator> <literal type="number" pos:start="25:53" pos:end="25:54">20</literal></expr>)</condition> <block pos:start="25:57" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:39">

            <expr_stmt pos:start="27:13" pos:end="27:72"><expr pos:start="27:13" pos:end="27:71"><call pos:start="27:13" pos:end="27:71"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:71">(<argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">avctx</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:44" pos:end="27:70"><expr pos:start="27:44" pos:end="27:70"><literal type="string" pos:start="27:44" pos:end="27:70">"encoded frame too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:39">return <expr pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="43:5">else <block pos:start="33:12" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:78">(<expr pos:start="35:13" pos:end="35:77"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">pb</name><operator pos:start="35:18" pos:end="35:18">.</operator><name pos:start="35:19" pos:end="35:25">buf_end</name></name> <operator pos:start="35:27" pos:end="35:27">-</operator> <name pos:start="35:29" pos:end="35:37"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:33">pb</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:37">buf</name></name> <operator pos:start="35:39" pos:end="35:39">-</operator> <operator pos:start="35:41" pos:end="35:41">(</operator><call pos:start="35:42" pos:end="35:63"><name pos:start="35:42" pos:end="35:55">put_bits_count</name><argument_list pos:start="35:56" pos:end="35:63">(<argument pos:start="35:57" pos:end="35:62"><expr pos:start="35:57" pos:end="35:62"><operator pos:start="35:57" pos:end="35:57">&amp;</operator><name pos:start="35:58" pos:end="35:62"><name pos:start="35:58" pos:end="35:58">s</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:62">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:65" pos:end="35:66">&gt;&gt;</operator> <literal type="number" pos:start="35:68" pos:end="35:68">3</literal><operator pos:start="35:69" pos:end="35:69">)</operator> <operator pos:start="35:71" pos:end="35:71">&lt;</operator> <name pos:start="35:73" pos:end="35:73">w</name> <operator pos:start="35:75" pos:end="35:75">*</operator> <literal type="number" pos:start="35:77" pos:end="35:77">4</literal></expr>)</condition> <block pos:start="35:80" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:39">

            <expr_stmt pos:start="37:13" pos:end="37:72"><expr pos:start="37:13" pos:end="37:71"><call pos:start="37:13" pos:end="37:71"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:71">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">avctx</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><name pos:start="37:30" pos:end="37:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:44" pos:end="37:70"><expr pos:start="37:44" pos:end="37:70"><literal type="string" pos:start="37:44" pos:end="37:70">"encoded frame too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:39">return <expr pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="47:5" pos:end="149:5">for <control pos:start="47:9" pos:end="47:27">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">x</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:17">x</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:21">w</name></expr>;</condition> <incr pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:24">x</name><operator pos:start="47:25" pos:end="47:26">++</operator></expr></incr>)</control> <block pos:start="47:29" pos:end="149:5">{<block_content pos:start="49:9" pos:end="147:9">

        <decl_stmt pos:start="49:9" pos:end="49:26"><decl pos:start="49:9" pos:end="49:16"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:16">diff</name></decl>, <decl pos:start="49:19" pos:end="49:25"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:19" pos:end="49:25">context</name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:78"><expr pos:start="53:9" pos:end="53:77"><name pos:start="53:9" pos:end="53:15">context</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:77"><name pos:start="53:19" pos:end="53:29">get_context</name><argument_list pos:start="53:30" pos:end="53:77">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">p</name></expr></argument>, <argument pos:start="53:34" pos:end="53:46"><expr pos:start="53:34" pos:end="53:46"><name pos:start="53:34" pos:end="53:42"><name pos:start="53:34" pos:end="53:39">sample</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr>]</index></name> <operator pos:start="53:44" pos:end="53:44">+</operator> <name pos:start="53:46" pos:end="53:46">x</name></expr></argument>, <argument pos:start="53:49" pos:end="53:61"><expr pos:start="53:49" pos:end="53:61"><name pos:start="53:49" pos:end="53:57"><name pos:start="53:49" pos:end="53:54">sample</name><index pos:start="53:55" pos:end="53:57">[<expr pos:start="53:56" pos:end="53:56"><literal type="number" pos:start="53:56" pos:end="53:56">1</literal></expr>]</index></name> <operator pos:start="53:59" pos:end="53:59">+</operator> <name pos:start="53:61" pos:end="53:61">x</name></expr></argument>, <argument pos:start="53:64" pos:end="53:76"><expr pos:start="53:64" pos:end="53:76"><name pos:start="53:64" pos:end="53:72"><name pos:start="53:64" pos:end="53:69">sample</name><index pos:start="53:70" pos:end="53:72">[<expr pos:start="53:71" pos:end="53:71"><literal type="number" pos:start="53:71" pos:end="53:71">2</literal></expr>]</index></name> <operator pos:start="53:74" pos:end="53:74">+</operator> <name pos:start="53:76" pos:end="53:76">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:71"><expr pos:start="55:9" pos:end="55:70"><name pos:start="55:9" pos:end="55:12">diff</name>    <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:24">sample</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>]</index><index pos:start="55:28" pos:end="55:30">[<expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">x</name></expr>]</index></name> <operator pos:start="55:32" pos:end="55:32">-</operator> <call pos:start="55:34" pos:end="55:70"><name pos:start="55:34" pos:end="55:40">predict</name><argument_list pos:start="55:41" pos:end="55:70">(<argument pos:start="55:42" pos:end="55:54"><expr pos:start="55:42" pos:end="55:54"><name pos:start="55:42" pos:end="55:50"><name pos:start="55:42" pos:end="55:47">sample</name><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">0</literal></expr>]</index></name> <operator pos:start="55:52" pos:end="55:52">+</operator> <name pos:start="55:54" pos:end="55:54">x</name></expr></argument>, <argument pos:start="55:57" pos:end="55:69"><expr pos:start="55:57" pos:end="55:69"><name pos:start="55:57" pos:end="55:65"><name pos:start="55:57" pos:end="55:62">sample</name><index pos:start="55:63" pos:end="55:65">[<expr pos:start="55:64" pos:end="55:64"><literal type="number" pos:start="55:64" pos:end="55:64">1</literal></expr>]</index></name> <operator pos:start="55:67" pos:end="55:67">+</operator> <name pos:start="55:69" pos:end="55:69">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:24">(<expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:19">context</name> <operator pos:start="59:21" pos:end="59:21">&lt;</operator> <literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>)</condition> <block pos:start="59:26" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:28">

            <expr_stmt pos:start="61:13" pos:end="61:31"><expr pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:19">context</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <operator pos:start="61:23" pos:end="61:23">-</operator><name pos:start="61:24" pos:end="61:30">context</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:28"><expr pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:16">diff</name>    <operator pos:start="63:21" pos:end="63:21">=</operator> <operator pos:start="63:23" pos:end="63:23">-</operator><name pos:start="63:24" pos:end="63:27">diff</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:12">diff</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:31"><name pos:start="69:16" pos:end="69:19">fold</name><argument_list pos:start="69:20" pos:end="69:31">(<argument pos:start="69:21" pos:end="69:24"><expr pos:start="69:21" pos:end="69:24"><name pos:start="69:21" pos:end="69:24">diff</name></expr></argument>, <argument pos:start="69:27" pos:end="69:30"><expr pos:start="69:27" pos:end="69:30"><name pos:start="69:27" pos:end="69:30">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="147:9"><if pos:start="73:9" pos:end="87:9">if <condition pos:start="73:12" pos:end="73:18">(<expr pos:start="73:13" pos:end="73:17"><name pos:start="73:13" pos:end="73:17"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:17">ac</name></name></expr>)</condition> <block pos:start="73:20" pos:end="87:9">{<block_content pos:start="75:13" pos:end="85:13">

            <if_stmt pos:start="75:13" pos:end="85:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:44">(<expr pos:start="75:17" pos:end="75:43"><name pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:24">flags</name></name> <operator pos:start="75:26" pos:end="75:26">&amp;</operator> <name pos:start="75:28" pos:end="75:43">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="75:46" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:78">

                <expr_stmt pos:start="77:17" pos:end="79:78"><expr pos:start="77:17" pos:end="79:77"><call pos:start="77:17" pos:end="79:77"><name pos:start="77:17" pos:end="77:33">put_symbol_inline</name><argument_list pos:start="77:34" pos:end="79:77">(<argument pos:start="77:35" pos:end="77:35"><expr pos:start="77:35" pos:end="77:35"><name pos:start="77:35" pos:end="77:35">c</name></expr></argument>, <argument pos:start="77:38" pos:end="77:54"><expr pos:start="77:38" pos:end="77:54"><name pos:start="77:38" pos:end="77:54"><name pos:start="77:38" pos:end="77:38">p</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:45">state</name><index pos:start="77:46" pos:end="77:54">[<expr pos:start="77:47" pos:end="77:53"><name pos:start="77:47" pos:end="77:53">context</name></expr>]</index></name></expr></argument>, <argument pos:start="77:57" pos:end="77:60"><expr pos:start="77:57" pos:end="77:60"><name pos:start="77:57" pos:end="77:60">diff</name></expr></argument>, <argument pos:start="77:63" pos:end="77:63"><expr pos:start="77:63" pos:end="77:63"><literal type="number" pos:start="77:63" pos:end="77:63">1</literal></expr></argument>, <argument pos:start="77:66" pos:end="77:75"><expr pos:start="77:66" pos:end="77:75"><name pos:start="77:66" pos:end="77:75"><name pos:start="77:66" pos:end="77:66">s</name><operator pos:start="77:67" pos:end="77:68">-&gt;</operator><name pos:start="77:69" pos:end="77:75">rc_stat</name></name></expr></argument>,

                                  <argument pos:start="79:35" pos:end="79:76"><expr pos:start="79:35" pos:end="79:76"><name pos:start="79:35" pos:end="79:76"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:45">rc_stat2</name><index pos:start="79:46" pos:end="79:67">[<expr pos:start="79:47" pos:end="79:66"><name pos:start="79:47" pos:end="79:66"><name pos:start="79:47" pos:end="79:47">p</name><operator pos:start="79:48" pos:end="79:49">-&gt;</operator><name pos:start="79:50" pos:end="79:66">quant_table_index</name></name></expr>]</index><index pos:start="79:68" pos:end="79:76">[<expr pos:start="79:69" pos:end="79:75"><name pos:start="79:69" pos:end="79:75">context</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="85:13">else <block pos:start="81:20" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:77">

                <expr_stmt pos:start="83:17" pos:end="83:77"><expr pos:start="83:17" pos:end="83:76"><call pos:start="83:17" pos:end="83:76"><name pos:start="83:17" pos:end="83:33">put_symbol_inline</name><argument_list pos:start="83:34" pos:end="83:76">(<argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">c</name></expr></argument>, <argument pos:start="83:38" pos:end="83:54"><expr pos:start="83:38" pos:end="83:54"><name pos:start="83:38" pos:end="83:54"><name pos:start="83:38" pos:end="83:38">p</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:45">state</name><index pos:start="83:46" pos:end="83:54">[<expr pos:start="83:47" pos:end="83:53"><name pos:start="83:47" pos:end="83:53">context</name></expr>]</index></name></expr></argument>, <argument pos:start="83:57" pos:end="83:60"><expr pos:start="83:57" pos:end="83:60"><name pos:start="83:57" pos:end="83:60">diff</name></expr></argument>, <argument pos:start="83:63" pos:end="83:63"><expr pos:start="83:63" pos:end="83:63"><literal type="number" pos:start="83:63" pos:end="83:63">1</literal></expr></argument>, <argument pos:start="83:66" pos:end="83:69"><expr pos:start="83:66" pos:end="83:69"><name pos:start="83:66" pos:end="83:69">NULL</name></expr></argument>, <argument pos:start="83:72" pos:end="83:75"><expr pos:start="83:72" pos:end="83:75"><name pos:start="83:72" pos:end="83:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="147:9">else <block pos:start="87:16" pos:end="147:9">{<block_content pos:start="89:13" pos:end="145:75">

            <if_stmt pos:start="89:13" pos:end="91:29"><if pos:start="89:13" pos:end="91:29">if <condition pos:start="89:16" pos:end="89:29">(<expr pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:23">context</name> <operator pos:start="89:25" pos:end="89:26">==</operator> <literal type="number" pos:start="89:28" pos:end="89:28">0</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:29"><block_content pos:start="91:17" pos:end="91:29">

                <expr_stmt pos:start="91:17" pos:end="91:29"><expr pos:start="91:17" pos:end="91:28"><name pos:start="91:17" pos:end="91:24">run_mode</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <literal type="number" pos:start="91:28" pos:end="91:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="95:13" pos:end="131:13"><if pos:start="95:13" pos:end="131:13">if <condition pos:start="95:16" pos:end="95:25">(<expr pos:start="95:17" pos:end="95:24"><name pos:start="95:17" pos:end="95:24">run_mode</name></expr>)</condition> <block pos:start="95:27" pos:end="131:13">{<block_content pos:start="97:17" pos:end="129:17">

                <if_stmt pos:start="97:17" pos:end="129:17"><if pos:start="97:17" pos:end="125:17">if <condition pos:start="97:20" pos:end="97:25">(<expr pos:start="97:21" pos:end="97:24"><name pos:start="97:21" pos:end="97:24">diff</name></expr>)</condition> <block pos:start="97:27" pos:end="125:17">{<block_content pos:start="99:21" pos:end="123:31">

                    <while pos:start="99:21" pos:end="107:21">while <condition pos:start="99:27" pos:end="99:68">(<expr pos:start="99:28" pos:end="99:67"><name pos:start="99:28" pos:end="99:36">run_count</name> <operator pos:start="99:38" pos:end="99:39">&gt;=</operator> <literal type="number" pos:start="99:41" pos:end="99:41">1</literal> <operator pos:start="99:43" pos:end="99:44">&lt;&lt;</operator> <name pos:start="99:46" pos:end="99:67"><name pos:start="99:46" pos:end="99:56">ff_log2_run</name><index pos:start="99:57" pos:end="99:67">[<expr pos:start="99:58" pos:end="99:66"><name pos:start="99:58" pos:end="99:66">run_index</name></expr>]</index></name></expr>)</condition> <block pos:start="99:70" pos:end="107:21">{<block_content pos:start="101:25" pos:end="105:47">

                        <expr_stmt pos:start="101:25" pos:end="101:65"><expr pos:start="101:25" pos:end="101:64"><name pos:start="101:25" pos:end="101:33">run_count</name> <operator pos:start="101:35" pos:end="101:36">-=</operator> <literal type="number" pos:start="101:38" pos:end="101:38">1</literal> <operator pos:start="101:40" pos:end="101:41">&lt;&lt;</operator> <name pos:start="101:43" pos:end="101:64"><name pos:start="101:43" pos:end="101:53">ff_log2_run</name><index pos:start="101:54" pos:end="101:64">[<expr pos:start="101:55" pos:end="101:63"><name pos:start="101:55" pos:end="101:63">run_index</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="103:25" pos:end="103:36"><expr pos:start="103:25" pos:end="103:35"><name pos:start="103:25" pos:end="103:33">run_index</name><operator pos:start="103:34" pos:end="103:35">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="105:25" pos:end="105:47"><expr pos:start="105:25" pos:end="105:46"><call pos:start="105:25" pos:end="105:46"><name pos:start="105:25" pos:end="105:32">put_bits</name><argument_list pos:start="105:33" pos:end="105:46">(<argument pos:start="105:34" pos:end="105:39"><expr pos:start="105:34" pos:end="105:39"><operator pos:start="105:34" pos:end="105:34">&amp;</operator><name pos:start="105:35" pos:end="105:39"><name pos:start="105:35" pos:end="105:35">s</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:39">pb</name></name></expr></argument>, <argument pos:start="105:42" pos:end="105:42"><expr pos:start="105:42" pos:end="105:42"><literal type="number" pos:start="105:42" pos:end="105:42">1</literal></expr></argument>, <argument pos:start="105:45" pos:end="105:45"><expr pos:start="105:45" pos:end="105:45"><literal type="number" pos:start="105:45" pos:end="105:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></while>



                    <expr_stmt pos:start="111:21" pos:end="111:76"><expr pos:start="111:21" pos:end="111:75"><call pos:start="111:21" pos:end="111:75"><name pos:start="111:21" pos:end="111:28">put_bits</name><argument_list pos:start="111:29" pos:end="111:75">(<argument pos:start="111:30" pos:end="111:35"><expr pos:start="111:30" pos:end="111:35"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:35"><name pos:start="111:31" pos:end="111:31">s</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:35">pb</name></name></expr></argument>, <argument pos:start="111:38" pos:end="111:63"><expr pos:start="111:38" pos:end="111:63"><literal type="number" pos:start="111:38" pos:end="111:40">1</literal> <operator pos:start="111:40" pos:end="111:40">+</operator> <name pos:start="111:42" pos:end="111:63"><name pos:start="111:42" pos:end="111:52">ff_log2_run</name><index pos:start="111:53" pos:end="111:63">[<expr pos:start="111:54" pos:end="111:62"><name pos:start="111:54" pos:end="111:62">run_index</name></expr>]</index></name></expr></argument>, <argument pos:start="111:66" pos:end="111:74"><expr pos:start="111:66" pos:end="111:74"><name pos:start="111:66" pos:end="111:74">run_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="113:21" pos:end="115:36"><if pos:start="113:21" pos:end="115:36">if <condition pos:start="113:24" pos:end="113:34">(<expr pos:start="113:25" pos:end="113:33"><name pos:start="113:25" pos:end="113:33">run_index</name></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:36"><block_content pos:start="115:25" pos:end="115:36">

                        <expr_stmt pos:start="115:25" pos:end="115:36"><expr pos:start="115:25" pos:end="115:35"><name pos:start="115:25" pos:end="115:33">run_index</name><operator pos:start="115:34" pos:end="115:35">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:34"><expr pos:start="117:21" pos:end="117:33"><name pos:start="117:21" pos:end="117:29">run_count</name> <operator pos:start="117:31" pos:end="117:31">=</operator> <literal type="number" pos:start="117:33" pos:end="117:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:34"><expr pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:28">run_mode</name>  <operator pos:start="119:31" pos:end="119:31">=</operator> <literal type="number" pos:start="119:33" pos:end="119:33">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="121:21" pos:end="123:31"><if pos:start="121:21" pos:end="123:31">if <condition pos:start="121:24" pos:end="121:33">(<expr pos:start="121:25" pos:end="121:32"><name pos:start="121:25" pos:end="121:28">diff</name> <operator pos:start="121:30" pos:end="121:30">&gt;</operator> <literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr>)</condition><block type="pseudo" pos:start="123:25" pos:end="123:31"><block_content pos:start="123:25" pos:end="123:31">

                        <expr_stmt pos:start="123:25" pos:end="123:31"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:28">diff</name><operator pos:start="123:29" pos:end="123:30">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="125:19" pos:end="129:17">else <block pos:start="125:24" pos:end="129:17">{<block_content pos:start="127:21" pos:end="127:32">

                    <expr_stmt pos:start="127:21" pos:end="127:32"><expr pos:start="127:21" pos:end="127:31"><name pos:start="127:21" pos:end="127:29">run_count</name><operator pos:start="127:30" pos:end="127:31">++</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="139:49"><expr pos:start="135:13" pos:end="139:48"><call pos:start="135:13" pos:end="139:48"><name pos:start="135:13" pos:end="135:19">av_dlog</name><argument_list pos:start="135:20" pos:end="139:48">(<argument pos:start="135:21" pos:end="135:28"><expr pos:start="135:21" pos:end="135:28"><name pos:start="135:21" pos:end="135:28"><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:28">avctx</name></name></expr></argument>, <argument pos:start="135:31" pos:end="135:73"><expr pos:start="135:31" pos:end="135:73"><literal type="string" pos:start="135:31" pos:end="135:73">"count:%d index:%d, mode:%d, x:%d pos:%d\n"</literal></expr></argument>,

                    <argument pos:start="137:21" pos:end="137:29"><expr pos:start="137:21" pos:end="137:29"><name pos:start="137:21" pos:end="137:29">run_count</name></expr></argument>, <argument pos:start="137:32" pos:end="137:40"><expr pos:start="137:32" pos:end="137:40"><name pos:start="137:32" pos:end="137:40">run_index</name></expr></argument>, <argument pos:start="137:43" pos:end="137:50"><expr pos:start="137:43" pos:end="137:50"><name pos:start="137:43" pos:end="137:50">run_mode</name></expr></argument>, <argument pos:start="137:53" pos:end="137:53"><expr pos:start="137:53" pos:end="137:53"><name pos:start="137:53" pos:end="137:53">x</name></expr></argument>,

                    <argument pos:start="139:21" pos:end="139:47"><expr pos:start="139:21" pos:end="139:47"><operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:24">int</name><operator pos:start="139:25" pos:end="139:25">)</operator><call pos:start="139:26" pos:end="139:47"><name pos:start="139:26" pos:end="139:39">put_bits_count</name><argument_list pos:start="139:40" pos:end="139:47">(<argument pos:start="139:41" pos:end="139:46"><expr pos:start="139:41" pos:end="139:46"><operator pos:start="139:41" pos:end="139:41">&amp;</operator><name pos:start="139:42" pos:end="139:46"><name pos:start="139:42" pos:end="139:42">s</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:46">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="143:13" pos:end="145:75"><if pos:start="143:13" pos:end="145:75">if <condition pos:start="143:16" pos:end="143:30">(<expr pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:24">run_mode</name> <operator pos:start="143:26" pos:end="143:27">==</operator> <literal type="number" pos:start="143:29" pos:end="143:29">0</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:75"><block_content pos:start="145:17" pos:end="145:75">

                <expr_stmt pos:start="145:17" pos:end="145:75"><expr pos:start="145:17" pos:end="145:74"><call pos:start="145:17" pos:end="145:74"><name pos:start="145:17" pos:end="145:30">put_vlc_symbol</name><argument_list pos:start="145:31" pos:end="145:74">(<argument pos:start="145:32" pos:end="145:37"><expr pos:start="145:32" pos:end="145:37"><operator pos:start="145:32" pos:end="145:32">&amp;</operator><name pos:start="145:33" pos:end="145:37"><name pos:start="145:33" pos:end="145:33">s</name><operator pos:start="145:34" pos:end="145:35">-&gt;</operator><name pos:start="145:36" pos:end="145:37">pb</name></name></expr></argument>, <argument pos:start="145:40" pos:end="145:61"><expr pos:start="145:40" pos:end="145:61"><operator pos:start="145:40" pos:end="145:40">&amp;</operator><name pos:start="145:41" pos:end="145:61"><name pos:start="145:41" pos:end="145:41">p</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:52">vlc_state</name><index pos:start="145:53" pos:end="145:61">[<expr pos:start="145:54" pos:end="145:60"><name pos:start="145:54" pos:end="145:60">context</name></expr>]</index></name></expr></argument>, <argument pos:start="145:64" pos:end="145:67"><expr pos:start="145:64" pos:end="145:67"><name pos:start="145:64" pos:end="145:67">diff</name></expr></argument>, <argument pos:start="145:70" pos:end="145:73"><expr pos:start="145:70" pos:end="145:73"><name pos:start="145:70" pos:end="145:73">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="151:5" pos:end="169:5"><if pos:start="151:5" pos:end="169:5">if <condition pos:start="151:8" pos:end="151:17">(<expr pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:16">run_mode</name></expr>)</condition> <block pos:start="151:19" pos:end="169:5">{<block_content pos:start="153:9" pos:end="167:35">

        <while pos:start="153:9" pos:end="161:9">while <condition pos:start="153:15" pos:end="153:56">(<expr pos:start="153:16" pos:end="153:55"><name pos:start="153:16" pos:end="153:24">run_count</name> <operator pos:start="153:26" pos:end="153:27">&gt;=</operator> <literal type="number" pos:start="153:29" pos:end="153:29">1</literal> <operator pos:start="153:31" pos:end="153:32">&lt;&lt;</operator> <name pos:start="153:34" pos:end="153:55"><name pos:start="153:34" pos:end="153:44">ff_log2_run</name><index pos:start="153:45" pos:end="153:55">[<expr pos:start="153:46" pos:end="153:54"><name pos:start="153:46" pos:end="153:54">run_index</name></expr>]</index></name></expr>)</condition> <block pos:start="153:58" pos:end="161:9">{<block_content pos:start="155:13" pos:end="159:35">

            <expr_stmt pos:start="155:13" pos:end="155:53"><expr pos:start="155:13" pos:end="155:52"><name pos:start="155:13" pos:end="155:21">run_count</name> <operator pos:start="155:23" pos:end="155:24">-=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">1</literal> <operator pos:start="155:28" pos:end="155:29">&lt;&lt;</operator> <name pos:start="155:31" pos:end="155:52"><name pos:start="155:31" pos:end="155:41">ff_log2_run</name><index pos:start="155:42" pos:end="155:52">[<expr pos:start="155:43" pos:end="155:51"><name pos:start="155:43" pos:end="155:51">run_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:24"><expr pos:start="157:13" pos:end="157:23"><name pos:start="157:13" pos:end="157:21">run_index</name><operator pos:start="157:22" pos:end="157:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:35"><expr pos:start="159:13" pos:end="159:34"><call pos:start="159:13" pos:end="159:34"><name pos:start="159:13" pos:end="159:20">put_bits</name><argument_list pos:start="159:21" pos:end="159:34">(<argument pos:start="159:22" pos:end="159:27"><expr pos:start="159:22" pos:end="159:27"><operator pos:start="159:22" pos:end="159:22">&amp;</operator><name pos:start="159:23" pos:end="159:27"><name pos:start="159:23" pos:end="159:23">s</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:27">pb</name></name></expr></argument>, <argument pos:start="159:30" pos:end="159:30"><expr pos:start="159:30" pos:end="159:30"><literal type="number" pos:start="159:30" pos:end="159:30">1</literal></expr></argument>, <argument pos:start="159:33" pos:end="159:33"><expr pos:start="159:33" pos:end="159:33"><literal type="number" pos:start="159:33" pos:end="159:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="165:9" pos:end="167:35"><if pos:start="165:9" pos:end="167:35">if <condition pos:start="165:12" pos:end="165:22">(<expr pos:start="165:13" pos:end="165:21"><name pos:start="165:13" pos:end="165:21">run_count</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:35"><block_content pos:start="167:13" pos:end="167:35">

            <expr_stmt pos:start="167:13" pos:end="167:35"><expr pos:start="167:13" pos:end="167:34"><call pos:start="167:13" pos:end="167:34"><name pos:start="167:13" pos:end="167:20">put_bits</name><argument_list pos:start="167:21" pos:end="167:34">(<argument pos:start="167:22" pos:end="167:27"><expr pos:start="167:22" pos:end="167:27"><operator pos:start="167:22" pos:end="167:22">&amp;</operator><name pos:start="167:23" pos:end="167:27"><name pos:start="167:23" pos:end="167:23">s</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:27">pb</name></name></expr></argument>, <argument pos:start="167:30" pos:end="167:30"><expr pos:start="167:30" pos:end="167:30"><literal type="number" pos:start="167:30" pos:end="167:30">1</literal></expr></argument>, <argument pos:start="167:33" pos:end="167:33"><expr pos:start="167:33" pos:end="167:33"><literal type="number" pos:start="167:33" pos:end="167:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:29"><expr pos:start="171:5" pos:end="171:28"><name pos:start="171:5" pos:end="171:16"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:16">run_index</name></name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:28">run_index</name></expr>;</expr_stmt>



    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
