<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11395.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vp7_decode_frame_header</name><parameter_list pos:start="1:35" pos:end="1:83">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">VP8Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:82">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="279:1">{<block_content pos:start="5:5" pos:end="277:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VP56RangeCoder</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">part1_size</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">hscale</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:34">vscale</name></decl>, <decl pos:start="7:37" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:37">i</name></decl>, <decl pos:start="7:40" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:40">j</name></decl>, <decl pos:start="7:43" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:43" pos:end="7:45">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name>  <init pos:start="9:16" pos:end="9:32">= <expr pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:18">s</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">height</name> <init pos:start="11:16" pos:end="11:33">= <expr pos:start="11:18" pos:end="11:33"><name pos:start="11:18" pos:end="11:33"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:25">avctx</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">height</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:14">profile</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <operator pos:start="15:18" pos:end="15:18">(</operator><name pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:21">buf</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>]</index></name> <operator pos:start="15:26" pos:end="15:27">&gt;&gt;</operator> <literal type="number" pos:start="15:29" pos:end="15:29">1</literal><operator pos:start="15:30" pos:end="15:30">)</operator> <operator pos:start="15:32" pos:end="15:32">&amp;</operator> <literal type="number" pos:start="15:34" pos:end="15:34">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">profile</name></name> <operator pos:start="17:20" pos:end="17:20">&gt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr>)</condition> <block pos:start="17:25" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:35">

        <expr_stmt pos:start="19:9" pos:end="19:74"><expr pos:start="19:9" pos:end="19:73"><call pos:start="19:9" pos:end="19:73"><name pos:start="19:9" pos:end="19:29">avpriv_request_sample</name><argument_list pos:start="19:30" pos:end="19:73">(<argument pos:start="19:31" pos:end="19:38"><expr pos:start="19:31" pos:end="19:38"><name pos:start="19:31" pos:end="19:38"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:38">avctx</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:60"><expr pos:start="19:41" pos:end="19:60"><literal type="string" pos:start="19:41" pos:end="19:60">"Unknown profile %d"</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:72"><expr pos:start="19:63" pos:end="19:72"><name pos:start="19:63" pos:end="19:72"><name pos:start="19:63" pos:end="19:63">s</name><operator pos:start="19:64" pos:end="19:65">-&gt;</operator><name pos:start="19:66" pos:end="19:72">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:15">keyframe</name></name>  <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">!</operator><operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:27"><name pos:start="27:22" pos:end="27:24">buf</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>]</index></name> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <literal type="number" pos:start="27:31" pos:end="27:31">1</literal><operator pos:start="27:32" pos:end="27:32">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">invisible</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:14">part1_size</name>   <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:26">AV_RL24</name><argument_list pos:start="31:27" pos:end="31:31">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">buf</name></expr></argument>)</argument_list></call> <operator pos:start="31:33" pos:end="31:34">&gt;&gt;</operator> <literal type="number" pos:start="31:36" pos:end="31:36">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:7">buf</name>      <operator pos:start="35:14" pos:end="35:15">+=</operator> <literal type="number" pos:start="35:17" pos:end="35:19">4</literal> <operator pos:start="35:19" pos:end="35:19">-</operator> <name pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:30">profile</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:12">buf_size</name> <operator pos:start="37:14" pos:end="37:15">-=</operator> <literal type="number" pos:start="37:17" pos:end="37:19">4</literal> <operator pos:start="37:19" pos:end="37:19">-</operator> <name pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:30">profile</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:92"><expr pos:start="41:5" pos:end="41:91"><call pos:start="41:5" pos:end="41:91"><name pos:start="41:5" pos:end="41:10">memcpy</name><argument_list pos:start="41:11" pos:end="41:91">(<argument pos:start="41:12" pos:end="41:28"><expr pos:start="41:12" pos:end="41:28"><name pos:start="41:12" pos:end="41:28"><name pos:start="41:12" pos:end="41:12">s</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:28">put_pixels_tab</name></name></expr></argument>, <argument pos:start="41:31" pos:end="41:63"><expr pos:start="41:31" pos:end="41:63"><name pos:start="41:31" pos:end="41:63"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:39">vp8dsp</name><operator pos:start="41:40" pos:end="41:40">.</operator><name pos:start="41:41" pos:end="41:63">put_vp8_epel_pixels_tab</name></name></expr></argument>, <argument pos:start="41:66" pos:end="41:90"><expr pos:start="41:66" pos:end="41:90"><sizeof pos:start="41:66" pos:end="41:90">sizeof<argument_list pos:start="41:72" pos:end="41:90">(<argument pos:start="41:73" pos:end="41:89"><expr pos:start="41:73" pos:end="41:89"><name pos:start="41:73" pos:end="41:89"><name pos:start="41:73" pos:end="41:73">s</name><operator pos:start="41:74" pos:end="41:75">-&gt;</operator><name pos:start="41:76" pos:end="41:89">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><call pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:30">ff_vp56_init_range_decoder</name><argument_list pos:start="45:31" pos:end="45:50">(<argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">c</name></expr></argument>, <argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:37">buf</name></expr></argument>, <argument pos:start="45:40" pos:end="45:49"><expr pos:start="45:40" pos:end="45:49"><name pos:start="45:40" pos:end="45:49">part1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:7">buf</name>      <operator pos:start="47:14" pos:end="47:15">+=</operator> <name pos:start="47:17" pos:end="47:26">part1_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:27"><expr pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:12">buf_size</name> <operator pos:start="49:14" pos:end="49:15">-=</operator> <name pos:start="49:17" pos:end="49:26">part1_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:51">/* A. Dimension information (keyframes only) */</comment>

    <if_stmt pos:start="55:5" pos:end="95:5"><if pos:start="55:5" pos:end="95:5">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">keyframe</name></name></expr>)</condition> <block pos:start="55:22" pos:end="95:5">{<block_content pos:start="57:9" pos:end="93:70">

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:13">width</name>  <operator pos:start="57:16" pos:end="57:16">=</operator> <call pos:start="57:18" pos:end="57:40"><name pos:start="57:18" pos:end="57:33">vp8_rac_get_uint</name><argument_list pos:start="57:34" pos:end="57:40">(<argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">c</name></expr></argument>, <argument pos:start="57:38" pos:end="57:39"><expr pos:start="57:38" pos:end="57:39"><literal type="number" pos:start="57:38" pos:end="57:39">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:14">height</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="59:40"><name pos:start="59:18" pos:end="59:33">vp8_rac_get_uint</name><argument_list pos:start="59:34" pos:end="59:40">(<argument pos:start="59:35" pos:end="59:35"><expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">c</name></expr></argument>, <argument pos:start="59:38" pos:end="59:39"><expr pos:start="59:38" pos:end="59:39"><literal type="number" pos:start="59:38" pos:end="59:39">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:14">hscale</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:39"><name pos:start="61:18" pos:end="61:33">vp8_rac_get_uint</name><argument_list pos:start="61:34" pos:end="61:39">(<argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">c</name></expr></argument>, <argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:14">vscale</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:39"><name pos:start="63:18" pos:end="63:33">vp8_rac_get_uint</name><argument_list pos:start="63:34" pos:end="63:39">(<argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">c</name></expr></argument>, <argument pos:start="63:38" pos:end="63:38"><expr pos:start="63:38" pos:end="63:38"><literal type="number" pos:start="63:38" pos:end="63:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:57"><if pos:start="65:9" pos:end="67:57">if <condition pos:start="65:12" pos:end="65:29">(<expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:18">hscale</name> <operator pos:start="65:20" pos:end="65:21">||</operator> <name pos:start="65:23" pos:end="65:28">vscale</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:57"><block_content pos:start="67:13" pos:end="67:57">

            <expr_stmt pos:start="67:13" pos:end="67:57"><expr pos:start="67:13" pos:end="67:56"><call pos:start="67:13" pos:end="67:56"><name pos:start="67:13" pos:end="67:33">avpriv_request_sample</name><argument_list pos:start="67:34" pos:end="67:56">(<argument pos:start="67:35" pos:end="67:42"><expr pos:start="67:35" pos:end="67:42"><name pos:start="67:35" pos:end="67:42"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:42">avctx</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:55"><expr pos:start="67:45" pos:end="67:55"><literal type="string" pos:start="67:45" pos:end="67:55">"Upscaling"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:65"><expr pos:start="71:9" pos:end="71:64"><name pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:24">update_golden</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:43">update_altref</name></name> <operator pos:start="71:45" pos:end="71:45">=</operator> <name pos:start="71:47" pos:end="71:64">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><call pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:37">vp78_reset_probability_tables</name><argument_list pos:start="73:38" pos:end="73:40">(<argument pos:start="73:39" pos:end="73:39"><expr pos:start="73:39" pos:end="73:39"><name pos:start="73:39" pos:end="73:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:43"><expr pos:start="75:9" pos:end="77:42"><call pos:start="75:9" pos:end="77:42"><name pos:start="75:9" pos:end="75:14">memcpy</name><argument_list pos:start="75:15" pos:end="77:42">(<argument pos:start="75:16" pos:end="75:33"><expr pos:start="75:16" pos:end="75:33"><name pos:start="75:16" pos:end="75:33"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:22">prob</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:33">pred16x16</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:59"><expr pos:start="75:36" pos:end="75:59"><name pos:start="75:36" pos:end="75:59">vp8_pred16x16_prob_inter</name></expr></argument>,

               <argument pos:start="77:16" pos:end="77:41"><expr pos:start="77:16" pos:end="77:41"><sizeof pos:start="77:16" pos:end="77:41">sizeof<argument_list pos:start="77:22" pos:end="77:41">(<argument pos:start="77:23" pos:end="77:40"><expr pos:start="77:23" pos:end="77:40"><name pos:start="77:23" pos:end="77:40"><name pos:start="77:23" pos:end="77:23">s</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:29">prob</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:40">pred16x16</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="81:42"><expr pos:start="79:9" pos:end="81:41"><call pos:start="79:9" pos:end="81:41"><name pos:start="79:9" pos:end="79:14">memcpy</name><argument_list pos:start="79:15" pos:end="81:41">(<argument pos:start="79:16" pos:end="79:32"><expr pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:22">prob</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:32">pred8x8c</name></name></expr></argument>, <argument pos:start="79:35" pos:end="79:57"><expr pos:start="79:35" pos:end="79:57"><name pos:start="79:35" pos:end="79:57">vp8_pred8x8c_prob_inter</name></expr></argument>,

               <argument pos:start="81:16" pos:end="81:40"><expr pos:start="81:16" pos:end="81:40"><sizeof pos:start="81:16" pos:end="81:40">sizeof<argument_list pos:start="81:22" pos:end="81:40">(<argument pos:start="81:23" pos:end="81:39"><expr pos:start="81:23" pos:end="81:39"><name pos:start="81:23" pos:end="81:39"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:29">prob</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:39">pred8x8c</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="83:9" pos:end="87:51">for <control pos:start="83:13" pos:end="83:31">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:26"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">i</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <literal type="number" pos:start="83:25" pos:end="83:25">2</literal></expr>;</condition> <incr pos:start="83:28" pos:end="83:30"><expr pos:start="83:28" pos:end="83:30"><name pos:start="83:28" pos:end="83:28">i</name><operator pos:start="83:29" pos:end="83:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:13" pos:end="87:51"><block_content pos:start="85:13" pos:end="87:51">

            <expr_stmt pos:start="85:13" pos:end="87:51"><expr pos:start="85:13" pos:end="87:50"><call pos:start="85:13" pos:end="87:50"><name pos:start="85:13" pos:end="85:18">memcpy</name><argument_list pos:start="85:19" pos:end="87:50">(<argument pos:start="85:20" pos:end="85:34"><expr pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:20">s</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:26">prob</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:31">mvc</name><index pos:start="85:32" pos:end="85:34">[<expr pos:start="85:33" pos:end="85:33"><name pos:start="85:33" pos:end="85:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="85:37" pos:end="85:58"><expr pos:start="85:37" pos:end="85:58"><name pos:start="85:37" pos:end="85:58"><name pos:start="85:37" pos:end="85:55">vp7_mv_default_prob</name><index pos:start="85:56" pos:end="85:58">[<expr pos:start="85:57" pos:end="85:57"><name pos:start="85:57" pos:end="85:57">i</name></expr>]</index></name></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:49"><expr pos:start="87:20" pos:end="87:49"><sizeof pos:start="87:20" pos:end="87:49">sizeof<argument_list pos:start="87:26" pos:end="87:49">(<argument pos:start="87:27" pos:end="87:48"><expr pos:start="87:27" pos:end="87:48"><name pos:start="87:27" pos:end="87:48"><name pos:start="87:27" pos:end="87:45">vp7_mv_default_prob</name><index pos:start="87:46" pos:end="87:48">[<expr pos:start="87:47" pos:end="87:47"><name pos:start="87:47" pos:end="87:47">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="89:9" pos:end="89:61"><expr pos:start="89:9" pos:end="89:60"><call pos:start="89:9" pos:end="89:60"><name pos:start="89:9" pos:end="89:14">memset</name><argument_list pos:start="89:15" pos:end="89:60">(<argument pos:start="89:16" pos:end="89:31"><expr pos:start="89:16" pos:end="89:31"><operator pos:start="89:16" pos:end="89:16">&amp;</operator><name pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:31">segmentation</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><literal type="number" pos:start="89:34" pos:end="89:34">0</literal></expr></argument>, <argument pos:start="89:37" pos:end="89:59"><expr pos:start="89:37" pos:end="89:59"><sizeof pos:start="89:37" pos:end="89:59">sizeof<argument_list pos:start="89:43" pos:end="89:59">(<argument pos:start="89:44" pos:end="89:58"><expr pos:start="89:44" pos:end="89:58"><name pos:start="89:44" pos:end="89:58"><name pos:start="89:44" pos:end="89:44">s</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:58">segmentation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:53"><expr pos:start="91:9" pos:end="91:52"><call pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:14">memset</name><argument_list pos:start="91:15" pos:end="91:52">(<argument pos:start="91:16" pos:end="91:27"><expr pos:start="91:16" pos:end="91:27"><operator pos:start="91:16" pos:end="91:16">&amp;</operator><name pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:27">lf_delta</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:30"><expr pos:start="91:30" pos:end="91:30"><literal type="number" pos:start="91:30" pos:end="91:30">0</literal></expr></argument>, <argument pos:start="91:33" pos:end="91:51"><expr pos:start="91:33" pos:end="91:51"><sizeof pos:start="91:33" pos:end="91:51">sizeof<argument_list pos:start="91:39" pos:end="91:51">(<argument pos:start="91:40" pos:end="91:50"><expr pos:start="91:40" pos:end="91:50"><name pos:start="91:40" pos:end="91:50"><name pos:start="91:40" pos:end="91:40">s</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:50">lf_delta</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:70"><expr pos:start="93:9" pos:end="93:69"><call pos:start="93:9" pos:end="93:69"><name pos:start="93:9" pos:end="93:14">memcpy</name><argument_list pos:start="93:15" pos:end="93:69">(<argument pos:start="93:16" pos:end="93:30"><expr pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:22">prob</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><literal type="number" pos:start="93:24" pos:end="93:24">0</literal></expr>]</index></name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:30">scan</name></expr></argument>, <argument pos:start="93:33" pos:end="93:43"><expr pos:start="93:33" pos:end="93:43"><name pos:start="93:33" pos:end="93:43">zigzag_scan</name></expr></argument>, <argument pos:start="93:46" pos:end="93:68"><expr pos:start="93:46" pos:end="93:68"><sizeof pos:start="93:46" pos:end="93:68">sizeof<argument_list pos:start="93:52" pos:end="93:68">(<argument pos:start="93:53" pos:end="93:67"><expr pos:start="93:53" pos:end="93:67"><name pos:start="93:53" pos:end="93:62"><name pos:start="93:53" pos:end="93:53">s</name><operator pos:start="93:54" pos:end="93:55">-&gt;</operator><name pos:start="93:56" pos:end="93:59">prob</name><index pos:start="93:60" pos:end="93:62">[<expr pos:start="93:61" pos:end="93:61"><literal type="number" pos:start="93:61" pos:end="93:61">0</literal></expr>]</index></name><operator pos:start="93:63" pos:end="93:63">.</operator><name pos:start="93:64" pos:end="93:67">scan</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="101:63"><if pos:start="99:5" pos:end="101:63">if <condition pos:start="99:8" pos:end="99:38">(<expr pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:19">keyframe</name></name> <operator pos:start="99:21" pos:end="99:22">||</operator> <name pos:start="99:24" pos:end="99:33"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:33">profile</name></name> <operator pos:start="99:35" pos:end="99:35">&gt;</operator> <literal type="number" pos:start="99:37" pos:end="99:37">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:63"><block_content pos:start="101:9" pos:end="101:63">

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><call pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:14">memset</name><argument_list pos:start="101:15" pos:end="101:62">(<argument pos:start="101:16" pos:end="101:31"><expr pos:start="101:16" pos:end="101:31"><name pos:start="101:16" pos:end="101:31"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:31">inter_dc_pred</name></name></expr></argument>, <argument pos:start="101:34" pos:end="101:34"><expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">0</literal></expr></argument> , <argument pos:start="101:38" pos:end="101:61"><expr pos:start="101:38" pos:end="101:61"><sizeof pos:start="101:38" pos:end="101:61">sizeof<argument_list pos:start="101:44" pos:end="101:61">(<argument pos:start="101:45" pos:end="101:60"><expr pos:start="101:45" pos:end="101:60"><name pos:start="101:45" pos:end="101:60"><name pos:start="101:45" pos:end="101:45">s</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:60">inter_dc_pred</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:72">/* B. Decoding information for all four macroblock-level features */</comment>

    <for pos:start="107:5" pos:end="135:5">for <control pos:start="107:9" pos:end="107:27">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:21"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <literal type="number" pos:start="107:21" pos:end="107:21">4</literal></expr>;</condition> <incr pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:24">i</name><operator pos:start="107:25" pos:end="107:26">++</operator></expr></incr>)</control> <block pos:start="107:29" pos:end="135:5">{<block_content pos:start="109:9" pos:end="133:9">

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:26">feature_enabled</name><index pos:start="109:27" pos:end="109:29">[<expr pos:start="109:28" pos:end="109:28"><name pos:start="109:28" pos:end="109:28">i</name></expr>]</index></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <call pos:start="109:33" pos:end="109:46"><name pos:start="109:33" pos:end="109:43">vp8_rac_get</name><argument_list pos:start="109:44" pos:end="109:46">(<argument pos:start="109:45" pos:end="109:45"><expr pos:start="109:45" pos:end="109:45"><name pos:start="109:45" pos:end="109:45">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="133:9"><if pos:start="111:9" pos:end="133:9">if <condition pos:start="111:12" pos:end="111:34">(<expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">feature_enabled</name><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">i</name></expr>]</index></name></expr>)</condition> <block pos:start="111:36" pos:end="133:9">{<block_content pos:start="113:14" pos:end="131:105">

             <expr_stmt pos:start="113:14" pos:end="113:65"><expr pos:start="113:14" pos:end="113:64"><name pos:start="113:14" pos:end="113:39"><name pos:start="113:14" pos:end="113:14">s</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:36">feature_present_prob</name><index pos:start="113:37" pos:end="113:39">[<expr pos:start="113:38" pos:end="113:38"><name pos:start="113:38" pos:end="113:38">i</name></expr>]</index></name> <operator pos:start="113:41" pos:end="113:41">=</operator> <call pos:start="113:43" pos:end="113:64"><name pos:start="113:43" pos:end="113:58">vp8_rac_get_uint</name><argument_list pos:start="113:59" pos:end="113:64">(<argument pos:start="113:60" pos:end="113:60"><expr pos:start="113:60" pos:end="113:60"><name pos:start="113:60" pos:end="113:60">c</name></expr></argument>, <argument pos:start="113:63" pos:end="113:63"><expr pos:start="113:63" pos:end="113:63"><literal type="number" pos:start="113:63" pos:end="113:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



             <for pos:start="117:14" pos:end="121:67">for <control pos:start="117:18" pos:end="117:36">(<init pos:start="117:19" pos:end="117:24"><expr pos:start="117:19" pos:end="117:23"><name pos:start="117:19" pos:end="117:19">j</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <literal type="number" pos:start="117:23" pos:end="117:23">0</literal></expr>;</init> <condition pos:start="117:26" pos:end="117:31"><expr pos:start="117:26" pos:end="117:30"><name pos:start="117:26" pos:end="117:26">j</name> <operator pos:start="117:28" pos:end="117:28">&lt;</operator> <literal type="number" pos:start="117:30" pos:end="117:30">3</literal></expr>;</condition> <incr pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:33">j</name><operator pos:start="117:34" pos:end="117:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="119:18" pos:end="121:67"><block_content pos:start="119:18" pos:end="121:67">

                 <expr_stmt pos:start="119:18" pos:end="121:67"><expr pos:start="119:18" pos:end="121:66"><name pos:start="119:18" pos:end="119:44"><name pos:start="119:18" pos:end="119:18">s</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:38">feature_index_prob</name><index pos:start="119:39" pos:end="119:41">[<expr pos:start="119:40" pos:end="119:40"><name pos:start="119:40" pos:end="119:40">i</name></expr>]</index><index pos:start="119:42" pos:end="119:44">[<expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">j</name></expr>]</index></name> <operator pos:start="119:46" pos:end="119:46">=</operator>

                     <ternary pos:start="121:22" pos:end="121:66"><condition pos:start="121:22" pos:end="121:37"><expr pos:start="121:22" pos:end="121:35"><call pos:start="121:22" pos:end="121:35"><name pos:start="121:22" pos:end="121:32">vp8_rac_get</name><argument_list pos:start="121:33" pos:end="121:35">(<argument pos:start="121:34" pos:end="121:34"><expr pos:start="121:34" pos:end="121:34"><name pos:start="121:34" pos:end="121:34">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="121:39" pos:end="121:60"> <expr pos:start="121:39" pos:end="121:60"><call pos:start="121:39" pos:end="121:60"><name pos:start="121:39" pos:end="121:54">vp8_rac_get_uint</name><argument_list pos:start="121:55" pos:end="121:60">(<argument pos:start="121:56" pos:end="121:56"><expr pos:start="121:56" pos:end="121:56"><name pos:start="121:56" pos:end="121:56">c</name></expr></argument>, <argument pos:start="121:59" pos:end="121:59"><expr pos:start="121:59" pos:end="121:59"><literal type="number" pos:start="121:59" pos:end="121:59">8</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="121:62" pos:end="121:66">: <expr pos:start="121:64" pos:end="121:66"><literal type="number" pos:start="121:64" pos:end="121:66">255</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></for>



             <if_stmt pos:start="125:14" pos:end="131:105"><if pos:start="125:14" pos:end="131:105">if <condition pos:start="125:17" pos:end="125:43">(<expr pos:start="125:18" pos:end="125:42"><name pos:start="125:18" pos:end="125:42"><name pos:start="125:18" pos:end="125:39">vp7_feature_value_size</name><index pos:start="125:40" pos:end="125:42">[<expr pos:start="125:41" pos:end="125:41"><name pos:start="125:41" pos:end="125:41">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="127:18" pos:end="131:105"><block_content pos:start="127:18" pos:end="131:105">

                 <for pos:start="127:18" pos:end="131:105">for <control pos:start="127:22" pos:end="127:40">(<init pos:start="127:23" pos:end="127:28"><expr pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:23">j</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>;</init> <condition pos:start="127:30" pos:end="127:35"><expr pos:start="127:30" pos:end="127:34"><name pos:start="127:30" pos:end="127:30">j</name> <operator pos:start="127:32" pos:end="127:32">&lt;</operator> <literal type="number" pos:start="127:34" pos:end="127:34">4</literal></expr>;</condition> <incr pos:start="127:37" pos:end="127:39"><expr pos:start="127:37" pos:end="127:39"><name pos:start="127:37" pos:end="127:37">j</name><operator pos:start="127:38" pos:end="127:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:22" pos:end="131:105"><block_content pos:start="129:22" pos:end="131:105">

                     <expr_stmt pos:start="129:22" pos:end="131:105"><expr pos:start="129:22" pos:end="131:104"><name pos:start="129:22" pos:end="129:43"><name pos:start="129:22" pos:end="129:22">s</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:37">feature_value</name><index pos:start="129:38" pos:end="129:40">[<expr pos:start="129:39" pos:end="129:39"><name pos:start="129:39" pos:end="129:39">i</name></expr>]</index><index pos:start="129:41" pos:end="129:43">[<expr pos:start="129:42" pos:end="129:42"><name pos:start="129:42" pos:end="129:42">j</name></expr>]</index></name> <operator pos:start="129:45" pos:end="129:45">=</operator>

                         <ternary pos:start="131:26" pos:end="131:104"><condition pos:start="131:26" pos:end="131:41"><expr pos:start="131:26" pos:end="131:39"><call pos:start="131:26" pos:end="131:39"><name pos:start="131:26" pos:end="131:36">vp8_rac_get</name><argument_list pos:start="131:37" pos:end="131:39">(<argument pos:start="131:38" pos:end="131:38"><expr pos:start="131:38" pos:end="131:38"><name pos:start="131:38" pos:end="131:38">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="131:43" pos:end="131:100"> <expr pos:start="131:43" pos:end="131:100"><call pos:start="131:43" pos:end="131:100"><name pos:start="131:43" pos:end="131:58">vp8_rac_get_uint</name><argument_list pos:start="131:59" pos:end="131:100">(<argument pos:start="131:60" pos:end="131:60"><expr pos:start="131:60" pos:end="131:60"><name pos:start="131:60" pos:end="131:60">c</name></expr></argument>, <argument pos:start="131:63" pos:end="131:99"><expr pos:start="131:63" pos:end="131:99"><name pos:start="131:63" pos:end="131:99"><name pos:start="131:63" pos:end="131:84">vp7_feature_value_size</name><index pos:start="131:85" pos:end="131:96">[<expr pos:start="131:86" pos:end="131:95"><name pos:start="131:86" pos:end="131:95"><name pos:start="131:86" pos:end="131:86">s</name><operator pos:start="131:87" pos:end="131:88">-&gt;</operator><name pos:start="131:89" pos:end="131:95">profile</name></name></expr>]</index><index pos:start="131:97" pos:end="131:99">[<expr pos:start="131:98" pos:end="131:98"><name pos:start="131:98" pos:end="131:98">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="131:102" pos:end="131:104">: <expr pos:start="131:104" pos:end="131:104"><literal type="number" pos:start="131:104" pos:end="131:104">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="139:5" pos:end="139:35"><expr pos:start="139:5" pos:end="139:34"><name pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:19">segmentation</name><operator pos:start="139:20" pos:end="139:20">.</operator><name pos:start="139:21" pos:end="139:27">enabled</name></name>    <operator pos:start="139:32" pos:end="139:32">=</operator> <literal type="number" pos:start="139:34" pos:end="139:34">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:35"><expr pos:start="141:5" pos:end="141:34"><name pos:start="141:5" pos:end="141:30"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:19">segmentation</name><operator pos:start="141:20" pos:end="141:20">.</operator><name pos:start="141:21" pos:end="141:30">update_map</name></name> <operator pos:start="141:32" pos:end="141:32">=</operator> <literal type="number" pos:start="141:34" pos:end="141:34">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:35"><expr pos:start="143:5" pos:end="143:34"><name pos:start="143:5" pos:end="143:23"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:15">lf_delta</name><operator pos:start="143:16" pos:end="143:16">.</operator><name pos:start="143:17" pos:end="143:23">enabled</name></name>        <operator pos:start="143:32" pos:end="143:32">=</operator> <literal type="number" pos:start="143:34" pos:end="143:34">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:32"><expr pos:start="147:5" pos:end="147:31"><name pos:start="147:5" pos:end="147:27"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:27">num_coeff_partitions</name></name> <operator pos:start="147:29" pos:end="147:29">=</operator> <literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:70"><expr pos:start="149:5" pos:end="149:69"><call pos:start="149:5" pos:end="149:69"><name pos:start="149:5" pos:end="149:30">ff_vp56_init_range_decoder</name><argument_list pos:start="149:31" pos:end="149:69">(<argument pos:start="149:32" pos:end="149:53"><expr pos:start="149:32" pos:end="149:53"><operator pos:start="149:32" pos:end="149:32">&amp;</operator><name pos:start="149:33" pos:end="149:53"><name pos:start="149:33" pos:end="149:33">s</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:50">coeff_partition</name><index pos:start="149:51" pos:end="149:53">[<expr pos:start="149:52" pos:end="149:52"><literal type="number" pos:start="149:52" pos:end="149:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:56" pos:end="149:58"><expr pos:start="149:56" pos:end="149:58"><name pos:start="149:56" pos:end="149:58">buf</name></expr></argument>, <argument pos:start="149:61" pos:end="149:68"><expr pos:start="149:61" pos:end="149:68"><name pos:start="149:61" pos:end="149:68">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="153:5" pos:end="163:5"><if pos:start="153:5" pos:end="163:5">if <condition pos:start="153:8" pos:end="157:79">(<expr pos:start="153:9" pos:end="157:78"><operator pos:start="153:9" pos:end="153:9">!</operator><name pos:start="153:10" pos:end="153:28"><name pos:start="153:10" pos:end="153:10">s</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:28">macroblocks_base</name></name> <operator pos:start="153:30" pos:end="153:31">||</operator> <comment type="block" pos:start="153:33" pos:end="153:49">/* first frame */</comment>

        <name pos:start="155:9" pos:end="155:13">width</name> <operator pos:start="155:15" pos:end="155:16">!=</operator> <name pos:start="155:18" pos:end="155:32"><name pos:start="155:18" pos:end="155:18">s</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:25">avctx</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:32">width</name></name> <operator pos:start="155:34" pos:end="155:35">||</operator> <name pos:start="155:37" pos:end="155:42">height</name> <operator pos:start="155:44" pos:end="155:45">!=</operator> <name pos:start="155:47" pos:end="155:62"><name pos:start="155:47" pos:end="155:47">s</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:54">avctx</name><operator pos:start="155:55" pos:end="155:56">-&gt;</operator><name pos:start="155:57" pos:end="155:62">height</name></name> <operator pos:start="155:64" pos:end="155:65">||</operator>

        <operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:14">width</name> <operator pos:start="157:16" pos:end="157:16">+</operator> <literal type="number" pos:start="157:18" pos:end="157:19">15</literal><operator pos:start="157:20" pos:end="157:20">)</operator> <operator pos:start="157:22" pos:end="157:22">/</operator> <literal type="number" pos:start="157:24" pos:end="157:25">16</literal> <operator pos:start="157:27" pos:end="157:28">!=</operator> <name pos:start="157:30" pos:end="157:40"><name pos:start="157:30" pos:end="157:30">s</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:40">mb_width</name></name> <operator pos:start="157:42" pos:end="157:43">||</operator> <operator pos:start="157:45" pos:end="157:45">(</operator><name pos:start="157:46" pos:end="157:51">height</name> <operator pos:start="157:53" pos:end="157:53">+</operator> <literal type="number" pos:start="157:55" pos:end="157:56">15</literal><operator pos:start="157:57" pos:end="157:57">)</operator> <operator pos:start="157:59" pos:end="157:59">/</operator> <literal type="number" pos:start="157:61" pos:end="157:62">16</literal> <operator pos:start="157:64" pos:end="157:65">!=</operator> <name pos:start="157:67" pos:end="157:78"><name pos:start="157:67" pos:end="157:67">s</name><operator pos:start="157:68" pos:end="157:69">-&gt;</operator><name pos:start="157:70" pos:end="157:78">mb_height</name></name></expr>)</condition> <block pos:start="157:81" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:23">

        <if_stmt pos:start="159:9" pos:end="161:23"><if pos:start="159:9" pos:end="161:23">if <condition pos:start="159:12" pos:end="159:64">(<expr pos:start="159:13" pos:end="159:63"><operator pos:start="159:13" pos:end="159:13">(</operator><name pos:start="159:14" pos:end="159:16">ret</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:58"><name pos:start="159:20" pos:end="159:40">vp7_update_dimensions</name><argument_list pos:start="159:41" pos:end="159:58">(<argument pos:start="159:42" pos:end="159:42"><expr pos:start="159:42" pos:end="159:42"><name pos:start="159:42" pos:end="159:42">s</name></expr></argument>, <argument pos:start="159:45" pos:end="159:49"><expr pos:start="159:45" pos:end="159:49"><name pos:start="159:45" pos:end="159:49">width</name></expr></argument>, <argument pos:start="159:52" pos:end="159:57"><expr pos:start="159:52" pos:end="159:57"><name pos:start="159:52" pos:end="159:57">height</name></expr></argument>)</argument_list></call><operator pos:start="159:59" pos:end="159:59">)</operator> <operator pos:start="159:61" pos:end="159:61">&lt;</operator> <literal type="number" pos:start="159:63" pos:end="159:63">0</literal></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:23"><block_content pos:start="161:13" pos:end="161:23">

            <return pos:start="161:13" pos:end="161:23">return <expr pos:start="161:20" pos:end="161:22"><name pos:start="161:20" pos:end="161:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:35">/* C. Dequantization indices */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:22"><expr pos:start="169:5" pos:end="169:21"><call pos:start="169:5" pos:end="169:21"><name pos:start="169:5" pos:end="169:18">vp7_get_quants</name><argument_list pos:start="169:19" pos:end="169:21">(<argument pos:start="169:20" pos:end="169:20"><expr pos:start="169:20" pos:end="169:20"><name pos:start="169:20" pos:end="169:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:67">/* D. Golden frame update flag (a Flag) for interframes only */</comment>

    <if_stmt pos:start="175:5" pos:end="181:5"><if pos:start="175:5" pos:end="181:5">if <condition pos:start="175:8" pos:end="175:21">(<expr pos:start="175:9" pos:end="175:20"><operator pos:start="175:9" pos:end="175:9">!</operator><name pos:start="175:10" pos:end="175:20"><name pos:start="175:10" pos:end="175:10">s</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:20">keyframe</name></name></expr>)</condition> <block pos:start="175:23" pos:end="181:5">{<block_content pos:start="177:9" pos:end="179:44">

        <expr_stmt pos:start="177:9" pos:end="177:81"><expr pos:start="177:9" pos:end="177:80"><name pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:24">update_golden</name></name> <operator pos:start="177:26" pos:end="177:26">=</operator> <ternary pos:start="177:28" pos:end="177:80"><condition pos:start="177:28" pos:end="177:43"><expr pos:start="177:28" pos:end="177:41"><call pos:start="177:28" pos:end="177:41"><name pos:start="177:28" pos:end="177:38">vp8_rac_get</name><argument_list pos:start="177:39" pos:end="177:41">(<argument pos:start="177:40" pos:end="177:40"><expr pos:start="177:40" pos:end="177:40"><name pos:start="177:40" pos:end="177:40">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="177:45" pos:end="177:62"> <expr pos:start="177:45" pos:end="177:62"><name pos:start="177:45" pos:end="177:62">VP56_FRAME_CURRENT</name></expr> </then><else pos:start="177:64" pos:end="177:80">: <expr pos:start="177:66" pos:end="177:80"><name pos:start="177:66" pos:end="177:80">VP56_FRAME_NONE</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:44"><expr pos:start="179:9" pos:end="179:43"><name pos:start="179:9" pos:end="179:39"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:20">sign_bias</name><index pos:start="179:21" pos:end="179:39">[<expr pos:start="179:22" pos:end="179:38"><name pos:start="179:22" pos:end="179:38">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="179:41" pos:end="179:41">=</operator> <literal type="number" pos:start="179:43" pos:end="179:43">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:32"><expr pos:start="185:5" pos:end="185:31"><name pos:start="185:5" pos:end="185:18"><name pos:start="185:5" pos:end="185:5">s</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:18">update_last</name></name>          <operator pos:start="185:29" pos:end="185:29">=</operator> <literal type="number" pos:start="185:31" pos:end="185:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:32"><expr pos:start="187:5" pos:end="187:31"><name pos:start="187:5" pos:end="187:27"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:27">update_probabilities</name></name> <operator pos:start="187:29" pos:end="187:29">=</operator> <literal type="number" pos:start="187:31" pos:end="187:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:32"><expr pos:start="189:5" pos:end="189:31"><name pos:start="189:5" pos:end="189:19"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:19">fade_present</name></name>         <operator pos:start="189:29" pos:end="189:29">=</operator> <literal type="number" pos:start="189:31" pos:end="189:31">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="193:5" pos:end="207:5"><if pos:start="193:5" pos:end="207:5">if <condition pos:start="193:8" pos:end="193:23">(<expr pos:start="193:9" pos:end="193:22"><name pos:start="193:9" pos:end="193:18"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:18">profile</name></name> <operator pos:start="193:20" pos:end="193:20">&gt;</operator> <literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr>)</condition> <block pos:start="193:25" pos:end="207:5">{<block_content pos:start="195:9" pos:end="205:45">

        <expr_stmt pos:start="195:9" pos:end="195:49"><expr pos:start="195:9" pos:end="195:48"><name pos:start="195:9" pos:end="195:31"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:31">update_probabilities</name></name> <operator pos:start="195:33" pos:end="195:33">=</operator> <call pos:start="195:35" pos:end="195:48"><name pos:start="195:35" pos:end="195:45">vp8_rac_get</name><argument_list pos:start="195:46" pos:end="195:48">(<argument pos:start="195:47" pos:end="195:47"><expr pos:start="195:47" pos:end="195:47"><name pos:start="195:47" pos:end="195:47">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="199:36"><if pos:start="197:9" pos:end="199:36">if <condition pos:start="197:12" pos:end="197:37">(<expr pos:start="197:13" pos:end="197:36"><operator pos:start="197:13" pos:end="197:13">!</operator><name pos:start="197:14" pos:end="197:36"><name pos:start="197:14" pos:end="197:14">s</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:36">update_probabilities</name></name></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:36"><block_content pos:start="199:13" pos:end="199:36">

            <expr_stmt pos:start="199:13" pos:end="199:36"><expr pos:start="199:13" pos:end="199:35"><name pos:start="199:13" pos:end="199:22"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:19">prob</name><index pos:start="199:20" pos:end="199:22">[<expr pos:start="199:21" pos:end="199:21"><literal type="number" pos:start="199:21" pos:end="199:21">1</literal></expr>]</index></name> <operator pos:start="199:24" pos:end="199:24">=</operator> <name pos:start="199:26" pos:end="199:35"><name pos:start="199:26" pos:end="199:26">s</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:32">prob</name><index pos:start="199:33" pos:end="199:35">[<expr pos:start="199:34" pos:end="199:34"><literal type="number" pos:start="199:34" pos:end="199:34">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="203:9" pos:end="205:45"><if pos:start="203:9" pos:end="205:45">if <condition pos:start="203:12" pos:end="203:25">(<expr pos:start="203:13" pos:end="203:24"><operator pos:start="203:13" pos:end="203:13">!</operator><name pos:start="203:14" pos:end="203:24"><name pos:start="203:14" pos:end="203:14">s</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:24">keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:45"><block_content pos:start="205:13" pos:end="205:45">

            <expr_stmt pos:start="205:13" pos:end="205:45"><expr pos:start="205:13" pos:end="205:44"><name pos:start="205:13" pos:end="205:27"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:27">fade_present</name></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <call pos:start="205:31" pos:end="205:44"><name pos:start="205:31" pos:end="205:41">vp8_rac_get</name><argument_list pos:start="205:42" pos:end="205:44">(<argument pos:start="205:43" pos:end="205:43"><expr pos:start="205:43" pos:end="205:43"><name pos:start="205:43" pos:end="205:43">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:50">/* E. Fading information for previous frame */</comment>

    <if_stmt pos:start="213:5" pos:end="219:5"><if pos:start="213:5" pos:end="219:5">if <condition pos:start="213:8" pos:end="213:42">(<expr pos:start="213:9" pos:end="213:41"><name pos:start="213:9" pos:end="213:23"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:23">fade_present</name></name> <operator pos:start="213:25" pos:end="213:26">&amp;&amp;</operator> <call pos:start="213:28" pos:end="213:41"><name pos:start="213:28" pos:end="213:38">vp8_rac_get</name><argument_list pos:start="213:39" pos:end="213:41">(<argument pos:start="213:40" pos:end="213:40"><expr pos:start="213:40" pos:end="213:40"><name pos:start="213:40" pos:end="213:40">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="213:44" pos:end="219:5">{<block_content pos:start="215:9" pos:end="217:23">

        <if_stmt pos:start="215:9" pos:end="217:23"><if pos:start="215:9" pos:end="217:23">if <condition pos:start="215:12" pos:end="215:45">(<expr pos:start="215:13" pos:end="215:44"><operator pos:start="215:13" pos:end="215:13">(</operator><name pos:start="215:14" pos:end="215:16">ret</name> <operator pos:start="215:18" pos:end="215:18">=</operator> <call pos:start="215:20" pos:end="215:39"><name pos:start="215:20" pos:end="215:33">vp7_fade_frame</name><argument_list pos:start="215:34" pos:end="215:39">(<argument pos:start="215:35" pos:end="215:35"><expr pos:start="215:35" pos:end="215:35"><name pos:start="215:35" pos:end="215:35">s</name></expr></argument> ,<argument pos:start="215:38" pos:end="215:38"><expr pos:start="215:38" pos:end="215:38"><name pos:start="215:38" pos:end="215:38">c</name></expr></argument>)</argument_list></call><operator pos:start="215:40" pos:end="215:40">)</operator> <operator pos:start="215:42" pos:end="215:42">&lt;</operator> <literal type="number" pos:start="215:44" pos:end="215:44">0</literal></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:23"><block_content pos:start="217:13" pos:end="217:23">

            <return pos:start="217:13" pos:end="217:23">return <expr pos:start="217:20" pos:end="217:22"><name pos:start="217:20" pos:end="217:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:29">/* F. Loop filter type */</comment>

    <if_stmt pos:start="225:5" pos:end="227:42"><if pos:start="225:5" pos:end="227:42">if <condition pos:start="225:8" pos:end="225:20">(<expr pos:start="225:9" pos:end="225:19"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:19"><name pos:start="225:10" pos:end="225:10">s</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:19">profile</name></name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:42"><block_content pos:start="227:9" pos:end="227:42">

        <expr_stmt pos:start="227:9" pos:end="227:42"><expr pos:start="227:9" pos:end="227:41"><name pos:start="227:9" pos:end="227:24"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:17">filter</name><operator pos:start="227:18" pos:end="227:18">.</operator><name pos:start="227:19" pos:end="227:24">simple</name></name> <operator pos:start="227:26" pos:end="227:26">=</operator> <call pos:start="227:28" pos:end="227:41"><name pos:start="227:28" pos:end="227:38">vp8_rac_get</name><argument_list pos:start="227:39" pos:end="227:41">(<argument pos:start="227:40" pos:end="227:40"><expr pos:start="227:40" pos:end="227:40"><name pos:start="227:40" pos:end="227:40">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="231:5" pos:end="231:51">/* G. DCT coefficient ordering specification */</comment>

    <if_stmt pos:start="233:5" pos:end="237:69"><if pos:start="233:5" pos:end="237:69">if <condition pos:start="233:8" pos:end="233:23">(<expr pos:start="233:9" pos:end="233:22"><call pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:19">vp8_rac_get</name><argument_list pos:start="233:20" pos:end="233:22">(<argument pos:start="233:21" pos:end="233:21"><expr pos:start="233:21" pos:end="233:21"><name pos:start="233:21" pos:end="233:21">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="237:69"><block_content pos:start="235:9" pos:end="237:69">

        <for pos:start="235:9" pos:end="237:69">for <control pos:start="235:13" pos:end="235:32">(<init pos:start="235:14" pos:end="235:19"><expr pos:start="235:14" pos:end="235:18"><name pos:start="235:14" pos:end="235:14">i</name> <operator pos:start="235:16" pos:end="235:16">=</operator> <literal type="number" pos:start="235:18" pos:end="235:18">1</literal></expr>;</init> <condition pos:start="235:21" pos:end="235:27"><expr pos:start="235:21" pos:end="235:26"><name pos:start="235:21" pos:end="235:21">i</name> <operator pos:start="235:23" pos:end="235:23">&lt;</operator> <literal type="number" pos:start="235:25" pos:end="235:26">16</literal></expr>;</condition> <incr pos:start="235:29" pos:end="235:31"><expr pos:start="235:29" pos:end="235:31"><name pos:start="235:29" pos:end="235:29">i</name><operator pos:start="235:30" pos:end="235:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="237:13" pos:end="237:69"><block_content pos:start="237:13" pos:end="237:69">

            <expr_stmt pos:start="237:13" pos:end="237:69"><expr pos:start="237:13" pos:end="237:68"><name pos:start="237:13" pos:end="237:22"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:19">prob</name><index pos:start="237:20" pos:end="237:22">[<expr pos:start="237:21" pos:end="237:21"><literal type="number" pos:start="237:21" pos:end="237:21">0</literal></expr>]</index></name><operator pos:start="237:23" pos:end="237:23">.</operator><name pos:start="237:24" pos:end="237:30"><name pos:start="237:24" pos:end="237:27">scan</name><index pos:start="237:28" pos:end="237:30">[<expr pos:start="237:29" pos:end="237:29"><name pos:start="237:29" pos:end="237:29">i</name></expr>]</index></name> <operator pos:start="237:32" pos:end="237:32">=</operator> <name pos:start="237:34" pos:end="237:68"><name pos:start="237:34" pos:end="237:44">zigzag_scan</name><index pos:start="237:45" pos:end="237:68">[<expr pos:start="237:46" pos:end="237:67"><call pos:start="237:46" pos:end="237:67"><name pos:start="237:46" pos:end="237:61">vp8_rac_get_uint</name><argument_list pos:start="237:62" pos:end="237:67">(<argument pos:start="237:63" pos:end="237:63"><expr pos:start="237:63" pos:end="237:63"><name pos:start="237:63" pos:end="237:63">c</name></expr></argument>, <argument pos:start="237:66" pos:end="237:66"><expr pos:start="237:66" pos:end="237:66"><literal type="number" pos:start="237:66" pos:end="237:66">4</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="241:5" pos:end="241:32">/* H. Loop filter levels  */</comment>

    <if_stmt pos:start="243:5" pos:end="245:42"><if pos:start="243:5" pos:end="245:42">if <condition pos:start="243:8" pos:end="243:23">(<expr pos:start="243:9" pos:end="243:22"><name pos:start="243:9" pos:end="243:18"><name pos:start="243:9" pos:end="243:9">s</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:18">profile</name></name> <operator pos:start="243:20" pos:end="243:20">&gt;</operator> <literal type="number" pos:start="243:22" pos:end="243:22">0</literal></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:42"><block_content pos:start="245:9" pos:end="245:42">

        <expr_stmt pos:start="245:9" pos:end="245:42"><expr pos:start="245:9" pos:end="245:41"><name pos:start="245:9" pos:end="245:24"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:17">filter</name><operator pos:start="245:18" pos:end="245:18">.</operator><name pos:start="245:19" pos:end="245:24">simple</name></name> <operator pos:start="245:26" pos:end="245:26">=</operator> <call pos:start="245:28" pos:end="245:41"><name pos:start="245:28" pos:end="245:38">vp8_rac_get</name><argument_list pos:start="245:39" pos:end="245:41">(<argument pos:start="245:40" pos:end="245:40"><expr pos:start="245:40" pos:end="245:40"><name pos:start="245:40" pos:end="245:40">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:49"><expr pos:start="247:5" pos:end="247:48"><name pos:start="247:5" pos:end="247:19"><name pos:start="247:5" pos:end="247:5">s</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:13">filter</name><operator pos:start="247:14" pos:end="247:14">.</operator><name pos:start="247:15" pos:end="247:19">level</name></name>     <operator pos:start="247:25" pos:end="247:25">=</operator> <call pos:start="247:27" pos:end="247:48"><name pos:start="247:27" pos:end="247:42">vp8_rac_get_uint</name><argument_list pos:start="247:43" pos:end="247:48">(<argument pos:start="247:44" pos:end="247:44"><expr pos:start="247:44" pos:end="247:44"><name pos:start="247:44" pos:end="247:44">c</name></expr></argument>, <argument pos:start="247:47" pos:end="247:47"><expr pos:start="247:47" pos:end="247:47"><literal type="number" pos:start="247:47" pos:end="247:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:49"><expr pos:start="249:5" pos:end="249:48"><name pos:start="249:5" pos:end="249:23"><name pos:start="249:5" pos:end="249:5">s</name><operator pos:start="249:6" pos:end="249:7">-&gt;</operator><name pos:start="249:8" pos:end="249:13">filter</name><operator pos:start="249:14" pos:end="249:14">.</operator><name pos:start="249:15" pos:end="249:23">sharpness</name></name> <operator pos:start="249:25" pos:end="249:25">=</operator> <call pos:start="249:27" pos:end="249:48"><name pos:start="249:27" pos:end="249:42">vp8_rac_get_uint</name><argument_list pos:start="249:43" pos:end="249:48">(<argument pos:start="249:44" pos:end="249:44"><expr pos:start="249:44" pos:end="249:44"><name pos:start="249:44" pos:end="249:44">c</name></expr></argument>, <argument pos:start="249:47" pos:end="249:47"><expr pos:start="249:47" pos:end="249:47"><literal type="number" pos:start="249:47" pos:end="249:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="253:5" pos:end="253:79">/* I. DCT coefficient probability update; 13.3 Token Probability Updates */</comment>

    <expr_stmt pos:start="255:5" pos:end="255:38"><expr pos:start="255:5" pos:end="255:37"><call pos:start="255:5" pos:end="255:37"><name pos:start="255:5" pos:end="255:34">vp78_update_probability_tables</name><argument_list pos:start="255:35" pos:end="255:37">(<argument pos:start="255:36" pos:end="255:36"><expr pos:start="255:36" pos:end="255:36"><name pos:start="255:36" pos:end="255:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:26"><expr pos:start="259:5" pos:end="259:25"><name pos:start="259:5" pos:end="259:21"><name pos:start="259:5" pos:end="259:5">s</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:21">mbskip_enabled</name></name> <operator pos:start="259:23" pos:end="259:23">=</operator> <literal type="number" pos:start="259:25" pos:end="259:25">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="263:5" pos:end="263:72">/* J. The remaining frame header data occurs ONLY FOR INTERFRAMES */</comment>

    <if_stmt pos:start="265:5" pos:end="273:5"><if pos:start="265:5" pos:end="273:5">if <condition pos:start="265:8" pos:end="265:21">(<expr pos:start="265:9" pos:end="265:20"><operator pos:start="265:9" pos:end="265:9">!</operator><name pos:start="265:10" pos:end="265:20"><name pos:start="265:10" pos:end="265:10">s</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:20">keyframe</name></name></expr>)</condition> <block pos:start="265:23" pos:end="273:5">{<block_content pos:start="267:9" pos:end="271:73">

        <expr_stmt pos:start="267:9" pos:end="267:49"><expr pos:start="267:9" pos:end="267:48"><name pos:start="267:9" pos:end="267:22"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:15">prob</name><operator pos:start="267:16" pos:end="267:17">-&gt;</operator><name pos:start="267:18" pos:end="267:22">intra</name></name>  <operator pos:start="267:25" pos:end="267:25">=</operator> <call pos:start="267:27" pos:end="267:48"><name pos:start="267:27" pos:end="267:42">vp8_rac_get_uint</name><argument_list pos:start="267:43" pos:end="267:48">(<argument pos:start="267:44" pos:end="267:44"><expr pos:start="267:44" pos:end="267:44"><name pos:start="267:44" pos:end="267:44">c</name></expr></argument>, <argument pos:start="267:47" pos:end="267:47"><expr pos:start="267:47" pos:end="267:47"><literal type="number" pos:start="267:47" pos:end="267:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:49"><expr pos:start="269:9" pos:end="269:48"><name pos:start="269:9" pos:end="269:21"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:15">prob</name><operator pos:start="269:16" pos:end="269:17">-&gt;</operator><name pos:start="269:18" pos:end="269:21">last</name></name>   <operator pos:start="269:25" pos:end="269:25">=</operator> <call pos:start="269:27" pos:end="269:48"><name pos:start="269:27" pos:end="269:42">vp8_rac_get_uint</name><argument_list pos:start="269:43" pos:end="269:48">(<argument pos:start="269:44" pos:end="269:44"><expr pos:start="269:44" pos:end="269:44"><name pos:start="269:44" pos:end="269:44">c</name></expr></argument>, <argument pos:start="269:47" pos:end="269:47"><expr pos:start="269:47" pos:end="269:47"><literal type="number" pos:start="269:47" pos:end="269:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:73"><expr pos:start="271:9" pos:end="271:72"><call pos:start="271:9" pos:end="271:72"><name pos:start="271:9" pos:end="271:55">vp78_update_pred16x16_pred8x8_mvc_probabilities</name><argument_list pos:start="271:56" pos:end="271:72">(<argument pos:start="271:57" pos:end="271:57"><expr pos:start="271:57" pos:end="271:57"><name pos:start="271:57" pos:end="271:57">s</name></expr></argument>, <argument pos:start="271:60" pos:end="271:71"><expr pos:start="271:60" pos:end="271:71"><name pos:start="271:60" pos:end="271:71">VP7_MVC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="277:5" pos:end="277:13">return <expr pos:start="277:12" pos:end="277:12"><literal type="number" pos:start="277:12" pos:end="277:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
