<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22138.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">uint8_t</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:32">ff_stream_new_side_data</name><parameter_list pos:start="1:33" pos:end="3:42">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:41">AVStream</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">st</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:77"><decl pos:start="1:48" pos:end="1:77"><type pos:start="1:48" pos:end="1:77"><name pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:51">enum</name> <name pos:start="1:53" pos:end="1:72">AVPacketSideDataType</name></name></type> <name pos:start="1:74" pos:end="1:77">type</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:41"><decl pos:start="3:34" pos:end="3:41"><type pos:start="3:34" pos:end="3:41"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:41">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:16">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">AVPacketSideData</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sd</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">data</name> <init pos:start="11:19" pos:end="11:35">= <expr pos:start="11:21" pos:end="11:35"><call pos:start="11:21" pos:end="11:35"><name pos:start="11:21" pos:end="11:29">av_malloc</name><argument_list pos:start="11:30" pos:end="11:35">(<argument pos:start="11:31" pos:end="11:34"><expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:20"><if pos:start="15:5" pos:end="17:20">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:13">data</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="21:5" pos:end="39:5">for <control pos:start="21:9" pos:end="21:42">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:37"><expr pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:22">st</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:36">nb_side_data</name></name></expr>;</condition> <incr pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:39">i</name><operator pos:start="21:40" pos:end="21:41">++</operator></expr></incr>)</control> <block pos:start="21:44" pos:end="39:5">{<block_content pos:start="23:9" pos:end="37:9">

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:10">sd</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:30"><name pos:start="23:15" pos:end="23:16">st</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:27">side_data</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:29">(<expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:14">sd</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">type</name></name> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:28">type</name></expr>)</condition> <block pos:start="27:31" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:28">

            <expr_stmt pos:start="29:13" pos:end="29:32"><expr pos:start="29:13" pos:end="29:31"><call pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:20">av_freep</name><argument_list pos:start="29:21" pos:end="29:31">(<argument pos:start="29:22" pos:end="29:30"><expr pos:start="29:22" pos:end="29:30"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:24">sd</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:14">sd</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">data</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:27">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:14">sd</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:20">size</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:27">size</name></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:28">return <expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:21">sd</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:27">data</name></name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:78"><expr pos:start="43:5" pos:end="43:77"><name pos:start="43:5" pos:end="43:7">tmp</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:77"><name pos:start="43:11" pos:end="43:26">av_realloc_array</name><argument_list pos:start="43:27" pos:end="43:77">(<argument pos:start="43:28" pos:end="43:40"><expr pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:29">st</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:40">side_data</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:62"><expr pos:start="43:43" pos:end="43:62"><name pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:44">st</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:58">nb_side_data</name></name> <operator pos:start="43:60" pos:end="43:60">+</operator> <literal type="number" pos:start="43:62" pos:end="43:62">1</literal></expr></argument>, <argument pos:start="43:65" pos:end="43:76"><expr pos:start="43:65" pos:end="43:76"><sizeof pos:start="43:65" pos:end="43:76">sizeof<argument_list pos:start="43:71" pos:end="43:76">(<argument pos:start="43:72" pos:end="43:75"><expr pos:start="43:72" pos:end="43:75"><operator pos:start="43:72" pos:end="43:72">*</operator><name pos:start="43:73" pos:end="43:75">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:12">tmp</name></expr>)</condition> <block pos:start="45:15" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:20">

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><call pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:16">av_freep</name><argument_list pos:start="47:17" pos:end="47:23">(<argument pos:start="47:18" pos:end="47:22"><expr pos:start="47:18" pos:end="47:22"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:22">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:20">return <expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:17">side_data</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:23">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:20">nb_side_data</name></name><operator pos:start="57:21" pos:end="57:22">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:46"><expr pos:start="61:5" pos:end="61:45"><name pos:start="61:5" pos:end="61:6">sd</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <operator pos:start="61:10" pos:end="61:10">&amp;</operator><name pos:start="61:11" pos:end="61:45"><name pos:start="61:11" pos:end="61:12">st</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:23">side_data</name><index pos:start="61:24" pos:end="61:45">[<expr pos:start="61:25" pos:end="61:44"><name pos:start="61:25" pos:end="61:40"><name pos:start="61:25" pos:end="61:26">st</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:40">nb_side_data</name></name> <operator pos:start="61:42" pos:end="61:42">-</operator> <literal type="number" pos:start="61:44" pos:end="61:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:6">sd</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:12">type</name></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:19">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:6">sd</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:12">data</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:19">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:6">sd</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:12">size</name></name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:19">size</name></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:16">return <expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">data</name></expr>;</return>

</block_content>}</block></function>
</unit>
