<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8381.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">abi_long</name></type> <name pos:start="1:24" pos:end="1:32">do_msgsnd</name><parameter_list pos:start="1:33" pos:end="3:64">(<parameter pos:start="1:34" pos:end="1:42"><decl pos:start="1:34" pos:end="1:42"><type pos:start="1:34" pos:end="1:42"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:42">msqid</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">abi_long</name></type> <name pos:start="1:54" pos:end="1:57">msgp</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:51"><decl pos:start="3:34" pos:end="3:51"><type pos:start="3:34" pos:end="3:51"><name pos:start="3:34" pos:end="3:41">unsigned</name> <name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:51">msgsz</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:63"><decl pos:start="3:54" pos:end="3:63"><type pos:start="3:54" pos:end="3:63"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:63">msgflg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:15">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:24">target_msgbuf</name></name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:35">target_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">msgbuf</name></name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">host_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">abi_long</name></type> <name pos:start="11:14" pos:end="11:16">ret</name> <init pos:start="11:18" pos:end="11:20">= <expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:30"><if pos:start="15:5" pos:end="17:30">if <condition pos:start="15:8" pos:end="15:59">(<expr pos:start="15:9" pos:end="15:58"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:58"><name pos:start="15:10" pos:end="15:25">lock_user_struct</name><argument_list pos:start="15:26" pos:end="15:58">(<argument pos:start="15:27" pos:end="15:37"><expr pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:37">VERIFY_READ</name></expr></argument>, <argument pos:start="15:40" pos:end="15:48"><expr pos:start="15:40" pos:end="15:48"><name pos:start="15:40" pos:end="15:48">target_mb</name></expr></argument>, <argument pos:start="15:51" pos:end="15:54"><expr pos:start="15:51" pos:end="15:54"><name pos:start="15:51" pos:end="15:54">msgp</name></expr></argument>, <argument pos:start="15:57" pos:end="15:57"><expr pos:start="15:57" pos:end="15:57"><literal type="number" pos:start="15:57" pos:end="15:57">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:30"><block_content pos:start="17:9" pos:end="17:30">

        <return pos:start="17:9" pos:end="17:30">return <expr pos:start="17:16" pos:end="17:29"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:11">host_mb</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:40"><name pos:start="19:15" pos:end="19:20">malloc</name><argument_list pos:start="19:21" pos:end="19:40">(<argument pos:start="19:22" pos:end="19:39"><expr pos:start="19:22" pos:end="19:39"><name pos:start="19:22" pos:end="19:26">msgsz</name><operator pos:start="19:27" pos:end="19:27">+</operator><sizeof pos:start="19:28" pos:end="19:39">sizeof<argument_list pos:start="19:34" pos:end="19:39">(<argument pos:start="19:35" pos:end="19:38"><expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">long</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11">host_mb</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">mtype</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:30">abi_long</name><operator pos:start="21:31" pos:end="21:31">)</operator> <call pos:start="21:33" pos:end="21:57"><name pos:start="21:33" pos:end="21:39">tswapal</name><argument_list pos:start="21:40" pos:end="21:57">(<argument pos:start="21:41" pos:end="21:56"><expr pos:start="21:41" pos:end="21:56"><name pos:start="21:41" pos:end="21:56"><name pos:start="21:41" pos:end="21:49">target_mb</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:56">mtype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><call pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:10">memcpy</name><argument_list pos:start="23:11" pos:end="23:51">(<argument pos:start="23:12" pos:end="23:25"><expr pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:18">host_mb</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">mtext</name></name></expr></argument>, <argument pos:start="23:28" pos:end="23:43"><expr pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:36">target_mb</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:43">mtext</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:50"><expr pos:start="23:46" pos:end="23:50"><name pos:start="23:46" pos:end="23:50">msgsz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:58"><name pos:start="25:11" pos:end="25:19">get_errno</name><argument_list pos:start="25:20" pos:end="25:58">(<argument pos:start="25:21" pos:end="25:57"><expr pos:start="25:21" pos:end="25:57"><call pos:start="25:21" pos:end="25:57"><name pos:start="25:21" pos:end="25:26">msgsnd</name><argument_list pos:start="25:27" pos:end="25:57">(<argument pos:start="25:28" pos:end="25:32"><expr pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:32">msqid</name></expr></argument>, <argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:41">host_mb</name></expr></argument>, <argument pos:start="25:44" pos:end="25:48"><expr pos:start="25:44" pos:end="25:48"><name pos:start="25:44" pos:end="25:48">msgsz</name></expr></argument>, <argument pos:start="25:51" pos:end="25:56"><expr pos:start="25:51" pos:end="25:56"><name pos:start="25:51" pos:end="25:56">msgflg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><call pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:8">free</name><argument_list pos:start="27:9" pos:end="27:17">(<argument pos:start="27:10" pos:end="27:16"><expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:16">host_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><call pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:22">unlock_user_struct</name><argument_list pos:start="29:23" pos:end="29:42">(<argument pos:start="29:24" pos:end="29:32"><expr pos:start="29:24" pos:end="29:32"><name pos:start="29:24" pos:end="29:32">target_mb</name></expr></argument>, <argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">msgp</name></expr></argument>, <argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:15">return <expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
