<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3341.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">curl_setup_preadv</name><parameter_list pos:start="1:30" pos:end="1:67">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:61">CURLAIOCB</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:33">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CURLState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">running</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVCURLState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:18">start</name> <init pos:start="15:20" pos:end="15:32">= <expr pos:start="15:22" pos:end="15:32"><name pos:start="15:22" pos:end="15:32"><name pos:start="15:22" pos:end="15:24">acb</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:32">offset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:16">end</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><call pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:19">qemu_mutex_lock</name><argument_list pos:start="21:20" pos:end="21:30">(<argument pos:start="21:21" pos:end="21:29"><expr pos:start="21:21" pos:end="21:29"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:22">s</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:29">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:68">// In case we have the requested data already (e.g. read-ahead),</comment>

    <comment type="line" pos:start="27:5" pos:end="27:49">// we can just call the callback and be done.</comment>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:49">(<expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:21">curl_find_buf</name><argument_list pos:start="29:22" pos:end="29:48">(<argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">s</name></expr></argument>, <argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><name pos:start="29:26" pos:end="29:30">start</name></expr></argument>, <argument pos:start="29:33" pos:end="29:42"><expr pos:start="29:33" pos:end="29:42"><name pos:start="29:33" pos:end="29:42"><name pos:start="29:33" pos:end="29:35">acb</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:42">bytes</name></name></expr></argument>, <argument pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><name pos:start="29:45" pos:end="29:47">acb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:51" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="37:5" pos:end="37:51">// No cache found, so let's start a new request</comment>

    <for pos:start="39:5" pos:end="55:5">for <control pos:start="39:9" pos:end="39:12">(<init pos:start="39:10" pos:end="39:10">;</init><condition pos:start="39:11" pos:end="39:11">;</condition><incr/>)</control> <block pos:start="39:14" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:35">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:13">state</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:31">curl_find_state</name><argument_list pos:start="41:32" pos:end="41:34">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:18">(<expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:17">state</name></expr>)</condition> <block pos:start="43:20" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><call pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:25">qemu_mutex_unlock</name><argument_list pos:start="49:26" pos:end="49:36">(<argument pos:start="49:27" pos:end="49:35"><expr pos:start="49:27" pos:end="49:35"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:35">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><call pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:16">aio_poll</name><argument_list pos:start="51:17" pos:end="51:48">(<argument pos:start="51:18" pos:end="51:41"><expr pos:start="51:18" pos:end="51:41"><call pos:start="51:18" pos:end="51:41"><name pos:start="51:18" pos:end="51:37">bdrv_get_aio_context</name><argument_list pos:start="51:38" pos:end="51:41">(<argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:44" pos:end="51:47"><expr pos:start="51:44" pos:end="51:47"><name pos:start="51:44" pos:end="51:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><call pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:23">qemu_mutex_lock</name><argument_list pos:start="53:24" pos:end="53:34">(<argument pos:start="53:25" pos:end="53:33"><expr pos:start="53:25" pos:end="53:33"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:33"><name pos:start="53:26" pos:end="53:26">s</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:33">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:38">(<expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:23">curl_init_state</name><argument_list pos:start="59:24" pos:end="59:33">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">s</name></expr></argument>, <argument pos:start="59:28" pos:end="59:32"><expr pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:32">state</name></expr></argument>)</argument_list></call> <operator pos:start="59:35" pos:end="59:35">&lt;</operator> <literal type="number" pos:start="59:37" pos:end="59:37">0</literal></expr>)</condition> <block pos:start="59:40" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:17">

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><call pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:24">curl_clean_state</name><argument_list pos:start="61:25" pos:end="61:31">(<argument pos:start="61:26" pos:end="61:30"><expr pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:30">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:11">acb</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">ret</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <operator pos:start="63:20" pos:end="63:20">-</operator><name pos:start="63:21" pos:end="63:23">EIO</name></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:7">acb</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:14">start</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:47"><expr pos:start="73:5" pos:end="73:46"><name pos:start="73:5" pos:end="73:12"><name pos:start="73:5" pos:end="73:7">acb</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:12">end</name></name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:46"><name pos:start="73:16" pos:end="73:18">MIN</name><argument_list pos:start="73:19" pos:end="73:46">(<argument pos:start="73:20" pos:end="73:29"><expr pos:start="73:20" pos:end="73:29"><name pos:start="73:20" pos:end="73:29"><name pos:start="73:20" pos:end="73:22">acb</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">bytes</name></name></expr></argument>, <argument pos:start="73:32" pos:end="73:45"><expr pos:start="73:32" pos:end="73:45"><name pos:start="73:32" pos:end="73:37"><name pos:start="73:32" pos:end="73:32">s</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:37">len</name></name> <operator pos:start="73:39" pos:end="73:39">-</operator> <name pos:start="73:41" pos:end="73:45">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:9">state</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:18">buf_off</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><call pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:10">g_free</name><argument_list pos:start="79:11" pos:end="79:27">(<argument pos:start="79:12" pos:end="79:26"><expr pos:start="79:12" pos:end="79:26"><name pos:start="79:12" pos:end="79:26"><name pos:start="79:12" pos:end="79:16">state</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:26">orig_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:20"><name pos:start="81:5" pos:end="81:9">state</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:20">buf_start</name></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:28">start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:71"><expr pos:start="83:5" pos:end="83:70"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:9">state</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:18">buf_len</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <call pos:start="83:22" pos:end="83:70"><name pos:start="83:22" pos:end="83:24">MIN</name><argument_list pos:start="83:25" pos:end="83:70">(<argument pos:start="83:26" pos:end="83:53"><expr pos:start="83:26" pos:end="83:53"><name pos:start="83:26" pos:end="83:33"><name pos:start="83:26" pos:end="83:28">acb</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:33">end</name></name> <operator pos:start="83:35" pos:end="83:35">+</operator> <name pos:start="83:37" pos:end="83:53"><name pos:start="83:37" pos:end="83:37">s</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:53">readahead_size</name></name></expr></argument>, <argument pos:start="83:56" pos:end="83:69"><expr pos:start="83:56" pos:end="83:69"><name pos:start="83:56" pos:end="83:61"><name pos:start="83:56" pos:end="83:56">s</name><operator pos:start="83:57" pos:end="83:58">-&gt;</operator><name pos:start="83:59" pos:end="83:61">len</name></name> <operator pos:start="83:63" pos:end="83:63">-</operator> <name pos:start="83:65" pos:end="83:69">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:37"><expr pos:start="85:5" pos:end="85:36"><name pos:start="85:5" pos:end="85:7">end</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <name pos:start="85:11" pos:end="85:15">start</name> <operator pos:start="85:17" pos:end="85:17">+</operator> <name pos:start="85:19" pos:end="85:32"><name pos:start="85:19" pos:end="85:23">state</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:32">buf_len</name></name> <operator pos:start="85:34" pos:end="85:34">-</operator> <literal type="number" pos:start="85:36" pos:end="85:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:51"><expr pos:start="87:5" pos:end="87:50"><name pos:start="87:5" pos:end="87:19"><name pos:start="87:5" pos:end="87:9">state</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:19">orig_buf</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:50"><name pos:start="87:23" pos:end="87:34">g_try_malloc</name><argument_list pos:start="87:35" pos:end="87:50">(<argument pos:start="87:36" pos:end="87:49"><expr pos:start="87:36" pos:end="87:49"><name pos:start="87:36" pos:end="87:49"><name pos:start="87:36" pos:end="87:40">state</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:49">buf_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:50">(<expr pos:start="89:9" pos:end="89:49"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:13">state</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">buf_len</name></name> <operator pos:start="89:24" pos:end="89:25">&amp;&amp;</operator> <name pos:start="89:27" pos:end="89:41"><name pos:start="89:27" pos:end="89:31">state</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:41">orig_buf</name></name> <operator pos:start="89:43" pos:end="89:44">==</operator> <name pos:start="89:46" pos:end="89:49">NULL</name></expr>)</condition> <block pos:start="89:52" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:17">

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><call pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:24">curl_clean_state</name><argument_list pos:start="91:25" pos:end="91:31">(<argument pos:start="91:26" pos:end="91:30"><expr pos:start="91:26" pos:end="91:30"><name pos:start="91:26" pos:end="91:30">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:11">acb</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:16">ret</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <operator pos:start="93:20" pos:end="93:20">-</operator><name pos:start="93:21" pos:end="93:26">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:17">goto <name pos:start="95:14" pos:end="95:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:24"><expr pos:start="99:5" pos:end="99:23"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:9">state</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:14">acb</name><index pos:start="99:15" pos:end="99:17">[<expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>]</index></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:23">acb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:68"><expr pos:start="103:5" pos:end="103:67"><call pos:start="103:5" pos:end="103:67"><name pos:start="103:5" pos:end="103:12">snprintf</name><argument_list pos:start="103:13" pos:end="103:67">(<argument pos:start="103:14" pos:end="103:25"><expr pos:start="103:14" pos:end="103:25"><name pos:start="103:14" pos:end="103:25"><name pos:start="103:14" pos:end="103:18">state</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:25">range</name></name></expr></argument>, <argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><literal type="number" pos:start="103:28" pos:end="103:30">127</literal></expr></argument>, <argument pos:start="103:33" pos:end="103:54"><expr pos:start="103:33" pos:end="103:54"><literal type="string" pos:start="103:33" pos:end="103:35">"%"</literal> <name pos:start="103:37" pos:end="103:42">PRIu64</name> <literal type="string" pos:start="103:44" pos:end="103:47">"-%"</literal> <name pos:start="103:49" pos:end="103:54">PRIu64</name></expr></argument>, <argument pos:start="103:57" pos:end="103:61"><expr pos:start="103:57" pos:end="103:61"><name pos:start="103:57" pos:end="103:61">start</name></expr></argument>, <argument pos:start="103:64" pos:end="103:66"><expr pos:start="103:64" pos:end="103:66"><name pos:start="103:64" pos:end="103:66">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:45"><expr pos:start="105:5" pos:end="107:44"><call pos:start="105:5" pos:end="107:44"><name pos:start="105:5" pos:end="105:11">DPRINTF</name><argument_list pos:start="105:12" pos:end="107:44">(<argument pos:start="105:13" pos:end="105:67"><expr pos:start="105:13" pos:end="105:67"><literal type="string" pos:start="105:13" pos:end="105:35">"CURL (AIO): Reading %"</literal> <name pos:start="105:37" pos:end="105:42">PRIu64</name> <literal type="string" pos:start="105:44" pos:end="105:50">" at %"</literal> <name pos:start="105:52" pos:end="105:57">PRIu64</name> <literal type="string" pos:start="105:59" pos:end="105:67">" (%s)\n"</literal></expr></argument>,

            <argument pos:start="107:13" pos:end="107:22"><expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:15">acb</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">bytes</name></name></expr></argument>, <argument pos:start="107:25" pos:end="107:29"><expr pos:start="107:25" pos:end="107:29"><name pos:start="107:25" pos:end="107:29">start</name></expr></argument>, <argument pos:start="107:32" pos:end="107:43"><expr pos:start="107:32" pos:end="107:43"><name pos:start="107:32" pos:end="107:43"><name pos:start="107:32" pos:end="107:36">state</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:43">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:63"><expr pos:start="109:5" pos:end="109:62"><call pos:start="109:5" pos:end="109:62"><name pos:start="109:5" pos:end="109:20">curl_easy_setopt</name><argument_list pos:start="109:21" pos:end="109:62">(<argument pos:start="109:22" pos:end="109:32"><expr pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:26">state</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:32">curl</name></name></expr></argument>, <argument pos:start="109:35" pos:end="109:47"><expr pos:start="109:35" pos:end="109:47"><name pos:start="109:35" pos:end="109:47">CURLOPT_RANGE</name></expr></argument>, <argument pos:start="109:50" pos:end="109:61"><expr pos:start="109:50" pos:end="109:61"><name pos:start="109:50" pos:end="109:61"><name pos:start="109:50" pos:end="109:54">state</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:61">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:49"><expr pos:start="113:5" pos:end="113:48"><call pos:start="113:5" pos:end="113:48"><name pos:start="113:5" pos:end="113:25">curl_multi_add_handle</name><argument_list pos:start="113:26" pos:end="113:48">(<argument pos:start="113:27" pos:end="113:34"><expr pos:start="113:27" pos:end="113:34"><name pos:start="113:27" pos:end="113:34"><name pos:start="113:27" pos:end="113:27">s</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:34">multi</name></name></expr></argument>, <argument pos:start="113:37" pos:end="113:47"><expr pos:start="113:37" pos:end="113:47"><name pos:start="113:37" pos:end="113:47"><name pos:start="113:37" pos:end="113:41">state</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:47">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:47">/* Tell curl it needs to kick things off */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:73"><expr pos:start="119:5" pos:end="119:72"><call pos:start="119:5" pos:end="119:72"><name pos:start="119:5" pos:end="119:28">curl_multi_socket_action</name><argument_list pos:start="119:29" pos:end="119:72">(<argument pos:start="119:30" pos:end="119:37"><expr pos:start="119:30" pos:end="119:37"><name pos:start="119:30" pos:end="119:37"><name pos:start="119:30" pos:end="119:30">s</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:37">multi</name></name></expr></argument>, <argument pos:start="119:40" pos:end="119:58"><expr pos:start="119:40" pos:end="119:58"><name pos:start="119:40" pos:end="119:58">CURL_SOCKET_TIMEOUT</name></expr></argument>, <argument pos:start="119:61" pos:end="119:61"><expr pos:start="119:61" pos:end="119:61"><literal type="number" pos:start="119:61" pos:end="119:61">0</literal></expr></argument>, <argument pos:start="119:64" pos:end="119:71"><expr pos:start="119:64" pos:end="119:71"><operator pos:start="119:64" pos:end="119:64">&amp;</operator><name pos:start="119:65" pos:end="119:71">running</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="123:1" pos:end="123:4"><name pos:start="123:1" pos:end="123:3">out</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="125:33"><expr pos:start="125:5" pos:end="125:32"><call pos:start="125:5" pos:end="125:32"><name pos:start="125:5" pos:end="125:21">qemu_mutex_unlock</name><argument_list pos:start="125:22" pos:end="125:32">(<argument pos:start="125:23" pos:end="125:31"><expr pos:start="125:23" pos:end="125:31"><operator pos:start="125:23" pos:end="125:23">&amp;</operator><name pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
