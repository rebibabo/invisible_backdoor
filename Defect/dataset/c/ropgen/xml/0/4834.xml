<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4834.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">ptimer_set_limit</name><parameter_list pos:start="1:22" pos:end="1:66">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:34">ptimer_state</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:47">uint64_t</name></type> <name pos:start="1:49" pos:end="1:53">limit</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:65">reload</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="23:5" pos:end="43:5">

    <comment type="block" pos:start="5:5" pos:end="19:7">/*

     * Artificially limit timeout rate to something

     * achievable under QEMU.  Otherwise, QEMU spends all

     * its time generating timer interrupts, and there

     * is no forward progress.

     * About ten microseconds is the fastest that really works

     * on the current generation of host machines.

     */</comment>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:19">use_icount</name> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:28">limit</name> <operator pos:start="23:30" pos:end="23:30">*</operator> <name pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:40">period</name></name> <operator pos:start="23:42" pos:end="23:42">&lt;</operator> <literal type="number" pos:start="23:44" pos:end="23:48">10000</literal> <operator pos:start="23:50" pos:end="23:51">&amp;&amp;</operator> <name pos:start="23:53" pos:end="23:61"><name pos:start="23:53" pos:end="23:53">s</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:61">period</name></name></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:34">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:13">limit</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:21">10000</literal> <operator pos:start="25:23" pos:end="25:23">/</operator> <name pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:33">period</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:12">limit</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:20">limit</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:25"><if pos:start="33:5" pos:end="35:25">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">reload</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:25"><block_content pos:start="35:9" pos:end="35:25">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">delta</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:24">limit</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">enabled</name></name> <operator pos:start="37:20" pos:end="37:21">&amp;&amp;</operator> <name pos:start="37:23" pos:end="37:28">reload</name></expr>)</condition> <block pos:start="37:31" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:25">

        <expr_stmt pos:start="39:9" pos:end="39:62"><expr pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:21">next_event</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <call pos:start="39:25" pos:end="39:61"><name pos:start="39:25" pos:end="39:41">qemu_clock_get_ns</name><argument_list pos:start="39:42" pos:end="39:61">(<argument pos:start="39:43" pos:end="39:60"><expr pos:start="39:43" pos:end="39:60"><name pos:start="39:43" pos:end="39:60">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:21">ptimer_reload</name><argument_list pos:start="41:22" pos:end="41:24">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
