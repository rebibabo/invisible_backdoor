<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20196.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:30">do_check_io_limits</name><parameter_list pos:start="1:31" pos:end="1:55">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">BlockIOLimit</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:54">io_limits</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:16">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:17">bps_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:18">iops_flag</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:21">(<argument pos:start="11:12" pos:end="11:20"><expr pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:20">io_limits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="19:65"><expr pos:start="15:5" pos:end="19:64"><name pos:start="15:5" pos:end="15:12">bps_flag</name>  <operator pos:start="15:15" pos:end="15:15">=</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:53"><name pos:start="15:18" pos:end="15:26">io_limits</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:31">bps</name><index pos:start="15:32" pos:end="15:53">[<expr pos:start="15:33" pos:end="15:52"><name pos:start="15:33" pos:end="15:52">BLOCK_IO_LIMIT_TOTAL</name></expr>]</index></name> <operator pos:start="15:55" pos:end="15:56">!=</operator> <literal type="number" pos:start="15:58" pos:end="15:58">0</literal><operator pos:start="15:59" pos:end="15:59">)</operator>

                 <operator pos:start="17:18" pos:end="17:19">&amp;&amp;</operator> <operator pos:start="17:21" pos:end="17:21">(</operator><operator pos:start="17:22" pos:end="17:22">(</operator><name pos:start="17:23" pos:end="17:57"><name pos:start="17:23" pos:end="17:31">io_limits</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:36">bps</name><index pos:start="17:37" pos:end="17:57">[<expr pos:start="17:38" pos:end="17:56"><name pos:start="17:38" pos:end="17:56">BLOCK_IO_LIMIT_READ</name></expr>]</index></name> <operator pos:start="17:59" pos:end="17:60">!=</operator> <literal type="number" pos:start="17:62" pos:end="17:62">0</literal><operator pos:start="17:63" pos:end="17:63">)</operator>

                 <operator pos:start="19:18" pos:end="19:19">||</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:57"><name pos:start="19:22" pos:end="19:30">io_limits</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:35">bps</name><index pos:start="19:36" pos:end="19:57">[<expr pos:start="19:37" pos:end="19:56"><name pos:start="19:37" pos:end="19:56">BLOCK_IO_LIMIT_WRITE</name></expr>]</index></name> <operator pos:start="19:59" pos:end="19:60">!=</operator> <literal type="number" pos:start="19:62" pos:end="19:62">0</literal><operator pos:start="19:63" pos:end="19:63">)</operator><operator pos:start="19:64" pos:end="19:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="25:66"><expr pos:start="21:5" pos:end="25:65"><name pos:start="21:5" pos:end="21:13">iops_flag</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:54"><name pos:start="21:18" pos:end="21:26">io_limits</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">iops</name><index pos:start="21:33" pos:end="21:54">[<expr pos:start="21:34" pos:end="21:53"><name pos:start="21:34" pos:end="21:53">BLOCK_IO_LIMIT_TOTAL</name></expr>]</index></name> <operator pos:start="21:56" pos:end="21:57">!=</operator> <literal type="number" pos:start="21:59" pos:end="21:59">0</literal><operator pos:start="21:60" pos:end="21:60">)</operator>

                 <operator pos:start="23:18" pos:end="23:19">&amp;&amp;</operator> <operator pos:start="23:21" pos:end="23:21">(</operator><operator pos:start="23:22" pos:end="23:22">(</operator><name pos:start="23:23" pos:end="23:58"><name pos:start="23:23" pos:end="23:31">io_limits</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:37">iops</name><index pos:start="23:38" pos:end="23:58">[<expr pos:start="23:39" pos:end="23:57"><name pos:start="23:39" pos:end="23:57">BLOCK_IO_LIMIT_READ</name></expr>]</index></name> <operator pos:start="23:60" pos:end="23:61">!=</operator> <literal type="number" pos:start="23:63" pos:end="23:63">0</literal><operator pos:start="23:64" pos:end="23:64">)</operator>

                 <operator pos:start="25:18" pos:end="25:19">||</operator> <operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:58"><name pos:start="25:22" pos:end="25:30">io_limits</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:36">iops</name><index pos:start="25:37" pos:end="25:58">[<expr pos:start="25:38" pos:end="25:57"><name pos:start="25:38" pos:end="25:57">BLOCK_IO_LIMIT_WRITE</name></expr>]</index></name> <operator pos:start="25:60" pos:end="25:61">!=</operator> <literal type="number" pos:start="25:63" pos:end="25:63">0</literal><operator pos:start="25:64" pos:end="25:64">)</operator><operator pos:start="25:65" pos:end="25:65">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:16">bps_flag</name> <operator pos:start="27:18" pos:end="27:19">||</operator> <name pos:start="27:21" pos:end="27:29">iops_flag</name></expr>)</condition> <block pos:start="27:32" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:21">

        <return pos:start="29:9" pos:end="29:21">return <expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="35:5" pos:end="35:16">return <expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
