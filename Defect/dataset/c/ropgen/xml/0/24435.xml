<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24435.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h264_init_context</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:63">H264Context</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:5">h</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:12">avctx</name></name>                 <operator pos:start="9:30" pos:end="9:30">=</operator> <name pos:start="9:32" pos:end="9:36">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:5">h</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:24">picture_structure</name></name>     <operator pos:start="13:30" pos:end="13:30">=</operator> <name pos:start="13:32" pos:end="13:41">PICT_FRAME</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:5">h</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:26">slice_context_count</name></name>   <operator pos:start="15:30" pos:end="15:30">=</operator> <literal type="number" pos:start="15:32" pos:end="15:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">h</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">workaround_bugs</name></name>       <operator pos:start="17:30" pos:end="17:30">=</operator> <name pos:start="17:32" pos:end="17:53"><name pos:start="17:32" pos:end="17:36">avctx</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:53">workaround_bugs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">h</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">flags</name></name>                 <operator pos:start="19:30" pos:end="19:30">=</operator> <name pos:start="19:32" pos:end="19:43"><name pos:start="19:32" pos:end="19:36">avctx</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:43">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">h</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">prev_poc_msb</name></name>          <operator pos:start="21:30" pos:end="21:30">=</operator> <literal type="number" pos:start="21:32" pos:end="21:32">1</literal> <operator pos:start="21:34" pos:end="21:35">&lt;&lt;</operator> <literal type="number" pos:start="21:37" pos:end="21:38">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:17">x264_build</name></name>            <operator pos:start="23:30" pos:end="23:30">=</operator> <operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:21">recovery_frame</name></name>        <operator pos:start="25:30" pos:end="25:30">=</operator> <operator pos:start="25:32" pos:end="25:32">-</operator><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:5">h</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:22">frame_recovered</name></name>       <operator pos:start="27:30" pos:end="27:30">=</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:24">next_outputed_poc</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:34">INT_MIN</name></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="35:34">for <control pos:start="33:9" pos:end="33:47">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:42"><expr pos:start="33:17" pos:end="33:41"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:41">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="33:44" pos:end="33:46"><expr pos:start="33:44" pos:end="33:46"><name pos:start="33:44" pos:end="33:44">i</name><operator pos:start="33:45" pos:end="33:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:34"><block_content pos:start="35:9" pos:end="35:34">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:9">h</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:20">last_pocs</name><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">i</name></expr>]</index></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:33">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><call pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:21">ff_h264_reset_sei</name><argument_list pos:start="39:22" pos:end="39:24">(<argument pos:start="39:23" pos:end="39:23"><expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:9">avctx</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:33">chroma_sample_location</name></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <name pos:start="43:37" pos:end="43:53">AVCHROMA_LOC_LEFT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:92"><expr pos:start="47:5" pos:end="47:91"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:5">h</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:19">nb_slice_ctx</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <ternary pos:start="47:23" pos:end="47:91"><condition pos:start="47:23" pos:end="47:69"><expr pos:start="47:23" pos:end="47:67"><operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:48"><name pos:start="47:24" pos:end="47:28">avctx</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:48">active_thread_type</name></name> <operator pos:start="47:50" pos:end="47:50">&amp;</operator> <name pos:start="47:52" pos:end="47:66">FF_THREAD_SLICE</name><operator pos:start="47:67" pos:end="47:67">)</operator></expr> ?</condition><then pos:start="47:72" pos:end="47:87">  <expr pos:start="47:72" pos:end="47:87"><name pos:start="47:72" pos:end="47:87">H264_MAX_THREADS</name></expr> </then><else pos:start="47:89" pos:end="47:91">: <expr pos:start="47:91" pos:end="47:91"><literal type="number" pos:start="47:91" pos:end="47:91">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:76"><expr pos:start="49:5" pos:end="49:75"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:5">h</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:16">slice_ctx</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:75"><name pos:start="49:20" pos:end="49:35">av_mallocz_array</name><argument_list pos:start="49:36" pos:end="49:75">(<argument pos:start="49:37" pos:end="49:51"><expr pos:start="49:37" pos:end="49:51"><name pos:start="49:37" pos:end="49:51"><name pos:start="49:37" pos:end="49:37">h</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:51">nb_slice_ctx</name></name></expr></argument>, <argument pos:start="49:54" pos:end="49:74"><expr pos:start="49:54" pos:end="49:74"><sizeof pos:start="49:54" pos:end="49:74">sizeof<argument_list pos:start="49:60" pos:end="49:74">(<argument pos:start="49:61" pos:end="49:73"><expr pos:start="49:61" pos:end="49:73"><operator pos:start="49:61" pos:end="49:61">*</operator><name pos:start="49:62" pos:end="49:73"><name pos:start="49:62" pos:end="49:62">h</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:73">slice_ctx</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:22">(<expr pos:start="51:9" pos:end="51:21"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:21"><name pos:start="51:10" pos:end="51:10">h</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:21">slice_ctx</name></name></expr>)</condition> <block pos:start="51:24" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:31">

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">h</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:23">nb_slice_ctx</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="61:5" pos:end="69:5">for <control pos:start="61:9" pos:end="61:48">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:43"><expr pos:start="61:17" pos:end="61:42"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:42">H264_MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:45">i</name><operator pos:start="61:46" pos:end="61:47">++</operator></expr></incr>)</control> <block pos:start="61:50" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:35">

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:9">h</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">DPB</name><index pos:start="63:15" pos:end="63:17">[<expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">i</name></expr>]</index></name><operator pos:start="63:18" pos:end="63:18">.</operator><name pos:start="63:19" pos:end="63:19">f</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <call pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:36">av_frame_alloc</name><argument_list pos:start="63:37" pos:end="63:38">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:35"><if pos:start="65:9" pos:end="67:35">if <condition pos:start="65:12" pos:end="65:25">(<expr pos:start="65:13" pos:end="65:24"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:22"><name pos:start="65:14" pos:end="65:14">h</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:19">DPB</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">i</name></expr>]</index></name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:24">f</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:35"><block_content pos:start="67:13" pos:end="67:35">

            <return pos:start="67:13" pos:end="67:35">return <expr pos:start="67:20" pos:end="67:34"><call pos:start="67:20" pos:end="67:34"><name pos:start="67:20" pos:end="67:26">AVERROR</name><argument_list pos:start="67:27" pos:end="67:34">(<argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:5">h</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:14">cur_pic</name><operator pos:start="73:15" pos:end="73:15">.</operator><name pos:start="73:16" pos:end="73:16">f</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:35"><name pos:start="73:20" pos:end="73:33">av_frame_alloc</name><argument_list pos:start="73:34" pos:end="73:35">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:31"><if pos:start="75:5" pos:end="77:31">if <condition pos:start="75:8" pos:end="75:22">(<expr pos:start="75:9" pos:end="75:21"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:21"><name pos:start="75:10" pos:end="75:10">h</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:19">cur_pic</name><operator pos:start="75:20" pos:end="75:20">.</operator><name pos:start="75:21" pos:end="75:21">f</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:31"><block_content pos:start="77:9" pos:end="77:31">

        <return pos:start="77:9" pos:end="77:31">return <expr pos:start="77:16" pos:end="77:30"><call pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:22">AVERROR</name><argument_list pos:start="77:23" pos:end="77:30">(<argument pos:start="77:24" pos:end="77:29"><expr pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="81:5" pos:end="83:33">for <control pos:start="81:9" pos:end="81:41">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:36"><expr pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:35"><name pos:start="81:21" pos:end="81:21">h</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:35">nb_slice_ctx</name></name></expr>;</condition> <incr pos:start="81:38" pos:end="81:40"><expr pos:start="81:38" pos:end="81:40"><name pos:start="81:38" pos:end="81:38">i</name><operator pos:start="81:39" pos:end="81:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:9" pos:end="83:33"><block_content pos:start="83:9" pos:end="83:33">

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:9">h</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">slice_ctx</name><index pos:start="83:21" pos:end="83:23">[<expr pos:start="83:22" pos:end="83:22"><name pos:start="83:22" pos:end="83:22">i</name></expr>]</index></name><operator pos:start="83:24" pos:end="83:24">.</operator><name pos:start="83:25" pos:end="83:28">h264</name> <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:32">h</name></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
