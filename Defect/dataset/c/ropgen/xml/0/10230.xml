<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10230.c" pos:tabs="8"><function pos:start="1:1" pos:end="303:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">acpi_build</name><parameter_list pos:start="1:16" pos:end="1:40">(<parameter pos:start="1:17" pos:end="1:39"><decl pos:start="1:17" pos:end="1:39"><type pos:start="1:17" pos:end="1:33"><name pos:start="1:17" pos:end="1:31">AcpiBuildTables</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">tables</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="303:1">{<block_content pos:start="5:5" pos:end="301:38">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCMachineState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">pcms</name> <init pos:start="5:26" pos:end="5:57">= <expr pos:start="5:28" pos:end="5:57"><call pos:start="5:28" pos:end="5:57"><name pos:start="5:28" pos:end="5:37">PC_MACHINE</name><argument_list pos:start="5:38" pos:end="5:57">(<argument pos:start="5:39" pos:end="5:56"><expr pos:start="5:39" pos:end="5:56"><call pos:start="5:39" pos:end="5:56"><name pos:start="5:39" pos:end="5:54">qdev_get_machine</name><argument_list pos:start="5:55" pos:end="5:56">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCMachineClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">pcmc</name> <init pos:start="7:26" pos:end="7:53">= <expr pos:start="7:28" pos:end="7:53"><call pos:start="7:28" pos:end="7:53"><name pos:start="7:28" pos:end="7:47">PC_MACHINE_GET_CLASS</name><argument_list pos:start="7:48" pos:end="7:53">(<argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">pcms</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">GArray</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:25">table_offsets</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:17">facs</name></decl>, <decl pos:start="11:20" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:23">dsdt</name></decl>, <decl pos:start="11:26" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:26" pos:end="11:29">rsdt</name></decl>, <decl pos:start="11:32" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:32" pos:end="11:35">fadt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">AcpiCpuInfo</name></type> <name pos:start="13:17" pos:end="13:19">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">AcpiPmInfo</name></type> <name pos:start="15:16" pos:end="15:17">pm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">AcpiMiscInfo</name></type> <name pos:start="17:18" pos:end="17:21">misc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">AcpiMcfgInfo</name></type> <name pos:start="19:18" pos:end="19:21">mcfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:13">PcPciInfo</name></type> <name pos:start="21:15" pos:end="21:17">pci</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">uint8_t</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:14">u</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:10">size_t</name></type> <name pos:start="25:12" pos:end="25:18">aml_len</name> <init pos:start="25:20" pos:end="25:22">= <expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:45"><decl pos:start="27:5" pos:end="27:44"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:10">GArray</name> <modifier pos:start="27:12" pos:end="27:12">*</modifier></type><name pos:start="27:13" pos:end="27:23">tables_blob</name> <init pos:start="27:25" pos:end="27:44">= <expr pos:start="27:27" pos:end="27:44"><name pos:start="27:27" pos:end="27:44"><name pos:start="27:27" pos:end="27:32">tables</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:44">table_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:60"><decl pos:start="29:5" pos:end="29:59"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:15">AcpiSlicOem</name></type> <name pos:start="29:17" pos:end="29:24">slic_oem</name> <init pos:start="29:26" pos:end="29:59">= <expr pos:start="29:28" pos:end="29:59"><block pos:start="29:28" pos:end="29:59">{ <expr pos:start="29:30" pos:end="29:39"><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:32">id</name> <operator pos:start="29:34" pos:end="29:34">=</operator> <name pos:start="29:36" pos:end="29:39">NULL</name></expr>, <expr pos:start="29:42" pos:end="29:57"><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:50">table_id</name> <operator pos:start="29:52" pos:end="29:52">=</operator> <name pos:start="29:54" pos:end="29:57">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><call pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:21">acpi_get_cpu_info</name><argument_list pos:start="33:22" pos:end="33:27">(<argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:26">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:20">acpi_get_pm_info</name><argument_list pos:start="35:21" pos:end="35:25">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:24">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:22">acpi_get_misc_info</name><argument_list pos:start="37:23" pos:end="37:29">(<argument pos:start="37:24" pos:end="37:28"><expr pos:start="37:24" pos:end="37:28"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:28">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><call pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:21">acpi_get_pci_info</name><argument_list pos:start="39:22" pos:end="39:27">(<argument pos:start="39:23" pos:end="39:26"><expr pos:start="39:23" pos:end="39:26"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:26">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:21">acpi_get_slic_oem</name><argument_list pos:start="41:22" pos:end="41:32">(<argument pos:start="41:23" pos:end="41:31"><expr pos:start="41:23" pos:end="41:31"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:31">slic_oem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:58"><expr pos:start="45:5" pos:end="47:57"><name pos:start="45:5" pos:end="45:17">table_offsets</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="47:57"><name pos:start="45:21" pos:end="45:31">g_array_new</name><argument_list pos:start="45:32" pos:end="47:57">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">false</name></expr></argument>, <argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">true</name></expr></argument> <comment type="block" pos:start="45:45" pos:end="45:55">/* clear */</comment>,

                                        <argument pos:start="47:41" pos:end="47:56"><expr pos:start="47:41" pos:end="47:56"><sizeof pos:start="47:41" pos:end="47:56">sizeof<argument_list pos:start="47:47" pos:end="47:56">(<argument pos:start="47:48" pos:end="47:55"><expr pos:start="47:48" pos:end="47:55"><name pos:start="47:48" pos:end="47:55">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><call pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:22">ACPI_BUILD_DPRINTF</name><argument_list pos:start="49:23" pos:end="49:44">(<argument pos:start="49:24" pos:end="49:43"><expr pos:start="49:24" pos:end="49:43"><literal type="string" pos:start="49:24" pos:end="49:43">"init ACPI tables\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:54"><expr pos:start="53:5" pos:end="57:53"><call pos:start="53:5" pos:end="57:53"><name pos:start="53:5" pos:end="53:28">bios_linker_loader_alloc</name><argument_list pos:start="53:29" pos:end="57:53">(<argument pos:start="53:30" pos:end="53:43"><expr pos:start="53:30" pos:end="53:43"><name pos:start="53:30" pos:end="53:43"><name pos:start="53:30" pos:end="53:35">tables</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:43">linker</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:66"><expr pos:start="53:46" pos:end="53:66"><name pos:start="53:46" pos:end="53:66">ACPI_BUILD_TABLE_FILE</name></expr></argument>,

                             <argument pos:start="55:30" pos:end="55:31"><expr pos:start="55:30" pos:end="55:31"><literal type="number" pos:start="55:30" pos:end="55:31">64</literal></expr></argument> <comment type="block" pos:start="55:33" pos:end="55:60">/* Ensure FACS is aligned */</comment>,

                             <argument pos:start="57:30" pos:end="57:34"><expr pos:start="57:30" pos:end="57:34"><name pos:start="57:30" pos:end="57:34">false</name></expr></argument> <comment type="block" pos:start="57:36" pos:end="57:52">/* high memory */</comment>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="69:7">/*

     * FACS is pointed to by FADT.

     * We place it first since it's the only table that has alignment

     * requirements.

     */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:8">facs</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <name pos:start="71:12" pos:end="71:27"><name pos:start="71:12" pos:end="71:22">tables_blob</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:44"><expr pos:start="73:5" pos:end="73:43"><call pos:start="73:5" pos:end="73:43"><name pos:start="73:5" pos:end="73:14">build_facs</name><argument_list pos:start="73:15" pos:end="73:43">(<argument pos:start="73:16" pos:end="73:26"><expr pos:start="73:16" pos:end="73:26"><name pos:start="73:16" pos:end="73:26">tables_blob</name></expr></argument>, <argument pos:start="73:29" pos:end="73:42"><expr pos:start="73:29" pos:end="73:42"><name pos:start="73:29" pos:end="73:42"><name pos:start="73:29" pos:end="73:34">tables</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:42">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:36">/* DSDT is pointed to by FADT */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:8">dsdt</name> <operator pos:start="79:10" pos:end="79:10">=</operator> <name pos:start="79:12" pos:end="79:27"><name pos:start="79:12" pos:end="79:22">tables_blob</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:68"><expr pos:start="81:5" pos:end="81:67"><call pos:start="81:5" pos:end="81:67"><name pos:start="81:5" pos:end="81:14">build_dsdt</name><argument_list pos:start="81:15" pos:end="81:67">(<argument pos:start="81:16" pos:end="81:26"><expr pos:start="81:16" pos:end="81:26"><name pos:start="81:16" pos:end="81:26">tables_blob</name></expr></argument>, <argument pos:start="81:29" pos:end="81:42"><expr pos:start="81:29" pos:end="81:42"><name pos:start="81:29" pos:end="81:42"><name pos:start="81:29" pos:end="81:34">tables</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:42">linker</name></name></expr></argument>, <argument pos:start="81:45" pos:end="81:48"><expr pos:start="81:45" pos:end="81:48"><operator pos:start="81:45" pos:end="81:45">&amp;</operator><name pos:start="81:46" pos:end="81:48">cpu</name></expr></argument>, <argument pos:start="81:51" pos:end="81:53"><expr pos:start="81:51" pos:end="81:53"><operator pos:start="81:51" pos:end="81:51">&amp;</operator><name pos:start="81:52" pos:end="81:53">pm</name></expr></argument>, <argument pos:start="81:56" pos:end="81:60"><expr pos:start="81:56" pos:end="81:60"><operator pos:start="81:56" pos:end="81:56">&amp;</operator><name pos:start="81:57" pos:end="81:60">misc</name></expr></argument>, <argument pos:start="81:63" pos:end="81:66"><expr pos:start="81:63" pos:end="81:66"><operator pos:start="81:63" pos:end="81:63">&amp;</operator><name pos:start="81:64" pos:end="81:66">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="89:7">/* Count the size of the DSDT and SSDT, we will need it for legacy

     * sizing of ACPI tables.

     */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:11">aml_len</name> <operator pos:start="91:13" pos:end="91:14">+=</operator> <name pos:start="91:16" pos:end="91:31"><name pos:start="91:16" pos:end="91:26">tables_blob</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:31">len</name></name> <operator pos:start="91:33" pos:end="91:33">-</operator> <name pos:start="91:35" pos:end="91:38">dsdt</name></expr>;</expr_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:40">/* ACPI tables pointed to by RSDT */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:8">fadt</name> <operator pos:start="97:10" pos:end="97:10">=</operator> <name pos:start="97:12" pos:end="97:27"><name pos:start="97:12" pos:end="97:22">tables_blob</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:47"><expr pos:start="99:5" pos:end="99:46"><call pos:start="99:5" pos:end="99:46"><name pos:start="99:5" pos:end="99:18">acpi_add_table</name><argument_list pos:start="99:19" pos:end="99:46">(<argument pos:start="99:20" pos:end="99:32"><expr pos:start="99:20" pos:end="99:32"><name pos:start="99:20" pos:end="99:32">table_offsets</name></expr></argument>, <argument pos:start="99:35" pos:end="99:45"><expr pos:start="99:35" pos:end="99:45"><name pos:start="99:35" pos:end="99:45">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:47"><expr pos:start="101:5" pos:end="103:46"><call pos:start="101:5" pos:end="103:46"><name pos:start="101:5" pos:end="101:14">build_fadt</name><argument_list pos:start="101:15" pos:end="103:46">(<argument pos:start="101:16" pos:end="101:26"><expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:26">tables_blob</name></expr></argument>, <argument pos:start="101:29" pos:end="101:42"><expr pos:start="101:29" pos:end="101:42"><name pos:start="101:29" pos:end="101:42"><name pos:start="101:29" pos:end="101:34">tables</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:42">linker</name></name></expr></argument>, <argument pos:start="101:45" pos:end="101:47"><expr pos:start="101:45" pos:end="101:47"><operator pos:start="101:45" pos:end="101:45">&amp;</operator><name pos:start="101:46" pos:end="101:47">pm</name></expr></argument>, <argument pos:start="101:50" pos:end="101:53"><expr pos:start="101:50" pos:end="101:53"><name pos:start="101:50" pos:end="101:53">facs</name></expr></argument>, <argument pos:start="101:56" pos:end="101:59"><expr pos:start="101:56" pos:end="101:59"><name pos:start="101:56" pos:end="101:59">dsdt</name></expr></argument>,

               <argument pos:start="103:16" pos:end="103:26"><expr pos:start="103:16" pos:end="103:26"><name pos:start="103:16" pos:end="103:26"><name pos:start="103:16" pos:end="103:23">slic_oem</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:26">id</name></name></expr></argument>, <argument pos:start="103:29" pos:end="103:45"><expr pos:start="103:29" pos:end="103:45"><name pos:start="103:29" pos:end="103:45"><name pos:start="103:29" pos:end="103:36">slic_oem</name><operator pos:start="103:37" pos:end="103:37">.</operator><name pos:start="103:38" pos:end="103:45">table_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:39"><expr pos:start="105:5" pos:end="105:38"><name pos:start="105:5" pos:end="105:11">aml_len</name> <operator pos:start="105:13" pos:end="105:14">+=</operator> <name pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:26">tables_blob</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:31">len</name></name> <operator pos:start="105:33" pos:end="105:33">-</operator> <name pos:start="105:35" pos:end="105:38">fadt</name></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:47"><expr pos:start="109:5" pos:end="109:46"><call pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:18">acpi_add_table</name><argument_list pos:start="109:19" pos:end="109:46">(<argument pos:start="109:20" pos:end="109:32"><expr pos:start="109:20" pos:end="109:32"><name pos:start="109:20" pos:end="109:32">table_offsets</name></expr></argument>, <argument pos:start="109:35" pos:end="109:45"><expr pos:start="109:35" pos:end="109:45"><name pos:start="109:35" pos:end="109:45">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:50"><expr pos:start="111:5" pos:end="111:49"><call pos:start="111:5" pos:end="111:49"><name pos:start="111:5" pos:end="111:14">build_madt</name><argument_list pos:start="111:15" pos:end="111:49">(<argument pos:start="111:16" pos:end="111:26"><expr pos:start="111:16" pos:end="111:26"><name pos:start="111:16" pos:end="111:26">tables_blob</name></expr></argument>, <argument pos:start="111:29" pos:end="111:42"><expr pos:start="111:29" pos:end="111:42"><name pos:start="111:29" pos:end="111:42"><name pos:start="111:29" pos:end="111:34">tables</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:42">linker</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:48"><expr pos:start="111:45" pos:end="111:48"><operator pos:start="111:45" pos:end="111:45">&amp;</operator><name pos:start="111:46" pos:end="111:48">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:22">(<expr pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:12">misc</name><operator pos:start="115:13" pos:end="115:13">.</operator><name pos:start="115:14" pos:end="115:21">has_hpet</name></name></expr>)</condition> <block pos:start="115:24" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:48">

        <expr_stmt pos:start="117:9" pos:end="117:51"><expr pos:start="117:9" pos:end="117:50"><call pos:start="117:9" pos:end="117:50"><name pos:start="117:9" pos:end="117:22">acpi_add_table</name><argument_list pos:start="117:23" pos:end="117:50">(<argument pos:start="117:24" pos:end="117:36"><expr pos:start="117:24" pos:end="117:36"><name pos:start="117:24" pos:end="117:36">table_offsets</name></expr></argument>, <argument pos:start="117:39" pos:end="117:49"><expr pos:start="117:39" pos:end="117:49"><name pos:start="117:39" pos:end="117:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><call pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:18">build_hpet</name><argument_list pos:start="119:19" pos:end="119:47">(<argument pos:start="119:20" pos:end="119:30"><expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30">tables_blob</name></expr></argument>, <argument pos:start="119:33" pos:end="119:46"><expr pos:start="119:33" pos:end="119:46"><name pos:start="119:33" pos:end="119:46"><name pos:start="119:33" pos:end="119:38">tables</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:46">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="139:5"><if pos:start="123:5" pos:end="139:5">if <condition pos:start="123:8" pos:end="123:47">(<expr pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:12">misc</name><operator pos:start="123:13" pos:end="123:13">.</operator><name pos:start="123:14" pos:end="123:24">tpm_version</name></name> <operator pos:start="123:26" pos:end="123:27">!=</operator> <name pos:start="123:29" pos:end="123:46">TPM_VERSION_UNSPEC</name></expr>)</condition> <block pos:start="123:49" pos:end="139:5">{<block_content pos:start="125:9" pos:end="137:9">

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><call pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:22">acpi_add_table</name><argument_list pos:start="125:23" pos:end="125:50">(<argument pos:start="125:24" pos:end="125:36"><expr pos:start="125:24" pos:end="125:36"><name pos:start="125:24" pos:end="125:36">table_offsets</name></expr></argument>, <argument pos:start="125:39" pos:end="125:49"><expr pos:start="125:39" pos:end="125:49"><name pos:start="125:39" pos:end="125:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:69"><expr pos:start="127:9" pos:end="127:68"><call pos:start="127:9" pos:end="127:68"><name pos:start="127:9" pos:end="127:22">build_tpm_tcpa</name><argument_list pos:start="127:23" pos:end="127:68">(<argument pos:start="127:24" pos:end="127:34"><expr pos:start="127:24" pos:end="127:34"><name pos:start="127:24" pos:end="127:34">tables_blob</name></expr></argument>, <argument pos:start="127:37" pos:end="127:50"><expr pos:start="127:37" pos:end="127:50"><name pos:start="127:37" pos:end="127:50"><name pos:start="127:37" pos:end="127:42">tables</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:50">linker</name></name></expr></argument>, <argument pos:start="127:53" pos:end="127:67"><expr pos:start="127:53" pos:end="127:67"><name pos:start="127:53" pos:end="127:67"><name pos:start="127:53" pos:end="127:58">tables</name><operator pos:start="127:59" pos:end="127:60">-&gt;</operator><name pos:start="127:61" pos:end="127:67">tcpalog</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:48">(<expr pos:start="131:13" pos:end="131:47"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:16">misc</name><operator pos:start="131:17" pos:end="131:17">.</operator><name pos:start="131:18" pos:end="131:28">tpm_version</name></name> <operator pos:start="131:30" pos:end="131:31">==</operator> <name pos:start="131:33" pos:end="131:47">TPM_VERSION_2_0</name></expr>)</condition> <block pos:start="131:50" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:52">

            <expr_stmt pos:start="133:13" pos:end="133:55"><expr pos:start="133:13" pos:end="133:54"><call pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:26">acpi_add_table</name><argument_list pos:start="133:27" pos:end="133:54">(<argument pos:start="133:28" pos:end="133:40"><expr pos:start="133:28" pos:end="133:40"><name pos:start="133:28" pos:end="133:40">table_offsets</name></expr></argument>, <argument pos:start="133:43" pos:end="133:53"><expr pos:start="133:43" pos:end="133:53"><name pos:start="133:43" pos:end="133:53">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:52"><expr pos:start="135:13" pos:end="135:51"><call pos:start="135:13" pos:end="135:51"><name pos:start="135:13" pos:end="135:22">build_tpm2</name><argument_list pos:start="135:23" pos:end="135:51">(<argument pos:start="135:24" pos:end="135:34"><expr pos:start="135:24" pos:end="135:34"><name pos:start="135:24" pos:end="135:34">tables_blob</name></expr></argument>, <argument pos:start="135:37" pos:end="135:50"><expr pos:start="135:37" pos:end="135:50"><name pos:start="135:37" pos:end="135:50"><name pos:start="135:37" pos:end="135:42">tables</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:50">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:25">(<expr pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:12">pcms</name><operator pos:start="141:13" pos:end="141:14">-&gt;</operator><name pos:start="141:15" pos:end="141:24">numa_nodes</name></name></expr>)</condition> <block pos:start="141:27" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:48">

        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><call pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:22">acpi_add_table</name><argument_list pos:start="143:23" pos:end="143:50">(<argument pos:start="143:24" pos:end="143:36"><expr pos:start="143:24" pos:end="143:36"><name pos:start="143:24" pos:end="143:36">table_offsets</name></expr></argument>, <argument pos:start="143:39" pos:end="143:49"><expr pos:start="143:39" pos:end="143:49"><name pos:start="143:39" pos:end="143:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:48"><expr pos:start="145:9" pos:end="145:47"><call pos:start="145:9" pos:end="145:47"><name pos:start="145:9" pos:end="145:18">build_srat</name><argument_list pos:start="145:19" pos:end="145:47">(<argument pos:start="145:20" pos:end="145:30"><expr pos:start="145:20" pos:end="145:30"><name pos:start="145:20" pos:end="145:30">tables_blob</name></expr></argument>, <argument pos:start="145:33" pos:end="145:46"><expr pos:start="145:33" pos:end="145:46"><name pos:start="145:33" pos:end="145:46"><name pos:start="145:33" pos:end="145:38">tables</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:46">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:29">(<expr pos:start="149:9" pos:end="149:28"><call pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:21">acpi_get_mcfg</name><argument_list pos:start="149:22" pos:end="149:28">(<argument pos:start="149:23" pos:end="149:27"><expr pos:start="149:23" pos:end="149:27"><operator pos:start="149:23" pos:end="149:23">&amp;</operator><name pos:start="149:24" pos:end="149:27">mcfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:31" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:59">

        <expr_stmt pos:start="151:9" pos:end="151:51"><expr pos:start="151:9" pos:end="151:50"><call pos:start="151:9" pos:end="151:50"><name pos:start="151:9" pos:end="151:22">acpi_add_table</name><argument_list pos:start="151:23" pos:end="151:50">(<argument pos:start="151:24" pos:end="151:36"><expr pos:start="151:24" pos:end="151:36"><name pos:start="151:24" pos:end="151:36">table_offsets</name></expr></argument>, <argument pos:start="151:39" pos:end="151:49"><expr pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:59"><expr pos:start="153:9" pos:end="153:58"><call pos:start="153:9" pos:end="153:58"><name pos:start="153:9" pos:end="153:22">build_mcfg_q35</name><argument_list pos:start="153:23" pos:end="153:58">(<argument pos:start="153:24" pos:end="153:34"><expr pos:start="153:24" pos:end="153:34"><name pos:start="153:24" pos:end="153:34">tables_blob</name></expr></argument>, <argument pos:start="153:37" pos:end="153:50"><expr pos:start="153:37" pos:end="153:50"><name pos:start="153:37" pos:end="153:50"><name pos:start="153:37" pos:end="153:42">tables</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:50">linker</name></name></expr></argument>, <argument pos:start="153:53" pos:end="153:57"><expr pos:start="153:53" pos:end="153:57"><operator pos:start="153:53" pos:end="153:53">&amp;</operator><name pos:start="153:54" pos:end="153:57">mcfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:25">(<expr pos:start="157:9" pos:end="157:24"><call pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:22">acpi_has_iommu</name><argument_list pos:start="157:23" pos:end="157:24">()</argument_list></call></expr>)</condition> <block pos:start="157:27" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:52">

        <expr_stmt pos:start="159:9" pos:end="159:51"><expr pos:start="159:9" pos:end="159:50"><call pos:start="159:9" pos:end="159:50"><name pos:start="159:9" pos:end="159:22">acpi_add_table</name><argument_list pos:start="159:23" pos:end="159:50">(<argument pos:start="159:24" pos:end="159:36"><expr pos:start="159:24" pos:end="159:36"><name pos:start="159:24" pos:end="159:36">table_offsets</name></expr></argument>, <argument pos:start="159:39" pos:end="159:49"><expr pos:start="159:39" pos:end="159:49"><name pos:start="159:39" pos:end="159:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:52"><expr pos:start="161:9" pos:end="161:51"><call pos:start="161:9" pos:end="161:51"><name pos:start="161:9" pos:end="161:22">build_dmar_q35</name><argument_list pos:start="161:23" pos:end="161:51">(<argument pos:start="161:24" pos:end="161:34"><expr pos:start="161:24" pos:end="161:34"><name pos:start="161:24" pos:end="161:34">tables_blob</name></expr></argument>, <argument pos:start="161:37" pos:end="161:50"><expr pos:start="161:37" pos:end="161:50"><name pos:start="161:37" pos:end="161:50"><name pos:start="161:37" pos:end="161:42">tables</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:50">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="171:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:26">(<expr pos:start="167:9" pos:end="167:25"><call pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:23">acpi_has_nvdimm</name><argument_list pos:start="167:24" pos:end="167:25">()</argument_list></call></expr>)</condition> <block pos:start="167:28" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:70">

        <expr_stmt pos:start="169:9" pos:end="169:70"><expr pos:start="169:9" pos:end="169:69"><call pos:start="169:9" pos:end="169:69"><name pos:start="169:9" pos:end="169:25">nvdimm_build_acpi</name><argument_list pos:start="169:26" pos:end="169:69">(<argument pos:start="169:27" pos:end="169:39"><expr pos:start="169:27" pos:end="169:39"><name pos:start="169:27" pos:end="169:39">table_offsets</name></expr></argument>, <argument pos:start="169:42" pos:end="169:52"><expr pos:start="169:42" pos:end="169:52"><name pos:start="169:42" pos:end="169:52">tables_blob</name></expr></argument>, <argument pos:start="169:55" pos:end="169:68"><expr pos:start="169:55" pos:end="169:68"><name pos:start="169:55" pos:end="169:68"><name pos:start="169:55" pos:end="169:60">tables</name><operator pos:start="169:61" pos:end="169:62">-&gt;</operator><name pos:start="169:63" pos:end="169:68">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="175:5" pos:end="175:46">/* Add tables supplied by user (if any) */</comment>

    <for pos:start="177:5" pos:end="187:5">for <control pos:start="177:9" pos:end="177:59">(<init pos:start="177:10" pos:end="177:32"><expr pos:start="177:10" pos:end="177:31"><name pos:start="177:10" pos:end="177:10">u</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <call pos:start="177:14" pos:end="177:31"><name pos:start="177:14" pos:end="177:29">acpi_table_first</name><argument_list pos:start="177:30" pos:end="177:31">()</argument_list></call></expr>;</init> <condition pos:start="177:34" pos:end="177:35"><expr pos:start="177:34" pos:end="177:34"><name pos:start="177:34" pos:end="177:34">u</name></expr>;</condition> <incr pos:start="177:37" pos:end="177:58"><expr pos:start="177:37" pos:end="177:58"><name pos:start="177:37" pos:end="177:37">u</name> <operator pos:start="177:39" pos:end="177:39">=</operator> <call pos:start="177:41" pos:end="177:58"><name pos:start="177:41" pos:end="177:55">acpi_table_next</name><argument_list pos:start="177:56" pos:end="177:58">(<argument pos:start="177:57" pos:end="177:57"><expr pos:start="177:57" pos:end="177:57"><name pos:start="177:57" pos:end="177:57">u</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="177:61" pos:end="187:5">{<block_content pos:start="179:9" pos:end="185:49">

        <decl_stmt pos:start="179:9" pos:end="179:41"><decl pos:start="179:9" pos:end="179:40"><type pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:16">unsigned</name></type> <name pos:start="179:18" pos:end="179:20">len</name> <init pos:start="179:22" pos:end="179:40">= <expr pos:start="179:24" pos:end="179:40"><call pos:start="179:24" pos:end="179:40"><name pos:start="179:24" pos:end="179:37">acpi_table_len</name><argument_list pos:start="179:38" pos:end="179:40">(<argument pos:start="179:39" pos:end="179:39"><expr pos:start="179:39" pos:end="179:39"><name pos:start="179:39" pos:end="179:39">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:51"><expr pos:start="183:9" pos:end="183:50"><call pos:start="183:9" pos:end="183:50"><name pos:start="183:9" pos:end="183:22">acpi_add_table</name><argument_list pos:start="183:23" pos:end="183:50">(<argument pos:start="183:24" pos:end="183:36"><expr pos:start="183:24" pos:end="183:36"><name pos:start="183:24" pos:end="183:36">table_offsets</name></expr></argument>, <argument pos:start="183:39" pos:end="183:49"><expr pos:start="183:39" pos:end="183:49"><name pos:start="183:39" pos:end="183:49">tables_blob</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:49"><expr pos:start="185:9" pos:end="185:48"><call pos:start="185:9" pos:end="185:48"><name pos:start="185:9" pos:end="185:27">g_array_append_vals</name><argument_list pos:start="185:28" pos:end="185:48">(<argument pos:start="185:29" pos:end="185:39"><expr pos:start="185:29" pos:end="185:39"><name pos:start="185:29" pos:end="185:39">tables_blob</name></expr></argument>, <argument pos:start="185:42" pos:end="185:42"><expr pos:start="185:42" pos:end="185:42"><name pos:start="185:42" pos:end="185:42">u</name></expr></argument>, <argument pos:start="185:45" pos:end="185:47"><expr pos:start="185:45" pos:end="185:47"><name pos:start="185:45" pos:end="185:47">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="191:5" pos:end="191:36">/* RSDT is pointed to by RSDP */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:28"><expr pos:start="193:5" pos:end="193:27"><name pos:start="193:5" pos:end="193:8">rsdt</name> <operator pos:start="193:10" pos:end="193:10">=</operator> <name pos:start="193:12" pos:end="193:27"><name pos:start="193:12" pos:end="193:22">tables_blob</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="197:47"><expr pos:start="195:5" pos:end="197:46"><call pos:start="195:5" pos:end="197:46"><name pos:start="195:5" pos:end="195:14">build_rsdt</name><argument_list pos:start="195:15" pos:end="197:46">(<argument pos:start="195:16" pos:end="195:26"><expr pos:start="195:16" pos:end="195:26"><name pos:start="195:16" pos:end="195:26">tables_blob</name></expr></argument>, <argument pos:start="195:29" pos:end="195:42"><expr pos:start="195:29" pos:end="195:42"><name pos:start="195:29" pos:end="195:42"><name pos:start="195:29" pos:end="195:34">tables</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:42">linker</name></name></expr></argument>, <argument pos:start="195:45" pos:end="195:57"><expr pos:start="195:45" pos:end="195:57"><name pos:start="195:45" pos:end="195:57">table_offsets</name></expr></argument>,

               <argument pos:start="197:16" pos:end="197:26"><expr pos:start="197:16" pos:end="197:26"><name pos:start="197:16" pos:end="197:26"><name pos:start="197:16" pos:end="197:23">slic_oem</name><operator pos:start="197:24" pos:end="197:24">.</operator><name pos:start="197:25" pos:end="197:26">id</name></name></expr></argument>, <argument pos:start="197:29" pos:end="197:45"><expr pos:start="197:29" pos:end="197:45"><name pos:start="197:29" pos:end="197:45"><name pos:start="197:29" pos:end="197:36">slic_oem</name><operator pos:start="197:37" pos:end="197:37">.</operator><name pos:start="197:38" pos:end="197:45">table_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:59">/* RSDP is in FSEG memory, so allocate it separately */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:51"><expr pos:start="203:5" pos:end="203:50"><call pos:start="203:5" pos:end="203:50"><name pos:start="203:5" pos:end="203:14">build_rsdp</name><argument_list pos:start="203:15" pos:end="203:50">(<argument pos:start="203:16" pos:end="203:27"><expr pos:start="203:16" pos:end="203:27"><name pos:start="203:16" pos:end="203:27"><name pos:start="203:16" pos:end="203:21">tables</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:27">rsdp</name></name></expr></argument>, <argument pos:start="203:30" pos:end="203:43"><expr pos:start="203:30" pos:end="203:43"><name pos:start="203:30" pos:end="203:43"><name pos:start="203:30" pos:end="203:35">tables</name><operator pos:start="203:36" pos:end="203:37">-&gt;</operator><name pos:start="203:38" pos:end="203:43">linker</name></name></expr></argument>, <argument pos:start="203:46" pos:end="203:49"><expr pos:start="203:46" pos:end="203:49"><name pos:start="203:46" pos:end="203:49">rsdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="207:5" pos:end="239:7">/* We'll expose it all to Guest so we want to reduce

     * chance of size changes.

     *

     * We used to align the tables to 4k, but of course this would

     * too simple to be enough.  4k turned out to be too small an

     * alignment very soon, and in fact it is almost impossible to

     * keep the table size stable for all (max_cpus, max_memory_slots)

     * combinations.  So the table size is always 64k for pc-i440fx-2.1

     * and we give an error if the table grows beyond that limit.

     *

     * We still have the problem of migrating from "-M pc-i440fx-2.0".  For

     * that, we exploit the fact that QEMU 2.1 generates _smaller_ tables

     * than 2.0 and we can always pad the smaller tables with zeros.  We can

     * then use the exact size of the 2.0 tables.

     *

     * All this is for PIIX4, since QEMU 2.0 didn't support Q35 migration.

     */</comment>

    <if_stmt pos:start="241:5" pos:end="291:5"><if pos:start="241:5" pos:end="271:5">if <condition pos:start="241:8" pos:end="241:37">(<expr pos:start="241:9" pos:end="241:36"><name pos:start="241:9" pos:end="241:36"><name pos:start="241:9" pos:end="241:12">pcmc</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:36">legacy_acpi_table_size</name></name></expr>)</condition> <block pos:start="241:39" pos:end="271:5">{<block_content pos:start="249:9" pos:end="269:57">

        <comment type="block" pos:start="243:9" pos:end="247:11">/* Subtracting aml_len gives the size of fixed tables.  Then add the

         * size of the PIIX4 DSDT/SSDT in QEMU 2.0.

         */</comment>

        <decl_stmt pos:start="249:9" pos:end="253:54"><decl pos:start="249:9" pos:end="253:53"><type pos:start="249:9" pos:end="249:11"><name pos:start="249:9" pos:end="249:11">int</name></type> <name pos:start="249:13" pos:end="249:26">legacy_aml_len</name> <init pos:start="249:28" pos:end="253:53">=

            <expr pos:start="251:13" pos:end="253:53"><name pos:start="251:13" pos:end="251:40"><name pos:start="251:13" pos:end="251:16">pcmc</name><operator pos:start="251:17" pos:end="251:18">-&gt;</operator><name pos:start="251:19" pos:end="251:40">legacy_acpi_table_size</name></name> <operator pos:start="251:42" pos:end="251:42">+</operator>

            <name pos:start="253:13" pos:end="253:42">ACPI_BUILD_LEGACY_CPU_AML_SIZE</name> <operator pos:start="253:44" pos:end="253:44">*</operator> <name pos:start="253:46" pos:end="253:53">max_cpus</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="255:9" pos:end="259:44"><decl pos:start="255:9" pos:end="259:43"><type pos:start="255:9" pos:end="255:11"><name pos:start="255:9" pos:end="255:11">int</name></type> <name pos:start="255:13" pos:end="255:29">legacy_table_size</name> <init pos:start="255:31" pos:end="259:43">=

            <expr pos:start="257:13" pos:end="259:43"><call pos:start="257:13" pos:end="259:43"><name pos:start="257:13" pos:end="257:20">ROUND_UP</name><argument_list pos:start="257:21" pos:end="259:43">(<argument pos:start="257:22" pos:end="257:64"><expr pos:start="257:22" pos:end="257:64"><name pos:start="257:22" pos:end="257:37"><name pos:start="257:22" pos:end="257:32">tables_blob</name><operator pos:start="257:33" pos:end="257:34">-&gt;</operator><name pos:start="257:35" pos:end="257:37">len</name></name> <operator pos:start="257:39" pos:end="257:39">-</operator> <name pos:start="257:41" pos:end="257:47">aml_len</name> <operator pos:start="257:49" pos:end="257:49">+</operator> <name pos:start="257:51" pos:end="257:64">legacy_aml_len</name></expr></argument>,

                     <argument pos:start="259:22" pos:end="259:42"><expr pos:start="259:22" pos:end="259:42"><name pos:start="259:22" pos:end="259:42">ACPI_BUILD_ALIGN_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="261:9" pos:end="267:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:49">(<expr pos:start="261:13" pos:end="261:48"><name pos:start="261:13" pos:end="261:28"><name pos:start="261:13" pos:end="261:23">tables_blob</name><operator pos:start="261:24" pos:end="261:25">-&gt;</operator><name pos:start="261:26" pos:end="261:28">len</name></name> <operator pos:start="261:30" pos:end="261:30">&gt;</operator> <name pos:start="261:32" pos:end="261:48">legacy_table_size</name></expr>)</condition> <block pos:start="261:51" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:61">

            <comment type="block" pos:start="263:13" pos:end="263:76">/* Should happen only with PCI bridges and -M pc-i440fx-2.0.  */</comment>

            <expr_stmt pos:start="265:13" pos:end="265:61"><expr pos:start="265:13" pos:end="265:60"><call pos:start="265:13" pos:end="265:60"><name pos:start="265:13" pos:end="265:24">error_report</name><argument_list pos:start="265:25" pos:end="265:60">(<argument pos:start="265:26" pos:end="265:59"><expr pos:start="265:26" pos:end="265:59"><literal type="string" pos:start="265:26" pos:end="265:59">"Warning: migration may not work."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:57"><expr pos:start="269:9" pos:end="269:56"><call pos:start="269:9" pos:end="269:56"><name pos:start="269:9" pos:end="269:24">g_array_set_size</name><argument_list pos:start="269:25" pos:end="269:56">(<argument pos:start="269:26" pos:end="269:36"><expr pos:start="269:26" pos:end="269:36"><name pos:start="269:26" pos:end="269:36">tables_blob</name></expr></argument>, <argument pos:start="269:39" pos:end="269:55"><expr pos:start="269:39" pos:end="269:55"><name pos:start="269:39" pos:end="269:55">legacy_table_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="271:7" pos:end="291:5">else <block pos:start="271:12" pos:end="291:5">{<block_content pos:start="275:9" pos:end="289:60">

        <comment type="block" pos:start="273:9" pos:end="273:78">/* Make sure we have a buffer in case we need to resize the tables. */</comment>

        <if_stmt pos:start="275:9" pos:end="287:9"><if pos:start="275:9" pos:end="287:9">if <condition pos:start="275:12" pos:end="275:57">(<expr pos:start="275:13" pos:end="275:56"><name pos:start="275:13" pos:end="275:28"><name pos:start="275:13" pos:end="275:23">tables_blob</name><operator pos:start="275:24" pos:end="275:25">-&gt;</operator><name pos:start="275:26" pos:end="275:28">len</name></name> <operator pos:start="275:30" pos:end="275:30">&gt;</operator> <name pos:start="275:32" pos:end="275:52">ACPI_BUILD_TABLE_SIZE</name> <operator pos:start="275:54" pos:end="275:54">/</operator> <literal type="number" pos:start="275:56" pos:end="275:56">2</literal></expr>)</condition> <block pos:start="275:59" pos:end="287:9">{<block_content pos:start="279:13" pos:end="285:57">

            <comment type="block" pos:start="277:13" pos:end="277:82">/* As of QEMU 2.1, this fires with 160 VCPUs and 255 memory slots.  */</comment>

            <expr_stmt pos:start="279:13" pos:end="279:70"><expr pos:start="279:13" pos:end="279:69"><call pos:start="279:13" pos:end="279:69"><name pos:start="279:13" pos:end="279:24">error_report</name><argument_list pos:start="279:25" pos:end="279:69">(<argument pos:start="279:26" pos:end="279:68"><expr pos:start="279:26" pos:end="279:68"><literal type="string" pos:start="279:26" pos:end="279:68">"Warning: ACPI tables are larger than 64k."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:61"><expr pos:start="281:13" pos:end="281:60"><call pos:start="281:13" pos:end="281:60"><name pos:start="281:13" pos:end="281:24">error_report</name><argument_list pos:start="281:25" pos:end="281:60">(<argument pos:start="281:26" pos:end="281:59"><expr pos:start="281:26" pos:end="281:59"><literal type="string" pos:start="281:26" pos:end="281:59">"Warning: migration may not work."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="285:57"><expr pos:start="283:13" pos:end="285:56"><call pos:start="283:13" pos:end="285:56"><name pos:start="283:13" pos:end="283:24">error_report</name><argument_list pos:start="283:25" pos:end="285:56">(<argument pos:start="283:26" pos:end="285:55"><expr pos:start="283:26" pos:end="285:55"><literal type="string" pos:start="283:26" pos:end="283:68">"Warning: please remove CPUs, NUMA nodes, "</literal>

                         <literal type="string" pos:start="285:26" pos:end="285:55">"memory slots or PCI bridges."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:60"><expr pos:start="289:9" pos:end="289:59"><call pos:start="289:9" pos:end="289:59"><name pos:start="289:9" pos:end="289:23">acpi_align_size</name><argument_list pos:start="289:24" pos:end="289:59">(<argument pos:start="289:25" pos:end="289:35"><expr pos:start="289:25" pos:end="289:35"><name pos:start="289:25" pos:end="289:35">tables_blob</name></expr></argument>, <argument pos:start="289:38" pos:end="289:58"><expr pos:start="289:38" pos:end="289:58"><name pos:start="289:38" pos:end="289:58">ACPI_BUILD_TABLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="295:5" pos:end="295:59"><expr pos:start="295:5" pos:end="295:58"><call pos:start="295:5" pos:end="295:58"><name pos:start="295:5" pos:end="295:19">acpi_align_size</name><argument_list pos:start="295:20" pos:end="295:58">(<argument pos:start="295:21" pos:end="295:34"><expr pos:start="295:21" pos:end="295:34"><name pos:start="295:21" pos:end="295:34"><name pos:start="295:21" pos:end="295:26">tables</name><operator pos:start="295:27" pos:end="295:28">-&gt;</operator><name pos:start="295:29" pos:end="295:34">linker</name></name></expr></argument>, <argument pos:start="295:37" pos:end="295:57"><expr pos:start="295:37" pos:end="295:57"><name pos:start="295:37" pos:end="295:57">ACPI_BUILD_ALIGN_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="299:5" pos:end="299:47">/* Cleanup memory that's no longer used. */</comment>

    <expr_stmt pos:start="301:5" pos:end="301:38"><expr pos:start="301:5" pos:end="301:37"><call pos:start="301:5" pos:end="301:37"><name pos:start="301:5" pos:end="301:16">g_array_free</name><argument_list pos:start="301:17" pos:end="301:37">(<argument pos:start="301:18" pos:end="301:30"><expr pos:start="301:18" pos:end="301:30"><name pos:start="301:18" pos:end="301:30">table_offsets</name></expr></argument>, <argument pos:start="301:33" pos:end="301:36"><expr pos:start="301:33" pos:end="301:36"><name pos:start="301:33" pos:end="301:36">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
