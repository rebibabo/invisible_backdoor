<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8057.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">av_reduce</name><parameter_list pos:start="1:14" pos:end="1:80">(<parameter pos:start="1:15" pos:end="1:26"><decl pos:start="1:15" pos:end="1:26"><type pos:start="1:15" pos:end="1:26"><name pos:start="1:15" pos:end="1:17">int</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:26">dst_num</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:31">int</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">dst_den</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">int64_t</name></type> <name pos:start="1:51" pos:end="1:53">num</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:66">den</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:79"><decl pos:start="1:69" pos:end="1:79"><type pos:start="1:69" pos:end="1:79"><name pos:start="1:69" pos:end="1:75">int64_t</name></type> <name pos:start="1:77" pos:end="1:79">max</name></decl></parameter>)</parameter_list><block pos:start="1:81" pos:end="81:1">{<block_content pos:start="3:5" pos:end="79:18">

    <decl_stmt pos:start="3:5" pos:end="3:34"><decl pos:start="3:5" pos:end="3:23"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:14">AVRational</name></type> <name pos:start="3:16" pos:end="3:17">a0</name><init pos:start="3:18" pos:end="3:23">=<expr pos:start="3:19" pos:end="3:23"><block pos:start="3:19" pos:end="3:23">{<expr pos:start="3:20" pos:end="3:20"><literal type="number" pos:start="3:20" pos:end="3:20">0</literal></expr>,<expr pos:start="3:22" pos:end="3:22"><literal type="number" pos:start="3:22" pos:end="3:22">1</literal></expr>}</block></expr></init></decl>, <decl pos:start="3:26" pos:end="3:33"><type ref="prev" pos:start="3:5" pos:end="3:14"/><name pos:start="3:26" pos:end="3:27">a1</name><init pos:start="3:28" pos:end="3:33">=<expr pos:start="3:29" pos:end="3:33"><block pos:start="3:29" pos:end="3:33">{<expr pos:start="3:30" pos:end="3:30"><literal type="number" pos:start="3:30" pos:end="3:30">1</literal></expr>,<expr pos:start="3:32" pos:end="3:32"><literal type="number" pos:start="3:32" pos:end="3:32">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">sign</name><init pos:start="5:13" pos:end="5:31">= <expr pos:start="5:15" pos:end="5:31"><operator pos:start="5:15" pos:end="5:15">(</operator><name pos:start="5:16" pos:end="5:18">num</name><operator pos:start="5:19" pos:end="5:19">&lt;</operator><literal type="number" pos:start="5:20" pos:end="5:20">0</literal><operator pos:start="5:21" pos:end="5:21">)</operator> <operator pos:start="5:23" pos:end="5:23">^</operator> <operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:28">den</name><operator pos:start="5:29" pos:end="5:29">&lt;</operator><literal type="number" pos:start="5:30" pos:end="5:30">0</literal><operator pos:start="5:31" pos:end="5:31">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">gcd</name><init pos:start="7:16" pos:end="7:47">= <expr pos:start="7:18" pos:end="7:47"><call pos:start="7:18" pos:end="7:47"><name pos:start="7:18" pos:end="7:23">av_gcd</name><argument_list pos:start="7:24" pos:end="7:47">(<argument pos:start="7:25" pos:end="7:34"><expr pos:start="7:25" pos:end="7:34"><call pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:29">FFABS</name><argument_list pos:start="7:30" pos:end="7:34">(<argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">num</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="7:37" pos:end="7:46"><expr pos:start="7:37" pos:end="7:46"><call pos:start="7:37" pos:end="7:46"><name pos:start="7:37" pos:end="7:41">FFABS</name><argument_list pos:start="7:42" pos:end="7:46">(<argument pos:start="7:43" pos:end="7:45"><expr pos:start="7:43" pos:end="7:45"><name pos:start="7:43" pos:end="7:45">den</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if<condition pos:start="11:7" pos:end="11:11">(<expr pos:start="11:8" pos:end="11:10"><name pos:start="11:8" pos:end="11:10">gcd</name></expr>)</condition><block pos:start="11:12" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:29">

        <expr_stmt pos:start="13:9" pos:end="13:29"><expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:11">num</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:24"><name pos:start="13:15" pos:end="13:19">FFABS</name><argument_list pos:start="13:20" pos:end="13:24">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">num</name></expr></argument>)</argument_list></call><operator pos:start="13:25" pos:end="13:25">/</operator><name pos:start="13:26" pos:end="13:28">gcd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">den</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:24"><name pos:start="15:15" pos:end="15:19">FFABS</name><argument_list pos:start="15:20" pos:end="15:24">(<argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">den</name></expr></argument>)</argument_list></call><operator pos:start="15:25" pos:end="15:25">/</operator><name pos:start="15:26" pos:end="15:28">gcd</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:28">(<expr pos:start="19:8" pos:end="19:27"><name pos:start="19:8" pos:end="19:10">num</name><operator pos:start="19:11" pos:end="19:12">&lt;=</operator><name pos:start="19:13" pos:end="19:15">max</name> <operator pos:start="19:17" pos:end="19:18">&amp;&amp;</operator> <name pos:start="19:20" pos:end="19:22">den</name><operator pos:start="19:23" pos:end="19:24">&lt;=</operator><name pos:start="19:25" pos:end="19:27">max</name></expr>)</condition><block pos:start="19:29" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:14">

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:10">a1</name><operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:23">AVRational</name><operator pos:start="21:24" pos:end="21:24">)</operator><block pos:start="21:25" pos:end="21:34">{<expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">num</name></expr>, <expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:33">den</name></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:11">den</name><operator pos:start="23:12" pos:end="23:12">=</operator><literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="29:5" pos:end="67:5">while<condition pos:start="29:10" pos:end="29:14">(<expr pos:start="29:11" pos:end="29:13"><name pos:start="29:11" pos:end="29:13">den</name></expr>)</condition><block pos:start="29:15" pos:end="67:5">{<block_content pos:start="31:9" pos:end="65:22">

        <decl_stmt pos:start="31:9" pos:end="31:36"><decl pos:start="31:9" pos:end="31:35"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">uint64_t</name></type> <name pos:start="31:18" pos:end="31:18">x</name>      <init pos:start="31:25" pos:end="31:35">= <expr pos:start="31:27" pos:end="31:35"><name pos:start="31:27" pos:end="31:29">num</name> <operator pos:start="31:31" pos:end="31:31">/</operator> <name pos:start="31:33" pos:end="31:35">den</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:38"><decl pos:start="33:9" pos:end="33:37"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:24">next_den</name><init pos:start="33:25" pos:end="33:37">= <expr pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:29">num</name> <operator pos:start="33:31" pos:end="33:31">-</operator> <name pos:start="33:33" pos:end="33:35">den</name><operator pos:start="33:36" pos:end="33:36">*</operator><name pos:start="33:37" pos:end="33:37">x</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:39"><decl pos:start="35:9" pos:end="35:38"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">int64_t</name></type> <name pos:start="35:17" pos:end="35:19">a2n</name><init pos:start="35:20" pos:end="35:38">= <expr pos:start="35:22" pos:end="35:38"><name pos:start="35:22" pos:end="35:22">x</name><operator pos:start="35:23" pos:end="35:23">*</operator><name pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:25">a1</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:29">num</name></name> <operator pos:start="35:31" pos:end="35:31">+</operator> <name pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:34">a0</name><operator pos:start="35:35" pos:end="35:35">.</operator><name pos:start="35:36" pos:end="35:38">num</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:39"><decl pos:start="37:9" pos:end="37:38"><type pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">int64_t</name></type> <name pos:start="37:17" pos:end="37:19">a2d</name><init pos:start="37:20" pos:end="37:38">= <expr pos:start="37:22" pos:end="37:38"><name pos:start="37:22" pos:end="37:22">x</name><operator pos:start="37:23" pos:end="37:23">*</operator><name pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:25">a1</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:29">den</name></name> <operator pos:start="37:31" pos:end="37:31">+</operator> <name pos:start="37:33" pos:end="37:38"><name pos:start="37:33" pos:end="37:34">a0</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:38">den</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="55:9"><if pos:start="41:9" pos:end="55:9">if<condition pos:start="41:11" pos:end="41:34">(<expr pos:start="41:12" pos:end="41:33"><name pos:start="41:12" pos:end="41:14">a2n</name> <operator pos:start="41:16" pos:end="41:16">&gt;</operator> <name pos:start="41:18" pos:end="41:20">max</name> <operator pos:start="41:22" pos:end="41:23">||</operator> <name pos:start="41:25" pos:end="41:27">a2d</name> <operator pos:start="41:29" pos:end="41:29">&gt;</operator> <name pos:start="41:31" pos:end="41:33">max</name></expr>)</condition><block pos:start="41:35" pos:end="55:9">{<block_content pos:start="43:13" pos:end="53:18">

            <if_stmt pos:start="43:13" pos:end="43:50"><if pos:start="43:13" pos:end="43:50">if<condition pos:start="43:15" pos:end="43:22">(<expr pos:start="43:16" pos:end="43:21"><name pos:start="43:16" pos:end="43:21"><name pos:start="43:16" pos:end="43:17">a1</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:21">num</name></name></expr>)</condition><block type="pseudo" pos:start="43:24" pos:end="43:50"><block_content pos:start="43:24" pos:end="43:50"> <expr_stmt pos:start="43:24" pos:end="43:50"><expr pos:start="43:24" pos:end="43:49"><name pos:start="43:24" pos:end="43:24">x</name><operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:30">max</name> <operator pos:start="43:32" pos:end="43:32">-</operator> <name pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:35">a0</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:39">num</name></name><operator pos:start="43:40" pos:end="43:40">)</operator> <operator pos:start="43:42" pos:end="43:42">/</operator> <name pos:start="43:44" pos:end="43:49"><name pos:start="43:44" pos:end="43:45">a1</name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:49">num</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="45:13" pos:end="45:60"><if pos:start="45:13" pos:end="45:60">if<condition pos:start="45:15" pos:end="45:22">(<expr pos:start="45:16" pos:end="45:21"><name pos:start="45:16" pos:end="45:21"><name pos:start="45:16" pos:end="45:17">a1</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:21">den</name></name></expr>)</condition><block type="pseudo" pos:start="45:24" pos:end="45:60"><block_content pos:start="45:24" pos:end="45:60"> <expr_stmt pos:start="45:24" pos:end="45:60"><expr pos:start="45:24" pos:end="45:59"><name pos:start="45:24" pos:end="45:24">x</name><operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:59"><name pos:start="45:27" pos:end="45:31">FFMIN</name><argument_list pos:start="45:32" pos:end="45:59">(<argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><name pos:start="45:33" pos:end="45:33">x</name></expr></argument>, <argument pos:start="45:36" pos:end="45:58"><expr pos:start="45:36" pos:end="45:58"><operator pos:start="45:36" pos:end="45:36">(</operator><name pos:start="45:37" pos:end="45:39">max</name> <operator pos:start="45:41" pos:end="45:41">-</operator> <name pos:start="45:43" pos:end="45:48"><name pos:start="45:43" pos:end="45:44">a0</name><operator pos:start="45:45" pos:end="45:45">.</operator><name pos:start="45:46" pos:end="45:48">den</name></name><operator pos:start="45:49" pos:end="45:49">)</operator> <operator pos:start="45:51" pos:end="45:51">/</operator> <name pos:start="45:53" pos:end="45:58"><name pos:start="45:53" pos:end="45:54">a1</name><operator pos:start="45:55" pos:end="45:55">.</operator><name pos:start="45:56" pos:end="45:58">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="49:13" pos:end="51:72"><if pos:start="49:13" pos:end="51:72">if <condition pos:start="49:16" pos:end="49:55">(<expr pos:start="49:17" pos:end="49:54"><name pos:start="49:17" pos:end="49:19">den</name><operator pos:start="49:20" pos:end="49:20">*</operator><operator pos:start="49:21" pos:end="49:21">(</operator><literal type="number" pos:start="49:22" pos:end="49:22">2</literal><operator pos:start="49:23" pos:end="49:23">*</operator><name pos:start="49:24" pos:end="49:24">x</name><operator pos:start="49:25" pos:end="49:25">*</operator><name pos:start="49:26" pos:end="49:31"><name pos:start="49:26" pos:end="49:27">a1</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:31">den</name></name> <operator pos:start="49:33" pos:end="49:33">+</operator> <name pos:start="49:35" pos:end="49:40"><name pos:start="49:35" pos:end="49:36">a0</name><operator pos:start="49:37" pos:end="49:37">.</operator><name pos:start="49:38" pos:end="49:40">den</name></name><operator pos:start="49:41" pos:end="49:41">)</operator> <operator pos:start="49:43" pos:end="49:43">&gt;</operator> <name pos:start="49:45" pos:end="49:47">num</name><operator pos:start="49:48" pos:end="49:48">*</operator><name pos:start="49:49" pos:end="49:54"><name pos:start="49:49" pos:end="49:50">a1</name><operator pos:start="49:51" pos:end="49:51">.</operator><name pos:start="49:52" pos:end="49:54">den</name></name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:72"><block_content pos:start="51:17" pos:end="51:72">

                <expr_stmt pos:start="51:17" pos:end="51:72"><expr pos:start="51:17" pos:end="51:71"><name pos:start="51:17" pos:end="51:18">a1</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:32">AVRational</name><operator pos:start="51:33" pos:end="51:33">)</operator><block pos:start="51:34" pos:end="51:71">{<expr pos:start="51:35" pos:end="51:51"><name pos:start="51:35" pos:end="51:35">x</name><operator pos:start="51:36" pos:end="51:36">*</operator><name pos:start="51:37" pos:end="51:42"><name pos:start="51:37" pos:end="51:38">a1</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:42">num</name></name> <operator pos:start="51:44" pos:end="51:44">+</operator> <name pos:start="51:46" pos:end="51:51"><name pos:start="51:46" pos:end="51:47">a0</name><operator pos:start="51:48" pos:end="51:48">.</operator><name pos:start="51:49" pos:end="51:51">num</name></name></expr>, <expr pos:start="51:54" pos:end="51:70"><name pos:start="51:54" pos:end="51:54">x</name><operator pos:start="51:55" pos:end="51:55">*</operator><name pos:start="51:56" pos:end="51:61"><name pos:start="51:56" pos:end="51:57">a1</name><operator pos:start="51:58" pos:end="51:58">.</operator><name pos:start="51:59" pos:end="51:61">den</name></name> <operator pos:start="51:63" pos:end="51:63">+</operator> <name pos:start="51:65" pos:end="51:70"><name pos:start="51:65" pos:end="51:66">a0</name><operator pos:start="51:67" pos:end="51:67">.</operator><name pos:start="51:68" pos:end="51:70">den</name></name></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:15"><expr pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:10">a0</name><operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:14">a1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:10">a1</name><operator pos:start="61:11" pos:end="61:11">=</operator> <operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:23">AVRational</name><operator pos:start="61:24" pos:end="61:24">)</operator><block pos:start="61:25" pos:end="61:34">{<expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:28">a2n</name></expr>, <expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">a2d</name></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:17"><expr pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:11">num</name><operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:16">den</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">den</name><operator pos:start="65:12" pos:end="65:12">=</operator> <name pos:start="65:14" pos:end="65:21">next_den</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><call pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:10">assert</name><argument_list pos:start="69:11" pos:end="69:40">(<argument pos:start="69:12" pos:end="69:39"><expr pos:start="69:12" pos:end="69:39"><call pos:start="69:12" pos:end="69:33"><name pos:start="69:12" pos:end="69:17">av_gcd</name><argument_list pos:start="69:18" pos:end="69:33">(<argument pos:start="69:19" pos:end="69:24"><expr pos:start="69:19" pos:end="69:24"><name pos:start="69:19" pos:end="69:24"><name pos:start="69:19" pos:end="69:20">a1</name><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:24">num</name></name></expr></argument>, <argument pos:start="69:27" pos:end="69:32"><expr pos:start="69:27" pos:end="69:32"><name pos:start="69:27" pos:end="69:32"><name pos:start="69:27" pos:end="69:28">a1</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:32">den</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:35" pos:end="69:36">&lt;=</operator> <literal type="number" pos:start="69:38" pos:end="69:39">1U</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:12">dst_num</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <ternary pos:start="73:16" pos:end="73:38"><condition pos:start="73:16" pos:end="73:21"><expr pos:start="73:16" pos:end="73:19"><name pos:start="73:16" pos:end="73:19">sign</name></expr> ?</condition><then pos:start="73:23" pos:end="73:29"> <expr pos:start="73:23" pos:end="73:29"><operator pos:start="73:23" pos:end="73:23">-</operator><name pos:start="73:24" pos:end="73:29"><name pos:start="73:24" pos:end="73:25">a1</name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:29">num</name></name></expr> </then><else pos:start="73:31" pos:end="73:38">: <expr pos:start="73:33" pos:end="73:38"><name pos:start="73:33" pos:end="73:38"><name pos:start="73:33" pos:end="73:34">a1</name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:38">num</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:22"><expr pos:start="75:5" pos:end="75:21"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:12">dst_den</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:17">a1</name><operator pos:start="75:18" pos:end="75:18">.</operator><name pos:start="75:19" pos:end="75:21">den</name></name></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:18">return <expr pos:start="79:12" pos:end="79:17"><name pos:start="79:12" pos:end="79:14">den</name><operator pos:start="79:15" pos:end="79:16">==</operator><literal type="number" pos:start="79:17" pos:end="79:17">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
