<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/505.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:23">address_space_map</name><parameter_list pos:start="1:24" pos:end="7:38">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:36">AddressSpace</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">as</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:47"><decl pos:start="3:25" pos:end="3:47"><type pos:start="3:25" pos:end="3:47"><name pos:start="3:25" pos:end="3:42">target_phys_addr_t</name></type> <name pos:start="3:44" pos:end="3:47">addr</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:48"><decl pos:start="5:25" pos:end="5:48"><type pos:start="5:25" pos:end="5:48"><name pos:start="5:25" pos:end="5:42">target_phys_addr_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:48">plen</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:37"><decl pos:start="7:25" pos:end="7:37"><type pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:28">bool</name></type> <name pos:start="7:30" pos:end="7:37">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="99:1">{<block_content pos:start="11:5" pos:end="97:15">

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:24">AddressSpaceDispatch</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:27">d</name> <init pos:start="11:29" pos:end="11:42">= <expr pos:start="11:31" pos:end="11:42"><name pos:start="11:31" pos:end="11:42"><name pos:start="11:31" pos:end="11:32">as</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:42">dispatch</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22">target_phys_addr_t</name></type> <name pos:start="13:24" pos:end="13:26">len</name> <init pos:start="13:28" pos:end="13:34">= <expr pos:start="13:30" pos:end="13:34"><operator pos:start="13:30" pos:end="13:30">*</operator><name pos:start="13:31" pos:end="13:34">plen</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22">target_phys_addr_t</name></type> <name pos:start="15:24" pos:end="15:27">todo</name> <init pos:start="15:29" pos:end="15:31">= <expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:22">target_phys_addr_t</name></type> <name pos:start="19:24" pos:end="19:27">page</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:23">MemoryRegionSection</name> <modifier pos:start="21:25" pos:end="21:25">*</modifier></type><name pos:start="21:26" pos:end="21:32">section</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:14">ram_addr_t</name></type> <name pos:start="23:16" pos:end="23:20">raddr</name> <init pos:start="23:22" pos:end="23:35">= <expr pos:start="23:24" pos:end="23:35"><name pos:start="23:24" pos:end="23:35">RAM_ADDR_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:20"><decl pos:start="25:5" pos:end="25:19"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:14">ram_addr_t</name></type> <name pos:start="25:16" pos:end="25:19">rlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:8">void</name> <modifier pos:start="27:10" pos:end="27:10">*</modifier></type><name pos:start="27:11" pos:end="27:13">ret</name></decl>;</decl_stmt>



    <while pos:start="31:5" pos:end="89:5">while <condition pos:start="31:11" pos:end="31:19">(<expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:14">len</name> <operator pos:start="31:16" pos:end="31:16">&gt;</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>)</condition> <block pos:start="31:21" pos:end="89:5">{<block_content pos:start="33:9" pos:end="87:18">

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:12">page</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:19">addr</name> <operator pos:start="33:21" pos:end="33:21">&amp;</operator> <name pos:start="33:23" pos:end="33:38">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:9">l</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:17">page</name> <operator pos:start="35:19" pos:end="35:19">+</operator> <name pos:start="35:21" pos:end="35:36">TARGET_PAGE_SIZE</name><operator pos:start="35:37" pos:end="35:37">)</operator> <operator pos:start="35:39" pos:end="35:39">-</operator> <name pos:start="35:41" pos:end="35:44">addr</name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:20"><if pos:start="37:9" pos:end="39:20">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:13">l</name> <operator pos:start="37:15" pos:end="37:15">&gt;</operator> <name pos:start="37:17" pos:end="37:19">len</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:20"><block_content pos:start="39:13" pos:end="39:20">

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:13">l</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:19">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:62"><expr pos:start="41:9" pos:end="41:61"><name pos:start="41:9" pos:end="41:15">section</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:61"><name pos:start="41:19" pos:end="41:32">phys_page_find</name><argument_list pos:start="41:33" pos:end="41:61">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">d</name></expr></argument>, <argument pos:start="41:37" pos:end="41:60"><expr pos:start="41:37" pos:end="41:60"><name pos:start="41:37" pos:end="41:40">page</name> <operator pos:start="41:42" pos:end="41:43">&gt;&gt;</operator> <name pos:start="41:45" pos:end="41:60">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="71:9"><if pos:start="45:9" pos:end="71:9">if <condition pos:start="45:12" pos:end="45:71">(<expr pos:start="45:13" pos:end="45:70"><operator pos:start="45:13" pos:end="45:13">!</operator><operator pos:start="45:14" pos:end="45:14">(</operator><call pos:start="45:15" pos:end="45:47"><name pos:start="45:15" pos:end="45:34">memory_region_is_ram</name><argument_list pos:start="45:35" pos:end="45:47">(<argument pos:start="45:36" pos:end="45:46"><expr pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:42">section</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:46">mr</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:49" pos:end="45:50">&amp;&amp;</operator> <operator pos:start="45:52" pos:end="45:52">!</operator><name pos:start="45:53" pos:end="45:69"><name pos:start="45:53" pos:end="45:59">section</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:69">readonly</name></name><operator pos:start="45:70" pos:end="45:70">)</operator></expr>)</condition> <block pos:start="45:73" pos:end="71:9">{<block_content pos:start="47:13" pos:end="69:33">

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:38">(<expr pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:20">todo</name> <operator pos:start="47:22" pos:end="47:23">||</operator> <name pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:30">bounce</name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:37">buffer</name></name></expr>)</condition> <block pos:start="47:40" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:22">

                <break pos:start="49:17" pos:end="49:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:78"><expr pos:start="53:13" pos:end="53:77"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:18">bounce</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:25">buffer</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <call pos:start="53:29" pos:end="53:77"><name pos:start="53:29" pos:end="53:41">qemu_memalign</name><argument_list pos:start="53:42" pos:end="53:77">(<argument pos:start="53:43" pos:end="53:58"><expr pos:start="53:43" pos:end="53:58"><name pos:start="53:43" pos:end="53:58">TARGET_PAGE_SIZE</name></expr></argument>, <argument pos:start="53:61" pos:end="53:76"><expr pos:start="53:61" pos:end="53:76"><name pos:start="53:61" pos:end="53:76">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:18">bounce</name><operator pos:start="55:19" pos:end="55:19">.</operator><name pos:start="55:20" pos:end="55:23">addr</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:30">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:27"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:18">bounce</name><operator pos:start="57:19" pos:end="57:19">.</operator><name pos:start="57:20" pos:end="57:22">len</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:26">l</name></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:26">(<expr pos:start="59:17" pos:end="59:25"><operator pos:start="59:17" pos:end="59:17">!</operator><name pos:start="59:18" pos:end="59:25">is_write</name></expr>)</condition> <block pos:start="59:28" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:63">

                <expr_stmt pos:start="61:17" pos:end="61:63"><expr pos:start="61:17" pos:end="61:62"><call pos:start="61:17" pos:end="61:62"><name pos:start="61:17" pos:end="61:34">address_space_read</name><argument_list pos:start="61:35" pos:end="61:62">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">as</name></expr></argument>, <argument pos:start="61:40" pos:end="61:43"><expr pos:start="61:40" pos:end="61:43"><name pos:start="61:40" pos:end="61:43">addr</name></expr></argument>, <argument pos:start="61:46" pos:end="61:58"><expr pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:51">bounce</name><operator pos:start="61:52" pos:end="61:52">.</operator><name pos:start="61:53" pos:end="61:58">buffer</name></name></expr></argument>, <argument pos:start="61:61" pos:end="61:61"><expr pos:start="61:61" pos:end="61:61"><name pos:start="61:61" pos:end="61:61">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:22"><expr pos:start="67:13" pos:end="67:21"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:17">plen</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:21">l</name></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:33">return <expr pos:start="69:20" pos:end="69:32"><name pos:start="69:20" pos:end="69:32"><name pos:start="69:20" pos:end="69:25">bounce</name><operator pos:start="69:26" pos:end="69:26">.</operator><name pos:start="69:27" pos:end="69:32">buffer</name></name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:18">(<expr pos:start="73:13" pos:end="73:17"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:17">todo</name></expr>)</condition> <block pos:start="73:20" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:60">

            <expr_stmt pos:start="75:13" pos:end="77:60"><expr pos:start="75:13" pos:end="77:59"><name pos:start="75:13" pos:end="75:17">raddr</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <call pos:start="75:21" pos:end="75:59"><name pos:start="75:21" pos:end="75:46">memory_region_get_ram_addr</name><argument_list pos:start="75:47" pos:end="75:59">(<argument pos:start="75:48" pos:end="75:58"><expr pos:start="75:48" pos:end="75:58"><name pos:start="75:48" pos:end="75:58"><name pos:start="75:48" pos:end="75:54">section</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:58">mr</name></name></expr></argument>)</argument_list></call>

                <operator pos:start="77:17" pos:end="77:17">+</operator> <call pos:start="77:19" pos:end="77:59"><name pos:start="77:19" pos:end="77:44">memory_region_section_addr</name><argument_list pos:start="77:45" pos:end="77:59">(<argument pos:start="77:46" pos:end="77:52"><expr pos:start="77:46" pos:end="77:52"><name pos:start="77:46" pos:end="77:52">section</name></expr></argument>, <argument pos:start="77:55" pos:end="77:58"><expr pos:start="77:55" pos:end="77:58"><name pos:start="77:55" pos:end="77:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:17"><expr pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:11">len</name> <operator pos:start="83:13" pos:end="83:14">-=</operator> <name pos:start="83:16" pos:end="83:16">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:18"><expr pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:12">addr</name> <operator pos:start="85:14" pos:end="85:15">+=</operator> <name pos:start="85:17" pos:end="85:17">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:18"><expr pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:12">todo</name> <operator pos:start="87:14" pos:end="87:15">+=</operator> <name pos:start="87:17" pos:end="87:17">l</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="91:5" pos:end="91:16"><expr pos:start="91:5" pos:end="91:15"><name pos:start="91:5" pos:end="91:8">rlen</name> <operator pos:start="91:10" pos:end="91:10">=</operator> <name pos:start="91:12" pos:end="91:15">todo</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:7">ret</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:43"><name pos:start="93:11" pos:end="93:29">qemu_ram_ptr_length</name><argument_list pos:start="93:30" pos:end="93:43">(<argument pos:start="93:31" pos:end="93:35"><expr pos:start="93:31" pos:end="93:35"><name pos:start="93:31" pos:end="93:35">raddr</name></expr></argument>, <argument pos:start="93:38" pos:end="93:42"><expr pos:start="93:38" pos:end="93:42"><operator pos:start="93:38" pos:end="93:38">&amp;</operator><name pos:start="93:39" pos:end="93:42">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:17"><expr pos:start="95:5" pos:end="95:16"><operator pos:start="95:5" pos:end="95:5">*</operator><name pos:start="95:6" pos:end="95:9">plen</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <name pos:start="95:13" pos:end="95:16">rlen</name></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
