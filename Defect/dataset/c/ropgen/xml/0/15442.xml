<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15442.c" pos:tabs="8"><function pos:start="1:1" pos:end="583:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">ff_h264_decode_seq_parameter_set</name><parameter_list pos:start="1:37" pos:end="3:78">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:50">GetBitContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">gb</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:70">AVCodecContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">avctx</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:54"><decl pos:start="3:38" pos:end="3:54"><type pos:start="3:38" pos:end="3:54"><name pos:start="3:38" pos:end="3:50">H264ParamSets</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:54">ps</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:77"><decl pos:start="3:57" pos:end="3:77"><type pos:start="3:57" pos:end="3:77"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:77">ignore_truncation</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="583:1">{<block_content pos:start="7:5" pos:end="581:31">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVBufferRef</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:24">sps_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">profile_idc</name></decl>, <decl pos:start="9:22" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:30">level_idc</name></decl>, <decl pos:start="9:33" pos:end="9:56"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:52">constraint_set_flags</name> <init pos:start="9:54" pos:end="9:56">= <expr pos:start="9:56" pos:end="9:56"><literal type="number" pos:start="9:56" pos:end="9:56">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">sps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:36">log2_max_frame_num_minus4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">SPS</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:12">sps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:11">sps_buf</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:44"><name pos:start="19:15" pos:end="19:30">av_buffer_allocz</name><argument_list pos:start="19:31" pos:end="19:44">(<argument pos:start="19:32" pos:end="19:43"><expr pos:start="19:32" pos:end="19:43"><sizeof pos:start="19:32" pos:end="19:43">sizeof<argument_list pos:start="19:38" pos:end="19:43">(<argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><operator pos:start="19:39" pos:end="19:39">*</operator><name pos:start="19:40" pos:end="19:42">sps</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:16">sps_buf</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:7">sps</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <operator pos:start="25:11" pos:end="25:11">(</operator><name pos:start="25:12" pos:end="25:14">SPS</name><operator pos:start="25:15" pos:end="25:15">*</operator><operator pos:start="25:16" pos:end="25:16">)</operator><name pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:23">sps_buf</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">sps</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">data_size</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:35"><name pos:start="29:22" pos:end="29:23">gb</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:35">buffer_end</name></name> <operator pos:start="29:37" pos:end="29:37">-</operator> <name pos:start="29:39" pos:end="29:48"><name pos:start="29:39" pos:end="29:40">gb</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:48">buffer</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:43">(<expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:11">sps</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:22">data_size</name></name> <operator pos:start="31:24" pos:end="31:24">&gt;</operator> <sizeof pos:start="31:26" pos:end="31:42">sizeof<argument_list pos:start="31:32" pos:end="31:42">(<argument pos:start="31:33" pos:end="31:41"><expr pos:start="31:33" pos:end="31:41"><name pos:start="31:33" pos:end="31:41"><name pos:start="31:33" pos:end="31:35">sps</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:41">data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="31:45" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:43">

        <expr_stmt pos:start="33:9" pos:end="33:75"><expr pos:start="33:9" pos:end="33:74"><call pos:start="33:9" pos:end="33:74"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:74">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:36"><expr pos:start="33:23" pos:end="33:36"><name pos:start="33:23" pos:end="33:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="33:39" pos:end="33:73"><expr pos:start="33:39" pos:end="33:73"><literal type="string" pos:start="33:39" pos:end="33:73">"Truncating likely oversized SPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:11">sps</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">data_size</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <sizeof pos:start="35:26" pos:end="35:42">sizeof<argument_list pos:start="35:32" pos:end="35:42">(<argument pos:start="35:33" pos:end="35:41"><expr pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:41"><name pos:start="35:33" pos:end="35:35">sps</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:41">data</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><call pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:10">memcpy</name><argument_list pos:start="39:11" pos:end="39:49">(<argument pos:start="39:12" pos:end="39:20"><expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:14">sps</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">data</name></name></expr></argument>, <argument pos:start="39:23" pos:end="39:32"><expr pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:24">gb</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:32">buffer</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:48"><expr pos:start="39:35" pos:end="39:48"><name pos:start="39:35" pos:end="39:48"><name pos:start="39:35" pos:end="39:37">sps</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:48">data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:15">profile_idc</name>           <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:43"><name pos:start="43:29" pos:end="43:36">get_bits</name><argument_list pos:start="43:37" pos:end="43:43">(<argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><name pos:start="43:38" pos:end="43:39">gb</name></expr></argument>, <argument pos:start="43:42" pos:end="43:42"><expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:24">constraint_set_flags</name> <operator pos:start="45:26" pos:end="45:27">|=</operator> <call pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:37">get_bits1</name><argument_list pos:start="45:38" pos:end="45:41">(<argument pos:start="45:39" pos:end="45:40"><expr pos:start="45:39" pos:end="45:40"><name pos:start="45:39" pos:end="45:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="45:43" pos:end="45:44">&lt;&lt;</operator> <literal type="number" pos:start="45:46" pos:end="45:46">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="45:51" pos:end="45:73">// constraint_set0_flag</comment>

    <expr_stmt pos:start="47:5" pos:end="47:47"><expr pos:start="47:5" pos:end="47:46"><name pos:start="47:5" pos:end="47:24">constraint_set_flags</name> <operator pos:start="47:26" pos:end="47:27">|=</operator> <call pos:start="47:29" pos:end="47:41"><name pos:start="47:29" pos:end="47:37">get_bits1</name><argument_list pos:start="47:38" pos:end="47:41">(<argument pos:start="47:39" pos:end="47:40"><expr pos:start="47:39" pos:end="47:40"><name pos:start="47:39" pos:end="47:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="47:43" pos:end="47:44">&lt;&lt;</operator> <literal type="number" pos:start="47:46" pos:end="47:46">1</literal></expr>;</expr_stmt>   <comment type="line" pos:start="47:51" pos:end="47:73">// constraint_set1_flag</comment>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:24">constraint_set_flags</name> <operator pos:start="49:26" pos:end="49:27">|=</operator> <call pos:start="49:29" pos:end="49:41"><name pos:start="49:29" pos:end="49:37">get_bits1</name><argument_list pos:start="49:38" pos:end="49:41">(<argument pos:start="49:39" pos:end="49:40"><expr pos:start="49:39" pos:end="49:40"><name pos:start="49:39" pos:end="49:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="49:43" pos:end="49:44">&lt;&lt;</operator> <literal type="number" pos:start="49:46" pos:end="49:46">2</literal></expr>;</expr_stmt>   <comment type="line" pos:start="49:51" pos:end="49:73">// constraint_set2_flag</comment>

    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:24">constraint_set_flags</name> <operator pos:start="51:26" pos:end="51:27">|=</operator> <call pos:start="51:29" pos:end="51:41"><name pos:start="51:29" pos:end="51:37">get_bits1</name><argument_list pos:start="51:38" pos:end="51:41">(<argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="51:43" pos:end="51:44">&lt;&lt;</operator> <literal type="number" pos:start="51:46" pos:end="51:46">3</literal></expr>;</expr_stmt>   <comment type="line" pos:start="51:51" pos:end="51:73">// constraint_set3_flag</comment>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:24">constraint_set_flags</name> <operator pos:start="53:26" pos:end="53:27">|=</operator> <call pos:start="53:29" pos:end="53:41"><name pos:start="53:29" pos:end="53:37">get_bits1</name><argument_list pos:start="53:38" pos:end="53:41">(<argument pos:start="53:39" pos:end="53:40"><expr pos:start="53:39" pos:end="53:40"><name pos:start="53:39" pos:end="53:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="53:43" pos:end="53:44">&lt;&lt;</operator> <literal type="number" pos:start="53:46" pos:end="53:46">4</literal></expr>;</expr_stmt>   <comment type="line" pos:start="53:51" pos:end="53:73">// constraint_set4_flag</comment>

    <expr_stmt pos:start="55:5" pos:end="55:47"><expr pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:24">constraint_set_flags</name> <operator pos:start="55:26" pos:end="55:27">|=</operator> <call pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:37">get_bits1</name><argument_list pos:start="55:38" pos:end="55:41">(<argument pos:start="55:39" pos:end="55:40"><expr pos:start="55:39" pos:end="55:40"><name pos:start="55:39" pos:end="55:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="55:43" pos:end="55:44">&lt;&lt;</operator> <literal type="number" pos:start="55:46" pos:end="55:46">5</literal></expr>;</expr_stmt>   <comment type="line" pos:start="55:51" pos:end="55:73">// constraint_set5_flag</comment>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:13">skip_bits</name><argument_list pos:start="57:14" pos:end="57:20">(<argument pos:start="57:15" pos:end="57:16"><expr pos:start="57:15" pos:end="57:16"><name pos:start="57:15" pos:end="57:16">gb</name></expr></argument>, <argument pos:start="57:19" pos:end="57:19"><expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="line" pos:start="57:51" pos:end="57:72">// reserved_zero_2bits</comment>

    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:13">level_idc</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:24">get_bits</name><argument_list pos:start="59:25" pos:end="59:31">(<argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">gb</name></expr></argument>, <argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:10">sps_id</name>    <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:32">get_ue_golomb_31</name><argument_list pos:start="61:33" pos:end="61:36">(<argument pos:start="61:34" pos:end="61:35"><expr pos:start="61:34" pos:end="61:35"><name pos:start="61:34" pos:end="61:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:32">(<expr pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:14">sps_id</name> <operator pos:start="65:16" pos:end="65:17">&gt;=</operator> <name pos:start="65:19" pos:end="65:31">MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="65:34" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:72"><expr pos:start="67:9" pos:end="67:71"><call pos:start="67:9" pos:end="67:71"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:71">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="67:62"><expr pos:start="67:37" pos:end="67:62"><literal type="string" pos:start="67:37" pos:end="67:62">"sps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="67:65" pos:end="67:70"><expr pos:start="67:65" pos:end="67:70"><name pos:start="67:65" pos:end="67:70">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:7">sps</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:15">sps_id</name></name>               <operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:38">sps_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:7">sps</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:27">time_offset_length</name></name>   <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:34">24</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:7">sps</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:20">profile_idc</name></name>          <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:43">profile_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:7">sps</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:29">constraint_set_flags</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <name pos:start="81:33" pos:end="81:52">constraint_set_flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:42"><expr pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:7">sps</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:18">level_idc</name></name>            <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:41">level_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:7">sps</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:19">full_range</name></name>           <operator pos:start="85:31" pos:end="85:31">=</operator> <operator pos:start="85:33" pos:end="85:33">-</operator><literal type="number" pos:start="85:34" pos:end="85:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:67"><expr pos:start="89:5" pos:end="89:66"><call pos:start="89:5" pos:end="89:66"><name pos:start="89:5" pos:end="89:10">memset</name><argument_list pos:start="89:11" pos:end="89:66">(<argument pos:start="89:12" pos:end="89:31"><expr pos:start="89:12" pos:end="89:31"><name pos:start="89:12" pos:end="89:31"><name pos:start="89:12" pos:end="89:14">sps</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:31">scaling_matrix4</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:35"><expr pos:start="89:34" pos:end="89:35"><literal type="number" pos:start="89:34" pos:end="89:35">16</literal></expr></argument>, <argument pos:start="89:38" pos:end="89:65"><expr pos:start="89:38" pos:end="89:65"><sizeof pos:start="89:38" pos:end="89:65">sizeof<argument_list pos:start="89:44" pos:end="89:65">(<argument pos:start="89:45" pos:end="89:64"><expr pos:start="89:45" pos:end="89:64"><name pos:start="89:45" pos:end="89:64"><name pos:start="89:45" pos:end="89:47">sps</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:64">scaling_matrix4</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:67"><expr pos:start="91:5" pos:end="91:66"><call pos:start="91:5" pos:end="91:66"><name pos:start="91:5" pos:end="91:10">memset</name><argument_list pos:start="91:11" pos:end="91:66">(<argument pos:start="91:12" pos:end="91:31"><expr pos:start="91:12" pos:end="91:31"><name pos:start="91:12" pos:end="91:31"><name pos:start="91:12" pos:end="91:14">sps</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:31">scaling_matrix8</name></name></expr></argument>, <argument pos:start="91:34" pos:end="91:35"><expr pos:start="91:34" pos:end="91:35"><literal type="number" pos:start="91:34" pos:end="91:35">16</literal></expr></argument>, <argument pos:start="91:38" pos:end="91:65"><expr pos:start="91:38" pos:end="91:65"><sizeof pos:start="91:38" pos:end="91:65">sizeof<argument_list pos:start="91:44" pos:end="91:65">(<argument pos:start="91:45" pos:end="91:64"><expr pos:start="91:45" pos:end="91:64"><name pos:start="91:45" pos:end="91:64"><name pos:start="91:45" pos:end="91:47">sps</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:64">scaling_matrix8</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:36"><expr pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:7">sps</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:31">scaling_matrix_present</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:19"><name pos:start="95:5" pos:end="95:7">sps</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:19">colorspace</name></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <literal type="number" pos:start="95:23" pos:end="95:23">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="95:26" pos:end="95:48">//AVCOL_SPC_UNSPECIFIED</comment>



    <if_stmt pos:start="99:5" pos:end="185:5"><if pos:start="99:5" pos:end="177:5">if <condition pos:start="99:8" pos:end="119:32">(<expr pos:start="99:9" pos:end="119:31"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:11">sps</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:24">profile_idc</name></name> <operator pos:start="99:26" pos:end="99:27">==</operator> <literal type="number" pos:start="99:29" pos:end="99:31">100</literal> <operator pos:start="99:33" pos:end="99:34">||</operator>  <comment type="line" pos:start="99:37" pos:end="99:51">// High profile</comment>

        <name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:11">sps</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:24">profile_idc</name></name> <operator pos:start="101:26" pos:end="101:27">==</operator> <literal type="number" pos:start="101:29" pos:end="101:31">110</literal> <operator pos:start="101:33" pos:end="101:34">||</operator>  <comment type="line" pos:start="101:37" pos:end="101:53">// High10 profile</comment>

        <name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:11">sps</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:24">profile_idc</name></name> <operator pos:start="103:26" pos:end="103:27">==</operator> <literal type="number" pos:start="103:29" pos:end="103:31">122</literal> <operator pos:start="103:33" pos:end="103:34">||</operator>  <comment type="line" pos:start="103:37" pos:end="103:54">// High422 profile</comment>

        <name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:11">sps</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:24">profile_idc</name></name> <operator pos:start="105:26" pos:end="105:27">==</operator> <literal type="number" pos:start="105:29" pos:end="105:31">244</literal> <operator pos:start="105:33" pos:end="105:34">||</operator>  <comment type="line" pos:start="105:37" pos:end="105:65">// High444 Predictive profile</comment>

        <name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:11">sps</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:24">profile_idc</name></name> <operator pos:start="107:26" pos:end="107:27">==</operator>  <literal type="number" pos:start="107:30" pos:end="107:31">44</literal> <operator pos:start="107:33" pos:end="107:34">||</operator>  <comment type="line" pos:start="107:37" pos:end="107:55">// Cavlc444 profile</comment>

        <name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:11">sps</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:24">profile_idc</name></name> <operator pos:start="109:26" pos:end="109:27">==</operator>  <literal type="number" pos:start="109:30" pos:end="109:31">83</literal> <operator pos:start="109:33" pos:end="109:34">||</operator>  <comment type="line" pos:start="109:37" pos:end="109:78">// Scalable Constrained High profile (SVC)</comment>

        <name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:11">sps</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:24">profile_idc</name></name> <operator pos:start="111:26" pos:end="111:27">==</operator>  <literal type="number" pos:start="111:30" pos:end="111:31">86</literal> <operator pos:start="111:33" pos:end="111:34">||</operator>  <comment type="line" pos:start="111:37" pos:end="111:72">// Scalable High Intra profile (SVC)</comment>

        <name pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:11">sps</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:24">profile_idc</name></name> <operator pos:start="113:26" pos:end="113:27">==</operator> <literal type="number" pos:start="113:29" pos:end="113:31">118</literal> <operator pos:start="113:33" pos:end="113:34">||</operator>  <comment type="line" pos:start="113:37" pos:end="113:64">// Stereo High profile (MVC)</comment>

        <name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:11">sps</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:24">profile_idc</name></name> <operator pos:start="115:26" pos:end="115:27">==</operator> <literal type="number" pos:start="115:29" pos:end="115:31">128</literal> <operator pos:start="115:33" pos:end="115:34">||</operator>  <comment type="line" pos:start="115:37" pos:end="115:67">// Multiview High profile (MVC)</comment>

        <name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:11">sps</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:24">profile_idc</name></name> <operator pos:start="117:26" pos:end="117:27">==</operator> <literal type="number" pos:start="117:29" pos:end="117:31">138</literal> <operator pos:start="117:33" pos:end="117:34">||</operator>  <comment type="line" pos:start="117:37" pos:end="117:74">// Multiview Depth High profile (MVCD)</comment>

        <name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:11">sps</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:24">profile_idc</name></name> <operator pos:start="119:26" pos:end="119:27">==</operator> <literal type="number" pos:start="119:29" pos:end="119:31">144</literal></expr>)</condition> <block pos:start="119:34" pos:end="177:5">{<block_content pos:start="121:9" pos:end="175:76">  <comment type="line" pos:start="119:37" pos:end="119:58">// old High444 profile</comment>

        <expr_stmt pos:start="121:9" pos:end="121:54"><expr pos:start="121:9" pos:end="121:53"><name pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:11">sps</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:30">chroma_format_idc</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <call pos:start="121:34" pos:end="121:53"><name pos:start="121:34" pos:end="121:49">get_ue_golomb_31</name><argument_list pos:start="121:50" pos:end="121:53">(<argument pos:start="121:51" pos:end="121:52"><expr pos:start="121:51" pos:end="121:52"><name pos:start="121:51" pos:end="121:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="143:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:40">(<expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:15">sps</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:34">chroma_format_idc</name></name> <operator pos:start="123:36" pos:end="123:36">&gt;</operator> <literal type="number" pos:start="123:38" pos:end="123:39">3U</literal></expr>)</condition> <block pos:start="123:42" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:22">

            <expr_stmt pos:start="125:13" pos:end="127:58"><expr pos:start="125:13" pos:end="127:57"><call pos:start="125:13" pos:end="127:57"><name pos:start="125:13" pos:end="125:33">avpriv_request_sample</name><argument_list pos:start="125:34" pos:end="127:57">(<argument pos:start="125:35" pos:end="125:39"><expr pos:start="125:35" pos:end="125:39"><name pos:start="125:35" pos:end="125:39">avctx</name></expr></argument>, <argument pos:start="125:42" pos:end="125:63"><expr pos:start="125:42" pos:end="125:63"><literal type="string" pos:start="125:42" pos:end="125:63">"chroma_format_idc %u"</literal></expr></argument>,

                                  <argument pos:start="127:35" pos:end="127:56"><expr pos:start="127:35" pos:end="127:56"><name pos:start="127:35" pos:end="127:56"><name pos:start="127:35" pos:end="127:37">sps</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:56">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="129:13" pos:end="129:22">goto <name pos:start="129:18" pos:end="129:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="131:11" pos:end="143:9">else if <condition pos:start="131:19" pos:end="131:47">(<expr pos:start="131:20" pos:end="131:46"><name pos:start="131:20" pos:end="131:41"><name pos:start="131:20" pos:end="131:22">sps</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:41">chroma_format_idc</name></name> <operator pos:start="131:43" pos:end="131:44">==</operator> <literal type="number" pos:start="131:46" pos:end="131:46">3</literal></expr>)</condition> <block pos:start="131:49" pos:end="143:9">{<block_content pos:start="133:13" pos:end="141:13">

            <expr_stmt pos:start="133:13" pos:end="133:63"><expr pos:start="133:13" pos:end="133:62"><name pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:15">sps</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:46">residual_color_transform_flag</name></name> <operator pos:start="133:48" pos:end="133:48">=</operator> <call pos:start="133:50" pos:end="133:62"><name pos:start="133:50" pos:end="133:58">get_bits1</name><argument_list pos:start="133:59" pos:end="133:62">(<argument pos:start="133:60" pos:end="133:61"><expr pos:start="133:60" pos:end="133:61"><name pos:start="133:60" pos:end="133:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="141:13"><if pos:start="135:13" pos:end="141:13">if <condition pos:start="135:16" pos:end="135:51">(<expr pos:start="135:17" pos:end="135:50"><name pos:start="135:17" pos:end="135:50"><name pos:start="135:17" pos:end="135:19">sps</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:50">residual_color_transform_flag</name></name></expr>)</condition> <block pos:start="135:53" pos:end="141:13">{<block_content pos:start="137:17" pos:end="139:26">

                <expr_stmt pos:start="137:17" pos:end="137:89"><expr pos:start="137:17" pos:end="137:88"><call pos:start="137:17" pos:end="137:88"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:88">(<argument pos:start="137:24" pos:end="137:28"><expr pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:28">avctx</name></expr></argument>, <argument pos:start="137:31" pos:end="137:42"><expr pos:start="137:31" pos:end="137:42"><name pos:start="137:31" pos:end="137:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:45" pos:end="137:87"><expr pos:start="137:45" pos:end="137:87"><literal type="string" pos:start="137:45" pos:end="137:87">"separate color planes are not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="139:17" pos:end="139:26">goto <name pos:start="139:22" pos:end="139:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:54"><expr pos:start="145:9" pos:end="145:53"><name pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:11">sps</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:27">bit_depth_luma</name></name>   <operator pos:start="145:31" pos:end="145:31">=</operator> <call pos:start="145:33" pos:end="145:49"><name pos:start="145:33" pos:end="145:45">get_ue_golomb</name><argument_list pos:start="145:46" pos:end="145:49">(<argument pos:start="145:47" pos:end="145:48"><expr pos:start="145:47" pos:end="145:48"><name pos:start="145:47" pos:end="145:48">gb</name></expr></argument>)</argument_list></call> <operator pos:start="145:51" pos:end="145:51">+</operator> <literal type="number" pos:start="145:53" pos:end="145:53">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:54"><expr pos:start="147:9" pos:end="147:53"><name pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:11">sps</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:29">bit_depth_chroma</name></name> <operator pos:start="147:31" pos:end="147:31">=</operator> <call pos:start="147:33" pos:end="147:49"><name pos:start="147:33" pos:end="147:45">get_ue_golomb</name><argument_list pos:start="147:46" pos:end="147:49">(<argument pos:start="147:47" pos:end="147:48"><expr pos:start="147:47" pos:end="147:48"><name pos:start="147:47" pos:end="147:48">gb</name></expr></argument>)</argument_list></call> <operator pos:start="147:51" pos:end="147:51">+</operator> <literal type="number" pos:start="147:53" pos:end="147:53">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="149:57">(<expr pos:start="149:13" pos:end="149:56"><name pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:15">sps</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:33">bit_depth_chroma</name></name> <operator pos:start="149:35" pos:end="149:36">!=</operator> <name pos:start="149:38" pos:end="149:56"><name pos:start="149:38" pos:end="149:40">sps</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:56">bit_depth_luma</name></name></expr>)</condition> <block pos:start="149:59" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:22">

            <expr_stmt pos:start="151:13" pos:end="153:73"><expr pos:start="151:13" pos:end="153:72"><call pos:start="151:13" pos:end="153:72"><name pos:start="151:13" pos:end="151:33">avpriv_request_sample</name><argument_list pos:start="151:34" pos:end="153:72">(<argument pos:start="151:35" pos:end="151:39"><expr pos:start="151:35" pos:end="151:39"><name pos:start="151:35" pos:end="151:39">avctx</name></expr></argument>,

                                  <argument pos:start="153:35" pos:end="153:71"><expr pos:start="153:35" pos:end="153:71"><literal type="string" pos:start="153:35" pos:end="153:71">"Different chroma and luma bit depth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:22">goto <name pos:start="155:18" pos:end="155:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="169:9"><if pos:start="159:9" pos:end="169:9">if <condition pos:start="159:12" pos:end="161:68">(<expr pos:start="159:13" pos:end="161:67"><name pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:15">sps</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:31">bit_depth_luma</name></name>   <operator pos:start="159:35" pos:end="159:35">&lt;</operator> <literal type="number" pos:start="159:37" pos:end="159:37">8</literal> <operator pos:start="159:39" pos:end="159:40">||</operator> <name pos:start="159:42" pos:end="159:60"><name pos:start="159:42" pos:end="159:44">sps</name><operator pos:start="159:45" pos:end="159:46">-&gt;</operator><name pos:start="159:47" pos:end="159:60">bit_depth_luma</name></name>   <operator pos:start="159:64" pos:end="159:64">&gt;</operator> <literal type="number" pos:start="159:66" pos:end="159:67">14</literal> <operator pos:start="159:69" pos:end="159:70">||</operator>

            <name pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:15">sps</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:33">bit_depth_chroma</name></name> <operator pos:start="161:35" pos:end="161:35">&lt;</operator> <literal type="number" pos:start="161:37" pos:end="161:37">8</literal> <operator pos:start="161:39" pos:end="161:40">||</operator> <name pos:start="161:42" pos:end="161:62"><name pos:start="161:42" pos:end="161:44">sps</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:62">bit_depth_chroma</name></name> <operator pos:start="161:64" pos:end="161:64">&gt;</operator> <literal type="number" pos:start="161:66" pos:end="161:67">14</literal></expr>)</condition> <block pos:start="161:70" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:22">

            <expr_stmt pos:start="163:13" pos:end="165:63"><expr pos:start="163:13" pos:end="165:62"><call pos:start="163:13" pos:end="165:62"><name pos:start="163:13" pos:end="163:18">av_log</name><argument_list pos:start="163:19" pos:end="165:62">(<argument pos:start="163:20" pos:end="163:24"><expr pos:start="163:20" pos:end="163:24"><name pos:start="163:20" pos:end="163:24">avctx</name></expr></argument>, <argument pos:start="163:27" pos:end="163:38"><expr pos:start="163:27" pos:end="163:38"><name pos:start="163:27" pos:end="163:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:41" pos:end="163:76"><expr pos:start="163:41" pos:end="163:76"><literal type="string" pos:start="163:41" pos:end="163:76">"illegal bit depth value (%d, %d)\n"</literal></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:38"><expr pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:22">sps</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:38">bit_depth_luma</name></name></expr></argument>, <argument pos:start="165:41" pos:end="165:61"><expr pos:start="165:41" pos:end="165:61"><name pos:start="165:41" pos:end="165:61"><name pos:start="165:41" pos:end="165:43">sps</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:61">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="167:13" pos:end="167:22">goto <name pos:start="167:18" pos:end="167:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:46"><expr pos:start="171:9" pos:end="171:45"><name pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:11">sps</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:29">transform_bypass</name></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <call pos:start="171:33" pos:end="171:45"><name pos:start="171:33" pos:end="171:41">get_bits1</name><argument_list pos:start="171:42" pos:end="171:45">(<argument pos:start="171:43" pos:end="171:44"><expr pos:start="171:43" pos:end="171:44"><name pos:start="171:43" pos:end="171:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="175:76"><expr pos:start="173:9" pos:end="175:75"><name pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:11">sps</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:35">scaling_matrix_present</name></name> <operator pos:start="173:37" pos:end="173:38">|=</operator> <call pos:start="173:40" pos:end="175:75"><name pos:start="173:40" pos:end="173:62">decode_scaling_matrices</name><argument_list pos:start="173:63" pos:end="175:75">(<argument pos:start="173:64" pos:end="173:65"><expr pos:start="173:64" pos:end="173:65"><name pos:start="173:64" pos:end="173:65">gb</name></expr></argument>, <argument pos:start="173:68" pos:end="173:70"><expr pos:start="173:68" pos:end="173:70"><name pos:start="173:68" pos:end="173:70">sps</name></expr></argument>, <argument pos:start="173:73" pos:end="173:76"><expr pos:start="173:73" pos:end="173:76"><name pos:start="173:73" pos:end="173:76">NULL</name></expr></argument>, <argument pos:start="173:79" pos:end="173:79"><expr pos:start="173:79" pos:end="173:79"><literal type="number" pos:start="173:79" pos:end="173:79">1</literal></expr></argument>,

                                <argument pos:start="175:33" pos:end="175:52"><expr pos:start="175:33" pos:end="175:52"><name pos:start="175:33" pos:end="175:52"><name pos:start="175:33" pos:end="175:35">sps</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:52">scaling_matrix4</name></name></expr></argument>, <argument pos:start="175:55" pos:end="175:74"><expr pos:start="175:55" pos:end="175:74"><name pos:start="175:55" pos:end="175:74"><name pos:start="175:55" pos:end="175:57">sps</name><operator pos:start="175:58" pos:end="175:59">-&gt;</operator><name pos:start="175:60" pos:end="175:74">scaling_matrix8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="185:5">else <block pos:start="177:12" pos:end="185:5">{<block_content pos:start="179:9" pos:end="183:35">

        <expr_stmt pos:start="179:9" pos:end="179:35"><expr pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:11">sps</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:30">chroma_format_idc</name></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:35"><expr pos:start="181:9" pos:end="181:34"><name pos:start="181:9" pos:end="181:27"><name pos:start="181:9" pos:end="181:11">sps</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:27">bit_depth_luma</name></name>    <operator pos:start="181:32" pos:end="181:32">=</operator> <literal type="number" pos:start="181:34" pos:end="181:34">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:35"><expr pos:start="183:9" pos:end="183:34"><name pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:11">sps</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:29">bit_depth_chroma</name></name>  <operator pos:start="183:32" pos:end="183:32">=</operator> <literal type="number" pos:start="183:34" pos:end="183:34">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:50"><expr pos:start="189:5" pos:end="189:49"><name pos:start="189:5" pos:end="189:29">log2_max_frame_num_minus4</name> <operator pos:start="189:31" pos:end="189:31">=</operator> <call pos:start="189:33" pos:end="189:49"><name pos:start="189:33" pos:end="189:45">get_ue_golomb</name><argument_list pos:start="189:46" pos:end="189:49">(<argument pos:start="189:47" pos:end="189:48"><expr pos:start="189:47" pos:end="189:48"><name pos:start="189:47" pos:end="189:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="203:5"><if pos:start="191:5" pos:end="203:5">if <condition pos:start="191:8" pos:end="193:63">(<expr pos:start="191:9" pos:end="193:62"><name pos:start="191:9" pos:end="193:35"><name pos:start="191:9" pos:end="191:33">log2_max_frame_num_minus4</name> <argument_list type="generic" pos:start="191:35" pos:end="193:35">&lt; <argument pos:start="191:37" pos:end="193:33"><expr pos:start="191:37" pos:end="193:33"><name pos:start="191:37" pos:end="191:58">MIN_LOG2_MAX_FRAME_NUM</name> <operator pos:start="191:60" pos:end="191:60">-</operator> <literal type="number" pos:start="191:62" pos:end="191:62">4</literal> <operator pos:start="191:64" pos:end="191:65">||</operator>

        <name pos:start="193:9" pos:end="193:33">log2_max_frame_num_minus4</name></expr></argument> &gt;</argument_list></name> <name pos:start="193:37" pos:end="193:58">MAX_LOG2_MAX_FRAME_NUM</name> <operator pos:start="193:60" pos:end="193:60">-</operator> <literal type="number" pos:start="193:62" pos:end="193:62">4</literal></expr>)</condition> <block pos:start="193:65" pos:end="203:5">{<block_content pos:start="195:9" pos:end="201:18">

        <expr_stmt pos:start="195:9" pos:end="199:42"><expr pos:start="195:9" pos:end="199:41"><call pos:start="195:9" pos:end="199:41"><name pos:start="195:9" pos:end="195:14">av_log</name><argument_list pos:start="195:15" pos:end="199:41">(<argument pos:start="195:16" pos:end="195:20"><expr pos:start="195:16" pos:end="195:20"><name pos:start="195:16" pos:end="195:20">avctx</name></expr></argument>, <argument pos:start="195:23" pos:end="195:34"><expr pos:start="195:23" pos:end="195:34"><name pos:start="195:23" pos:end="195:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="197:16" pos:end="197:68"><expr pos:start="197:16" pos:end="197:68"><literal type="string" pos:start="197:16" pos:end="197:68">"log2_max_frame_num_minus4 out of range (0-12): %d\n"</literal></expr></argument>,

               <argument pos:start="199:16" pos:end="199:40"><expr pos:start="199:16" pos:end="199:40"><name pos:start="199:16" pos:end="199:40">log2_max_frame_num_minus4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="201:9" pos:end="201:18">goto <name pos:start="201:14" pos:end="201:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:60"><expr pos:start="205:5" pos:end="205:59"><name pos:start="205:5" pos:end="205:27"><name pos:start="205:5" pos:end="205:7">sps</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:27">log2_max_frame_num</name></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <name pos:start="205:31" pos:end="205:55">log2_max_frame_num_minus4</name> <operator pos:start="205:57" pos:end="205:57">+</operator> <literal type="number" pos:start="205:59" pos:end="205:59">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:41"><expr pos:start="209:5" pos:end="209:40"><name pos:start="209:5" pos:end="209:17"><name pos:start="209:5" pos:end="209:7">sps</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:17">poc_type</name></name> <operator pos:start="209:19" pos:end="209:19">=</operator> <call pos:start="209:21" pos:end="209:40"><name pos:start="209:21" pos:end="209:36">get_ue_golomb_31</name><argument_list pos:start="209:37" pos:end="209:40">(<argument pos:start="209:38" pos:end="209:39"><expr pos:start="209:38" pos:end="209:39"><name pos:start="209:38" pos:end="209:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="213:5" pos:end="263:5"><if pos:start="213:5" pos:end="227:5">if <condition pos:start="213:8" pos:end="213:27">(<expr pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:11">sps</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:21">poc_type</name></name> <operator pos:start="213:23" pos:end="213:24">==</operator> <literal type="number" pos:start="213:26" pos:end="213:26">0</literal></expr>)</condition> <block pos:start="213:29" pos:end="227:5">{<block_content pos:start="215:9" pos:end="225:38"> <comment type="line" pos:start="213:31" pos:end="213:46">// FIXME #define</comment>

        <decl_stmt pos:start="215:9" pos:end="215:39"><decl pos:start="215:9" pos:end="215:38"><type pos:start="215:9" pos:end="215:16"><name pos:start="215:9" pos:end="215:16">unsigned</name></type> <name pos:start="215:18" pos:end="215:18">t</name> <init pos:start="215:20" pos:end="215:38">= <expr pos:start="215:22" pos:end="215:38"><call pos:start="215:22" pos:end="215:38"><name pos:start="215:22" pos:end="215:34">get_ue_golomb</name><argument_list pos:start="215:35" pos:end="215:38">(<argument pos:start="215:36" pos:end="215:37"><expr pos:start="215:36" pos:end="215:37"><name pos:start="215:36" pos:end="215:37">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="217:9" pos:end="223:9"><if pos:start="217:9" pos:end="223:9">if <condition pos:start="217:12" pos:end="217:17">(<expr pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:13">t</name><operator pos:start="217:14" pos:end="217:14">&gt;</operator><literal type="number" pos:start="217:15" pos:end="217:16">12</literal></expr>)</condition> <block pos:start="217:19" pos:end="223:9">{<block_content pos:start="219:13" pos:end="221:22">

            <expr_stmt pos:start="219:13" pos:end="219:86"><expr pos:start="219:13" pos:end="219:85"><call pos:start="219:13" pos:end="219:85"><name pos:start="219:13" pos:end="219:18">av_log</name><argument_list pos:start="219:19" pos:end="219:85">(<argument pos:start="219:20" pos:end="219:24"><expr pos:start="219:20" pos:end="219:24"><name pos:start="219:20" pos:end="219:24">avctx</name></expr></argument>, <argument pos:start="219:27" pos:end="219:38"><expr pos:start="219:27" pos:end="219:38"><name pos:start="219:27" pos:end="219:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:41" pos:end="219:81"><expr pos:start="219:41" pos:end="219:81"><literal type="string" pos:start="219:41" pos:end="219:81">"log2_max_poc_lsb (%d) is out of range\n"</literal></expr></argument>, <argument pos:start="219:84" pos:end="219:84"><expr pos:start="219:84" pos:end="219:84"><name pos:start="219:84" pos:end="219:84">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="221:13" pos:end="221:22">goto <name pos:start="221:18" pos:end="221:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:38"><expr pos:start="225:9" pos:end="225:37"><name pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:11">sps</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:29">log2_max_poc_lsb</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <name pos:start="225:33" pos:end="225:33">t</name> <operator pos:start="225:35" pos:end="225:35">+</operator> <literal type="number" pos:start="225:37" pos:end="225:37">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="227:7" pos:end="257:5">else if <condition pos:start="227:15" pos:end="227:34">(<expr pos:start="227:16" pos:end="227:33"><name pos:start="227:16" pos:end="227:28"><name pos:start="227:16" pos:end="227:18">sps</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:28">poc_type</name></name> <operator pos:start="227:30" pos:end="227:31">==</operator> <literal type="number" pos:start="227:33" pos:end="227:33">1</literal></expr>)</condition> <block pos:start="227:36" pos:end="257:5">{<block_content pos:start="229:9" pos:end="255:61"> <comment type="line" pos:start="227:38" pos:end="227:53">// FIXME #define</comment>

        <expr_stmt pos:start="229:9" pos:end="229:62"><expr pos:start="229:9" pos:end="229:61"><name pos:start="229:9" pos:end="229:45"><name pos:start="229:9" pos:end="229:11">sps</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:45">delta_pic_order_always_zero_flag</name></name> <operator pos:start="229:47" pos:end="229:47">=</operator> <call pos:start="229:49" pos:end="229:61"><name pos:start="229:49" pos:end="229:57">get_bits1</name><argument_list pos:start="229:58" pos:end="229:61">(<argument pos:start="229:59" pos:end="229:60"><expr pos:start="229:59" pos:end="229:60"><name pos:start="229:59" pos:end="229:60">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:66"><expr pos:start="231:9" pos:end="231:65"><name pos:start="231:9" pos:end="231:35"><name pos:start="231:9" pos:end="231:11">sps</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:35">offset_for_non_ref_pic</name></name>           <operator pos:start="231:47" pos:end="231:47">=</operator> <call pos:start="231:49" pos:end="231:65"><name pos:start="231:49" pos:end="231:61">get_se_golomb</name><argument_list pos:start="231:62" pos:end="231:65">(<argument pos:start="231:63" pos:end="231:64"><expr pos:start="231:63" pos:end="231:64"><name pos:start="231:63" pos:end="231:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:66"><expr pos:start="233:9" pos:end="233:65"><name pos:start="233:9" pos:end="233:43"><name pos:start="233:9" pos:end="233:11">sps</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:43">offset_for_top_to_bottom_field</name></name>   <operator pos:start="233:47" pos:end="233:47">=</operator> <call pos:start="233:49" pos:end="233:65"><name pos:start="233:49" pos:end="233:61">get_se_golomb</name><argument_list pos:start="233:62" pos:end="233:65">(<argument pos:start="233:63" pos:end="233:64"><expr pos:start="233:63" pos:end="233:64"><name pos:start="233:63" pos:end="233:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:66"><expr pos:start="235:9" pos:end="235:65"><name pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:11">sps</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:29">poc_cycle_length</name></name>                 <operator pos:start="235:47" pos:end="235:47">=</operator> <call pos:start="235:49" pos:end="235:65"><name pos:start="235:49" pos:end="235:61">get_ue_golomb</name><argument_list pos:start="235:62" pos:end="235:65">(<argument pos:start="235:63" pos:end="235:64"><expr pos:start="235:63" pos:end="235:64"><name pos:start="235:63" pos:end="235:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="239:9" pos:end="249:9"><if pos:start="239:9" pos:end="249:9">if <condition pos:start="239:12" pos:end="241:54">(<expr pos:start="239:13" pos:end="241:53"><operator pos:start="239:13" pos:end="239:13">(</operator><name pos:start="239:14" pos:end="239:21">unsigned</name><operator pos:start="239:22" pos:end="239:22">)</operator><name pos:start="239:23" pos:end="239:43"><name pos:start="239:23" pos:end="239:25">sps</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:43">poc_cycle_length</name></name> <operator pos:start="239:45" pos:end="239:46">&gt;=</operator>

            <call pos:start="241:13" pos:end="241:53"><name pos:start="241:13" pos:end="241:26">FF_ARRAY_ELEMS</name><argument_list pos:start="241:27" pos:end="241:53">(<argument pos:start="241:28" pos:end="241:52"><expr pos:start="241:28" pos:end="241:52"><name pos:start="241:28" pos:end="241:52"><name pos:start="241:28" pos:end="241:30">sps</name><operator pos:start="241:31" pos:end="241:32">-&gt;</operator><name pos:start="241:33" pos:end="241:52">offset_for_ref_frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="241:56" pos:end="249:9">{<block_content pos:start="243:13" pos:end="247:22">

            <expr_stmt pos:start="243:13" pos:end="245:76"><expr pos:start="243:13" pos:end="245:75"><call pos:start="243:13" pos:end="245:75"><name pos:start="243:13" pos:end="243:18">av_log</name><argument_list pos:start="243:19" pos:end="245:75">(<argument pos:start="243:20" pos:end="243:24"><expr pos:start="243:20" pos:end="243:24"><name pos:start="243:20" pos:end="243:24">avctx</name></expr></argument>, <argument pos:start="243:27" pos:end="243:38"><expr pos:start="243:27" pos:end="243:38"><name pos:start="243:27" pos:end="243:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="245:20" pos:end="245:51"><expr pos:start="245:20" pos:end="245:51"><literal type="string" pos:start="245:20" pos:end="245:51">"poc_cycle_length overflow %d\n"</literal></expr></argument>, <argument pos:start="245:54" pos:end="245:74"><expr pos:start="245:54" pos:end="245:74"><name pos:start="245:54" pos:end="245:74"><name pos:start="245:54" pos:end="245:56">sps</name><operator pos:start="245:57" pos:end="245:58">-&gt;</operator><name pos:start="245:59" pos:end="245:74">poc_cycle_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="247:13" pos:end="247:22">goto <name pos:start="247:18" pos:end="247:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="253:9" pos:end="255:61">for <control pos:start="253:13" pos:end="253:51">(<init pos:start="253:14" pos:end="253:19"><expr pos:start="253:14" pos:end="253:18"><name pos:start="253:14" pos:end="253:14">i</name> <operator pos:start="253:16" pos:end="253:16">=</operator> <literal type="number" pos:start="253:18" pos:end="253:18">0</literal></expr>;</init> <condition pos:start="253:21" pos:end="253:46"><expr pos:start="253:21" pos:end="253:45"><name pos:start="253:21" pos:end="253:21">i</name> <operator pos:start="253:23" pos:end="253:23">&lt;</operator> <name pos:start="253:25" pos:end="253:45"><name pos:start="253:25" pos:end="253:27">sps</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:45">poc_cycle_length</name></name></expr>;</condition> <incr pos:start="253:48" pos:end="253:50"><expr pos:start="253:48" pos:end="253:50"><name pos:start="253:48" pos:end="253:48">i</name><operator pos:start="253:49" pos:end="253:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="255:13" pos:end="255:61"><block_content pos:start="255:13" pos:end="255:61">

            <expr_stmt pos:start="255:13" pos:end="255:61"><expr pos:start="255:13" pos:end="255:60"><name pos:start="255:13" pos:end="255:40"><name pos:start="255:13" pos:end="255:15">sps</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:37">offset_for_ref_frame</name><index pos:start="255:38" pos:end="255:40">[<expr pos:start="255:39" pos:end="255:39"><name pos:start="255:39" pos:end="255:39">i</name></expr>]</index></name> <operator pos:start="255:42" pos:end="255:42">=</operator> <call pos:start="255:44" pos:end="255:60"><name pos:start="255:44" pos:end="255:56">get_se_golomb</name><argument_list pos:start="255:57" pos:end="255:60">(<argument pos:start="255:58" pos:end="255:59"><expr pos:start="255:58" pos:end="255:59"><name pos:start="255:58" pos:end="255:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="257:7" pos:end="263:5">else if <condition pos:start="257:15" pos:end="257:34">(<expr pos:start="257:16" pos:end="257:33"><name pos:start="257:16" pos:end="257:28"><name pos:start="257:16" pos:end="257:18">sps</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:28">poc_type</name></name> <operator pos:start="257:30" pos:end="257:31">!=</operator> <literal type="number" pos:start="257:33" pos:end="257:33">2</literal></expr>)</condition> <block pos:start="257:36" pos:end="263:5">{<block_content pos:start="259:9" pos:end="261:18">

        <expr_stmt pos:start="259:9" pos:end="259:76"><expr pos:start="259:9" pos:end="259:75"><call pos:start="259:9" pos:end="259:75"><name pos:start="259:9" pos:end="259:14">av_log</name><argument_list pos:start="259:15" pos:end="259:75">(<argument pos:start="259:16" pos:end="259:20"><expr pos:start="259:16" pos:end="259:20"><name pos:start="259:16" pos:end="259:20">avctx</name></expr></argument>, <argument pos:start="259:23" pos:end="259:34"><expr pos:start="259:23" pos:end="259:34"><name pos:start="259:23" pos:end="259:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:37" pos:end="259:59"><expr pos:start="259:37" pos:end="259:59"><literal type="string" pos:start="259:37" pos:end="259:59">"illegal POC type %d\n"</literal></expr></argument>, <argument pos:start="259:62" pos:end="259:74"><expr pos:start="259:62" pos:end="259:74"><name pos:start="259:62" pos:end="259:74"><name pos:start="259:62" pos:end="259:64">sps</name><operator pos:start="259:65" pos:end="259:66">-&gt;</operator><name pos:start="259:67" pos:end="259:74">poc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="261:9" pos:end="261:18">goto <name pos:start="261:14" pos:end="261:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="267:5" pos:end="267:48"><expr pos:start="267:5" pos:end="267:47"><name pos:start="267:5" pos:end="267:24"><name pos:start="267:5" pos:end="267:7">sps</name><operator pos:start="267:8" pos:end="267:9">-&gt;</operator><name pos:start="267:10" pos:end="267:24">ref_frame_count</name></name> <operator pos:start="267:26" pos:end="267:26">=</operator> <call pos:start="267:28" pos:end="267:47"><name pos:start="267:28" pos:end="267:43">get_ue_golomb_31</name><argument_list pos:start="267:44" pos:end="267:47">(<argument pos:start="267:45" pos:end="267:46"><expr pos:start="267:45" pos:end="267:46"><name pos:start="267:45" pos:end="267:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="269:5" pos:end="271:62"><if pos:start="269:5" pos:end="271:62">if <condition pos:start="269:8" pos:end="269:54">(<expr pos:start="269:9" pos:end="269:53"><name pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:13">avctx</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:24">codec_tag</name></name> <operator pos:start="269:26" pos:end="269:27">==</operator> <call pos:start="269:29" pos:end="269:53"><name pos:start="269:29" pos:end="269:33">MKTAG</name><argument_list pos:start="269:34" pos:end="269:53">(<argument pos:start="269:35" pos:end="269:37"><expr pos:start="269:35" pos:end="269:37"><literal type="char" pos:start="269:35" pos:end="269:37">'S'</literal></expr></argument>, <argument pos:start="269:40" pos:end="269:42"><expr pos:start="269:40" pos:end="269:42"><literal type="char" pos:start="269:40" pos:end="269:42">'M'</literal></expr></argument>, <argument pos:start="269:45" pos:end="269:47"><expr pos:start="269:45" pos:end="269:47"><literal type="char" pos:start="269:45" pos:end="269:47">'V'</literal></expr></argument>, <argument pos:start="269:50" pos:end="269:52"><expr pos:start="269:50" pos:end="269:52"><literal type="char" pos:start="269:50" pos:end="269:52">'2'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="271:9" pos:end="271:62"><block_content pos:start="271:9" pos:end="271:62">

        <expr_stmt pos:start="271:9" pos:end="271:62"><expr pos:start="271:9" pos:end="271:61"><name pos:start="271:9" pos:end="271:28"><name pos:start="271:9" pos:end="271:11">sps</name><operator pos:start="271:12" pos:end="271:13">-&gt;</operator><name pos:start="271:14" pos:end="271:28">ref_frame_count</name></name> <operator pos:start="271:30" pos:end="271:30">=</operator> <call pos:start="271:32" pos:end="271:61"><name pos:start="271:32" pos:end="271:36">FFMAX</name><argument_list pos:start="271:37" pos:end="271:61">(<argument pos:start="271:38" pos:end="271:38"><expr pos:start="271:38" pos:end="271:38"><literal type="number" pos:start="271:38" pos:end="271:38">2</literal></expr></argument>, <argument pos:start="271:41" pos:end="271:60"><expr pos:start="271:41" pos:end="271:60"><name pos:start="271:41" pos:end="271:60"><name pos:start="271:41" pos:end="271:43">sps</name><operator pos:start="271:44" pos:end="271:45">-&gt;</operator><name pos:start="271:46" pos:end="271:60">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="273:5" pos:end="283:5"><if pos:start="273:5" pos:end="283:5">if <condition pos:start="273:8" pos:end="275:35">(<expr pos:start="273:9" pos:end="275:34"><name pos:start="273:9" pos:end="273:28"><name pos:start="273:9" pos:end="273:11">sps</name><operator pos:start="273:12" pos:end="273:13">-&gt;</operator><name pos:start="273:14" pos:end="273:28">ref_frame_count</name></name> <operator pos:start="273:30" pos:end="273:30">&gt;</operator> <name pos:start="273:32" pos:end="273:53">H264_MAX_PICTURE_COUNT</name> <operator pos:start="273:55" pos:end="273:55">-</operator> <literal type="number" pos:start="273:57" pos:end="273:57">2</literal> <operator pos:start="273:59" pos:end="273:60">||</operator>

        <name pos:start="275:9" pos:end="275:28"><name pos:start="275:9" pos:end="275:11">sps</name><operator pos:start="275:12" pos:end="275:13">-&gt;</operator><name pos:start="275:14" pos:end="275:28">ref_frame_count</name></name> <operator pos:start="275:30" pos:end="275:30">&gt;</operator> <literal type="number" pos:start="275:32" pos:end="275:34">16U</literal></expr>)</condition> <block pos:start="275:37" pos:end="283:5">{<block_content pos:start="277:9" pos:end="281:18">

        <expr_stmt pos:start="277:9" pos:end="279:71"><expr pos:start="277:9" pos:end="279:70"><call pos:start="277:9" pos:end="279:70"><name pos:start="277:9" pos:end="277:14">av_log</name><argument_list pos:start="277:15" pos:end="279:70">(<argument pos:start="277:16" pos:end="277:20"><expr pos:start="277:16" pos:end="277:20"><name pos:start="277:16" pos:end="277:20">avctx</name></expr></argument>, <argument pos:start="277:23" pos:end="277:34"><expr pos:start="277:23" pos:end="277:34"><name pos:start="277:23" pos:end="277:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="279:16" pos:end="279:47"><expr pos:start="279:16" pos:end="279:47"><literal type="string" pos:start="279:16" pos:end="279:47">"too many reference frames %d\n"</literal></expr></argument>, <argument pos:start="279:50" pos:end="279:69"><expr pos:start="279:50" pos:end="279:69"><name pos:start="279:50" pos:end="279:69"><name pos:start="279:50" pos:end="279:52">sps</name><operator pos:start="279:53" pos:end="279:54">-&gt;</operator><name pos:start="279:55" pos:end="279:69">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="281:9" pos:end="281:18">goto <name pos:start="281:14" pos:end="281:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:56"><expr pos:start="285:5" pos:end="285:55"><name pos:start="285:5" pos:end="285:39"><name pos:start="285:5" pos:end="285:7">sps</name><operator pos:start="285:8" pos:end="285:9">-&gt;</operator><name pos:start="285:10" pos:end="285:39">gaps_in_frame_num_allowed_flag</name></name> <operator pos:start="285:41" pos:end="285:41">=</operator> <call pos:start="285:43" pos:end="285:55"><name pos:start="285:43" pos:end="285:51">get_bits1</name><argument_list pos:start="285:52" pos:end="285:55">(<argument pos:start="285:53" pos:end="285:54"><expr pos:start="285:53" pos:end="285:54"><name pos:start="285:53" pos:end="285:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:64"><expr pos:start="287:5" pos:end="287:63"><name pos:start="287:5" pos:end="287:17"><name pos:start="287:5" pos:end="287:7">sps</name><operator pos:start="287:8" pos:end="287:9">-&gt;</operator><name pos:start="287:10" pos:end="287:17">mb_width</name></name>                       <operator pos:start="287:41" pos:end="287:41">=</operator> <call pos:start="287:43" pos:end="287:59"><name pos:start="287:43" pos:end="287:55">get_ue_golomb</name><argument_list pos:start="287:56" pos:end="287:59">(<argument pos:start="287:57" pos:end="287:58"><expr pos:start="287:57" pos:end="287:58"><name pos:start="287:57" pos:end="287:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="287:61" pos:end="287:61">+</operator> <literal type="number" pos:start="287:63" pos:end="287:63">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:64"><expr pos:start="289:5" pos:end="289:63"><name pos:start="289:5" pos:end="289:18"><name pos:start="289:5" pos:end="289:7">sps</name><operator pos:start="289:8" pos:end="289:9">-&gt;</operator><name pos:start="289:10" pos:end="289:18">mb_height</name></name>                      <operator pos:start="289:41" pos:end="289:41">=</operator> <call pos:start="289:43" pos:end="289:59"><name pos:start="289:43" pos:end="289:55">get_ue_golomb</name><argument_list pos:start="289:56" pos:end="289:59">(<argument pos:start="289:57" pos:end="289:58"><expr pos:start="289:57" pos:end="289:58"><name pos:start="289:57" pos:end="289:58">gb</name></expr></argument>)</argument_list></call> <operator pos:start="289:61" pos:end="289:61">+</operator> <literal type="number" pos:start="289:63" pos:end="289:63">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="291:5" pos:end="303:5"><if pos:start="291:5" pos:end="303:5">if <condition pos:start="291:8" pos:end="297:59">(<expr pos:start="291:9" pos:end="297:58"><operator pos:start="291:9" pos:end="291:9">(</operator><name pos:start="291:10" pos:end="291:17">unsigned</name><operator pos:start="291:18" pos:end="291:18">)</operator><name pos:start="291:19" pos:end="291:31"><name pos:start="291:19" pos:end="291:21">sps</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:31">mb_width</name></name>  <operator pos:start="291:34" pos:end="291:35">&gt;=</operator> <name pos:start="291:37" pos:end="291:43">INT_MAX</name> <operator pos:start="291:45" pos:end="291:45">/</operator> <literal type="number" pos:start="291:47" pos:end="291:48">16</literal> <operator pos:start="291:50" pos:end="291:51">||</operator>

        <operator pos:start="293:9" pos:end="293:9">(</operator><name pos:start="293:10" pos:end="293:17">unsigned</name><operator pos:start="293:18" pos:end="293:18">)</operator><name pos:start="293:19" pos:end="293:32"><name pos:start="293:19" pos:end="293:21">sps</name><operator pos:start="293:22" pos:end="293:23">-&gt;</operator><name pos:start="293:24" pos:end="293:32">mb_height</name></name> <operator pos:start="293:34" pos:end="293:35">&gt;=</operator> <name pos:start="293:37" pos:end="293:43">INT_MAX</name> <operator pos:start="293:45" pos:end="293:45">/</operator> <literal type="number" pos:start="293:47" pos:end="293:48">16</literal> <operator pos:start="293:50" pos:end="293:51">||</operator>

        <call pos:start="295:9" pos:end="297:58"><name pos:start="295:9" pos:end="295:27">av_image_check_size</name><argument_list pos:start="295:28" pos:end="297:58">(<argument pos:start="295:29" pos:end="295:46"><expr pos:start="295:29" pos:end="295:46"><literal type="number" pos:start="295:29" pos:end="295:30">16</literal> <operator pos:start="295:32" pos:end="295:32">*</operator> <name pos:start="295:34" pos:end="295:46"><name pos:start="295:34" pos:end="295:36">sps</name><operator pos:start="295:37" pos:end="295:38">-&gt;</operator><name pos:start="295:39" pos:end="295:46">mb_width</name></name></expr></argument>,

                            <argument pos:start="297:29" pos:end="297:47"><expr pos:start="297:29" pos:end="297:47"><literal type="number" pos:start="297:29" pos:end="297:30">16</literal> <operator pos:start="297:32" pos:end="297:32">*</operator> <name pos:start="297:34" pos:end="297:47"><name pos:start="297:34" pos:end="297:36">sps</name><operator pos:start="297:37" pos:end="297:38">-&gt;</operator><name pos:start="297:39" pos:end="297:47">mb_height</name></name></expr></argument>, <argument pos:start="297:50" pos:end="297:50"><expr pos:start="297:50" pos:end="297:50"><literal type="number" pos:start="297:50" pos:end="297:50">0</literal></expr></argument>, <argument pos:start="297:53" pos:end="297:57"><expr pos:start="297:53" pos:end="297:57"><name pos:start="297:53" pos:end="297:57">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="297:61" pos:end="303:5">{<block_content pos:start="299:9" pos:end="301:18">

        <expr_stmt pos:start="299:9" pos:end="299:66"><expr pos:start="299:9" pos:end="299:65"><call pos:start="299:9" pos:end="299:65"><name pos:start="299:9" pos:end="299:14">av_log</name><argument_list pos:start="299:15" pos:end="299:65">(<argument pos:start="299:16" pos:end="299:20"><expr pos:start="299:16" pos:end="299:20"><name pos:start="299:16" pos:end="299:20">avctx</name></expr></argument>, <argument pos:start="299:23" pos:end="299:34"><expr pos:start="299:23" pos:end="299:34"><name pos:start="299:23" pos:end="299:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="299:37" pos:end="299:64"><expr pos:start="299:37" pos:end="299:64"><literal type="string" pos:start="299:37" pos:end="299:64">"mb_width/height overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="301:9" pos:end="301:18">goto <name pos:start="301:14" pos:end="301:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:45"><expr pos:start="307:5" pos:end="307:44"><name pos:start="307:5" pos:end="307:28"><name pos:start="307:5" pos:end="307:7">sps</name><operator pos:start="307:8" pos:end="307:9">-&gt;</operator><name pos:start="307:10" pos:end="307:28">frame_mbs_only_flag</name></name> <operator pos:start="307:30" pos:end="307:30">=</operator> <call pos:start="307:32" pos:end="307:44"><name pos:start="307:32" pos:end="307:40">get_bits1</name><argument_list pos:start="307:41" pos:end="307:44">(<argument pos:start="307:42" pos:end="307:43"><expr pos:start="307:42" pos:end="307:43"><name pos:start="307:42" pos:end="307:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="309:5" pos:end="315:24"><if pos:start="309:5" pos:end="311:36">if <condition pos:start="309:8" pos:end="309:34">(<expr pos:start="309:9" pos:end="309:33"><operator pos:start="309:9" pos:end="309:9">!</operator><name pos:start="309:10" pos:end="309:33"><name pos:start="309:10" pos:end="309:12">sps</name><operator pos:start="309:13" pos:end="309:14">-&gt;</operator><name pos:start="309:15" pos:end="309:33">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="311:9" pos:end="311:36"><block_content pos:start="311:9" pos:end="311:36">

        <expr_stmt pos:start="311:9" pos:end="311:36"><expr pos:start="311:9" pos:end="311:35"><name pos:start="311:9" pos:end="311:19"><name pos:start="311:9" pos:end="311:11">sps</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:19">mb_aff</name></name> <operator pos:start="311:21" pos:end="311:21">=</operator> <call pos:start="311:23" pos:end="311:35"><name pos:start="311:23" pos:end="311:31">get_bits1</name><argument_list pos:start="311:32" pos:end="311:35">(<argument pos:start="311:33" pos:end="311:34"><expr pos:start="311:33" pos:end="311:34"><name pos:start="311:33" pos:end="311:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="313:5" pos:end="315:24">else<block type="pseudo" pos:start="315:9" pos:end="315:24"><block_content pos:start="315:9" pos:end="315:24">

        <expr_stmt pos:start="315:9" pos:end="315:24"><expr pos:start="315:9" pos:end="315:23"><name pos:start="315:9" pos:end="315:19"><name pos:start="315:9" pos:end="315:11">sps</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:19">mb_aff</name></name> <operator pos:start="315:21" pos:end="315:21">=</operator> <literal type="number" pos:start="315:23" pos:end="315:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="319:5" pos:end="324:0"><expr pos:start="319:5" pos:end="319:50"><name pos:start="319:5" pos:end="319:34"><name pos:start="319:5" pos:end="319:7">sps</name><operator pos:start="319:8" pos:end="319:9">-&gt;</operator><name pos:start="319:10" pos:end="319:34">direct_8x8_inference_flag</name></name> <operator pos:start="319:36" pos:end="319:36">=</operator> <call pos:start="319:38" pos:end="319:50"><name pos:start="319:38" pos:end="319:46">get_bits1</name><argument_list pos:start="319:47" pos:end="319:50">(<argument pos:start="319:48" pos:end="319:49"><expr pos:start="319:48" pos:end="319:49"><name pos:start="319:48" pos:end="319:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="323:1" pos:end="323:23">#<cpp:directive pos:start="323:2" pos:end="323:7">ifndef</cpp:directive> <name pos:start="323:9" pos:end="323:23">ALLOW_INTERLACE</name></cpp:ifndef>

    <if_stmt pos:start="325:5" pos:end="332:0"><if pos:start="325:5" pos:end="332:0">if <condition pos:start="325:8" pos:end="325:20">(<expr pos:start="325:9" pos:end="325:19"><name pos:start="325:9" pos:end="325:19"><name pos:start="325:9" pos:end="325:11">sps</name><operator pos:start="325:12" pos:end="325:13">-&gt;</operator><name pos:start="325:14" pos:end="325:19">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="327:9" pos:end="332:0"><block_content pos:start="327:9" pos:end="332:0">

        <expr_stmt pos:start="327:9" pos:end="332:0"><expr pos:start="327:9" pos:end="329:74"><call pos:start="327:9" pos:end="329:74"><name pos:start="327:9" pos:end="327:14">av_log</name><argument_list pos:start="327:15" pos:end="329:74">(<argument pos:start="327:16" pos:end="327:20"><expr pos:start="327:16" pos:end="327:20"><name pos:start="327:16" pos:end="327:20">avctx</name></expr></argument>, <argument pos:start="327:23" pos:end="327:34"><expr pos:start="327:23" pos:end="327:34"><name pos:start="327:23" pos:end="327:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="329:16" pos:end="329:73"><expr pos:start="329:16" pos:end="329:73"><literal type="string" pos:start="329:16" pos:end="329:73">"MBAFF support not included; enable it at compile-time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="331:1" pos:end="331:6">#<cpp:directive pos:start="331:2" pos:end="331:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="333:5" pos:end="333:30"><expr pos:start="333:5" pos:end="333:29"><name pos:start="333:5" pos:end="333:13"><name pos:start="333:5" pos:end="333:7">sps</name><operator pos:start="333:8" pos:end="333:9">-&gt;</operator><name pos:start="333:10" pos:end="333:13">crop</name></name> <operator pos:start="333:15" pos:end="333:15">=</operator> <call pos:start="333:17" pos:end="333:29"><name pos:start="333:17" pos:end="333:25">get_bits1</name><argument_list pos:start="333:26" pos:end="333:29">(<argument pos:start="333:27" pos:end="333:28"><expr pos:start="333:27" pos:end="333:28"><name pos:start="333:27" pos:end="333:28">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="335:5" pos:end="445:5"><if pos:start="335:5" pos:end="433:5">if <condition pos:start="335:8" pos:end="335:18">(<expr pos:start="335:9" pos:end="335:17"><name pos:start="335:9" pos:end="335:17"><name pos:start="335:9" pos:end="335:11">sps</name><operator pos:start="335:12" pos:end="335:13">-&gt;</operator><name pos:start="335:14" pos:end="335:17">crop</name></name></expr>)</condition> <block pos:start="335:20" pos:end="433:5">{<block_content pos:start="337:9" pos:end="431:9">

        <decl_stmt pos:start="337:9" pos:end="337:53"><decl pos:start="337:9" pos:end="337:52"><type pos:start="337:9" pos:end="337:20"><name pos:start="337:9" pos:end="337:16">unsigned</name> <name pos:start="337:18" pos:end="337:20">int</name></type> <name pos:start="337:22" pos:end="337:30">crop_left</name>   <init pos:start="337:34" pos:end="337:52">= <expr pos:start="337:36" pos:end="337:52"><call pos:start="337:36" pos:end="337:52"><name pos:start="337:36" pos:end="337:48">get_ue_golomb</name><argument_list pos:start="337:49" pos:end="337:52">(<argument pos:start="337:50" pos:end="337:51"><expr pos:start="337:50" pos:end="337:51"><name pos:start="337:50" pos:end="337:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="339:9" pos:end="339:53"><decl pos:start="339:9" pos:end="339:52"><type pos:start="339:9" pos:end="339:20"><name pos:start="339:9" pos:end="339:16">unsigned</name> <name pos:start="339:18" pos:end="339:20">int</name></type> <name pos:start="339:22" pos:end="339:31">crop_right</name>  <init pos:start="339:34" pos:end="339:52">= <expr pos:start="339:36" pos:end="339:52"><call pos:start="339:36" pos:end="339:52"><name pos:start="339:36" pos:end="339:48">get_ue_golomb</name><argument_list pos:start="339:49" pos:end="339:52">(<argument pos:start="339:50" pos:end="339:51"><expr pos:start="339:50" pos:end="339:51"><name pos:start="339:50" pos:end="339:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="341:9" pos:end="341:53"><decl pos:start="341:9" pos:end="341:52"><type pos:start="341:9" pos:end="341:20"><name pos:start="341:9" pos:end="341:16">unsigned</name> <name pos:start="341:18" pos:end="341:20">int</name></type> <name pos:start="341:22" pos:end="341:29">crop_top</name>    <init pos:start="341:34" pos:end="341:52">= <expr pos:start="341:36" pos:end="341:52"><call pos:start="341:36" pos:end="341:52"><name pos:start="341:36" pos:end="341:48">get_ue_golomb</name><argument_list pos:start="341:49" pos:end="341:52">(<argument pos:start="341:50" pos:end="341:51"><expr pos:start="341:50" pos:end="341:51"><name pos:start="341:50" pos:end="341:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="343:9" pos:end="343:53"><decl pos:start="343:9" pos:end="343:52"><type pos:start="343:9" pos:end="343:20"><name pos:start="343:9" pos:end="343:16">unsigned</name> <name pos:start="343:18" pos:end="343:20">int</name></type> <name pos:start="343:22" pos:end="343:32">crop_bottom</name> <init pos:start="343:34" pos:end="343:52">= <expr pos:start="343:36" pos:end="343:52"><call pos:start="343:36" pos:end="343:52"><name pos:start="343:36" pos:end="343:48">get_ue_golomb</name><argument_list pos:start="343:49" pos:end="343:52">(<argument pos:start="343:50" pos:end="343:51"><expr pos:start="343:50" pos:end="343:51"><name pos:start="343:50" pos:end="343:51">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="345:9" pos:end="345:40"><decl pos:start="345:9" pos:end="345:39"><type pos:start="345:9" pos:end="345:11"><name pos:start="345:9" pos:end="345:11">int</name></type> <name pos:start="345:13" pos:end="345:17">width</name>  <init pos:start="345:20" pos:end="345:39">= <expr pos:start="345:22" pos:end="345:39"><literal type="number" pos:start="345:22" pos:end="345:23">16</literal> <operator pos:start="345:25" pos:end="345:25">*</operator> <name pos:start="345:27" pos:end="345:39"><name pos:start="345:27" pos:end="345:29">sps</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:39">mb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="347:9" pos:end="347:74"><decl pos:start="347:9" pos:end="347:73"><type pos:start="347:9" pos:end="347:11"><name pos:start="347:9" pos:end="347:11">int</name></type> <name pos:start="347:13" pos:end="347:18">height</name> <init pos:start="347:20" pos:end="347:73">= <expr pos:start="347:22" pos:end="347:73"><literal type="number" pos:start="347:22" pos:end="347:23">16</literal> <operator pos:start="347:25" pos:end="347:25">*</operator> <name pos:start="347:27" pos:end="347:40"><name pos:start="347:27" pos:end="347:29">sps</name><operator pos:start="347:30" pos:end="347:31">-&gt;</operator><name pos:start="347:32" pos:end="347:40">mb_height</name></name> <operator pos:start="347:42" pos:end="347:42">*</operator> <operator pos:start="347:44" pos:end="347:44">(</operator><literal type="number" pos:start="347:45" pos:end="347:47">2</literal> <operator pos:start="347:47" pos:end="347:47">-</operator> <name pos:start="347:49" pos:end="347:72"><name pos:start="347:49" pos:end="347:51">sps</name><operator pos:start="347:52" pos:end="347:53">-&gt;</operator><name pos:start="347:54" pos:end="347:72">frame_mbs_only_flag</name></name><operator pos:start="347:73" pos:end="347:73">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="351:9" pos:end="431:9"><if pos:start="351:9" pos:end="369:9">if <condition pos:start="351:12" pos:end="351:55">(<expr pos:start="351:13" pos:end="351:54"><name pos:start="351:13" pos:end="351:25"><name pos:start="351:13" pos:end="351:17">avctx</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:25">flags2</name></name> <operator pos:start="351:27" pos:end="351:27">&amp;</operator> <name pos:start="351:29" pos:end="351:54">AV_CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="351:57" pos:end="369:9">{<block_content pos:start="353:13" pos:end="367:33">

            <expr_stmt pos:start="353:13" pos:end="357:65"><expr pos:start="353:13" pos:end="357:64"><call pos:start="353:13" pos:end="357:64"><name pos:start="353:13" pos:end="353:18">av_log</name><argument_list pos:start="353:19" pos:end="357:64">(<argument pos:start="353:20" pos:end="353:24"><expr pos:start="353:20" pos:end="353:24"><name pos:start="353:20" pos:end="353:24">avctx</name></expr></argument>, <argument pos:start="353:27" pos:end="353:38"><expr pos:start="353:27" pos:end="353:38"><name pos:start="353:27" pos:end="353:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="353:41" pos:end="355:77"><expr pos:start="353:41" pos:end="355:77"><literal type="string" pos:start="353:41" pos:end="353:76">"discarding sps cropping, original "</literal>

                                           <literal type="string" pos:start="355:44" pos:end="355:77">"values are l:%d r:%d t:%d b:%d\n"</literal></expr></argument>,

                   <argument pos:start="357:20" pos:end="357:28"><expr pos:start="357:20" pos:end="357:28"><name pos:start="357:20" pos:end="357:28">crop_left</name></expr></argument>, <argument pos:start="357:31" pos:end="357:40"><expr pos:start="357:31" pos:end="357:40"><name pos:start="357:31" pos:end="357:40">crop_right</name></expr></argument>, <argument pos:start="357:43" pos:end="357:50"><expr pos:start="357:43" pos:end="357:50"><name pos:start="357:43" pos:end="357:50">crop_top</name></expr></argument>, <argument pos:start="357:53" pos:end="357:63"><expr pos:start="357:53" pos:end="357:63"><name pos:start="357:53" pos:end="357:63">crop_bottom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="361:13" pos:end="367:33"><expr pos:start="361:13" pos:end="367:32"><name pos:start="361:13" pos:end="361:26"><name pos:start="361:13" pos:end="361:15">sps</name><operator pos:start="361:16" pos:end="361:17">-&gt;</operator><name pos:start="361:18" pos:end="361:26">crop_left</name></name>   <operator pos:start="361:30" pos:end="361:30">=</operator>

            <name pos:start="363:13" pos:end="363:27"><name pos:start="363:13" pos:end="363:15">sps</name><operator pos:start="363:16" pos:end="363:17">-&gt;</operator><name pos:start="363:18" pos:end="363:27">crop_right</name></name>  <operator pos:start="363:30" pos:end="363:30">=</operator>

            <name pos:start="365:13" pos:end="365:25"><name pos:start="365:13" pos:end="365:15">sps</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:25">crop_top</name></name>    <operator pos:start="365:30" pos:end="365:30">=</operator>

            <name pos:start="367:13" pos:end="367:28"><name pos:start="367:13" pos:end="367:15">sps</name><operator pos:start="367:16" pos:end="367:17">-&gt;</operator><name pos:start="367:18" pos:end="367:28">crop_bottom</name></name> <operator pos:start="367:30" pos:end="367:30">=</operator> <literal type="number" pos:start="367:32" pos:end="367:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="369:11" pos:end="431:9">else <block pos:start="369:16" pos:end="431:9">{<block_content pos:start="371:13" pos:end="429:52">

            <decl_stmt pos:start="371:13" pos:end="371:63"><decl pos:start="371:13" pos:end="371:62"><type pos:start="371:13" pos:end="371:15"><name pos:start="371:13" pos:end="371:15">int</name></type> <name pos:start="371:17" pos:end="371:20">vsub</name>   <init pos:start="371:24" pos:end="371:62">= <expr pos:start="371:26" pos:end="371:62"><ternary pos:start="371:26" pos:end="371:62"><condition pos:start="371:26" pos:end="371:56"><expr pos:start="371:26" pos:end="371:54"><operator pos:start="371:26" pos:end="371:26">(</operator><name pos:start="371:27" pos:end="371:48"><name pos:start="371:27" pos:end="371:29">sps</name><operator pos:start="371:30" pos:end="371:31">-&gt;</operator><name pos:start="371:32" pos:end="371:48">chroma_format_idc</name></name> <operator pos:start="371:50" pos:end="371:51">==</operator> <literal type="number" pos:start="371:53" pos:end="371:53">1</literal><operator pos:start="371:54" pos:end="371:54">)</operator></expr> ?</condition><then pos:start="371:58" pos:end="371:58"> <expr pos:start="371:58" pos:end="371:58"><literal type="number" pos:start="371:58" pos:end="371:58">1</literal></expr> </then><else pos:start="371:60" pos:end="371:62">: <expr pos:start="371:62" pos:end="371:62"><literal type="number" pos:start="371:62" pos:end="371:62">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="373:13" pos:end="375:63"><decl pos:start="373:13" pos:end="375:62"><type pos:start="373:13" pos:end="373:15"><name pos:start="373:13" pos:end="373:15">int</name></type> <name pos:start="373:17" pos:end="373:20">hsub</name>   <init pos:start="373:24" pos:end="375:62">= <expr pos:start="373:26" pos:end="375:62"><ternary pos:start="373:26" pos:end="375:62"><condition pos:start="373:26" pos:end="375:56"><expr pos:start="373:26" pos:end="375:54"><operator pos:start="373:26" pos:end="373:26">(</operator><name pos:start="373:27" pos:end="373:48"><name pos:start="373:27" pos:end="373:29">sps</name><operator pos:start="373:30" pos:end="373:31">-&gt;</operator><name pos:start="373:32" pos:end="373:48">chroma_format_idc</name></name> <operator pos:start="373:50" pos:end="373:51">==</operator> <literal type="number" pos:start="373:53" pos:end="373:53">1</literal> <operator pos:start="373:55" pos:end="373:56">||</operator>

                          <name pos:start="375:27" pos:end="375:48"><name pos:start="375:27" pos:end="375:29">sps</name><operator pos:start="375:30" pos:end="375:31">-&gt;</operator><name pos:start="375:32" pos:end="375:48">chroma_format_idc</name></name> <operator pos:start="375:50" pos:end="375:51">==</operator> <literal type="number" pos:start="375:53" pos:end="375:53">2</literal><operator pos:start="375:54" pos:end="375:54">)</operator></expr> ?</condition><then pos:start="375:58" pos:end="375:58"> <expr pos:start="375:58" pos:end="375:58"><literal type="number" pos:start="375:58" pos:end="375:58">1</literal></expr> </then><else pos:start="375:60" pos:end="375:62">: <expr pos:start="375:62" pos:end="375:62"><literal type="number" pos:start="375:62" pos:end="375:62">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="377:13" pos:end="377:35"><decl pos:start="377:13" pos:end="377:34"><type pos:start="377:13" pos:end="377:15"><name pos:start="377:13" pos:end="377:15">int</name></type> <name pos:start="377:17" pos:end="377:22">step_x</name> <init pos:start="377:24" pos:end="377:34">= <expr pos:start="377:26" pos:end="377:34"><literal type="number" pos:start="377:26" pos:end="377:26">1</literal> <operator pos:start="377:28" pos:end="377:29">&lt;&lt;</operator> <name pos:start="377:31" pos:end="377:34">hsub</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="379:13" pos:end="379:64"><decl pos:start="379:13" pos:end="379:63"><type pos:start="379:13" pos:end="379:15"><name pos:start="379:13" pos:end="379:15">int</name></type> <name pos:start="379:17" pos:end="379:22">step_y</name> <init pos:start="379:24" pos:end="379:63">= <expr pos:start="379:26" pos:end="379:63"><operator pos:start="379:26" pos:end="379:26">(</operator><literal type="number" pos:start="379:27" pos:end="379:29">2</literal> <operator pos:start="379:29" pos:end="379:29">-</operator> <name pos:start="379:31" pos:end="379:54"><name pos:start="379:31" pos:end="379:33">sps</name><operator pos:start="379:34" pos:end="379:35">-&gt;</operator><name pos:start="379:36" pos:end="379:54">frame_mbs_only_flag</name></name><operator pos:start="379:55" pos:end="379:55">)</operator> <operator pos:start="379:57" pos:end="379:58">&lt;&lt;</operator> <name pos:start="379:60" pos:end="379:63">vsub</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="383:13" pos:end="397:13"><if pos:start="383:13" pos:end="397:13">if <condition pos:start="383:16" pos:end="385:58">(<expr pos:start="383:17" pos:end="385:57"><name pos:start="383:17" pos:end="383:25">crop_left</name> <operator pos:start="383:27" pos:end="383:27">&amp;</operator> <operator pos:start="383:29" pos:end="383:29">(</operator><literal type="number" pos:start="383:30" pos:end="383:33">0x1F</literal> <operator pos:start="383:35" pos:end="383:36">&gt;&gt;</operator> <operator pos:start="383:38" pos:end="383:38">(</operator><name pos:start="383:39" pos:end="383:57"><name pos:start="383:39" pos:end="383:41">sps</name><operator pos:start="383:42" pos:end="383:43">-&gt;</operator><name pos:start="383:44" pos:end="383:57">bit_depth_luma</name></name> <operator pos:start="383:59" pos:end="383:59">&gt;</operator> <literal type="number" pos:start="383:61" pos:end="383:61">8</literal><operator pos:start="383:62" pos:end="383:62">)</operator><operator pos:start="383:63" pos:end="383:63">)</operator> <operator pos:start="383:65" pos:end="383:66">&amp;&amp;</operator>

                <operator pos:start="385:17" pos:end="385:17">!</operator><operator pos:start="385:18" pos:end="385:18">(</operator><name pos:start="385:19" pos:end="385:30"><name pos:start="385:19" pos:end="385:23">avctx</name><operator pos:start="385:24" pos:end="385:25">-&gt;</operator><name pos:start="385:26" pos:end="385:30">flags</name></name> <operator pos:start="385:32" pos:end="385:32">&amp;</operator> <name pos:start="385:34" pos:end="385:56">AV_CODEC_FLAG_UNALIGNED</name><operator pos:start="385:57" pos:end="385:57">)</operator></expr>)</condition> <block pos:start="385:60" pos:end="397:13">{<block_content pos:start="387:17" pos:end="395:34">

                <expr_stmt pos:start="387:17" pos:end="387:66"><expr pos:start="387:17" pos:end="387:65"><name pos:start="387:17" pos:end="387:25">crop_left</name> <operator pos:start="387:27" pos:end="387:28">&amp;=</operator> <operator pos:start="387:30" pos:end="387:30">~</operator><operator pos:start="387:31" pos:end="387:31">(</operator><literal type="number" pos:start="387:32" pos:end="387:35">0x1F</literal> <operator pos:start="387:37" pos:end="387:38">&gt;&gt;</operator> <operator pos:start="387:40" pos:end="387:40">(</operator><name pos:start="387:41" pos:end="387:59"><name pos:start="387:41" pos:end="387:43">sps</name><operator pos:start="387:44" pos:end="387:45">-&gt;</operator><name pos:start="387:46" pos:end="387:59">bit_depth_luma</name></name> <operator pos:start="387:61" pos:end="387:61">&gt;</operator> <literal type="number" pos:start="387:63" pos:end="387:63">8</literal><operator pos:start="387:64" pos:end="387:64">)</operator><operator pos:start="387:65" pos:end="387:65">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="389:17" pos:end="395:34"><expr pos:start="389:17" pos:end="395:33"><call pos:start="389:17" pos:end="395:33"><name pos:start="389:17" pos:end="389:22">av_log</name><argument_list pos:start="389:23" pos:end="395:33">(<argument pos:start="389:24" pos:end="389:28"><expr pos:start="389:24" pos:end="389:28"><name pos:start="389:24" pos:end="389:28">avctx</name></expr></argument>, <argument pos:start="389:31" pos:end="389:44"><expr pos:start="389:31" pos:end="389:44"><name pos:start="389:31" pos:end="389:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="391:24" pos:end="393:64"><expr pos:start="391:24" pos:end="393:64"><literal type="string" pos:start="391:24" pos:end="391:54">"Reducing left cropping to %d "</literal>

                       <literal type="string" pos:start="393:24" pos:end="393:64">"chroma samples to preserve alignment.\n"</literal></expr></argument>,

                       <argument pos:start="395:24" pos:end="395:32"><expr pos:start="395:24" pos:end="395:32"><name pos:start="395:24" pos:end="395:32">crop_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="401:13" pos:end="419:13"><if pos:start="401:13" pos:end="419:13">if <condition pos:start="401:16" pos:end="413:13">(<expr pos:start="401:17" pos:end="411:60"><name pos:start="401:17" pos:end="401:25">crop_left</name>  <operator pos:start="401:28" pos:end="401:28">&gt;</operator> <operator pos:start="401:30" pos:end="401:30">(</operator><name pos:start="401:31" pos:end="401:38">unsigned</name><operator pos:start="401:39" pos:end="401:39">)</operator><name pos:start="401:40" pos:end="401:46">INT_MAX</name> <operator pos:start="401:48" pos:end="401:48">/</operator> <literal type="number" pos:start="401:50" pos:end="401:50">4</literal> <operator pos:start="401:52" pos:end="401:52">/</operator> <name pos:start="401:54" pos:end="401:59">step_x</name> <operator pos:start="401:61" pos:end="401:62">||</operator>

                <name pos:start="403:17" pos:end="403:26">crop_right</name> <operator pos:start="403:28" pos:end="403:28">&gt;</operator> <operator pos:start="403:30" pos:end="403:30">(</operator><name pos:start="403:31" pos:end="403:38">unsigned</name><operator pos:start="403:39" pos:end="403:39">)</operator><name pos:start="403:40" pos:end="403:46">INT_MAX</name> <operator pos:start="403:48" pos:end="403:48">/</operator> <literal type="number" pos:start="403:50" pos:end="403:50">4</literal> <operator pos:start="403:52" pos:end="403:52">/</operator> <name pos:start="403:54" pos:end="403:59">step_x</name> <operator pos:start="403:61" pos:end="403:62">||</operator>

                <name pos:start="405:17" pos:end="405:24">crop_top</name>   <operator pos:start="405:28" pos:end="405:28">&gt;</operator> <operator pos:start="405:30" pos:end="405:30">(</operator><name pos:start="405:31" pos:end="405:38">unsigned</name><operator pos:start="405:39" pos:end="405:39">)</operator><name pos:start="405:40" pos:end="405:46">INT_MAX</name> <operator pos:start="405:48" pos:end="405:48">/</operator> <literal type="number" pos:start="405:50" pos:end="405:50">4</literal> <operator pos:start="405:52" pos:end="405:52">/</operator> <name pos:start="405:54" pos:end="405:59">step_y</name> <operator pos:start="405:61" pos:end="405:62">||</operator>

                <name pos:start="407:17" pos:end="407:27">crop_bottom</name><operator pos:start="407:28" pos:end="407:28">&gt;</operator> <operator pos:start="407:30" pos:end="407:30">(</operator><name pos:start="407:31" pos:end="407:38">unsigned</name><operator pos:start="407:39" pos:end="407:39">)</operator><name pos:start="407:40" pos:end="407:46">INT_MAX</name> <operator pos:start="407:48" pos:end="407:48">/</operator> <literal type="number" pos:start="407:50" pos:end="407:50">4</literal> <operator pos:start="407:52" pos:end="407:52">/</operator> <name pos:start="407:54" pos:end="407:59">step_y</name> <operator pos:start="407:61" pos:end="407:62">||</operator>

                <operator pos:start="409:17" pos:end="409:17">(</operator><name pos:start="409:18" pos:end="409:26">crop_left</name> <operator pos:start="409:28" pos:end="409:28">+</operator> <name pos:start="409:30" pos:end="409:39">crop_right</name> <operator pos:start="409:41" pos:end="409:41">)</operator> <operator pos:start="409:43" pos:end="409:43">*</operator> <name pos:start="409:45" pos:end="409:50">step_x</name> <operator pos:start="409:52" pos:end="409:53">&gt;=</operator> <name pos:start="409:55" pos:end="409:59">width</name> <operator pos:start="409:61" pos:end="409:62">||</operator>

                <operator pos:start="411:17" pos:end="411:17">(</operator><name pos:start="411:18" pos:end="411:25">crop_top</name>  <operator pos:start="411:28" pos:end="411:28">+</operator> <name pos:start="411:30" pos:end="411:40">crop_bottom</name><operator pos:start="411:41" pos:end="411:41">)</operator> <operator pos:start="411:43" pos:end="411:43">*</operator> <name pos:start="411:45" pos:end="411:50">step_y</name> <operator pos:start="411:52" pos:end="411:53">&gt;=</operator> <name pos:start="411:55" pos:end="411:60">height</name></expr>

            )</condition> <block pos:start="413:15" pos:end="419:13">{<block_content pos:start="415:17" pos:end="417:26">

                <expr_stmt pos:start="415:17" pos:end="415:150"><expr pos:start="415:17" pos:end="415:149"><call pos:start="415:17" pos:end="415:149"><name pos:start="415:17" pos:end="415:22">av_log</name><argument_list pos:start="415:23" pos:end="415:149">(<argument pos:start="415:24" pos:end="415:28"><expr pos:start="415:24" pos:end="415:28"><name pos:start="415:24" pos:end="415:28">avctx</name></expr></argument>, <argument pos:start="415:31" pos:end="415:42"><expr pos:start="415:31" pos:end="415:42"><name pos:start="415:31" pos:end="415:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="415:45" pos:end="415:87"><expr pos:start="415:45" pos:end="415:87"><literal type="string" pos:start="415:45" pos:end="415:87">"crop values invalid %d %d %d %d / %d %d\n"</literal></expr></argument>, <argument pos:start="415:90" pos:end="415:98"><expr pos:start="415:90" pos:end="415:98"><name pos:start="415:90" pos:end="415:98">crop_left</name></expr></argument>, <argument pos:start="415:101" pos:end="415:110"><expr pos:start="415:101" pos:end="415:110"><name pos:start="415:101" pos:end="415:110">crop_right</name></expr></argument>, <argument pos:start="415:113" pos:end="415:120"><expr pos:start="415:113" pos:end="415:120"><name pos:start="415:113" pos:end="415:120">crop_top</name></expr></argument>, <argument pos:start="415:123" pos:end="415:133"><expr pos:start="415:123" pos:end="415:133"><name pos:start="415:123" pos:end="415:133">crop_bottom</name></expr></argument>, <argument pos:start="415:136" pos:end="415:140"><expr pos:start="415:136" pos:end="415:140"><name pos:start="415:136" pos:end="415:140">width</name></expr></argument>, <argument pos:start="415:143" pos:end="415:148"><expr pos:start="415:143" pos:end="415:148"><name pos:start="415:143" pos:end="415:148">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="417:17" pos:end="417:26">goto <name pos:start="417:22" pos:end="417:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="423:13" pos:end="423:52"><expr pos:start="423:13" pos:end="423:51"><name pos:start="423:13" pos:end="423:26"><name pos:start="423:13" pos:end="423:15">sps</name><operator pos:start="423:16" pos:end="423:17">-&gt;</operator><name pos:start="423:18" pos:end="423:26">crop_left</name></name>   <operator pos:start="423:30" pos:end="423:30">=</operator> <name pos:start="423:32" pos:end="423:40">crop_left</name>   <operator pos:start="423:44" pos:end="423:44">*</operator> <name pos:start="423:46" pos:end="423:51">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:52"><expr pos:start="425:13" pos:end="425:51"><name pos:start="425:13" pos:end="425:27"><name pos:start="425:13" pos:end="425:15">sps</name><operator pos:start="425:16" pos:end="425:17">-&gt;</operator><name pos:start="425:18" pos:end="425:27">crop_right</name></name>  <operator pos:start="425:30" pos:end="425:30">=</operator> <name pos:start="425:32" pos:end="425:41">crop_right</name>  <operator pos:start="425:44" pos:end="425:44">*</operator> <name pos:start="425:46" pos:end="425:51">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:52"><expr pos:start="427:13" pos:end="427:51"><name pos:start="427:13" pos:end="427:25"><name pos:start="427:13" pos:end="427:15">sps</name><operator pos:start="427:16" pos:end="427:17">-&gt;</operator><name pos:start="427:18" pos:end="427:25">crop_top</name></name>    <operator pos:start="427:30" pos:end="427:30">=</operator> <name pos:start="427:32" pos:end="427:39">crop_top</name>    <operator pos:start="427:44" pos:end="427:44">*</operator> <name pos:start="427:46" pos:end="427:51">step_y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:52"><expr pos:start="429:13" pos:end="429:51"><name pos:start="429:13" pos:end="429:28"><name pos:start="429:13" pos:end="429:15">sps</name><operator pos:start="429:16" pos:end="429:17">-&gt;</operator><name pos:start="429:18" pos:end="429:28">crop_bottom</name></name> <operator pos:start="429:30" pos:end="429:30">=</operator> <name pos:start="429:32" pos:end="429:42">crop_bottom</name> <operator pos:start="429:44" pos:end="429:44">*</operator> <name pos:start="429:46" pos:end="429:51">step_y</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="433:7" pos:end="445:5">else <block pos:start="433:12" pos:end="445:5">{<block_content pos:start="435:9" pos:end="443:29">

        <expr_stmt pos:start="435:9" pos:end="443:29"><expr pos:start="435:9" pos:end="443:28"><name pos:start="435:9" pos:end="435:22"><name pos:start="435:9" pos:end="435:11">sps</name><operator pos:start="435:12" pos:end="435:13">-&gt;</operator><name pos:start="435:14" pos:end="435:22">crop_left</name></name>   <operator pos:start="435:26" pos:end="435:26">=</operator>

        <name pos:start="437:9" pos:end="437:23"><name pos:start="437:9" pos:end="437:11">sps</name><operator pos:start="437:12" pos:end="437:13">-&gt;</operator><name pos:start="437:14" pos:end="437:23">crop_right</name></name>  <operator pos:start="437:26" pos:end="437:26">=</operator>

        <name pos:start="439:9" pos:end="439:21"><name pos:start="439:9" pos:end="439:11">sps</name><operator pos:start="439:12" pos:end="439:13">-&gt;</operator><name pos:start="439:14" pos:end="439:21">crop_top</name></name>    <operator pos:start="439:26" pos:end="439:26">=</operator>

        <name pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:11">sps</name><operator pos:start="441:12" pos:end="441:13">-&gt;</operator><name pos:start="441:14" pos:end="441:24">crop_bottom</name></name> <operator pos:start="441:26" pos:end="441:26">=</operator>

        <name pos:start="443:9" pos:end="443:17"><name pos:start="443:9" pos:end="443:11">sps</name><operator pos:start="443:12" pos:end="443:13">-&gt;</operator><name pos:start="443:14" pos:end="443:17">crop</name></name>        <operator pos:start="443:26" pos:end="443:26">=</operator> <literal type="number" pos:start="443:28" pos:end="443:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="449:5" pos:end="449:53"><expr pos:start="449:5" pos:end="449:52"><name pos:start="449:5" pos:end="449:36"><name pos:start="449:5" pos:end="449:7">sps</name><operator pos:start="449:8" pos:end="449:9">-&gt;</operator><name pos:start="449:10" pos:end="449:36">vui_parameters_present_flag</name></name> <operator pos:start="449:38" pos:end="449:38">=</operator> <call pos:start="449:40" pos:end="449:52"><name pos:start="449:40" pos:end="449:48">get_bits1</name><argument_list pos:start="449:49" pos:end="449:52">(<argument pos:start="449:50" pos:end="449:51"><expr pos:start="449:50" pos:end="449:51"><name pos:start="449:50" pos:end="449:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="451:5" pos:end="459:5"><if pos:start="451:5" pos:end="459:5">if <condition pos:start="451:8" pos:end="451:41">(<expr pos:start="451:9" pos:end="451:40"><name pos:start="451:9" pos:end="451:40"><name pos:start="451:9" pos:end="451:11">sps</name><operator pos:start="451:12" pos:end="451:13">-&gt;</operator><name pos:start="451:14" pos:end="451:40">vui_parameters_present_flag</name></name></expr>)</condition> <block pos:start="451:43" pos:end="459:5">{<block_content pos:start="453:9" pos:end="457:22">

        <decl_stmt pos:start="453:9" pos:end="453:56"><decl pos:start="453:9" pos:end="453:55"><type pos:start="453:9" pos:end="453:11"><name pos:start="453:9" pos:end="453:11">int</name></type> <name pos:start="453:13" pos:end="453:15">ret</name> <init pos:start="453:17" pos:end="453:55">= <expr pos:start="453:19" pos:end="453:55"><call pos:start="453:19" pos:end="453:55"><name pos:start="453:19" pos:end="453:39">decode_vui_parameters</name><argument_list pos:start="453:40" pos:end="453:55">(<argument pos:start="453:41" pos:end="453:42"><expr pos:start="453:41" pos:end="453:42"><name pos:start="453:41" pos:end="453:42">gb</name></expr></argument>, <argument pos:start="453:45" pos:end="453:49"><expr pos:start="453:45" pos:end="453:49"><name pos:start="453:45" pos:end="453:49">avctx</name></expr></argument>, <argument pos:start="453:52" pos:end="453:54"><expr pos:start="453:52" pos:end="453:54"><name pos:start="453:52" pos:end="453:54">sps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="455:9" pos:end="457:22"><if pos:start="455:9" pos:end="457:22">if <condition pos:start="455:12" pos:end="455:20">(<expr pos:start="455:13" pos:end="455:19"><name pos:start="455:13" pos:end="455:15">ret</name> <operator pos:start="455:17" pos:end="455:17">&lt;</operator> <literal type="number" pos:start="455:19" pos:end="455:19">0</literal></expr>)</condition><block type="pseudo" pos:start="457:13" pos:end="457:22"><block_content pos:start="457:13" pos:end="457:22">

            <goto pos:start="457:13" pos:end="457:22">goto <name pos:start="457:18" pos:end="457:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="463:5" pos:end="473:5"><if pos:start="463:5" pos:end="473:5">if <condition pos:start="463:8" pos:end="463:30">(<expr pos:start="463:9" pos:end="463:29"><call pos:start="463:9" pos:end="463:25"><name pos:start="463:9" pos:end="463:21">get_bits_left</name><argument_list pos:start="463:22" pos:end="463:25">(<argument pos:start="463:23" pos:end="463:24"><expr pos:start="463:23" pos:end="463:24"><name pos:start="463:23" pos:end="463:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="463:27" pos:end="463:27">&lt;</operator> <literal type="number" pos:start="463:29" pos:end="463:29">0</literal></expr>)</condition> <block pos:start="463:32" pos:end="473:5">{<block_content pos:start="465:9" pos:end="471:22">

        <expr_stmt pos:start="465:9" pos:end="467:113"><expr pos:start="465:9" pos:end="467:112"><call pos:start="465:9" pos:end="467:112"><name pos:start="465:9" pos:end="465:14">av_log</name><argument_list pos:start="465:15" pos:end="467:112">(<argument pos:start="465:16" pos:end="465:20"><expr pos:start="465:16" pos:end="465:20"><name pos:start="465:16" pos:end="465:20">avctx</name></expr></argument>, <argument pos:start="465:23" pos:end="465:71"><expr pos:start="465:23" pos:end="465:71"><ternary pos:start="465:23" pos:end="465:71"><condition pos:start="465:23" pos:end="465:41"><expr pos:start="465:23" pos:end="465:39"><name pos:start="465:23" pos:end="465:39">ignore_truncation</name></expr> ?</condition><then pos:start="465:43" pos:end="465:56"> <expr pos:start="465:43" pos:end="465:56"><name pos:start="465:43" pos:end="465:56">AV_LOG_WARNING</name></expr> </then><else pos:start="465:58" pos:end="465:71">: <expr pos:start="465:60" pos:end="465:71"><name pos:start="465:60" pos:end="465:71">AV_LOG_ERROR</name></expr></else></ternary></expr></argument>,

               <argument pos:start="467:16" pos:end="467:41"><expr pos:start="467:16" pos:end="467:41"><literal type="string" pos:start="467:16" pos:end="467:41">"Overread %s by %d bits\n"</literal></expr></argument>, <argument pos:start="467:44" pos:end="467:91"><expr pos:start="467:44" pos:end="467:91"><ternary pos:start="467:44" pos:end="467:91"><condition pos:start="467:44" pos:end="467:77"><expr pos:start="467:44" pos:end="467:75"><name pos:start="467:44" pos:end="467:75"><name pos:start="467:44" pos:end="467:46">sps</name><operator pos:start="467:47" pos:end="467:48">-&gt;</operator><name pos:start="467:49" pos:end="467:75">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="467:79" pos:end="467:83"> <expr pos:start="467:79" pos:end="467:83"><literal type="string" pos:start="467:79" pos:end="467:83">"VUI"</literal></expr> </then><else pos:start="467:85" pos:end="467:91">: <expr pos:start="467:87" pos:end="467:91"><literal type="string" pos:start="467:87" pos:end="467:91">"SPS"</literal></expr></else></ternary></expr></argument>, <argument pos:start="467:94" pos:end="467:111"><expr pos:start="467:94" pos:end="467:111"><operator pos:start="467:94" pos:end="467:94">-</operator><call pos:start="467:95" pos:end="467:111"><name pos:start="467:95" pos:end="467:107">get_bits_left</name><argument_list pos:start="467:108" pos:end="467:111">(<argument pos:start="467:109" pos:end="467:110"><expr pos:start="467:109" pos:end="467:110"><name pos:start="467:109" pos:end="467:110">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="469:9" pos:end="471:22"><if pos:start="469:9" pos:end="471:22">if <condition pos:start="469:12" pos:end="469:31">(<expr pos:start="469:13" pos:end="469:30"><operator pos:start="469:13" pos:end="469:13">!</operator><name pos:start="469:14" pos:end="469:30">ignore_truncation</name></expr>)</condition><block type="pseudo" pos:start="471:13" pos:end="471:22"><block_content pos:start="471:13" pos:end="471:22">

            <goto pos:start="471:13" pos:end="471:22">goto <name pos:start="471:18" pos:end="471:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="477:5" pos:end="479:15">/* if the maximum delay is not stored in the SPS, derive it based on the

     * level */</comment>

    <if_stmt pos:start="481:5" pos:end="499:5"><if pos:start="481:5" pos:end="499:5">if <condition pos:start="481:8" pos:end="481:41">(<expr pos:start="481:9" pos:end="481:40"><operator pos:start="481:9" pos:end="481:9">!</operator><name pos:start="481:10" pos:end="481:40"><name pos:start="481:10" pos:end="481:12">sps</name><operator pos:start="481:13" pos:end="481:14">-&gt;</operator><name pos:start="481:15" pos:end="481:40">bitstream_restriction_flag</name></name></expr>)</condition> <block pos:start="481:43" pos:end="499:5">{<block_content pos:start="483:9" pos:end="497:9">

        <expr_stmt pos:start="483:9" pos:end="483:60"><expr pos:start="483:9" pos:end="483:59"><name pos:start="483:9" pos:end="483:31"><name pos:start="483:9" pos:end="483:11">sps</name><operator pos:start="483:12" pos:end="483:13">-&gt;</operator><name pos:start="483:14" pos:end="483:31">num_reorder_frames</name></name> <operator pos:start="483:33" pos:end="483:33">=</operator> <name pos:start="483:35" pos:end="483:55">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="483:57" pos:end="483:57">-</operator> <literal type="number" pos:start="483:59" pos:end="483:59">1</literal></expr>;</expr_stmt>

        <for pos:start="485:9" pos:end="497:9">for <control pos:start="485:13" pos:end="485:63">(<init pos:start="485:14" pos:end="485:19"><expr pos:start="485:14" pos:end="485:18"><name pos:start="485:14" pos:end="485:14">i</name> <operator pos:start="485:16" pos:end="485:16">=</operator> <literal type="number" pos:start="485:18" pos:end="485:18">0</literal></expr>;</init> <condition pos:start="485:21" pos:end="485:58"><expr pos:start="485:21" pos:end="485:57"><name pos:start="485:21" pos:end="485:21">i</name> <operator pos:start="485:23" pos:end="485:23">&lt;</operator> <call pos:start="485:25" pos:end="485:57"><name pos:start="485:25" pos:end="485:38">FF_ARRAY_ELEMS</name><argument_list pos:start="485:39" pos:end="485:57">(<argument pos:start="485:40" pos:end="485:56"><expr pos:start="485:40" pos:end="485:56"><name pos:start="485:40" pos:end="485:56">level_max_dpb_mbs</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="485:60" pos:end="485:62"><expr pos:start="485:60" pos:end="485:62"><name pos:start="485:60" pos:end="485:60">i</name><operator pos:start="485:61" pos:end="485:62">++</operator></expr></incr>)</control> <block pos:start="485:65" pos:end="497:9">{<block_content pos:start="487:13" pos:end="495:13">

            <if_stmt pos:start="487:13" pos:end="495:13"><if pos:start="487:13" pos:end="495:13">if <condition pos:start="487:16" pos:end="487:58">(<expr pos:start="487:17" pos:end="487:57"><name pos:start="487:17" pos:end="487:39"><name pos:start="487:17" pos:end="487:33">level_max_dpb_mbs</name><index pos:start="487:34" pos:end="487:36">[<expr pos:start="487:35" pos:end="487:35"><name pos:start="487:35" pos:end="487:35">i</name></expr>]</index><index pos:start="487:37" pos:end="487:39">[<expr pos:start="487:38" pos:end="487:38"><literal type="number" pos:start="487:38" pos:end="487:38">0</literal></expr>]</index></name> <operator pos:start="487:41" pos:end="487:42">==</operator> <name pos:start="487:44" pos:end="487:57"><name pos:start="487:44" pos:end="487:46">sps</name><operator pos:start="487:47" pos:end="487:48">-&gt;</operator><name pos:start="487:49" pos:end="487:57">level_idc</name></name></expr>)</condition> <block pos:start="487:60" pos:end="495:13">{<block_content pos:start="489:17" pos:end="493:22">

                <expr_stmt pos:start="489:17" pos:end="491:73"><expr pos:start="489:17" pos:end="491:72"><name pos:start="489:17" pos:end="489:39"><name pos:start="489:17" pos:end="489:19">sps</name><operator pos:start="489:20" pos:end="489:21">-&gt;</operator><name pos:start="489:22" pos:end="489:39">num_reorder_frames</name></name> <operator pos:start="489:41" pos:end="489:41">=</operator> <call pos:start="489:43" pos:end="491:72"><name pos:start="489:43" pos:end="489:47">FFMIN</name><argument_list pos:start="489:48" pos:end="491:72">(<argument pos:start="489:49" pos:end="489:106"><expr pos:start="489:49" pos:end="489:106"><name pos:start="489:49" pos:end="489:71"><name pos:start="489:49" pos:end="489:65">level_max_dpb_mbs</name><index pos:start="489:66" pos:end="489:68">[<expr pos:start="489:67" pos:end="489:67"><name pos:start="489:67" pos:end="489:67">i</name></expr>]</index><index pos:start="489:69" pos:end="489:71">[<expr pos:start="489:70" pos:end="489:70"><literal type="number" pos:start="489:70" pos:end="489:70">1</literal></expr>]</index></name> <operator pos:start="489:73" pos:end="489:73">/</operator> <operator pos:start="489:75" pos:end="489:75">(</operator><name pos:start="489:76" pos:end="489:88"><name pos:start="489:76" pos:end="489:78">sps</name><operator pos:start="489:79" pos:end="489:80">-&gt;</operator><name pos:start="489:81" pos:end="489:88">mb_width</name></name> <operator pos:start="489:90" pos:end="489:90">*</operator> <name pos:start="489:92" pos:end="489:105"><name pos:start="489:92" pos:end="489:94">sps</name><operator pos:start="489:95" pos:end="489:96">-&gt;</operator><name pos:start="489:97" pos:end="489:105">mb_height</name></name><operator pos:start="489:106" pos:end="489:106">)</operator></expr></argument>,

                                                <argument pos:start="491:49" pos:end="491:71"><expr pos:start="491:49" pos:end="491:71"><name pos:start="491:49" pos:end="491:71"><name pos:start="491:49" pos:end="491:51">sps</name><operator pos:start="491:52" pos:end="491:53">-&gt;</operator><name pos:start="491:54" pos:end="491:71">num_reorder_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="493:17" pos:end="493:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="503:5" pos:end="505:25"><if pos:start="503:5" pos:end="505:25">if <condition pos:start="503:8" pos:end="503:22">(<expr pos:start="503:9" pos:end="503:21"><operator pos:start="503:9" pos:end="503:9">!</operator><name pos:start="503:10" pos:end="503:21"><name pos:start="503:10" pos:end="503:12">sps</name><operator pos:start="503:13" pos:end="503:14">-&gt;</operator><name pos:start="503:15" pos:end="503:17">sar</name><operator pos:start="503:18" pos:end="503:18">.</operator><name pos:start="503:19" pos:end="503:21">den</name></name></expr>)</condition><block type="pseudo" pos:start="505:9" pos:end="505:25"><block_content pos:start="505:9" pos:end="505:25">

        <expr_stmt pos:start="505:9" pos:end="505:25"><expr pos:start="505:9" pos:end="505:24"><name pos:start="505:9" pos:end="505:20"><name pos:start="505:9" pos:end="505:11">sps</name><operator pos:start="505:12" pos:end="505:13">-&gt;</operator><name pos:start="505:14" pos:end="505:16">sar</name><operator pos:start="505:17" pos:end="505:17">.</operator><name pos:start="505:18" pos:end="505:20">den</name></name> <operator pos:start="505:22" pos:end="505:22">=</operator> <literal type="number" pos:start="505:24" pos:end="505:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="509:5" pos:end="547:5"><if pos:start="509:5" pos:end="547:5">if <condition pos:start="509:8" pos:end="509:42">(<expr pos:start="509:9" pos:end="509:41"><name pos:start="509:9" pos:end="509:20"><name pos:start="509:9" pos:end="509:13">avctx</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:20">debug</name></name> <operator pos:start="509:22" pos:end="509:22">&amp;</operator> <name pos:start="509:24" pos:end="509:41">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="509:44" pos:end="547:5">{<block_content pos:start="511:9" pos:end="545:17">

        <decl_stmt pos:start="511:9" pos:end="511:70"><decl pos:start="511:9" pos:end="511:69"><type pos:start="511:9" pos:end="511:25"><specifier pos:start="511:9" pos:end="511:14">static</specifier> <specifier pos:start="511:16" pos:end="511:20">const</specifier> <name pos:start="511:22" pos:end="511:25">char</name></type> <name pos:start="511:27" pos:end="511:35"><name pos:start="511:27" pos:end="511:29">csp</name><index pos:start="511:30" pos:end="511:32">[<expr pos:start="511:31" pos:end="511:31"><literal type="number" pos:start="511:31" pos:end="511:31">4</literal></expr>]</index><index pos:start="511:33" pos:end="511:35">[<expr pos:start="511:34" pos:end="511:34"><literal type="number" pos:start="511:34" pos:end="511:34">5</literal></expr>]</index></name> <init pos:start="511:37" pos:end="511:69">= <expr pos:start="511:39" pos:end="511:69"><block pos:start="511:39" pos:end="511:69">{ <expr pos:start="511:41" pos:end="511:46"><literal type="string" pos:start="511:41" pos:end="511:46">"Gray"</literal></expr>, <expr pos:start="511:49" pos:end="511:53"><literal type="string" pos:start="511:49" pos:end="511:53">"420"</literal></expr>, <expr pos:start="511:56" pos:end="511:60"><literal type="string" pos:start="511:56" pos:end="511:60">"422"</literal></expr>, <expr pos:start="511:63" pos:end="511:67"><literal type="string" pos:start="511:63" pos:end="511:67">"444"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="513:9" pos:end="545:17"><expr pos:start="513:9" pos:end="545:16"><call pos:start="513:9" pos:end="545:16"><name pos:start="513:9" pos:end="513:14">av_log</name><argument_list pos:start="513:15" pos:end="545:16">(<argument pos:start="513:16" pos:end="513:20"><expr pos:start="513:16" pos:end="513:20"><name pos:start="513:16" pos:end="513:20">avctx</name></expr></argument>, <argument pos:start="513:23" pos:end="513:34"><expr pos:start="513:23" pos:end="513:34"><name pos:start="513:23" pos:end="513:34">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="515:16" pos:end="515:119"><expr pos:start="515:16" pos:end="515:119"><literal type="string" pos:start="515:16" pos:end="515:88">"sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %"</literal><name pos:start="515:89" pos:end="515:94">PRId32</name><literal type="string" pos:start="515:95" pos:end="515:98">"/%"</literal><name pos:start="515:99" pos:end="515:104">PRId32</name><literal type="string" pos:start="515:105" pos:end="515:119">" b%d reo:%d\n"</literal></expr></argument>,

               <argument pos:start="517:16" pos:end="517:21"><expr pos:start="517:16" pos:end="517:21"><name pos:start="517:16" pos:end="517:21">sps_id</name></expr></argument>, <argument pos:start="517:24" pos:end="517:39"><expr pos:start="517:24" pos:end="517:39"><name pos:start="517:24" pos:end="517:39"><name pos:start="517:24" pos:end="517:26">sps</name><operator pos:start="517:27" pos:end="517:28">-&gt;</operator><name pos:start="517:29" pos:end="517:39">profile_idc</name></name></expr></argument>, <argument pos:start="517:42" pos:end="517:55"><expr pos:start="517:42" pos:end="517:55"><name pos:start="517:42" pos:end="517:55"><name pos:start="517:42" pos:end="517:44">sps</name><operator pos:start="517:45" pos:end="517:46">-&gt;</operator><name pos:start="517:47" pos:end="517:55">level_idc</name></name></expr></argument>,

               <argument pos:start="519:16" pos:end="519:28"><expr pos:start="519:16" pos:end="519:28"><name pos:start="519:16" pos:end="519:28"><name pos:start="519:16" pos:end="519:18">sps</name><operator pos:start="519:19" pos:end="519:20">-&gt;</operator><name pos:start="519:21" pos:end="519:28">poc_type</name></name></expr></argument>,

               <argument pos:start="521:16" pos:end="521:35"><expr pos:start="521:16" pos:end="521:35"><name pos:start="521:16" pos:end="521:35"><name pos:start="521:16" pos:end="521:18">sps</name><operator pos:start="521:19" pos:end="521:20">-&gt;</operator><name pos:start="521:21" pos:end="521:35">ref_frame_count</name></name></expr></argument>,

               <argument pos:start="523:16" pos:end="523:28"><expr pos:start="523:16" pos:end="523:28"><name pos:start="523:16" pos:end="523:28"><name pos:start="523:16" pos:end="523:18">sps</name><operator pos:start="523:19" pos:end="523:20">-&gt;</operator><name pos:start="523:21" pos:end="523:28">mb_width</name></name></expr></argument>, <argument pos:start="523:31" pos:end="523:44"><expr pos:start="523:31" pos:end="523:44"><name pos:start="523:31" pos:end="523:44"><name pos:start="523:31" pos:end="523:33">sps</name><operator pos:start="523:34" pos:end="523:35">-&gt;</operator><name pos:start="523:36" pos:end="523:44">mb_height</name></name></expr></argument>,

               <argument pos:start="525:16" pos:end="525:86"><expr pos:start="525:16" pos:end="525:86"><ternary pos:start="525:16" pos:end="525:86"><condition pos:start="525:16" pos:end="525:41"><expr pos:start="525:16" pos:end="525:39"><name pos:start="525:16" pos:end="525:39"><name pos:start="525:16" pos:end="525:18">sps</name><operator pos:start="525:19" pos:end="525:20">-&gt;</operator><name pos:start="525:21" pos:end="525:39">frame_mbs_only_flag</name></name></expr> ?</condition><then pos:start="525:43" pos:end="525:47"> <expr pos:start="525:43" pos:end="525:47"><literal type="string" pos:start="525:43" pos:end="525:47">"FRM"</literal></expr> </then><else pos:start="525:49" pos:end="525:86">: <expr pos:start="525:51" pos:end="525:86"><operator pos:start="525:51" pos:end="525:51">(</operator><ternary pos:start="525:52" pos:end="525:85"><condition pos:start="525:52" pos:end="525:64"><expr pos:start="525:52" pos:end="525:62"><name pos:start="525:52" pos:end="525:62"><name pos:start="525:52" pos:end="525:54">sps</name><operator pos:start="525:55" pos:end="525:56">-&gt;</operator><name pos:start="525:57" pos:end="525:62">mb_aff</name></name></expr> ?</condition><then pos:start="525:66" pos:end="525:73"> <expr pos:start="525:66" pos:end="525:73"><literal type="string" pos:start="525:66" pos:end="525:73">"MB-AFF"</literal></expr> </then><else pos:start="525:75" pos:end="525:85">: <expr pos:start="525:77" pos:end="525:85"><literal type="string" pos:start="525:77" pos:end="525:85">"PIC-AFF"</literal></expr></else></ternary><operator pos:start="525:86" pos:end="525:86">)</operator></expr></else></ternary></expr></argument>,

               <argument pos:start="527:16" pos:end="527:58"><expr pos:start="527:16" pos:end="527:58"><ternary pos:start="527:16" pos:end="527:58"><condition pos:start="527:16" pos:end="527:47"><expr pos:start="527:16" pos:end="527:45"><name pos:start="527:16" pos:end="527:45"><name pos:start="527:16" pos:end="527:18">sps</name><operator pos:start="527:19" pos:end="527:20">-&gt;</operator><name pos:start="527:21" pos:end="527:45">direct_8x8_inference_flag</name></name></expr> ?</condition><then pos:start="527:49" pos:end="527:53"> <expr pos:start="527:49" pos:end="527:53"><literal type="string" pos:start="527:49" pos:end="527:53">"8B8"</literal></expr> </then><else pos:start="527:55" pos:end="527:58">: <expr pos:start="527:57" pos:end="527:58"><literal type="string" pos:start="527:57" pos:end="527:58">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="529:16" pos:end="529:29"><expr pos:start="529:16" pos:end="529:29"><name pos:start="529:16" pos:end="529:29"><name pos:start="529:16" pos:end="529:18">sps</name><operator pos:start="529:19" pos:end="529:20">-&gt;</operator><name pos:start="529:21" pos:end="529:29">crop_left</name></name></expr></argument>, <argument pos:start="529:32" pos:end="529:46"><expr pos:start="529:32" pos:end="529:46"><name pos:start="529:32" pos:end="529:46"><name pos:start="529:32" pos:end="529:34">sps</name><operator pos:start="529:35" pos:end="529:36">-&gt;</operator><name pos:start="529:37" pos:end="529:46">crop_right</name></name></expr></argument>,

               <argument pos:start="531:16" pos:end="531:28"><expr pos:start="531:16" pos:end="531:28"><name pos:start="531:16" pos:end="531:28"><name pos:start="531:16" pos:end="531:18">sps</name><operator pos:start="531:19" pos:end="531:20">-&gt;</operator><name pos:start="531:21" pos:end="531:28">crop_top</name></name></expr></argument>, <argument pos:start="531:31" pos:end="531:46"><expr pos:start="531:31" pos:end="531:46"><name pos:start="531:31" pos:end="531:46"><name pos:start="531:31" pos:end="531:33">sps</name><operator pos:start="531:34" pos:end="531:35">-&gt;</operator><name pos:start="531:36" pos:end="531:46">crop_bottom</name></name></expr></argument>,

               <argument pos:start="533:16" pos:end="533:60"><expr pos:start="533:16" pos:end="533:60"><ternary pos:start="533:16" pos:end="533:60"><condition pos:start="533:16" pos:end="533:49"><expr pos:start="533:16" pos:end="533:47"><name pos:start="533:16" pos:end="533:47"><name pos:start="533:16" pos:end="533:18">sps</name><operator pos:start="533:19" pos:end="533:20">-&gt;</operator><name pos:start="533:21" pos:end="533:47">vui_parameters_present_flag</name></name></expr> ?</condition><then pos:start="533:51" pos:end="533:55"> <expr pos:start="533:51" pos:end="533:55"><literal type="string" pos:start="533:51" pos:end="533:55">"VUI"</literal></expr> </then><else pos:start="533:57" pos:end="533:60">: <expr pos:start="533:59" pos:end="533:60"><literal type="string" pos:start="533:59" pos:end="533:60">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="535:16" pos:end="535:42"><expr pos:start="535:16" pos:end="535:42"><name pos:start="535:16" pos:end="535:42"><name pos:start="535:16" pos:end="535:18">csp</name><index pos:start="535:19" pos:end="535:42">[<expr pos:start="535:20" pos:end="535:41"><name pos:start="535:20" pos:end="535:41"><name pos:start="535:20" pos:end="535:22">sps</name><operator pos:start="535:23" pos:end="535:24">-&gt;</operator><name pos:start="535:25" pos:end="535:41">chroma_format_idc</name></name></expr>]</index></name></expr></argument>,

               <argument pos:start="537:16" pos:end="537:73"><expr pos:start="537:16" pos:end="537:73"><ternary pos:start="537:16" pos:end="537:73"><condition pos:start="537:16" pos:end="537:46"><expr pos:start="537:16" pos:end="537:44"><name pos:start="537:16" pos:end="537:44"><name pos:start="537:16" pos:end="537:18">sps</name><operator pos:start="537:19" pos:end="537:20">-&gt;</operator><name pos:start="537:21" pos:end="537:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="537:48" pos:end="537:69"> <expr pos:start="537:48" pos:end="537:69"><name pos:start="537:48" pos:end="537:69"><name pos:start="537:48" pos:end="537:50">sps</name><operator pos:start="537:51" pos:end="537:52">-&gt;</operator><name pos:start="537:53" pos:end="537:69">num_units_in_tick</name></name></expr> </then><else pos:start="537:71" pos:end="537:73">: <expr pos:start="537:73" pos:end="537:73"><literal type="number" pos:start="537:73" pos:end="537:73">0</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="539:16" pos:end="539:66"><expr pos:start="539:16" pos:end="539:66"><ternary pos:start="539:16" pos:end="539:66"><condition pos:start="539:16" pos:end="539:46"><expr pos:start="539:16" pos:end="539:44"><name pos:start="539:16" pos:end="539:44"><name pos:start="539:16" pos:end="539:18">sps</name><operator pos:start="539:19" pos:end="539:20">-&gt;</operator><name pos:start="539:21" pos:end="539:44">timing_info_present_flag</name></name></expr> ?</condition><then pos:start="539:48" pos:end="539:62"> <expr pos:start="539:48" pos:end="539:62"><name pos:start="539:48" pos:end="539:62"><name pos:start="539:48" pos:end="539:50">sps</name><operator pos:start="539:51" pos:end="539:52">-&gt;</operator><name pos:start="539:53" pos:end="539:62">time_scale</name></name></expr> </then><else pos:start="539:64" pos:end="539:66">: <expr pos:start="539:66" pos:end="539:66"><literal type="number" pos:start="539:66" pos:end="539:66">0</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="541:16" pos:end="541:34"><expr pos:start="541:16" pos:end="541:34"><name pos:start="541:16" pos:end="541:34"><name pos:start="541:16" pos:end="541:18">sps</name><operator pos:start="541:19" pos:end="541:20">-&gt;</operator><name pos:start="541:21" pos:end="541:34">bit_depth_luma</name></name></expr></argument>,

               <argument pos:start="543:16" pos:end="543:77"><expr pos:start="543:16" pos:end="543:77"><ternary pos:start="543:16" pos:end="543:77"><condition pos:start="543:16" pos:end="543:48"><expr pos:start="543:16" pos:end="543:46"><name pos:start="543:16" pos:end="543:46"><name pos:start="543:16" pos:end="543:18">sps</name><operator pos:start="543:19" pos:end="543:20">-&gt;</operator><name pos:start="543:21" pos:end="543:46">bitstream_restriction_flag</name></name></expr> ?</condition><then pos:start="543:50" pos:end="543:72"> <expr pos:start="543:50" pos:end="543:72"><name pos:start="543:50" pos:end="543:72"><name pos:start="543:50" pos:end="543:52">sps</name><operator pos:start="543:53" pos:end="543:54">-&gt;</operator><name pos:start="543:55" pos:end="543:72">num_reorder_frames</name></name></expr> </then><else pos:start="543:74" pos:end="543:77">: <expr pos:start="543:76" pos:end="543:77"><operator pos:start="543:76" pos:end="543:76">-</operator><literal type="number" pos:start="543:77" pos:end="543:77">1</literal></expr></else></ternary></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="551:5" pos:end="555:52">/* check if this is a repeat of an already parsed SPS, then keep the

     * original one.

     * otherwise drop all PPSes that depend on it */</comment>

    <if_stmt pos:start="557:5" pos:end="569:5"><if pos:start="557:5" pos:end="563:5">if <condition pos:start="557:8" pos:end="559:74">(<expr pos:start="557:9" pos:end="559:73"><name pos:start="557:9" pos:end="557:28"><name pos:start="557:9" pos:end="557:10">ps</name><operator pos:start="557:11" pos:end="557:12">-&gt;</operator><name pos:start="557:13" pos:end="557:20">sps_list</name><index pos:start="557:21" pos:end="557:28">[<expr pos:start="557:22" pos:end="557:27"><name pos:start="557:22" pos:end="557:27">sps_id</name></expr>]</index></name> <operator pos:start="557:30" pos:end="557:31">&amp;&amp;</operator>

        <operator pos:start="559:9" pos:end="559:9">!</operator><call pos:start="559:10" pos:end="559:73"><name pos:start="559:10" pos:end="559:15">memcmp</name><argument_list pos:start="559:16" pos:end="559:73">(<argument pos:start="559:17" pos:end="559:42"><expr pos:start="559:17" pos:end="559:42"><name pos:start="559:17" pos:end="559:36"><name pos:start="559:17" pos:end="559:18">ps</name><operator pos:start="559:19" pos:end="559:20">-&gt;</operator><name pos:start="559:21" pos:end="559:28">sps_list</name><index pos:start="559:29" pos:end="559:36">[<expr pos:start="559:30" pos:end="559:35"><name pos:start="559:30" pos:end="559:35">sps_id</name></expr>]</index></name><operator pos:start="559:37" pos:end="559:38">-&gt;</operator><name pos:start="559:39" pos:end="559:42">data</name></expr></argument>, <argument pos:start="559:45" pos:end="559:57"><expr pos:start="559:45" pos:end="559:57"><name pos:start="559:45" pos:end="559:57"><name pos:start="559:45" pos:end="559:51">sps_buf</name><operator pos:start="559:52" pos:end="559:53">-&gt;</operator><name pos:start="559:54" pos:end="559:57">data</name></name></expr></argument>, <argument pos:start="559:60" pos:end="559:72"><expr pos:start="559:60" pos:end="559:72"><name pos:start="559:60" pos:end="559:72"><name pos:start="559:60" pos:end="559:66">sps_buf</name><operator pos:start="559:67" pos:end="559:68">-&gt;</operator><name pos:start="559:69" pos:end="559:72">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="559:76" pos:end="563:5">{<block_content pos:start="561:9" pos:end="561:34">

        <expr_stmt pos:start="561:9" pos:end="561:34"><expr pos:start="561:9" pos:end="561:33"><call pos:start="561:9" pos:end="561:33"><name pos:start="561:9" pos:end="561:23">av_buffer_unref</name><argument_list pos:start="561:24" pos:end="561:33">(<argument pos:start="561:25" pos:end="561:32"><expr pos:start="561:25" pos:end="561:32"><operator pos:start="561:25" pos:end="561:25">&amp;</operator><name pos:start="561:26" pos:end="561:32">sps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="563:7" pos:end="569:5">else <block pos:start="563:12" pos:end="569:5">{<block_content pos:start="565:9" pos:end="567:39">

        <expr_stmt pos:start="565:9" pos:end="565:31"><expr pos:start="565:9" pos:end="565:30"><call pos:start="565:9" pos:end="565:30"><name pos:start="565:9" pos:end="565:18">remove_sps</name><argument_list pos:start="565:19" pos:end="565:30">(<argument pos:start="565:20" pos:end="565:21"><expr pos:start="565:20" pos:end="565:21"><name pos:start="565:20" pos:end="565:21">ps</name></expr></argument>, <argument pos:start="565:24" pos:end="565:29"><expr pos:start="565:24" pos:end="565:29"><name pos:start="565:24" pos:end="565:29">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="567:9" pos:end="567:39"><expr pos:start="567:9" pos:end="567:38"><name pos:start="567:9" pos:end="567:28"><name pos:start="567:9" pos:end="567:10">ps</name><operator pos:start="567:11" pos:end="567:12">-&gt;</operator><name pos:start="567:13" pos:end="567:20">sps_list</name><index pos:start="567:21" pos:end="567:28">[<expr pos:start="567:22" pos:end="567:27"><name pos:start="567:22" pos:end="567:27">sps_id</name></expr>]</index></name> <operator pos:start="567:30" pos:end="567:30">=</operator> <name pos:start="567:32" pos:end="567:38">sps_buf</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="573:5" pos:end="573:13">return <expr pos:start="573:12" pos:end="573:12"><literal type="number" pos:start="573:12" pos:end="573:12">0</literal></expr>;</return>



<label pos:start="577:1" pos:end="577:5"><name pos:start="577:1" pos:end="577:4">fail</name>:</label>

    <expr_stmt pos:start="579:5" pos:end="579:30"><expr pos:start="579:5" pos:end="579:29"><call pos:start="579:5" pos:end="579:29"><name pos:start="579:5" pos:end="579:19">av_buffer_unref</name><argument_list pos:start="579:20" pos:end="579:29">(<argument pos:start="579:21" pos:end="579:28"><expr pos:start="579:21" pos:end="579:28"><operator pos:start="579:21" pos:end="579:21">&amp;</operator><name pos:start="579:22" pos:end="579:28">sps_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="581:5" pos:end="581:31">return <expr pos:start="581:12" pos:end="581:30"><name pos:start="581:12" pos:end="581:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
