<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23241.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">qdev_prop_parse</name><parameter_list pos:start="1:20" pos:end="1:74">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:31">DeviceState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">dev</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">name</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">Property</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">prop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:8">prop</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:36"><name pos:start="11:12" pos:end="11:25">qdev_prop_find</name><argument_list pos:start="11:26" pos:end="11:36">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">dev</name></expr></argument>, <argument pos:start="11:32" pos:end="11:35"><expr pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:35">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">prop</name></expr>)</condition> <block pos:start="13:16" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:18">

        <expr_stmt pos:start="15:9" pos:end="17:39"><expr pos:start="15:9" pos:end="17:38"><call pos:start="15:9" pos:end="17:38"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="17:38">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:56"><expr pos:start="15:25" pos:end="15:56"><literal type="string" pos:start="15:25" pos:end="15:56">"property \"%s.%s\" not found\n"</literal></expr></argument>,

                <argument pos:start="17:17" pos:end="17:31"><expr pos:start="17:17" pos:end="17:31"><name pos:start="17:17" pos:end="17:31"><name pos:start="17:17" pos:end="17:19">dev</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:25">info</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">name</name></name></expr></argument>, <argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:26"><name pos:start="23:10" pos:end="23:13">prop</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">info</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:26">parse</name></name></expr>)</condition> <block pos:start="23:29" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="27:39"><expr pos:start="25:9" pos:end="27:38"><call pos:start="25:9" pos:end="27:38"><name pos:start="25:9" pos:end="25:15">fprintf</name><argument_list pos:start="25:16" pos:end="27:38">(<argument pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">stderr</name></expr></argument>, <argument pos:start="25:25" pos:end="25:60"><expr pos:start="25:25" pos:end="25:60"><literal type="string" pos:start="25:25" pos:end="25:60">"property \"%s.%s\" has no parser\n"</literal></expr></argument>,

                <argument pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:19">dev</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">info</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:31">name</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:45"><name pos:start="33:11" pos:end="33:27"><name pos:start="33:11" pos:end="33:14">prop</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:20">info</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">parse</name></name><argument_list pos:start="33:28" pos:end="33:45">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">dev</name></expr></argument>, <argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">prop</name></expr></argument>, <argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="69:5"><if pos:start="35:5" pos:end="69:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="69:5">{<block_content pos:start="37:9" pos:end="67:18">

        <switch pos:start="37:9" pos:end="65:9">switch <condition pos:start="37:16" pos:end="37:20">(<expr pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:19">ret</name></expr>)</condition> <block pos:start="37:22" pos:end="65:9">{<block_content pos:start="39:9" pos:end="63:18">

        <case pos:start="39:9" pos:end="39:21">case <expr pos:start="39:14" pos:end="39:20"><operator pos:start="39:14" pos:end="39:14">-</operator><name pos:start="39:15" pos:end="39:20">EEXIST</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="43:50"><expr pos:start="41:13" pos:end="43:49"><call pos:start="41:13" pos:end="43:49"><name pos:start="41:13" pos:end="41:19">fprintf</name><argument_list pos:start="41:20" pos:end="43:49">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">stderr</name></expr></argument>, <argument pos:start="41:29" pos:end="41:76"><expr pos:start="41:29" pos:end="41:76"><literal type="string" pos:start="41:29" pos:end="41:76">"property \"%s.%s\": \"%s\" is already in use\n"</literal></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:35"><expr pos:start="43:21" pos:end="43:35"><name pos:start="43:21" pos:end="43:35"><name pos:start="43:21" pos:end="43:23">dev</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:29">info</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:35">name</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:41"><expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">name</name></expr></argument>, <argument pos:start="43:44" pos:end="43:48"><expr pos:start="43:44" pos:end="43:48"><name pos:start="43:44" pos:end="43:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <default pos:start="47:9" pos:end="47:16">default:</default>

        <case pos:start="49:9" pos:end="49:21">case <expr pos:start="49:14" pos:end="49:20"><operator pos:start="49:14" pos:end="49:14">-</operator><name pos:start="49:15" pos:end="49:20">EINVAL</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="53:50"><expr pos:start="51:13" pos:end="53:49"><call pos:start="51:13" pos:end="53:49"><name pos:start="51:13" pos:end="51:19">fprintf</name><argument_list pos:start="51:20" pos:end="53:49">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">stderr</name></expr></argument>, <argument pos:start="51:29" pos:end="51:74"><expr pos:start="51:29" pos:end="51:74"><literal type="string" pos:start="51:29" pos:end="51:74">"property \"%s.%s\": failed to parse \"%s\"\n"</literal></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:35"><expr pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:23">dev</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:29">info</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:35">name</name></name></expr></argument>, <argument pos:start="53:38" pos:end="53:41"><expr pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:41">name</name></expr></argument>, <argument pos:start="53:44" pos:end="53:48"><expr pos:start="53:44" pos:end="53:48"><name pos:start="53:44" pos:end="53:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:21">case <expr pos:start="57:14" pos:end="57:20"><operator pos:start="57:14" pos:end="57:14">-</operator><name pos:start="57:15" pos:end="57:20">ENOENT</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="61:50"><expr pos:start="59:13" pos:end="61:49"><call pos:start="59:13" pos:end="61:49"><name pos:start="59:13" pos:end="59:19">fprintf</name><argument_list pos:start="59:20" pos:end="61:49">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">stderr</name></expr></argument>, <argument pos:start="59:29" pos:end="59:73"><expr pos:start="59:29" pos:end="59:73"><literal type="string" pos:start="59:29" pos:end="59:73">"property \"%s.%s\": could not find \"%s\"\n"</literal></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:35"><expr pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:23">dev</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:29">info</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:35">name</name></name></expr></argument>, <argument pos:start="61:38" pos:end="61:41"><expr pos:start="61:38" pos:end="61:41"><name pos:start="61:38" pos:end="61:41">name</name></expr></argument>, <argument pos:start="61:44" pos:end="61:48"><expr pos:start="61:44" pos:end="61:48"><name pos:start="61:44" pos:end="61:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></switch>

        <return pos:start="67:9" pos:end="67:18">return <expr pos:start="67:16" pos:end="67:17"><operator pos:start="67:16" pos:end="67:16">-</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
