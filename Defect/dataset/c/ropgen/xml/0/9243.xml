<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9243.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">decode_header</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">SnowContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list><block pos:start="1:41" pos:end="167:1">{<block_content pos:start="3:5" pos:end="165:13">

    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:19">plane_index</name></decl>, <decl pos:start="3:22" pos:end="3:24"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:22" pos:end="3:24">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:22"><name pos:start="5:13" pos:end="5:18">kstate</name><index pos:start="5:19" pos:end="5:22">[<expr pos:start="5:20" pos:end="5:21"><literal type="number" pos:start="5:20" pos:end="5:21">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><call pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:45">(<argument pos:start="9:12" pos:end="9:17"><expr pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:17">kstate</name></expr></argument>, <argument pos:start="9:20" pos:end="9:28"><expr pos:start="9:20" pos:end="9:28"><name pos:start="9:20" pos:end="9:28">MID_STATE</name></expr></argument>, <argument pos:start="9:31" pos:end="9:44"><expr pos:start="9:31" pos:end="9:44"><sizeof pos:start="9:31" pos:end="9:44">sizeof<argument_list pos:start="9:37" pos:end="9:44">(<argument pos:start="9:38" pos:end="9:43"><expr pos:start="9:38" pos:end="9:43"><name pos:start="9:38" pos:end="9:43">kstate</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">keyframe</name></name><operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:24">get_rac</name><argument_list pos:start="13:25" pos:end="13:39">(<argument pos:start="13:26" pos:end="13:30"><expr pos:start="13:26" pos:end="13:30"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:30">c</name></name></expr></argument>, <argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38">kstate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if<condition pos:start="15:7" pos:end="15:38">(<expr pos:start="15:8" pos:end="15:37"><name pos:start="15:8" pos:end="15:18"><name pos:start="15:8" pos:end="15:8">s</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:18">keyframe</name></name> <operator pos:start="15:20" pos:end="15:21">||</operator> <name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:37">always_reset</name></name></expr>)</condition><block pos:start="15:39" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:30">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:22">reset_contexts</name><argument_list pos:start="17:23" pos:end="17:25">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="27:30"><expr pos:start="19:9" pos:end="27:29"><name pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:37">spatial_decomposition_type</name></name><operator pos:start="19:38" pos:end="19:38">=</operator>

        <name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">qlog</name></name><operator pos:start="21:16" pos:end="21:16">=</operator>

        <name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">qbias</name></name><operator pos:start="23:17" pos:end="23:17">=</operator>

        <name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">mv_scale</name></name><operator pos:start="25:20" pos:end="25:20">=</operator>

        <name pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:26">block_max_depth</name></name><operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="77:5"><if pos:start="31:5" pos:end="77:5">if<condition pos:start="31:7" pos:end="31:19">(<expr pos:start="31:8" pos:end="31:18"><name pos:start="31:8" pos:end="31:18"><name pos:start="31:8" pos:end="31:8">s</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:18">keyframe</name></name></expr>)</condition><block pos:start="31:20" pos:end="77:5">{<block_content pos:start="33:9" pos:end="75:24">

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">version</name></name><operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:57"><name pos:start="33:21" pos:end="33:30">get_symbol</name><argument_list pos:start="33:31" pos:end="33:57">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:36"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:36">c</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:53"><expr pos:start="33:39" pos:end="33:53"><name pos:start="33:39" pos:end="33:53"><name pos:start="33:39" pos:end="33:39">s</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:53">header_state</name></name></expr></argument>, <argument pos:start="33:56" pos:end="33:56"><expr pos:start="33:56" pos:end="33:56"><literal type="number" pos:start="33:56" pos:end="33:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if<condition pos:start="35:11" pos:end="35:24">(<expr pos:start="35:12" pos:end="35:23"><name pos:start="35:12" pos:end="35:21"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:21">version</name></name><operator pos:start="35:22" pos:end="35:22">&gt;</operator><literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition><block pos:start="35:25" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:22">

            <expr_stmt pos:start="37:13" pos:end="37:83"><expr pos:start="37:13" pos:end="37:82"><call pos:start="37:13" pos:end="37:82"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:82">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">avctx</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><name pos:start="37:30" pos:end="37:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:44" pos:end="37:69"><expr pos:start="37:44" pos:end="37:69"><literal type="string" pos:start="37:44" pos:end="37:69">"version %d not supported"</literal></expr></argument>, <argument pos:start="37:72" pos:end="37:81"><expr pos:start="37:72" pos:end="37:81"><name pos:start="37:72" pos:end="37:81"><name pos:start="37:72" pos:end="37:72">s</name><operator pos:start="37:73" pos:end="37:74">-&gt;</operator><name pos:start="37:75" pos:end="37:81">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:23">always_reset</name></name><operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:56"><name pos:start="43:26" pos:end="43:32">get_rac</name><argument_list pos:start="43:33" pos:end="43:56">(<argument pos:start="43:34" pos:end="43:38"><expr pos:start="43:34" pos:end="43:38"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:38"><name pos:start="43:35" pos:end="43:35">s</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:38">c</name></name></expr></argument>, <argument pos:start="43:41" pos:end="43:55"><expr pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:41">s</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:55">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:78"><expr pos:start="45:9" pos:end="45:77"><name pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:38">temporal_decomposition_type</name></name><operator pos:start="45:39" pos:end="45:39">=</operator> <call pos:start="45:41" pos:end="45:77"><name pos:start="45:41" pos:end="45:50">get_symbol</name><argument_list pos:start="45:51" pos:end="45:77">(<argument pos:start="45:52" pos:end="45:56"><expr pos:start="45:52" pos:end="45:56"><operator pos:start="45:52" pos:end="45:52">&amp;</operator><name pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:53">s</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:56">c</name></name></expr></argument>, <argument pos:start="45:59" pos:end="45:73"><expr pos:start="45:59" pos:end="45:73"><name pos:start="45:59" pos:end="45:73"><name pos:start="45:59" pos:end="45:59">s</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:73">header_state</name></name></expr></argument>, <argument pos:start="45:76" pos:end="45:76"><expr pos:start="45:76" pos:end="45:76"><literal type="number" pos:start="45:76" pos:end="45:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:79"><expr pos:start="47:9" pos:end="47:78"><name pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:39">temporal_decomposition_count</name></name><operator pos:start="47:40" pos:end="47:40">=</operator> <call pos:start="47:42" pos:end="47:78"><name pos:start="47:42" pos:end="47:51">get_symbol</name><argument_list pos:start="47:52" pos:end="47:78">(<argument pos:start="47:53" pos:end="47:57"><expr pos:start="47:53" pos:end="47:57"><operator pos:start="47:53" pos:end="47:53">&amp;</operator><name pos:start="47:54" pos:end="47:57"><name pos:start="47:54" pos:end="47:54">s</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:57">c</name></name></expr></argument>, <argument pos:start="47:60" pos:end="47:74"><expr pos:start="47:60" pos:end="47:74"><name pos:start="47:60" pos:end="47:74"><name pos:start="47:60" pos:end="47:60">s</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:74">header_state</name></name></expr></argument>, <argument pos:start="47:77" pos:end="47:77"><expr pos:start="47:77" pos:end="47:77"><literal type="number" pos:start="47:77" pos:end="47:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:78"><expr pos:start="49:9" pos:end="49:77"><name pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:38">spatial_decomposition_count</name></name><operator pos:start="49:39" pos:end="49:39">=</operator> <call pos:start="49:41" pos:end="49:77"><name pos:start="49:41" pos:end="49:50">get_symbol</name><argument_list pos:start="49:51" pos:end="49:77">(<argument pos:start="49:52" pos:end="49:56"><expr pos:start="49:52" pos:end="49:56"><operator pos:start="49:52" pos:end="49:52">&amp;</operator><name pos:start="49:53" pos:end="49:56"><name pos:start="49:53" pos:end="49:53">s</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:56">c</name></name></expr></argument>, <argument pos:start="49:59" pos:end="49:73"><expr pos:start="49:59" pos:end="49:73"><name pos:start="49:59" pos:end="49:73"><name pos:start="49:59" pos:end="49:59">s</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:73">header_state</name></name></expr></argument>, <argument pos:start="49:76" pos:end="49:76"><expr pos:start="49:76" pos:end="49:76"><literal type="number" pos:start="49:76" pos:end="49:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:66"><expr pos:start="51:9" pos:end="51:65"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:26">colorspace_type</name></name><operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:65"><name pos:start="51:29" pos:end="51:38">get_symbol</name><argument_list pos:start="51:39" pos:end="51:65">(<argument pos:start="51:40" pos:end="51:44"><expr pos:start="51:40" pos:end="51:44"><operator pos:start="51:40" pos:end="51:40">&amp;</operator><name pos:start="51:41" pos:end="51:44"><name pos:start="51:41" pos:end="51:41">s</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:44">c</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:61"><expr pos:start="51:47" pos:end="51:61"><name pos:start="51:47" pos:end="51:61"><name pos:start="51:47" pos:end="51:47">s</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:61">header_state</name></name></expr></argument>, <argument pos:start="51:64" pos:end="51:64"><expr pos:start="51:64" pos:end="51:64"><literal type="number" pos:start="51:64" pos:end="51:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:65"><expr pos:start="53:9" pos:end="53:64"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">chroma_h_shift</name></name><operator pos:start="53:26" pos:end="53:26">=</operator> <call pos:start="53:28" pos:end="53:64"><name pos:start="53:28" pos:end="53:37">get_symbol</name><argument_list pos:start="53:38" pos:end="53:64">(<argument pos:start="53:39" pos:end="53:43"><expr pos:start="53:39" pos:end="53:43"><operator pos:start="53:39" pos:end="53:39">&amp;</operator><name pos:start="53:40" pos:end="53:43"><name pos:start="53:40" pos:end="53:40">s</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:43">c</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:60"><expr pos:start="53:46" pos:end="53:60"><name pos:start="53:46" pos:end="53:60"><name pos:start="53:46" pos:end="53:46">s</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:60">header_state</name></name></expr></argument>, <argument pos:start="53:63" pos:end="53:63"><expr pos:start="53:63" pos:end="53:63"><literal type="number" pos:start="53:63" pos:end="53:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:65"><expr pos:start="55:9" pos:end="55:64"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:25">chroma_v_shift</name></name><operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:64"><name pos:start="55:28" pos:end="55:37">get_symbol</name><argument_list pos:start="55:38" pos:end="55:64">(<argument pos:start="55:39" pos:end="55:43"><expr pos:start="55:39" pos:end="55:43"><operator pos:start="55:39" pos:end="55:39">&amp;</operator><name pos:start="55:40" pos:end="55:43"><name pos:start="55:40" pos:end="55:40">s</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:43">c</name></name></expr></argument>, <argument pos:start="55:46" pos:end="55:60"><expr pos:start="55:46" pos:end="55:60"><name pos:start="55:46" pos:end="55:60"><name pos:start="55:46" pos:end="55:46">s</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:60">header_state</name></name></expr></argument>, <argument pos:start="55:63" pos:end="55:63"><expr pos:start="55:63" pos:end="55:63"><literal type="number" pos:start="55:63" pos:end="55:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:30">spatial_scalability</name></name><operator pos:start="57:31" pos:end="57:31">=</operator> <call pos:start="57:33" pos:end="57:63"><name pos:start="57:33" pos:end="57:39">get_rac</name><argument_list pos:start="57:40" pos:end="57:63">(<argument pos:start="57:41" pos:end="57:45"><expr pos:start="57:41" pos:end="57:45"><operator pos:start="57:41" pos:end="57:41">&amp;</operator><name pos:start="57:42" pos:end="57:45"><name pos:start="57:42" pos:end="57:42">s</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:45">c</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:62"><expr pos:start="57:48" pos:end="57:62"><name pos:start="57:48" pos:end="57:62"><name pos:start="57:48" pos:end="57:48">s</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:62">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="59:1" pos:end="59:63">//        s-&gt;rate_scalability= get_rac(&amp;s-&gt;c, s-&gt;header_state);</comment>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:11">tmp</name><operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:50"><name pos:start="61:14" pos:end="61:23">get_symbol</name><argument_list pos:start="61:24" pos:end="61:50">(<argument pos:start="61:25" pos:end="61:29"><expr pos:start="61:25" pos:end="61:29"><operator pos:start="61:25" pos:end="61:25">&amp;</operator><name pos:start="61:26" pos:end="61:29"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:29">c</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:46"><expr pos:start="61:32" pos:end="61:46"><name pos:start="61:32" pos:end="61:46"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:46">header_state</name></name></expr></argument>, <argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="61:51" pos:end="61:51">+</operator><literal type="number" pos:start="61:52" pos:end="61:52">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if<condition pos:start="63:11" pos:end="63:43">(<expr pos:start="63:12" pos:end="63:42"><name pos:start="63:12" pos:end="63:27"><name pos:start="63:12" pos:end="63:14">tmp</name> <argument_list type="generic" pos:start="63:16" pos:end="63:27">&lt; <argument pos:start="63:18" pos:end="63:25"><expr pos:start="63:18" pos:end="63:25"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal> <operator pos:start="63:20" pos:end="63:21">||</operator> <name pos:start="63:23" pos:end="63:25">tmp</name></expr></argument> &gt;</argument_list></name> <name pos:start="63:29" pos:end="63:42">MAX_REF_FRAMES</name></expr>)</condition><block pos:start="63:44" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:81"><expr pos:start="65:13" pos:end="65:80"><call pos:start="65:13" pos:end="65:80"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:80">(<argument pos:start="65:20" pos:end="65:27"><expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">avctx</name></name></expr></argument>, <argument pos:start="65:30" pos:end="65:41"><expr pos:start="65:30" pos:end="65:41"><name pos:start="65:30" pos:end="65:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:44" pos:end="65:74"><expr pos:start="65:44" pos:end="65:74"><literal type="string" pos:start="65:44" pos:end="65:74">"reference frame count is %d\n"</literal></expr></argument>, <argument pos:start="65:77" pos:end="65:79"><expr pos:start="65:77" pos:end="65:79"><name pos:start="65:77" pos:end="65:79">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:25">max_ref_frames</name></name><operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:30">tmp</name></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:24"><expr pos:start="75:9" pos:end="75:23"><call pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:20">decode_qlogs</name><argument_list pos:start="75:21" pos:end="75:23">(<argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><name pos:start="75:22" pos:end="75:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="129:5"><if pos:start="81:5" pos:end="129:5">if<condition pos:start="81:7" pos:end="81:20">(<expr pos:start="81:8" pos:end="81:19"><operator pos:start="81:8" pos:end="81:8">!</operator><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:19">keyframe</name></name></expr>)</condition><block pos:start="81:21" pos:end="129:5">{<block_content pos:start="83:9" pos:end="127:9">

        <if_stmt pos:start="83:9" pos:end="119:9"><if pos:start="83:9" pos:end="119:9">if<condition pos:start="83:11" pos:end="83:43">(<expr pos:start="83:12" pos:end="83:42"><call pos:start="83:12" pos:end="83:42"><name pos:start="83:12" pos:end="83:18">get_rac</name><argument_list pos:start="83:19" pos:end="83:42">(<argument pos:start="83:20" pos:end="83:24"><expr pos:start="83:20" pos:end="83:24"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:24">c</name></name></expr></argument>, <argument pos:start="83:27" pos:end="83:41"><expr pos:start="83:27" pos:end="83:41"><name pos:start="83:27" pos:end="83:41"><name pos:start="83:27" pos:end="83:27">s</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:41">header_state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="83:44" pos:end="119:9">{<block_content pos:start="85:13" pos:end="117:87">

            <for pos:start="85:13" pos:end="111:13">for<control pos:start="85:16" pos:end="85:60">(<init pos:start="85:17" pos:end="85:30"><expr pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:27">plane_index</name><operator pos:start="85:28" pos:end="85:28">=</operator><literal type="number" pos:start="85:29" pos:end="85:29">0</literal></expr>;</init> <condition pos:start="85:32" pos:end="85:45"><expr pos:start="85:32" pos:end="85:44"><name pos:start="85:32" pos:end="85:42">plane_index</name><operator pos:start="85:43" pos:end="85:43">&lt;</operator><literal type="number" pos:start="85:44" pos:end="85:44">2</literal></expr>;</condition> <incr pos:start="85:47" pos:end="85:59"><expr pos:start="85:47" pos:end="85:59"><name pos:start="85:47" pos:end="85:57">plane_index</name><operator pos:start="85:58" pos:end="85:59">++</operator></expr></incr>)</control><block pos:start="85:61" pos:end="111:13">{<block_content pos:start="87:17" pos:end="109:37">

                <decl_stmt pos:start="87:17" pos:end="87:36"><decl pos:start="87:17" pos:end="87:25"><type pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">int</name></type> <name pos:start="87:21" pos:end="87:25">htaps</name></decl>, <decl pos:start="87:28" pos:end="87:28"><type ref="prev" pos:start="87:17" pos:end="87:19"/><name pos:start="87:28" pos:end="87:28">i</name></decl>, <decl pos:start="87:31" pos:end="87:35"><type ref="prev" pos:start="87:17" pos:end="87:19"/><name pos:start="87:31" pos:end="87:33">sum</name><init pos:start="87:34" pos:end="87:35">=<expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="89:17" pos:end="89:49"><decl pos:start="89:17" pos:end="89:48"><type pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:21">Plane</name> <modifier pos:start="89:23" pos:end="89:23">*</modifier></type><name pos:start="89:24" pos:end="89:24">p</name><init pos:start="89:25" pos:end="89:48">= <expr pos:start="89:27" pos:end="89:48"><operator pos:start="89:27" pos:end="89:27">&amp;</operator><name pos:start="89:28" pos:end="89:48"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:35">plane</name><index pos:start="89:36" pos:end="89:48">[<expr pos:start="89:37" pos:end="89:47"><name pos:start="89:37" pos:end="89:47">plane_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:60"><expr pos:start="91:17" pos:end="91:59"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:17">p</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">diag_mc</name></name><operator pos:start="91:27" pos:end="91:27">=</operator> <call pos:start="91:29" pos:end="91:59"><name pos:start="91:29" pos:end="91:35">get_rac</name><argument_list pos:start="91:36" pos:end="91:59">(<argument pos:start="91:37" pos:end="91:41"><expr pos:start="91:37" pos:end="91:41"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:41"><name pos:start="91:38" pos:end="91:38">s</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:41">c</name></name></expr></argument>, <argument pos:start="91:44" pos:end="91:58"><expr pos:start="91:44" pos:end="91:58"><name pos:start="91:44" pos:end="91:58"><name pos:start="91:44" pos:end="91:44">s</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:58">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:67"><expr pos:start="93:17" pos:end="93:66"><name pos:start="93:17" pos:end="93:21">htaps</name><operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:60"><name pos:start="93:24" pos:end="93:33">get_symbol</name><argument_list pos:start="93:34" pos:end="93:60">(<argument pos:start="93:35" pos:end="93:39"><expr pos:start="93:35" pos:end="93:39"><operator pos:start="93:35" pos:end="93:35">&amp;</operator><name pos:start="93:36" pos:end="93:39"><name pos:start="93:36" pos:end="93:36">s</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:39">c</name></name></expr></argument>, <argument pos:start="93:42" pos:end="93:56"><expr pos:start="93:42" pos:end="93:56"><name pos:start="93:42" pos:end="93:56"><name pos:start="93:42" pos:end="93:42">s</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:56">header_state</name></name></expr></argument>, <argument pos:start="93:59" pos:end="93:59"><expr pos:start="93:59" pos:end="93:59"><literal type="number" pos:start="93:59" pos:end="93:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="93:61" pos:end="93:61">*</operator><literal type="number" pos:start="93:62" pos:end="93:64">2</literal> <operator pos:start="93:64" pos:end="93:64">+</operator> <literal type="number" pos:start="93:66" pos:end="93:66">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="95:17" pos:end="97:30"><if pos:start="95:17" pos:end="97:30">if<condition pos:start="95:19" pos:end="95:59">(<expr pos:start="95:20" pos:end="95:58"><operator pos:start="95:20" pos:end="95:20">(</operator><name pos:start="95:21" pos:end="95:28">unsigned</name><operator pos:start="95:29" pos:end="95:29">)</operator><name pos:start="95:30" pos:end="95:34">htaps</name> <operator pos:start="95:36" pos:end="95:36">&gt;</operator> <name pos:start="95:38" pos:end="95:46">HTAPS_MAX</name> <operator pos:start="95:48" pos:end="95:49">||</operator> <name pos:start="95:51" pos:end="95:55">htaps</name><operator pos:start="95:56" pos:end="95:57">==</operator><literal type="number" pos:start="95:58" pos:end="95:58">0</literal></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:30"><block_content pos:start="97:21" pos:end="97:30">

                    <return pos:start="97:21" pos:end="97:30">return <expr pos:start="97:28" pos:end="97:29"><operator pos:start="97:28" pos:end="97:28">-</operator><literal type="number" pos:start="97:29" pos:end="97:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:32"><expr pos:start="99:17" pos:end="99:31"><name pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:17">p</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:24">htaps</name></name><operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:31">htaps</name></expr>;</expr_stmt>

                <for pos:start="101:17" pos:end="107:17">for<control pos:start="101:20" pos:end="101:39">(<init pos:start="101:21" pos:end="101:31"><expr pos:start="101:21" pos:end="101:30"><name pos:start="101:21" pos:end="101:21">i</name><operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:28">htaps</name><operator pos:start="101:29" pos:end="101:29">/</operator><literal type="number" pos:start="101:30" pos:end="101:30">2</literal></expr>;</init> <condition pos:start="101:33" pos:end="101:34"><expr pos:start="101:33" pos:end="101:33"><name pos:start="101:33" pos:end="101:33">i</name></expr>;</condition> <incr pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:36">i</name><operator pos:start="101:37" pos:end="101:38">--</operator></expr></incr>)</control><block pos:start="101:40" pos:end="107:17">{<block_content pos:start="103:21" pos:end="105:40">

                    <expr_stmt pos:start="103:21" pos:end="103:86"><expr pos:start="103:21" pos:end="103:85"><name pos:start="103:21" pos:end="103:32"><name pos:start="103:21" pos:end="103:21">p</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:29">hcoeff</name><index pos:start="103:30" pos:end="103:32">[<expr pos:start="103:31" pos:end="103:31"><name pos:start="103:31" pos:end="103:31">i</name></expr>]</index></name><operator pos:start="103:33" pos:end="103:33">=</operator> <call pos:start="103:35" pos:end="103:71"><name pos:start="103:35" pos:end="103:44">get_symbol</name><argument_list pos:start="103:45" pos:end="103:71">(<argument pos:start="103:46" pos:end="103:50"><expr pos:start="103:46" pos:end="103:50"><operator pos:start="103:46" pos:end="103:46">&amp;</operator><name pos:start="103:47" pos:end="103:50"><name pos:start="103:47" pos:end="103:47">s</name><operator pos:start="103:48" pos:end="103:49">-&gt;</operator><name pos:start="103:50" pos:end="103:50">c</name></name></expr></argument>, <argument pos:start="103:53" pos:end="103:67"><expr pos:start="103:53" pos:end="103:67"><name pos:start="103:53" pos:end="103:67"><name pos:start="103:53" pos:end="103:53">s</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:67">header_state</name></name></expr></argument>, <argument pos:start="103:70" pos:end="103:70"><expr pos:start="103:70" pos:end="103:70"><literal type="number" pos:start="103:70" pos:end="103:70">0</literal></expr></argument>)</argument_list></call> <operator pos:start="103:73" pos:end="103:73">*</operator> <operator pos:start="103:75" pos:end="103:75">(</operator><literal type="number" pos:start="103:76" pos:end="103:77">1</literal><operator pos:start="103:77" pos:end="103:77">-</operator><literal type="number" pos:start="103:78" pos:end="103:78">2</literal><operator pos:start="103:79" pos:end="103:79">*</operator><operator pos:start="103:80" pos:end="103:80">(</operator><name pos:start="103:81" pos:end="103:81">i</name><operator pos:start="103:82" pos:end="103:82">&amp;</operator><literal type="number" pos:start="103:83" pos:end="103:83">1</literal><operator pos:start="103:84" pos:end="103:84">)</operator><operator pos:start="103:85" pos:end="103:85">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:40"><expr pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:23">sum</name> <operator pos:start="105:25" pos:end="105:26">+=</operator> <name pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:28">p</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:36">hcoeff</name><index pos:start="105:37" pos:end="105:39">[<expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:17">p</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:25">hcoeff</name><index pos:start="109:26" pos:end="109:28">[<expr pos:start="109:27" pos:end="109:27"><literal type="number" pos:start="109:27" pos:end="109:27">0</literal></expr>]</index></name><operator pos:start="109:29" pos:end="109:29">=</operator> <literal type="number" pos:start="109:31" pos:end="109:33">32</literal><operator pos:start="109:33" pos:end="109:33">-</operator><name pos:start="109:34" pos:end="109:36">sum</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="113:13" pos:end="113:53"><expr pos:start="113:13" pos:end="113:52"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:20">plane</name><index pos:start="113:21" pos:end="113:23">[<expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">2</literal></expr>]</index></name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:31">diag_mc</name><operator pos:start="113:32" pos:end="113:32">=</operator> <name pos:start="113:34" pos:end="113:44"><name pos:start="113:34" pos:end="113:34">s</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:41">plane</name><index pos:start="113:42" pos:end="113:44">[<expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">1</literal></expr>]</index></name><operator pos:start="113:45" pos:end="113:45">.</operator><name pos:start="113:46" pos:end="113:52">diag_mc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:51"><expr pos:start="115:13" pos:end="115:50"><name pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:20">plane</name><index pos:start="115:21" pos:end="115:23">[<expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">2</literal></expr>]</index></name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:29">htaps</name>  <operator pos:start="115:32" pos:end="115:32">=</operator> <name pos:start="115:34" pos:end="115:44"><name pos:start="115:34" pos:end="115:34">s</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:41">plane</name><index pos:start="115:42" pos:end="115:44">[<expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">1</literal></expr>]</index></name><operator pos:start="115:45" pos:end="115:45">.</operator><name pos:start="115:46" pos:end="115:50">htaps</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:87"><expr pos:start="117:13" pos:end="117:86"><call pos:start="117:13" pos:end="117:86"><name pos:start="117:13" pos:end="117:18">memcpy</name><argument_list pos:start="117:19" pos:end="117:86">(<argument pos:start="117:20" pos:end="117:37"><expr pos:start="117:20" pos:end="117:37"><name pos:start="117:20" pos:end="117:30"><name pos:start="117:20" pos:end="117:20">s</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:27">plane</name><index pos:start="117:28" pos:end="117:30">[<expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">2</literal></expr>]</index></name><operator pos:start="117:31" pos:end="117:31">.</operator><name pos:start="117:32" pos:end="117:37">hcoeff</name></expr></argument>, <argument pos:start="117:40" pos:end="117:57"><expr pos:start="117:40" pos:end="117:57"><name pos:start="117:40" pos:end="117:50"><name pos:start="117:40" pos:end="117:40">s</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:47">plane</name><index pos:start="117:48" pos:end="117:50">[<expr pos:start="117:49" pos:end="117:49"><literal type="number" pos:start="117:49" pos:end="117:49">1</literal></expr>]</index></name><operator pos:start="117:51" pos:end="117:51">.</operator><name pos:start="117:52" pos:end="117:57">hcoeff</name></expr></argument>, <argument pos:start="117:60" pos:end="117:85"><expr pos:start="117:60" pos:end="117:85"><sizeof pos:start="117:60" pos:end="117:85">sizeof<argument_list pos:start="117:66" pos:end="117:85">(<argument pos:start="117:67" pos:end="117:84"><expr pos:start="117:67" pos:end="117:84"><name pos:start="117:67" pos:end="117:77"><name pos:start="117:67" pos:end="117:67">s</name><operator pos:start="117:68" pos:end="117:69">-&gt;</operator><name pos:start="117:70" pos:end="117:74">plane</name><index pos:start="117:75" pos:end="117:77">[<expr pos:start="117:76" pos:end="117:76"><literal type="number" pos:start="117:76" pos:end="117:76">1</literal></expr>]</index></name><operator pos:start="117:78" pos:end="117:78">.</operator><name pos:start="117:79" pos:end="117:84">hcoeff</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if<condition pos:start="121:11" pos:end="121:43">(<expr pos:start="121:12" pos:end="121:42"><call pos:start="121:12" pos:end="121:42"><name pos:start="121:12" pos:end="121:18">get_rac</name><argument_list pos:start="121:19" pos:end="121:42">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><operator pos:start="121:20" pos:end="121:20">&amp;</operator><name pos:start="121:21" pos:end="121:24"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:24">c</name></name></expr></argument>, <argument pos:start="121:27" pos:end="121:41"><expr pos:start="121:27" pos:end="121:41"><name pos:start="121:27" pos:end="121:41"><name pos:start="121:27" pos:end="121:27">s</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:41">header_state</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="121:44" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:28">

            <expr_stmt pos:start="123:13" pos:end="123:82"><expr pos:start="123:13" pos:end="123:81"><name pos:start="123:13" pos:end="123:42"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:42">spatial_decomposition_count</name></name><operator pos:start="123:43" pos:end="123:43">=</operator> <call pos:start="123:45" pos:end="123:81"><name pos:start="123:45" pos:end="123:54">get_symbol</name><argument_list pos:start="123:55" pos:end="123:81">(<argument pos:start="123:56" pos:end="123:60"><expr pos:start="123:56" pos:end="123:60"><operator pos:start="123:56" pos:end="123:56">&amp;</operator><name pos:start="123:57" pos:end="123:60"><name pos:start="123:57" pos:end="123:57">s</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:60">c</name></name></expr></argument>, <argument pos:start="123:63" pos:end="123:77"><expr pos:start="123:63" pos:end="123:77"><name pos:start="123:63" pos:end="123:77"><name pos:start="123:63" pos:end="123:63">s</name><operator pos:start="123:64" pos:end="123:65">-&gt;</operator><name pos:start="123:66" pos:end="123:77">header_state</name></name></expr></argument>, <argument pos:start="123:80" pos:end="123:80"><expr pos:start="123:80" pos:end="123:80"><literal type="number" pos:start="123:80" pos:end="123:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:28"><expr pos:start="125:13" pos:end="125:27"><call pos:start="125:13" pos:end="125:27"><name pos:start="125:13" pos:end="125:24">decode_qlogs</name><argument_list pos:start="125:25" pos:end="125:27">(<argument pos:start="125:26" pos:end="125:26"><expr pos:start="125:26" pos:end="125:26"><name pos:start="125:26" pos:end="125:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:74"><expr pos:start="133:5" pos:end="133:73"><name pos:start="133:5" pos:end="133:33"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:33">spatial_decomposition_type</name></name><operator pos:start="133:34" pos:end="133:35">+=</operator> <call pos:start="133:37" pos:end="133:73"><name pos:start="133:37" pos:end="133:46">get_symbol</name><argument_list pos:start="133:47" pos:end="133:73">(<argument pos:start="133:48" pos:end="133:52"><expr pos:start="133:48" pos:end="133:52"><operator pos:start="133:48" pos:end="133:48">&amp;</operator><name pos:start="133:49" pos:end="133:52"><name pos:start="133:49" pos:end="133:49">s</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:52">c</name></name></expr></argument>, <argument pos:start="133:55" pos:end="133:69"><expr pos:start="133:55" pos:end="133:69"><name pos:start="133:55" pos:end="133:69"><name pos:start="133:55" pos:end="133:55">s</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:69">header_state</name></name></expr></argument>, <argument pos:start="133:72" pos:end="133:72"><expr pos:start="133:72" pos:end="133:72"><literal type="number" pos:start="133:72" pos:end="133:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="141:5"><if pos:start="135:5" pos:end="141:5">if<condition pos:start="135:7" pos:end="135:41">(<expr pos:start="135:8" pos:end="135:40"><name pos:start="135:8" pos:end="135:36"><name pos:start="135:8" pos:end="135:8">s</name><operator pos:start="135:9" pos:end="135:10">-&gt;</operator><name pos:start="135:11" pos:end="135:36">spatial_decomposition_type</name></name> <operator pos:start="135:38" pos:end="135:38">&gt;</operator> <literal type="number" pos:start="135:40" pos:end="135:40">1</literal></expr>)</condition><block pos:start="135:42" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:18">

        <expr_stmt pos:start="137:9" pos:end="137:117"><expr pos:start="137:9" pos:end="137:116"><call pos:start="137:9" pos:end="137:116"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:116">(<argument pos:start="137:16" pos:end="137:23"><expr pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">avctx</name></name></expr></argument>, <argument pos:start="137:26" pos:end="137:37"><expr pos:start="137:26" pos:end="137:37"><name pos:start="137:26" pos:end="137:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:40" pos:end="137:84"><expr pos:start="137:40" pos:end="137:84"><literal type="string" pos:start="137:40" pos:end="137:84">"spatial_decomposition_type %d not supported"</literal></expr></argument>, <argument pos:start="137:87" pos:end="137:115"><expr pos:start="137:87" pos:end="137:115"><name pos:start="137:87" pos:end="137:115"><name pos:start="137:87" pos:end="137:87">s</name><operator pos:start="137:88" pos:end="137:89">-&gt;</operator><name pos:start="137:90" pos:end="137:115">spatial_decomposition_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="139:9" pos:end="139:18">return <expr pos:start="139:16" pos:end="139:17"><operator pos:start="139:16" pos:end="139:16">-</operator><literal type="number" pos:start="139:17" pos:end="139:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:63"><expr pos:start="145:5" pos:end="145:62"><name pos:start="145:5" pos:end="145:11"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:11">qlog</name></name>           <operator pos:start="145:23" pos:end="145:24">+=</operator> <call pos:start="145:26" pos:end="145:62"><name pos:start="145:26" pos:end="145:35">get_symbol</name><argument_list pos:start="145:36" pos:end="145:62">(<argument pos:start="145:37" pos:end="145:41"><expr pos:start="145:37" pos:end="145:41"><operator pos:start="145:37" pos:end="145:37">&amp;</operator><name pos:start="145:38" pos:end="145:41"><name pos:start="145:38" pos:end="145:38">s</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:41">c</name></name></expr></argument>, <argument pos:start="145:44" pos:end="145:58"><expr pos:start="145:44" pos:end="145:58"><name pos:start="145:44" pos:end="145:58"><name pos:start="145:44" pos:end="145:44">s</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:58">header_state</name></name></expr></argument>, <argument pos:start="145:61" pos:end="145:61"><expr pos:start="145:61" pos:end="145:61"><literal type="number" pos:start="145:61" pos:end="145:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:63"><expr pos:start="147:5" pos:end="147:62"><name pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:15">mv_scale</name></name>       <operator pos:start="147:23" pos:end="147:24">+=</operator> <call pos:start="147:26" pos:end="147:62"><name pos:start="147:26" pos:end="147:35">get_symbol</name><argument_list pos:start="147:36" pos:end="147:62">(<argument pos:start="147:37" pos:end="147:41"><expr pos:start="147:37" pos:end="147:41"><operator pos:start="147:37" pos:end="147:37">&amp;</operator><name pos:start="147:38" pos:end="147:41"><name pos:start="147:38" pos:end="147:38">s</name><operator pos:start="147:39" pos:end="147:40">-&gt;</operator><name pos:start="147:41" pos:end="147:41">c</name></name></expr></argument>, <argument pos:start="147:44" pos:end="147:58"><expr pos:start="147:44" pos:end="147:58"><name pos:start="147:44" pos:end="147:58"><name pos:start="147:44" pos:end="147:44">s</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:58">header_state</name></name></expr></argument>, <argument pos:start="147:61" pos:end="147:61"><expr pos:start="147:61" pos:end="147:61"><literal type="number" pos:start="147:61" pos:end="147:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:63"><expr pos:start="149:5" pos:end="149:62"><name pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:12">qbias</name></name>          <operator pos:start="149:23" pos:end="149:24">+=</operator> <call pos:start="149:26" pos:end="149:62"><name pos:start="149:26" pos:end="149:35">get_symbol</name><argument_list pos:start="149:36" pos:end="149:62">(<argument pos:start="149:37" pos:end="149:41"><expr pos:start="149:37" pos:end="149:41"><operator pos:start="149:37" pos:end="149:37">&amp;</operator><name pos:start="149:38" pos:end="149:41"><name pos:start="149:38" pos:end="149:38">s</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:41">c</name></name></expr></argument>, <argument pos:start="149:44" pos:end="149:58"><expr pos:start="149:44" pos:end="149:58"><name pos:start="149:44" pos:end="149:58"><name pos:start="149:44" pos:end="149:44">s</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:58">header_state</name></name></expr></argument>, <argument pos:start="149:61" pos:end="149:61"><expr pos:start="149:61" pos:end="149:61"><literal type="number" pos:start="149:61" pos:end="149:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:63"><expr pos:start="151:5" pos:end="151:62"><name pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:22">block_max_depth</name></name><operator pos:start="151:23" pos:end="151:24">+=</operator> <call pos:start="151:26" pos:end="151:62"><name pos:start="151:26" pos:end="151:35">get_symbol</name><argument_list pos:start="151:36" pos:end="151:62">(<argument pos:start="151:37" pos:end="151:41"><expr pos:start="151:37" pos:end="151:41"><operator pos:start="151:37" pos:end="151:37">&amp;</operator><name pos:start="151:38" pos:end="151:41"><name pos:start="151:38" pos:end="151:38">s</name><operator pos:start="151:39" pos:end="151:40">-&gt;</operator><name pos:start="151:41" pos:end="151:41">c</name></name></expr></argument>, <argument pos:start="151:44" pos:end="151:58"><expr pos:start="151:44" pos:end="151:58"><name pos:start="151:44" pos:end="151:58"><name pos:start="151:44" pos:end="151:44">s</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:58">header_state</name></name></expr></argument>, <argument pos:start="151:61" pos:end="151:61"><expr pos:start="151:61" pos:end="151:61"><literal type="number" pos:start="151:61" pos:end="151:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="161:5"><if pos:start="153:5" pos:end="161:5">if<condition pos:start="153:7" pos:end="153:56">(<expr pos:start="153:8" pos:end="153:55"><name pos:start="153:8" pos:end="153:25"><name pos:start="153:8" pos:end="153:8">s</name><operator pos:start="153:9" pos:end="153:10">-&gt;</operator><name pos:start="153:11" pos:end="153:25">block_max_depth</name></name> <operator pos:start="153:27" pos:end="153:27">&gt;</operator> <literal type="number" pos:start="153:29" pos:end="153:29">1</literal> <operator pos:start="153:31" pos:end="153:32">||</operator> <name pos:start="153:34" pos:end="153:51"><name pos:start="153:34" pos:end="153:34">s</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:51">block_max_depth</name></name> <operator pos:start="153:53" pos:end="153:53">&lt;</operator> <literal type="number" pos:start="153:55" pos:end="153:55">0</literal></expr>)</condition><block pos:start="153:57" pos:end="161:5">{<block_content pos:start="155:9" pos:end="159:18">

        <expr_stmt pos:start="155:9" pos:end="155:95"><expr pos:start="155:9" pos:end="155:94"><call pos:start="155:9" pos:end="155:94"><name pos:start="155:9" pos:end="155:14">av_log</name><argument_list pos:start="155:15" pos:end="155:94">(<argument pos:start="155:16" pos:end="155:23"><expr pos:start="155:16" pos:end="155:23"><name pos:start="155:16" pos:end="155:23"><name pos:start="155:16" pos:end="155:16">s</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:23">avctx</name></name></expr></argument>, <argument pos:start="155:26" pos:end="155:37"><expr pos:start="155:26" pos:end="155:37"><name pos:start="155:26" pos:end="155:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:40" pos:end="155:73"><expr pos:start="155:40" pos:end="155:73"><literal type="string" pos:start="155:40" pos:end="155:73">"block_max_depth= %d is too large"</literal></expr></argument>, <argument pos:start="155:76" pos:end="155:93"><expr pos:start="155:76" pos:end="155:93"><name pos:start="155:76" pos:end="155:93"><name pos:start="155:76" pos:end="155:76">s</name><operator pos:start="155:77" pos:end="155:78">-&gt;</operator><name pos:start="155:79" pos:end="155:93">block_max_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:26">block_max_depth</name></name><operator pos:start="157:27" pos:end="157:27">=</operator> <literal type="number" pos:start="157:29" pos:end="157:29">0</literal></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:18">return <expr pos:start="159:16" pos:end="159:17"><operator pos:start="159:16" pos:end="159:16">-</operator><literal type="number" pos:start="159:17" pos:end="159:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
