<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20236.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:36">qemu_co_queue_do_restart</name><parameter_list pos:start="1:37" pos:end="1:65">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:44">CoQueue</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">queue</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:57">bool</name></type> <name pos:start="1:59" pos:end="1:64">single</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:16">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">Coroutine</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CoQueueNextData</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">data</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:38">(<expr pos:start="11:9" pos:end="11:37"><call pos:start="11:9" pos:end="11:37"><name pos:start="11:9" pos:end="11:20">QTAILQ_EMPTY</name><argument_list pos:start="11:21" pos:end="11:37">(<argument pos:start="11:22" pos:end="11:36"><expr pos:start="11:22" pos:end="11:36"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:36"><name pos:start="11:23" pos:end="11:27">queue</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:36">entries</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:40" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:21">

        <return pos:start="13:9" pos:end="13:21">return <expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:8">data</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:39"><name pos:start="19:12" pos:end="19:22">g_slice_new</name><argument_list pos:start="19:23" pos:end="19:39">(<argument pos:start="19:24" pos:end="19:38"><expr pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:38">CoQueueNextData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:8">data</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:12">bh</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:66"><name pos:start="21:16" pos:end="21:25">aio_bh_new</name><argument_list pos:start="21:26" pos:end="21:66">(<argument pos:start="21:27" pos:end="21:36"><expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:31">queue</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:36">ctx</name></name></expr></argument>, <argument pos:start="21:39" pos:end="21:59"><expr pos:start="21:39" pos:end="21:59"><name pos:start="21:39" pos:end="21:59">qemu_co_queue_next_bh</name></expr></argument>, <argument pos:start="21:62" pos:end="21:65"><expr pos:start="21:62" pos:end="21:65"><name pos:start="21:62" pos:end="21:65">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:15">QTAILQ_INIT</name><argument_list pos:start="23:16" pos:end="23:31">(<argument pos:start="23:17" pos:end="23:30"><expr pos:start="23:17" pos:end="23:30"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:21">data</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:30">entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><call pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:20">qemu_bh_schedule</name><argument_list pos:start="25:21" pos:end="25:30">(<argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:25">data</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="43:5">while <condition pos:start="29:11" pos:end="29:58">(<expr pos:start="29:12" pos:end="29:57"><operator pos:start="29:12" pos:end="29:12">(</operator><name pos:start="29:13" pos:end="29:16">next</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:48"><name pos:start="29:20" pos:end="29:31">QTAILQ_FIRST</name><argument_list pos:start="29:32" pos:end="29:48">(<argument pos:start="29:33" pos:end="29:47"><expr pos:start="29:33" pos:end="29:47"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:47"><name pos:start="29:34" pos:end="29:38">queue</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:47">entries</name></name></expr></argument>)</argument_list></call><operator pos:start="29:49" pos:end="29:49">)</operator> <operator pos:start="29:51" pos:end="29:52">!=</operator> <name pos:start="29:54" pos:end="29:57">NULL</name></expr>)</condition> <block pos:start="29:60" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:9">

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><call pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:21">QTAILQ_REMOVE</name><argument_list pos:start="31:22" pos:end="31:59">(<argument pos:start="31:23" pos:end="31:37"><expr pos:start="31:23" pos:end="31:37"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:37"><name pos:start="31:24" pos:end="31:28">queue</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:37">entries</name></name></expr></argument>, <argument pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:43">next</name></expr></argument>, <argument pos:start="31:46" pos:end="31:58"><expr pos:start="31:46" pos:end="31:58"><name pos:start="31:46" pos:end="31:58">co_queue_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:64"><expr pos:start="33:9" pos:end="33:63"><call pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="33:27" pos:end="33:63">(<argument pos:start="33:28" pos:end="33:41"><expr pos:start="33:28" pos:end="33:41"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:41"><name pos:start="33:29" pos:end="33:32">data</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:41">entries</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:47"><expr pos:start="33:44" pos:end="33:47"><name pos:start="33:44" pos:end="33:47">next</name></expr></argument>, <argument pos:start="33:50" pos:end="33:62"><expr pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:62">co_queue_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><call pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:32">trace_qemu_co_queue_next</name><argument_list pos:start="35:33" pos:end="35:38">(<argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:19">(<expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:18">single</name></expr>)</condition> <block pos:start="37:21" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="45:5" pos:end="45:16">return <expr pos:start="45:12" pos:end="45:15"><name pos:start="45:12" pos:end="45:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
