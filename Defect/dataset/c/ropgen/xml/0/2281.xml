<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2281.c" pos:tabs="8"><function pos:start="1:1" pos:end="265:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">do_drive_backup</name><parameter_list pos:start="1:28" pos:end="21:59">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">job_id</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">device</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:46">target</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:52">bool</name></type> <name pos:start="3:54" pos:end="3:63">has_format</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:46"><decl pos:start="5:29" pos:end="5:46"><type pos:start="5:29" pos:end="5:46"><specifier pos:start="5:29" pos:end="5:33">const</specifier> <name pos:start="5:35" pos:end="5:38">char</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:46">format</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:72"><decl pos:start="5:49" pos:end="5:72"><type pos:start="5:49" pos:end="5:72"><name pos:start="5:49" pos:end="5:67"><name pos:start="5:49" pos:end="5:52">enum</name> <name pos:start="5:54" pos:end="5:67">MirrorSyncMode</name></name></type> <name pos:start="5:69" pos:end="5:72">sync</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:41"><decl pos:start="7:29" pos:end="7:41"><type pos:start="7:29" pos:end="7:41"><name pos:start="7:29" pos:end="7:32">bool</name></type> <name pos:start="7:34" pos:end="7:41">has_mode</name></decl></parameter>, <parameter pos:start="7:44" pos:end="7:65"><decl pos:start="7:44" pos:end="7:65"><type pos:start="7:44" pos:end="7:65"><name pos:start="7:44" pos:end="7:60"><name pos:start="7:44" pos:end="7:47">enum</name> <name pos:start="7:49" pos:end="7:60">NewImageMode</name></name></type> <name pos:start="7:62" pos:end="7:65">mode</name></decl></parameter>,

                            <parameter pos:start="9:29" pos:end="9:42"><decl pos:start="9:29" pos:end="9:42"><type pos:start="9:29" pos:end="9:42"><name pos:start="9:29" pos:end="9:32">bool</name></type> <name pos:start="9:34" pos:end="9:42">has_speed</name></decl></parameter>, <parameter pos:start="9:45" pos:end="9:57"><decl pos:start="9:45" pos:end="9:57"><type pos:start="9:45" pos:end="9:57"><name pos:start="9:45" pos:end="9:51">int64_t</name></type> <name pos:start="9:53" pos:end="9:57">speed</name></decl></parameter>,

                            <parameter pos:start="11:29" pos:end="11:43"><decl pos:start="11:29" pos:end="11:43"><type pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:32">bool</name></type> <name pos:start="11:34" pos:end="11:43">has_bitmap</name></decl></parameter>, <parameter pos:start="11:46" pos:end="11:63"><decl pos:start="11:46" pos:end="11:63"><type pos:start="11:46" pos:end="11:63"><specifier pos:start="11:46" pos:end="11:50">const</specifier> <name pos:start="11:52" pos:end="11:55">char</name> <modifier pos:start="11:57" pos:end="11:57">*</modifier></type><name pos:start="11:58" pos:end="11:63">bitmap</name></decl></parameter>,

                            <parameter pos:start="13:29" pos:end="13:52"><decl pos:start="13:29" pos:end="13:52"><type pos:start="13:29" pos:end="13:52"><name pos:start="13:29" pos:end="13:32">bool</name></type> <name pos:start="13:34" pos:end="13:52">has_on_source_error</name></decl></parameter>,

                            <parameter pos:start="15:29" pos:end="15:59"><decl pos:start="15:29" pos:end="15:59"><type pos:start="15:29" pos:end="15:59"><name pos:start="15:29" pos:end="15:43">BlockdevOnError</name></type> <name pos:start="15:45" pos:end="15:59">on_source_error</name></decl></parameter>,

                            <parameter pos:start="17:29" pos:end="17:52"><decl pos:start="17:29" pos:end="17:52"><type pos:start="17:29" pos:end="17:52"><name pos:start="17:29" pos:end="17:32">bool</name></type> <name pos:start="17:34" pos:end="17:52">has_on_target_error</name></decl></parameter>,

                            <parameter pos:start="19:29" pos:end="19:59"><decl pos:start="19:29" pos:end="19:59"><type pos:start="19:29" pos:end="19:59"><name pos:start="19:29" pos:end="19:43">BlockdevOnError</name></type> <name pos:start="19:45" pos:end="19:59">on_target_error</name></decl></parameter>,

                            <parameter pos:start="21:29" pos:end="21:44"><decl pos:start="21:29" pos:end="21:44"><type pos:start="21:29" pos:end="21:44"><name pos:start="21:29" pos:end="21:39">BlockJobTxn</name> <modifier pos:start="21:41" pos:end="21:41">*</modifier></type><name pos:start="21:42" pos:end="21:44">txn</name></decl></parameter>, <parameter pos:start="21:47" pos:end="21:58"><decl pos:start="21:47" pos:end="21:58"><type pos:start="21:47" pos:end="21:58"><name pos:start="21:47" pos:end="21:51">Error</name> <modifier pos:start="21:53" pos:end="21:53">*</modifier><modifier pos:start="21:54" pos:end="21:54">*</modifier></type><name pos:start="21:55" pos:end="21:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="23:1" pos:end="265:1">{<block_content pos:start="25:5" pos:end="263:37">

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">BlockBackend</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:20">BlockDriverState</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:20">BlockDriverState</name> <modifier pos:start="29:22" pos:end="29:22">*</modifier></type><name pos:start="29:23" pos:end="29:31">target_bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:36"><decl pos:start="31:5" pos:end="31:35"><type pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:20">BlockDriverState</name> <modifier pos:start="31:22" pos:end="31:22">*</modifier></type><name pos:start="31:23" pos:end="31:28">source</name> <init pos:start="31:30" pos:end="31:35">= <expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:33"><decl pos:start="33:5" pos:end="33:32"><type pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:19">BdrvDirtyBitmap</name> <modifier pos:start="33:21" pos:end="33:21">*</modifier></type><name pos:start="33:22" pos:end="33:25">bmap</name> <init pos:start="33:27" pos:end="33:32">= <expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:28"><decl pos:start="35:5" pos:end="35:27"><type pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:14">AioContext</name> <modifier pos:start="35:16" pos:end="35:16">*</modifier></type><name pos:start="35:17" pos:end="35:27">aio_context</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:26"><decl pos:start="37:5" pos:end="37:25"><type pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:9">QDict</name> <modifier pos:start="37:11" pos:end="37:11">*</modifier></type><name pos:start="37:12" pos:end="37:18">options</name> <init pos:start="37:20" pos:end="37:25">= <expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:28"><decl pos:start="39:5" pos:end="39:27"><type pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:9">Error</name> <modifier pos:start="39:11" pos:end="39:11">*</modifier></type><name pos:start="39:12" pos:end="39:20">local_err</name> <init pos:start="39:22" pos:end="39:27">= <expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:14"><decl pos:start="41:5" pos:end="41:13"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:17"><decl pos:start="43:5" pos:end="43:16"><type pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:11">int64_t</name></type> <name pos:start="43:13" pos:end="43:16">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:18">has_speed</name></expr>)</condition> <block pos:start="47:21" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:18">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:13">speed</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:29">(<expr pos:start="53:9" pos:end="53:28"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:28">has_on_source_error</name></expr>)</condition> <block pos:start="53:31" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:51">

        <expr_stmt pos:start="55:9" pos:end="55:51"><expr pos:start="55:9" pos:end="55:50"><name pos:start="55:9" pos:end="55:23">on_source_error</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:29">(<expr pos:start="59:9" pos:end="59:28"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:28">has_on_target_error</name></expr>)</condition> <block pos:start="59:31" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:51">

        <expr_stmt pos:start="61:9" pos:end="61:51"><expr pos:start="61:9" pos:end="61:50"><name pos:start="61:9" pos:end="61:23">on_target_error</name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:17">has_mode</name></expr>)</condition> <block pos:start="65:20" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:45">

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:12">mode</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:44">NEW_IMAGE_MODE_ABSOLUTE_PATHS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:7">blk</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:29"><name pos:start="73:11" pos:end="73:21">blk_by_name</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:28"><expr pos:start="73:23" pos:end="73:28"><name pos:start="73:23" pos:end="73:28">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:13">(<expr pos:start="75:9" pos:end="75:12"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:12">blk</name></expr>)</condition> <block pos:start="75:15" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:15">

        <expr_stmt pos:start="77:9" pos:end="79:51"><expr pos:start="77:9" pos:end="79:50"><call pos:start="77:9" pos:end="79:50"><name pos:start="77:9" pos:end="77:17">error_set</name><argument_list pos:start="77:18" pos:end="79:50">(<argument pos:start="77:19" pos:end="77:22"><expr pos:start="77:19" pos:end="77:22"><name pos:start="77:19" pos:end="77:22">errp</name></expr></argument>, <argument pos:start="77:25" pos:end="77:52"><expr pos:start="77:25" pos:end="77:52"><name pos:start="77:25" pos:end="77:52">ERROR_CLASS_DEVICE_NOT_FOUND</name></expr></argument>,

                  <argument pos:start="79:19" pos:end="79:41"><expr pos:start="79:19" pos:end="79:41"><literal type="string" pos:start="79:19" pos:end="79:41">"Device '%s' not found"</literal></expr></argument>, <argument pos:start="79:44" pos:end="79:49"><expr pos:start="79:44" pos:end="79:49"><name pos:start="79:44" pos:end="79:49">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:43"><expr pos:start="87:5" pos:end="87:42"><name pos:start="87:5" pos:end="87:15">aio_context</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:42"><name pos:start="87:19" pos:end="87:37">blk_get_aio_context</name><argument_list pos:start="87:38" pos:end="87:42">(<argument pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:41">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:37"><expr pos:start="89:5" pos:end="89:36"><call pos:start="89:5" pos:end="89:36"><name pos:start="89:5" pos:end="89:23">aio_context_acquire</name><argument_list pos:start="89:24" pos:end="89:36">(<argument pos:start="89:25" pos:end="89:35"><expr pos:start="89:25" pos:end="89:35"><name pos:start="89:25" pos:end="89:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="95:40">/* Although backup_run has this check too, we need to use bs-&gt;drv below, so

     * do an early check redundantly. */</comment>

    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:31">(<expr pos:start="97:9" pos:end="97:30"><operator pos:start="97:9" pos:end="97:9">!</operator><call pos:start="97:10" pos:end="97:30"><name pos:start="97:10" pos:end="97:25">blk_is_available</name><argument_list pos:start="97:26" pos:end="97:30">(<argument pos:start="97:27" pos:end="97:29"><expr pos:start="97:27" pos:end="97:29"><name pos:start="97:27" pos:end="97:29">blk</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:33" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:17">

        <expr_stmt pos:start="99:9" pos:end="99:60"><expr pos:start="99:9" pos:end="99:59"><call pos:start="99:9" pos:end="99:59"><name pos:start="99:9" pos:end="99:18">error_setg</name><argument_list pos:start="99:19" pos:end="99:59">(<argument pos:start="99:20" pos:end="99:23"><expr pos:start="99:20" pos:end="99:23"><name pos:start="99:20" pos:end="99:23">errp</name></expr></argument>, <argument pos:start="99:26" pos:end="99:50"><expr pos:start="99:26" pos:end="99:50"><name pos:start="99:26" pos:end="99:50">QERR_DEVICE_HAS_NO_MEDIUM</name></expr></argument>, <argument pos:start="99:53" pos:end="99:58"><expr pos:start="99:53" pos:end="99:58"><name pos:start="99:53" pos:end="99:58">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="101:9" pos:end="101:17">goto <name pos:start="101:14" pos:end="101:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:6">bs</name> <operator pos:start="105:8" pos:end="105:8">=</operator> <call pos:start="105:10" pos:end="105:20"><name pos:start="105:10" pos:end="105:15">blk_bs</name><argument_list pos:start="105:16" pos:end="105:20">(<argument pos:start="105:17" pos:end="105:19"><expr pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:19">has_format</name></expr>)</condition> <block pos:start="109:22" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:79">

        <expr_stmt pos:start="111:9" pos:end="111:79"><expr pos:start="111:9" pos:end="111:78"><name pos:start="111:9" pos:end="111:14">format</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <ternary pos:start="111:18" pos:end="111:78"><condition pos:start="111:18" pos:end="111:50"><expr pos:start="111:18" pos:end="111:48"><name pos:start="111:18" pos:end="111:21">mode</name> <operator pos:start="111:23" pos:end="111:24">==</operator> <name pos:start="111:26" pos:end="111:48">NEW_IMAGE_MODE_EXISTING</name></expr> ?</condition><then pos:start="111:52" pos:end="111:55"> <expr pos:start="111:52" pos:end="111:55"><name pos:start="111:52" pos:end="111:55">NULL</name></expr> </then><else pos:start="111:57" pos:end="111:78">: <expr pos:start="111:59" pos:end="111:78"><name pos:start="111:59" pos:end="111:78"><name pos:start="111:59" pos:end="111:60">bs</name><operator pos:start="111:61" pos:end="111:62">-&gt;</operator><name pos:start="111:63" pos:end="111:65">drv</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:78">format_name</name></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="117:5" pos:end="117:46">/* Early check to avoid creating target */</comment>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:66">(<expr pos:start="119:9" pos:end="119:65"><call pos:start="119:9" pos:end="119:65"><name pos:start="119:9" pos:end="119:26">bdrv_op_is_blocked</name><argument_list pos:start="119:27" pos:end="119:65">(<argument pos:start="119:28" pos:end="119:29"><expr pos:start="119:28" pos:end="119:29"><name pos:start="119:28" pos:end="119:29">bs</name></expr></argument>, <argument pos:start="119:32" pos:end="119:58"><expr pos:start="119:32" pos:end="119:58"><name pos:start="119:32" pos:end="119:58">BLOCK_OP_TYPE_BACKUP_SOURCE</name></expr></argument>, <argument pos:start="119:61" pos:end="119:64"><expr pos:start="119:61" pos:end="119:64"><name pos:start="119:61" pos:end="119:64">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:68" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:17">

        <goto pos:start="121:9" pos:end="121:17">goto <name pos:start="121:14" pos:end="121:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:41"><expr pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:9">flags</name> <operator pos:start="127:11" pos:end="127:11">=</operator> <name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:14">bs</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:26">open_flags</name></name> <operator pos:start="127:28" pos:end="127:28">|</operator> <name pos:start="127:30" pos:end="127:40">BDRV_O_RDWR</name></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="133:20">/* See if we have a backing HD we can use to create our new image

     * on top of. */</comment>

    <if_stmt pos:start="135:5" pos:end="145:5"><if pos:start="135:5" pos:end="145:5">if <condition pos:start="135:8" pos:end="135:37">(<expr pos:start="135:9" pos:end="135:36"><name pos:start="135:9" pos:end="135:12">sync</name> <operator pos:start="135:14" pos:end="135:15">==</operator> <name pos:start="135:17" pos:end="135:36">MIRROR_SYNC_MODE_TOP</name></expr>)</condition> <block pos:start="135:39" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:9">

        <expr_stmt pos:start="137:9" pos:end="137:32"><expr pos:start="137:9" pos:end="137:31"><name pos:start="137:9" pos:end="137:14">source</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <call pos:start="137:18" pos:end="137:31"><name pos:start="137:18" pos:end="137:27">backing_bs</name><argument_list pos:start="137:28" pos:end="137:31">(<argument pos:start="137:29" pos:end="137:30"><expr pos:start="137:29" pos:end="137:30"><name pos:start="137:29" pos:end="137:30">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:20">(<expr pos:start="139:13" pos:end="139:19"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:19">source</name></expr>)</condition> <block pos:start="139:22" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:41">

            <expr_stmt pos:start="141:13" pos:end="141:41"><expr pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:16">sync</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <name pos:start="141:20" pos:end="141:40">MIRROR_SYNC_MODE_FULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:38">(<expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:12">sync</name> <operator pos:start="147:14" pos:end="147:15">==</operator> <name pos:start="147:17" pos:end="147:37">MIRROR_SYNC_MODE_NONE</name></expr>)</condition> <block pos:start="147:40" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:20">

        <expr_stmt pos:start="149:9" pos:end="149:20"><expr pos:start="149:9" pos:end="149:19"><name pos:start="149:9" pos:end="149:14">source</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:19">bs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:30"><expr pos:start="155:5" pos:end="155:29"><name pos:start="155:5" pos:end="155:8">size</name> <operator pos:start="155:10" pos:end="155:10">=</operator> <call pos:start="155:12" pos:end="155:29"><name pos:start="155:12" pos:end="155:25">bdrv_getlength</name><argument_list pos:start="155:26" pos:end="155:29">(<argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:17">(<expr pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:12">size</name> <operator pos:start="157:14" pos:end="157:14">&lt;</operator> <literal type="number" pos:start="157:16" pos:end="157:16">0</literal></expr>)</condition> <block pos:start="157:19" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:17">

        <expr_stmt pos:start="159:9" pos:end="159:63"><expr pos:start="159:9" pos:end="159:62"><call pos:start="159:9" pos:end="159:62"><name pos:start="159:9" pos:end="159:24">error_setg_errno</name><argument_list pos:start="159:25" pos:end="159:62">(<argument pos:start="159:26" pos:end="159:29"><expr pos:start="159:26" pos:end="159:29"><name pos:start="159:26" pos:end="159:29">errp</name></expr></argument>, <argument pos:start="159:32" pos:end="159:36"><expr pos:start="159:32" pos:end="159:36"><operator pos:start="159:32" pos:end="159:32">-</operator><name pos:start="159:33" pos:end="159:36">size</name></expr></argument>, <argument pos:start="159:39" pos:end="159:61"><expr pos:start="159:39" pos:end="159:61"><literal type="string" pos:start="159:39" pos:end="159:61">"bdrv_getlength failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:17">goto <name pos:start="161:14" pos:end="161:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="187:5"><if pos:start="167:5" pos:end="187:5">if <condition pos:start="167:8" pos:end="167:40">(<expr pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:12">mode</name> <operator pos:start="167:14" pos:end="167:15">!=</operator> <name pos:start="167:17" pos:end="167:39">NEW_IMAGE_MODE_EXISTING</name></expr>)</condition> <block pos:start="167:42" pos:end="187:5">{<block_content pos:start="169:9" pos:end="185:9">

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><call pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:14">assert</name><argument_list pos:start="169:15" pos:end="169:22">(<argument pos:start="169:16" pos:end="169:21"><expr pos:start="169:16" pos:end="169:21"><name pos:start="169:16" pos:end="169:21">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="185:9"><if pos:start="171:9" pos:end="179:9">if <condition pos:start="171:12" pos:end="171:19">(<expr pos:start="171:13" pos:end="171:18"><name pos:start="171:13" pos:end="171:18">source</name></expr>)</condition> <block pos:start="171:21" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:60">

            <expr_stmt pos:start="173:13" pos:end="177:60"><expr pos:start="173:13" pos:end="177:59"><call pos:start="173:13" pos:end="177:59"><name pos:start="173:13" pos:end="173:27">bdrv_img_create</name><argument_list pos:start="173:28" pos:end="177:59">(<argument pos:start="173:29" pos:end="173:34"><expr pos:start="173:29" pos:end="173:34"><name pos:start="173:29" pos:end="173:34">target</name></expr></argument>, <argument pos:start="173:37" pos:end="173:42"><expr pos:start="173:37" pos:end="173:42"><name pos:start="173:37" pos:end="173:42">format</name></expr></argument>, <argument pos:start="173:45" pos:end="173:60"><expr pos:start="173:45" pos:end="173:60"><name pos:start="173:45" pos:end="173:60"><name pos:start="173:45" pos:end="173:50">source</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:60">filename</name></name></expr></argument>,

                            <argument pos:start="175:29" pos:end="175:52"><expr pos:start="175:29" pos:end="175:52"><name pos:start="175:29" pos:end="175:52"><name pos:start="175:29" pos:end="175:34">source</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:39">drv</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:52">format_name</name></name></expr></argument>, <argument pos:start="175:55" pos:end="175:58"><expr pos:start="175:55" pos:end="175:58"><name pos:start="175:55" pos:end="175:58">NULL</name></expr></argument>,

                            <argument pos:start="177:29" pos:end="177:32"><expr pos:start="177:29" pos:end="177:32"><name pos:start="177:29" pos:end="177:32">size</name></expr></argument>, <argument pos:start="177:35" pos:end="177:39"><expr pos:start="177:35" pos:end="177:39"><name pos:start="177:35" pos:end="177:39">flags</name></expr></argument>, <argument pos:start="177:42" pos:end="177:51"><expr pos:start="177:42" pos:end="177:51"><operator pos:start="177:42" pos:end="177:42">&amp;</operator><name pos:start="177:43" pos:end="177:51">local_err</name></expr></argument>, <argument pos:start="177:54" pos:end="177:58"><expr pos:start="177:54" pos:end="177:58"><name pos:start="177:54" pos:end="177:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="185:9">else <block pos:start="179:16" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:60">

            <expr_stmt pos:start="181:13" pos:end="183:60"><expr pos:start="181:13" pos:end="183:59"><call pos:start="181:13" pos:end="183:59"><name pos:start="181:13" pos:end="181:27">bdrv_img_create</name><argument_list pos:start="181:28" pos:end="183:59">(<argument pos:start="181:29" pos:end="181:34"><expr pos:start="181:29" pos:end="181:34"><name pos:start="181:29" pos:end="181:34">target</name></expr></argument>, <argument pos:start="181:37" pos:end="181:42"><expr pos:start="181:37" pos:end="181:42"><name pos:start="181:37" pos:end="181:42">format</name></expr></argument>, <argument pos:start="181:45" pos:end="181:48"><expr pos:start="181:45" pos:end="181:48"><name pos:start="181:45" pos:end="181:48">NULL</name></expr></argument>, <argument pos:start="181:51" pos:end="181:54"><expr pos:start="181:51" pos:end="181:54"><name pos:start="181:51" pos:end="181:54">NULL</name></expr></argument>, <argument pos:start="181:57" pos:end="181:60"><expr pos:start="181:57" pos:end="181:60"><name pos:start="181:57" pos:end="181:60">NULL</name></expr></argument>,

                            <argument pos:start="183:29" pos:end="183:32"><expr pos:start="183:29" pos:end="183:32"><name pos:start="183:29" pos:end="183:32">size</name></expr></argument>, <argument pos:start="183:35" pos:end="183:39"><expr pos:start="183:35" pos:end="183:39"><name pos:start="183:35" pos:end="183:39">flags</name></expr></argument>, <argument pos:start="183:42" pos:end="183:51"><expr pos:start="183:42" pos:end="183:51"><operator pos:start="183:42" pos:end="183:42">&amp;</operator><name pos:start="183:43" pos:end="183:51">local_err</name></expr></argument>, <argument pos:start="183:54" pos:end="183:58"><expr pos:start="183:54" pos:end="183:58"><name pos:start="183:54" pos:end="183:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="197:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:18">(<expr pos:start="191:9" pos:end="191:17"><name pos:start="191:9" pos:end="191:17">local_err</name></expr>)</condition> <block pos:start="191:20" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:17">

        <expr_stmt pos:start="193:9" pos:end="193:41"><expr pos:start="193:9" pos:end="193:40"><call pos:start="193:9" pos:end="193:40"><name pos:start="193:9" pos:end="193:23">error_propagate</name><argument_list pos:start="193:24" pos:end="193:40">(<argument pos:start="193:25" pos:end="193:28"><expr pos:start="193:25" pos:end="193:28"><name pos:start="193:25" pos:end="193:28">errp</name></expr></argument>, <argument pos:start="193:31" pos:end="193:39"><expr pos:start="193:31" pos:end="193:39"><name pos:start="193:31" pos:end="193:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="195:9" pos:end="195:17">goto <name pos:start="195:14" pos:end="195:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="201:5" pos:end="207:5"><if pos:start="201:5" pos:end="207:5">if <condition pos:start="201:8" pos:end="201:15">(<expr pos:start="201:9" pos:end="201:14"><name pos:start="201:9" pos:end="201:14">format</name></expr>)</condition> <block pos:start="201:17" pos:end="207:5">{<block_content pos:start="203:9" pos:end="205:63">

        <expr_stmt pos:start="203:9" pos:end="203:30"><expr pos:start="203:9" pos:end="203:29"><name pos:start="203:9" pos:end="203:15">options</name> <operator pos:start="203:17" pos:end="203:17">=</operator> <call pos:start="203:19" pos:end="203:29"><name pos:start="203:19" pos:end="203:27">qdict_new</name><argument_list pos:start="203:28" pos:end="203:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:63"><expr pos:start="205:9" pos:end="205:62"><call pos:start="205:9" pos:end="205:62"><name pos:start="205:9" pos:end="205:17">qdict_put</name><argument_list pos:start="205:18" pos:end="205:62">(<argument pos:start="205:19" pos:end="205:25"><expr pos:start="205:19" pos:end="205:25"><name pos:start="205:19" pos:end="205:25">options</name></expr></argument>, <argument pos:start="205:28" pos:end="205:35"><expr pos:start="205:28" pos:end="205:35"><literal type="string" pos:start="205:28" pos:end="205:35">"driver"</literal></expr></argument>, <argument pos:start="205:38" pos:end="205:61"><expr pos:start="205:38" pos:end="205:61"><call pos:start="205:38" pos:end="205:61"><name pos:start="205:38" pos:end="205:53">qstring_from_str</name><argument_list pos:start="205:54" pos:end="205:61">(<argument pos:start="205:55" pos:end="205:60"><expr pos:start="205:55" pos:end="205:60"><name pos:start="205:55" pos:end="205:60">format</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:62"><expr pos:start="211:5" pos:end="211:61"><name pos:start="211:5" pos:end="211:13">target_bs</name> <operator pos:start="211:15" pos:end="211:15">=</operator> <call pos:start="211:17" pos:end="211:61"><name pos:start="211:17" pos:end="211:25">bdrv_open</name><argument_list pos:start="211:26" pos:end="211:61">(<argument pos:start="211:27" pos:end="211:32"><expr pos:start="211:27" pos:end="211:32"><name pos:start="211:27" pos:end="211:32">target</name></expr></argument>, <argument pos:start="211:35" pos:end="211:38"><expr pos:start="211:35" pos:end="211:38"><name pos:start="211:35" pos:end="211:38">NULL</name></expr></argument>, <argument pos:start="211:41" pos:end="211:47"><expr pos:start="211:41" pos:end="211:47"><name pos:start="211:41" pos:end="211:47">options</name></expr></argument>, <argument pos:start="211:50" pos:end="211:54"><expr pos:start="211:50" pos:end="211:54"><name pos:start="211:50" pos:end="211:54">flags</name></expr></argument>, <argument pos:start="211:57" pos:end="211:60"><expr pos:start="211:57" pos:end="211:60"><name pos:start="211:57" pos:end="211:60">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="213:5" pos:end="217:5"><if pos:start="213:5" pos:end="217:5">if <condition pos:start="213:8" pos:end="213:19">(<expr pos:start="213:9" pos:end="213:18"><operator pos:start="213:9" pos:end="213:9">!</operator><name pos:start="213:10" pos:end="213:18">target_bs</name></expr>)</condition> <block pos:start="213:21" pos:end="217:5">{<block_content pos:start="215:9" pos:end="215:17">

        <goto pos:start="215:9" pos:end="215:17">goto <name pos:start="215:14" pos:end="215:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="221:5" pos:end="221:49"><expr pos:start="221:5" pos:end="221:48"><call pos:start="221:5" pos:end="221:48"><name pos:start="221:5" pos:end="221:24">bdrv_set_aio_context</name><argument_list pos:start="221:25" pos:end="221:48">(<argument pos:start="221:26" pos:end="221:34"><expr pos:start="221:26" pos:end="221:34"><name pos:start="221:26" pos:end="221:34">target_bs</name></expr></argument>, <argument pos:start="221:37" pos:end="221:47"><expr pos:start="221:37" pos:end="221:47"><name pos:start="221:37" pos:end="221:47">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="225:5" pos:end="239:5"><if pos:start="225:5" pos:end="239:5">if <condition pos:start="225:8" pos:end="225:19">(<expr pos:start="225:9" pos:end="225:18"><name pos:start="225:9" pos:end="225:18">has_bitmap</name></expr>)</condition> <block pos:start="225:21" pos:end="239:5">{<block_content pos:start="227:9" pos:end="237:9">

        <expr_stmt pos:start="227:9" pos:end="227:50"><expr pos:start="227:9" pos:end="227:49"><name pos:start="227:9" pos:end="227:12">bmap</name> <operator pos:start="227:14" pos:end="227:14">=</operator> <call pos:start="227:16" pos:end="227:49"><name pos:start="227:16" pos:end="227:37">bdrv_find_dirty_bitmap</name><argument_list pos:start="227:38" pos:end="227:49">(<argument pos:start="227:39" pos:end="227:40"><expr pos:start="227:39" pos:end="227:40"><name pos:start="227:39" pos:end="227:40">bs</name></expr></argument>, <argument pos:start="227:43" pos:end="227:48"><expr pos:start="227:43" pos:end="227:48"><name pos:start="227:43" pos:end="227:48">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="237:9"><if pos:start="229:9" pos:end="237:9">if <condition pos:start="229:12" pos:end="229:18">(<expr pos:start="229:13" pos:end="229:17"><operator pos:start="229:13" pos:end="229:13">!</operator><name pos:start="229:14" pos:end="229:17">bmap</name></expr>)</condition> <block pos:start="229:20" pos:end="237:9">{<block_content pos:start="231:13" pos:end="235:21">

            <expr_stmt pos:start="231:13" pos:end="231:71"><expr pos:start="231:13" pos:end="231:70"><call pos:start="231:13" pos:end="231:70"><name pos:start="231:13" pos:end="231:22">error_setg</name><argument_list pos:start="231:23" pos:end="231:70">(<argument pos:start="231:24" pos:end="231:27"><expr pos:start="231:24" pos:end="231:27"><name pos:start="231:24" pos:end="231:27">errp</name></expr></argument>, <argument pos:start="231:30" pos:end="231:61"><expr pos:start="231:30" pos:end="231:61"><literal type="string" pos:start="231:30" pos:end="231:61">"Bitmap '%s' could not be found"</literal></expr></argument>, <argument pos:start="231:64" pos:end="231:69"><expr pos:start="231:64" pos:end="231:69"><name pos:start="231:64" pos:end="231:69">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:34"><expr pos:start="233:13" pos:end="233:33"><call pos:start="233:13" pos:end="233:33"><name pos:start="233:13" pos:end="233:22">bdrv_unref</name><argument_list pos:start="233:23" pos:end="233:33">(<argument pos:start="233:24" pos:end="233:32"><expr pos:start="233:24" pos:end="233:32"><name pos:start="233:24" pos:end="233:32">target_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="235:13" pos:end="235:21">goto <name pos:start="235:18" pos:end="235:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="243:5" pos:end="247:52"><expr pos:start="243:5" pos:end="247:51"><call pos:start="243:5" pos:end="247:51"><name pos:start="243:5" pos:end="243:16">backup_start</name><argument_list pos:start="243:17" pos:end="247:51">(<argument pos:start="243:18" pos:end="243:23"><expr pos:start="243:18" pos:end="243:23"><name pos:start="243:18" pos:end="243:23">job_id</name></expr></argument>, <argument pos:start="243:26" pos:end="243:27"><expr pos:start="243:26" pos:end="243:27"><name pos:start="243:26" pos:end="243:27">bs</name></expr></argument>, <argument pos:start="243:30" pos:end="243:38"><expr pos:start="243:30" pos:end="243:38"><name pos:start="243:30" pos:end="243:38">target_bs</name></expr></argument>, <argument pos:start="243:41" pos:end="243:45"><expr pos:start="243:41" pos:end="243:45"><name pos:start="243:41" pos:end="243:45">speed</name></expr></argument>, <argument pos:start="243:48" pos:end="243:51"><expr pos:start="243:48" pos:end="243:51"><name pos:start="243:48" pos:end="243:51">sync</name></expr></argument>, <argument pos:start="243:54" pos:end="243:57"><expr pos:start="243:54" pos:end="243:57"><name pos:start="243:54" pos:end="243:57">bmap</name></expr></argument>,

                 <argument pos:start="245:18" pos:end="245:32"><expr pos:start="245:18" pos:end="245:32"><name pos:start="245:18" pos:end="245:32">on_source_error</name></expr></argument>, <argument pos:start="245:35" pos:end="245:49"><expr pos:start="245:35" pos:end="245:49"><name pos:start="245:35" pos:end="245:49">on_target_error</name></expr></argument>,

                 <argument pos:start="247:18" pos:end="247:29"><expr pos:start="247:18" pos:end="247:29"><name pos:start="247:18" pos:end="247:29">block_job_cb</name></expr></argument>, <argument pos:start="247:32" pos:end="247:33"><expr pos:start="247:32" pos:end="247:33"><name pos:start="247:32" pos:end="247:33">bs</name></expr></argument>, <argument pos:start="247:36" pos:end="247:38"><expr pos:start="247:36" pos:end="247:38"><name pos:start="247:36" pos:end="247:38">txn</name></expr></argument>, <argument pos:start="247:41" pos:end="247:50"><expr pos:start="247:41" pos:end="247:50"><operator pos:start="247:41" pos:end="247:41">&amp;</operator><name pos:start="247:42" pos:end="247:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:26"><expr pos:start="249:5" pos:end="249:25"><call pos:start="249:5" pos:end="249:25"><name pos:start="249:5" pos:end="249:14">bdrv_unref</name><argument_list pos:start="249:15" pos:end="249:25">(<argument pos:start="249:16" pos:end="249:24"><expr pos:start="249:16" pos:end="249:24"><name pos:start="249:16" pos:end="249:24">target_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if <condition pos:start="251:8" pos:end="251:26">(<expr pos:start="251:9" pos:end="251:25"><name pos:start="251:9" pos:end="251:17">local_err</name> <operator pos:start="251:19" pos:end="251:20">!=</operator> <name pos:start="251:22" pos:end="251:25">NULL</name></expr>)</condition> <block pos:start="251:28" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:17">

        <expr_stmt pos:start="253:9" pos:end="253:41"><expr pos:start="253:9" pos:end="253:40"><call pos:start="253:9" pos:end="253:40"><name pos:start="253:9" pos:end="253:23">error_propagate</name><argument_list pos:start="253:24" pos:end="253:40">(<argument pos:start="253:25" pos:end="253:28"><expr pos:start="253:25" pos:end="253:28"><name pos:start="253:25" pos:end="253:28">errp</name></expr></argument>, <argument pos:start="253:31" pos:end="253:39"><expr pos:start="253:31" pos:end="253:39"><name pos:start="253:31" pos:end="253:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="255:9" pos:end="255:17">goto <name pos:start="255:14" pos:end="255:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



<label pos:start="261:1" pos:end="261:4"><name pos:start="261:1" pos:end="261:3">out</name>:</label>

    <expr_stmt pos:start="263:5" pos:end="263:37"><expr pos:start="263:5" pos:end="263:36"><call pos:start="263:5" pos:end="263:36"><name pos:start="263:5" pos:end="263:23">aio_context_release</name><argument_list pos:start="263:24" pos:end="263:36">(<argument pos:start="263:25" pos:end="263:35"><expr pos:start="263:25" pos:end="263:35"><name pos:start="263:25" pos:end="263:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
