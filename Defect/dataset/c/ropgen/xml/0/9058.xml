<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9058.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">PageCache</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:21">cache_init</name><parameter_list pos:start="1:22" pos:end="1:57">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:28">size_t</name></type> <name pos:start="1:30" pos:end="1:38">num_pages</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:46">size_t</name></type> <name pos:start="1:48" pos:end="1:56">page_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:17">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:13">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PageCache</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">cache</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:17">num_pages</name> <operator pos:start="13:19" pos:end="13:20">&lt;=</operator> <literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>)</condition> <block pos:start="13:25" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:15">DPRINTF</name><argument_list pos:start="15:16" pos:end="15:44">(<argument pos:start="15:17" pos:end="15:43"><expr pos:start="15:17" pos:end="15:43"><literal type="string" pos:start="15:17" pos:end="15:43">"invalid number of pages\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:54">/* We prefer not to abort if there is no memory */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:9">cache</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:24">g_try_malloc</name><argument_list pos:start="25:25" pos:end="25:40">(<argument pos:start="25:26" pos:end="25:39"><expr pos:start="25:26" pos:end="25:39"><sizeof pos:start="25:26" pos:end="25:39">sizeof<argument_list pos:start="25:32" pos:end="25:39">(<argument pos:start="25:33" pos:end="25:38"><expr pos:start="25:33" pos:end="25:38"><operator pos:start="25:33" pos:end="25:33">*</operator><name pos:start="25:34" pos:end="25:38">cache</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:14">cache</name></expr>)</condition> <block pos:start="27:17" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:20">

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><call pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:15">DPRINTF</name><argument_list pos:start="29:16" pos:end="29:45">(<argument pos:start="29:17" pos:end="29:44"><expr pos:start="29:17" pos:end="29:44"><literal type="string" pos:start="29:17" pos:end="29:44">"Failed to allocate cache\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:46">/* round down to the nearest power of 2 */</comment>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:34">(<expr pos:start="37:9" pos:end="37:33"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:33"><name pos:start="37:10" pos:end="37:22">is_power_of_2</name><argument_list pos:start="37:23" pos:end="37:33">(<argument pos:start="37:24" pos:end="37:32"><expr pos:start="37:24" pos:end="37:32"><name pos:start="37:24" pos:end="37:32">num_pages</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:36" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:61">

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:17">num_pages</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:29">pow2floor</name><argument_list pos:start="39:30" pos:end="39:40">(<argument pos:start="39:31" pos:end="39:39"><expr pos:start="39:31" pos:end="39:39"><name pos:start="39:31" pos:end="39:39">num_pages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:15">DPRINTF</name><argument_list pos:start="41:16" pos:end="41:60">(<argument pos:start="41:17" pos:end="41:48"><expr pos:start="41:17" pos:end="41:48"><literal type="string" pos:start="41:17" pos:end="41:36">"rounding down to %"</literal> <name pos:start="41:38" pos:end="41:43">PRId64</name> <literal type="string" pos:start="41:45" pos:end="41:48">"\n"</literal></expr></argument>, <argument pos:start="41:51" pos:end="41:59"><expr pos:start="41:51" pos:end="41:59"><name pos:start="41:51" pos:end="41:59">num_pages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:9">cache</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:20">page_size</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:32">page_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:9">cache</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">num_items</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:9">cache</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:24">max_num_items</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:36">num_pages</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:76"><expr pos:start="53:5" pos:end="53:75"><call pos:start="53:5" pos:end="53:75"><name pos:start="53:5" pos:end="53:11">DPRINTF</name><argument_list pos:start="53:12" pos:end="53:75">(<argument pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:52"><literal type="string" pos:start="53:13" pos:end="53:40">"Setting cache buckets to %"</literal> <name pos:start="53:42" pos:end="53:47">PRId64</name> <literal type="string" pos:start="53:49" pos:end="53:52">"\n"</literal></expr></argument>, <argument pos:start="53:55" pos:end="53:74"><expr pos:start="53:55" pos:end="53:74"><name pos:start="53:55" pos:end="53:74"><name pos:start="53:55" pos:end="53:59">cache</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:74">max_num_items</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:54">/* We prefer not to abort if there is no memory */</comment>

    <expr_stmt pos:start="59:5" pos:end="61:65"><expr pos:start="59:5" pos:end="61:64"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:9">cache</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">page_cache</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="61:64"><name pos:start="59:25" pos:end="59:36">g_try_malloc</name><argument_list pos:start="59:37" pos:end="61:64">(<argument pos:start="59:38" pos:end="61:63"><expr pos:start="59:38" pos:end="61:63"><operator pos:start="59:38" pos:end="59:38">(</operator><name pos:start="59:39" pos:end="59:58"><name pos:start="59:39" pos:end="59:43">cache</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:58">max_num_items</name></name><operator pos:start="59:59" pos:end="59:59">)</operator> <operator pos:start="59:61" pos:end="59:61">*</operator>

                                     <sizeof pos:start="61:38" pos:end="61:63">sizeof<argument_list pos:start="61:44" pos:end="61:63">(<argument pos:start="61:45" pos:end="61:62"><expr pos:start="61:45" pos:end="61:62"><operator pos:start="61:45" pos:end="61:45">*</operator><name pos:start="61:46" pos:end="61:62"><name pos:start="61:46" pos:end="61:50">cache</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:62">page_cache</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:27">(<expr pos:start="63:9" pos:end="63:26"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:26"><name pos:start="63:10" pos:end="63:14">cache</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:26">page_cache</name></name></expr>)</condition> <block pos:start="63:29" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:20">

        <expr_stmt pos:start="65:9" pos:end="65:58"><expr pos:start="65:9" pos:end="65:57"><call pos:start="65:9" pos:end="65:57"><name pos:start="65:9" pos:end="65:15">DPRINTF</name><argument_list pos:start="65:16" pos:end="65:57">(<argument pos:start="65:17" pos:end="65:56"><expr pos:start="65:17" pos:end="65:56"><literal type="string" pos:start="65:17" pos:end="65:56">"Failed to allocate cache-&gt;page_cache\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><call pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:14">g_free</name><argument_list pos:start="67:15" pos:end="67:21">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:20">return <expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="75:5" pos:end="83:5">for <control pos:start="75:9" pos:end="75:46">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:41"><expr pos:start="75:17" pos:end="75:40"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <name pos:start="75:21" pos:end="75:40"><name pos:start="75:21" pos:end="75:25">cache</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:40">max_num_items</name></name></expr>;</condition> <incr pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><name pos:start="75:43" pos:end="75:43">i</name><operator pos:start="75:44" pos:end="75:45">++</operator></expr></incr>)</control> <block pos:start="75:48" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:42">

        <expr_stmt pos:start="77:9" pos:end="77:44"><expr pos:start="77:9" pos:end="77:43"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:13">cache</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:25">page_cache</name><index pos:start="77:26" pos:end="77:28">[<expr pos:start="77:27" pos:end="77:27"><name pos:start="77:27" pos:end="77:27">i</name></expr>]</index></name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:36">it_data</name> <operator pos:start="77:38" pos:end="77:38">=</operator> <name pos:start="77:40" pos:end="77:43">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:13">cache</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:25">page_cache</name><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><name pos:start="79:27" pos:end="79:27">i</name></expr>]</index></name><operator pos:start="79:29" pos:end="79:29">.</operator><name pos:start="79:30" pos:end="79:35">it_age</name> <operator pos:start="79:37" pos:end="79:37">=</operator> <literal type="number" pos:start="79:39" pos:end="79:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:13">cache</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:25">page_cache</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><name pos:start="81:27" pos:end="81:27">i</name></expr>]</index></name><operator pos:start="81:29" pos:end="81:29">.</operator><name pos:start="81:30" pos:end="81:36">it_addr</name> <operator pos:start="81:38" pos:end="81:38">=</operator> <operator pos:start="81:40" pos:end="81:40">-</operator><literal type="number" pos:start="81:41" pos:end="81:41">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="87:5" pos:end="87:17">return <expr pos:start="87:12" pos:end="87:16"><name pos:start="87:12" pos:end="87:16">cache</name></expr>;</return>

</block_content>}</block></function>
</unit>
