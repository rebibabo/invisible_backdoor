<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16418.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:25">gpio_read</name><parameter_list pos:start="1:26" pos:end="1:79">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58">target_phys_addr_t</name></type> <name pos:start="1:60" pos:end="1:63">addr</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:78"><decl pos:start="1:66" pos:end="1:78"><type pos:start="1:66" pos:end="1:78"><name pos:start="1:66" pos:end="1:73">unsigned</name></type> <name pos:start="1:75" pos:end="1:78">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:47">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:23">gpio_state_t</name></name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:35">= <expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">r</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:12">&gt;&gt;=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="49:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition>

    <block pos:start="15:5" pos:end="49:5">{<block_content pos:start="17:9" pos:end="47:18">

        <case pos:start="17:9" pos:end="17:22">case <expr pos:start="17:14" pos:end="17:21"><name pos:start="17:14" pos:end="17:21">R_PA_DIN</name></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:56"><expr pos:start="19:13" pos:end="19:55"><name pos:start="19:13" pos:end="19:13">r</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:23">regs</name><index pos:start="19:24" pos:end="19:35">[<expr pos:start="19:25" pos:end="19:34"><name pos:start="19:25" pos:end="19:34">RW_PA_DOUT</name></expr>]</index></name> <operator pos:start="19:37" pos:end="19:37">&amp;</operator> <name pos:start="19:39" pos:end="19:55"><name pos:start="19:39" pos:end="19:39">s</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:45">regs</name><index pos:start="19:46" pos:end="19:55">[<expr pos:start="19:47" pos:end="19:54"><name pos:start="19:47" pos:end="19:54">RW_PA_OE</name></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="23:13" pos:end="23:45">/* Encode pins from the nand.  */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:35"><expr pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:13">r</name> <operator pos:start="25:15" pos:end="25:16">|=</operator> <name pos:start="25:18" pos:end="25:29"><name pos:start="25:18" pos:end="25:18">s</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">nand</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:29">rdy</name></name> <operator pos:start="25:31" pos:end="25:32">&lt;&lt;</operator> <literal type="number" pos:start="25:34" pos:end="25:34">7</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:22">case <expr pos:start="29:14" pos:end="29:21"><name pos:start="29:14" pos:end="29:21">R_PD_DIN</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:56"><expr pos:start="31:13" pos:end="31:55"><name pos:start="31:13" pos:end="31:13">r</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:23">regs</name><index pos:start="31:24" pos:end="31:35">[<expr pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:34">RW_PD_DOUT</name></expr>]</index></name> <operator pos:start="31:37" pos:end="31:37">&amp;</operator> <name pos:start="31:39" pos:end="31:55"><name pos:start="31:39" pos:end="31:39">s</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">regs</name><index pos:start="31:46" pos:end="31:55">[<expr pos:start="31:47" pos:end="31:54"><name pos:start="31:47" pos:end="31:54">RW_PD_OE</name></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="35:13" pos:end="35:43">/* Encode temp sensor pins.  */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:61"><expr pos:start="37:13" pos:end="37:60"><name pos:start="37:13" pos:end="37:13">r</name> <operator pos:start="37:15" pos:end="37:16">|=</operator> <operator pos:start="37:18" pos:end="37:18">(</operator><operator pos:start="37:19" pos:end="37:19">!</operator><operator pos:start="37:20" pos:end="37:20">!</operator><operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:43"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:34">tempsensor</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:43">shiftreg</name></name> <operator pos:start="37:45" pos:end="37:45">&amp;</operator> <literal type="number" pos:start="37:47" pos:end="37:53">0x10000</literal><operator pos:start="37:54" pos:end="37:54">)</operator><operator pos:start="37:55" pos:end="37:55">)</operator> <operator pos:start="37:57" pos:end="37:58">&lt;&lt;</operator> <literal type="number" pos:start="37:60" pos:end="37:60">4</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>



        <default pos:start="43:9" pos:end="43:16">default:</default>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:13">r</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:23">regs</name><index pos:start="45:24" pos:end="45:29">[<expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">addr</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

    </block_content>}</block></switch>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><name pos:start="51:12" pos:end="51:12">r</name></expr>;</return>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><call pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:5">D</name><argument_list pos:start="53:6" pos:end="53:46">(<argument pos:start="53:7" pos:end="53:45"><expr pos:start="53:7" pos:end="53:45"><call pos:start="53:7" pos:end="53:45"><name pos:start="53:7" pos:end="53:12">printf</name><argument_list pos:start="53:13" pos:end="53:45">(<argument pos:start="53:14" pos:end="53:25"><expr pos:start="53:14" pos:end="53:25"><literal type="string" pos:start="53:14" pos:end="53:25">"%s %x=%x\n"</literal></expr></argument>, <argument pos:start="53:28" pos:end="53:35"><expr pos:start="53:28" pos:end="53:35"><name pos:start="53:28" pos:end="53:35">__func__</name></expr></argument>, <argument pos:start="53:38" pos:end="53:41"><expr pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:41">addr</name></expr></argument>, <argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><name pos:start="53:44" pos:end="53:44">r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
