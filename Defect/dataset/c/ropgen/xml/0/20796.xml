<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20796.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">add_pc_test_case</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:41"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">mname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PlugTestData</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">data</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:40">(<expr pos:start="11:9" pos:end="11:39"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:39"><name pos:start="11:10" pos:end="11:25">g_str_has_prefix</name><argument_list pos:start="11:26" pos:end="11:39">(<argument pos:start="11:27" pos:end="11:31"><expr pos:start="11:27" pos:end="11:31"><name pos:start="11:27" pos:end="11:31">mname</name></expr></argument>, <argument pos:start="11:34" pos:end="11:38"><expr pos:start="11:34" pos:end="11:38"><literal type="string" pos:start="11:34" pos:end="11:38">"pc-"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:42" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:8">data</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:16">g_new</name><argument_list pos:start="17:17" pos:end="17:33">(<argument pos:start="17:18" pos:end="17:29"><expr pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:29">PlugTestData</name></expr></argument>, <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:8">data</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:17">machine</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:35"><name pos:start="19:21" pos:end="19:28">g_strdup</name><argument_list pos:start="19:29" pos:end="19:35">(<argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34">mname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:8">data</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:19">cpu_model</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <literal type="string" pos:start="21:23" pos:end="21:31">"Haswell"</literal></expr>;</expr_stmt> <comment type="block" pos:start="21:34" pos:end="21:57">/* 1.3+ theoretically */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:8">data</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:17">sockets</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:8">data</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:15">cores</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:8">data</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:17">threads</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:68"><expr pos:start="29:5" pos:end="29:67"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:8">data</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:17">maxcpus</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:24">data</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:33">sockets</name></name> <operator pos:start="29:35" pos:end="29:35">*</operator> <name pos:start="29:37" pos:end="29:47"><name pos:start="29:37" pos:end="29:40">data</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:47">cores</name></name> <operator pos:start="29:49" pos:end="29:49">*</operator> <name pos:start="29:51" pos:end="29:63"><name pos:start="29:51" pos:end="29:54">data</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:63">threads</name></name> <operator pos:start="29:65" pos:end="29:65">*</operator> <literal type="number" pos:start="29:67" pos:end="29:67">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="79:5"><if pos:start="31:5" pos:end="65:5">if <condition pos:start="31:8" pos:end="51:40">(<expr pos:start="31:9" pos:end="51:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:24">g_str_has_suffix</name><argument_list pos:start="31:25" pos:end="31:39">(<argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><name pos:start="31:26" pos:end="31:30">mname</name></expr></argument>, <argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><literal type="string" pos:start="31:33" pos:end="31:38">"-1.4"</literal></expr></argument>)</argument_list></call> <operator pos:start="31:41" pos:end="31:42">||</operator>

        <operator pos:start="33:9" pos:end="33:9">(</operator><call pos:start="33:10" pos:end="33:32"><name pos:start="33:10" pos:end="33:15">strcmp</name><argument_list pos:start="33:16" pos:end="33:32">(<argument pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">mname</name></expr></argument>, <argument pos:start="33:24" pos:end="33:31"><expr pos:start="33:24" pos:end="33:31"><literal type="string" pos:start="33:24" pos:end="33:31">"pc-1.3"</literal></expr></argument>)</argument_list></call> <operator pos:start="33:34" pos:end="33:35">==</operator> <literal type="number" pos:start="33:37" pos:end="33:37">0</literal><operator pos:start="33:38" pos:end="33:38">)</operator> <operator pos:start="33:40" pos:end="33:41">||</operator>

        <operator pos:start="35:9" pos:end="35:9">(</operator><call pos:start="35:10" pos:end="35:32"><name pos:start="35:10" pos:end="35:15">strcmp</name><argument_list pos:start="35:16" pos:end="35:32">(<argument pos:start="35:17" pos:end="35:21"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:21">mname</name></expr></argument>, <argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><literal type="string" pos:start="35:24" pos:end="35:31">"pc-1.2"</literal></expr></argument>)</argument_list></call> <operator pos:start="35:34" pos:end="35:35">==</operator> <literal type="number" pos:start="35:37" pos:end="35:37">0</literal><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:41">||</operator>

        <operator pos:start="37:9" pos:end="37:9">(</operator><call pos:start="37:10" pos:end="37:32"><name pos:start="37:10" pos:end="37:15">strcmp</name><argument_list pos:start="37:16" pos:end="37:32">(<argument pos:start="37:17" pos:end="37:21"><expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:21">mname</name></expr></argument>, <argument pos:start="37:24" pos:end="37:31"><expr pos:start="37:24" pos:end="37:31"><literal type="string" pos:start="37:24" pos:end="37:31">"pc-1.1"</literal></expr></argument>)</argument_list></call> <operator pos:start="37:34" pos:end="37:35">==</operator> <literal type="number" pos:start="37:37" pos:end="37:37">0</literal><operator pos:start="37:38" pos:end="37:38">)</operator> <operator pos:start="37:40" pos:end="37:41">||</operator>

        <operator pos:start="39:9" pos:end="39:9">(</operator><call pos:start="39:10" pos:end="39:32"><name pos:start="39:10" pos:end="39:15">strcmp</name><argument_list pos:start="39:16" pos:end="39:32">(<argument pos:start="39:17" pos:end="39:21"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:21">mname</name></expr></argument>, <argument pos:start="39:24" pos:end="39:31"><expr pos:start="39:24" pos:end="39:31"><literal type="string" pos:start="39:24" pos:end="39:31">"pc-1.0"</literal></expr></argument>)</argument_list></call> <operator pos:start="39:34" pos:end="39:35">==</operator> <literal type="number" pos:start="39:37" pos:end="39:37">0</literal><operator pos:start="39:38" pos:end="39:38">)</operator> <operator pos:start="39:40" pos:end="39:41">||</operator>

        <operator pos:start="41:9" pos:end="41:9">(</operator><call pos:start="41:10" pos:end="41:33"><name pos:start="41:10" pos:end="41:15">strcmp</name><argument_list pos:start="41:16" pos:end="41:33">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21">mname</name></expr></argument>, <argument pos:start="41:24" pos:end="41:32"><expr pos:start="41:24" pos:end="41:32"><literal type="string" pos:start="41:24" pos:end="41:32">"pc-0.15"</literal></expr></argument>)</argument_list></call> <operator pos:start="41:35" pos:end="41:36">==</operator> <literal type="number" pos:start="41:38" pos:end="41:38">0</literal><operator pos:start="41:39" pos:end="41:39">)</operator> <operator pos:start="41:41" pos:end="41:42">||</operator>

        <operator pos:start="43:9" pos:end="43:9">(</operator><call pos:start="43:10" pos:end="43:33"><name pos:start="43:10" pos:end="43:15">strcmp</name><argument_list pos:start="43:16" pos:end="43:33">(<argument pos:start="43:17" pos:end="43:21"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:21">mname</name></expr></argument>, <argument pos:start="43:24" pos:end="43:32"><expr pos:start="43:24" pos:end="43:32"><literal type="string" pos:start="43:24" pos:end="43:32">"pc-0.14"</literal></expr></argument>)</argument_list></call> <operator pos:start="43:35" pos:end="43:36">==</operator> <literal type="number" pos:start="43:38" pos:end="43:38">0</literal><operator pos:start="43:39" pos:end="43:39">)</operator> <operator pos:start="43:41" pos:end="43:42">||</operator>

        <operator pos:start="45:9" pos:end="45:9">(</operator><call pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:15">strcmp</name><argument_list pos:start="45:16" pos:end="45:33">(<argument pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:21">mname</name></expr></argument>, <argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><literal type="string" pos:start="45:24" pos:end="45:32">"pc-0.13"</literal></expr></argument>)</argument_list></call> <operator pos:start="45:35" pos:end="45:36">==</operator> <literal type="number" pos:start="45:38" pos:end="45:38">0</literal><operator pos:start="45:39" pos:end="45:39">)</operator> <operator pos:start="45:41" pos:end="45:42">||</operator>

        <operator pos:start="47:9" pos:end="47:9">(</operator><call pos:start="47:10" pos:end="47:33"><name pos:start="47:10" pos:end="47:15">strcmp</name><argument_list pos:start="47:16" pos:end="47:33">(<argument pos:start="47:17" pos:end="47:21"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:21">mname</name></expr></argument>, <argument pos:start="47:24" pos:end="47:32"><expr pos:start="47:24" pos:end="47:32"><literal type="string" pos:start="47:24" pos:end="47:32">"pc-0.12"</literal></expr></argument>)</argument_list></call> <operator pos:start="47:35" pos:end="47:36">==</operator> <literal type="number" pos:start="47:38" pos:end="47:38">0</literal><operator pos:start="47:39" pos:end="47:39">)</operator> <operator pos:start="47:41" pos:end="47:42">||</operator>

        <operator pos:start="49:9" pos:end="49:9">(</operator><call pos:start="49:10" pos:end="49:33"><name pos:start="49:10" pos:end="49:15">strcmp</name><argument_list pos:start="49:16" pos:end="49:33">(<argument pos:start="49:17" pos:end="49:21"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:21">mname</name></expr></argument>, <argument pos:start="49:24" pos:end="49:32"><expr pos:start="49:24" pos:end="49:32"><literal type="string" pos:start="49:24" pos:end="49:32">"pc-0.11"</literal></expr></argument>)</argument_list></call> <operator pos:start="49:35" pos:end="49:36">==</operator> <literal type="number" pos:start="49:38" pos:end="49:38">0</literal><operator pos:start="49:39" pos:end="49:39">)</operator> <operator pos:start="49:41" pos:end="49:42">||</operator>

        <operator pos:start="51:9" pos:end="51:9">(</operator><call pos:start="51:10" pos:end="51:33"><name pos:start="51:10" pos:end="51:15">strcmp</name><argument_list pos:start="51:16" pos:end="51:33">(<argument pos:start="51:17" pos:end="51:21"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:21">mname</name></expr></argument>, <argument pos:start="51:24" pos:end="51:32"><expr pos:start="51:24" pos:end="51:32"><literal type="string" pos:start="51:24" pos:end="51:32">"pc-0.10"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:35" pos:end="51:36">==</operator> <literal type="number" pos:start="51:38" pos:end="51:38">0</literal><operator pos:start="51:39" pos:end="51:39">)</operator></expr>)</condition> <block pos:start="51:42" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:21">

        <expr_stmt pos:start="53:9" pos:end="57:61"><expr pos:start="53:9" pos:end="57:60"><name pos:start="53:9" pos:end="53:12">path</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="57:60"><name pos:start="53:16" pos:end="53:30">g_strdup_printf</name><argument_list pos:start="53:31" pos:end="57:60">(<argument pos:start="53:32" pos:end="53:64"><expr pos:start="53:32" pos:end="53:64"><literal type="string" pos:start="53:32" pos:end="53:64">"cpu/%s/init/%ux%ux%u&amp;maxcpus=%u"</literal></expr></argument>,

                               <argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">mname</name></expr></argument>, <argument pos:start="55:39" pos:end="55:51"><expr pos:start="55:39" pos:end="55:51"><name pos:start="55:39" pos:end="55:51"><name pos:start="55:39" pos:end="55:42">data</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:51">sockets</name></name></expr></argument>, <argument pos:start="55:54" pos:end="55:64"><expr pos:start="55:54" pos:end="55:64"><name pos:start="55:54" pos:end="55:64"><name pos:start="55:54" pos:end="55:57">data</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:64">cores</name></name></expr></argument>,

                               <argument pos:start="57:32" pos:end="57:44"><expr pos:start="57:32" pos:end="57:44"><name pos:start="57:32" pos:end="57:44"><name pos:start="57:32" pos:end="57:35">data</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:44">threads</name></name></expr></argument>, <argument pos:start="57:47" pos:end="57:59"><expr pos:start="57:47" pos:end="57:59"><name pos:start="57:47" pos:end="57:59"><name pos:start="57:47" pos:end="57:50">data</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:59">maxcpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="61:49"><expr pos:start="59:9" pos:end="61:48"><call pos:start="59:9" pos:end="61:48"><name pos:start="59:9" pos:end="59:32">qtest_add_data_func_full</name><argument_list pos:start="59:33" pos:end="61:48">(<argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">path</name></expr></argument>, <argument pos:start="59:40" pos:end="59:43"><expr pos:start="59:40" pos:end="59:43"><name pos:start="59:40" pos:end="59:43">data</name></expr></argument>, <argument pos:start="59:46" pos:end="59:70"><expr pos:start="59:46" pos:end="59:70"><name pos:start="59:46" pos:end="59:70">test_plug_without_cpu_add</name></expr></argument>,

                                 <argument pos:start="61:34" pos:end="61:47"><expr pos:start="61:34" pos:end="61:47"><name pos:start="61:34" pos:end="61:47">test_data_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><call pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:14">g_free</name><argument_list pos:start="63:15" pos:end="63:20">(<argument pos:start="63:16" pos:end="63:19"><expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="79:5">else <block pos:start="65:12" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:21">

        <expr_stmt pos:start="67:9" pos:end="71:61"><expr pos:start="67:9" pos:end="71:60"><name pos:start="67:9" pos:end="67:12">path</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="71:60"><name pos:start="67:16" pos:end="67:30">g_strdup_printf</name><argument_list pos:start="67:31" pos:end="71:60">(<argument pos:start="67:32" pos:end="67:63"><expr pos:start="67:32" pos:end="67:63"><literal type="string" pos:start="67:32" pos:end="67:63">"cpu/%s/add/%ux%ux%u&amp;maxcpus=%u"</literal></expr></argument>,

                               <argument pos:start="69:32" pos:end="69:36"><expr pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:36">mname</name></expr></argument>, <argument pos:start="69:39" pos:end="69:51"><expr pos:start="69:39" pos:end="69:51"><name pos:start="69:39" pos:end="69:51"><name pos:start="69:39" pos:end="69:42">data</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:51">sockets</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:64"><expr pos:start="69:54" pos:end="69:64"><name pos:start="69:54" pos:end="69:64"><name pos:start="69:54" pos:end="69:57">data</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:64">cores</name></name></expr></argument>,

                               <argument pos:start="71:32" pos:end="71:44"><expr pos:start="71:32" pos:end="71:44"><name pos:start="71:32" pos:end="71:44"><name pos:start="71:32" pos:end="71:35">data</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:44">threads</name></name></expr></argument>, <argument pos:start="71:47" pos:end="71:59"><expr pos:start="71:47" pos:end="71:59"><name pos:start="71:47" pos:end="71:59"><name pos:start="71:47" pos:end="71:50">data</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:59">maxcpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="75:49"><expr pos:start="73:9" pos:end="75:48"><call pos:start="73:9" pos:end="75:48"><name pos:start="73:9" pos:end="73:32">qtest_add_data_func_full</name><argument_list pos:start="73:33" pos:end="75:48">(<argument pos:start="73:34" pos:end="73:37"><expr pos:start="73:34" pos:end="73:37"><name pos:start="73:34" pos:end="73:37">path</name></expr></argument>, <argument pos:start="73:40" pos:end="73:43"><expr pos:start="73:40" pos:end="73:43"><name pos:start="73:40" pos:end="73:43">data</name></expr></argument>, <argument pos:start="73:46" pos:end="73:67"><expr pos:start="73:46" pos:end="73:67"><name pos:start="73:46" pos:end="73:67">test_plug_with_cpu_add</name></expr></argument>,

                                 <argument pos:start="75:34" pos:end="75:47"><expr pos:start="75:34" pos:end="75:47"><name pos:start="75:34" pos:end="75:47">test_data_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><call pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:14">g_free</name><argument_list pos:start="77:15" pos:end="77:20">(<argument pos:start="77:16" pos:end="77:19"><expr pos:start="77:16" pos:end="77:19"><name pos:start="77:16" pos:end="77:19">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
