<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3936.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:43">assert_fp_access_checked</name><parameter_list pos:start="1:44" pos:end="1:60">(<parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:56">DisasContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="18:0">

<cpp:ifdef pos:start="5:1" pos:end="5:23">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:23">CONFIG_DEBUG_TCG</name></cpp:ifdef>

    <if_stmt pos:start="7:5" pos:end="18:0"><if pos:start="7:5" pos:end="18:0">if <condition pos:start="7:8" pos:end="7:58">(<expr pos:start="7:9" pos:end="7:57"><call pos:start="7:9" pos:end="7:57"><name pos:start="7:9" pos:end="7:16">unlikely</name><argument_list pos:start="7:17" pos:end="7:57">(<argument pos:start="7:18" pos:end="7:56"><expr pos:start="7:18" pos:end="7:56"><operator pos:start="7:18" pos:end="7:18">!</operator><name pos:start="7:19" pos:end="7:38"><name pos:start="7:19" pos:end="7:19">s</name><operator pos:start="7:20" pos:end="7:21">-&gt;</operator><name pos:start="7:22" pos:end="7:38">fp_access_checked</name></name> <operator pos:start="7:40" pos:end="7:41">||</operator> <operator pos:start="7:43" pos:end="7:43">!</operator><name pos:start="7:44" pos:end="7:56"><name pos:start="7:44" pos:end="7:44">s</name><operator pos:start="7:45" pos:end="7:46">-&gt;</operator><name pos:start="7:47" pos:end="7:56">cpacr_fpen</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:60" pos:end="18:0">{<block_content pos:start="9:9" pos:end="13:16">

        <expr_stmt pos:start="9:9" pos:end="11:49"><expr pos:start="9:9" pos:end="11:48"><call pos:start="9:9" pos:end="11:48"><name pos:start="9:9" pos:end="9:15">fprintf</name><argument_list pos:start="9:16" pos:end="11:48">(<argument pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:22">stderr</name></expr></argument>, <argument pos:start="9:25" pos:end="11:38"><expr pos:start="9:25" pos:end="11:38"><literal type="string" pos:start="9:25" pos:end="9:66">"target-arm: FP access check missing for "</literal>

                <literal type="string" pos:start="11:17" pos:end="11:38">"instruction 0x%08x\n"</literal></expr></argument>, <argument pos:start="11:41" pos:end="11:47"><expr pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:41">s</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:47">insn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><call pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:13">abort</name><argument_list pos:start="13:14" pos:end="13:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
