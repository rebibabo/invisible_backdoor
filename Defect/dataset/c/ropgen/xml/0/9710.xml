<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9710.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">readline_completion</name><parameter_list pos:start="1:32" pos:end="1:50">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:45">ReadLineState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">rs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:17">j</name></decl>, <decl pos:start="5:20" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:28">max_width</name></decl>, <decl pos:start="5:31" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:31" pos:end="5:37">nb_cols</name></decl>, <decl pos:start="5:40" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:40" pos:end="5:49">max_prefix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:17">cmdline</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:6">rs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:22">nb_completions</name></name> <operator pos:start="11:24" pos:end="11:24">=</operator> <literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:11">cmdline</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:45"><name pos:start="15:15" pos:end="15:22">g_malloc</name><argument_list pos:start="15:23" pos:end="15:45">(<argument pos:start="15:24" pos:end="15:44"><expr pos:start="15:24" pos:end="15:44"><name pos:start="15:24" pos:end="15:40"><name pos:start="15:24" pos:end="15:25">rs</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:40">cmd_buf_index</name></name> <operator pos:start="15:42" pos:end="15:42">+</operator> <literal type="number" pos:start="15:44" pos:end="15:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:52"><expr pos:start="17:5" pos:end="17:51"><call pos:start="17:5" pos:end="17:51"><name pos:start="17:5" pos:end="17:10">memcpy</name><argument_list pos:start="17:11" pos:end="17:51">(<argument pos:start="17:12" pos:end="17:18"><expr pos:start="17:12" pos:end="17:18"><name pos:start="17:12" pos:end="17:18">cmdline</name></expr></argument>, <argument pos:start="17:21" pos:end="17:31"><expr pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:22">rs</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:31">cmd_buf</name></name></expr></argument>, <argument pos:start="17:34" pos:end="17:50"><expr pos:start="17:34" pos:end="17:50"><name pos:start="17:34" pos:end="17:50"><name pos:start="17:34" pos:end="17:35">rs</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:50">cmd_buf_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:11">cmdline</name><index pos:start="19:12" pos:end="19:30">[<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:14">rs</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:29">cmd_buf_index</name></name></expr>]</index></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <literal type="char" pos:start="19:34" pos:end="19:37">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><call pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:6">rs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:25">completion_finder</name></name><argument_list pos:start="21:26" pos:end="21:43">(<argument pos:start="21:27" pos:end="21:33"><expr pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:28">rs</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:33">mon</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:42"><expr pos:start="21:36" pos:end="21:42"><name pos:start="21:36" pos:end="21:42">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><call pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:10">g_free</name><argument_list pos:start="23:11" pos:end="23:19">(<argument pos:start="23:12" pos:end="23:18"><expr pos:start="23:12" pos:end="23:18"><name pos:start="23:12" pos:end="23:18">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:29">/* no completion found */</comment>

    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:32">(<expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:10">rs</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:26">nb_completions</name></name> <operator pos:start="29:28" pos:end="29:29">&lt;=</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="125:5"><if pos:start="33:5" pos:end="49:5">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:10">rs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:26">nb_completions</name></name> <operator pos:start="33:28" pos:end="33:29">==</operator> <literal type="number" pos:start="33:31" pos:end="33:31">1</literal></expr>)</condition> <block pos:start="33:34" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:42">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:40"><name pos:start="35:15" pos:end="35:20">strlen</name><argument_list pos:start="35:21" pos:end="35:40">(<argument pos:start="35:22" pos:end="35:39"><expr pos:start="35:22" pos:end="35:39"><name pos:start="35:22" pos:end="35:39"><name pos:start="35:22" pos:end="35:23">rs</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:36">completions</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="41:9">for<control pos:start="37:12" pos:end="37:51">(<init pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:13">i</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:36"><name pos:start="37:17" pos:end="37:18">rs</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:36">completion_index</name></name></expr>;</init> <condition pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:45"><name pos:start="37:39" pos:end="37:39">i</name> <operator pos:start="37:41" pos:end="37:41">&lt;</operator> <name pos:start="37:43" pos:end="37:45">len</name></expr>;</condition> <incr pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><name pos:start="37:48" pos:end="37:48">i</name><operator pos:start="37:49" pos:end="37:50">++</operator></expr></incr>)</control> <block pos:start="37:53" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:60">

            <expr_stmt pos:start="39:13" pos:end="39:60"><expr pos:start="39:13" pos:end="39:59"><call pos:start="39:13" pos:end="39:59"><name pos:start="39:13" pos:end="39:32">readline_insert_char</name><argument_list pos:start="39:33" pos:end="39:59">(<argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><name pos:start="39:34" pos:end="39:35">rs</name></expr></argument>, <argument pos:start="39:38" pos:end="39:58"><expr pos:start="39:38" pos:end="39:58"><name pos:start="39:38" pos:end="39:58"><name pos:start="39:38" pos:end="39:39">rs</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:52">completions</name><index pos:start="39:53" pos:end="39:55">[<expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">0</literal></expr>]</index><index pos:start="39:56" pos:end="39:58">[<expr pos:start="39:57" pos:end="39:57"><name pos:start="39:57" pos:end="39:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="43:9" pos:end="43:70">/* extra space for next argument. XXX: make it more generic */</comment>

        <if_stmt pos:start="45:9" pos:end="47:42"><if pos:start="45:9" pos:end="47:42">if <condition pos:start="45:12" pos:end="45:58">(<expr pos:start="45:13" pos:end="45:57"><name pos:start="45:13" pos:end="45:15">len</name> <operator pos:start="45:17" pos:end="45:17">&gt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal> <operator pos:start="45:21" pos:end="45:22">&amp;&amp;</operator> <name pos:start="45:24" pos:end="45:50"><name pos:start="45:24" pos:end="45:25">rs</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:38">completions</name><index pos:start="45:39" pos:end="45:41">[<expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr>]</index><index pos:start="45:42" pos:end="45:50">[<expr pos:start="45:43" pos:end="45:49"><name pos:start="45:43" pos:end="45:45">len</name> <operator pos:start="45:47" pos:end="45:47">-</operator> <literal type="number" pos:start="45:49" pos:end="45:49">1</literal></expr>]</index></name> <operator pos:start="45:52" pos:end="45:53">!=</operator> <literal type="char" pos:start="45:55" pos:end="45:57">'/'</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:42"><block_content pos:start="47:13" pos:end="47:42">

            <expr_stmt pos:start="47:13" pos:end="47:42"><expr pos:start="47:13" pos:end="47:41"><call pos:start="47:13" pos:end="47:41"><name pos:start="47:13" pos:end="47:32">readline_insert_char</name><argument_list pos:start="47:33" pos:end="47:41">(<argument pos:start="47:34" pos:end="47:35"><expr pos:start="47:34" pos:end="47:35"><name pos:start="47:34" pos:end="47:35">rs</name></expr></argument>, <argument pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><literal type="char" pos:start="47:38" pos:end="47:40">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="125:5">else <block pos:start="49:12" pos:end="125:5">{<block_content pos:start="51:9" pos:end="123:33">

        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><call pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:22">monitor_printf</name><argument_list pos:start="51:23" pos:end="51:37">(<argument pos:start="51:24" pos:end="51:30"><expr pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:25">rs</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:30">mon</name></name></expr></argument>, <argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><literal type="string" pos:start="51:33" pos:end="51:36">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:17">max_width</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:18">max_prefix</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</expr_stmt>	

        <for pos:start="57:9" pos:end="85:9">for<control pos:start="57:12" pos:end="57:47">(<init pos:start="57:13" pos:end="57:18"><expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">i</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</init> <condition pos:start="57:20" pos:end="57:42"><expr pos:start="57:20" pos:end="57:41"><name pos:start="57:20" pos:end="57:20">i</name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <name pos:start="57:24" pos:end="57:41"><name pos:start="57:24" pos:end="57:25">rs</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:41">nb_completions</name></name></expr>;</condition> <incr pos:start="57:44" pos:end="57:46"><expr pos:start="57:44" pos:end="57:46"><name pos:start="57:44" pos:end="57:44">i</name><operator pos:start="57:45" pos:end="57:46">++</operator></expr></incr>)</control> <block pos:start="57:49" pos:end="85:9">{<block_content pos:start="59:13" pos:end="83:32">

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:15">len</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:44"><name pos:start="59:19" pos:end="59:24">strlen</name><argument_list pos:start="59:25" pos:end="59:44">(<argument pos:start="59:26" pos:end="59:43"><expr pos:start="59:26" pos:end="59:43"><name pos:start="59:26" pos:end="59:43"><name pos:start="59:26" pos:end="59:27">rs</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:40">completions</name><index pos:start="59:41" pos:end="59:43">[<expr pos:start="59:42" pos:end="59:42"><name pos:start="59:42" pos:end="59:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="79:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:21">(<expr pos:start="61:17" pos:end="61:20"><name pos:start="61:17" pos:end="61:17">i</name><operator pos:start="61:18" pos:end="61:19">==</operator><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>)</condition> <block pos:start="61:23" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:33">

                <expr_stmt pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:26">max_prefix</name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:32">len</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="79:13">else <block pos:start="65:20" pos:end="79:13">{<block_content pos:start="67:17" pos:end="77:17">

                <if_stmt pos:start="67:17" pos:end="69:37"><if pos:start="67:17" pos:end="69:37">if <condition pos:start="67:20" pos:end="67:37">(<expr pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:23">len</name> <operator pos:start="67:25" pos:end="67:25">&lt;</operator> <name pos:start="67:27" pos:end="67:36">max_prefix</name></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:37"><block_content pos:start="69:21" pos:end="69:37">

                    <expr_stmt pos:start="69:21" pos:end="69:37"><expr pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:30">max_prefix</name> <operator pos:start="69:32" pos:end="69:32">=</operator> <name pos:start="69:34" pos:end="69:36">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="71:17" pos:end="77:17">for<control pos:start="71:20" pos:end="71:43">(<init pos:start="71:21" pos:end="71:24"><expr pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:21">j</name><operator pos:start="71:22" pos:end="71:22">=</operator><literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr>;</init> <condition pos:start="71:26" pos:end="71:38"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:26">j</name><operator pos:start="71:27" pos:end="71:27">&lt;</operator><name pos:start="71:28" pos:end="71:37">max_prefix</name></expr>;</condition> <incr pos:start="71:40" pos:end="71:42"><expr pos:start="71:40" pos:end="71:42"><name pos:start="71:40" pos:end="71:40">j</name><operator pos:start="71:41" pos:end="71:42">++</operator></expr></incr>)</control> <block pos:start="71:45" pos:end="77:17">{<block_content pos:start="73:21" pos:end="75:39">

                    <if_stmt pos:start="73:21" pos:end="75:39"><if pos:start="73:21" pos:end="75:39">if <condition pos:start="73:24" pos:end="73:71">(<expr pos:start="73:25" pos:end="73:70"><name pos:start="73:25" pos:end="73:45"><name pos:start="73:25" pos:end="73:26">rs</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:39">completions</name><index pos:start="73:40" pos:end="73:42">[<expr pos:start="73:41" pos:end="73:41"><name pos:start="73:41" pos:end="73:41">i</name></expr>]</index><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><name pos:start="73:44" pos:end="73:44">j</name></expr>]</index></name> <operator pos:start="73:47" pos:end="73:48">!=</operator> <name pos:start="73:50" pos:end="73:70"><name pos:start="73:50" pos:end="73:51">rs</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:64">completions</name><index pos:start="73:65" pos:end="73:67">[<expr pos:start="73:66" pos:end="73:66"><literal type="number" pos:start="73:66" pos:end="73:66">0</literal></expr>]</index><index pos:start="73:68" pos:end="73:70">[<expr pos:start="73:69" pos:end="73:69"><name pos:start="73:69" pos:end="73:69">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="75:25" pos:end="75:39"><block_content pos:start="75:25" pos:end="75:39">

                        <expr_stmt pos:start="75:25" pos:end="75:39"><expr pos:start="75:25" pos:end="75:38"><name pos:start="75:25" pos:end="75:34">max_prefix</name> <operator pos:start="75:36" pos:end="75:36">=</operator> <name pos:start="75:38" pos:end="75:38">j</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:32"><if pos:start="81:13" pos:end="83:32">if <condition pos:start="81:16" pos:end="81:32">(<expr pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:19">len</name> <operator pos:start="81:21" pos:end="81:21">&gt;</operator> <name pos:start="81:23" pos:end="81:31">max_width</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:32"><block_content pos:start="83:17" pos:end="83:32">

                <expr_stmt pos:start="83:17" pos:end="83:32"><expr pos:start="83:17" pos:end="83:31"><name pos:start="83:17" pos:end="83:25">max_width</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:31">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="87:9" pos:end="93:13"><if pos:start="87:9" pos:end="93:13">if <condition pos:start="87:12" pos:end="87:27">(<expr pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:22">max_prefix</name> <operator pos:start="87:24" pos:end="87:24">&gt;</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="93:13"><block_content pos:start="89:13" pos:end="93:13"> 

            <for pos:start="89:13" pos:end="93:13">for<control pos:start="89:16" pos:end="89:62">(<init pos:start="89:17" pos:end="89:41"><expr pos:start="89:17" pos:end="89:40"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:22">rs</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:40">completion_index</name></name></expr>;</init> <condition pos:start="89:43" pos:end="89:57"><expr pos:start="89:43" pos:end="89:56"><name pos:start="89:43" pos:end="89:43">i</name> <operator pos:start="89:45" pos:end="89:45">&lt;</operator> <name pos:start="89:47" pos:end="89:56">max_prefix</name></expr>;</condition> <incr pos:start="89:59" pos:end="89:61"><expr pos:start="89:59" pos:end="89:61"><name pos:start="89:59" pos:end="89:59">i</name><operator pos:start="89:60" pos:end="89:61">++</operator></expr></incr>)</control> <block pos:start="89:64" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:64">

                <expr_stmt pos:start="91:17" pos:end="91:64"><expr pos:start="91:17" pos:end="91:63"><call pos:start="91:17" pos:end="91:63"><name pos:start="91:17" pos:end="91:36">readline_insert_char</name><argument_list pos:start="91:37" pos:end="91:63">(<argument pos:start="91:38" pos:end="91:39"><expr pos:start="91:38" pos:end="91:39"><name pos:start="91:38" pos:end="91:39">rs</name></expr></argument>, <argument pos:start="91:42" pos:end="91:62"><expr pos:start="91:42" pos:end="91:62"><name pos:start="91:42" pos:end="91:62"><name pos:start="91:42" pos:end="91:43">rs</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:56">completions</name><index pos:start="91:57" pos:end="91:59">[<expr pos:start="91:58" pos:end="91:58"><literal type="number" pos:start="91:58" pos:end="91:58">0</literal></expr>]</index><index pos:start="91:60" pos:end="91:62">[<expr pos:start="91:61" pos:end="91:61"><name pos:start="91:61" pos:end="91:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:17">max_width</name> <operator pos:start="95:19" pos:end="95:20">+=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:27"><if pos:start="97:9" pos:end="99:27">if <condition pos:start="97:12" pos:end="97:27">(<expr pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:21">max_width</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <literal type="number" pos:start="97:25" pos:end="97:26">10</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:27"><block_content pos:start="99:13" pos:end="99:27">

            <expr_stmt pos:start="99:13" pos:end="99:27"><expr pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:21">max_width</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <literal type="number" pos:start="99:25" pos:end="99:26">10</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="101:9" pos:end="103:27">else if <condition pos:start="101:17" pos:end="101:32">(<expr pos:start="101:18" pos:end="101:31"><name pos:start="101:18" pos:end="101:26">max_width</name> <operator pos:start="101:28" pos:end="101:28">&gt;</operator> <literal type="number" pos:start="101:30" pos:end="101:31">80</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:27"><block_content pos:start="103:13" pos:end="103:27">

            <expr_stmt pos:start="103:13" pos:end="103:27"><expr pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:21">max_width</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <literal type="number" pos:start="103:25" pos:end="103:26">80</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:33"><expr pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:15">nb_cols</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <literal type="number" pos:start="105:19" pos:end="105:20">80</literal> <operator pos:start="105:22" pos:end="105:22">/</operator> <name pos:start="105:24" pos:end="105:32">max_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:14"><expr pos:start="107:9" pos:end="107:13"><name pos:start="107:9" pos:end="107:9">j</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <literal type="number" pos:start="107:13" pos:end="107:13">0</literal></expr>;</expr_stmt>

        <for pos:start="109:9" pos:end="121:9">for<control pos:start="109:12" pos:end="109:47">(<init pos:start="109:13" pos:end="109:18"><expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:13">i</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">0</literal></expr>;</init> <condition pos:start="109:20" pos:end="109:42"><expr pos:start="109:20" pos:end="109:41"><name pos:start="109:20" pos:end="109:20">i</name> <operator pos:start="109:22" pos:end="109:22">&lt;</operator> <name pos:start="109:24" pos:end="109:41"><name pos:start="109:24" pos:end="109:25">rs</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:41">nb_completions</name></name></expr>;</condition> <incr pos:start="109:44" pos:end="109:46"><expr pos:start="109:44" pos:end="109:46"><name pos:start="109:44" pos:end="109:44">i</name><operator pos:start="109:45" pos:end="109:46">++</operator></expr></incr>)</control> <block pos:start="109:49" pos:end="121:9">{<block_content pos:start="111:13" pos:end="119:13">

            <expr_stmt pos:start="111:13" pos:end="111:75"><expr pos:start="111:13" pos:end="111:74"><call pos:start="111:13" pos:end="111:74"><name pos:start="111:13" pos:end="111:26">monitor_printf</name><argument_list pos:start="111:27" pos:end="111:74">(<argument pos:start="111:28" pos:end="111:34"><expr pos:start="111:28" pos:end="111:34"><name pos:start="111:28" pos:end="111:34"><name pos:start="111:28" pos:end="111:29">rs</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:34">mon</name></name></expr></argument>, <argument pos:start="111:37" pos:end="111:42"><expr pos:start="111:37" pos:end="111:42"><literal type="string" pos:start="111:37" pos:end="111:42">"%-*s"</literal></expr></argument>, <argument pos:start="111:45" pos:end="111:53"><expr pos:start="111:45" pos:end="111:53"><name pos:start="111:45" pos:end="111:53">max_width</name></expr></argument>, <argument pos:start="111:56" pos:end="111:73"><expr pos:start="111:56" pos:end="111:73"><name pos:start="111:56" pos:end="111:73"><name pos:start="111:56" pos:end="111:57">rs</name><operator pos:start="111:58" pos:end="111:59">-&gt;</operator><name pos:start="111:60" pos:end="111:70">completions</name><index pos:start="111:71" pos:end="111:73">[<expr pos:start="111:72" pos:end="111:72"><name pos:start="111:72" pos:end="111:72">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="119:13"><if pos:start="113:13" pos:end="119:13">if <condition pos:start="113:16" pos:end="113:64">(<expr pos:start="113:17" pos:end="113:63"><operator pos:start="113:17" pos:end="113:18">++</operator><name pos:start="113:19" pos:end="113:19">j</name> <operator pos:start="113:21" pos:end="113:22">==</operator> <name pos:start="113:24" pos:end="113:30">nb_cols</name> <operator pos:start="113:32" pos:end="113:33">||</operator> <name pos:start="113:35" pos:end="113:35">i</name> <operator pos:start="113:37" pos:end="113:38">==</operator> <operator pos:start="113:40" pos:end="113:40">(</operator><name pos:start="113:41" pos:end="113:58"><name pos:start="113:41" pos:end="113:42">rs</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:58">nb_completions</name></name> <operator pos:start="113:60" pos:end="113:60">-</operator> <literal type="number" pos:start="113:62" pos:end="113:62">1</literal><operator pos:start="113:63" pos:end="113:63">)</operator></expr>)</condition> <block pos:start="113:66" pos:end="119:13">{<block_content pos:start="115:17" pos:end="117:22">

                <expr_stmt pos:start="115:17" pos:end="115:46"><expr pos:start="115:17" pos:end="115:45"><call pos:start="115:17" pos:end="115:45"><name pos:start="115:17" pos:end="115:30">monitor_printf</name><argument_list pos:start="115:31" pos:end="115:45">(<argument pos:start="115:32" pos:end="115:38"><expr pos:start="115:32" pos:end="115:38"><name pos:start="115:32" pos:end="115:38"><name pos:start="115:32" pos:end="115:33">rs</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:38">mon</name></name></expr></argument>, <argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><literal type="string" pos:start="115:41" pos:end="115:44">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:22"><expr pos:start="117:17" pos:end="117:21"><name pos:start="117:17" pos:end="117:17">j</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <literal type="number" pos:start="117:21" pos:end="117:21">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="123:9" pos:end="123:33"><expr pos:start="123:9" pos:end="123:32"><call pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:28">readline_show_prompt</name><argument_list pos:start="123:29" pos:end="123:32">(<argument pos:start="123:30" pos:end="123:31"><expr pos:start="123:30" pos:end="123:31"><name pos:start="123:30" pos:end="123:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <for pos:start="127:5" pos:end="131:5">for <control pos:start="127:9" pos:end="127:44">(<init pos:start="127:10" pos:end="127:15"><expr pos:start="127:10" pos:end="127:14"><name pos:start="127:10" pos:end="127:10">i</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <literal type="number" pos:start="127:14" pos:end="127:14">0</literal></expr>;</init> <condition pos:start="127:17" pos:end="127:39"><expr pos:start="127:17" pos:end="127:38"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">&lt;</operator> <name pos:start="127:21" pos:end="127:38"><name pos:start="127:21" pos:end="127:22">rs</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:38">nb_completions</name></name></expr>;</condition> <incr pos:start="127:41" pos:end="127:43"><expr pos:start="127:41" pos:end="127:43"><name pos:start="127:41" pos:end="127:41">i</name><operator pos:start="127:42" pos:end="127:43">++</operator></expr></incr>)</control> <block pos:start="127:46" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:35">

        <expr_stmt pos:start="129:9" pos:end="129:35"><expr pos:start="129:9" pos:end="129:34"><call pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:14">g_free</name><argument_list pos:start="129:15" pos:end="129:34">(<argument pos:start="129:16" pos:end="129:33"><expr pos:start="129:16" pos:end="129:33"><name pos:start="129:16" pos:end="129:33"><name pos:start="129:16" pos:end="129:17">rs</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:30">completions</name><index pos:start="129:31" pos:end="129:33">[<expr pos:start="129:32" pos:end="129:32"><name pos:start="129:32" pos:end="129:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
