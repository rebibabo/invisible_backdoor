<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/415.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">qdev_prop_set</name><parameter_list pos:start="1:26" pos:end="1:96">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">name</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:66">void</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">src</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:95"><decl pos:start="1:74" pos:end="1:95"><type pos:start="1:74" pos:end="1:95"><name pos:start="1:74" pos:end="1:90"><name pos:start="1:74" pos:end="1:77">enum</name> <name pos:start="1:79" pos:end="1:90">PropertyType</name></name></type> <name pos:start="1:92" pos:end="1:95">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:34">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">Property</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">prop</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:8">prop</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:36"><name pos:start="9:12" pos:end="9:25">qdev_prop_find</name><argument_list pos:start="9:26" pos:end="9:36">(<argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">dev</name></expr></argument>, <argument pos:start="9:32" pos:end="9:35"><expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">prop</name></expr>)</condition> <block pos:start="11:16" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:16">

        <expr_stmt pos:start="13:9" pos:end="15:70"><expr pos:start="13:9" pos:end="15:69"><call pos:start="13:9" pos:end="15:69"><name pos:start="13:9" pos:end="13:15">fprintf</name><argument_list pos:start="13:16" pos:end="15:69">(<argument pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:22">stderr</name></expr></argument>, <argument pos:start="13:25" pos:end="13:60"><expr pos:start="13:25" pos:end="13:60"><literal type="string" pos:start="13:25" pos:end="13:60">"%s: property \"%s.%s\" not found\n"</literal></expr></argument>,

                <argument pos:start="15:17" pos:end="15:28"><expr pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:28">__FUNCTION__</name></expr></argument>, <argument pos:start="15:31" pos:end="15:62"><expr pos:start="15:31" pos:end="15:62"><call pos:start="15:31" pos:end="15:62"><name pos:start="15:31" pos:end="15:49">object_get_typename</name><argument_list pos:start="15:50" pos:end="15:62">(<argument pos:start="15:51" pos:end="15:61"><expr pos:start="15:51" pos:end="15:61"><call pos:start="15:51" pos:end="15:61"><name pos:start="15:51" pos:end="15:56">OBJECT</name><argument_list pos:start="15:57" pos:end="15:61">(<argument pos:start="15:58" pos:end="15:60"><expr pos:start="15:58" pos:end="15:60"><name pos:start="15:58" pos:end="15:60">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:65" pos:end="15:68"><expr pos:start="15:65" pos:end="15:68"><name pos:start="15:65" pos:end="15:68">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><call pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:13">abort</name><argument_list pos:start="17:14" pos:end="17:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:12">prop</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:18">info</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">type</name></name> <operator pos:start="21:26" pos:end="21:27">!=</operator> <name pos:start="21:29" pos:end="21:32">type</name></expr>)</condition> <block pos:start="21:35" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:16">

        <expr_stmt pos:start="23:9" pos:end="25:70"><expr pos:start="23:9" pos:end="25:69"><call pos:start="23:9" pos:end="25:69"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="25:69">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="23:64"><expr pos:start="23:25" pos:end="23:64"><literal type="string" pos:start="23:25" pos:end="23:64">"%s: property \"%s.%s\" type mismatch\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:28"><expr pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:28">__FUNCTION__</name></expr></argument>, <argument pos:start="25:31" pos:end="25:62"><expr pos:start="25:31" pos:end="25:62"><call pos:start="25:31" pos:end="25:62"><name pos:start="25:31" pos:end="25:49">object_get_typename</name><argument_list pos:start="25:50" pos:end="25:62">(<argument pos:start="25:51" pos:end="25:61"><expr pos:start="25:51" pos:end="25:61"><call pos:start="25:51" pos:end="25:61"><name pos:start="25:51" pos:end="25:56">OBJECT</name><argument_list pos:start="25:57" pos:end="25:61">(<argument pos:start="25:58" pos:end="25:60"><expr pos:start="25:58" pos:end="25:60"><name pos:start="25:58" pos:end="25:60">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:65" pos:end="25:68"><expr pos:start="25:65" pos:end="25:68"><name pos:start="25:65" pos:end="25:68">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:13">abort</name><argument_list pos:start="27:14" pos:end="27:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><call pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:17">qdev_prop_cpy</name><argument_list pos:start="31:18" pos:end="31:33">(<argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:21">dev</name></expr></argument>, <argument pos:start="31:24" pos:end="31:27"><expr pos:start="31:24" pos:end="31:27"><name pos:start="31:24" pos:end="31:27">prop</name></expr></argument>, <argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
