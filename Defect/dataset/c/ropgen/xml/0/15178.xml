<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15178.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:58"><name pos:start="1:1" pos:end="1:12">on_host_init</name><argument_list pos:start="1:13" pos:end="1:58">(<argument pos:start="1:14" pos:end="1:35">VSCMsgHeader *mhHeader</argument>, <argument pos:start="1:38" pos:end="1:57">VSCMsgInit *incoming</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">uint32_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:26">capabilities</name> <init pos:start="5:28" pos:end="5:53">= <expr pos:start="5:30" pos:end="5:53"><operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:52"><name pos:start="5:31" pos:end="5:38">incoming</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:52">capabilities</name></name><operator pos:start="5:53" pos:end="5:53">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="9:73"><decl pos:start="7:5" pos:end="9:72"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24">num_capabilities</name> <init pos:start="7:26" pos:end="9:72">=

        <expr pos:start="9:9" pos:end="9:72"><literal type="number" pos:start="9:9" pos:end="9:11">1</literal> <operator pos:start="9:11" pos:end="9:11">+</operator> <operator pos:start="9:13" pos:end="9:13">(</operator><operator pos:start="9:14" pos:end="9:14">(</operator><name pos:start="9:15" pos:end="9:30"><name pos:start="9:15" pos:end="9:22">mhHeader</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:30">length</name></name> <operator pos:start="9:32" pos:end="9:32">-</operator> <sizeof pos:start="9:34" pos:end="9:51">sizeof<argument_list pos:start="9:40" pos:end="9:51">(<argument pos:start="9:41" pos:end="9:50"><expr pos:start="9:41" pos:end="9:50"><name pos:start="9:41" pos:end="9:50">VSCMsgInit</name></expr></argument>)</argument_list></sizeof><operator pos:start="9:52" pos:end="9:52">)</operator> <operator pos:start="9:54" pos:end="9:54">/</operator> <sizeof pos:start="9:56" pos:end="9:71">sizeof<argument_list pos:start="9:62" pos:end="9:71">(<argument pos:start="9:63" pos:end="9:70"><expr pos:start="9:63" pos:end="9:70"><name pos:start="9:63" pos:end="9:70">uint32_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="9:72" pos:end="9:72">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">QemuThread</name></type> <name pos:start="13:16" pos:end="13:24">thread_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:12">incoming</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">version</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:48"><name pos:start="17:25" pos:end="17:29">ntohl</name><argument_list pos:start="17:30" pos:end="17:48">(<argument pos:start="17:31" pos:end="17:47"><expr pos:start="17:31" pos:end="17:47"><name pos:start="17:31" pos:end="17:47"><name pos:start="17:31" pos:end="17:38">incoming</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:47">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:16">incoming</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:25">version</name></name> <operator pos:start="19:27" pos:end="19:28">!=</operator> <name pos:start="19:30" pos:end="19:43">VSCARD_VERSION</name></expr>)</condition> <block pos:start="19:46" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:9">

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:24">(<expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:19">verbose</name> <operator pos:start="21:21" pos:end="21:21">&gt;</operator> <literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>)</condition> <block pos:start="21:26" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:41">

            <expr_stmt pos:start="23:13" pos:end="25:41"><expr pos:start="23:13" pos:end="25:40"><call pos:start="23:13" pos:end="25:40"><name pos:start="23:13" pos:end="23:18">printf</name><argument_list pos:start="23:19" pos:end="25:40">(<argument pos:start="23:20" pos:end="23:63"><expr pos:start="23:20" pos:end="23:63"><literal type="string" pos:start="23:20" pos:end="23:63">"warning: host has version %d, we have %d\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:23">verbose</name></expr></argument>, <argument pos:start="25:26" pos:end="25:39"><expr pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:39">VSCARD_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:40">(<expr pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:16">incoming</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">magic</name></name> <operator pos:start="31:25" pos:end="31:26">!=</operator> <name pos:start="31:28" pos:end="31:39">VSCARD_MAGIC</name></expr>)</condition> <block pos:start="31:42" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="35:43"><expr pos:start="33:9" pos:end="35:42"><call pos:start="33:9" pos:end="35:42"><name pos:start="33:9" pos:end="33:14">printf</name><argument_list pos:start="33:15" pos:end="35:42">(<argument pos:start="33:16" pos:end="33:56"><expr pos:start="33:16" pos:end="33:56"><literal type="string" pos:start="33:16" pos:end="33:56">"unexpected magic: got %d, expected %d\n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:20">incoming</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:27">magic</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:41">VSCARD_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="41:5" pos:end="45:5">for <control pos:start="41:9" pos:end="41:43">(<init pos:start="41:10" pos:end="41:16"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr> ;</init> <condition pos:start="41:18" pos:end="41:38"><expr pos:start="41:18" pos:end="41:37"><name pos:start="41:18" pos:end="41:18">i</name> <operator pos:start="41:20" pos:end="41:20">&lt;</operator> <name pos:start="41:22" pos:end="41:37">num_capabilities</name></expr>;</condition> <incr pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><operator pos:start="41:40" pos:end="41:41">++</operator><name pos:start="41:42" pos:end="41:42">i</name></expr></incr>)</control> <block pos:start="41:45" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:49">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:20">capabilities</name><index pos:start="43:21" pos:end="43:23">[<expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">i</name></expr>]</index></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <call pos:start="43:27" pos:end="43:48"><name pos:start="43:27" pos:end="43:31">ntohl</name><argument_list pos:start="43:32" pos:end="43:48">(<argument pos:start="43:33" pos:end="43:47"><expr pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:44">capabilities</name><index pos:start="43:45" pos:end="43:47">[<expr pos:start="43:46" pos:end="43:46"><name pos:start="43:46" pos:end="43:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="47:5" pos:end="47:36">/* Future: check capabilities */</comment>

    <comment type="block" pos:start="49:5" pos:end="51:46">/* remove whatever reader might be left in qemu,

     * in case of an unclean previous exit. */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:66"><expr pos:start="53:5" pos:end="53:65"><call pos:start="53:5" pos:end="53:65"><name pos:start="53:5" pos:end="53:12">send_msg</name><argument_list pos:start="53:13" pos:end="53:65">(<argument pos:start="53:14" pos:end="53:29"><expr pos:start="53:14" pos:end="53:29"><name pos:start="53:14" pos:end="53:29">VSC_ReaderRemove</name></expr></argument>, <argument pos:start="53:32" pos:end="53:55"><expr pos:start="53:32" pos:end="53:55"><name pos:start="53:32" pos:end="53:55">VSCARD_MINIMAL_READER_ID</name></expr></argument>, <argument pos:start="53:58" pos:end="53:61"><expr pos:start="53:58" pos:end="53:61"><name pos:start="53:58" pos:end="53:61">NULL</name></expr></argument>, <argument pos:start="53:64" pos:end="53:64"><expr pos:start="53:64" pos:end="53:64"><literal type="number" pos:start="53:64" pos:end="53:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="57:26">/* launch the event_thread. This will trigger reader adds for all the

     * existing readers */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:71"><expr pos:start="59:5" pos:end="59:70"><call pos:start="59:5" pos:end="59:70"><name pos:start="59:5" pos:end="59:22">qemu_thread_create</name><argument_list pos:start="59:23" pos:end="59:70">(<argument pos:start="59:24" pos:end="59:33"><expr pos:start="59:24" pos:end="59:33"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:33">thread_id</name></expr></argument>, <argument pos:start="59:36" pos:end="59:46"><expr pos:start="59:36" pos:end="59:46"><literal type="string" pos:start="59:36" pos:end="59:46">"vsc/event"</literal></expr></argument>, <argument pos:start="59:49" pos:end="59:60"><expr pos:start="59:49" pos:end="59:60"><name pos:start="59:49" pos:end="59:60">event_thread</name></expr></argument>, <argument pos:start="59:63" pos:end="59:66"><expr pos:start="59:63" pos:end="59:66"><name pos:start="59:63" pos:end="59:66">NULL</name></expr></argument>, <argument pos:start="59:69" pos:end="59:69"><expr pos:start="59:69" pos:end="59:69"><literal type="number" pos:start="59:69" pos:end="59:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
