<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17491.c" pos:tabs="8"><function pos:start="1:1" pos:end="393:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">decode_update_thread_context</name><parameter_list pos:start="1:40" pos:end="3:66">(<parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:59"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dst</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:65"><decl pos:start="3:41" pos:end="3:65"><type pos:start="3:41" pos:end="3:65"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:60">AVCodecContext</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">src</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="393:1">{<block_content pos:start="7:5" pos:end="391:15">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">h</name> <init pos:start="7:20" pos:end="7:35">= <expr pos:start="7:22" pos:end="7:35"><name pos:start="7:22" pos:end="7:35"><name pos:start="7:22" pos:end="7:24">dst</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">priv_data</name></name></expr></init></decl>, <decl pos:start="7:38" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:38" pos:end="7:38">*</modifier></type><name pos:start="7:39" pos:end="7:40">h1</name> <init pos:start="7:42" pos:end="7:57">= <expr pos:start="7:44" pos:end="7:57"><name pos:start="7:44" pos:end="7:57"><name pos:start="7:44" pos:end="7:46">src</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:57">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">inited</name> <init pos:start="9:16" pos:end="9:39">= <expr pos:start="9:18" pos:end="9:39"><name pos:start="9:18" pos:end="9:39"><name pos:start="9:18" pos:end="9:18">h</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:39">context_initialized</name></name></expr></init></decl>, <decl pos:start="9:42" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:42" pos:end="9:44">err</name> <init pos:start="9:46" pos:end="9:48">= <expr pos:start="9:48" pos:end="9:48"><literal type="number" pos:start="9:48" pos:end="9:48">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:29">context_reinitialized</name> <init pos:start="11:31" pos:end="11:33">= <expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:11">dst</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <name pos:start="17:16" pos:end="17:18">src</name> <operator pos:start="17:20" pos:end="17:21">||</operator> <operator pos:start="17:23" pos:end="17:23">!</operator><name pos:start="17:24" pos:end="17:46"><name pos:start="17:24" pos:end="17:25">h1</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:46">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="97:5"><if pos:start="23:5" pos:end="97:5">if <condition pos:start="23:8" pos:end="37:57">(<expr pos:start="23:9" pos:end="37:56"><name pos:start="23:9" pos:end="23:14">inited</name> <operator pos:start="23:16" pos:end="23:17">&amp;&amp;</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:17"><name pos:start="25:10" pos:end="25:10">h</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">width</name></name>                 <operator pos:start="25:35" pos:end="25:36">!=</operator> <name pos:start="25:38" pos:end="25:46"><name pos:start="25:38" pos:end="25:39">h1</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:46">width</name></name>                 <operator pos:start="25:64" pos:end="25:65">||</operator>

         <name pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:10">h</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:18">height</name></name>                <operator pos:start="27:35" pos:end="27:36">!=</operator> <name pos:start="27:38" pos:end="27:47"><name pos:start="27:38" pos:end="27:39">h1</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:47">height</name></name>                <operator pos:start="27:64" pos:end="27:65">||</operator>

         <name pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:10">h</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:20">mb_width</name></name>              <operator pos:start="29:35" pos:end="29:36">!=</operator> <name pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:39">h1</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:49">mb_width</name></name>              <operator pos:start="29:64" pos:end="29:65">||</operator>

         <name pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:10">h</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:21">mb_height</name></name>             <operator pos:start="31:35" pos:end="31:36">!=</operator> <name pos:start="31:38" pos:end="31:50"><name pos:start="31:38" pos:end="31:39">h1</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:50">mb_height</name></name>             <operator pos:start="31:64" pos:end="31:65">||</operator>

         <name pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:10">h</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">sps</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:30">bit_depth_luma</name></name>    <operator pos:start="33:35" pos:end="33:36">!=</operator> <name pos:start="33:38" pos:end="33:59"><name pos:start="33:38" pos:end="33:39">h1</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:44">sps</name><operator pos:start="33:45" pos:end="33:45">.</operator><name pos:start="33:46" pos:end="33:59">bit_depth_luma</name></name>    <operator pos:start="33:64" pos:end="33:65">||</operator>

         <name pos:start="35:10" pos:end="35:33"><name pos:start="35:10" pos:end="35:10">h</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:15">sps</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:33">chroma_format_idc</name></name> <operator pos:start="35:35" pos:end="35:36">!=</operator> <name pos:start="35:38" pos:end="35:62"><name pos:start="35:38" pos:end="35:39">h1</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:44">sps</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:62">chroma_format_idc</name></name> <operator pos:start="35:64" pos:end="35:65">||</operator>

         <name pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:10">h</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">sps</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:26">colorspace</name></name>        <operator pos:start="37:35" pos:end="37:36">!=</operator> <name pos:start="37:38" pos:end="37:55"><name pos:start="37:38" pos:end="37:39">h1</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:44">sps</name><operator pos:start="37:45" pos:end="37:45">.</operator><name pos:start="37:46" pos:end="37:55">colorspace</name></name><operator pos:start="37:56" pos:end="37:56">)</operator></expr>)</condition> <block pos:start="37:59" pos:end="97:5">{<block_content pos:start="47:9" pos:end="95:75">



        <comment type="block" pos:start="41:9" pos:end="45:31">/* set bits_per_raw_sample to the previous value. the check for changed

         * bit depth in h264_set_parameter_from_sps() uses it and sets it to

         * the current value */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:62"><expr pos:start="47:9" pos:end="47:61"><name pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:9">h</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:37">bits_per_raw_sample</name></name> <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:61"><name pos:start="47:41" pos:end="47:41">h</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:46">sps</name><operator pos:start="47:47" pos:end="47:47">.</operator><name pos:start="47:48" pos:end="47:61">bit_depth_luma</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:16">av_freep</name><argument_list pos:start="51:17" pos:end="51:39">(<argument pos:start="51:18" pos:end="51:38"><expr pos:start="51:18" pos:end="51:38"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:38"><name pos:start="51:19" pos:end="51:19">h</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:38">bipred_scratchpad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:9">h</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">width</name></name>     <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:32"><name pos:start="55:24" pos:end="55:25">h1</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:32">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:9">h</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">height</name></name>    <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:25">h1</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:37"><expr pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">h</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">mb_height</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:36"><name pos:start="59:24" pos:end="59:25">h1</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:36">mb_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:9">h</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:19">mb_width</name></name>  <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:25">h1</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:35">mb_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:9">h</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:17">mb_num</name></name>    <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:33"><name pos:start="63:24" pos:end="63:25">h1</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:33">mb_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">h</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">mb_stride</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:25">h1</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:36">mb_stride</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">h</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">b_stride</name></name>  <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:35"><name pos:start="67:24" pos:end="67:25">h1</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:35">b_stride</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:53">(<expr pos:start="71:13" pos:end="71:52"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:16">err</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:47"><name pos:start="71:20" pos:end="71:41">h264_slice_header_init</name><argument_list pos:start="71:42" pos:end="71:47">(<argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><name pos:start="71:43" pos:end="71:43">h</name></expr></argument>, <argument pos:start="71:46" pos:end="71:46"><expr pos:start="71:46" pos:end="71:46"><literal type="number" pos:start="71:46" pos:end="71:46">1</literal></expr></argument>)</argument_list></call><operator pos:start="71:48" pos:end="71:48">)</operator> <operator pos:start="71:50" pos:end="71:50">&lt;</operator> <literal type="number" pos:start="71:52" pos:end="71:52">0</literal></expr>)</condition> <block pos:start="71:55" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:23">

            <expr_stmt pos:start="73:13" pos:end="73:78"><expr pos:start="73:13" pos:end="73:77"><call pos:start="73:13" pos:end="73:77"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:77">(<argument pos:start="73:20" pos:end="73:27"><expr pos:start="73:20" pos:end="73:27"><name pos:start="73:20" pos:end="73:27"><name pos:start="73:20" pos:end="73:20">h</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:27">avctx</name></name></expr></argument>, <argument pos:start="73:30" pos:end="73:41"><expr pos:start="73:30" pos:end="73:41"><name pos:start="73:30" pos:end="73:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:44" pos:end="73:76"><expr pos:start="73:44" pos:end="73:76"><literal type="string" pos:start="73:44" pos:end="73:76">"h264_slice_header_init() failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:23">return <expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:29">context_reinitialized</name> <operator pos:start="79:31" pos:end="79:31">=</operator> <literal type="number" pos:start="79:33" pos:end="79:33">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="83:9" pos:end="85:65">/* update linesize on resize. The decoder doesn't

         * necessarily call h264_frame_start in the new thread */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:9">h</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:19">linesize</name></name>   <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:26">h1</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:36">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:9">h</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:21">uvlinesize</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:38"><name pos:start="89:25" pos:end="89:26">h1</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:38">uvlinesize</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="93:9" pos:end="93:67">/* copy block_offset since frame_start may not be called */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:75"><expr pos:start="95:9" pos:end="95:74"><call pos:start="95:9" pos:end="95:74"><name pos:start="95:9" pos:end="95:14">memcpy</name><argument_list pos:start="95:15" pos:end="95:74">(<argument pos:start="95:16" pos:end="95:30"><expr pos:start="95:16" pos:end="95:30"><name pos:start="95:16" pos:end="95:30"><name pos:start="95:16" pos:end="95:16">h</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:30">block_offset</name></name></expr></argument>, <argument pos:start="95:33" pos:end="95:48"><expr pos:start="95:33" pos:end="95:48"><name pos:start="95:33" pos:end="95:48"><name pos:start="95:33" pos:end="95:34">h1</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:48">block_offset</name></name></expr></argument>, <argument pos:start="95:51" pos:end="95:73"><expr pos:start="95:51" pos:end="95:73"><sizeof pos:start="95:51" pos:end="95:73">sizeof<argument_list pos:start="95:57" pos:end="95:73">(<argument pos:start="95:58" pos:end="95:72"><expr pos:start="95:58" pos:end="95:72"><name pos:start="95:58" pos:end="95:72"><name pos:start="95:58" pos:end="95:58">h</name><operator pos:start="95:59" pos:end="95:60">-&gt;</operator><name pos:start="95:61" pos:end="95:72">block_offset</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="199:5"><if pos:start="101:5" pos:end="199:5">if <condition pos:start="101:8" pos:end="101:16">(<expr pos:start="101:9" pos:end="101:15"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:15">inited</name></expr>)</condition> <block pos:start="101:18" pos:end="199:5">{<block_content pos:start="103:9" pos:end="197:35">

        <for pos:start="103:9" pos:end="105:41">for <control pos:start="103:13" pos:end="103:43">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">i</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:38"><expr pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:21">i</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <name pos:start="103:25" pos:end="103:37">MAX_SPS_COUNT</name></expr>;</condition> <incr pos:start="103:40" pos:end="103:42"><expr pos:start="103:40" pos:end="103:42"><name pos:start="103:40" pos:end="103:40">i</name><operator pos:start="103:41" pos:end="103:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:13" pos:end="105:41"><block_content pos:start="105:13" pos:end="105:41">

            <expr_stmt pos:start="105:13" pos:end="105:41"><expr pos:start="105:13" pos:end="105:40"><call pos:start="105:13" pos:end="105:40"><name pos:start="105:13" pos:end="105:20">av_freep</name><argument_list pos:start="105:21" pos:end="105:40">(<argument pos:start="105:22" pos:end="105:39"><expr pos:start="105:22" pos:end="105:39"><name pos:start="105:22" pos:end="105:35"><name pos:start="105:22" pos:end="105:22">h</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:35">sps_buffers</name></name> <operator pos:start="105:37" pos:end="105:37">+</operator> <name pos:start="105:39" pos:end="105:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="109:9" pos:end="111:41">for <control pos:start="109:13" pos:end="109:43">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">i</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:38"><expr pos:start="109:21" pos:end="109:37"><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:37">MAX_PPS_COUNT</name></expr>;</condition> <incr pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><name pos:start="109:40" pos:end="109:40">i</name><operator pos:start="109:41" pos:end="109:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:13" pos:end="111:41"><block_content pos:start="111:13" pos:end="111:41">

            <expr_stmt pos:start="111:13" pos:end="111:41"><expr pos:start="111:13" pos:end="111:40"><call pos:start="111:13" pos:end="111:40"><name pos:start="111:13" pos:end="111:20">av_freep</name><argument_list pos:start="111:21" pos:end="111:40">(<argument pos:start="111:22" pos:end="111:39"><expr pos:start="111:22" pos:end="111:39"><name pos:start="111:22" pos:end="111:35"><name pos:start="111:22" pos:end="111:22">h</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:35">pps_buffers</name></name> <operator pos:start="111:37" pos:end="111:37">+</operator> <name pos:start="111:39" pos:end="111:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="115:9" pos:end="115:35"><expr pos:start="115:9" pos:end="115:34"><call pos:start="115:9" pos:end="115:34"><name pos:start="115:9" pos:end="115:14">memcpy</name><argument_list pos:start="115:15" pos:end="115:34">(<argument pos:start="115:16" pos:end="115:16"><expr pos:start="115:16" pos:end="115:16"><name pos:start="115:16" pos:end="115:16">h</name></expr></argument>, <argument pos:start="115:19" pos:end="115:20"><expr pos:start="115:19" pos:end="115:20"><name pos:start="115:19" pos:end="115:20">h1</name></expr></argument>, <argument pos:start="115:23" pos:end="115:33"><expr pos:start="115:23" pos:end="115:33"><sizeof pos:start="115:23" pos:end="115:33">sizeof<argument_list pos:start="115:29" pos:end="115:33">(<argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><operator pos:start="115:30" pos:end="115:30">*</operator><name pos:start="115:31" pos:end="115:32">h1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:58"><expr pos:start="117:9" pos:end="117:57"><call pos:start="117:9" pos:end="117:57"><name pos:start="117:9" pos:end="117:14">memset</name><argument_list pos:start="117:15" pos:end="117:57">(<argument pos:start="117:16" pos:end="117:29"><expr pos:start="117:16" pos:end="117:29"><name pos:start="117:16" pos:end="117:29"><name pos:start="117:16" pos:end="117:16">h</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:29">sps_buffers</name></name></expr></argument>, <argument pos:start="117:32" pos:end="117:32"><expr pos:start="117:32" pos:end="117:32"><literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr></argument>, <argument pos:start="117:35" pos:end="117:56"><expr pos:start="117:35" pos:end="117:56"><sizeof pos:start="117:35" pos:end="117:56">sizeof<argument_list pos:start="117:41" pos:end="117:56">(<argument pos:start="117:42" pos:end="117:55"><expr pos:start="117:42" pos:end="117:55"><name pos:start="117:42" pos:end="117:55"><name pos:start="117:42" pos:end="117:42">h</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:55">sps_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:58"><expr pos:start="119:9" pos:end="119:57"><call pos:start="119:9" pos:end="119:57"><name pos:start="119:9" pos:end="119:14">memset</name><argument_list pos:start="119:15" pos:end="119:57">(<argument pos:start="119:16" pos:end="119:29"><expr pos:start="119:16" pos:end="119:29"><name pos:start="119:16" pos:end="119:29"><name pos:start="119:16" pos:end="119:16">h</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:29">pps_buffers</name></name></expr></argument>, <argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><literal type="number" pos:start="119:32" pos:end="119:32">0</literal></expr></argument>, <argument pos:start="119:35" pos:end="119:56"><expr pos:start="119:35" pos:end="119:56"><sizeof pos:start="119:35" pos:end="119:56">sizeof<argument_list pos:start="119:41" pos:end="119:56">(<argument pos:start="119:42" pos:end="119:55"><expr pos:start="119:42" pos:end="119:55"><name pos:start="119:42" pos:end="119:55"><name pos:start="119:42" pos:end="119:42">h</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:55">pps_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:41"><expr pos:start="121:9" pos:end="121:40"><call pos:start="121:9" pos:end="121:40"><name pos:start="121:9" pos:end="121:14">memset</name><argument_list pos:start="121:15" pos:end="121:40">(<argument pos:start="121:16" pos:end="121:21"><expr pos:start="121:16" pos:end="121:21"><operator pos:start="121:16" pos:end="121:16">&amp;</operator><name pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:17">h</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:21">er</name></name></expr></argument>, <argument pos:start="121:24" pos:end="121:24"><expr pos:start="121:24" pos:end="121:24"><literal type="number" pos:start="121:24" pos:end="121:24">0</literal></expr></argument>, <argument pos:start="121:27" pos:end="121:39"><expr pos:start="121:27" pos:end="121:39"><sizeof pos:start="121:27" pos:end="121:39">sizeof<argument_list pos:start="121:33" pos:end="121:39">(<argument pos:start="121:34" pos:end="121:38"><expr pos:start="121:34" pos:end="121:38"><name pos:start="121:34" pos:end="121:38"><name pos:start="121:34" pos:end="121:34">h</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:38">er</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><call pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:14">memset</name><argument_list pos:start="123:15" pos:end="123:40">(<argument pos:start="123:16" pos:end="123:21"><expr pos:start="123:16" pos:end="123:21"><operator pos:start="123:16" pos:end="123:16">&amp;</operator><name pos:start="123:17" pos:end="123:21"><name pos:start="123:17" pos:end="123:17">h</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:21">me</name></name></expr></argument>, <argument pos:start="123:24" pos:end="123:24"><expr pos:start="123:24" pos:end="123:24"><literal type="number" pos:start="123:24" pos:end="123:24">0</literal></expr></argument>, <argument pos:start="123:27" pos:end="123:39"><expr pos:start="123:27" pos:end="123:39"><sizeof pos:start="123:27" pos:end="123:39">sizeof<argument_list pos:start="123:33" pos:end="123:39">(<argument pos:start="123:34" pos:end="123:38"><expr pos:start="123:34" pos:end="123:38"><name pos:start="123:34" pos:end="123:38"><name pos:start="123:34" pos:end="123:34">h</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:38">me</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:41"><expr pos:start="125:9" pos:end="125:40"><call pos:start="125:9" pos:end="125:40"><name pos:start="125:9" pos:end="125:14">memset</name><argument_list pos:start="125:15" pos:end="125:40">(<argument pos:start="125:16" pos:end="125:21"><expr pos:start="125:16" pos:end="125:21"><operator pos:start="125:16" pos:end="125:16">&amp;</operator><name pos:start="125:17" pos:end="125:21"><name pos:start="125:17" pos:end="125:17">h</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:21">mb</name></name></expr></argument>, <argument pos:start="125:24" pos:end="125:24"><expr pos:start="125:24" pos:end="125:24"><literal type="number" pos:start="125:24" pos:end="125:24">0</literal></expr></argument>, <argument pos:start="125:27" pos:end="125:39"><expr pos:start="125:27" pos:end="125:39"><sizeof pos:start="125:27" pos:end="125:39">sizeof<argument_list pos:start="125:33" pos:end="125:39">(<argument pos:start="125:34" pos:end="125:38"><expr pos:start="125:34" pos:end="125:38"><name pos:start="125:34" pos:end="125:38"><name pos:start="125:34" pos:end="125:34">h</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:38">mb</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:57"><expr pos:start="127:9" pos:end="127:56"><call pos:start="127:9" pos:end="127:56"><name pos:start="127:9" pos:end="127:14">memset</name><argument_list pos:start="127:15" pos:end="127:56">(<argument pos:start="127:16" pos:end="127:29"><expr pos:start="127:16" pos:end="127:29"><operator pos:start="127:16" pos:end="127:16">&amp;</operator><name pos:start="127:17" pos:end="127:29"><name pos:start="127:17" pos:end="127:17">h</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:29">mb_luma_dc</name></name></expr></argument>, <argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">0</literal></expr></argument>, <argument pos:start="127:35" pos:end="127:55"><expr pos:start="127:35" pos:end="127:55"><sizeof pos:start="127:35" pos:end="127:55">sizeof<argument_list pos:start="127:41" pos:end="127:55">(<argument pos:start="127:42" pos:end="127:54"><expr pos:start="127:42" pos:end="127:54"><name pos:start="127:42" pos:end="127:54"><name pos:start="127:42" pos:end="127:42">h</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:54">mb_luma_dc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:57"><expr pos:start="129:9" pos:end="129:56"><call pos:start="129:9" pos:end="129:56"><name pos:start="129:9" pos:end="129:14">memset</name><argument_list pos:start="129:15" pos:end="129:56">(<argument pos:start="129:16" pos:end="129:29"><expr pos:start="129:16" pos:end="129:29"><operator pos:start="129:16" pos:end="129:16">&amp;</operator><name pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:17">h</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:29">mb_padding</name></name></expr></argument>, <argument pos:start="129:32" pos:end="129:32"><expr pos:start="129:32" pos:end="129:32"><literal type="number" pos:start="129:32" pos:end="129:32">0</literal></expr></argument>, <argument pos:start="129:35" pos:end="129:55"><expr pos:start="129:35" pos:end="129:55"><sizeof pos:start="129:35" pos:end="129:55">sizeof<argument_list pos:start="129:41" pos:end="129:55">(<argument pos:start="129:42" pos:end="129:54"><expr pos:start="129:42" pos:end="129:54"><name pos:start="129:42" pos:end="129:54"><name pos:start="129:42" pos:end="129:42">h</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:54">mb_padding</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:35"><expr pos:start="131:9" pos:end="131:34"><name pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:9">h</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:30">context_initialized</name></name> <operator pos:start="131:32" pos:end="131:32">=</operator> <literal type="number" pos:start="131:34" pos:end="131:34">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:51"><expr pos:start="135:9" pos:end="135:50"><call pos:start="135:9" pos:end="135:50"><name pos:start="135:9" pos:end="135:14">memset</name><argument_list pos:start="135:15" pos:end="135:50">(<argument pos:start="135:16" pos:end="135:26"><expr pos:start="135:16" pos:end="135:26"><operator pos:start="135:16" pos:end="135:16">&amp;</operator><name pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:17">h</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:26">cur_pic</name></name></expr></argument>, <argument pos:start="135:29" pos:end="135:29"><expr pos:start="135:29" pos:end="135:29"><literal type="number" pos:start="135:29" pos:end="135:29">0</literal></expr></argument>, <argument pos:start="135:32" pos:end="135:49"><expr pos:start="135:32" pos:end="135:49"><sizeof pos:start="135:32" pos:end="135:49">sizeof<argument_list pos:start="135:38" pos:end="135:49">(<argument pos:start="135:39" pos:end="135:48"><expr pos:start="135:39" pos:end="135:48"><name pos:start="135:39" pos:end="135:48"><name pos:start="135:39" pos:end="135:39">h</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:48">cur_pic</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:50"><expr pos:start="137:9" pos:end="137:49"><call pos:start="137:9" pos:end="137:49"><name pos:start="137:9" pos:end="137:34">avcodec_get_frame_defaults</name><argument_list pos:start="137:35" pos:end="137:49">(<argument pos:start="137:36" pos:end="137:48"><expr pos:start="137:36" pos:end="137:48"><operator pos:start="137:36" pos:end="137:36">&amp;</operator><name pos:start="137:37" pos:end="137:48"><name pos:start="137:37" pos:end="137:37">h</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:46">cur_pic</name><operator pos:start="137:47" pos:end="137:47">.</operator><name pos:start="137:48" pos:end="137:48">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:40"><expr pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:9">h</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:18">cur_pic</name><operator pos:start="139:19" pos:end="139:19">.</operator><name pos:start="139:20" pos:end="139:21">tf</name><operator pos:start="139:22" pos:end="139:22">.</operator><name pos:start="139:23" pos:end="139:23">f</name></name> <operator pos:start="139:25" pos:end="139:25">=</operator> <operator pos:start="139:27" pos:end="139:27">&amp;</operator><name pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:28">h</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:37">cur_pic</name><operator pos:start="139:38" pos:end="139:38">.</operator><name pos:start="139:39" pos:end="139:39">f</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:35"><expr pos:start="143:9" pos:end="143:34"><name pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:9">h</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:16">avctx</name></name>             <operator pos:start="143:30" pos:end="143:30">=</operator> <name pos:start="143:32" pos:end="143:34">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:36"><expr pos:start="145:9" pos:end="145:35"><name pos:start="145:9" pos:end="145:14"><name pos:start="145:9" pos:end="145:9">h</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:14">DPB</name></name>               <operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:36"><expr pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:28"><name pos:start="147:9" pos:end="147:9">h</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:28">qscale_table_pool</name></name> <operator pos:start="147:30" pos:end="147:30">=</operator> <name pos:start="147:32" pos:end="147:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:36"><expr pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:9">h</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:23">mb_type_pool</name></name>      <operator pos:start="149:30" pos:end="149:30">=</operator> <name pos:start="149:32" pos:end="149:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:36"><expr pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:9">h</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:25">ref_index_pool</name></name>    <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:36"><expr pos:start="153:9" pos:end="153:35"><name pos:start="153:9" pos:end="153:26"><name pos:start="153:9" pos:end="153:9">h</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:26">motion_val_pool</name></name>   <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:35">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:38"><expr pos:start="157:9" pos:end="157:37"><name pos:start="157:9" pos:end="157:11">ret</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:37"><name pos:start="157:15" pos:end="157:34">ff_h264_alloc_tables</name><argument_list pos:start="157:35" pos:end="157:37">(<argument pos:start="157:36" pos:end="157:36"><expr pos:start="157:36" pos:end="157:36"><name pos:start="157:36" pos:end="157:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="165:9"><if pos:start="159:9" pos:end="165:9">if <condition pos:start="159:12" pos:end="159:20">(<expr pos:start="159:13" pos:end="159:19"><name pos:start="159:13" pos:end="159:15">ret</name> <operator pos:start="159:17" pos:end="159:17">&lt;</operator> <literal type="number" pos:start="159:19" pos:end="159:19">0</literal></expr>)</condition> <block pos:start="159:22" pos:end="165:9">{<block_content pos:start="161:13" pos:end="163:23">

            <expr_stmt pos:start="161:13" pos:end="161:78"><expr pos:start="161:13" pos:end="161:77"><call pos:start="161:13" pos:end="161:77"><name pos:start="161:13" pos:end="161:18">av_log</name><argument_list pos:start="161:19" pos:end="161:77">(<argument pos:start="161:20" pos:end="161:22"><expr pos:start="161:20" pos:end="161:22"><name pos:start="161:20" pos:end="161:22">dst</name></expr></argument>, <argument pos:start="161:25" pos:end="161:36"><expr pos:start="161:25" pos:end="161:36"><name pos:start="161:25" pos:end="161:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="161:39" pos:end="161:76"><expr pos:start="161:39" pos:end="161:76"><literal type="string" pos:start="161:39" pos:end="161:76">"Could not allocate memory for h264\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="163:13" pos:end="163:23">return <expr pos:start="163:20" pos:end="163:22"><name pos:start="163:20" pos:end="163:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:30"><expr pos:start="167:9" pos:end="167:29"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <call pos:start="167:15" pos:end="167:29"><name pos:start="167:15" pos:end="167:26">context_init</name><argument_list pos:start="167:27" pos:end="167:29">(<argument pos:start="167:28" pos:end="167:28"><expr pos:start="167:28" pos:end="167:28"><name pos:start="167:28" pos:end="167:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:20">(<expr pos:start="169:13" pos:end="169:19"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">&lt;</operator> <literal type="number" pos:start="169:19" pos:end="169:19">0</literal></expr>)</condition> <block pos:start="169:22" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:23">

            <expr_stmt pos:start="171:13" pos:end="171:66"><expr pos:start="171:13" pos:end="171:65"><call pos:start="171:13" pos:end="171:65"><name pos:start="171:13" pos:end="171:18">av_log</name><argument_list pos:start="171:19" pos:end="171:65">(<argument pos:start="171:20" pos:end="171:22"><expr pos:start="171:20" pos:end="171:22"><name pos:start="171:20" pos:end="171:22">dst</name></expr></argument>, <argument pos:start="171:25" pos:end="171:36"><expr pos:start="171:25" pos:end="171:36"><name pos:start="171:25" pos:end="171:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:39" pos:end="171:64"><expr pos:start="171:39" pos:end="171:64"><literal type="string" pos:start="171:39" pos:end="171:64">"context_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="173:13" pos:end="173:23">return <expr pos:start="173:20" pos:end="173:22"><name pos:start="173:20" pos:end="173:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <for pos:start="179:9" pos:end="185:9">for <control pos:start="179:13" pos:end="179:31">(<init pos:start="179:14" pos:end="179:19"><expr pos:start="179:14" pos:end="179:18"><name pos:start="179:14" pos:end="179:14">i</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>;</init> <condition pos:start="179:21" pos:end="179:26"><expr pos:start="179:21" pos:end="179:25"><name pos:start="179:21" pos:end="179:21">i</name> <operator pos:start="179:23" pos:end="179:23">&lt;</operator> <literal type="number" pos:start="179:25" pos:end="179:25">2</literal></expr>;</condition> <incr pos:start="179:28" pos:end="179:30"><expr pos:start="179:28" pos:end="179:30"><name pos:start="179:28" pos:end="179:28">i</name><operator pos:start="179:29" pos:end="179:30">++</operator></expr></incr>)</control> <block pos:start="179:33" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:39">

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:29"><name pos:start="181:13" pos:end="181:13">h</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:26">rbsp_buffer</name><index pos:start="181:27" pos:end="181:29">[<expr pos:start="181:28" pos:end="181:28"><name pos:start="181:28" pos:end="181:28">i</name></expr>]</index></name>      <operator pos:start="181:36" pos:end="181:36">=</operator> <name pos:start="181:38" pos:end="181:41">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:39"><expr pos:start="183:13" pos:end="183:38"><name pos:start="183:13" pos:end="183:34"><name pos:start="183:13" pos:end="183:13">h</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:31">rbsp_buffer_size</name><index pos:start="183:32" pos:end="183:34">[<expr pos:start="183:33" pos:end="183:33"><name pos:start="183:33" pos:end="183:33">i</name></expr>]</index></name> <operator pos:start="183:36" pos:end="183:36">=</operator> <literal type="number" pos:start="183:38" pos:end="183:38">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="187:9" pos:end="187:36"><expr pos:start="187:9" pos:end="187:35"><name pos:start="187:9" pos:end="187:28"><name pos:start="187:9" pos:end="187:9">h</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:28">bipred_scratchpad</name></name> <operator pos:start="187:30" pos:end="187:30">=</operator> <name pos:start="187:32" pos:end="187:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:9">h</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:26">edge_emu_buffer</name></name>   <operator pos:start="189:30" pos:end="189:30">=</operator> <name pos:start="189:32" pos:end="189:35">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:33"><expr pos:start="193:9" pos:end="193:32"><name pos:start="193:9" pos:end="193:28"><name pos:start="193:9" pos:end="193:9">h</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:25">thread_context</name><index pos:start="193:26" pos:end="193:28">[<expr pos:start="193:27" pos:end="193:27"><literal type="number" pos:start="193:27" pos:end="193:27">0</literal></expr>]</index></name> <operator pos:start="193:30" pos:end="193:30">=</operator> <name pos:start="193:32" pos:end="193:32">h</name></expr>;</expr_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:35"><expr pos:start="197:9" pos:end="197:34"><name pos:start="197:9" pos:end="197:30"><name pos:start="197:9" pos:end="197:9">h</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:30">context_initialized</name></name> <operator pos:start="197:32" pos:end="197:32">=</operator> <literal type="number" pos:start="197:34" pos:end="197:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:54"><expr pos:start="203:5" pos:end="203:53"><name pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:5">h</name><operator pos:start="203:6" pos:end="203:7">-&gt;</operator><name pos:start="203:8" pos:end="203:12">avctx</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:26">coded_height</name></name>  <operator pos:start="203:29" pos:end="203:29">=</operator> <name pos:start="203:31" pos:end="203:53"><name pos:start="203:31" pos:end="203:32">h1</name><operator pos:start="203:33" pos:end="203:34">-&gt;</operator><name pos:start="203:35" pos:end="203:39">avctx</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:53">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:53"><expr pos:start="205:5" pos:end="205:52"><name pos:start="205:5" pos:end="205:25"><name pos:start="205:5" pos:end="205:5">h</name><operator pos:start="205:6" pos:end="205:7">-&gt;</operator><name pos:start="205:8" pos:end="205:12">avctx</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:25">coded_width</name></name>   <operator pos:start="205:29" pos:end="205:29">=</operator> <name pos:start="205:31" pos:end="205:52"><name pos:start="205:31" pos:end="205:32">h1</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:39">avctx</name><operator pos:start="205:40" pos:end="205:41">-&gt;</operator><name pos:start="205:42" pos:end="205:52">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:47"><expr pos:start="207:5" pos:end="207:46"><name pos:start="207:5" pos:end="207:19"><name pos:start="207:5" pos:end="207:5">h</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:12">avctx</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:19">width</name></name>         <operator pos:start="207:29" pos:end="207:29">=</operator> <name pos:start="207:31" pos:end="207:46"><name pos:start="207:31" pos:end="207:32">h1</name><operator pos:start="207:33" pos:end="207:34">-&gt;</operator><name pos:start="207:35" pos:end="207:39">avctx</name><operator pos:start="207:40" pos:end="207:41">-&gt;</operator><name pos:start="207:42" pos:end="207:46">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:48"><expr pos:start="209:5" pos:end="209:47"><name pos:start="209:5" pos:end="209:20"><name pos:start="209:5" pos:end="209:5">h</name><operator pos:start="209:6" pos:end="209:7">-&gt;</operator><name pos:start="209:8" pos:end="209:12">avctx</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:20">height</name></name>        <operator pos:start="209:29" pos:end="209:29">=</operator> <name pos:start="209:31" pos:end="209:47"><name pos:start="209:31" pos:end="209:32">h1</name><operator pos:start="209:33" pos:end="209:34">-&gt;</operator><name pos:start="209:35" pos:end="209:39">avctx</name><operator pos:start="209:40" pos:end="209:41">-&gt;</operator><name pos:start="209:42" pos:end="209:47">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:55"><expr pos:start="211:5" pos:end="211:54"><name pos:start="211:5" pos:end="211:27"><name pos:start="211:5" pos:end="211:5">h</name><operator pos:start="211:6" pos:end="211:7">-&gt;</operator><name pos:start="211:8" pos:end="211:27">coded_picture_number</name></name> <operator pos:start="211:29" pos:end="211:29">=</operator> <name pos:start="211:31" pos:end="211:54"><name pos:start="211:31" pos:end="211:32">h1</name><operator pos:start="211:33" pos:end="211:34">-&gt;</operator><name pos:start="211:35" pos:end="211:54">coded_picture_number</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:46"><expr pos:start="213:5" pos:end="213:45"><name pos:start="213:5" pos:end="213:18"><name pos:start="213:5" pos:end="213:5">h</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:18">first_field</name></name>          <operator pos:start="213:29" pos:end="213:29">=</operator> <name pos:start="213:31" pos:end="213:45"><name pos:start="213:31" pos:end="213:32">h1</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:45">first_field</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:52"><expr pos:start="215:5" pos:end="215:51"><name pos:start="215:5" pos:end="215:24"><name pos:start="215:5" pos:end="215:5">h</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:24">picture_structure</name></name>    <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:51"><name pos:start="215:31" pos:end="215:32">h1</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:51">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:41"><expr pos:start="217:5" pos:end="217:40"><name pos:start="217:5" pos:end="217:13"><name pos:start="217:5" pos:end="217:5">h</name><operator pos:start="217:6" pos:end="217:7">-&gt;</operator><name pos:start="217:8" pos:end="217:13">qscale</name></name>               <operator pos:start="217:29" pos:end="217:29">=</operator> <name pos:start="217:31" pos:end="217:40"><name pos:start="217:31" pos:end="217:32">h1</name><operator pos:start="217:33" pos:end="217:34">-&gt;</operator><name pos:start="217:35" pos:end="217:40">qscale</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:44"><expr pos:start="219:5" pos:end="219:43"><name pos:start="219:5" pos:end="219:16"><name pos:start="219:5" pos:end="219:5">h</name><operator pos:start="219:6" pos:end="219:7">-&gt;</operator><name pos:start="219:8" pos:end="219:16">droppable</name></name>            <operator pos:start="219:29" pos:end="219:29">=</operator> <name pos:start="219:31" pos:end="219:43"><name pos:start="219:31" pos:end="219:32">h1</name><operator pos:start="219:33" pos:end="219:34">-&gt;</operator><name pos:start="219:35" pos:end="219:43">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:52"><expr pos:start="221:5" pos:end="221:51"><name pos:start="221:5" pos:end="221:24"><name pos:start="221:5" pos:end="221:5">h</name><operator pos:start="221:6" pos:end="221:7">-&gt;</operator><name pos:start="221:8" pos:end="221:24">data_partitioning</name></name>    <operator pos:start="221:29" pos:end="221:29">=</operator> <name pos:start="221:31" pos:end="221:51"><name pos:start="221:31" pos:end="221:32">h1</name><operator pos:start="221:33" pos:end="221:34">-&gt;</operator><name pos:start="221:35" pos:end="221:51">data_partitioning</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:44"><expr pos:start="223:5" pos:end="223:43"><name pos:start="223:5" pos:end="223:16"><name pos:start="223:5" pos:end="223:5">h</name><operator pos:start="223:6" pos:end="223:7">-&gt;</operator><name pos:start="223:8" pos:end="223:16">low_delay</name></name>            <operator pos:start="223:29" pos:end="223:29">=</operator> <name pos:start="223:31" pos:end="223:43"><name pos:start="223:31" pos:end="223:32">h1</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:43">low_delay</name></name></expr>;</expr_stmt>



    <for pos:start="227:5" pos:end="237:5">for <control pos:start="227:9" pos:end="227:43">(<init pos:start="227:10" pos:end="227:15"><expr pos:start="227:10" pos:end="227:14"><name pos:start="227:10" pos:end="227:10">i</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <literal type="number" pos:start="227:14" pos:end="227:14">0</literal></expr>;</init> <condition pos:start="227:17" pos:end="227:38"><expr pos:start="227:17" pos:end="227:37"><name pos:start="227:17" pos:end="227:17">i</name> <operator pos:start="227:19" pos:end="227:19">&lt;</operator> <name pos:start="227:21" pos:end="227:37">MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="227:40" pos:end="227:42"><expr pos:start="227:40" pos:end="227:42"><name pos:start="227:40" pos:end="227:40">i</name><operator pos:start="227:41" pos:end="227:42">++</operator></expr></incr>)</control> <block pos:start="227:45" pos:end="237:5">{<block_content pos:start="229:9" pos:end="235:23">

        <expr_stmt pos:start="229:9" pos:end="229:37"><expr pos:start="229:9" pos:end="229:36"><call pos:start="229:9" pos:end="229:36"><name pos:start="229:9" pos:end="229:21">unref_picture</name><argument_list pos:start="229:22" pos:end="229:36">(<argument pos:start="229:23" pos:end="229:23"><expr pos:start="229:23" pos:end="229:23"><name pos:start="229:23" pos:end="229:23">h</name></expr></argument>, <argument pos:start="229:26" pos:end="229:35"><expr pos:start="229:26" pos:end="229:35"><operator pos:start="229:26" pos:end="229:26">&amp;</operator><name pos:start="229:27" pos:end="229:35"><name pos:start="229:27" pos:end="229:27">h</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:32">DPB</name><index pos:start="229:33" pos:end="229:35">[<expr pos:start="229:34" pos:end="229:34"><name pos:start="229:34" pos:end="229:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="231:9" pos:end="235:23"><if pos:start="231:9" pos:end="235:23">if <condition pos:start="231:12" pos:end="233:64">(<expr pos:start="231:13" pos:end="233:63"><name pos:start="231:13" pos:end="231:22"><name pos:start="231:13" pos:end="231:14">h1</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:19">DPB</name><index pos:start="231:20" pos:end="231:22">[<expr pos:start="231:21" pos:end="231:21"><name pos:start="231:21" pos:end="231:21">i</name></expr>]</index></name><operator pos:start="231:23" pos:end="231:23">.</operator><name pos:start="231:24" pos:end="231:32"><name pos:start="231:24" pos:end="231:24">f</name><operator pos:start="231:25" pos:end="231:25">.</operator><name pos:start="231:26" pos:end="231:29">data</name><index pos:start="231:30" pos:end="231:32">[<expr pos:start="231:31" pos:end="231:31"><literal type="number" pos:start="231:31" pos:end="231:31">0</literal></expr>]</index></name> <operator pos:start="231:34" pos:end="231:35">&amp;&amp;</operator>

            <operator pos:start="233:13" pos:end="233:13">(</operator><name pos:start="233:14" pos:end="233:16">ret</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <call pos:start="233:20" pos:end="233:58"><name pos:start="233:20" pos:end="233:30">ref_picture</name><argument_list pos:start="233:31" pos:end="233:58">(<argument pos:start="233:32" pos:end="233:32"><expr pos:start="233:32" pos:end="233:32"><name pos:start="233:32" pos:end="233:32">h</name></expr></argument>, <argument pos:start="233:35" pos:end="233:44"><expr pos:start="233:35" pos:end="233:44"><operator pos:start="233:35" pos:end="233:35">&amp;</operator><name pos:start="233:36" pos:end="233:44"><name pos:start="233:36" pos:end="233:36">h</name><operator pos:start="233:37" pos:end="233:38">-&gt;</operator><name pos:start="233:39" pos:end="233:41">DPB</name><index pos:start="233:42" pos:end="233:44">[<expr pos:start="233:43" pos:end="233:43"><name pos:start="233:43" pos:end="233:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="233:47" pos:end="233:57"><expr pos:start="233:47" pos:end="233:57"><operator pos:start="233:47" pos:end="233:47">&amp;</operator><name pos:start="233:48" pos:end="233:57"><name pos:start="233:48" pos:end="233:49">h1</name><operator pos:start="233:50" pos:end="233:51">-&gt;</operator><name pos:start="233:52" pos:end="233:54">DPB</name><index pos:start="233:55" pos:end="233:57">[<expr pos:start="233:56" pos:end="233:56"><name pos:start="233:56" pos:end="233:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="233:59" pos:end="233:59">)</operator> <operator pos:start="233:61" pos:end="233:61">&lt;</operator> <literal type="number" pos:start="233:63" pos:end="233:63">0</literal></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:23"><block_content pos:start="235:13" pos:end="235:23">

            <return pos:start="235:13" pos:end="235:23">return <expr pos:start="235:20" pos:end="235:22"><name pos:start="235:20" pos:end="235:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="241:5" pos:end="241:60"><expr pos:start="241:5" pos:end="241:59"><name pos:start="241:5" pos:end="241:18"><name pos:start="241:5" pos:end="241:5">h</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:18">cur_pic_ptr</name></name> <operator pos:start="241:20" pos:end="241:20">=</operator> <call pos:start="241:22" pos:end="241:59"><name pos:start="241:22" pos:end="241:35">REBASE_PICTURE</name><argument_list pos:start="241:36" pos:end="241:59">(<argument pos:start="241:37" pos:end="241:51"><expr pos:start="241:37" pos:end="241:51"><name pos:start="241:37" pos:end="241:51"><name pos:start="241:37" pos:end="241:38">h1</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:51">cur_pic_ptr</name></name></expr></argument>, <argument pos:start="241:54" pos:end="241:54"><expr pos:start="241:54" pos:end="241:54"><name pos:start="241:54" pos:end="241:54">h</name></expr></argument>, <argument pos:start="241:57" pos:end="241:58"><expr pos:start="241:57" pos:end="241:58"><name pos:start="241:57" pos:end="241:58">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:34"><expr pos:start="243:5" pos:end="243:33"><call pos:start="243:5" pos:end="243:33"><name pos:start="243:5" pos:end="243:17">unref_picture</name><argument_list pos:start="243:18" pos:end="243:33">(<argument pos:start="243:19" pos:end="243:19"><expr pos:start="243:19" pos:end="243:19"><name pos:start="243:19" pos:end="243:19">h</name></expr></argument>, <argument pos:start="243:22" pos:end="243:32"><expr pos:start="243:22" pos:end="243:32"><operator pos:start="243:22" pos:end="243:22">&amp;</operator><name pos:start="243:23" pos:end="243:32"><name pos:start="243:23" pos:end="243:23">h</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:32">cur_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="245:5" pos:end="247:19"><if pos:start="245:5" pos:end="247:19">if <condition pos:start="245:8" pos:end="245:62">(<expr pos:start="245:9" pos:end="245:61"><operator pos:start="245:9" pos:end="245:9">(</operator><name pos:start="245:10" pos:end="245:12">ret</name> <operator pos:start="245:14" pos:end="245:14">=</operator> <call pos:start="245:16" pos:end="245:56"><name pos:start="245:16" pos:end="245:26">ref_picture</name><argument_list pos:start="245:27" pos:end="245:56">(<argument pos:start="245:28" pos:end="245:28"><expr pos:start="245:28" pos:end="245:28"><name pos:start="245:28" pos:end="245:28">h</name></expr></argument>, <argument pos:start="245:31" pos:end="245:41"><expr pos:start="245:31" pos:end="245:41"><operator pos:start="245:31" pos:end="245:31">&amp;</operator><name pos:start="245:32" pos:end="245:41"><name pos:start="245:32" pos:end="245:32">h</name><operator pos:start="245:33" pos:end="245:34">-&gt;</operator><name pos:start="245:35" pos:end="245:41">cur_pic</name></name></expr></argument>, <argument pos:start="245:44" pos:end="245:55"><expr pos:start="245:44" pos:end="245:55"><operator pos:start="245:44" pos:end="245:44">&amp;</operator><name pos:start="245:45" pos:end="245:55"><name pos:start="245:45" pos:end="245:46">h1</name><operator pos:start="245:47" pos:end="245:48">-&gt;</operator><name pos:start="245:49" pos:end="245:55">cur_pic</name></name></expr></argument>)</argument_list></call><operator pos:start="245:57" pos:end="245:57">)</operator> <operator pos:start="245:59" pos:end="245:59">&lt;</operator> <literal type="number" pos:start="245:61" pos:end="245:61">0</literal></expr>)</condition><block type="pseudo" pos:start="247:9" pos:end="247:19"><block_content pos:start="247:9" pos:end="247:19">

        <return pos:start="247:9" pos:end="247:19">return <expr pos:start="247:16" pos:end="247:18"><name pos:start="247:16" pos:end="247:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:45"><expr pos:start="251:5" pos:end="251:44"><name pos:start="251:5" pos:end="251:22"><name pos:start="251:5" pos:end="251:5">h</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:22">workaround_bugs</name></name> <operator pos:start="251:24" pos:end="251:24">=</operator> <name pos:start="251:26" pos:end="251:44"><name pos:start="251:26" pos:end="251:27">h1</name><operator pos:start="251:28" pos:end="251:29">-&gt;</operator><name pos:start="251:30" pos:end="251:44">workaround_bugs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:39"><expr pos:start="253:5" pos:end="253:38"><name pos:start="253:5" pos:end="253:16"><name pos:start="253:5" pos:end="253:5">h</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:16">low_delay</name></name>       <operator pos:start="253:24" pos:end="253:24">=</operator> <name pos:start="253:26" pos:end="253:38"><name pos:start="253:26" pos:end="253:27">h1</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:38">low_delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:39"><expr pos:start="255:5" pos:end="255:38"><name pos:start="255:5" pos:end="255:16"><name pos:start="255:5" pos:end="255:5">h</name><operator pos:start="255:6" pos:end="255:7">-&gt;</operator><name pos:start="255:8" pos:end="255:16">droppable</name></name>       <operator pos:start="255:24" pos:end="255:24">=</operator> <name pos:start="255:26" pos:end="255:38"><name pos:start="255:26" pos:end="255:27">h1</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:38">droppable</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="259:5" pos:end="261:58">/* frame_start may not be called for the next thread (if it's decoding

     * a bottom field) so this has to be allocated here */</comment>

    <expr_stmt pos:start="263:5" pos:end="263:49"><expr pos:start="263:5" pos:end="263:48"><name pos:start="263:5" pos:end="263:7">err</name> <operator pos:start="263:9" pos:end="263:9">=</operator> <call pos:start="263:11" pos:end="263:48"><name pos:start="263:11" pos:end="263:31">alloc_scratch_buffers</name><argument_list pos:start="263:32" pos:end="263:48">(<argument pos:start="263:33" pos:end="263:33"><expr pos:start="263:33" pos:end="263:33"><name pos:start="263:33" pos:end="263:33">h</name></expr></argument>, <argument pos:start="263:36" pos:end="263:47"><expr pos:start="263:36" pos:end="263:47"><name pos:start="263:36" pos:end="263:47"><name pos:start="263:36" pos:end="263:37">h1</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:47">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="265:5" pos:end="267:19"><if pos:start="265:5" pos:end="267:19">if <condition pos:start="265:8" pos:end="265:16">(<expr pos:start="265:9" pos:end="265:15"><name pos:start="265:9" pos:end="265:11">err</name> <operator pos:start="265:13" pos:end="265:13">&lt;</operator> <literal type="number" pos:start="265:15" pos:end="265:15">0</literal></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:19"><block_content pos:start="267:9" pos:end="267:19">

        <return pos:start="267:9" pos:end="267:19">return <expr pos:start="267:16" pos:end="267:18"><name pos:start="267:16" pos:end="267:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="271:5" pos:end="271:29">// extradata/NAL handling</comment>

    <expr_stmt pos:start="273:5" pos:end="273:27"><expr pos:start="273:5" pos:end="273:26"><name pos:start="273:5" pos:end="273:13"><name pos:start="273:5" pos:end="273:5">h</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:13">is_avc</name></name> <operator pos:start="273:15" pos:end="273:15">=</operator> <name pos:start="273:17" pos:end="273:26"><name pos:start="273:17" pos:end="273:18">h1</name><operator pos:start="273:19" pos:end="273:20">-&gt;</operator><name pos:start="273:21" pos:end="273:26">is_avc</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="277:5" pos:end="277:14">// SPS/PPS</comment>

    <if_stmt pos:start="279:5" pos:end="285:19"><if pos:start="279:5" pos:end="285:19">if <condition pos:start="279:8" pos:end="283:67">(<expr pos:start="279:9" pos:end="283:66"><operator pos:start="279:9" pos:end="279:9">(</operator><name pos:start="279:10" pos:end="279:12">ret</name> <operator pos:start="279:14" pos:end="279:14">=</operator> <call pos:start="279:16" pos:end="283:61"><name pos:start="279:16" pos:end="279:33">copy_parameter_set</name><argument_list pos:start="279:34" pos:end="283:61">(<argument pos:start="279:35" pos:end="279:57"><expr pos:start="279:35" pos:end="279:57"><operator pos:start="279:35" pos:end="279:35">(</operator><name pos:start="279:36" pos:end="279:39">void</name> <operator pos:start="279:41" pos:end="279:41">*</operator><operator pos:start="279:42" pos:end="279:42">*</operator><operator pos:start="279:43" pos:end="279:43">)</operator><name pos:start="279:44" pos:end="279:57"><name pos:start="279:44" pos:end="279:44">h</name><operator pos:start="279:45" pos:end="279:46">-&gt;</operator><name pos:start="279:47" pos:end="279:57">sps_buffers</name></name></expr></argument>,

                                  <argument pos:start="281:35" pos:end="281:58"><expr pos:start="281:35" pos:end="281:58"><operator pos:start="281:35" pos:end="281:35">(</operator><name pos:start="281:36" pos:end="281:39">void</name> <operator pos:start="281:41" pos:end="281:41">*</operator><operator pos:start="281:42" pos:end="281:42">*</operator><operator pos:start="281:43" pos:end="281:43">)</operator><name pos:start="281:44" pos:end="281:58"><name pos:start="281:44" pos:end="281:45">h1</name><operator pos:start="281:46" pos:end="281:47">-&gt;</operator><name pos:start="281:48" pos:end="281:58">sps_buffers</name></name></expr></argument>,

                                  <argument pos:start="283:35" pos:end="283:47"><expr pos:start="283:35" pos:end="283:47"><name pos:start="283:35" pos:end="283:47">MAX_SPS_COUNT</name></expr></argument>, <argument pos:start="283:50" pos:end="283:60"><expr pos:start="283:50" pos:end="283:60"><sizeof pos:start="283:50" pos:end="283:60">sizeof<argument_list pos:start="283:56" pos:end="283:60">(<argument pos:start="283:57" pos:end="283:59"><expr pos:start="283:57" pos:end="283:59"><name pos:start="283:57" pos:end="283:59">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="283:62" pos:end="283:62">)</operator> <operator pos:start="283:64" pos:end="283:64">&lt;</operator> <literal type="number" pos:start="283:66" pos:end="283:66">0</literal></expr>)</condition><block type="pseudo" pos:start="285:9" pos:end="285:19"><block_content pos:start="285:9" pos:end="285:19">

        <return pos:start="285:9" pos:end="285:19">return <expr pos:start="285:16" pos:end="285:18"><name pos:start="285:16" pos:end="285:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:21"><expr pos:start="287:5" pos:end="287:20"><name pos:start="287:5" pos:end="287:10"><name pos:start="287:5" pos:end="287:5">h</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:10">sps</name></name> <operator pos:start="287:12" pos:end="287:12">=</operator> <name pos:start="287:14" pos:end="287:20"><name pos:start="287:14" pos:end="287:15">h1</name><operator pos:start="287:16" pos:end="287:17">-&gt;</operator><name pos:start="287:18" pos:end="287:20">sps</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="295:19"><if pos:start="289:5" pos:end="295:19">if <condition pos:start="289:8" pos:end="293:67">(<expr pos:start="289:9" pos:end="293:66"><operator pos:start="289:9" pos:end="289:9">(</operator><name pos:start="289:10" pos:end="289:12">ret</name> <operator pos:start="289:14" pos:end="289:14">=</operator> <call pos:start="289:16" pos:end="293:61"><name pos:start="289:16" pos:end="289:33">copy_parameter_set</name><argument_list pos:start="289:34" pos:end="293:61">(<argument pos:start="289:35" pos:end="289:57"><expr pos:start="289:35" pos:end="289:57"><operator pos:start="289:35" pos:end="289:35">(</operator><name pos:start="289:36" pos:end="289:39">void</name> <operator pos:start="289:41" pos:end="289:41">*</operator><operator pos:start="289:42" pos:end="289:42">*</operator><operator pos:start="289:43" pos:end="289:43">)</operator><name pos:start="289:44" pos:end="289:57"><name pos:start="289:44" pos:end="289:44">h</name><operator pos:start="289:45" pos:end="289:46">-&gt;</operator><name pos:start="289:47" pos:end="289:57">pps_buffers</name></name></expr></argument>,

                                  <argument pos:start="291:35" pos:end="291:58"><expr pos:start="291:35" pos:end="291:58"><operator pos:start="291:35" pos:end="291:35">(</operator><name pos:start="291:36" pos:end="291:39">void</name> <operator pos:start="291:41" pos:end="291:41">*</operator><operator pos:start="291:42" pos:end="291:42">*</operator><operator pos:start="291:43" pos:end="291:43">)</operator><name pos:start="291:44" pos:end="291:58"><name pos:start="291:44" pos:end="291:45">h1</name><operator pos:start="291:46" pos:end="291:47">-&gt;</operator><name pos:start="291:48" pos:end="291:58">pps_buffers</name></name></expr></argument>,

                                  <argument pos:start="293:35" pos:end="293:47"><expr pos:start="293:35" pos:end="293:47"><name pos:start="293:35" pos:end="293:47">MAX_PPS_COUNT</name></expr></argument>, <argument pos:start="293:50" pos:end="293:60"><expr pos:start="293:50" pos:end="293:60"><sizeof pos:start="293:50" pos:end="293:60">sizeof<argument_list pos:start="293:56" pos:end="293:60">(<argument pos:start="293:57" pos:end="293:59"><expr pos:start="293:57" pos:end="293:59"><name pos:start="293:57" pos:end="293:59">PPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="293:62" pos:end="293:62">)</operator> <operator pos:start="293:64" pos:end="293:64">&lt;</operator> <literal type="number" pos:start="293:66" pos:end="293:66">0</literal></expr>)</condition><block type="pseudo" pos:start="295:9" pos:end="295:19"><block_content pos:start="295:9" pos:end="295:19">

        <return pos:start="295:9" pos:end="295:19">return <expr pos:start="295:16" pos:end="295:18"><name pos:start="295:16" pos:end="295:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:21"><expr pos:start="297:5" pos:end="297:20"><name pos:start="297:5" pos:end="297:10"><name pos:start="297:5" pos:end="297:5">h</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:10">pps</name></name> <operator pos:start="297:12" pos:end="297:12">=</operator> <name pos:start="297:14" pos:end="297:20"><name pos:start="297:14" pos:end="297:15">h1</name><operator pos:start="297:16" pos:end="297:17">-&gt;</operator><name pos:start="297:18" pos:end="297:20">pps</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="301:5" pos:end="301:30">// Dequantization matrices</comment>

    <comment type="line" pos:start="303:5" pos:end="303:70">// FIXME these are big - can they be only copied when PPS changes?</comment>

    <expr_stmt pos:start="305:5" pos:end="305:56"><expr pos:start="305:5" pos:end="305:55"><call pos:start="305:5" pos:end="305:55"><name pos:start="305:5" pos:end="305:15">copy_fields</name><argument_list pos:start="305:16" pos:end="305:55">(<argument pos:start="305:17" pos:end="305:17"><expr pos:start="305:17" pos:end="305:17"><name pos:start="305:17" pos:end="305:17">h</name></expr></argument>, <argument pos:start="305:20" pos:end="305:21"><expr pos:start="305:20" pos:end="305:21"><name pos:start="305:20" pos:end="305:21">h1</name></expr></argument>, <argument pos:start="305:24" pos:end="305:38"><expr pos:start="305:24" pos:end="305:38"><name pos:start="305:24" pos:end="305:38">dequant4_buffer</name></expr></argument>, <argument pos:start="305:41" pos:end="305:54"><expr pos:start="305:41" pos:end="305:54"><name pos:start="305:41" pos:end="305:54">dequant4_coeff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="309:5" pos:end="313:80">for <control pos:start="309:9" pos:end="309:27">(<init pos:start="309:10" pos:end="309:15"><expr pos:start="309:10" pos:end="309:14"><name pos:start="309:10" pos:end="309:10">i</name> <operator pos:start="309:12" pos:end="309:12">=</operator> <literal type="number" pos:start="309:14" pos:end="309:14">0</literal></expr>;</init> <condition pos:start="309:17" pos:end="309:22"><expr pos:start="309:17" pos:end="309:21"><name pos:start="309:17" pos:end="309:17">i</name> <operator pos:start="309:19" pos:end="309:19">&lt;</operator> <literal type="number" pos:start="309:21" pos:end="309:21">6</literal></expr>;</condition> <incr pos:start="309:24" pos:end="309:26"><expr pos:start="309:24" pos:end="309:26"><name pos:start="309:24" pos:end="309:24">i</name><operator pos:start="309:25" pos:end="309:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="311:9" pos:end="313:80"><block_content pos:start="311:9" pos:end="313:80">

        <expr_stmt pos:start="311:9" pos:end="313:80"><expr pos:start="311:9" pos:end="313:79"><name pos:start="311:9" pos:end="311:28"><name pos:start="311:9" pos:end="311:9">h</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:25">dequant4_coeff</name><index pos:start="311:26" pos:end="311:28">[<expr pos:start="311:27" pos:end="311:27"><name pos:start="311:27" pos:end="311:27">i</name></expr>]</index></name> <operator pos:start="311:30" pos:end="311:30">=</operator> <name pos:start="311:32" pos:end="311:52"><name pos:start="311:32" pos:end="311:32">h</name><operator pos:start="311:33" pos:end="311:34">-&gt;</operator><name pos:start="311:35" pos:end="311:49">dequant4_buffer</name><index pos:start="311:50" pos:end="311:52">[<expr pos:start="311:51" pos:end="311:51"><literal type="number" pos:start="311:51" pos:end="311:51">0</literal></expr>]</index></name> <operator pos:start="311:54" pos:end="311:54">+</operator>

                               <operator pos:start="313:32" pos:end="313:32">(</operator><name pos:start="313:33" pos:end="313:53"><name pos:start="313:33" pos:end="313:34">h1</name><operator pos:start="313:35" pos:end="313:36">-&gt;</operator><name pos:start="313:37" pos:end="313:50">dequant4_coeff</name><index pos:start="313:51" pos:end="313:53">[<expr pos:start="313:52" pos:end="313:52"><name pos:start="313:52" pos:end="313:52">i</name></expr>]</index></name> <operator pos:start="313:55" pos:end="313:55">-</operator> <name pos:start="313:57" pos:end="313:78"><name pos:start="313:57" pos:end="313:58">h1</name><operator pos:start="313:59" pos:end="313:60">-&gt;</operator><name pos:start="313:61" pos:end="313:75">dequant4_buffer</name><index pos:start="313:76" pos:end="313:78">[<expr pos:start="313:77" pos:end="313:77"><literal type="number" pos:start="313:77" pos:end="313:77">0</literal></expr>]</index></name><operator pos:start="313:79" pos:end="313:79">)</operator></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="317:5" pos:end="321:80">for <control pos:start="317:9" pos:end="317:27">(<init pos:start="317:10" pos:end="317:15"><expr pos:start="317:10" pos:end="317:14"><name pos:start="317:10" pos:end="317:10">i</name> <operator pos:start="317:12" pos:end="317:12">=</operator> <literal type="number" pos:start="317:14" pos:end="317:14">0</literal></expr>;</init> <condition pos:start="317:17" pos:end="317:22"><expr pos:start="317:17" pos:end="317:21"><name pos:start="317:17" pos:end="317:17">i</name> <operator pos:start="317:19" pos:end="317:19">&lt;</operator> <literal type="number" pos:start="317:21" pos:end="317:21">6</literal></expr>;</condition> <incr pos:start="317:24" pos:end="317:26"><expr pos:start="317:24" pos:end="317:26"><name pos:start="317:24" pos:end="317:24">i</name><operator pos:start="317:25" pos:end="317:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="319:9" pos:end="321:80"><block_content pos:start="319:9" pos:end="321:80">

        <expr_stmt pos:start="319:9" pos:end="321:80"><expr pos:start="319:9" pos:end="321:79"><name pos:start="319:9" pos:end="319:28"><name pos:start="319:9" pos:end="319:9">h</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:25">dequant8_coeff</name><index pos:start="319:26" pos:end="319:28">[<expr pos:start="319:27" pos:end="319:27"><name pos:start="319:27" pos:end="319:27">i</name></expr>]</index></name> <operator pos:start="319:30" pos:end="319:30">=</operator> <name pos:start="319:32" pos:end="319:52"><name pos:start="319:32" pos:end="319:32">h</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:49">dequant8_buffer</name><index pos:start="319:50" pos:end="319:52">[<expr pos:start="319:51" pos:end="319:51"><literal type="number" pos:start="319:51" pos:end="319:51">0</literal></expr>]</index></name> <operator pos:start="319:54" pos:end="319:54">+</operator>

                               <operator pos:start="321:32" pos:end="321:32">(</operator><name pos:start="321:33" pos:end="321:53"><name pos:start="321:33" pos:end="321:34">h1</name><operator pos:start="321:35" pos:end="321:36">-&gt;</operator><name pos:start="321:37" pos:end="321:50">dequant8_coeff</name><index pos:start="321:51" pos:end="321:53">[<expr pos:start="321:52" pos:end="321:52"><name pos:start="321:52" pos:end="321:52">i</name></expr>]</index></name> <operator pos:start="321:55" pos:end="321:55">-</operator> <name pos:start="321:57" pos:end="321:78"><name pos:start="321:57" pos:end="321:58">h1</name><operator pos:start="321:59" pos:end="321:60">-&gt;</operator><name pos:start="321:61" pos:end="321:75">dequant8_buffer</name><index pos:start="321:76" pos:end="321:78">[<expr pos:start="321:77" pos:end="321:77"><literal type="number" pos:start="321:77" pos:end="321:77">0</literal></expr>]</index></name><operator pos:start="321:79" pos:end="321:79">)</operator></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="325:5" pos:end="325:49"><expr pos:start="325:5" pos:end="325:48"><name pos:start="325:5" pos:end="325:24"><name pos:start="325:5" pos:end="325:5">h</name><operator pos:start="325:6" pos:end="325:7">-&gt;</operator><name pos:start="325:8" pos:end="325:24">dequant_coeff_pps</name></name> <operator pos:start="325:26" pos:end="325:26">=</operator> <name pos:start="325:28" pos:end="325:48"><name pos:start="325:28" pos:end="325:29">h1</name><operator pos:start="325:30" pos:end="325:31">-&gt;</operator><name pos:start="325:32" pos:end="325:48">dequant_coeff_pps</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="329:5" pos:end="329:17">// POC timing</comment>

    <expr_stmt pos:start="331:5" pos:end="331:53"><expr pos:start="331:5" pos:end="331:52"><call pos:start="331:5" pos:end="331:52"><name pos:start="331:5" pos:end="331:15">copy_fields</name><argument_list pos:start="331:16" pos:end="331:52">(<argument pos:start="331:17" pos:end="331:17"><expr pos:start="331:17" pos:end="331:17"><name pos:start="331:17" pos:end="331:17">h</name></expr></argument>, <argument pos:start="331:20" pos:end="331:21"><expr pos:start="331:20" pos:end="331:21"><name pos:start="331:20" pos:end="331:21">h1</name></expr></argument>, <argument pos:start="331:24" pos:end="331:30"><expr pos:start="331:24" pos:end="331:30"><name pos:start="331:24" pos:end="331:30">poc_lsb</name></expr></argument>, <argument pos:start="331:33" pos:end="331:51"><expr pos:start="331:33" pos:end="331:51"><name pos:start="331:33" pos:end="331:51">redundant_pic_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="335:5" pos:end="335:22">// reference lists</comment>

    <expr_stmt pos:start="337:5" pos:end="337:50"><expr pos:start="337:5" pos:end="337:49"><call pos:start="337:5" pos:end="337:49"><name pos:start="337:5" pos:end="337:15">copy_fields</name><argument_list pos:start="337:16" pos:end="337:49">(<argument pos:start="337:17" pos:end="337:17"><expr pos:start="337:17" pos:end="337:17"><name pos:start="337:17" pos:end="337:17">h</name></expr></argument>, <argument pos:start="337:20" pos:end="337:21"><expr pos:start="337:20" pos:end="337:21"><name pos:start="337:20" pos:end="337:21">h1</name></expr></argument>, <argument pos:start="337:24" pos:end="337:32"><expr pos:start="337:24" pos:end="337:32"><name pos:start="337:24" pos:end="337:32">short_ref</name></expr></argument>, <argument pos:start="337:35" pos:end="337:48"><expr pos:start="337:35" pos:end="337:48"><name pos:start="337:35" pos:end="337:48">cabac_init_idc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:63"><expr pos:start="341:5" pos:end="341:62"><call pos:start="341:5" pos:end="341:62"><name pos:start="341:5" pos:end="341:22">copy_picture_range</name><argument_list pos:start="341:23" pos:end="341:62">(<argument pos:start="341:24" pos:end="341:35"><expr pos:start="341:24" pos:end="341:35"><name pos:start="341:24" pos:end="341:35"><name pos:start="341:24" pos:end="341:24">h</name><operator pos:start="341:25" pos:end="341:26">-&gt;</operator><name pos:start="341:27" pos:end="341:35">short_ref</name></name></expr></argument>, <argument pos:start="341:38" pos:end="341:50"><expr pos:start="341:38" pos:end="341:50"><name pos:start="341:38" pos:end="341:50"><name pos:start="341:38" pos:end="341:39">h1</name><operator pos:start="341:40" pos:end="341:41">-&gt;</operator><name pos:start="341:42" pos:end="341:50">short_ref</name></name></expr></argument>, <argument pos:start="341:53" pos:end="341:54"><expr pos:start="341:53" pos:end="341:54"><literal type="number" pos:start="341:53" pos:end="341:54">32</literal></expr></argument>, <argument pos:start="341:57" pos:end="341:57"><expr pos:start="341:57" pos:end="341:57"><name pos:start="341:57" pos:end="341:57">h</name></expr></argument>, <argument pos:start="341:60" pos:end="341:61"><expr pos:start="341:60" pos:end="341:61"><name pos:start="341:60" pos:end="341:61">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:61"><expr pos:start="343:5" pos:end="343:60"><call pos:start="343:5" pos:end="343:60"><name pos:start="343:5" pos:end="343:22">copy_picture_range</name><argument_list pos:start="343:23" pos:end="343:60">(<argument pos:start="343:24" pos:end="343:34"><expr pos:start="343:24" pos:end="343:34"><name pos:start="343:24" pos:end="343:34"><name pos:start="343:24" pos:end="343:24">h</name><operator pos:start="343:25" pos:end="343:26">-&gt;</operator><name pos:start="343:27" pos:end="343:34">long_ref</name></name></expr></argument>, <argument pos:start="343:37" pos:end="343:48"><expr pos:start="343:37" pos:end="343:48"><name pos:start="343:37" pos:end="343:48"><name pos:start="343:37" pos:end="343:38">h1</name><operator pos:start="343:39" pos:end="343:40">-&gt;</operator><name pos:start="343:41" pos:end="343:48">long_ref</name></name></expr></argument>, <argument pos:start="343:51" pos:end="343:52"><expr pos:start="343:51" pos:end="343:52"><literal type="number" pos:start="343:51" pos:end="343:52">32</literal></expr></argument>, <argument pos:start="343:55" pos:end="343:55"><expr pos:start="343:55" pos:end="343:55"><name pos:start="343:55" pos:end="343:55">h</name></expr></argument>, <argument pos:start="343:58" pos:end="343:59"><expr pos:start="343:58" pos:end="343:59"><name pos:start="343:58" pos:end="343:59">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="347:57"><expr pos:start="345:5" pos:end="347:56"><call pos:start="345:5" pos:end="347:56"><name pos:start="345:5" pos:end="345:22">copy_picture_range</name><argument_list pos:start="345:23" pos:end="347:56">(<argument pos:start="345:24" pos:end="345:37"><expr pos:start="345:24" pos:end="345:37"><name pos:start="345:24" pos:end="345:37"><name pos:start="345:24" pos:end="345:24">h</name><operator pos:start="345:25" pos:end="345:26">-&gt;</operator><name pos:start="345:27" pos:end="345:37">delayed_pic</name></name></expr></argument>, <argument pos:start="345:40" pos:end="345:54"><expr pos:start="345:40" pos:end="345:54"><name pos:start="345:40" pos:end="345:54"><name pos:start="345:40" pos:end="345:41">h1</name><operator pos:start="345:42" pos:end="345:43">-&gt;</operator><name pos:start="345:44" pos:end="345:54">delayed_pic</name></name></expr></argument>,

                       <argument pos:start="347:24" pos:end="347:48"><expr pos:start="347:24" pos:end="347:48"><name pos:start="347:24" pos:end="347:44">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="347:46" pos:end="347:46">+</operator> <literal type="number" pos:start="347:48" pos:end="347:48">2</literal></expr></argument>, <argument pos:start="347:51" pos:end="347:51"><expr pos:start="347:51" pos:end="347:51"><name pos:start="347:51" pos:end="347:51">h</name></expr></argument>, <argument pos:start="347:54" pos:end="347:55"><expr pos:start="347:54" pos:end="347:55"><name pos:start="347:54" pos:end="347:55">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="351:5" pos:end="351:45"><expr pos:start="351:5" pos:end="351:44"><name pos:start="351:5" pos:end="351:22"><name pos:start="351:5" pos:end="351:5">h</name><operator pos:start="351:6" pos:end="351:7">-&gt;</operator><name pos:start="351:8" pos:end="351:22">last_slice_type</name></name> <operator pos:start="351:24" pos:end="351:24">=</operator> <name pos:start="351:26" pos:end="351:44"><name pos:start="351:26" pos:end="351:27">h1</name><operator pos:start="351:28" pos:end="351:29">-&gt;</operator><name pos:start="351:30" pos:end="351:44">last_slice_type</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="355:5" pos:end="357:39"><if pos:start="355:5" pos:end="357:39">if <condition pos:start="355:8" pos:end="355:30">(<expr pos:start="355:9" pos:end="355:29"><name pos:start="355:9" pos:end="355:29">context_reinitialized</name></expr>)</condition><block type="pseudo" pos:start="357:9" pos:end="357:39"><block_content pos:start="357:9" pos:end="357:39">

        <expr_stmt pos:start="357:9" pos:end="357:39"><expr pos:start="357:9" pos:end="357:38"><call pos:start="357:9" pos:end="357:38"><name pos:start="357:9" pos:end="357:35">h264_set_parameter_from_sps</name><argument_list pos:start="357:36" pos:end="357:38">(<argument pos:start="357:37" pos:end="357:37"><expr pos:start="357:37" pos:end="357:37"><name pos:start="357:37" pos:end="357:37">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="361:5" pos:end="363:17"><if pos:start="361:5" pos:end="363:17">if <condition pos:start="361:8" pos:end="361:24">(<expr pos:start="361:9" pos:end="361:23"><operator pos:start="361:9" pos:end="361:9">!</operator><name pos:start="361:10" pos:end="361:23"><name pos:start="361:10" pos:end="361:10">h</name><operator pos:start="361:11" pos:end="361:12">-&gt;</operator><name pos:start="361:13" pos:end="361:23">cur_pic_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:17"><block_content pos:start="363:9" pos:end="363:17">

        <return pos:start="363:9" pos:end="363:17">return <expr pos:start="363:16" pos:end="363:16"><literal type="number" pos:start="363:16" pos:end="363:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="375:5"><if pos:start="367:5" pos:end="375:5">if <condition pos:start="367:8" pos:end="367:22">(<expr pos:start="367:9" pos:end="367:21"><operator pos:start="367:9" pos:end="367:9">!</operator><name pos:start="367:10" pos:end="367:21"><name pos:start="367:10" pos:end="367:10">h</name><operator pos:start="367:11" pos:end="367:12">-&gt;</operator><name pos:start="367:13" pos:end="367:21">droppable</name></name></expr>)</condition> <block pos:start="367:24" pos:end="375:5">{<block_content pos:start="369:9" pos:end="373:37">

        <expr_stmt pos:start="369:9" pos:end="369:73"><expr pos:start="369:9" pos:end="369:72"><name pos:start="369:9" pos:end="369:11">err</name> <operator pos:start="369:13" pos:end="369:13">=</operator> <call pos:start="369:15" pos:end="369:72"><name pos:start="369:15" pos:end="369:45">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="369:46" pos:end="369:72">(<argument pos:start="369:47" pos:end="369:47"><expr pos:start="369:47" pos:end="369:47"><name pos:start="369:47" pos:end="369:47">h</name></expr></argument>, <argument pos:start="369:50" pos:end="369:56"><expr pos:start="369:50" pos:end="369:56"><name pos:start="369:50" pos:end="369:56"><name pos:start="369:50" pos:end="369:50">h</name><operator pos:start="369:51" pos:end="369:52">-&gt;</operator><name pos:start="369:53" pos:end="369:56">mmco</name></name></expr></argument>, <argument pos:start="369:59" pos:end="369:71"><expr pos:start="369:59" pos:end="369:71"><name pos:start="369:59" pos:end="369:71"><name pos:start="369:59" pos:end="369:59">h</name><operator pos:start="369:60" pos:end="369:61">-&gt;</operator><name pos:start="369:62" pos:end="369:71">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:37"><expr pos:start="371:9" pos:end="371:36"><name pos:start="371:9" pos:end="371:23"><name pos:start="371:9" pos:end="371:9">h</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:23">prev_poc_msb</name></name> <operator pos:start="371:25" pos:end="371:25">=</operator> <name pos:start="371:27" pos:end="371:36"><name pos:start="371:27" pos:end="371:27">h</name><operator pos:start="371:28" pos:end="371:29">-&gt;</operator><name pos:start="371:30" pos:end="371:36">poc_msb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:37"><expr pos:start="373:9" pos:end="373:36"><name pos:start="373:9" pos:end="373:23"><name pos:start="373:9" pos:end="373:9">h</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:23">prev_poc_lsb</name></name> <operator pos:start="373:25" pos:end="373:25">=</operator> <name pos:start="373:27" pos:end="373:36"><name pos:start="373:27" pos:end="373:27">h</name><operator pos:start="373:28" pos:end="373:29">-&gt;</operator><name pos:start="373:30" pos:end="373:36">poc_lsb</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:51"><expr pos:start="377:5" pos:end="377:50"><name pos:start="377:5" pos:end="377:28"><name pos:start="377:5" pos:end="377:5">h</name><operator pos:start="377:6" pos:end="377:7">-&gt;</operator><name pos:start="377:8" pos:end="377:28">prev_frame_num_offset</name></name> <operator pos:start="377:30" pos:end="377:30">=</operator> <name pos:start="377:32" pos:end="377:50"><name pos:start="377:32" pos:end="377:32">h</name><operator pos:start="377:33" pos:end="377:34">-&gt;</operator><name pos:start="377:35" pos:end="377:50">frame_num_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:44"><expr pos:start="379:5" pos:end="379:43"><name pos:start="379:5" pos:end="379:21"><name pos:start="379:5" pos:end="379:5">h</name><operator pos:start="379:6" pos:end="379:7">-&gt;</operator><name pos:start="379:8" pos:end="379:21">prev_frame_num</name></name>        <operator pos:start="379:30" pos:end="379:30">=</operator> <name pos:start="379:32" pos:end="379:43"><name pos:start="379:32" pos:end="379:32">h</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:43">frame_num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:52"><expr pos:start="381:5" pos:end="381:51"><name pos:start="381:5" pos:end="381:19"><name pos:start="381:5" pos:end="381:5">h</name><operator pos:start="381:6" pos:end="381:7">-&gt;</operator><name pos:start="381:8" pos:end="381:19">outputed_poc</name></name>          <operator pos:start="381:30" pos:end="381:30">=</operator> <name pos:start="381:32" pos:end="381:51"><name pos:start="381:32" pos:end="381:32">h</name><operator pos:start="381:33" pos:end="381:34">-&gt;</operator><name pos:start="381:35" pos:end="381:51">next_outputed_poc</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="385:5" pos:end="385:50"><expr pos:start="385:5" pos:end="385:49"><name pos:start="385:5" pos:end="385:21"><name pos:start="385:5" pos:end="385:5">h</name><operator pos:start="385:6" pos:end="385:7">-&gt;</operator><name pos:start="385:8" pos:end="385:21">recovery_frame</name></name>        <operator pos:start="385:30" pos:end="385:30">=</operator> <name pos:start="385:32" pos:end="385:49"><name pos:start="385:32" pos:end="385:33">h1</name><operator pos:start="385:34" pos:end="385:35">-&gt;</operator><name pos:start="385:36" pos:end="385:49">recovery_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="387:51"><expr pos:start="387:5" pos:end="387:50"><name pos:start="387:5" pos:end="387:22"><name pos:start="387:5" pos:end="387:5">h</name><operator pos:start="387:6" pos:end="387:7">-&gt;</operator><name pos:start="387:8" pos:end="387:22">frame_recovered</name></name>       <operator pos:start="387:30" pos:end="387:30">=</operator> <name pos:start="387:32" pos:end="387:50"><name pos:start="387:32" pos:end="387:33">h1</name><operator pos:start="387:34" pos:end="387:35">-&gt;</operator><name pos:start="387:36" pos:end="387:50">frame_recovered</name></name></expr>;</expr_stmt>



    <return pos:start="391:5" pos:end="391:15">return <expr pos:start="391:12" pos:end="391:14"><name pos:start="391:12" pos:end="391:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
