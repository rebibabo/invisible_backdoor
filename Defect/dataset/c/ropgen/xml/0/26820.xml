<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26820.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">dxva_get_decoder_guid</name><parameter_list pos:start="1:33" pos:end="3:96">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:69">service</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:91"><decl pos:start="1:72" pos:end="1:91"><type pos:start="1:72" pos:end="1:91"><name pos:start="1:72" pos:end="1:75">void</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:91">surface_format</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:52"><decl pos:start="3:34" pos:end="3:52"><type pos:start="3:34" pos:end="3:52"><name pos:start="3:34" pos:end="3:41">unsigned</name></type> <name pos:start="3:43" pos:end="3:52">guid_count</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:75"><decl pos:start="3:55" pos:end="3:75"><type pos:start="3:55" pos:end="3:75"><specifier pos:start="3:55" pos:end="3:59">const</specifier> <name pos:start="3:61" pos:end="3:64">GUID</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:75">guid_list</name></decl></parameter>, <parameter pos:start="3:78" pos:end="3:95"><decl pos:start="3:78" pos:end="3:95"><type pos:start="3:78" pos:end="3:95"><name pos:start="3:78" pos:end="3:81">GUID</name> <modifier pos:start="3:83" pos:end="3:83">*</modifier></type><name pos:start="3:84" pos:end="3:95">decoder_guid</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">FFDXVASharedContext</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">sctx</name> <init pos:start="7:31" pos:end="7:58">= <expr pos:start="7:33" pos:end="7:58"><call pos:start="7:33" pos:end="7:58"><name pos:start="7:33" pos:end="7:51">DXVA_SHARED_CONTEXT</name><argument_list pos:start="7:52" pos:end="7:58">(<argument pos:start="7:53" pos:end="7:57"><expr pos:start="7:53" pos:end="7:57"><name pos:start="7:53" pos:end="7:57">avctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:17" pos:end="9:17">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:17">decoder_guid</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:32">ff_GUID_NULL</name></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="65:5">for <control pos:start="15:9" pos:end="15:40">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:35"><expr pos:start="15:17" pos:end="15:34"><name pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:26">dxva_modes</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">i</name></expr>]</index></name><operator pos:start="15:30" pos:end="15:30">.</operator><name pos:start="15:31" pos:end="15:34">guid</name></expr>;</condition> <incr pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:37">i</name><operator pos:start="15:38" pos:end="15:39">++</operator></expr></incr>)</control> <block pos:start="15:42" pos:end="65:5">{<block_content pos:start="17:9" pos:end="63:9">

        <decl_stmt pos:start="17:9" pos:end="17:47"><decl pos:start="17:9" pos:end="17:46"><type pos:start="17:9" pos:end="17:25"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:23">dxva_mode</name> <modifier pos:start="17:25" pos:end="17:25">*</modifier></type><name pos:start="17:26" pos:end="17:29">mode</name> <init pos:start="17:31" pos:end="17:46">= <expr pos:start="17:33" pos:end="17:46"><operator pos:start="17:33" pos:end="17:33">&amp;</operator><name pos:start="17:34" pos:end="17:46"><name pos:start="17:34" pos:end="17:43">dxva_modes</name><index pos:start="17:44" pos:end="17:46">[<expr pos:start="17:45" pos:end="17:45"><name pos:start="17:45" pos:end="17:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:21"><decl pos:start="19:9" pos:end="19:20"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:20">validate</name></decl>;</decl_stmt>

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:43">(<expr pos:start="21:13" pos:end="21:42"><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:16">mode</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">codec</name></name> <operator pos:start="21:25" pos:end="21:26">!=</operator> <name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:32">avctx</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:42">codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt>



        <for pos:start="27:9" pos:end="33:9">for <control pos:start="27:13" pos:end="27:40">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">j</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:35"><expr pos:start="27:21" pos:end="27:34"><name pos:start="27:21" pos:end="27:21">j</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:34">guid_count</name></expr>;</condition> <incr pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:37">j</name><operator pos:start="27:38" pos:end="27:39">++</operator></expr></incr>)</control> <block pos:start="27:42" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:22">

            <if_stmt pos:start="29:13" pos:end="31:22"><if pos:start="29:13" pos:end="31:22">if <condition pos:start="29:16" pos:end="29:55">(<expr pos:start="29:17" pos:end="29:54"><call pos:start="29:17" pos:end="29:54"><name pos:start="29:17" pos:end="29:27">IsEqualGUID</name><argument_list pos:start="29:28" pos:end="29:54">(<argument pos:start="29:29" pos:end="29:38"><expr pos:start="29:29" pos:end="29:38"><name pos:start="29:29" pos:end="29:38"><name pos:start="29:29" pos:end="29:32">mode</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:38">guid</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:53"><expr pos:start="29:41" pos:end="29:53"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:53"><name pos:start="29:42" pos:end="29:50">guid_list</name><index pos:start="29:51" pos:end="29:53">[<expr pos:start="29:52" pos:end="29:52"><name pos:start="29:52" pos:end="29:52">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:22"><block_content pos:start="31:17" pos:end="31:22">

                <break pos:start="31:17" pos:end="31:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="35:9" pos:end="42:0"><if pos:start="35:9" pos:end="42:0">if <condition pos:start="35:12" pos:end="35:28">(<expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:13">j</name> <operator pos:start="35:15" pos:end="35:16">==</operator> <name pos:start="35:18" pos:end="35:27">guid_count</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="42:0"><block_content pos:start="37:13" pos:end="42:0">

            <continue pos:start="37:13" pos:end="42:0">continue;</continue></block_content></block></if></if_stmt>



<cpp:if pos:start="41:1" pos:end="41:18">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:18">CONFIG_D3D11VA</name></expr></cpp:if>

        <if_stmt pos:start="43:9" pos:end="50:0"><if pos:start="43:9" pos:end="50:0">if <condition pos:start="43:12" pos:end="43:46">(<expr pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:16">sctx</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:25">pix_fmt</name></name> <operator pos:start="43:27" pos:end="43:28">==</operator> <name pos:start="43:30" pos:end="43:45">AV_PIX_FMT_D3D11</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="50:0"><block_content pos:start="45:13" pos:end="50:0">

            <expr_stmt pos:start="45:13" pos:end="50:0"><expr pos:start="45:13" pos:end="45:84"><name pos:start="45:13" pos:end="45:20">validate</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:84"><name pos:start="45:24" pos:end="45:46">d3d11va_validate_output</name><argument_list pos:start="45:47" pos:end="45:84">(<argument pos:start="45:48" pos:end="45:54"><expr pos:start="45:48" pos:end="45:54"><name pos:start="45:48" pos:end="45:54">service</name></expr></argument>, <argument pos:start="45:57" pos:end="45:67"><expr pos:start="45:57" pos:end="45:67"><operator pos:start="45:57" pos:end="45:57">*</operator><name pos:start="45:58" pos:end="45:67"><name pos:start="45:58" pos:end="45:61">mode</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:67">guid</name></name></expr></argument>, <argument pos:start="45:70" pos:end="45:83"><expr pos:start="45:70" pos:end="45:83"><name pos:start="45:70" pos:end="45:83">surface_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="49:1" pos:end="49:16">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:16">CONFIG_DXVA2</name></expr></cpp:if>

        <if_stmt pos:start="51:9" pos:end="56:0"><if pos:start="51:9" pos:end="56:0">if <condition pos:start="51:12" pos:end="51:50">(<expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:16">sctx</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:25">pix_fmt</name></name> <operator pos:start="51:27" pos:end="51:28">==</operator> <name pos:start="51:30" pos:end="51:49">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="56:0"><block_content pos:start="53:13" pos:end="56:0">

            <expr_stmt pos:start="53:13" pos:end="56:0"><expr pos:start="53:13" pos:end="53:82"><name pos:start="53:13" pos:end="53:20">validate</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:82"><name pos:start="53:24" pos:end="53:44">dxva2_validate_output</name><argument_list pos:start="53:45" pos:end="53:82">(<argument pos:start="53:46" pos:end="53:52"><expr pos:start="53:46" pos:end="53:52"><name pos:start="53:46" pos:end="53:52">service</name></expr></argument>, <argument pos:start="53:55" pos:end="53:65"><expr pos:start="53:55" pos:end="53:65"><operator pos:start="53:55" pos:end="53:55">*</operator><name pos:start="53:56" pos:end="53:65"><name pos:start="53:56" pos:end="53:59">mode</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:65">guid</name></name></expr></argument>, <argument pos:start="53:68" pos:end="53:81"><expr pos:start="53:68" pos:end="53:81"><name pos:start="53:68" pos:end="53:81">surface_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:20">validate</name></expr>)</condition> <block pos:start="57:23" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:18">

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:25">decoder_guid</name> <operator pos:start="59:27" pos:end="59:27">=</operator> <operator pos:start="59:29" pos:end="59:29">*</operator><name pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:33">mode</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:39">guid</name></name></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:49">(<expr pos:start="69:9" pos:end="69:48"><call pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:19">IsEqualGUID</name><argument_list pos:start="69:20" pos:end="69:48">(<argument pos:start="69:21" pos:end="69:32"><expr pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:32">decoder_guid</name></expr></argument>, <argument pos:start="69:35" pos:end="69:47"><expr pos:start="69:35" pos:end="69:47"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:47">ff_GUID_NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:51" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:31">

        <expr_stmt pos:start="71:9" pos:end="71:77"><expr pos:start="71:9" pos:end="71:76"><call pos:start="71:9" pos:end="71:76"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:76">(<argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20">avctx</name></expr></argument>, <argument pos:start="71:23" pos:end="71:36"><expr pos:start="71:23" pos:end="71:36"><name pos:start="71:23" pos:end="71:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="71:39" pos:end="71:75"><expr pos:start="71:39" pos:end="71:75"><literal type="string" pos:start="71:39" pos:end="71:75">"No decoder device for codec found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:31">return <expr pos:start="73:16" pos:end="73:30"><call pos:start="73:16" pos:end="73:30"><name pos:start="73:16" pos:end="73:22">AVERROR</name><argument_list pos:start="73:23" pos:end="73:30">(<argument pos:start="73:24" pos:end="73:29"><expr pos:start="73:24" pos:end="73:29"><name pos:start="73:24" pos:end="73:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="81:65"><if pos:start="79:5" pos:end="81:65">if <condition pos:start="79:8" pos:end="79:64">(<expr pos:start="79:9" pos:end="79:63"><call pos:start="79:9" pos:end="79:63"><name pos:start="79:9" pos:end="79:19">IsEqualGUID</name><argument_list pos:start="79:20" pos:end="79:63">(<argument pos:start="79:21" pos:end="79:32"><expr pos:start="79:21" pos:end="79:32"><name pos:start="79:21" pos:end="79:32">decoder_guid</name></expr></argument>, <argument pos:start="79:35" pos:end="79:62"><expr pos:start="79:35" pos:end="79:62"><operator pos:start="79:35" pos:end="79:35">&amp;</operator><name pos:start="79:36" pos:end="79:62">ff_DXVADDI_Intel_ModeH264_E</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:65"><block_content pos:start="81:9" pos:end="81:65">

        <expr_stmt pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:12">sctx</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:24">workaround</name></name> <operator pos:start="81:26" pos:end="81:27">|=</operator> <name pos:start="81:29" pos:end="81:64">FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
