<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4195.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">read_ir</name><parameter_list pos:start="1:19" pos:end="1:56">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:39"><name pos:start="1:20" pos:end="1:31">AVFilterLink</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">inlink</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:48">AVFrame</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:38">= <expr pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:33">inlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HeadphoneContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:35">= <expr pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:29">ctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">ir_len</name></decl>, <decl pos:start="9:17" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:26">max_ir_len</name></decl>, <decl pos:start="9:29" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:40">input_number</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="17:18">for <control pos:start="13:9" pos:end="13:71">(<init pos:start="13:10" pos:end="13:26"><expr pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:21">input_number</name> <operator pos:start="13:23" pos:end="13:23">=</operator> <literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>;</init> <condition pos:start="13:28" pos:end="13:55"><expr pos:start="13:28" pos:end="13:54"><name pos:start="13:28" pos:end="13:39">input_number</name> <operator pos:start="13:41" pos:end="13:41">&lt;</operator> <name pos:start="13:43" pos:end="13:54"><name pos:start="13:43" pos:end="13:43">s</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:54">nb_inputs</name></name></expr>;</condition> <incr pos:start="13:57" pos:end="13:70"><expr pos:start="13:57" pos:end="13:70"><name pos:start="13:57" pos:end="13:68">input_number</name><operator pos:start="13:69" pos:end="13:70">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:9" pos:end="17:18"><block_content pos:start="15:9" pos:end="17:18">

        <if_stmt pos:start="15:9" pos:end="17:18"><if pos:start="15:9" pos:end="17:18">if <condition pos:start="15:12" pos:end="15:48">(<expr pos:start="15:13" pos:end="15:47"><name pos:start="15:13" pos:end="15:18">inlink</name> <operator pos:start="15:20" pos:end="15:21">==</operator> <name pos:start="15:23" pos:end="15:47"><name pos:start="15:23" pos:end="15:25">ctx</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:33">inputs</name><index pos:start="15:34" pos:end="15:47">[<expr pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:46">input_number</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:18"><block_content pos:start="17:13" pos:end="17:18">

            <break pos:start="17:13" pos:end="17:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="21:5" pos:end="23:43"><expr pos:start="21:5" pos:end="23:42"><call pos:start="21:5" pos:end="23:42"><name pos:start="21:5" pos:end="21:23">av_audio_fifo_write</name><argument_list pos:start="21:24" pos:end="23:42">(<argument pos:start="21:25" pos:end="21:48"><expr pos:start="21:25" pos:end="21:48"><name pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">in</name><index pos:start="21:30" pos:end="21:43">[<expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42">input_number</name></expr>]</index></name><operator pos:start="21:44" pos:end="21:44">.</operator><name pos:start="21:45" pos:end="21:48">fifo</name></expr></argument>, <argument pos:start="21:51" pos:end="21:79"><expr pos:start="21:51" pos:end="21:79"><operator pos:start="21:51" pos:end="21:51">(</operator><name pos:start="21:52" pos:end="21:55">void</name> <operator pos:start="21:57" pos:end="21:57">*</operator><operator pos:start="21:58" pos:end="21:58">*</operator><operator pos:start="21:59" pos:end="21:59">)</operator><name pos:start="21:60" pos:end="21:79"><name pos:start="21:60" pos:end="21:64">frame</name><operator pos:start="21:65" pos:end="21:66">-&gt;</operator><name pos:start="21:67" pos:end="21:79">extended_data</name></name></expr></argument>,

                        <argument pos:start="23:25" pos:end="23:41"><expr pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:29">frame</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:41">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:17">av_frame_free</name><argument_list pos:start="25:18" pos:end="25:25">(<argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:10">ir_len</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:57"><name pos:start="29:14" pos:end="29:31">av_audio_fifo_size</name><argument_list pos:start="29:32" pos:end="29:57">(<argument pos:start="29:33" pos:end="29:56"><expr pos:start="29:33" pos:end="29:56"><name pos:start="29:33" pos:end="29:51"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">in</name><index pos:start="29:38" pos:end="29:51">[<expr pos:start="29:39" pos:end="29:50"><name pos:start="29:39" pos:end="29:50">input_number</name></expr>]</index></name><operator pos:start="29:52" pos:end="29:52">.</operator><name pos:start="29:53" pos:end="29:56">fifo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:14">max_ir_len</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:22">65536</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:14">ir_len</name> <operator pos:start="33:16" pos:end="33:16">&gt;</operator> <name pos:start="33:18" pos:end="33:27">max_ir_len</name></expr>)</condition> <block pos:start="33:30" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:31">

        <expr_stmt pos:start="35:9" pos:end="35:91"><expr pos:start="35:9" pos:end="35:90"><call pos:start="35:9" pos:end="35:90"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:90">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ctx</name></expr></argument>, <argument pos:start="35:21" pos:end="35:32"><expr pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:35" pos:end="35:69"><expr pos:start="35:35" pos:end="35:69"><literal type="string" pos:start="35:35" pos:end="35:69">"Too big length of IRs: %d &gt; %d.\n"</literal></expr></argument>, <argument pos:start="35:72" pos:end="35:77"><expr pos:start="35:72" pos:end="35:77"><name pos:start="35:72" pos:end="35:77">ir_len</name></expr></argument>, <argument pos:start="35:80" pos:end="35:89"><expr pos:start="35:80" pos:end="35:89"><name pos:start="35:80" pos:end="35:89">max_ir_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">in</name><index pos:start="41:10" pos:end="41:23">[<expr pos:start="41:11" pos:end="41:22"><name pos:start="41:11" pos:end="41:22">input_number</name></expr>]</index></name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:30">ir_len</name> <operator pos:start="41:32" pos:end="41:32">=</operator> <name pos:start="41:34" pos:end="41:39">ir_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">ir_len</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <call pos:start="43:17" pos:end="43:40"><name pos:start="43:17" pos:end="43:21">FFMAX</name><argument_list pos:start="43:22" pos:end="43:40">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><name pos:start="43:23" pos:end="43:28">ir_len</name></expr></argument>, <argument pos:start="43:31" pos:end="43:39"><expr pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:39">ir_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
