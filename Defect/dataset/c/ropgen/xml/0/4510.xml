<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4510.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">kvm_set_signal_mask</name><parameter_list pos:start="1:24" pos:end="1:62">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">cpu</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:61"><decl pos:start="1:40" pos:end="1:61"><type pos:start="1:40" pos:end="1:61"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:53">sigset_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:61">sigset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">kvm_signal_mask</name></name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:35">sigmask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">sigset</name></expr>)</condition> <block pos:start="11:18" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:62">

        <return pos:start="13:9" pos:end="13:62">return <expr pos:start="13:16" pos:end="13:61"><call pos:start="13:16" pos:end="13:61"><name pos:start="13:16" pos:end="13:29">kvm_vcpu_ioctl</name><argument_list pos:start="13:30" pos:end="13:61">(<argument pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><name pos:start="13:31" pos:end="13:33">cpu</name></expr></argument>, <argument pos:start="13:36" pos:end="13:54"><expr pos:start="13:36" pos:end="13:54"><name pos:start="13:36" pos:end="13:54">KVM_SET_SIGNAL_MASK</name></expr></argument>, <argument pos:start="13:57" pos:end="13:60"><expr pos:start="13:57" pos:end="13:60"><name pos:start="13:57" pos:end="13:60">NULL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:11">sigmask</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:58"><name pos:start="19:15" pos:end="19:22">g_malloc</name><argument_list pos:start="19:23" pos:end="19:58">(<argument pos:start="19:24" pos:end="19:57"><expr pos:start="19:24" pos:end="19:57"><sizeof pos:start="19:24" pos:end="19:39">sizeof<argument_list pos:start="19:30" pos:end="19:39">(<argument pos:start="19:31" pos:end="19:38"><expr pos:start="19:31" pos:end="19:38"><operator pos:start="19:31" pos:end="19:31">*</operator><name pos:start="19:32" pos:end="19:38">sigmask</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:41" pos:end="19:41">+</operator> <sizeof pos:start="19:43" pos:end="19:57">sizeof<argument_list pos:start="19:49" pos:end="19:57">(<argument pos:start="19:50" pos:end="19:56"><expr pos:start="19:50" pos:end="19:56"><operator pos:start="19:50" pos:end="19:50">*</operator><name pos:start="19:51" pos:end="19:56">sigset</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">sigmask</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">len</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:10">memcpy</name><argument_list pos:start="25:11" pos:end="25:52">(<argument pos:start="25:12" pos:end="25:26"><expr pos:start="25:12" pos:end="25:26"><name pos:start="25:12" pos:end="25:26"><name pos:start="25:12" pos:end="25:18">sigmask</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:26">sigset</name></name></expr></argument>, <argument pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:34">sigset</name></expr></argument>, <argument pos:start="25:37" pos:end="25:51"><expr pos:start="25:37" pos:end="25:51"><sizeof pos:start="25:37" pos:end="25:51">sizeof<argument_list pos:start="25:43" pos:end="25:51">(<argument pos:start="25:44" pos:end="25:50"><expr pos:start="25:44" pos:end="25:50"><operator pos:start="25:44" pos:end="25:44">*</operator><name pos:start="25:45" pos:end="25:50">sigset</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:5">r</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:22">kvm_vcpu_ioctl</name><argument_list pos:start="27:23" pos:end="27:57">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">cpu</name></expr></argument>, <argument pos:start="27:29" pos:end="27:47"><expr pos:start="27:29" pos:end="27:47"><name pos:start="27:29" pos:end="27:47">KVM_SET_SIGNAL_MASK</name></expr></argument>, <argument pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:56">sigmask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><call pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:10">g_free</name><argument_list pos:start="29:11" pos:end="29:19">(<argument pos:start="29:12" pos:end="29:18"><expr pos:start="29:12" pos:end="29:18"><name pos:start="29:12" pos:end="29:18">sigmask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><name pos:start="33:12" pos:end="33:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
