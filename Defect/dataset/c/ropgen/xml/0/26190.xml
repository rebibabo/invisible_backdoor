<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26190.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">filter_mb_edgev</name><parameter_list pos:start="1:28" pos:end="1:94">( <parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">H264Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">h</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pix</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:69">stride</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:84"><decl pos:start="1:72" pos:end="1:84"><type pos:start="1:72" pos:end="1:81"><name pos:start="1:72" pos:end="1:78">int16_t</name></type> <name pos:start="1:80" pos:end="1:84"><name pos:start="1:80" pos:end="1:81">bS</name><index pos:start="1:82" pos:end="1:84">[<expr pos:start="1:83" pos:end="1:83"><literal type="number" pos:start="1:83" pos:end="1:83">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:92"><decl pos:start="1:87" pos:end="1:92"><type pos:start="1:87" pos:end="1:92"><name pos:start="1:87" pos:end="1:89">int</name></type> <name pos:start="1:91" pos:end="1:92">qp</name></decl></parameter> )</parameter_list> <block pos:start="1:96" pos:end="29:1">{<block_content pos:start="3:5" pos:end="27:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:21">index_a</name> <init pos:start="5:23" pos:end="5:53">= <expr pos:start="5:25" pos:end="5:53"><name pos:start="5:25" pos:end="5:26">qp</name> <operator pos:start="5:28" pos:end="5:28">+</operator> <name pos:start="5:30" pos:end="5:53"><name pos:start="5:30" pos:end="5:30">h</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:53">slice_alpha_c0_offset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">alpha</name> <init pos:start="7:21" pos:end="7:47">= <expr pos:start="7:23" pos:end="7:47"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:34">alpha_table</name><operator pos:start="7:35" pos:end="7:35">+</operator><literal type="number" pos:start="7:36" pos:end="7:37">52</literal><operator pos:start="7:38" pos:end="7:38">)</operator><index pos:start="7:39" pos:end="7:47">[<expr pos:start="7:40" pos:end="7:46"><name pos:start="7:40" pos:end="7:46">index_a</name></expr>]</index></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">beta</name>  <init pos:start="9:21" pos:end="9:64">= <expr pos:start="9:23" pos:end="9:64"><operator pos:start="9:23" pos:end="9:23">(</operator><name pos:start="9:24" pos:end="9:33">beta_table</name><operator pos:start="9:34" pos:end="9:34">+</operator><literal type="number" pos:start="9:35" pos:end="9:36">52</literal><operator pos:start="9:37" pos:end="9:37">)</operator><index pos:start="9:38" pos:end="9:64">[<expr pos:start="9:39" pos:end="9:63"><name pos:start="9:39" pos:end="9:40">qp</name> <operator pos:start="9:42" pos:end="9:42">+</operator> <name pos:start="9:44" pos:end="9:63"><name pos:start="9:44" pos:end="9:44">h</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:63">slice_beta_offset</name></name></expr>]</index></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="23:5">if<condition pos:start="13:7" pos:end="13:19">( <expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:10">bS</name><index pos:start="13:11" pos:end="13:13">[<expr pos:start="13:12" pos:end="13:12"><literal type="number" pos:start="13:12" pos:end="13:12">0</literal></expr>]</index></name> <operator pos:start="13:15" pos:end="13:15">&lt;</operator> <literal type="number" pos:start="13:17" pos:end="13:17">4</literal></expr> )</condition> <block pos:start="13:21" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:71">

        <decl_stmt pos:start="15:9" pos:end="15:21"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">int8_t</name></type> <name pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:17">tc</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <for pos:start="17:9" pos:end="19:68">for<control pos:start="17:12" pos:end="17:26">(<init pos:start="17:13" pos:end="17:16"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:13">i</name><operator pos:start="17:14" pos:end="17:14">=</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</init> <condition pos:start="17:18" pos:end="17:21"><expr pos:start="17:18" pos:end="17:20"><name pos:start="17:18" pos:end="17:18">i</name><operator pos:start="17:19" pos:end="17:19">&lt;</operator><literal type="number" pos:start="17:20" pos:end="17:20">4</literal></expr>;</condition> <incr pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:23">i</name><operator pos:start="17:24" pos:end="17:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:13" pos:end="19:68"><block_content pos:start="19:13" pos:end="19:68">

            <expr_stmt pos:start="19:13" pos:end="19:68"><expr pos:start="19:13" pos:end="19:67"><name pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:14">tc</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">i</name></expr>]</index></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <ternary pos:start="19:21" pos:end="19:67"><condition pos:start="19:21" pos:end="19:27"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:22">bS</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">i</name></expr>]</index></name></expr> ?</condition><then pos:start="19:29" pos:end="19:62"> <expr pos:start="19:29" pos:end="19:62"><operator pos:start="19:29" pos:end="19:29">(</operator><name pos:start="19:30" pos:end="19:38">tc0_table</name><operator pos:start="19:39" pos:end="19:39">+</operator><literal type="number" pos:start="19:40" pos:end="19:41">52</literal><operator pos:start="19:42" pos:end="19:42">)</operator><index pos:start="19:43" pos:end="19:51">[<expr pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:50">index_a</name></expr>]</index><index pos:start="19:52" pos:end="19:62">[<expr pos:start="19:53" pos:end="19:61"><name pos:start="19:53" pos:end="19:57"><name pos:start="19:53" pos:end="19:54">bS</name><index pos:start="19:55" pos:end="19:57">[<expr pos:start="19:56" pos:end="19:56"><name pos:start="19:56" pos:end="19:56">i</name></expr>]</index></name> <operator pos:start="19:59" pos:end="19:59">-</operator> <literal type="number" pos:start="19:61" pos:end="19:61">1</literal></expr>]</index></expr> </then><else pos:start="19:64" pos:end="19:67">: <expr pos:start="19:66" pos:end="19:67"><operator pos:start="19:66" pos:end="19:66">-</operator><literal type="number" pos:start="19:67" pos:end="19:67">1</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="21:9" pos:end="21:71"><expr pos:start="21:9" pos:end="21:70"><call pos:start="21:9" pos:end="21:70"><name pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:9">h</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:12">s</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:16">dsp</name><operator pos:start="21:17" pos:end="21:17">.</operator><name pos:start="21:18" pos:end="21:40">h264_h_loop_filter_luma</name></name><argument_list pos:start="21:41" pos:end="21:70">(<argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">pix</name></expr></argument>, <argument pos:start="21:47" pos:end="21:52"><expr pos:start="21:47" pos:end="21:52"><name pos:start="21:47" pos:end="21:52">stride</name></expr></argument>, <argument pos:start="21:55" pos:end="21:59"><expr pos:start="21:55" pos:end="21:59"><name pos:start="21:55" pos:end="21:59">alpha</name></expr></argument>, <argument pos:start="21:62" pos:end="21:65"><expr pos:start="21:62" pos:end="21:65"><name pos:start="21:62" pos:end="21:65">beta</name></expr></argument>, <argument pos:start="21:68" pos:end="21:69"><expr pos:start="21:68" pos:end="21:69"><name pos:start="21:68" pos:end="21:69">tc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:73">

        <expr_stmt pos:start="25:9" pos:end="25:73"><expr pos:start="25:9" pos:end="25:72"><call pos:start="25:9" pos:end="25:72"><name pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:9">h</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:16">dsp</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:46">h264_h_loop_filter_luma_intra</name></name><argument_list pos:start="25:47" pos:end="25:72">(<argument pos:start="25:48" pos:end="25:50"><expr pos:start="25:48" pos:end="25:50"><name pos:start="25:48" pos:end="25:50">pix</name></expr></argument>, <argument pos:start="25:53" pos:end="25:58"><expr pos:start="25:53" pos:end="25:58"><name pos:start="25:53" pos:end="25:58">stride</name></expr></argument>, <argument pos:start="25:61" pos:end="25:65"><expr pos:start="25:61" pos:end="25:65"><name pos:start="25:61" pos:end="25:65">alpha</name></expr></argument>, <argument pos:start="25:68" pos:end="25:71"><expr pos:start="25:68" pos:end="25:71"><name pos:start="25:68" pos:end="25:71">beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
