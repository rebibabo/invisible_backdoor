<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14807.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">qemu_fsdev_add</name><parameter_list pos:start="1:19" pos:end="1:34">(<parameter pos:start="1:20" pos:end="1:33"><decl pos:start="1:20" pos:end="1:33"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:27">QemuOpts</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">FsTypeListEntry</name></name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:32">fsle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><call pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:20">qemu_opts_id</name><argument_list pos:start="11:21" pos:end="11:26">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">opts</name></expr></argument>)</argument_list></call> <operator pos:start="11:28" pos:end="11:29">==</operator> <name pos:start="11:31" pos:end="11:34">NULL</name></expr>)</condition> <block pos:start="11:37" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:52"><expr pos:start="13:9" pos:end="13:51"><call pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:15">fprintf</name><argument_list pos:start="13:16" pos:end="13:51">(<argument pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:22">stderr</name></expr></argument>, <argument pos:start="13:25" pos:end="13:50"><expr pos:start="13:25" pos:end="13:50"><literal type="string" pos:start="13:25" pos:end="13:50">"fsdev: No id specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



     <for pos:start="21:6" pos:end="29:5">for <control pos:start="21:10" pos:end="21:46">(<init pos:start="21:11" pos:end="21:16"><expr pos:start="21:11" pos:end="21:15"><name pos:start="21:11" pos:end="21:11">i</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:41"><expr pos:start="21:18" pos:end="21:40"><name pos:start="21:18" pos:end="21:18">i</name> <operator pos:start="21:20" pos:end="21:20">&lt;</operator> <call pos:start="21:22" pos:end="21:40"><name pos:start="21:22" pos:end="21:31">ARRAY_SIZE</name><argument_list pos:start="21:32" pos:end="21:40">(<argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:39">FsTypes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="21:43" pos:end="21:45"><expr pos:start="21:43" pos:end="21:45"><name pos:start="21:43" pos:end="21:43">i</name><operator pos:start="21:44" pos:end="21:45">++</operator></expr></incr>)</control> <block pos:start="21:48" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:9">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:71">(<expr pos:start="23:13" pos:end="23:70"><call pos:start="23:13" pos:end="23:65"><name pos:start="23:13" pos:end="23:18">strcmp</name><argument_list pos:start="23:19" pos:end="23:65">(<argument pos:start="23:20" pos:end="23:34"><expr pos:start="23:20" pos:end="23:34"><name pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:26">FsTypes</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">i</name></expr>]</index></name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:34">name</name></expr></argument>, <argument pos:start="23:37" pos:end="23:64"><expr pos:start="23:37" pos:end="23:64"><call pos:start="23:37" pos:end="23:64"><name pos:start="23:37" pos:end="23:48">qemu_opt_get</name><argument_list pos:start="23:49" pos:end="23:64">(<argument pos:start="23:50" pos:end="23:53"><expr pos:start="23:50" pos:end="23:53"><name pos:start="23:50" pos:end="23:53">opts</name></expr></argument>, <argument pos:start="23:56" pos:end="23:63"><expr pos:start="23:56" pos:end="23:63"><literal type="string" pos:start="23:56" pos:end="23:63">"fstype"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="23:67" pos:end="23:68">==</operator> <literal type="number" pos:start="23:70" pos:end="23:70">0</literal></expr>)</condition> <block pos:start="23:73" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:33">(<expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:12">==</operator> <call pos:start="33:14" pos:end="33:32"><name pos:start="33:14" pos:end="33:23">ARRAY_SIZE</name><argument_list pos:start="33:24" pos:end="33:32">(<argument pos:start="33:25" pos:end="33:31"><expr pos:start="33:25" pos:end="33:31"><name pos:start="33:25" pos:end="33:31">FsTypes</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:35" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:18">

        <expr_stmt pos:start="35:9" pos:end="37:50"><expr pos:start="35:9" pos:end="37:49"><call pos:start="35:9" pos:end="37:49"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="37:49">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:54"><expr pos:start="35:25" pos:end="35:54"><literal type="string" pos:start="35:25" pos:end="35:54">"fsdev: fstype %s not found\n"</literal></expr></argument>,

                    <argument pos:start="37:21" pos:end="37:48"><expr pos:start="37:21" pos:end="37:48"><call pos:start="37:21" pos:end="37:48"><name pos:start="37:21" pos:end="37:32">qemu_opt_get</name><argument_list pos:start="37:33" pos:end="37:48">(<argument pos:start="37:34" pos:end="37:37"><expr pos:start="37:34" pos:end="37:37"><name pos:start="37:34" pos:end="37:37">opts</name></expr></argument>, <argument pos:start="37:40" pos:end="37:47"><expr pos:start="37:40" pos:end="37:47"><literal type="string" pos:start="37:40" pos:end="37:47">"fstype"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:8">fsle</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:37"><name pos:start="45:12" pos:end="45:22">qemu_malloc</name><argument_list pos:start="45:23" pos:end="45:37">(<argument pos:start="45:24" pos:end="45:36"><expr pos:start="45:24" pos:end="45:36"><sizeof pos:start="45:24" pos:end="45:36">sizeof<argument_list pos:start="45:30" pos:end="45:36">(<argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><operator pos:start="45:31" pos:end="45:31">*</operator><name pos:start="45:32" pos:end="45:35">fsle</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:8">fsle</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:13">fse</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:22">fsdev_id</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:56"><name pos:start="49:26" pos:end="49:36">qemu_strdup</name><argument_list pos:start="49:37" pos:end="49:56">(<argument pos:start="49:38" pos:end="49:55"><expr pos:start="49:38" pos:end="49:55"><call pos:start="49:38" pos:end="49:55"><name pos:start="49:38" pos:end="49:49">qemu_opts_id</name><argument_list pos:start="49:50" pos:end="49:55">(<argument pos:start="49:51" pos:end="49:54"><expr pos:start="49:51" pos:end="49:54"><name pos:start="49:51" pos:end="49:54">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:61"><expr pos:start="51:5" pos:end="51:60"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:8">fsle</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:13">fse</name><operator pos:start="51:14" pos:end="51:14">.</operator><name pos:start="51:15" pos:end="51:18">path</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:60"><name pos:start="51:22" pos:end="51:32">qemu_strdup</name><argument_list pos:start="51:33" pos:end="51:60">(<argument pos:start="51:34" pos:end="51:59"><expr pos:start="51:34" pos:end="51:59"><call pos:start="51:34" pos:end="51:59"><name pos:start="51:34" pos:end="51:45">qemu_opt_get</name><argument_list pos:start="51:46" pos:end="51:59">(<argument pos:start="51:47" pos:end="51:50"><expr pos:start="51:47" pos:end="51:50"><name pos:start="51:47" pos:end="51:50">opts</name></expr></argument>, <argument pos:start="51:53" pos:end="51:58"><expr pos:start="51:53" pos:end="51:58"><literal type="string" pos:start="51:53" pos:end="51:58">"path"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:8">fsle</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:13">fse</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:17">ops</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:30"><name pos:start="53:21" pos:end="53:27">FsTypes</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">i</name></expr>]</index></name><operator pos:start="53:31" pos:end="53:31">.</operator><name pos:start="53:32" pos:end="53:34">ops</name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:52"><expr pos:start="57:5" pos:end="57:51"><call pos:start="57:5" pos:end="57:51"><name pos:start="57:5" pos:end="57:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="57:23" pos:end="57:51">(<argument pos:start="57:24" pos:end="57:38"><expr pos:start="57:24" pos:end="57:38"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:38">fstype_entries</name></expr></argument>, <argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">fsle</name></expr></argument>, <argument pos:start="57:47" pos:end="57:50"><expr pos:start="57:47" pos:end="57:50"><name pos:start="57:47" pos:end="57:50">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>



</block_content>}</block></function>
</unit>
