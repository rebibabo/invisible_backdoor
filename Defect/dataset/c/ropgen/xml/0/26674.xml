<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26674.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">DeviceState</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:33">qbus_find_dev</name><parameter_list pos:start="1:34" pos:end="1:60">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:42">BusState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">bus</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">elem</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:16">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="19:7">/*

     * try to match in order:

     *   (1) instance id, if present

     *   (2) driver name

     *   (3) driver alias, if present

     */</comment>

    <macro pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:16">LIST_FOREACH</name><argument_list pos:start="21:17" pos:end="21:46">(<argument pos:start="21:18" pos:end="21:20">dev</argument>, <argument pos:start="21:23" pos:end="21:36">&amp;bus-&gt;children</argument>, <argument pos:start="21:39" pos:end="21:45">sibling</argument>)</argument_list></macro> <block pos:start="21:48" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:9">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:52">(<expr pos:start="23:13" pos:end="23:51"><name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">dev</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:19">id</name></name>  <operator pos:start="23:22" pos:end="23:23">&amp;&amp;</operator>  <call pos:start="23:26" pos:end="23:46"><name pos:start="23:26" pos:end="23:31">strcmp</name><argument_list pos:start="23:32" pos:end="23:46">(<argument pos:start="23:33" pos:end="23:39"><expr pos:start="23:33" pos:end="23:39"><name pos:start="23:33" pos:end="23:39"><name pos:start="23:33" pos:end="23:35">dev</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:39">id</name></name></expr></argument>, <argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">elem</name></expr></argument>)</argument_list></call> <operator pos:start="23:48" pos:end="23:49">==</operator> <literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr>)</condition> <block pos:start="23:54" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">dev</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <macro pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:16">LIST_FOREACH</name><argument_list pos:start="31:17" pos:end="31:46">(<argument pos:start="31:18" pos:end="31:20">dev</argument>, <argument pos:start="31:23" pos:end="31:36">&amp;bus-&gt;children</argument>, <argument pos:start="31:39" pos:end="31:45">sibling</argument>)</argument_list></macro> <block pos:start="31:48" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:9">

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:47">(<expr pos:start="33:13" pos:end="33:46"><call pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:18">strcmp</name><argument_list pos:start="33:19" pos:end="33:41">(<argument pos:start="33:20" pos:end="33:34"><expr pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:22">dev</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:28">info</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:34">name</name></name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">elem</name></expr></argument>)</argument_list></call> <operator pos:start="33:43" pos:end="33:44">==</operator> <literal type="number" pos:start="33:46" pos:end="33:46">0</literal></expr>)</condition> <block pos:start="33:49" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">dev</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <macro pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:16">LIST_FOREACH</name><argument_list pos:start="41:17" pos:end="41:46">(<argument pos:start="41:18" pos:end="41:20">dev</argument>, <argument pos:start="41:23" pos:end="41:36">&amp;bus-&gt;children</argument>, <argument pos:start="41:39" pos:end="41:45">sibling</argument>)</argument_list></macro> <block pos:start="41:48" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:9">

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:68">(<expr pos:start="43:13" pos:end="43:67"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:15">dev</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:21">info</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:28">alias</name></name> <operator pos:start="43:30" pos:end="43:31">&amp;&amp;</operator> <call pos:start="43:33" pos:end="43:62"><name pos:start="43:33" pos:end="43:38">strcmp</name><argument_list pos:start="43:39" pos:end="43:62">(<argument pos:start="43:40" pos:end="43:55"><expr pos:start="43:40" pos:end="43:55"><name pos:start="43:40" pos:end="43:55"><name pos:start="43:40" pos:end="43:42">dev</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:48">info</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:55">alias</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:61"><expr pos:start="43:58" pos:end="43:61"><name pos:start="43:58" pos:end="43:61">elem</name></expr></argument>)</argument_list></call> <operator pos:start="43:64" pos:end="43:65">==</operator> <literal type="number" pos:start="43:67" pos:end="43:67">0</literal></expr>)</condition> <block pos:start="43:70" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:23">

            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">dev</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
