<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22602.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">X264_frame</name><parameter_list pos:start="1:22" pos:end="3:38">(<parameter pos:start="1:23" pos:end="1:41"><decl pos:start="1:23" pos:end="1:41"><type pos:start="1:23" pos:end="1:41"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ctx</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">AVPacket</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">pkt</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:71">AVFrame</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:78">frame</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:25">int</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier></type><name pos:start="3:28" pos:end="3:37">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="223:1">{<block_content pos:start="7:5" pos:end="221:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">X264Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">x4</name> <init pos:start="7:21" pos:end="7:36">= <expr pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:25">ctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">x264_nal_t</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">nal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">nnal</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">i</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:20">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">x264_picture_t</name></type> <name pos:start="13:20" pos:end="13:26">pic_out</name> <init pos:start="13:28" pos:end="13:32">= <expr pos:start="13:30" pos:end="13:32"><block pos:start="13:30" pos:end="13:32">{<expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">pict_type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><call pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:21">x264_picture_init</name><argument_list pos:start="19:22" pos:end="19:33">( <argument pos:start="19:24" pos:end="19:31"><expr pos:start="19:24" pos:end="19:31"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:31"><name pos:start="19:25" pos:end="19:26">x4</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:31">pic</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:6">x4</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:11">pic</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:15">img</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:21">i_csp</name></name>   <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:42"><name pos:start="21:27" pos:end="21:28">x4</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">params</name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:42">i_csp</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:49"><if pos:start="23:5" pos:end="25:49">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:22">x264_bit_depth</name> <operator pos:start="23:24" pos:end="23:24">&gt;</operator> <literal type="number" pos:start="23:26" pos:end="23:26">8</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:49"><block_content pos:start="25:9" pos:end="25:49">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:10">x4</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:15">pic</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:19">img</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:25">i_csp</name></name> <operator pos:start="25:27" pos:end="25:28">|=</operator> <name pos:start="25:30" pos:end="25:48">X264_CSP_HIGH_DEPTH</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:6">x4</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:11">pic</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:15">img</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:23">i_plane</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <call pos:start="27:27" pos:end="27:57"><name pos:start="27:27" pos:end="27:43">avfmt2_num_planes</name><argument_list pos:start="27:44" pos:end="27:57">(<argument pos:start="27:45" pos:end="27:56"><expr pos:start="27:45" pos:end="27:56"><name pos:start="27:45" pos:end="27:56"><name pos:start="27:45" pos:end="27:47">ctx</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:56">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="125:5"><if pos:start="31:5" pos:end="125:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:13">frame</name></expr>)</condition> <block pos:start="31:16" pos:end="125:5">{<block_content pos:start="33:9" pos:end="123:9">

        <for pos:start="33:9" pos:end="39:9">for <control pos:start="33:13" pos:end="33:49">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:44"><expr pos:start="33:21" pos:end="33:43"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:43"><name pos:start="33:25" pos:end="33:26">x4</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">pic</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:35">img</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:43">i_plane</name></name></expr>;</condition> <incr pos:start="33:46" pos:end="33:48"><expr pos:start="33:46" pos:end="33:48"><name pos:start="33:46" pos:end="33:46">i</name><operator pos:start="33:47" pos:end="33:48">++</operator></expr></incr>)</control> <block pos:start="33:51" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:57">

            <expr_stmt pos:start="35:13" pos:end="35:53"><expr pos:start="35:13" pos:end="35:52"><name pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:14">x4</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:19">pic</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:23">img</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:29">plane</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">i</name></expr>]</index></name>    <operator pos:start="35:37" pos:end="35:37">=</operator> <name pos:start="35:39" pos:end="35:52"><name pos:start="35:39" pos:end="35:43">frame</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:49">data</name><index pos:start="35:50" pos:end="35:52">[<expr pos:start="35:51" pos:end="35:51"><name pos:start="35:51" pos:end="35:51">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:57"><expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:14">x4</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:19">pic</name><operator pos:start="37:20" pos:end="37:20">.</operator><name pos:start="37:21" pos:end="37:23">img</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:32">i_stride</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name> <operator pos:start="37:37" pos:end="37:37">=</operator> <name pos:start="37:39" pos:end="37:56"><name pos:start="37:39" pos:end="37:43">frame</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:53">linesize</name><index pos:start="37:54" pos:end="37:56">[<expr pos:start="37:55" pos:end="37:55"><name pos:start="37:55" pos:end="37:55">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="43:9" pos:end="43:36"><expr pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:10">x4</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:15">pic</name><operator pos:start="43:16" pos:end="43:16">.</operator><name pos:start="43:17" pos:end="43:21">i_pts</name></name>  <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:35"><name pos:start="43:26" pos:end="43:30">frame</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:35">pts</name></name></expr>;</expr_stmt>



        <switch pos:start="47:9" pos:end="75:9">switch <condition pos:start="47:16" pos:end="47:33">(<expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:21">frame</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:32">pict_type</name></name></expr>)</condition> <block pos:start="47:35" pos:end="75:9">{<block_content pos:start="49:9" pos:end="73:18">

        <case pos:start="49:9" pos:end="49:31">case <expr pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:30">AV_PICTURE_TYPE_I</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="53:69"><expr pos:start="51:13" pos:end="53:68"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:14">x4</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:19">pic</name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:26">i_type</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <ternary pos:start="51:30" pos:end="53:68"><condition pos:start="51:30" pos:end="51:49"><expr pos:start="51:30" pos:end="51:47"><name pos:start="51:30" pos:end="51:43"><name pos:start="51:30" pos:end="51:31">x4</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:43">forced_idr</name></name> <operator pos:start="51:45" pos:end="51:45">&gt;</operator> <literal type="number" pos:start="51:47" pos:end="51:47">0</literal></expr> ?</condition><then pos:start="51:51" pos:end="51:63"> <expr pos:start="51:51" pos:end="51:63"><name pos:start="51:51" pos:end="51:63">X264_TYPE_IDR</name></expr>

                                                </then><else pos:start="53:49" pos:end="53:68">: <expr pos:start="53:51" pos:end="53:68"><name pos:start="53:51" pos:end="53:68">X264_TYPE_KEYFRAME</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:31">case <expr pos:start="57:14" pos:end="57:30"><name pos:start="57:14" pos:end="57:30">AV_PICTURE_TYPE_P</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:41"><expr pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:14">x4</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:19">pic</name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:26">i_type</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:40">X264_TYPE_P</name></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:31">case <expr pos:start="63:14" pos:end="63:30"><name pos:start="63:14" pos:end="63:30">AV_PICTURE_TYPE_B</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:41"><expr pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:14">x4</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:19">pic</name><operator pos:start="65:20" pos:end="65:20">.</operator><name pos:start="65:21" pos:end="65:26">i_type</name></name> <operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:40">X264_TYPE_B</name></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <default pos:start="69:9" pos:end="69:16">default:</default>

            <expr_stmt pos:start="71:13" pos:end="71:44"><expr pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:14">x4</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:19">pic</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:26">i_type</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:43">X264_TYPE_AUTO</name></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><call pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:24">reconfig_encoder</name><argument_list pos:start="77:25" pos:end="77:36">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">ctx</name></expr></argument>, <argument pos:start="77:31" pos:end="77:35"><expr pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:35">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="81:9" pos:end="123:9"><if pos:start="81:9" pos:end="123:9">if <condition pos:start="81:12" pos:end="81:23">(<expr pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:14">x4</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:22">a53_cc</name></name></expr>)</condition> <block pos:start="81:25" pos:end="123:9">{<block_content pos:start="83:13" pos:end="121:13">

            <decl_stmt pos:start="83:13" pos:end="83:27"><decl pos:start="83:13" pos:end="83:26"><type pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:16">void</name> <modifier pos:start="83:18" pos:end="83:18">*</modifier></type><name pos:start="83:19" pos:end="83:26">sei_data</name></decl>;</decl_stmt>

            <decl_stmt pos:start="85:13" pos:end="85:28"><decl pos:start="85:13" pos:end="85:27"><type pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:18">size_t</name></type> <name pos:start="85:20" pos:end="85:27">sei_size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:67"><expr pos:start="89:13" pos:end="89:66"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:66"><name pos:start="89:19" pos:end="89:34">ff_alloc_a53_sei</name><argument_list pos:start="89:35" pos:end="89:66">(<argument pos:start="89:36" pos:end="89:40"><expr pos:start="89:36" pos:end="89:40"><name pos:start="89:36" pos:end="89:40">frame</name></expr></argument>, <argument pos:start="89:43" pos:end="89:43"><expr pos:start="89:43" pos:end="89:43"><literal type="number" pos:start="89:43" pos:end="89:43">0</literal></expr></argument>, <argument pos:start="89:46" pos:end="89:54"><expr pos:start="89:46" pos:end="89:54"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:54">sei_data</name></expr></argument>, <argument pos:start="89:57" pos:end="89:65"><expr pos:start="89:57" pos:end="89:65"><operator pos:start="89:57" pos:end="89:57">&amp;</operator><name pos:start="89:58" pos:end="89:65">sei_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="121:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:24">(<expr pos:start="91:17" pos:end="91:23"><name pos:start="91:17" pos:end="91:19">ret</name> <operator pos:start="91:21" pos:end="91:21">&lt;</operator> <literal type="number" pos:start="91:23" pos:end="91:23">0</literal></expr>)</condition> <block pos:start="91:26" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:95">

                <expr_stmt pos:start="93:17" pos:end="93:95"><expr pos:start="93:17" pos:end="93:94"><call pos:start="93:17" pos:end="93:94"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:94">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">ctx</name></expr></argument>, <argument pos:start="93:29" pos:end="93:40"><expr pos:start="93:29" pos:end="93:40"><name pos:start="93:29" pos:end="93:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:43" pos:end="93:93"><expr pos:start="93:43" pos:end="93:93"><literal type="string" pos:start="93:43" pos:end="93:93">"Not enough memory for closed captions, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="95:15" pos:end="121:13">else if <condition pos:start="95:23" pos:end="95:32">(<expr pos:start="95:24" pos:end="95:31"><name pos:start="95:24" pos:end="95:31">sei_data</name></expr>)</condition> <block pos:start="95:34" pos:end="121:13">{<block_content pos:start="97:17" pos:end="119:17">

                <expr_stmt pos:start="97:17" pos:end="97:95"><expr pos:start="97:17" pos:end="97:94"><name pos:start="97:17" pos:end="97:42"><name pos:start="97:17" pos:end="97:18">x4</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:23">pic</name><operator pos:start="97:24" pos:end="97:24">.</operator><name pos:start="97:25" pos:end="97:33">extra_sei</name><operator pos:start="97:34" pos:end="97:34">.</operator><name pos:start="97:35" pos:end="97:42">payloads</name></name> <operator pos:start="97:44" pos:end="97:44">=</operator> <call pos:start="97:46" pos:end="97:94"><name pos:start="97:46" pos:end="97:55">av_mallocz</name><argument_list pos:start="97:56" pos:end="97:94">(<argument pos:start="97:57" pos:end="97:93"><expr pos:start="97:57" pos:end="97:93"><sizeof pos:start="97:57" pos:end="97:93">sizeof<argument_list pos:start="97:63" pos:end="97:93">(<argument pos:start="97:64" pos:end="97:92"><expr pos:start="97:64" pos:end="97:92"><name pos:start="97:64" pos:end="97:92"><name pos:start="97:64" pos:end="97:65">x4</name><operator pos:start="97:66" pos:end="97:67">-&gt;</operator><name pos:start="97:68" pos:end="97:70">pic</name><operator pos:start="97:71" pos:end="97:71">.</operator><name pos:start="97:72" pos:end="97:80">extra_sei</name><operator pos:start="97:81" pos:end="97:81">.</operator><name pos:start="97:82" pos:end="97:89">payloads</name><index pos:start="97:90" pos:end="97:92">[<expr pos:start="97:91" pos:end="97:91"><literal type="number" pos:start="97:91" pos:end="97:91">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="99:17" pos:end="119:17"><if pos:start="99:17" pos:end="105:17">if <condition pos:start="99:20" pos:end="99:55">(<expr pos:start="99:21" pos:end="99:54"><name pos:start="99:21" pos:end="99:46"><name pos:start="99:21" pos:end="99:22">x4</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:27">pic</name><operator pos:start="99:28" pos:end="99:28">.</operator><name pos:start="99:29" pos:end="99:37">extra_sei</name><operator pos:start="99:38" pos:end="99:38">.</operator><name pos:start="99:39" pos:end="99:46">payloads</name></name> <operator pos:start="99:48" pos:end="99:49">==</operator> <name pos:start="99:51" pos:end="99:54">NULL</name></expr>)</condition> <block pos:start="99:57" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:38">

                    <expr_stmt pos:start="101:21" pos:end="101:99"><expr pos:start="101:21" pos:end="101:98"><call pos:start="101:21" pos:end="101:98"><name pos:start="101:21" pos:end="101:26">av_log</name><argument_list pos:start="101:27" pos:end="101:98">(<argument pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:30">ctx</name></expr></argument>, <argument pos:start="101:33" pos:end="101:44"><expr pos:start="101:33" pos:end="101:44"><name pos:start="101:33" pos:end="101:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:47" pos:end="101:97"><expr pos:start="101:47" pos:end="101:97"><literal type="string" pos:start="101:47" pos:end="101:97">"Not enough memory for closed captions, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:38"><expr pos:start="103:21" pos:end="103:37"><call pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:27">av_free</name><argument_list pos:start="103:28" pos:end="103:37">(<argument pos:start="103:29" pos:end="103:36"><expr pos:start="103:29" pos:end="103:36"><name pos:start="103:29" pos:end="103:36">sei_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="105:19" pos:end="119:17">else <block pos:start="105:24" pos:end="119:17">{<block_content pos:start="107:21" pos:end="117:67">

                    <expr_stmt pos:start="107:21" pos:end="107:57"><expr pos:start="107:21" pos:end="107:56"><name pos:start="107:21" pos:end="107:46"><name pos:start="107:21" pos:end="107:22">x4</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:27">pic</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:37">extra_sei</name><operator pos:start="107:38" pos:end="107:38">.</operator><name pos:start="107:39" pos:end="107:46">sei_free</name></name> <operator pos:start="107:48" pos:end="107:48">=</operator> <name pos:start="107:50" pos:end="107:56">av_free</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="111:21" pos:end="111:74"><expr pos:start="111:21" pos:end="111:73"><name pos:start="111:21" pos:end="111:49"><name pos:start="111:21" pos:end="111:22">x4</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:27">pic</name><operator pos:start="111:28" pos:end="111:28">.</operator><name pos:start="111:29" pos:end="111:37">extra_sei</name><operator pos:start="111:38" pos:end="111:38">.</operator><name pos:start="111:39" pos:end="111:46">payloads</name><index pos:start="111:47" pos:end="111:49">[<expr pos:start="111:48" pos:end="111:48"><literal type="number" pos:start="111:48" pos:end="111:48">0</literal></expr>]</index></name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:62">payload_size</name> <operator pos:start="111:64" pos:end="111:64">=</operator> <name pos:start="111:66" pos:end="111:73">sei_size</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:69"><expr pos:start="113:21" pos:end="113:68"><name pos:start="113:21" pos:end="113:49"><name pos:start="113:21" pos:end="113:22">x4</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:27">pic</name><operator pos:start="113:28" pos:end="113:28">.</operator><name pos:start="113:29" pos:end="113:37">extra_sei</name><operator pos:start="113:38" pos:end="113:38">.</operator><name pos:start="113:39" pos:end="113:46">payloads</name><index pos:start="113:47" pos:end="113:49">[<expr pos:start="113:48" pos:end="113:48"><literal type="number" pos:start="113:48" pos:end="113:48">0</literal></expr>]</index></name><operator pos:start="113:50" pos:end="113:50">.</operator><name pos:start="113:51" pos:end="113:57">payload</name> <operator pos:start="113:59" pos:end="113:59">=</operator> <name pos:start="113:61" pos:end="113:68">sei_data</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:55"><expr pos:start="115:21" pos:end="115:54"><name pos:start="115:21" pos:end="115:50"><name pos:start="115:21" pos:end="115:22">x4</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:27">pic</name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:37">extra_sei</name><operator pos:start="115:38" pos:end="115:38">.</operator><name pos:start="115:39" pos:end="115:50">num_payloads</name></name> <operator pos:start="115:52" pos:end="115:52">=</operator> <literal type="number" pos:start="115:54" pos:end="115:54">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:67"><expr pos:start="117:21" pos:end="117:66"><name pos:start="117:21" pos:end="117:49"><name pos:start="117:21" pos:end="117:22">x4</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:27">pic</name><operator pos:start="117:28" pos:end="117:28">.</operator><name pos:start="117:29" pos:end="117:37">extra_sei</name><operator pos:start="117:38" pos:end="117:38">.</operator><name pos:start="117:39" pos:end="117:46">payloads</name><index pos:start="117:47" pos:end="117:49">[<expr pos:start="117:48" pos:end="117:48"><literal type="number" pos:start="117:48" pos:end="117:48">0</literal></expr>]</index></name><operator pos:start="117:50" pos:end="117:50">.</operator><name pos:start="117:51" pos:end="117:62">payload_type</name> <operator pos:start="117:64" pos:end="117:64">=</operator> <literal type="number" pos:start="117:66" pos:end="117:66">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <do pos:start="129:5" pos:end="143:69">do <block pos:start="129:8" pos:end="143:5">{<block_content pos:start="131:9" pos:end="141:23">

        <if_stmt pos:start="131:9" pos:end="133:36"><if pos:start="131:9" pos:end="133:36">if <condition pos:start="131:12" pos:end="131:91">(<expr pos:start="131:13" pos:end="131:90"><call pos:start="131:13" pos:end="131:86"><name pos:start="131:13" pos:end="131:31">x264_encoder_encode</name><argument_list pos:start="131:32" pos:end="131:86">(<argument pos:start="131:33" pos:end="131:39"><expr pos:start="131:33" pos:end="131:39"><name pos:start="131:33" pos:end="131:39"><name pos:start="131:33" pos:end="131:34">x4</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:39">enc</name></name></expr></argument>, <argument pos:start="131:42" pos:end="131:45"><expr pos:start="131:42" pos:end="131:45"><operator pos:start="131:42" pos:end="131:42">&amp;</operator><name pos:start="131:43" pos:end="131:45">nal</name></expr></argument>, <argument pos:start="131:48" pos:end="131:52"><expr pos:start="131:48" pos:end="131:52"><operator pos:start="131:48" pos:end="131:48">&amp;</operator><name pos:start="131:49" pos:end="131:52">nnal</name></expr></argument>, <argument pos:start="131:55" pos:end="131:75"><expr pos:start="131:55" pos:end="131:75"><ternary pos:start="131:55" pos:end="131:75"><condition pos:start="131:55" pos:end="131:60"><expr pos:start="131:55" pos:end="131:59"><name pos:start="131:55" pos:end="131:59">frame</name></expr>?</condition><then pos:start="131:62" pos:end="131:69"> <expr pos:start="131:62" pos:end="131:69"><operator pos:start="131:62" pos:end="131:62">&amp;</operator><name pos:start="131:63" pos:end="131:69"><name pos:start="131:63" pos:end="131:64">x4</name><operator pos:start="131:65" pos:end="131:66">-&gt;</operator><name pos:start="131:67" pos:end="131:69">pic</name></name></expr></then><else pos:start="131:70" pos:end="131:75">: <expr pos:start="131:72" pos:end="131:75"><name pos:start="131:72" pos:end="131:75">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="131:78" pos:end="131:85"><expr pos:start="131:78" pos:end="131:85"><operator pos:start="131:78" pos:end="131:78">&amp;</operator><name pos:start="131:79" pos:end="131:85">pic_out</name></expr></argument>)</argument_list></call> <operator pos:start="131:88" pos:end="131:88">&lt;</operator> <literal type="number" pos:start="131:90" pos:end="131:90">0</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:36"><block_content pos:start="133:13" pos:end="133:36">

            <return pos:start="133:13" pos:end="133:36">return <expr pos:start="133:20" pos:end="133:35"><name pos:start="133:20" pos:end="133:35">AVERROR_EXTERNAL</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:47"><expr pos:start="137:9" pos:end="137:46"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:46"><name pos:start="137:15" pos:end="137:25">encode_nals</name><argument_list pos:start="137:26" pos:end="137:46">(<argument pos:start="137:27" pos:end="137:29"><expr pos:start="137:27" pos:end="137:29"><name pos:start="137:27" pos:end="137:29">ctx</name></expr></argument>, <argument pos:start="137:32" pos:end="137:34"><expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">pkt</name></expr></argument>, <argument pos:start="137:37" pos:end="137:39"><expr pos:start="137:37" pos:end="137:39"><name pos:start="137:37" pos:end="137:39">nal</name></expr></argument>, <argument pos:start="137:42" pos:end="137:45"><expr pos:start="137:42" pos:end="137:45"><name pos:start="137:42" pos:end="137:45">nnal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:23"><if pos:start="139:9" pos:end="141:23">if <condition pos:start="139:12" pos:end="139:20">(<expr pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">&lt;</operator> <literal type="number" pos:start="139:19" pos:end="139:19">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:23"><block_content pos:start="141:13" pos:end="141:23">

            <return pos:start="141:13" pos:end="141:23">return <expr pos:start="141:20" pos:end="141:22"><name pos:start="141:20" pos:end="141:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="143:13" pos:end="143:68">(<expr pos:start="143:14" pos:end="143:67"><operator pos:start="143:14" pos:end="143:14">!</operator><name pos:start="143:15" pos:end="143:17">ret</name> <operator pos:start="143:19" pos:end="143:20">&amp;&amp;</operator> <operator pos:start="143:22" pos:end="143:22">!</operator><name pos:start="143:23" pos:end="143:27">frame</name> <operator pos:start="143:29" pos:end="143:30">&amp;&amp;</operator> <call pos:start="143:32" pos:end="143:67"><name pos:start="143:32" pos:end="143:58">x264_encoder_delayed_frames</name><argument_list pos:start="143:59" pos:end="143:67">(<argument pos:start="143:60" pos:end="143:66"><expr pos:start="143:60" pos:end="143:66"><name pos:start="143:60" pos:end="143:66"><name pos:start="143:60" pos:end="143:61">x4</name><operator pos:start="143:62" pos:end="143:63">-&gt;</operator><name pos:start="143:64" pos:end="143:66">enc</name></name></expr></argument>)</argument_list></call></expr>)</condition>;</do>



    <expr_stmt pos:start="147:5" pos:end="147:29"><expr pos:start="147:5" pos:end="147:28"><name pos:start="147:5" pos:end="147:12"><name pos:start="147:5" pos:end="147:7">pkt</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:12">pts</name></name> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:28"><name pos:start="147:16" pos:end="147:22">pic_out</name><operator pos:start="147:23" pos:end="147:23">.</operator><name pos:start="147:24" pos:end="147:28">i_pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:7">pkt</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:12">dts</name></name> <operator pos:start="149:14" pos:end="149:14">=</operator> <name pos:start="149:16" pos:end="149:28"><name pos:start="149:16" pos:end="149:22">pic_out</name><operator pos:start="149:23" pos:end="149:23">.</operator><name pos:start="149:24" pos:end="149:28">i_dts</name></name></expr>;</expr_stmt>





    <switch pos:start="155:5" pos:end="186:0">switch <condition pos:start="155:12" pos:end="155:27">(<expr pos:start="155:13" pos:end="155:26"><name pos:start="155:13" pos:end="155:26"><name pos:start="155:13" pos:end="155:19">pic_out</name><operator pos:start="155:20" pos:end="155:20">.</operator><name pos:start="155:21" pos:end="155:26">i_type</name></name></expr>)</condition> <block pos:start="155:29" pos:end="186:0">{<block_content pos:start="157:5" pos:end="181:41">

    <case pos:start="157:5" pos:end="157:23">case <expr pos:start="157:10" pos:end="157:22"><name pos:start="157:10" pos:end="157:22">X264_TYPE_IDR</name></expr>:</case>

    <case pos:start="159:5" pos:end="159:21">case <expr pos:start="159:10" pos:end="159:20"><name pos:start="159:10" pos:end="159:20">X264_TYPE_I</name></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="161:38"><expr pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:17">pict_type</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:37">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    <case pos:start="165:5" pos:end="165:21">case <expr pos:start="165:10" pos:end="165:20"><name pos:start="165:10" pos:end="165:20">X264_TYPE_P</name></expr>:</case>

        <expr_stmt pos:start="167:9" pos:end="167:38"><expr pos:start="167:9" pos:end="167:37"><name pos:start="167:9" pos:end="167:17">pict_type</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <name pos:start="167:21" pos:end="167:37">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:21">case <expr pos:start="171:10" pos:end="171:20"><name pos:start="171:10" pos:end="171:20">X264_TYPE_B</name></expr>:</case>

    <case pos:start="173:5" pos:end="173:24">case <expr pos:start="173:10" pos:end="173:23"><name pos:start="173:10" pos:end="173:23">X264_TYPE_BREF</name></expr>:</case>

        <expr_stmt pos:start="175:9" pos:end="175:38"><expr pos:start="175:9" pos:end="175:37"><name pos:start="175:9" pos:end="175:17">pict_type</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <name pos:start="175:21" pos:end="175:37">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <default pos:start="179:5" pos:end="179:12">default:</default>

        <expr_stmt pos:start="181:9" pos:end="181:41"><expr pos:start="181:9" pos:end="181:40"><name pos:start="181:9" pos:end="181:17">pict_type</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:40">AV_PICTURE_TYPE_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></switch>

<cpp:if pos:start="185:1" pos:end="185:22">#<cpp:directive pos:start="185:2" pos:end="185:3">if</cpp:directive> <expr pos:start="185:5" pos:end="185:22"><name pos:start="185:5" pos:end="185:22">FF_API_CODED_FRAME</name></expr></cpp:if>

<decl_stmt pos:start="187:1" pos:end="189:44"><decl pos:start="187:1" pos:end="189:43"><type pos:start="187:1" pos:end="187:31"><name pos:start="187:1" pos:end="187:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="189:5" pos:end="189:31"><name pos:start="189:5" pos:end="189:7">ctx</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:20">coded_frame</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:31">pict_type</name></name> <init pos:start="189:33" pos:end="189:43">= <expr pos:start="189:35" pos:end="189:43"><name pos:start="189:35" pos:end="189:43">pict_type</name></expr></init></decl>;</decl_stmt>

<expr_stmt pos:start="191:1" pos:end="197:53"><expr pos:start="191:1" pos:end="197:52"><name pos:start="191:1" pos:end="194:0">FF_ENABLE_DEPRECATION_WARNINGS</name>

<cpp:endif pos:start="193:1" pos:end="193:6">#<cpp:directive pos:start="193:2" pos:end="193:6">endif</cpp:directive></cpp:endif>



    <name pos:start="197:5" pos:end="197:14"><name pos:start="197:5" pos:end="197:7">pkt</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:14">flags</name></name> <operator pos:start="197:16" pos:end="197:17">|=</operator> <name pos:start="197:19" pos:end="197:33">AV_PKT_FLAG_KEY</name><operator pos:start="197:34" pos:end="197:34">*</operator><name pos:start="197:35" pos:end="197:52"><name pos:start="197:35" pos:end="197:41">pic_out</name><operator pos:start="197:42" pos:end="197:42">.</operator><name pos:start="197:43" pos:end="197:52">b_keyframe</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="215:5"><if pos:start="199:5" pos:end="215:5">if <condition pos:start="199:8" pos:end="199:12">(<expr pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">ret</name></expr>)</condition> <block pos:start="199:14" pos:end="215:5">{<block_content pos:start="201:9" pos:end="214:0">

        <expr_stmt pos:start="201:9" pos:end="206:0"><expr pos:start="201:9" pos:end="201:103"><call pos:start="201:9" pos:end="201:103"><name pos:start="201:9" pos:end="201:38">ff_side_data_set_encoder_stats</name><argument_list pos:start="201:39" pos:end="201:103">(<argument pos:start="201:40" pos:end="201:42"><expr pos:start="201:40" pos:end="201:42"><name pos:start="201:40" pos:end="201:42">pkt</name></expr></argument>, <argument pos:start="201:45" pos:end="201:82"><expr pos:start="201:45" pos:end="201:82"><operator pos:start="201:45" pos:end="201:45">(</operator><name pos:start="201:46" pos:end="201:62"><name pos:start="201:46" pos:end="201:52">pic_out</name><operator pos:start="201:53" pos:end="201:53">.</operator><name pos:start="201:54" pos:end="201:62">i_qpplus1</name></name> <operator pos:start="201:64" pos:end="201:64">-</operator> <literal type="number" pos:start="201:66" pos:end="201:66">1</literal><operator pos:start="201:67" pos:end="201:67">)</operator> <operator pos:start="201:69" pos:end="201:69">*</operator> <name pos:start="201:71" pos:end="201:82">FF_QP2LAMBDA</name></expr></argument>, <argument pos:start="201:85" pos:end="201:88"><expr pos:start="201:85" pos:end="201:88"><name pos:start="201:85" pos:end="201:88">NULL</name></expr></argument>, <argument pos:start="201:91" pos:end="201:91"><expr pos:start="201:91" pos:end="201:91"><literal type="number" pos:start="201:91" pos:end="201:91">0</literal></expr></argument>, <argument pos:start="201:94" pos:end="201:102"><expr pos:start="201:94" pos:end="201:102"><name pos:start="201:94" pos:end="201:102">pict_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="205:1" pos:end="205:22">#<cpp:directive pos:start="205:2" pos:end="205:3">if</cpp:directive> <expr pos:start="205:5" pos:end="205:22"><name pos:start="205:5" pos:end="205:22">FF_API_CODED_FRAME</name></expr></cpp:if>

<decl_stmt pos:start="207:1" pos:end="209:75"><decl pos:start="207:1" pos:end="209:74"><type pos:start="207:1" pos:end="207:31"><name pos:start="207:1" pos:end="207:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

        <name pos:start="209:9" pos:end="209:33"><name pos:start="209:9" pos:end="209:11">ctx</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:24">coded_frame</name><operator pos:start="209:25" pos:end="209:26">-&gt;</operator><name pos:start="209:27" pos:end="209:33">quality</name></name> <init pos:start="209:35" pos:end="209:74">= <expr pos:start="209:37" pos:end="209:74"><operator pos:start="209:37" pos:end="209:37">(</operator><name pos:start="209:38" pos:end="209:54"><name pos:start="209:38" pos:end="209:44">pic_out</name><operator pos:start="209:45" pos:end="209:45">.</operator><name pos:start="209:46" pos:end="209:54">i_qpplus1</name></name> <operator pos:start="209:56" pos:end="209:56">-</operator> <literal type="number" pos:start="209:58" pos:end="209:58">1</literal><operator pos:start="209:59" pos:end="209:59">)</operator> <operator pos:start="209:61" pos:end="209:61">*</operator> <name pos:start="209:63" pos:end="209:74">FF_QP2LAMBDA</name></expr></init></decl>;</decl_stmt>

<expr_stmt pos:start="211:1" pos:end="214:0"><expr pos:start="211:1" pos:end="214:0"><name pos:start="211:1" pos:end="214:0">FF_ENABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

<cpp:endif pos:start="213:1" pos:end="213:6">#<cpp:directive pos:start="213:2" pos:end="213:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:22"><expr pos:start="219:5" pos:end="219:21"><operator pos:start="219:5" pos:end="219:5">*</operator><name pos:start="219:6" pos:end="219:15">got_packet</name> <operator pos:start="219:17" pos:end="219:17">=</operator> <name pos:start="219:19" pos:end="219:21">ret</name></expr>;</expr_stmt>

    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
