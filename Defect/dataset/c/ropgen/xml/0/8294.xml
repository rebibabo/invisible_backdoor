<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8294.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">replay_enable</name><parameter_list pos:start="1:26" pos:end="1:54">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">fname</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:53">mode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:25">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">fmode</name> <init pos:start="5:23" pos:end="5:28">= <expr pos:start="5:25" pos:end="5:28"><name pos:start="5:25" pos:end="5:28">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:25"><expr pos:start="7:5" pos:end="7:24"><call pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:24">(<argument pos:start="7:12" pos:end="7:23"><expr pos:start="7:12" pos:end="7:23"><operator pos:start="7:12" pos:end="7:12">!</operator><name pos:start="7:13" pos:end="7:23">replay_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="11:5" pos:end="31:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">mode</name></expr>)</condition> <block pos:start="11:19" pos:end="31:5">{<block_content pos:start="13:5" pos:end="29:16">

    <case pos:start="13:5" pos:end="13:28">case <expr pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:27">REPLAY_MODE_RECORD</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:21"><expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:13">fmode</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="string" pos:start="15:17" pos:end="15:20">"wb"</literal></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:26">case <expr pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:25">REPLAY_MODE_PLAY</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:13">fmode</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="string" pos:start="21:17" pos:end="21:20">"rb"</literal></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <default pos:start="25:5" pos:end="25:12">default:</default>

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="27:72">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="27:71"><expr pos:start="27:25" pos:end="27:71"><literal type="string" pos:start="27:25" pos:end="27:71">"Replay: internal error: invalid replay mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><call pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">exit</name><argument_list pos:start="29:13" pos:end="29:15">(<argument pos:start="29:14" pos:end="29:14"><expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:10">atexit</name><argument_list pos:start="35:11" pos:end="35:25">(<argument pos:start="35:12" pos:end="35:24"><expr pos:start="35:12" pos:end="35:24"><name pos:start="35:12" pos:end="35:24">replay_finish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:21">replay_mutex_init</name><argument_list pos:start="39:22" pos:end="39:23">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:15">replay_file</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:37"><name pos:start="43:19" pos:end="43:23">fopen</name><argument_list pos:start="43:24" pos:end="43:37">(<argument pos:start="43:25" pos:end="43:29"><expr pos:start="43:25" pos:end="43:29"><name pos:start="43:25" pos:end="43:29">fname</name></expr></argument>, <argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36">fmode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:28">(<expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:19">replay_file</name> <operator pos:start="45:21" pos:end="45:22">==</operator> <name pos:start="45:24" pos:end="45:27">NULL</name></expr>)</condition> <block pos:start="45:30" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:16">

        <expr_stmt pos:start="47:9" pos:end="47:73"><expr pos:start="47:9" pos:end="47:72"><call pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:15">fprintf</name><argument_list pos:start="47:16" pos:end="47:72">(<argument pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22">stderr</name></expr></argument>, <argument pos:start="47:25" pos:end="47:47"><expr pos:start="47:25" pos:end="47:47"><literal type="string" pos:start="47:25" pos:end="47:47">"Replay: open %s: %s\n"</literal></expr></argument>, <argument pos:start="47:50" pos:end="47:54"><expr pos:start="47:50" pos:end="47:54"><name pos:start="47:50" pos:end="47:54">fname</name></expr></argument>, <argument pos:start="47:57" pos:end="47:71"><expr pos:start="47:57" pos:end="47:71"><call pos:start="47:57" pos:end="47:71"><name pos:start="47:57" pos:end="47:64">strerror</name><argument_list pos:start="47:65" pos:end="47:71">(<argument pos:start="47:66" pos:end="47:70"><expr pos:start="47:66" pos:end="47:70"><name pos:start="47:66" pos:end="47:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><call pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:12">exit</name><argument_list pos:start="49:13" pos:end="49:15">(<argument pos:start="49:14" pos:end="49:14"><expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:19">replay_filename</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:37"><name pos:start="55:23" pos:end="55:30">g_strdup</name><argument_list pos:start="55:31" pos:end="55:37">(<argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">fname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:15">replay_mode</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:22">mode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:20">replay_data_kind</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:16">replay_state</name><operator pos:start="63:17" pos:end="63:17">.</operator><name pos:start="63:18" pos:end="63:35">instructions_count</name></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <literal type="number" pos:start="63:39" pos:end="63:39">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:16">replay_state</name><operator pos:start="65:17" pos:end="65:17">.</operator><name pos:start="65:18" pos:end="65:29">current_step</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:33">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:59">/* skip file header for RECORD and check it for PLAY */</comment>

    <if_stmt pos:start="71:5" pos:end="93:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:19">replay_mode</name> <operator pos:start="71:21" pos:end="71:22">==</operator> <name pos:start="71:24" pos:end="71:41">REPLAY_MODE_RECORD</name></expr>)</condition> <block pos:start="71:44" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:50">

        <expr_stmt pos:start="73:9" pos:end="73:50"><expr pos:start="73:9" pos:end="73:49"><call pos:start="73:9" pos:end="73:49"><name pos:start="73:9" pos:end="73:13">fseek</name><argument_list pos:start="73:14" pos:end="73:49">(<argument pos:start="73:15" pos:end="73:25"><expr pos:start="73:15" pos:end="73:25"><name pos:start="73:15" pos:end="73:25">replay_file</name></expr></argument>, <argument pos:start="73:28" pos:end="73:38"><expr pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:38">HEADER_SIZE</name></expr></argument>, <argument pos:start="73:41" pos:end="73:48"><expr pos:start="73:41" pos:end="73:48"><name pos:start="73:41" pos:end="73:48">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="93:5">else if <condition pos:start="75:15" pos:end="75:47">(<expr pos:start="75:16" pos:end="75:46"><name pos:start="75:16" pos:end="75:26">replay_mode</name> <operator pos:start="75:28" pos:end="75:29">==</operator> <name pos:start="75:31" pos:end="75:46">REPLAY_MODE_PLAY</name></expr>)</condition> <block pos:start="75:49" pos:end="93:5">{<block_content pos:start="77:9" pos:end="91:33">

        <decl_stmt pos:start="77:9" pos:end="77:50"><decl pos:start="77:9" pos:end="77:49"><type pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:16">unsigned</name> <name pos:start="77:18" pos:end="77:20">int</name></type> <name pos:start="77:22" pos:end="77:28">version</name> <init pos:start="77:30" pos:end="77:49">= <expr pos:start="77:32" pos:end="77:49"><call pos:start="77:32" pos:end="77:49"><name pos:start="77:32" pos:end="77:47">replay_get_dword</name><argument_list pos:start="77:48" pos:end="77:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:38">(<expr pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:19">version</name> <operator pos:start="79:21" pos:end="79:22">!=</operator> <name pos:start="79:24" pos:end="79:37">REPLAY_VERSION</name></expr>)</condition> <block pos:start="79:40" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:20">

            <expr_stmt pos:start="81:13" pos:end="81:72"><expr pos:start="81:13" pos:end="81:71"><call pos:start="81:13" pos:end="81:71"><name pos:start="81:13" pos:end="81:19">fprintf</name><argument_list pos:start="81:20" pos:end="81:71">(<argument pos:start="81:21" pos:end="81:26"><expr pos:start="81:21" pos:end="81:26"><name pos:start="81:21" pos:end="81:26">stderr</name></expr></argument>, <argument pos:start="81:29" pos:end="81:70"><expr pos:start="81:29" pos:end="81:70"><literal type="string" pos:start="81:29" pos:end="81:70">"Replay: invalid input log file version\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:20"><expr pos:start="83:13" pos:end="83:19"><call pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:16">exit</name><argument_list pos:start="83:17" pos:end="83:19">(<argument pos:start="83:18" pos:end="83:18"><expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="87:9" pos:end="87:33">/* go to the beginning */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:50"><expr pos:start="89:9" pos:end="89:49"><call pos:start="89:9" pos:end="89:49"><name pos:start="89:9" pos:end="89:13">fseek</name><argument_list pos:start="89:14" pos:end="89:49">(<argument pos:start="89:15" pos:end="89:25"><expr pos:start="89:15" pos:end="89:25"><name pos:start="89:15" pos:end="89:25">replay_file</name></expr></argument>, <argument pos:start="89:28" pos:end="89:38"><expr pos:start="89:28" pos:end="89:38"><name pos:start="89:28" pos:end="89:38">HEADER_SIZE</name></expr></argument>, <argument pos:start="89:41" pos:end="89:48"><expr pos:start="89:41" pos:end="89:48"><name pos:start="89:41" pos:end="89:48">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:30">replay_fetch_data_kind</name><argument_list pos:start="91:31" pos:end="91:32">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:25"><expr pos:start="97:5" pos:end="97:24"><call pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:22">replay_init_events</name><argument_list pos:start="97:23" pos:end="97:24">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
