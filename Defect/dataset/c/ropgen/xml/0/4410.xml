<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4410.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">advanced_decode_picture_header</name><parameter_list pos:start="1:42" pos:end="1:56">(<parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:52">VC9Context</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:13">

    <decl_stmt pos:start="5:5" pos:end="5:73"><decl pos:start="5:5" pos:end="5:72"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:31">type_table</name><index pos:start="5:32" pos:end="5:34">[<expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">4</literal></expr>]</index></name> <init pos:start="5:36" pos:end="5:72">= <expr pos:start="5:38" pos:end="5:72"><block pos:start="5:38" pos:end="5:72">{ <expr pos:start="5:40" pos:end="5:45"><name pos:start="5:40" pos:end="5:45">P_TYPE</name></expr>, <expr pos:start="5:48" pos:end="5:53"><name pos:start="5:48" pos:end="5:53">B_TYPE</name></expr>, <expr pos:start="5:56" pos:end="5:61"><name pos:start="5:56" pos:end="5:61">I_TYPE</name></expr>, <expr pos:start="5:64" pos:end="5:70"><name pos:start="5:64" pos:end="5:70">BI_TYPE</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">type</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">i</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">v</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">interlace</name></name></expr>)</condition>

    <block pos:start="13:5" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:51">

        <expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">v</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">fcm</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:36"><name pos:start="15:18" pos:end="15:25">get_bits</name><argument_list pos:start="15:26" pos:end="15:36">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">v</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">gb</name></name></expr></argument>, <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="17:51"><if pos:start="17:9" pos:end="17:51">if <condition pos:start="17:12" pos:end="17:19">(<expr pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:13">v</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">fcm</name></name></expr>)</condition><block type="pseudo" pos:start="17:21" pos:end="17:51"><block_content pos:start="17:21" pos:end="17:51"> <expr_stmt pos:start="17:21" pos:end="17:51"><expr pos:start="17:21" pos:end="17:50"><name pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:21">v</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:26">fcm</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <literal type="number" pos:start="17:30" pos:end="17:31">2</literal><operator pos:start="17:31" pos:end="17:31">+</operator><call pos:start="17:32" pos:end="17:50"><name pos:start="17:32" pos:end="17:39">get_bits</name><argument_list pos:start="17:40" pos:end="17:50">(<argument pos:start="17:41" pos:end="17:46"><expr pos:start="17:41" pos:end="17:46"><operator pos:start="17:41" pos:end="17:41">&amp;</operator><name pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:42">v</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:46">gb</name></name></expr></argument>, <argument pos:start="17:49" pos:end="17:49"><expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:8">type</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:21">get_prefix</name><argument_list pos:start="23:22" pos:end="23:35">(<argument pos:start="23:23" pos:end="23:28"><expr pos:start="23:23" pos:end="23:28"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:24">v</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:28">gb</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">0</literal></expr></argument>, <argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="25:50"><if pos:start="25:5" pos:end="25:50">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:12">type</name> <operator pos:start="25:14" pos:end="25:14">&gt;</operator> <literal type="number" pos:start="25:16" pos:end="25:16">4</literal> <operator pos:start="25:18" pos:end="25:19">||</operator> <name pos:start="25:21" pos:end="25:24">type</name> <operator pos:start="25:26" pos:end="25:26">&lt;</operator> <literal type="number" pos:start="25:28" pos:end="25:28">0</literal></expr>)</condition><block type="pseudo" pos:start="25:31" pos:end="25:50"><block_content pos:start="25:31" pos:end="25:50"> <return pos:start="25:31" pos:end="25:50">return <expr pos:start="25:38" pos:end="25:49"><name pos:start="25:38" pos:end="25:49">FRAME_SKIPED</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">v</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">pict_type</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:35"><name pos:start="27:20" pos:end="27:29">type_table</name><index pos:start="27:30" pos:end="27:35">[<expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">type</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:71"><expr pos:start="29:5" pos:end="29:70"><call pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:10">av_log</name><argument_list pos:start="29:11" pos:end="29:70">(<argument pos:start="29:12" pos:end="29:19"><expr pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:12">v</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:19">avctx</name></name></expr></argument>, <argument pos:start="29:22" pos:end="29:32"><expr pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="29:35" pos:end="29:55"><expr pos:start="29:35" pos:end="29:55"><literal type="string" pos:start="29:35" pos:end="29:55">"AP Frame Type: %i\n"</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:69"><expr pos:start="29:58" pos:end="29:69"><name pos:start="29:58" pos:end="29:69"><name pos:start="29:58" pos:end="29:58">v</name><operator pos:start="29:59" pos:end="29:60">-&gt;</operator><name pos:start="29:61" pos:end="29:69">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="33:55"><if pos:start="33:5" pos:end="33:55">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">v</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">tfcntrflag</name></name></expr>)</condition><block type="pseudo" pos:start="33:24" pos:end="33:55"><block_content pos:start="33:24" pos:end="33:55"> <expr_stmt pos:start="33:24" pos:end="33:55"><expr pos:start="33:24" pos:end="33:54"><name pos:start="33:24" pos:end="33:32"><name pos:start="33:24" pos:end="33:24">v</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:32">tfcntr</name></name> <operator pos:start="33:34" pos:end="33:34">=</operator> <call pos:start="33:36" pos:end="33:54"><name pos:start="33:36" pos:end="33:43">get_bits</name><argument_list pos:start="33:44" pos:end="33:54">(<argument pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:50"><name pos:start="33:46" pos:end="33:46">v</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:50">gb</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:53"><expr pos:start="33:53" pos:end="33:53"><literal type="number" pos:start="33:53" pos:end="33:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="51:5"><if pos:start="35:5" pos:end="51:5">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">v</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:20">broadcast</name></name></expr>)</condition>

    <block pos:start="37:5" pos:end="51:5">{<block_content pos:start="39:9" pos:end="49:9">

        <if_stmt pos:start="39:9" pos:end="49:9"><if pos:start="39:9" pos:end="39:59">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:25"><name pos:start="39:14" pos:end="39:14">v</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:25">interlace</name></name></expr>)</condition><block type="pseudo" pos:start="39:28" pos:end="39:59"><block_content pos:start="39:28" pos:end="39:59"> <expr_stmt pos:start="39:28" pos:end="39:59"><expr pos:start="39:28" pos:end="39:58"><name pos:start="39:28" pos:end="39:36"><name pos:start="39:28" pos:end="39:28">v</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:36">rptfrm</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <call pos:start="39:40" pos:end="39:58"><name pos:start="39:40" pos:end="39:47">get_bits</name><argument_list pos:start="39:48" pos:end="39:58">(<argument pos:start="39:49" pos:end="39:54"><expr pos:start="39:49" pos:end="39:54"><operator pos:start="39:49" pos:end="39:49">&amp;</operator><name pos:start="39:50" pos:end="39:54"><name pos:start="39:50" pos:end="39:50">v</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:54">gb</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:57"><expr pos:start="39:57" pos:end="39:57"><literal type="number" pos:start="39:57" pos:end="39:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="41:9" pos:end="49:9">else

        <block pos:start="43:9" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:41">

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">v</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">tff</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <call pos:start="45:22" pos:end="45:40"><name pos:start="45:22" pos:end="45:29">get_bits</name><argument_list pos:start="45:30" pos:end="45:40">(<argument pos:start="45:31" pos:end="45:36"><expr pos:start="45:31" pos:end="45:36"><operator pos:start="45:31" pos:end="45:31">&amp;</operator><name pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:32">v</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:36">gb</name></name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:13">v</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">rff</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:40"><name pos:start="47:22" pos:end="47:29">get_bits</name><argument_list pos:start="47:30" pos:end="47:40">(<argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:32">v</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:36">gb</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="81:5"><if pos:start="55:5" pos:end="81:5">if <condition pos:start="55:8" pos:end="55:23">(<expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">v</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">panscanflag</name></name></expr>)</condition>

    <block pos:start="57:5" pos:end="81:5">{<block_content pos:start="77:9" pos:end="80:0">

<cpp:if pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:5"><literal type="number" pos:start="59:5" pos:end="59:5">0</literal></expr></cpp:if>

        for (i=0; i&lt;v-&gt;numpanscanwin; i++)

        {

            v-&gt;topleftx[i] = get_bits(&amp;v-&gt;gb, 16);

            v-&gt;toplefty[i] = get_bits(&amp;v-&gt;gb, 16);

            v-&gt;bottomrightx[i] = get_bits(&amp;v-&gt;gb, 16);

            v-&gt;bottomrighty[i] = get_bits(&amp;v-&gt;gb, 16);

        }

<cpp:else pos:start="75:1" pos:end="75:5">#<cpp:directive pos:start="75:2" pos:end="75:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="77:9" pos:end="80:0"><expr pos:start="77:9" pos:end="77:48"><call pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:17">skip_bits</name><argument_list pos:start="77:18" pos:end="77:48">(<argument pos:start="77:19" pos:end="77:24"><expr pos:start="77:19" pos:end="77:24"><operator pos:start="77:19" pos:end="77:19">&amp;</operator><name pos:start="77:20" pos:end="77:24"><name pos:start="77:20" pos:end="77:20">v</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:24">gb</name></name></expr></argument>, <argument pos:start="77:27" pos:end="77:47"><expr pos:start="77:27" pos:end="77:47"><literal type="number" pos:start="77:27" pos:end="77:28">16</literal><operator pos:start="77:29" pos:end="77:29">*</operator><literal type="number" pos:start="77:30" pos:end="77:30">4</literal><operator pos:start="77:31" pos:end="77:31">*</operator><name pos:start="77:32" pos:end="77:47"><name pos:start="77:32" pos:end="77:32">v</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:47">numpanscanwin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:5">v</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:14">rndctrl</name></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:36"><name pos:start="83:18" pos:end="83:25">get_bits</name><argument_list pos:start="83:26" pos:end="83:36">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:28">v</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:32">gb</name></name></expr></argument>, <argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:5">v</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:13">uvsamp</name></name> <operator pos:start="85:15" pos:end="85:15">=</operator> <call pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:24">get_bits</name><argument_list pos:start="85:25" pos:end="85:35">(<argument pos:start="85:26" pos:end="85:31"><expr pos:start="85:26" pos:end="85:31"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:31"><name pos:start="85:27" pos:end="85:27">v</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:31">gb</name></name></expr></argument>, <argument pos:start="85:34" pos:end="85:34"><expr pos:start="85:34" pos:end="85:34"><literal type="number" pos:start="85:34" pos:end="85:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="87:64"><if pos:start="87:5" pos:end="87:64">if <condition pos:start="87:8" pos:end="87:28">(<expr pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:9">v</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:22">finterpflag</name></name> <operator pos:start="87:24" pos:end="87:25">==</operator> <literal type="number" pos:start="87:27" pos:end="87:27">1</literal></expr>)</condition><block type="pseudo" pos:start="87:30" pos:end="87:64"><block_content pos:start="87:30" pos:end="87:64"> <expr_stmt pos:start="87:30" pos:end="87:64"><expr pos:start="87:30" pos:end="87:63"><name pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:30">v</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:41">interpfrm</name></name> <operator pos:start="87:43" pos:end="87:43">=</operator> <call pos:start="87:45" pos:end="87:63"><name pos:start="87:45" pos:end="87:52">get_bits</name><argument_list pos:start="87:53" pos:end="87:63">(<argument pos:start="87:54" pos:end="87:59"><expr pos:start="87:54" pos:end="87:59"><operator pos:start="87:54" pos:end="87:54">&amp;</operator><name pos:start="87:55" pos:end="87:59"><name pos:start="87:55" pos:end="87:55">v</name><operator pos:start="87:56" pos:end="87:57">-&gt;</operator><name pos:start="87:58" pos:end="87:59">gb</name></name></expr></argument>, <argument pos:start="87:62" pos:end="87:62"><expr pos:start="87:62" pos:end="87:62"><literal type="number" pos:start="87:62" pos:end="87:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="91:5" pos:end="105:5">switch<condition pos:start="91:11" pos:end="91:24">(<expr pos:start="91:12" pos:end="91:23"><name pos:start="91:12" pos:end="91:23"><name pos:start="91:12" pos:end="91:12">v</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:23">pict_type</name></name></expr>)</condition>

    <block pos:start="93:5" pos:end="105:5">{<block_content pos:start="95:5" pos:end="103:19">

    <case pos:start="95:5" pos:end="95:16">case <expr pos:start="95:10" pos:end="95:15"><name pos:start="95:10" pos:end="95:15">I_TYPE</name></expr>:</case> <if_stmt pos:start="95:18" pos:end="95:63"><if pos:start="95:18" pos:end="95:63">if <condition pos:start="95:21" pos:end="95:52">(<expr pos:start="95:22" pos:end="95:51"><call pos:start="95:22" pos:end="95:47"><name pos:start="95:22" pos:end="95:44">decode_i_picture_header</name><argument_list pos:start="95:45" pos:end="95:47">(<argument pos:start="95:46" pos:end="95:46"><expr pos:start="95:46" pos:end="95:46"><name pos:start="95:46" pos:end="95:46">v</name></expr></argument>)</argument_list></call> <operator pos:start="95:49" pos:end="95:49">&lt;</operator> <literal type="number" pos:start="95:51" pos:end="95:51">0</literal></expr>)</condition><block type="pseudo" pos:start="95:54" pos:end="95:63"><block_content pos:start="95:54" pos:end="95:63"> <return pos:start="95:54" pos:end="95:63">return <expr pos:start="95:61" pos:end="95:62"><operator pos:start="95:61" pos:end="95:61">-</operator><literal type="number" pos:start="95:62" pos:end="95:62">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <case pos:start="97:5" pos:end="97:16">case <expr pos:start="97:10" pos:end="97:15"><name pos:start="97:10" pos:end="97:15">P_TYPE</name></expr>:</case> <if_stmt pos:start="97:18" pos:end="97:63"><if pos:start="97:18" pos:end="97:63">if <condition pos:start="97:21" pos:end="97:52">(<expr pos:start="97:22" pos:end="97:51"><call pos:start="97:22" pos:end="97:47"><name pos:start="97:22" pos:end="97:44">decode_p_picture_header</name><argument_list pos:start="97:45" pos:end="97:47">(<argument pos:start="97:46" pos:end="97:46"><expr pos:start="97:46" pos:end="97:46"><name pos:start="97:46" pos:end="97:46">v</name></expr></argument>)</argument_list></call> <operator pos:start="97:49" pos:end="97:49">&lt;</operator> <literal type="number" pos:start="97:51" pos:end="97:51">0</literal></expr>)</condition><block type="pseudo" pos:start="97:54" pos:end="97:63"><block_content pos:start="97:54" pos:end="97:63"> <return pos:start="97:54" pos:end="97:63">return <expr pos:start="97:61" pos:end="97:62"><operator pos:start="97:61" pos:end="97:61">-</operator><literal type="number" pos:start="97:62" pos:end="97:62">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <case pos:start="99:5" pos:end="99:17">case <expr pos:start="99:10" pos:end="99:16"><name pos:start="99:10" pos:end="99:16">BI_TYPE</name></expr>:</case>

    <case pos:start="101:5" pos:end="101:16">case <expr pos:start="101:10" pos:end="101:15"><name pos:start="101:10" pos:end="101:15">B_TYPE</name></expr>:</case> <if_stmt pos:start="101:18" pos:end="101:73"><if pos:start="101:18" pos:end="101:73">if <condition pos:start="101:21" pos:end="101:52">(<expr pos:start="101:22" pos:end="101:51"><call pos:start="101:22" pos:end="101:47"><name pos:start="101:22" pos:end="101:44">decode_b_picture_header</name><argument_list pos:start="101:45" pos:end="101:47">(<argument pos:start="101:46" pos:end="101:46"><expr pos:start="101:46" pos:end="101:46"><name pos:start="101:46" pos:end="101:46">v</name></expr></argument>)</argument_list></call> <operator pos:start="101:49" pos:end="101:49">&lt;</operator> <literal type="number" pos:start="101:51" pos:end="101:51">0</literal></expr>)</condition><block type="pseudo" pos:start="101:54" pos:end="101:73"><block_content pos:start="101:54" pos:end="101:73"> <return pos:start="101:54" pos:end="101:73">return <expr pos:start="101:61" pos:end="101:72"><name pos:start="101:61" pos:end="101:72">FRAME_SKIPED</name></expr>;</return></block_content></block></if></if_stmt>

    <default pos:start="103:5" pos:end="103:12">default:</default> <break pos:start="103:14" pos:end="103:19">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="109:5" pos:end="109:22">/* AC/DC Syntax */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:40"><expr pos:start="111:5" pos:end="111:39"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:5">v</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:17">transacfrm</name></name> <operator pos:start="111:19" pos:end="111:19">=</operator> <call pos:start="111:21" pos:end="111:39"><name pos:start="111:21" pos:end="111:28">get_bits</name><argument_list pos:start="111:29" pos:end="111:39">(<argument pos:start="111:30" pos:end="111:35"><expr pos:start="111:30" pos:end="111:35"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:35"><name pos:start="111:31" pos:end="111:31">v</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:35">gb</name></name></expr></argument>, <argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><literal type="number" pos:start="111:38" pos:end="111:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="113:60"><if pos:start="113:5" pos:end="113:60">if <condition pos:start="113:8" pos:end="113:22">(<expr pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:9">v</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:21">transacfrm</name></name></expr>)</condition><block type="pseudo" pos:start="113:24" pos:end="113:60"><block_content pos:start="113:24" pos:end="113:60"> <expr_stmt pos:start="113:24" pos:end="113:60"><expr pos:start="113:24" pos:end="113:59"><name pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:24">v</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:36">transacfrm</name></name> <operator pos:start="113:38" pos:end="113:39">+=</operator> <call pos:start="113:41" pos:end="113:59"><name pos:start="113:41" pos:end="113:48">get_bits</name><argument_list pos:start="113:49" pos:end="113:59">(<argument pos:start="113:50" pos:end="113:55"><expr pos:start="113:50" pos:end="113:55"><operator pos:start="113:50" pos:end="113:50">&amp;</operator><name pos:start="113:51" pos:end="113:55"><name pos:start="113:51" pos:end="113:51">v</name><operator pos:start="113:52" pos:end="113:53">-&gt;</operator><name pos:start="113:54" pos:end="113:55">gb</name></name></expr></argument>, <argument pos:start="113:58" pos:end="113:58"><expr pos:start="113:58" pos:end="113:58"><literal type="number" pos:start="113:58" pos:end="113:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:58">(<expr pos:start="115:9" pos:end="115:57"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:9">v</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">pict_type</name></name> <operator pos:start="115:22" pos:end="115:23">==</operator> <name pos:start="115:25" pos:end="115:30">I_TYPE</name> <operator pos:start="115:32" pos:end="115:33">||</operator> <name pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:35">v</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:46">pict_type</name></name> <operator pos:start="115:48" pos:end="115:49">==</operator> <name pos:start="115:51" pos:end="115:57">BI_TYPE</name></expr>)</condition>

    <block pos:start="117:5" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:66">

        <expr_stmt pos:start="119:9" pos:end="119:45"><expr pos:start="119:9" pos:end="119:44"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:9">v</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:22">transacfrm2</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <call pos:start="119:26" pos:end="119:44"><name pos:start="119:26" pos:end="119:33">get_bits</name><argument_list pos:start="119:34" pos:end="119:44">(<argument pos:start="119:35" pos:end="119:40"><expr pos:start="119:35" pos:end="119:40"><operator pos:start="119:35" pos:end="119:35">&amp;</operator><name pos:start="119:36" pos:end="119:40"><name pos:start="119:36" pos:end="119:36">v</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:40">gb</name></name></expr></argument>, <argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="121:66"><if pos:start="121:9" pos:end="121:66">if <condition pos:start="121:12" pos:end="121:27">(<expr pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:13">v</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:26">transacfrm2</name></name></expr>)</condition><block type="pseudo" pos:start="121:29" pos:end="121:66"><block_content pos:start="121:29" pos:end="121:66"> <expr_stmt pos:start="121:29" pos:end="121:66"><expr pos:start="121:29" pos:end="121:65"><name pos:start="121:29" pos:end="121:42"><name pos:start="121:29" pos:end="121:29">v</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:42">transacfrm2</name></name> <operator pos:start="121:44" pos:end="121:45">+=</operator> <call pos:start="121:47" pos:end="121:65"><name pos:start="121:47" pos:end="121:54">get_bits</name><argument_list pos:start="121:55" pos:end="121:65">(<argument pos:start="121:56" pos:end="121:61"><expr pos:start="121:56" pos:end="121:61"><operator pos:start="121:56" pos:end="121:56">&amp;</operator><name pos:start="121:57" pos:end="121:61"><name pos:start="121:57" pos:end="121:57">v</name><operator pos:start="121:58" pos:end="121:59">-&gt;</operator><name pos:start="121:60" pos:end="121:61">gb</name></name></expr></argument>, <argument pos:start="121:64" pos:end="121:64"><expr pos:start="121:64" pos:end="121:64"><literal type="number" pos:start="121:64" pos:end="121:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:42"><expr pos:start="125:5" pos:end="125:41"><name pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:5">v</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:19">transacdctab</name></name> <operator pos:start="125:21" pos:end="125:21">=</operator> <call pos:start="125:23" pos:end="125:41"><name pos:start="125:23" pos:end="125:30">get_bits</name><argument_list pos:start="125:31" pos:end="125:41">(<argument pos:start="125:32" pos:end="125:37"><expr pos:start="125:32" pos:end="125:37"><operator pos:start="125:32" pos:end="125:32">&amp;</operator><name pos:start="125:33" pos:end="125:37"><name pos:start="125:33" pos:end="125:33">v</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:37">gb</name></name></expr></argument>, <argument pos:start="125:40" pos:end="125:40"><expr pos:start="125:40" pos:end="125:40"><literal type="number" pos:start="125:40" pos:end="125:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="127:55"><if pos:start="127:5" pos:end="127:55">if <condition pos:start="127:8" pos:end="127:31">(<expr pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:9">v</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:20">pict_type</name></name> <operator pos:start="127:22" pos:end="127:23">==</operator> <name pos:start="127:25" pos:end="127:30">I_TYPE</name></expr>)</condition><block type="pseudo" pos:start="127:33" pos:end="127:55"><block_content pos:start="127:33" pos:end="127:55"> <expr_stmt pos:start="127:33" pos:end="127:55"><expr pos:start="127:33" pos:end="127:54"><call pos:start="127:33" pos:end="127:54"><name pos:start="127:33" pos:end="127:51">vop_dquant_decoding</name><argument_list pos:start="127:52" pos:end="127:54">(<argument pos:start="127:53" pos:end="127:53"><expr pos:start="127:53" pos:end="127:53"><name pos:start="127:53" pos:end="127:53">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
