<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26268.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">stellaris_init</name><parameter_list pos:start="1:27" pos:end="3:73">(<parameter pos:start="1:28" pos:end="1:54"><decl pos:start="1:28" pos:end="1:54"><type pos:start="1:28" pos:end="1:54"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:54">kernel_filename</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">cpu_model</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:43"><decl pos:start="3:28" pos:end="3:43"><type pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:39">DisplayState</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:43">ds</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:72"><decl pos:start="3:46" pos:end="3:72"><type pos:start="3:46" pos:end="3:72"><name pos:start="3:46" pos:end="3:65">stellaris_board_info</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:72">board</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:5">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:20">int</name></type> <name pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:29">uart_irq</name><index pos:start="7:30" pos:end="7:31">[]</index></name> <init pos:start="7:33" pos:end="7:48">= <expr pos:start="7:35" pos:end="7:48"><block pos:start="7:35" pos:end="7:48">{<expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">5</literal></expr>, <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">6</literal></expr>, <expr pos:start="7:42" pos:end="7:43"><literal type="number" pos:start="7:42" pos:end="7:43">33</literal></expr>, <expr pos:start="7:46" pos:end="7:47"><literal type="number" pos:start="7:46" pos:end="7:47">34</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:20">int</name></type> <name pos:start="9:22" pos:end="9:32"><name pos:start="9:22" pos:end="9:30">timer_irq</name><index pos:start="9:31" pos:end="9:32">[]</index></name> <init pos:start="9:34" pos:end="9:51">= <expr pos:start="9:36" pos:end="9:51"><block pos:start="9:36" pos:end="9:51">{<expr pos:start="9:37" pos:end="9:38"><literal type="number" pos:start="9:37" pos:end="9:38">19</literal></expr>, <expr pos:start="9:41" pos:end="9:42"><literal type="number" pos:start="9:41" pos:end="9:42">21</literal></expr>, <expr pos:start="9:45" pos:end="9:46"><literal type="number" pos:start="9:45" pos:end="9:46">23</literal></expr>, <expr pos:start="9:49" pos:end="9:50"><literal type="number" pos:start="9:49" pos:end="9:50">35</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="15:44"><decl pos:start="11:5" pos:end="15:43"><type pos:start="11:5" pos:end="11:25"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <specifier pos:start="11:12" pos:end="11:16">const</specifier> <name pos:start="11:18" pos:end="11:25">uint32_t</name></type> <name pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:35">gpio_addr</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">7</literal></expr>]</index></name> <init pos:start="11:40" pos:end="15:43">=

      <expr pos:start="13:7" pos:end="15:43"><block pos:start="13:7" pos:end="15:43">{ <expr pos:start="13:9" pos:end="13:18"><literal type="number" pos:start="13:9" pos:end="13:18">0x40004000</literal></expr>, <expr pos:start="13:21" pos:end="13:30"><literal type="number" pos:start="13:21" pos:end="13:30">0x40005000</literal></expr>, <expr pos:start="13:33" pos:end="13:42"><literal type="number" pos:start="13:33" pos:end="13:42">0x40006000</literal></expr>, <expr pos:start="13:45" pos:end="13:54"><literal type="number" pos:start="13:45" pos:end="13:54">0x40007000</literal></expr>,

        <expr pos:start="15:9" pos:end="15:18"><literal type="number" pos:start="15:9" pos:end="15:18">0x40024000</literal></expr>, <expr pos:start="15:21" pos:end="15:30"><literal type="number" pos:start="15:21" pos:end="15:30">0x40025000</literal></expr>, <expr pos:start="15:33" pos:end="15:42"><literal type="number" pos:start="15:33" pos:end="15:42">0x40026000</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:59"><decl pos:start="17:5" pos:end="17:58"><type pos:start="17:5" pos:end="17:20"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <specifier pos:start="17:12" pos:end="17:16">const</specifier> <name pos:start="17:18" pos:end="17:20">int</name></type> <name pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:29">gpio_irq</name><index pos:start="17:30" pos:end="17:32">[<expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">7</literal></expr>]</index></name> <init pos:start="17:34" pos:end="17:58">= <expr pos:start="17:36" pos:end="17:58"><block pos:start="17:36" pos:end="17:58">{<expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr>, <expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">1</literal></expr>, <expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">2</literal></expr>, <expr pos:start="17:46" pos:end="17:46"><literal type="number" pos:start="17:46" pos:end="17:46">3</literal></expr>, <expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">4</literal></expr>, <expr pos:start="17:52" pos:end="17:53"><literal type="number" pos:start="17:52" pos:end="17:53">30</literal></expr>, <expr pos:start="17:56" pos:end="17:57"><literal type="number" pos:start="17:56" pos:end="17:57">31</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">qemu_irq</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:17">pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">qemu_irq</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:24"><name pos:start="23:15" pos:end="23:21">gpio_in</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">7</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:25"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">qemu_irq</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:22">gpio_out</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">7</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">qemu_irq</name></type> <name pos:start="27:14" pos:end="27:16">adc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:18"><decl pos:start="29:5" pos:end="29:17"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:17">sram_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:19"><decl pos:start="31:5" pos:end="31:18"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:18">flash_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:17"><decl pos:start="33:5" pos:end="33:16"><type pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:11">i2c_bus</name> <modifier pos:start="33:13" pos:end="33:13">*</modifier></type><name pos:start="33:14" pos:end="33:16">i2c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:10"><decl pos:start="35:5" pos:end="35:9"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:14">flash_size</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <operator pos:start="39:18" pos:end="39:18">(</operator><operator pos:start="39:19" pos:end="39:19">(</operator><name pos:start="39:20" pos:end="39:29"><name pos:start="39:20" pos:end="39:24">board</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:29">dc0</name></name> <operator pos:start="39:31" pos:end="39:31">&amp;</operator> <literal type="number" pos:start="39:33" pos:end="39:38">0xffff</literal><operator pos:start="39:39" pos:end="39:39">)</operator> <operator pos:start="39:41" pos:end="39:41">+</operator> <literal type="number" pos:start="39:43" pos:end="39:43">1</literal><operator pos:start="39:44" pos:end="39:44">)</operator> <operator pos:start="39:46" pos:end="39:47">&lt;&lt;</operator> <literal type="number" pos:start="39:49" pos:end="39:49">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:13">sram_size</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:27"><name pos:start="41:18" pos:end="41:22">board</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:27">dc0</name></name> <operator pos:start="41:29" pos:end="41:30">&gt;&gt;</operator> <literal type="number" pos:start="41:32" pos:end="41:33">18</literal><operator pos:start="41:34" pos:end="41:34">)</operator> <operator pos:start="41:36" pos:end="41:36">+</operator> <literal type="number" pos:start="41:38" pos:end="41:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:73"><expr pos:start="43:5" pos:end="43:72"><name pos:start="43:5" pos:end="43:7">pic</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:72"><name pos:start="43:11" pos:end="43:21">armv7m_init</name><argument_list pos:start="43:22" pos:end="43:72">(<argument pos:start="43:23" pos:end="43:32"><expr pos:start="43:23" pos:end="43:32"><name pos:start="43:23" pos:end="43:32">flash_size</name></expr></argument>, <argument pos:start="43:35" pos:end="43:43"><expr pos:start="43:35" pos:end="43:43"><name pos:start="43:35" pos:end="43:43">sram_size</name></expr></argument>, <argument pos:start="43:46" pos:end="43:60"><expr pos:start="43:46" pos:end="43:60"><name pos:start="43:46" pos:end="43:60">kernel_filename</name></expr></argument>, <argument pos:start="43:63" pos:end="43:71"><expr pos:start="43:63" pos:end="43:71"><name pos:start="43:63" pos:end="43:71">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:31">(<expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:13">board</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">dc1</name></name> <operator pos:start="47:20" pos:end="47:20">&amp;</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><literal type="number" pos:start="47:23" pos:end="47:23">1</literal> <operator pos:start="47:25" pos:end="47:26">&lt;&lt;</operator> <literal type="number" pos:start="47:28" pos:end="47:29">16</literal><operator pos:start="47:30" pos:end="47:30">)</operator></expr>)</condition> <block pos:start="47:33" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:54">

        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:11">adc</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:53"><name pos:start="49:15" pos:end="49:32">stellaris_adc_init</name><argument_list pos:start="49:33" pos:end="49:53">(<argument pos:start="49:34" pos:end="49:43"><expr pos:start="49:34" pos:end="49:43"><literal type="number" pos:start="49:34" pos:end="49:43">0x40038000</literal></expr></argument>, <argument pos:start="49:46" pos:end="49:52"><expr pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:48">pic</name><index pos:start="49:49" pos:end="49:52">[<expr pos:start="49:50" pos:end="49:51"><literal type="number" pos:start="49:50" pos:end="49:51">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="55:5">else <block pos:start="51:12" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:19">

        <expr_stmt pos:start="53:9" pos:end="53:19"><expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:11">adc</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <for pos:start="57:5" pos:end="67:5">for <control pos:start="57:9" pos:end="57:27">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:21">4</literal></expr>;</condition> <incr pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:24">i</name><operator pos:start="57:25" pos:end="57:26">++</operator></expr></incr>)</control> <block pos:start="57:29" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:9">

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:40">(<expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:17">board</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">dc2</name></name> <operator pos:start="59:24" pos:end="59:24">&amp;</operator> <operator pos:start="59:26" pos:end="59:26">(</operator><literal type="number" pos:start="59:27" pos:end="59:33">0x10000</literal> <operator pos:start="59:35" pos:end="59:36">&lt;&lt;</operator> <name pos:start="59:38" pos:end="59:38">i</name><operator pos:start="59:39" pos:end="59:39">)</operator></expr>)</condition> <block pos:start="59:42" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:56">

            <expr_stmt pos:start="61:13" pos:end="63:56"><expr pos:start="61:13" pos:end="63:55"><call pos:start="61:13" pos:end="63:55"><name pos:start="61:13" pos:end="61:31">stellaris_gptm_init</name><argument_list pos:start="61:32" pos:end="63:55">(<argument pos:start="61:33" pos:end="61:55"><expr pos:start="61:33" pos:end="61:55"><literal type="number" pos:start="61:33" pos:end="61:44">0x40030000</literal> <operator pos:start="61:44" pos:end="61:44">+</operator> <name pos:start="61:46" pos:end="61:46">i</name> <operator pos:start="61:48" pos:end="61:48">*</operator> <literal type="number" pos:start="61:50" pos:end="61:55">0x1000</literal></expr></argument>,

                                <argument pos:start="63:33" pos:end="63:49"><expr pos:start="63:33" pos:end="63:49"><name pos:start="63:33" pos:end="63:49"><name pos:start="63:33" pos:end="63:35">pic</name><index pos:start="63:36" pos:end="63:49">[<expr pos:start="63:37" pos:end="63:48"><name pos:start="63:37" pos:end="63:48"><name pos:start="63:37" pos:end="63:45">timer_irq</name><index pos:start="63:46" pos:end="63:48">[<expr pos:start="63:47" pos:end="63:47"><name pos:start="63:47" pos:end="63:47">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="63:52" pos:end="63:54"><expr pos:start="63:52" pos:end="63:54"><name pos:start="63:52" pos:end="63:54">adc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:72"><expr pos:start="71:5" pos:end="71:71"><call pos:start="71:5" pos:end="71:71"><name pos:start="71:5" pos:end="71:22">stellaris_sys_init</name><argument_list pos:start="71:23" pos:end="71:71">(<argument pos:start="71:24" pos:end="71:33"><expr pos:start="71:24" pos:end="71:33"><literal type="number" pos:start="71:24" pos:end="71:33">0x400fe000</literal></expr></argument>, <argument pos:start="71:36" pos:end="71:42"><expr pos:start="71:36" pos:end="71:42"><name pos:start="71:36" pos:end="71:42"><name pos:start="71:36" pos:end="71:38">pic</name><index pos:start="71:39" pos:end="71:42">[<expr pos:start="71:40" pos:end="71:41"><literal type="number" pos:start="71:40" pos:end="71:41">28</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:45" pos:end="71:49"><expr pos:start="71:45" pos:end="71:49"><name pos:start="71:45" pos:end="71:49">board</name></expr></argument>, <argument pos:start="71:52" pos:end="71:70"><expr pos:start="71:52" pos:end="71:70"><name pos:start="71:52" pos:end="71:62"><name pos:start="71:52" pos:end="71:59">nd_table</name><index pos:start="71:60" pos:end="71:62">[<expr pos:start="71:61" pos:end="71:61"><literal type="number" pos:start="71:61" pos:end="71:61">0</literal></expr>]</index></name><operator pos:start="71:63" pos:end="71:63">.</operator><name pos:start="71:64" pos:end="71:70">macaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="75:5" pos:end="85:5">for <control pos:start="75:9" pos:end="75:27">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <literal type="number" pos:start="75:21" pos:end="75:21">7</literal></expr>;</condition> <incr pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:24">i</name><operator pos:start="75:25" pos:end="75:26">++</operator></expr></incr>)</control> <block pos:start="75:29" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:9">

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:34">(<expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:17">board</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:22">dc4</name></name> <operator pos:start="77:24" pos:end="77:24">&amp;</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><literal type="number" pos:start="77:27" pos:end="77:27">1</literal> <operator pos:start="77:29" pos:end="77:30">&lt;&lt;</operator> <name pos:start="77:32" pos:end="77:32">i</name><operator pos:start="77:33" pos:end="77:33">)</operator></expr>)</condition> <block pos:start="77:36" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:50">

            <expr_stmt pos:start="79:13" pos:end="81:50"><expr pos:start="79:13" pos:end="81:49"><name pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:19">gpio_in</name><index pos:start="79:20" pos:end="79:22">[<expr pos:start="79:21" pos:end="79:21"><name pos:start="79:21" pos:end="79:21">i</name></expr>]</index></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="81:49"><name pos:start="79:26" pos:end="79:35">pl061_init</name><argument_list pos:start="79:36" pos:end="81:49">(<argument pos:start="79:37" pos:end="79:48"><expr pos:start="79:37" pos:end="79:48"><name pos:start="79:37" pos:end="79:48"><name pos:start="79:37" pos:end="79:45">gpio_addr</name><index pos:start="79:46" pos:end="79:48">[<expr pos:start="79:47" pos:end="79:47"><name pos:start="79:47" pos:end="79:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="79:51" pos:end="79:66"><expr pos:start="79:51" pos:end="79:66"><name pos:start="79:51" pos:end="79:66"><name pos:start="79:51" pos:end="79:53">pic</name><index pos:start="79:54" pos:end="79:66">[<expr pos:start="79:55" pos:end="79:65"><name pos:start="79:55" pos:end="79:65"><name pos:start="79:55" pos:end="79:62">gpio_irq</name><index pos:start="79:63" pos:end="79:65">[<expr pos:start="79:64" pos:end="79:64"><name pos:start="79:64" pos:end="79:64">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                                    <argument pos:start="81:37" pos:end="81:48"><expr pos:start="81:37" pos:end="81:48"><operator pos:start="81:37" pos:end="81:37">&amp;</operator><name pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:45">gpio_out</name><index pos:start="81:46" pos:end="81:48">[<expr pos:start="81:47" pos:end="81:47"><name pos:start="81:47" pos:end="81:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="89:5" pos:end="101:5"><if pos:start="89:5" pos:end="101:5">if <condition pos:start="89:8" pos:end="89:31">(<expr pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:13">board</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:18">dc2</name></name> <operator pos:start="89:20" pos:end="89:20">&amp;</operator> <operator pos:start="89:22" pos:end="89:22">(</operator><literal type="number" pos:start="89:23" pos:end="89:23">1</literal> <operator pos:start="89:25" pos:end="89:26">&lt;&lt;</operator> <literal type="number" pos:start="89:28" pos:end="89:29">12</literal><operator pos:start="89:30" pos:end="89:30">)</operator></expr>)</condition> <block pos:start="89:33" pos:end="101:5">{<block_content pos:start="91:9" pos:end="99:9">

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:11">i2c</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:28"><name pos:start="91:15" pos:end="91:26">i2c_init_bus</name><argument_list pos:start="91:27" pos:end="91:28">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><call pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:26">stellaris_i2c_init</name><argument_list pos:start="93:27" pos:end="93:51">(<argument pos:start="93:28" pos:end="93:37"><expr pos:start="93:28" pos:end="93:37"><literal type="number" pos:start="93:28" pos:end="93:37">0x40020000</literal></expr></argument>, <argument pos:start="93:40" pos:end="93:45"><expr pos:start="93:40" pos:end="93:45"><name pos:start="93:40" pos:end="93:45"><name pos:start="93:40" pos:end="93:42">pic</name><index pos:start="93:43" pos:end="93:45">[<expr pos:start="93:44" pos:end="93:44"><literal type="number" pos:start="93:44" pos:end="93:44">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="93:48" pos:end="93:50"><expr pos:start="93:48" pos:end="93:50"><name pos:start="93:48" pos:end="93:50">i2c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:45">(<expr pos:start="95:13" pos:end="95:44"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:17">board</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:30">peripherals</name></name> <operator pos:start="95:32" pos:end="95:32">&amp;</operator> <name pos:start="95:34" pos:end="95:44">BP_OLED_I2C</name></expr>)</condition> <block pos:start="95:47" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:40">

            <expr_stmt pos:start="97:13" pos:end="97:40"><expr pos:start="97:13" pos:end="97:39"><call pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:24">ssd0303_init</name><argument_list pos:start="97:25" pos:end="97:39">(<argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">ds</name></expr></argument>, <argument pos:start="97:30" pos:end="97:32"><expr pos:start="97:30" pos:end="97:32"><name pos:start="97:30" pos:end="97:32">i2c</name></expr></argument>, <argument pos:start="97:35" pos:end="97:38"><expr pos:start="97:35" pos:end="97:38"><literal type="number" pos:start="97:35" pos:end="97:38">0x3d</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="105:5" pos:end="115:5">for <control pos:start="105:9" pos:end="105:27">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:22"><expr pos:start="105:17" pos:end="105:21"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <literal type="number" pos:start="105:21" pos:end="105:21">4</literal></expr>;</condition> <incr pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:24">i</name><operator pos:start="105:25" pos:end="105:26">++</operator></expr></incr>)</control> <block pos:start="105:29" pos:end="115:5">{<block_content pos:start="107:9" pos:end="113:9">

        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:34">(<expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:17">board</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:22">dc2</name></name> <operator pos:start="107:24" pos:end="107:24">&amp;</operator> <operator pos:start="107:26" pos:end="107:26">(</operator><literal type="number" pos:start="107:27" pos:end="107:27">1</literal> <operator pos:start="107:29" pos:end="107:30">&lt;&lt;</operator> <name pos:start="107:32" pos:end="107:32">i</name><operator pos:start="107:33" pos:end="107:33">)</operator></expr>)</condition> <block pos:start="107:36" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:54">

            <expr_stmt pos:start="109:13" pos:end="111:54"><expr pos:start="109:13" pos:end="111:53"><call pos:start="109:13" pos:end="111:53"><name pos:start="109:13" pos:end="109:22">pl011_init</name><argument_list pos:start="109:23" pos:end="111:53">(<argument pos:start="109:24" pos:end="109:46"><expr pos:start="109:24" pos:end="109:46"><literal type="number" pos:start="109:24" pos:end="109:35">0x4000c000</literal> <operator pos:start="109:35" pos:end="109:35">+</operator> <name pos:start="109:37" pos:end="109:37">i</name> <operator pos:start="109:39" pos:end="109:39">*</operator> <literal type="number" pos:start="109:41" pos:end="109:46">0x1000</literal></expr></argument>, <argument pos:start="109:49" pos:end="109:64"><expr pos:start="109:49" pos:end="109:64"><name pos:start="109:49" pos:end="109:64"><name pos:start="109:49" pos:end="109:51">pic</name><index pos:start="109:52" pos:end="109:64">[<expr pos:start="109:53" pos:end="109:63"><name pos:start="109:53" pos:end="109:63"><name pos:start="109:53" pos:end="109:60">uart_irq</name><index pos:start="109:61" pos:end="109:63">[<expr pos:start="109:62" pos:end="109:62"><name pos:start="109:62" pos:end="109:62">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                       <argument pos:start="111:24" pos:end="111:36"><expr pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:33">serial_hds</name><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="111:39" pos:end="111:52"><expr pos:start="111:39" pos:end="111:52"><name pos:start="111:39" pos:end="111:52">PL011_LUMINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="117:5" pos:end="159:5"><if pos:start="117:5" pos:end="159:5">if <condition pos:start="117:8" pos:end="117:30">(<expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:13">board</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:18">dc2</name></name> <operator pos:start="117:20" pos:end="117:20">&amp;</operator> <operator pos:start="117:22" pos:end="117:22">(</operator><literal type="number" pos:start="117:23" pos:end="117:23">1</literal> <operator pos:start="117:25" pos:end="117:26">&lt;&lt;</operator> <literal type="number" pos:start="117:28" pos:end="117:28">4</literal><operator pos:start="117:29" pos:end="117:29">)</operator></expr>)</condition> <block pos:start="117:32" pos:end="159:5">{<block_content pos:start="119:9" pos:end="157:9">

        <if_stmt pos:start="119:9" pos:end="157:9"><if pos:start="119:9" pos:end="153:9">if <condition pos:start="119:12" pos:end="119:45">(<expr pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:17">board</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:30">peripherals</name></name> <operator pos:start="119:32" pos:end="119:32">&amp;</operator> <name pos:start="119:34" pos:end="119:44">BP_OLED_SSI</name></expr>)</condition> <block pos:start="119:47" pos:end="153:9">{<block_content pos:start="121:13" pos:end="151:48">

            <decl_stmt pos:start="121:13" pos:end="121:24"><decl pos:start="121:13" pos:end="121:23"><type pos:start="121:13" pos:end="121:18"><name pos:start="121:13" pos:end="121:16">void</name> <modifier pos:start="121:18" pos:end="121:18">*</modifier></type> <name pos:start="121:20" pos:end="121:23">oled</name></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:22"><decl pos:start="123:13" pos:end="123:21"><type pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:16">void</name> <modifier pos:start="123:18" pos:end="123:18">*</modifier></type> <name pos:start="123:20" pos:end="123:21">sd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="125:13" pos:end="125:26"><decl pos:start="125:13" pos:end="125:25"><type pos:start="125:13" pos:end="125:18"><name pos:start="125:13" pos:end="125:16">void</name> <modifier pos:start="125:18" pos:end="125:18">*</modifier></type><name pos:start="125:19" pos:end="125:25">ssi_bus</name></decl>;</decl_stmt>

            <decl_stmt pos:start="127:13" pos:end="127:22"><decl pos:start="127:13" pos:end="127:21"><type pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:15">int</name></type> <name pos:start="127:17" pos:end="127:21">index</name></decl>;</decl_stmt>



            <expr_stmt pos:start="131:13" pos:end="131:58"><expr pos:start="131:13" pos:end="131:57"><name pos:start="131:13" pos:end="131:16">oled</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <call pos:start="131:20" pos:end="131:57"><name pos:start="131:20" pos:end="131:31">ssd0323_init</name><argument_list pos:start="131:32" pos:end="131:57">(<argument pos:start="131:33" pos:end="131:34"><expr pos:start="131:33" pos:end="131:34"><name pos:start="131:33" pos:end="131:34">ds</name></expr></argument>, <argument pos:start="131:37" pos:end="131:56"><expr pos:start="131:37" pos:end="131:56"><operator pos:start="131:37" pos:end="131:37">&amp;</operator><name pos:start="131:38" pos:end="131:56"><name pos:start="131:38" pos:end="131:45">gpio_out</name><index pos:start="131:46" pos:end="131:53">[<expr pos:start="131:47" pos:end="131:52"><name pos:start="131:47" pos:end="131:52">GPIO_C</name></expr>]</index><index pos:start="131:54" pos:end="131:56">[<expr pos:start="131:55" pos:end="131:55"><literal type="number" pos:start="131:55" pos:end="131:55">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:49"><expr pos:start="133:13" pos:end="133:48"><name pos:start="133:13" pos:end="133:17">index</name> <operator pos:start="133:19" pos:end="133:19">=</operator> <call pos:start="133:21" pos:end="133:48"><name pos:start="133:21" pos:end="133:35">drive_get_index</name><argument_list pos:start="133:36" pos:end="133:48">(<argument pos:start="133:37" pos:end="133:41"><expr pos:start="133:37" pos:end="133:41"><name pos:start="133:37" pos:end="133:41">IF_SD</name></expr></argument>, <argument pos:start="133:44" pos:end="133:44"><expr pos:start="133:44" pos:end="133:44"><literal type="number" pos:start="133:44" pos:end="133:44">0</literal></expr></argument>, <argument pos:start="133:47" pos:end="133:47"><expr pos:start="133:47" pos:end="133:47"><literal type="number" pos:start="133:47" pos:end="133:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:55"><expr pos:start="135:13" pos:end="135:54"><name pos:start="135:13" pos:end="135:14">sd</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <call pos:start="135:18" pos:end="135:54"><name pos:start="135:18" pos:end="135:28">ssi_sd_init</name><argument_list pos:start="135:29" pos:end="135:54">(<argument pos:start="135:30" pos:end="135:53"><expr pos:start="135:30" pos:end="135:53"><name pos:start="135:30" pos:end="135:48"><name pos:start="135:30" pos:end="135:41">drives_table</name><index pos:start="135:42" pos:end="135:48">[<expr pos:start="135:43" pos:end="135:47"><name pos:start="135:43" pos:end="135:47">index</name></expr>]</index></name><operator pos:start="135:49" pos:end="135:49">.</operator><name pos:start="135:50" pos:end="135:53">bdrv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="139:13" pos:end="143:69"><expr pos:start="139:13" pos:end="143:68"><name pos:start="139:13" pos:end="139:19">ssi_bus</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <call pos:start="139:23" pos:end="143:68"><name pos:start="139:23" pos:end="139:44">stellaris_ssi_bus_init</name><argument_list pos:start="139:45" pos:end="143:68">(<argument pos:start="139:46" pos:end="139:65"><expr pos:start="139:46" pos:end="139:65"><operator pos:start="139:46" pos:end="139:46">&amp;</operator><name pos:start="139:47" pos:end="139:65"><name pos:start="139:47" pos:end="139:54">gpio_out</name><index pos:start="139:55" pos:end="139:62">[<expr pos:start="139:56" pos:end="139:61"><name pos:start="139:56" pos:end="139:61">GPIO_D</name></expr>]</index><index pos:start="139:63" pos:end="139:65">[<expr pos:start="139:64" pos:end="139:64"><literal type="number" pos:start="139:64" pos:end="139:64">0</literal></expr>]</index></name></expr></argument>,

                                             <argument pos:start="141:46" pos:end="141:56"><expr pos:start="141:46" pos:end="141:56"><name pos:start="141:46" pos:end="141:56">ssi_sd_xfer</name></expr></argument>, <argument pos:start="141:59" pos:end="141:60"><expr pos:start="141:59" pos:end="141:60"><name pos:start="141:59" pos:end="141:60">sd</name></expr></argument>,

                                             <argument pos:start="143:46" pos:end="143:61"><expr pos:start="143:46" pos:end="143:61"><name pos:start="143:46" pos:end="143:61">ssd0323_xfer_ssi</name></expr></argument>, <argument pos:start="143:64" pos:end="143:67"><expr pos:start="143:64" pos:end="143:67"><name pos:start="143:64" pos:end="143:67">oled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:76"><expr pos:start="147:13" pos:end="147:75"><call pos:start="147:13" pos:end="147:75"><name pos:start="147:13" pos:end="147:22">pl022_init</name><argument_list pos:start="147:23" pos:end="147:75">(<argument pos:start="147:24" pos:end="147:33"><expr pos:start="147:24" pos:end="147:33"><literal type="number" pos:start="147:24" pos:end="147:33">0x40008000</literal></expr></argument>, <argument pos:start="147:36" pos:end="147:41"><expr pos:start="147:36" pos:end="147:41"><name pos:start="147:36" pos:end="147:41"><name pos:start="147:36" pos:end="147:38">pic</name><index pos:start="147:39" pos:end="147:41">[<expr pos:start="147:40" pos:end="147:40"><literal type="number" pos:start="147:40" pos:end="147:40">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:44" pos:end="147:65"><expr pos:start="147:44" pos:end="147:65"><name pos:start="147:44" pos:end="147:65">stellaris_ssi_bus_xfer</name></expr></argument>, <argument pos:start="147:68" pos:end="147:74"><expr pos:start="147:68" pos:end="147:74"><name pos:start="147:68" pos:end="147:74">ssi_bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="149:13" pos:end="149:52">/* Make sure the select pin is high.  */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:48"><expr pos:start="151:13" pos:end="151:47"><call pos:start="151:13" pos:end="151:47"><name pos:start="151:13" pos:end="151:26">qemu_irq_raise</name><argument_list pos:start="151:27" pos:end="151:47">(<argument pos:start="151:28" pos:end="151:46"><expr pos:start="151:28" pos:end="151:46"><name pos:start="151:28" pos:end="151:46"><name pos:start="151:28" pos:end="151:35">gpio_out</name><index pos:start="151:36" pos:end="151:43">[<expr pos:start="151:37" pos:end="151:42"><name pos:start="151:37" pos:end="151:42">GPIO_D</name></expr>]</index><index pos:start="151:44" pos:end="151:46">[<expr pos:start="151:45" pos:end="151:45"><literal type="number" pos:start="151:45" pos:end="151:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="157:9">else <block pos:start="153:16" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:55">

            <expr_stmt pos:start="155:13" pos:end="155:55"><expr pos:start="155:13" pos:end="155:54"><call pos:start="155:13" pos:end="155:54"><name pos:start="155:13" pos:end="155:22">pl022_init</name><argument_list pos:start="155:23" pos:end="155:54">(<argument pos:start="155:24" pos:end="155:33"><expr pos:start="155:24" pos:end="155:33"><literal type="number" pos:start="155:24" pos:end="155:33">0x40008000</literal></expr></argument>, <argument pos:start="155:36" pos:end="155:41"><expr pos:start="155:36" pos:end="155:41"><name pos:start="155:36" pos:end="155:41"><name pos:start="155:36" pos:end="155:38">pic</name><index pos:start="155:39" pos:end="155:41">[<expr pos:start="155:40" pos:end="155:40"><literal type="number" pos:start="155:40" pos:end="155:40">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:44" pos:end="155:47"><expr pos:start="155:44" pos:end="155:47"><name pos:start="155:44" pos:end="155:47">NULL</name></expr></argument>, <argument pos:start="155:50" pos:end="155:53"><expr pos:start="155:50" pos:end="155:53"><name pos:start="155:50" pos:end="155:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:31">(<expr pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:13">board</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:18">dc4</name></name> <operator pos:start="161:20" pos:end="161:20">&amp;</operator> <operator pos:start="161:22" pos:end="161:22">(</operator><literal type="number" pos:start="161:23" pos:end="161:23">1</literal> <operator pos:start="161:25" pos:end="161:26">&lt;&lt;</operator> <literal type="number" pos:start="161:28" pos:end="161:29">28</literal><operator pos:start="161:30" pos:end="161:30">)</operator></expr>)</condition> <block pos:start="161:33" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:63">

        <comment type="block" pos:start="163:9" pos:end="163:41">/* FIXME: Obey network model.  */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:63"><expr pos:start="165:9" pos:end="165:62"><call pos:start="165:9" pos:end="165:62"><name pos:start="165:9" pos:end="165:27">stellaris_enet_init</name><argument_list pos:start="165:28" pos:end="165:62">(<argument pos:start="165:29" pos:end="165:40"><expr pos:start="165:29" pos:end="165:40"><operator pos:start="165:29" pos:end="165:29">&amp;</operator><name pos:start="165:30" pos:end="165:40"><name pos:start="165:30" pos:end="165:37">nd_table</name><index pos:start="165:38" pos:end="165:40">[<expr pos:start="165:39" pos:end="165:39"><literal type="number" pos:start="165:39" pos:end="165:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:43" pos:end="165:52"><expr pos:start="165:43" pos:end="165:52"><literal type="number" pos:start="165:43" pos:end="165:52">0x40048000</literal></expr></argument>, <argument pos:start="165:55" pos:end="165:61"><expr pos:start="165:55" pos:end="165:61"><name pos:start="165:55" pos:end="165:61"><name pos:start="165:55" pos:end="165:57">pic</name><index pos:start="165:58" pos:end="165:61">[<expr pos:start="165:59" pos:end="165:60"><literal type="number" pos:start="165:59" pos:end="165:60">42</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="169:5" pos:end="191:5"><if pos:start="169:5" pos:end="191:5">if <condition pos:start="169:8" pos:end="169:40">(<expr pos:start="169:9" pos:end="169:39"><name pos:start="169:9" pos:end="169:26"><name pos:start="169:9" pos:end="169:13">board</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:26">peripherals</name></name> <operator pos:start="169:28" pos:end="169:28">&amp;</operator> <name pos:start="169:30" pos:end="169:39">BP_GAMEPAD</name></expr>)</condition> <block pos:start="169:42" pos:end="191:5">{<block_content pos:start="171:9" pos:end="189:58">

        <decl_stmt pos:start="171:9" pos:end="171:29"><decl pos:start="171:9" pos:end="171:28"><type pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:16">qemu_irq</name></type> <name pos:start="171:18" pos:end="171:28"><name pos:start="171:18" pos:end="171:25">gpad_irq</name><index pos:start="171:26" pos:end="171:28">[<expr pos:start="171:27" pos:end="171:27"><literal type="number" pos:start="171:27" pos:end="171:27">5</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="173:9" pos:end="173:76"><decl pos:start="173:9" pos:end="173:75"><type pos:start="173:9" pos:end="173:24"><specifier pos:start="173:9" pos:end="173:14">static</specifier> <specifier pos:start="173:16" pos:end="173:20">const</specifier> <name pos:start="173:22" pos:end="173:24">int</name></type> <name pos:start="173:26" pos:end="173:40"><name pos:start="173:26" pos:end="173:37">gpad_keycode</name><index pos:start="173:38" pos:end="173:40">[<expr pos:start="173:39" pos:end="173:39"><literal type="number" pos:start="173:39" pos:end="173:39">5</literal></expr>]</index></name> <init pos:start="173:42" pos:end="173:75">= <expr pos:start="173:44" pos:end="173:75"><block pos:start="173:44" pos:end="173:75">{ <expr pos:start="173:46" pos:end="173:49"><literal type="number" pos:start="173:46" pos:end="173:49">0xc8</literal></expr>, <expr pos:start="173:52" pos:end="173:55"><literal type="number" pos:start="173:52" pos:end="173:55">0xd0</literal></expr>, <expr pos:start="173:58" pos:end="173:61"><literal type="number" pos:start="173:58" pos:end="173:61">0xcb</literal></expr>, <expr pos:start="173:64" pos:end="173:67"><literal type="number" pos:start="173:64" pos:end="173:67">0xcd</literal></expr>, <expr pos:start="173:70" pos:end="173:73"><literal type="number" pos:start="173:70" pos:end="173:73">0x1d</literal></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:58"><expr pos:start="177:9" pos:end="177:57"><name pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:16">gpad_irq</name><index pos:start="177:17" pos:end="177:19">[<expr pos:start="177:18" pos:end="177:18"><literal type="number" pos:start="177:18" pos:end="177:18">0</literal></expr>]</index></name> <operator pos:start="177:21" pos:end="177:21">=</operator> <call pos:start="177:23" pos:end="177:57"><name pos:start="177:23" pos:end="177:37">qemu_irq_invert</name><argument_list pos:start="177:38" pos:end="177:57">(<argument pos:start="177:39" pos:end="177:56"><expr pos:start="177:39" pos:end="177:56"><name pos:start="177:39" pos:end="177:56"><name pos:start="177:39" pos:end="177:45">gpio_in</name><index pos:start="177:46" pos:end="177:53">[<expr pos:start="177:47" pos:end="177:52"><name pos:start="177:47" pos:end="177:52">GPIO_E</name></expr>]</index><index pos:start="177:54" pos:end="177:56">[<expr pos:start="177:55" pos:end="177:55"><literal type="number" pos:start="177:55" pos:end="177:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="177:60" pos:end="177:67">/* up */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:58"><expr pos:start="179:9" pos:end="179:57"><name pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:16">gpad_irq</name><index pos:start="179:17" pos:end="179:19">[<expr pos:start="179:18" pos:end="179:18"><literal type="number" pos:start="179:18" pos:end="179:18">1</literal></expr>]</index></name> <operator pos:start="179:21" pos:end="179:21">=</operator> <call pos:start="179:23" pos:end="179:57"><name pos:start="179:23" pos:end="179:37">qemu_irq_invert</name><argument_list pos:start="179:38" pos:end="179:57">(<argument pos:start="179:39" pos:end="179:56"><expr pos:start="179:39" pos:end="179:56"><name pos:start="179:39" pos:end="179:56"><name pos:start="179:39" pos:end="179:45">gpio_in</name><index pos:start="179:46" pos:end="179:53">[<expr pos:start="179:47" pos:end="179:52"><name pos:start="179:47" pos:end="179:52">GPIO_E</name></expr>]</index><index pos:start="179:54" pos:end="179:56">[<expr pos:start="179:55" pos:end="179:55"><literal type="number" pos:start="179:55" pos:end="179:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="179:60" pos:end="179:69">/* down */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:58"><expr pos:start="181:9" pos:end="181:57"><name pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:16">gpad_irq</name><index pos:start="181:17" pos:end="181:19">[<expr pos:start="181:18" pos:end="181:18"><literal type="number" pos:start="181:18" pos:end="181:18">2</literal></expr>]</index></name> <operator pos:start="181:21" pos:end="181:21">=</operator> <call pos:start="181:23" pos:end="181:57"><name pos:start="181:23" pos:end="181:37">qemu_irq_invert</name><argument_list pos:start="181:38" pos:end="181:57">(<argument pos:start="181:39" pos:end="181:56"><expr pos:start="181:39" pos:end="181:56"><name pos:start="181:39" pos:end="181:56"><name pos:start="181:39" pos:end="181:45">gpio_in</name><index pos:start="181:46" pos:end="181:53">[<expr pos:start="181:47" pos:end="181:52"><name pos:start="181:47" pos:end="181:52">GPIO_E</name></expr>]</index><index pos:start="181:54" pos:end="181:56">[<expr pos:start="181:55" pos:end="181:55"><literal type="number" pos:start="181:55" pos:end="181:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="181:60" pos:end="181:69">/* left */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:58"><expr pos:start="183:9" pos:end="183:57"><name pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:16">gpad_irq</name><index pos:start="183:17" pos:end="183:19">[<expr pos:start="183:18" pos:end="183:18"><literal type="number" pos:start="183:18" pos:end="183:18">3</literal></expr>]</index></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <call pos:start="183:23" pos:end="183:57"><name pos:start="183:23" pos:end="183:37">qemu_irq_invert</name><argument_list pos:start="183:38" pos:end="183:57">(<argument pos:start="183:39" pos:end="183:56"><expr pos:start="183:39" pos:end="183:56"><name pos:start="183:39" pos:end="183:56"><name pos:start="183:39" pos:end="183:45">gpio_in</name><index pos:start="183:46" pos:end="183:53">[<expr pos:start="183:47" pos:end="183:52"><name pos:start="183:47" pos:end="183:52">GPIO_E</name></expr>]</index><index pos:start="183:54" pos:end="183:56">[<expr pos:start="183:55" pos:end="183:55"><literal type="number" pos:start="183:55" pos:end="183:55">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="183:60" pos:end="183:70">/* right */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:58"><expr pos:start="185:9" pos:end="185:57"><name pos:start="185:9" pos:end="185:19"><name pos:start="185:9" pos:end="185:16">gpad_irq</name><index pos:start="185:17" pos:end="185:19">[<expr pos:start="185:18" pos:end="185:18"><literal type="number" pos:start="185:18" pos:end="185:18">4</literal></expr>]</index></name> <operator pos:start="185:21" pos:end="185:21">=</operator> <call pos:start="185:23" pos:end="185:57"><name pos:start="185:23" pos:end="185:37">qemu_irq_invert</name><argument_list pos:start="185:38" pos:end="185:57">(<argument pos:start="185:39" pos:end="185:56"><expr pos:start="185:39" pos:end="185:56"><name pos:start="185:39" pos:end="185:56"><name pos:start="185:39" pos:end="185:45">gpio_in</name><index pos:start="185:46" pos:end="185:53">[<expr pos:start="185:47" pos:end="185:52"><name pos:start="185:47" pos:end="185:52">GPIO_F</name></expr>]</index><index pos:start="185:54" pos:end="185:56">[<expr pos:start="185:55" pos:end="185:55"><literal type="number" pos:start="185:55" pos:end="185:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="185:60" pos:end="185:71">/* select */</comment>



        <expr_stmt pos:start="189:9" pos:end="189:58"><expr pos:start="189:9" pos:end="189:57"><call pos:start="189:9" pos:end="189:57"><name pos:start="189:9" pos:end="189:30">stellaris_gamepad_init</name><argument_list pos:start="189:31" pos:end="189:57">(<argument pos:start="189:32" pos:end="189:32"><expr pos:start="189:32" pos:end="189:32"><literal type="number" pos:start="189:32" pos:end="189:32">5</literal></expr></argument>, <argument pos:start="189:35" pos:end="189:42"><expr pos:start="189:35" pos:end="189:42"><name pos:start="189:35" pos:end="189:42">gpad_irq</name></expr></argument>, <argument pos:start="189:45" pos:end="189:56"><expr pos:start="189:45" pos:end="189:56"><name pos:start="189:45" pos:end="189:56">gpad_keycode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
