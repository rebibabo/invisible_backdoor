<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1714.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:32">ff_vp56_init_context</name><parameter_list pos:start="1:33" pos:end="3:58">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:67">VP56Context</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:70">s</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:42"><decl pos:start="3:35" pos:end="3:42"><type pos:start="3:35" pos:end="3:42"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:42">flip</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:57">has_alpha</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="105:1">{<block_content pos:start="7:5" pos:end="103:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:74"><expr pos:start="13:5" pos:end="13:73"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:9">avctx</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">pix_fmt</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <ternary pos:start="13:22" pos:end="13:73"><condition pos:start="13:22" pos:end="13:32"><expr pos:start="13:22" pos:end="13:30"><name pos:start="13:22" pos:end="13:30">has_alpha</name></expr> ?</condition><then pos:start="13:34" pos:end="13:52"> <expr pos:start="13:34" pos:end="13:52"><name pos:start="13:34" pos:end="13:52">AV_PIX_FMT_YUVA420P</name></expr> </then><else pos:start="13:54" pos:end="13:73">: <expr pos:start="13:56" pos:end="13:73"><name pos:start="13:56" pos:end="13:73">AV_PIX_FMT_YUV420P</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="15:63"><if pos:start="15:5" pos:end="15:63">if <condition pos:start="15:8" pos:end="15:26">(<expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:25">skip_alpha</name></name></expr>)</condition><block type="pseudo" pos:start="15:28" pos:end="15:63"><block_content pos:start="15:28" pos:end="15:63"> <expr_stmt pos:start="15:28" pos:end="15:63"><expr pos:start="15:28" pos:end="15:62"><name pos:start="15:28" pos:end="15:41"><name pos:start="15:28" pos:end="15:32">avctx</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:41">pix_fmt</name></name> <operator pos:start="15:43" pos:end="15:43">=</operator> <name pos:start="15:45" pos:end="15:62">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:22">ff_h264chroma_init</name><argument_list pos:start="19:23" pos:end="19:41">(<argument pos:start="19:24" pos:end="19:37"><expr pos:start="19:24" pos:end="19:37"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:37"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:37">h264chroma</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:40"><expr pos:start="19:40" pos:end="19:40"><literal type="number" pos:start="19:40" pos:end="19:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><call pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:19">ff_hpeldsp_init</name><argument_list pos:start="21:20" pos:end="21:43">(<argument pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:28"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:28"><name pos:start="21:22" pos:end="21:22">s</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:28">hdsp</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:35">avctx</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:42">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><call pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:20">ff_videodsp_init</name><argument_list pos:start="23:21" pos:end="23:33">(<argument pos:start="23:22" pos:end="23:29"><expr pos:start="23:22" pos:end="23:29"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:29"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:29">vdsp</name></name></expr></argument>, <argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:18">ff_vp3dsp_init</name><argument_list pos:start="25:19" pos:end="25:44">(<argument pos:start="25:20" pos:end="25:29"><expr pos:start="25:20" pos:end="25:29"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:29">vp3dsp</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:36">avctx</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:43">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><call pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:19">ff_vp56dsp_init</name><argument_list pos:start="27:20" pos:end="27:50">(<argument pos:start="27:21" pos:end="27:31"><expr pos:start="27:21" pos:end="27:31"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:31"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:31">vp56dsp</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:49"><expr pos:start="27:34" pos:end="27:49"><name pos:start="27:34" pos:end="27:49"><name pos:start="27:34" pos:end="27:38">avctx</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:45">codec</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:49">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="37:5">for <control pos:start="29:9" pos:end="29:28">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:23"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <literal type="number" pos:start="29:21" pos:end="29:22">64</literal></expr>;</condition> <incr pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">i</name><operator pos:start="29:26" pos:end="29:27">++</operator></expr></incr>)</control> <block pos:start="29:30" pos:end="37:5">{<block_content pos:start="33:9" pos:end="36:0">

<cpp:define pos:start="31:1" pos:end="31:46">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:17">TRANSPOSE</name><parameter_list pos:start="31:18" pos:end="31:20">(<parameter pos:start="31:19" pos:end="31:19"><type pos:start="31:19" pos:end="31:19"><name pos:start="31:19" pos:end="31:19">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="31:22" pos:end="31:46">(x &gt;&gt; 3) | ((x &amp; 7) &lt;&lt; 3)</cpp:value></cpp:define>

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:61"><name pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:25">idct_scantable</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">i</name></expr>]</index></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <call pos:start="33:32" pos:end="33:61"><name pos:start="33:32" pos:end="33:40">TRANSPOSE</name><argument_list pos:start="33:41" pos:end="33:61">(<argument pos:start="33:42" pos:end="33:60"><expr pos:start="33:42" pos:end="33:60"><name pos:start="33:42" pos:end="33:60"><name pos:start="33:42" pos:end="33:57">ff_zigzag_direct</name><index pos:start="33:58" pos:end="33:60">[<expr pos:start="33:59" pos:end="33:59"><name pos:start="33:59" pos:end="33:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="35:1" pos:end="35:16">#<cpp:directive pos:start="35:2" pos:end="35:6">undef</cpp:directive> <name pos:start="35:8" pos:end="35:16">TRANSPOSE</name></cpp:undef>

    </block_content>}</block></for>



    <for pos:start="41:5" pos:end="53:5">for <control pos:start="41:9" pos:end="41:51">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:46"><expr pos:start="41:17" pos:end="41:45"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <call pos:start="41:21" pos:end="41:45"><name pos:start="41:21" pos:end="41:34">FF_ARRAY_ELEMS</name><argument_list pos:start="41:35" pos:end="41:45">(<argument pos:start="41:36" pos:end="41:44"><expr pos:start="41:36" pos:end="41:44"><name pos:start="41:36" pos:end="41:44"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:44">frames</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="41:48" pos:end="41:50"><expr pos:start="41:48" pos:end="41:50"><name pos:start="41:48" pos:end="41:48">i</name><operator pos:start="41:49" pos:end="41:50">++</operator></expr></incr>)</control> <block pos:start="41:53" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:9">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">frames</name><index pos:start="43:18" pos:end="43:20">[<expr pos:start="43:19" pos:end="43:19"><name pos:start="43:19" pos:end="43:19">i</name></expr>]</index></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:39"><name pos:start="43:24" pos:end="43:37">av_frame_alloc</name><argument_list pos:start="43:38" pos:end="43:39">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:26">(<expr pos:start="45:13" pos:end="45:25"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">frames</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index></name></expr>)</condition> <block pos:start="45:28" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:35">

            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><call pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:24">ff_vp56_free</name><argument_list pos:start="47:25" pos:end="47:31">(<argument pos:start="47:26" pos:end="47:30"><expr pos:start="47:26" pos:end="47:30"><name pos:start="47:26" pos:end="47:30">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:28">edge_emu_buffer_alloc</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:35">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:19">above_blocks</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:18">macroblocks</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">quantizer</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <operator pos:start="63:20" pos:end="63:20">-</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:24">deblock_filtering</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <literal type="number" pos:start="65:28" pos:end="65:28">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:19">golden_frame</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:21"><expr pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:13">filter</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:20">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:29"><expr pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:16">has_alpha</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:28">has_alpha</name></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:13">modelp</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <operator pos:start="79:17" pos:end="79:17">&amp;</operator><name pos:start="79:18" pos:end="79:25"><name pos:start="79:18" pos:end="79:18">s</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:25">model</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="99:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:13">(<expr pos:start="83:9" pos:end="83:12"><name pos:start="83:9" pos:end="83:12">flip</name></expr>)</condition> <block pos:start="83:15" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:20">

        <expr_stmt pos:start="85:9" pos:end="85:21"><expr pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:15">flip</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">-</operator><literal type="number" pos:start="85:20" pos:end="85:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:15">frbi</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <literal type="number" pos:start="87:19" pos:end="87:19">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:15">srbi</name></name> <operator pos:start="89:17" pos:end="89:17">=</operator> <literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="99:5">else <block pos:start="91:12" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:20">

        <expr_stmt pos:start="93:9" pos:end="93:20"><expr pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">flip</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <literal type="number" pos:start="93:19" pos:end="93:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:20"><expr pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:15">frbi</name></name> <operator pos:start="95:17" pos:end="95:17">=</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:20"><expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:15">srbi</name></name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:19">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
