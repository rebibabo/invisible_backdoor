<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9271.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">DeviceState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">pc_vga_init</name><parameter_list pos:start="1:25" pos:end="1:58">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:31">ISABus</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">isa_bus</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:48">PCIBus</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">pci_bus</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="71:5"><if pos:start="9:5" pos:end="21:5">if <condition pos:start="9:8" pos:end="9:27">(<expr pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:26">cirrus_vga_enabled</name></expr>)</condition> <block pos:start="9:29" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:9">

        <if_stmt pos:start="11:9" pos:end="19:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:20">(<expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:19">pci_bus</name></expr>)</condition> <block pos:start="11:22" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:47">

            <expr_stmt pos:start="13:13" pos:end="13:47"><expr pos:start="13:13" pos:end="13:46"><name pos:start="13:13" pos:end="13:15">dev</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:46"><name pos:start="13:19" pos:end="13:37">pci_cirrus_vga_init</name><argument_list pos:start="13:38" pos:end="13:46">(<argument pos:start="13:39" pos:end="13:45"><expr pos:start="13:39" pos:end="13:45"><name pos:start="13:39" pos:end="13:45">pci_bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="15:11" pos:end="19:9">else <block pos:start="15:16" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:59">

            <expr_stmt pos:start="17:13" pos:end="17:59"><expr pos:start="17:13" pos:end="17:58"><name pos:start="17:13" pos:end="17:15">dev</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:58"><name pos:start="17:19" pos:end="17:37">isa_cirrus_vga_init</name><argument_list pos:start="17:38" pos:end="17:58">(<argument pos:start="17:39" pos:end="17:57"><expr pos:start="17:39" pos:end="17:57"><call pos:start="17:39" pos:end="17:57"><name pos:start="17:39" pos:end="17:55">get_system_memory</name><argument_list pos:start="17:56" pos:end="17:57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="45:5">else if <condition pos:start="21:15" pos:end="21:30">(<expr pos:start="21:16" pos:end="21:29"><name pos:start="21:16" pos:end="21:29">vmsvga_enabled</name></expr>)</condition> <block pos:start="21:32" pos:end="45:5">{<block_content pos:start="23:9" pos:end="44:0">

        <if_stmt pos:start="23:9" pos:end="44:0"><if pos:start="23:9" pos:end="37:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19">pci_bus</name></expr>)</condition> <block pos:start="23:22" pos:end="37:9">{<block_content pos:start="25:13" pos:end="35:13">

            <expr_stmt pos:start="25:13" pos:end="25:43"><expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:15">dev</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:42"><name pos:start="25:19" pos:end="25:33">pci_vmsvga_init</name><argument_list pos:start="25:34" pos:end="25:42">(<argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:41">pci_bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="35:13"><if pos:start="27:13" pos:end="35:13">if <condition pos:start="27:16" pos:end="27:21">(<expr pos:start="27:17" pos:end="27:20"><operator pos:start="27:17" pos:end="27:17">!</operator><name pos:start="27:18" pos:end="27:20">dev</name></expr>)</condition> <block pos:start="27:23" pos:end="35:13">{<block_content pos:start="29:17" pos:end="33:44">

                <expr_stmt pos:start="29:17" pos:end="31:57"><expr pos:start="29:17" pos:end="31:56"><call pos:start="29:17" pos:end="31:56"><name pos:start="29:17" pos:end="29:23">fprintf</name><argument_list pos:start="29:24" pos:end="31:56">(<argument pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:30">stderr</name></expr></argument>, <argument pos:start="29:33" pos:end="31:55"><expr pos:start="29:33" pos:end="31:55"><literal type="string" pos:start="29:33" pos:end="29:68">"Warning: vmware_vga not available,"</literal>

                        <literal type="string" pos:start="31:25" pos:end="31:55">" using standard VGA instead\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:44"><expr pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:19">dev</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:43"><name pos:start="33:23" pos:end="33:34">pci_vga_init</name><argument_list pos:start="33:35" pos:end="33:43">(<argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:42">pci_bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="44:0">else <block pos:start="37:16" pos:end="44:0">{<block_content pos:start="39:13" pos:end="39:74">

            <expr_stmt pos:start="39:13" pos:end="39:74"><expr pos:start="39:13" pos:end="39:73"><call pos:start="39:13" pos:end="39:73"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="39:73">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:58"><expr pos:start="39:29" pos:end="39:58"><literal type="string" pos:start="39:29" pos:end="39:58">"%s: vmware_vga: no PCI bus\n"</literal></expr></argument>, <argument pos:start="39:61" pos:end="39:72"><expr pos:start="39:61" pos:end="39:72"><name pos:start="39:61" pos:end="39:72">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="43:1" pos:end="43:19">#<cpp:directive pos:start="43:2" pos:end="43:6">ifdef</cpp:directive> <name pos:start="43:8" pos:end="43:19">CONFIG_SPICE</name></cpp:ifdef>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="59:5">else if <condition pos:start="45:15" pos:end="45:27">(<expr pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:26">qxl_enabled</name></expr>)</condition> <block pos:start="45:29" pos:end="59:5">{<block_content pos:start="47:9" pos:end="58:0">

        <if_stmt pos:start="47:9" pos:end="58:0"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:20">(<expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:19">pci_bus</name></expr>)</condition> <block pos:start="47:22" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:67">

            <expr_stmt pos:start="49:13" pos:end="49:67"><expr pos:start="49:13" pos:end="49:66"><name pos:start="49:13" pos:end="49:15">dev</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">&amp;</operator><call pos:start="49:20" pos:end="49:60"><name pos:start="49:20" pos:end="49:36">pci_create_simple</name><argument_list pos:start="49:37" pos:end="49:60">(<argument pos:start="49:38" pos:end="49:44"><expr pos:start="49:38" pos:end="49:44"><name pos:start="49:38" pos:end="49:44">pci_bus</name></expr></argument>, <argument pos:start="49:47" pos:end="49:48"><expr pos:start="49:47" pos:end="49:48"><operator pos:start="49:47" pos:end="49:47">-</operator><literal type="number" pos:start="49:48" pos:end="49:48">1</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:59"><expr pos:start="49:51" pos:end="49:59"><literal type="string" pos:start="49:51" pos:end="49:59">"qxl-vga"</literal></expr></argument>)</argument_list></call><operator pos:start="49:61" pos:end="49:62">-&gt;</operator><name pos:start="49:63" pos:end="49:66">qdev</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="58:0">else <block pos:start="51:16" pos:end="58:0">{<block_content pos:start="53:13" pos:end="53:67">

            <expr_stmt pos:start="53:13" pos:end="53:67"><expr pos:start="53:13" pos:end="53:66"><call pos:start="53:13" pos:end="53:66"><name pos:start="53:13" pos:end="53:19">fprintf</name><argument_list pos:start="53:20" pos:end="53:66">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">stderr</name></expr></argument>, <argument pos:start="53:29" pos:end="53:51"><expr pos:start="53:29" pos:end="53:51"><literal type="string" pos:start="53:29" pos:end="53:51">"%s: qxl: no PCI bus\n"</literal></expr></argument>, <argument pos:start="53:54" pos:end="53:65"><expr pos:start="53:54" pos:end="53:65"><name pos:start="53:54" pos:end="53:65">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="71:5">else if <condition pos:start="59:15" pos:end="59:31">(<expr pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:30">std_vga_enabled</name></expr>)</condition> <block pos:start="59:33" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:9">

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:19">pci_bus</name></expr>)</condition> <block pos:start="61:22" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:40">

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:15">dev</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:39"><name pos:start="63:19" pos:end="63:30">pci_vga_init</name><argument_list pos:start="63:31" pos:end="63:39">(<argument pos:start="63:32" pos:end="63:38"><expr pos:start="63:32" pos:end="63:38"><name pos:start="63:32" pos:end="63:38">pci_bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="69:9">else <block pos:start="65:16" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:40">

            <expr_stmt pos:start="67:13" pos:end="67:40"><expr pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:15">dev</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:39"><name pos:start="67:19" pos:end="67:30">isa_vga_init</name><argument_list pos:start="67:31" pos:end="67:39">(<argument pos:start="67:32" pos:end="67:38"><expr pos:start="67:32" pos:end="67:38"><name pos:start="67:32" pos:end="67:38">isa_bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="75:5" pos:end="75:15">return <expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
