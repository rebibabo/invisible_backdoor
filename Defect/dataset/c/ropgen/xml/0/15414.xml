<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15414.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">vnc_tight_clear</name><parameter_list pos:start="1:21" pos:end="1:34">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:29">VncState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:33">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="30:0">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="15:5">for <control pos:start="7:9" pos:end="7:50">(<init pos:start="7:10" pos:end="7:13"><expr pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:10">i</name><operator pos:start="7:11" pos:end="7:11">=</operator><literal type="number" pos:start="7:12" pos:end="7:12">0</literal></expr>;</init> <condition pos:start="7:15" pos:end="7:45"><expr pos:start="7:15" pos:end="7:44"><name pos:start="7:15" pos:end="7:15">i</name><operator pos:start="7:16" pos:end="7:16">&lt;</operator><call pos:start="7:17" pos:end="7:44"><name pos:start="7:17" pos:end="7:26">ARRAY_SIZE</name><argument_list pos:start="7:27" pos:end="7:44">(<argument pos:start="7:28" pos:end="7:43"><expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:29">vs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:43">tight_stream</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="7:47" pos:end="7:49"><expr pos:start="7:47" pos:end="7:49"><name pos:start="7:47" pos:end="7:47">i</name><operator pos:start="7:48" pos:end="7:49">++</operator></expr></incr>)</control> <block pos:start="7:52" pos:end="15:5">{<block_content pos:start="9:9" pos:end="13:9">

        <if_stmt pos:start="9:9" pos:end="13:9"><if pos:start="9:9" pos:end="13:9">if <condition pos:start="9:12" pos:end="9:39">(<expr pos:start="9:13" pos:end="9:38"><name pos:start="9:13" pos:end="9:31"><name pos:start="9:13" pos:end="9:14">vs</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:28">tight_stream</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">i</name></expr>]</index></name><operator pos:start="9:32" pos:end="9:32">.</operator><name pos:start="9:33" pos:end="9:38">opaque</name></expr>)</condition> <block pos:start="9:41" pos:end="13:9">{<block_content pos:start="11:13" pos:end="11:45">

            <expr_stmt pos:start="11:13" pos:end="11:45"><expr pos:start="11:13" pos:end="11:44"><call pos:start="11:13" pos:end="11:44"><name pos:start="11:13" pos:end="11:22">deflateEnd</name><argument_list pos:start="11:23" pos:end="11:44">(<argument pos:start="11:24" pos:end="11:43"><expr pos:start="11:24" pos:end="11:43"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:43"><name pos:start="11:25" pos:end="11:26">vs</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:40">tight_stream</name><index pos:start="11:41" pos:end="11:43">[<expr pos:start="11:42" pos:end="11:42"><name pos:start="11:42" pos:end="11:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:15">buffer_free</name><argument_list pos:start="19:16" pos:end="19:27">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:19">vs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">tight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:15">buffer_free</name><argument_list pos:start="21:16" pos:end="21:32">(<argument pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:31"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:31"><name pos:start="21:18" pos:end="21:19">vs</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:31">tight_zlib</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:15">buffer_free</name><argument_list pos:start="23:16" pos:end="23:36">(<argument pos:start="23:17" pos:end="23:35"><expr pos:start="23:17" pos:end="23:35"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:35"><name pos:start="23:18" pos:end="23:19">vs</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:35">tight_gradient</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="25:1" pos:end="25:22">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:22">CONFIG_VNC_JPEG</name></cpp:ifdef>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:32"><call pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:15">buffer_free</name><argument_list pos:start="27:16" pos:end="27:32">(<argument pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:31"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:31"><name pos:start="27:18" pos:end="27:19">vs</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:31">tight_jpeg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
