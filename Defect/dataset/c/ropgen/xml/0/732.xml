<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/732.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">dvbsub_parse_clut_segment</name><parameter_list pos:start="1:38" pos:end="3:73">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:53">uint8_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:58">buf</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:72">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="161:1">{<block_content pos:start="7:5" pos:end="159:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DVBSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <name pos:start="11:36" pos:end="11:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:18">clut_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">DVBSubCLUT</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">clut</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">entry_id</name></decl>, <decl pos:start="17:19" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:23">depth</name></decl> , <decl pos:start="17:27" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:27" pos:end="17:36">full_range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">y</name></decl>, <decl pos:start="19:12" pos:end="19:13"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:13">cr</name></decl>, <decl pos:start="19:16" pos:end="19:17"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:16" pos:end="19:17">cb</name></decl>, <decl pos:start="19:20" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:20" pos:end="19:24">alpha</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">r</name></decl>, <decl pos:start="21:12" pos:end="21:12"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:12">g</name></decl>, <decl pos:start="21:15" pos:end="21:15"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:15" pos:end="21:15">b</name></decl>, <decl pos:start="21:18" pos:end="21:22"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:18" pos:end="21:22">r_add</name></decl>, <decl pos:start="21:25" pos:end="21:29"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:25" pos:end="21:29">g_add</name></decl>, <decl pos:start="21:32" pos:end="21:36"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:32" pos:end="21:36">b_add</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:11">av_dlog</name><argument_list pos:start="25:12" pos:end="25:40">(<argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">avctx</name></expr></argument>, <argument pos:start="25:20" pos:end="25:39"><expr pos:start="25:20" pos:end="25:39"><literal type="string" pos:start="25:20" pos:end="25:39">"DVB clut packet:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="37:5">for <control pos:start="29:9" pos:end="29:32">(<init pos:start="29:10" pos:end="29:13"><expr pos:start="29:10" pos:end="29:12"><name pos:start="29:10" pos:end="29:10">i</name><operator pos:start="29:11" pos:end="29:11">=</operator><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</init> <condition pos:start="29:15" pos:end="29:27"><expr pos:start="29:15" pos:end="29:26"><name pos:start="29:15" pos:end="29:15">i</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <name pos:start="29:19" pos:end="29:26">buf_size</name></expr>;</condition> <incr pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:29">i</name><operator pos:start="29:30" pos:end="29:31">++</operator></expr></incr>)</control> <block pos:start="29:34" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:33">

        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:15">av_dlog</name><argument_list pos:start="31:16" pos:end="31:39">(<argument pos:start="31:17" pos:end="31:21"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:21">avctx</name></expr></argument>, <argument pos:start="31:24" pos:end="31:30"><expr pos:start="31:24" pos:end="31:30"><literal type="string" pos:start="31:24" pos:end="31:30">"%02x "</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:35">buf</name><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><name pos:start="31:37" pos:end="31:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:33"><if pos:start="33:9" pos:end="35:33">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">i</name> <operator pos:start="33:15" pos:end="33:15">%</operator> <literal type="number" pos:start="33:17" pos:end="33:18">16</literal> <operator pos:start="33:20" pos:end="33:21">==</operator> <literal type="number" pos:start="33:23" pos:end="33:24">15</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:33"><block_content pos:start="35:13" pos:end="35:33">

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><call pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:19">av_dlog</name><argument_list pos:start="35:20" pos:end="35:32">(<argument pos:start="35:21" pos:end="35:25"><expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25">avctx</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><literal type="string" pos:start="35:28" pos:end="35:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="41:5" pos:end="43:29"><if pos:start="41:5" pos:end="43:29">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">%</operator> <literal type="number" pos:start="41:13" pos:end="41:14">16</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:29"><block_content pos:start="43:9" pos:end="43:29">

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:15">av_dlog</name><argument_list pos:start="43:16" pos:end="43:28">(<argument pos:start="43:17" pos:end="43:21"><expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:21">avctx</name></expr></argument>, <argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><literal type="string" pos:start="43:24" pos:end="43:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:11">clut_id</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">*</operator><name pos:start="47:16" pos:end="47:18">buf</name><operator pos:start="47:19" pos:end="47:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:13"><expr pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:7">buf</name> <operator pos:start="49:9" pos:end="49:10">+=</operator> <literal type="number" pos:start="49:12" pos:end="49:12">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:8">clut</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:33"><name pos:start="53:12" pos:end="53:19">get_clut</name><argument_list pos:start="53:20" pos:end="53:33">(<argument pos:start="53:21" pos:end="53:23"><expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">ctx</name></expr></argument>, <argument pos:start="53:26" pos:end="53:32"><expr pos:start="53:26" pos:end="53:32"><name pos:start="53:26" pos:end="53:32">clut_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="75:5"><if pos:start="57:5" pos:end="75:5">if <condition pos:start="57:8" pos:end="57:14">(<expr pos:start="57:9" pos:end="57:13"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:13">clut</name></expr>)</condition> <block pos:start="57:16" pos:end="75:5">{<block_content pos:start="59:9" pos:end="73:30">

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:12">clut</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:44"><name pos:start="59:16" pos:end="59:24">av_malloc</name><argument_list pos:start="59:25" pos:end="59:44">(<argument pos:start="59:26" pos:end="59:43"><expr pos:start="59:26" pos:end="59:43"><sizeof pos:start="59:26" pos:end="59:43">sizeof<argument_list pos:start="59:32" pos:end="59:43">(<argument pos:start="59:33" pos:end="59:42"><expr pos:start="59:33" pos:end="59:42"><name pos:start="59:33" pos:end="59:42">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:56"><expr pos:start="63:9" pos:end="63:55"><call pos:start="63:9" pos:end="63:55"><name pos:start="63:9" pos:end="63:14">memcpy</name><argument_list pos:start="63:15" pos:end="63:55">(<argument pos:start="63:16" pos:end="63:19"><expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">clut</name></expr></argument>, <argument pos:start="63:22" pos:end="63:34"><expr pos:start="63:22" pos:end="63:34"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:34">default_clut</name></expr></argument>, <argument pos:start="63:37" pos:end="63:54"><expr pos:start="63:37" pos:end="63:54"><sizeof pos:start="63:37" pos:end="63:54">sizeof<argument_list pos:start="63:43" pos:end="63:54">(<argument pos:start="63:44" pos:end="63:53"><expr pos:start="63:44" pos:end="63:53"><name pos:start="63:44" pos:end="63:53">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:12">clut</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:16">id</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:26">clut_id</name></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:12">clut</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:18">next</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:35"><name pos:start="71:22" pos:end="71:24">ctx</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:35">clut_list</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:11">ctx</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:22">clut_list</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:29">clut</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="79:5" pos:end="159:5">while <condition pos:start="79:11" pos:end="79:29">(<expr pos:start="79:12" pos:end="79:28"><name pos:start="79:12" pos:end="79:14">buf</name> <operator pos:start="79:16" pos:end="79:16">+</operator> <literal type="number" pos:start="79:18" pos:end="79:18">4</literal> <operator pos:start="79:20" pos:end="79:20">&lt;</operator> <name pos:start="79:22" pos:end="79:28">buf_end</name></expr>)</condition> <block pos:start="79:31" pos:end="159:5">{<block_content pos:start="81:9" pos:end="157:62">

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:16">entry_id</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <operator pos:start="81:20" pos:end="81:20">*</operator><name pos:start="81:21" pos:end="81:23">buf</name><operator pos:start="81:24" pos:end="81:25">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:13">depth</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <operator pos:start="85:17" pos:end="85:17">(</operator><operator pos:start="85:18" pos:end="85:18">*</operator><name pos:start="85:19" pos:end="85:21">buf</name><operator pos:start="85:22" pos:end="85:22">)</operator> <operator pos:start="85:24" pos:end="85:24">&amp;</operator> <literal type="number" pos:start="85:26" pos:end="85:29">0xe0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:23">(<expr pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:17">depth</name> <operator pos:start="89:19" pos:end="89:20">==</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>)</condition> <block pos:start="89:25" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:19">

            <expr_stmt pos:start="91:13" pos:end="91:76"><expr pos:start="91:13" pos:end="91:75"><call pos:start="91:13" pos:end="91:75"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:75">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">avctx</name></expr></argument>, <argument pos:start="91:27" pos:end="91:38"><expr pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:41" pos:end="91:68"><expr pos:start="91:41" pos:end="91:68"><literal type="string" pos:start="91:41" pos:end="91:68">"Invalid clut depth 0x%x!\n"</literal></expr></argument>, <argument pos:start="91:71" pos:end="91:74"><expr pos:start="91:71" pos:end="91:74"><operator pos:start="91:71" pos:end="91:71">*</operator><name pos:start="91:72" pos:end="91:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:18">full_range</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <operator pos:start="99:22" pos:end="99:22">(</operator><operator pos:start="99:23" pos:end="99:23">*</operator><name pos:start="99:24" pos:end="99:26">buf</name><operator pos:start="99:27" pos:end="99:28">++</operator><operator pos:start="99:29" pos:end="99:29">)</operator> <operator pos:start="99:31" pos:end="99:31">&amp;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="127:9"><if pos:start="103:9" pos:end="113:9">if <condition pos:start="103:12" pos:end="103:23">(<expr pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:22">full_range</name></expr>)</condition> <block pos:start="103:25" pos:end="113:9">{<block_content pos:start="105:13" pos:end="111:27">

            <expr_stmt pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:13">y</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <operator pos:start="105:17" pos:end="105:17">*</operator><name pos:start="105:18" pos:end="105:20">buf</name><operator pos:start="105:21" pos:end="105:22">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:24"><expr pos:start="107:13" pos:end="107:23"><name pos:start="107:13" pos:end="107:14">cr</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <operator pos:start="107:18" pos:end="107:18">*</operator><name pos:start="107:19" pos:end="107:21">buf</name><operator pos:start="107:22" pos:end="107:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:24"><expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:14">cb</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <operator pos:start="109:18" pos:end="109:18">*</operator><name pos:start="109:19" pos:end="109:21">buf</name><operator pos:start="109:22" pos:end="109:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:27"><expr pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:17">alpha</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <operator pos:start="111:21" pos:end="111:21">*</operator><name pos:start="111:22" pos:end="111:24">buf</name><operator pos:start="111:25" pos:end="111:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="113:11" pos:end="127:9">else <block pos:start="113:16" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:21">

            <expr_stmt pos:start="115:13" pos:end="115:30"><expr pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:13">y</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <name pos:start="115:17" pos:end="115:22"><name pos:start="115:17" pos:end="115:19">buf</name><index pos:start="115:20" pos:end="115:22">[<expr pos:start="115:21" pos:end="115:21"><literal type="number" pos:start="115:21" pos:end="115:21">0</literal></expr>]</index></name> <operator pos:start="115:24" pos:end="115:24">&amp;</operator> <literal type="number" pos:start="115:26" pos:end="115:29">0xfc</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:66"><expr pos:start="117:13" pos:end="117:65"><name pos:start="117:13" pos:end="117:14">cr</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <operator pos:start="117:18" pos:end="117:18">(</operator><operator pos:start="117:19" pos:end="117:19">(</operator><operator pos:start="117:20" pos:end="117:20">(</operator><name pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:23">buf</name><index pos:start="117:24" pos:end="117:26">[<expr pos:start="117:25" pos:end="117:25"><literal type="number" pos:start="117:25" pos:end="117:25">0</literal></expr>]</index></name> <operator pos:start="117:28" pos:end="117:28">&amp;</operator> <literal type="number" pos:start="117:30" pos:end="117:30">3</literal><operator pos:start="117:31" pos:end="117:31">)</operator> <operator pos:start="117:33" pos:end="117:34">&lt;&lt;</operator> <literal type="number" pos:start="117:36" pos:end="117:36">2</literal><operator pos:start="117:37" pos:end="117:37">)</operator> <operator pos:start="117:39" pos:end="117:39">|</operator> <operator pos:start="117:41" pos:end="117:41">(</operator><operator pos:start="117:42" pos:end="117:42">(</operator><name pos:start="117:43" pos:end="117:48"><name pos:start="117:43" pos:end="117:45">buf</name><index pos:start="117:46" pos:end="117:48">[<expr pos:start="117:47" pos:end="117:47"><literal type="number" pos:start="117:47" pos:end="117:47">1</literal></expr>]</index></name> <operator pos:start="117:50" pos:end="117:51">&gt;&gt;</operator> <literal type="number" pos:start="117:53" pos:end="117:53">6</literal><operator pos:start="117:54" pos:end="117:54">)</operator> <operator pos:start="117:56" pos:end="117:56">&amp;</operator> <literal type="number" pos:start="117:58" pos:end="117:58">3</literal><operator pos:start="117:59" pos:end="117:59">)</operator><operator pos:start="117:60" pos:end="117:60">)</operator> <operator pos:start="117:62" pos:end="117:63">&lt;&lt;</operator> <literal type="number" pos:start="117:65" pos:end="117:65">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:14">cb</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <operator pos:start="119:18" pos:end="119:18">(</operator><name pos:start="119:19" pos:end="119:24"><name pos:start="119:19" pos:end="119:21">buf</name><index pos:start="119:22" pos:end="119:24">[<expr pos:start="119:23" pos:end="119:23"><literal type="number" pos:start="119:23" pos:end="119:23">1</literal></expr>]</index></name> <operator pos:start="119:26" pos:end="119:27">&lt;&lt;</operator> <literal type="number" pos:start="119:29" pos:end="119:29">2</literal><operator pos:start="119:30" pos:end="119:30">)</operator> <operator pos:start="119:32" pos:end="119:32">&amp;</operator> <literal type="number" pos:start="119:34" pos:end="119:37">0xf0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:41"><expr pos:start="121:13" pos:end="121:40"><name pos:start="121:13" pos:end="121:17">alpha</name> <operator pos:start="121:19" pos:end="121:19">=</operator> <operator pos:start="121:21" pos:end="121:21">(</operator><name pos:start="121:22" pos:end="121:27"><name pos:start="121:22" pos:end="121:24">buf</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>]</index></name> <operator pos:start="121:29" pos:end="121:30">&lt;&lt;</operator> <literal type="number" pos:start="121:32" pos:end="121:32">6</literal><operator pos:start="121:33" pos:end="121:33">)</operator> <operator pos:start="121:35" pos:end="121:35">&amp;</operator> <literal type="number" pos:start="121:37" pos:end="121:40">0xc0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:21"><expr pos:start="125:13" pos:end="125:20"><name pos:start="125:13" pos:end="125:15">buf</name> <operator pos:start="125:17" pos:end="125:18">+=</operator> <literal type="number" pos:start="125:20" pos:end="125:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="131:9" pos:end="133:25"><if pos:start="131:9" pos:end="133:25">if <condition pos:start="131:12" pos:end="131:19">(<expr pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:13">y</name> <operator pos:start="131:15" pos:end="131:16">==</operator> <literal type="number" pos:start="131:18" pos:end="131:18">0</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:25"><block_content pos:start="133:13" pos:end="133:25">

            <expr_stmt pos:start="133:13" pos:end="133:25"><expr pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:17">alpha</name> <operator pos:start="133:19" pos:end="133:19">=</operator> <literal type="number" pos:start="133:21" pos:end="133:24">0xff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:33"><expr pos:start="137:9" pos:end="137:32"><call pos:start="137:9" pos:end="137:32"><name pos:start="137:9" pos:end="137:24">YUV_TO_RGB1_CCIR</name><argument_list pos:start="137:25" pos:end="137:32">(<argument pos:start="137:26" pos:end="137:27"><expr pos:start="137:26" pos:end="137:27"><name pos:start="137:26" pos:end="137:27">cb</name></expr></argument>, <argument pos:start="137:30" pos:end="137:31"><expr pos:start="137:30" pos:end="137:31"><name pos:start="137:30" pos:end="137:31">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:37"><expr pos:start="139:9" pos:end="139:36"><call pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:24">YUV_TO_RGB2_CCIR</name><argument_list pos:start="139:25" pos:end="139:36">(<argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">r</name></expr></argument>, <argument pos:start="139:29" pos:end="139:29"><expr pos:start="139:29" pos:end="139:29"><name pos:start="139:29" pos:end="139:29">g</name></expr></argument>, <argument pos:start="139:32" pos:end="139:32"><expr pos:start="139:32" pos:end="139:32"><name pos:start="139:32" pos:end="139:32">b</name></expr></argument>, <argument pos:start="139:35" pos:end="139:35"><expr pos:start="139:35" pos:end="139:35"><name pos:start="139:35" pos:end="139:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:79"><expr pos:start="143:9" pos:end="143:78"><call pos:start="143:9" pos:end="143:78"><name pos:start="143:9" pos:end="143:15">av_dlog</name><argument_list pos:start="143:16" pos:end="143:78">(<argument pos:start="143:17" pos:end="143:21"><expr pos:start="143:17" pos:end="143:21"><name pos:start="143:17" pos:end="143:21">avctx</name></expr></argument>, <argument pos:start="143:24" pos:end="143:51"><expr pos:start="143:24" pos:end="143:51"><literal type="string" pos:start="143:24" pos:end="143:51">"clut %d := (%d,%d,%d,%d)\n"</literal></expr></argument>, <argument pos:start="143:54" pos:end="143:61"><expr pos:start="143:54" pos:end="143:61"><name pos:start="143:54" pos:end="143:61">entry_id</name></expr></argument>, <argument pos:start="143:64" pos:end="143:64"><expr pos:start="143:64" pos:end="143:64"><name pos:start="143:64" pos:end="143:64">r</name></expr></argument>, <argument pos:start="143:67" pos:end="143:67"><expr pos:start="143:67" pos:end="143:67"><name pos:start="143:67" pos:end="143:67">g</name></expr></argument>, <argument pos:start="143:70" pos:end="143:70"><expr pos:start="143:70" pos:end="143:70"><name pos:start="143:70" pos:end="143:70">b</name></expr></argument>, <argument pos:start="143:73" pos:end="143:77"><expr pos:start="143:73" pos:end="143:77"><name pos:start="143:73" pos:end="143:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="147:9" pos:end="149:60"><if pos:start="147:9" pos:end="149:60">if <condition pos:start="147:12" pos:end="147:25">(<expr pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:17">depth</name> <operator pos:start="147:19" pos:end="147:19">&amp;</operator> <literal type="number" pos:start="147:21" pos:end="147:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:60"><block_content pos:start="149:13" pos:end="149:60">

            <expr_stmt pos:start="149:13" pos:end="149:60"><expr pos:start="149:13" pos:end="149:59"><name pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:16">clut</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:23">clut4</name><index pos:start="149:24" pos:end="149:33">[<expr pos:start="149:25" pos:end="149:32"><name pos:start="149:25" pos:end="149:32">entry_id</name></expr>]</index></name> <operator pos:start="149:35" pos:end="149:35">=</operator> <call pos:start="149:37" pos:end="149:59"><name pos:start="149:37" pos:end="149:40">RGBA</name><argument_list pos:start="149:41" pos:end="149:59">(<argument pos:start="149:42" pos:end="149:42"><expr pos:start="149:42" pos:end="149:42"><name pos:start="149:42" pos:end="149:42">r</name></expr></argument>,<argument pos:start="149:44" pos:end="149:44"><expr pos:start="149:44" pos:end="149:44"><name pos:start="149:44" pos:end="149:44">g</name></expr></argument>,<argument pos:start="149:46" pos:end="149:46"><expr pos:start="149:46" pos:end="149:46"><name pos:start="149:46" pos:end="149:46">b</name></expr></argument>,<argument pos:start="149:48" pos:end="149:58"><expr pos:start="149:48" pos:end="149:58"><literal type="number" pos:start="149:48" pos:end="149:52">255</literal> <operator pos:start="149:52" pos:end="149:52">-</operator> <name pos:start="149:54" pos:end="149:58">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="151:9" pos:end="153:61"><if pos:start="151:9" pos:end="153:61">if <condition pos:start="151:12" pos:end="151:25">(<expr pos:start="151:13" pos:end="151:24"><name pos:start="151:13" pos:end="151:17">depth</name> <operator pos:start="151:19" pos:end="151:19">&amp;</operator> <literal type="number" pos:start="151:21" pos:end="151:24">0x40</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:61"><block_content pos:start="153:13" pos:end="153:61">

            <expr_stmt pos:start="153:13" pos:end="153:61"><expr pos:start="153:13" pos:end="153:60"><name pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:16">clut</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:24">clut16</name><index pos:start="153:25" pos:end="153:34">[<expr pos:start="153:26" pos:end="153:33"><name pos:start="153:26" pos:end="153:33">entry_id</name></expr>]</index></name> <operator pos:start="153:36" pos:end="153:36">=</operator> <call pos:start="153:38" pos:end="153:60"><name pos:start="153:38" pos:end="153:41">RGBA</name><argument_list pos:start="153:42" pos:end="153:60">(<argument pos:start="153:43" pos:end="153:43"><expr pos:start="153:43" pos:end="153:43"><name pos:start="153:43" pos:end="153:43">r</name></expr></argument>,<argument pos:start="153:45" pos:end="153:45"><expr pos:start="153:45" pos:end="153:45"><name pos:start="153:45" pos:end="153:45">g</name></expr></argument>,<argument pos:start="153:47" pos:end="153:47"><expr pos:start="153:47" pos:end="153:47"><name pos:start="153:47" pos:end="153:47">b</name></expr></argument>,<argument pos:start="153:49" pos:end="153:59"><expr pos:start="153:49" pos:end="153:59"><literal type="number" pos:start="153:49" pos:end="153:53">255</literal> <operator pos:start="153:53" pos:end="153:53">-</operator> <name pos:start="153:55" pos:end="153:59">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="155:9" pos:end="157:62"><if pos:start="155:9" pos:end="157:62">if <condition pos:start="155:12" pos:end="155:25">(<expr pos:start="155:13" pos:end="155:24"><name pos:start="155:13" pos:end="155:17">depth</name> <operator pos:start="155:19" pos:end="155:19">&amp;</operator> <literal type="number" pos:start="155:21" pos:end="155:24">0x20</literal></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:62"><block_content pos:start="157:13" pos:end="157:62">

            <expr_stmt pos:start="157:13" pos:end="157:62"><expr pos:start="157:13" pos:end="157:61"><name pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:16">clut</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:25">clut256</name><index pos:start="157:26" pos:end="157:35">[<expr pos:start="157:27" pos:end="157:34"><name pos:start="157:27" pos:end="157:34">entry_id</name></expr>]</index></name> <operator pos:start="157:37" pos:end="157:37">=</operator> <call pos:start="157:39" pos:end="157:61"><name pos:start="157:39" pos:end="157:42">RGBA</name><argument_list pos:start="157:43" pos:end="157:61">(<argument pos:start="157:44" pos:end="157:44"><expr pos:start="157:44" pos:end="157:44"><name pos:start="157:44" pos:end="157:44">r</name></expr></argument>,<argument pos:start="157:46" pos:end="157:46"><expr pos:start="157:46" pos:end="157:46"><name pos:start="157:46" pos:end="157:46">g</name></expr></argument>,<argument pos:start="157:48" pos:end="157:48"><expr pos:start="157:48" pos:end="157:48"><name pos:start="157:48" pos:end="157:48">b</name></expr></argument>,<argument pos:start="157:50" pos:end="157:60"><expr pos:start="157:50" pos:end="157:60"><literal type="number" pos:start="157:50" pos:end="157:54">255</literal> <operator pos:start="157:54" pos:end="157:54">-</operator> <name pos:start="157:56" pos:end="157:60">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
