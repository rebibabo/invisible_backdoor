<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11579.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">double</name></type> <name pos:start="1:15" pos:end="1:23">eval_expr</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:33"><name pos:start="1:25" pos:end="1:30">Parser</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">p</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:41">AVExpr</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">e</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="229:1">{<block_content pos:start="5:5" pos:end="227:15">

    <switch pos:start="5:5" pos:end="225:5">switch <condition pos:start="5:12" pos:end="5:20">(<expr pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:19"><name pos:start="5:13" pos:end="5:13">e</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:19">type</name></name></expr>)</condition> <block pos:start="5:22" pos:end="225:5">{<block_content pos:start="7:9" pos:end="223:9">

        <case pos:start="7:9" pos:end="7:21">case <expr pos:start="7:14" pos:end="7:20"><name pos:start="7:14" pos:end="7:20">e_value</name></expr>:</case>  <return pos:start="7:24" pos:end="7:39">return <expr pos:start="7:31" pos:end="7:38"><name pos:start="7:31" pos:end="7:38"><name pos:start="7:31" pos:end="7:31">e</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:38">value</name></name></expr>;</return>

        <case pos:start="9:9" pos:end="9:21">case <expr pos:start="9:14" pos:end="9:20"><name pos:start="9:14" pos:end="9:20">e_const</name></expr>:</case>  <return pos:start="9:24" pos:end="9:75">return <expr pos:start="9:31" pos:end="9:74"><name pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:31">e</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:38">value</name></name> <operator pos:start="9:40" pos:end="9:40">*</operator> <name pos:start="9:42" pos:end="9:74"><name pos:start="9:42" pos:end="9:42">p</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:56">const_values</name><index pos:start="9:57" pos:end="9:74">[<expr pos:start="9:58" pos:end="9:73"><name pos:start="9:58" pos:end="9:73"><name pos:start="9:58" pos:end="9:58">e</name><operator pos:start="9:59" pos:end="9:60">-&gt;</operator><name pos:start="9:61" pos:end="9:61">a</name><operator pos:start="9:62" pos:end="9:62">.</operator><name pos:start="9:63" pos:end="9:73">const_index</name></name></expr>]</index></name></expr>;</return>

        <case pos:start="11:9" pos:end="11:21">case <expr pos:start="11:14" pos:end="11:20"><name pos:start="11:14" pos:end="11:20">e_func0</name></expr>:</case>  <return pos:start="11:24" pos:end="11:79">return <expr pos:start="11:31" pos:end="11:78"><name pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:31">e</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:38">value</name></name> <operator pos:start="11:40" pos:end="11:40">*</operator> <call pos:start="11:42" pos:end="11:78"><name pos:start="11:42" pos:end="11:51"><name pos:start="11:42" pos:end="11:42">e</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:45">a</name><operator pos:start="11:46" pos:end="11:46">.</operator><name pos:start="11:47" pos:end="11:51">func0</name></name><argument_list pos:start="11:52" pos:end="11:78">(<argument pos:start="11:53" pos:end="11:77"><expr pos:start="11:53" pos:end="11:77"><call pos:start="11:53" pos:end="11:77"><name pos:start="11:53" pos:end="11:61">eval_expr</name><argument_list pos:start="11:62" pos:end="11:77">(<argument pos:start="11:63" pos:end="11:63"><expr pos:start="11:63" pos:end="11:63"><name pos:start="11:63" pos:end="11:63">p</name></expr></argument>, <argument pos:start="11:66" pos:end="11:76"><expr pos:start="11:66" pos:end="11:76"><name pos:start="11:66" pos:end="11:76"><name pos:start="11:66" pos:end="11:66">e</name><operator pos:start="11:67" pos:end="11:68">-&gt;</operator><name pos:start="11:69" pos:end="11:73">param</name><index pos:start="11:74" pos:end="11:76">[<expr pos:start="11:75" pos:end="11:75"><literal type="number" pos:start="11:75" pos:end="11:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="13:9" pos:end="13:21">case <expr pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:20">e_func1</name></expr>:</case>  <return pos:start="13:24" pos:end="13:90">return <expr pos:start="13:31" pos:end="13:89"><name pos:start="13:31" pos:end="13:38"><name pos:start="13:31" pos:end="13:31">e</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:38">value</name></name> <operator pos:start="13:40" pos:end="13:40">*</operator> <call pos:start="13:42" pos:end="13:89"><name pos:start="13:42" pos:end="13:51"><name pos:start="13:42" pos:end="13:42">e</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:45">a</name><operator pos:start="13:46" pos:end="13:46">.</operator><name pos:start="13:47" pos:end="13:51">func1</name></name><argument_list pos:start="13:52" pos:end="13:89">(<argument pos:start="13:53" pos:end="13:61"><expr pos:start="13:53" pos:end="13:61"><name pos:start="13:53" pos:end="13:61"><name pos:start="13:53" pos:end="13:53">p</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:61">opaque</name></name></expr></argument>, <argument pos:start="13:64" pos:end="13:88"><expr pos:start="13:64" pos:end="13:88"><call pos:start="13:64" pos:end="13:88"><name pos:start="13:64" pos:end="13:72">eval_expr</name><argument_list pos:start="13:73" pos:end="13:88">(<argument pos:start="13:74" pos:end="13:74"><expr pos:start="13:74" pos:end="13:74"><name pos:start="13:74" pos:end="13:74">p</name></expr></argument>, <argument pos:start="13:77" pos:end="13:87"><expr pos:start="13:77" pos:end="13:87"><name pos:start="13:77" pos:end="13:87"><name pos:start="13:77" pos:end="13:77">e</name><operator pos:start="13:78" pos:end="13:79">-&gt;</operator><name pos:start="13:80" pos:end="13:84">param</name><index pos:start="13:85" pos:end="13:87">[<expr pos:start="13:86" pos:end="13:86"><literal type="number" pos:start="13:86" pos:end="13:86">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="15:9" pos:end="15:21">case <expr pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:20">e_func2</name></expr>:</case>  <return pos:start="15:24" pos:end="15:117">return <expr pos:start="15:31" pos:end="15:116"><name pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:31">e</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:38">value</name></name> <operator pos:start="15:40" pos:end="15:40">*</operator> <call pos:start="15:42" pos:end="15:116"><name pos:start="15:42" pos:end="15:51"><name pos:start="15:42" pos:end="15:42">e</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:45">a</name><operator pos:start="15:46" pos:end="15:46">.</operator><name pos:start="15:47" pos:end="15:51">func2</name></name><argument_list pos:start="15:52" pos:end="15:116">(<argument pos:start="15:53" pos:end="15:61"><expr pos:start="15:53" pos:end="15:61"><name pos:start="15:53" pos:end="15:61"><name pos:start="15:53" pos:end="15:53">p</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:61">opaque</name></name></expr></argument>, <argument pos:start="15:64" pos:end="15:88"><expr pos:start="15:64" pos:end="15:88"><call pos:start="15:64" pos:end="15:88"><name pos:start="15:64" pos:end="15:72">eval_expr</name><argument_list pos:start="15:73" pos:end="15:88">(<argument pos:start="15:74" pos:end="15:74"><expr pos:start="15:74" pos:end="15:74"><name pos:start="15:74" pos:end="15:74">p</name></expr></argument>, <argument pos:start="15:77" pos:end="15:87"><expr pos:start="15:77" pos:end="15:87"><name pos:start="15:77" pos:end="15:87"><name pos:start="15:77" pos:end="15:77">e</name><operator pos:start="15:78" pos:end="15:79">-&gt;</operator><name pos:start="15:80" pos:end="15:84">param</name><index pos:start="15:85" pos:end="15:87">[<expr pos:start="15:86" pos:end="15:86"><literal type="number" pos:start="15:86" pos:end="15:86">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:91" pos:end="15:115"><expr pos:start="15:91" pos:end="15:115"><call pos:start="15:91" pos:end="15:115"><name pos:start="15:91" pos:end="15:99">eval_expr</name><argument_list pos:start="15:100" pos:end="15:115">(<argument pos:start="15:101" pos:end="15:101"><expr pos:start="15:101" pos:end="15:101"><name pos:start="15:101" pos:end="15:101">p</name></expr></argument>, <argument pos:start="15:104" pos:end="15:114"><expr pos:start="15:104" pos:end="15:114"><name pos:start="15:104" pos:end="15:114"><name pos:start="15:104" pos:end="15:104">e</name><operator pos:start="15:105" pos:end="15:106">-&gt;</operator><name pos:start="15:107" pos:end="15:111">param</name><index pos:start="15:112" pos:end="15:114">[<expr pos:start="15:113" pos:end="15:113"><literal type="number" pos:start="15:113" pos:end="15:113">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="17:9" pos:end="17:22">case <expr pos:start="17:14" pos:end="17:21"><name pos:start="17:14" pos:end="17:21">e_squish</name></expr>:</case> <return pos:start="17:24" pos:end="17:69">return <expr pos:start="17:31" pos:end="17:68"><literal type="number" pos:start="17:31" pos:end="17:31">1</literal><operator pos:start="17:32" pos:end="17:32">/</operator><operator pos:start="17:33" pos:end="17:33">(</operator><literal type="number" pos:start="17:34" pos:end="17:35">1</literal><operator pos:start="17:35" pos:end="17:35">+</operator><call pos:start="17:36" pos:end="17:67"><name pos:start="17:36" pos:end="17:38">exp</name><argument_list pos:start="17:39" pos:end="17:67">(<argument pos:start="17:40" pos:end="17:66"><expr pos:start="17:40" pos:end="17:66"><literal type="number" pos:start="17:40" pos:end="17:40">4</literal><operator pos:start="17:41" pos:end="17:41">*</operator><call pos:start="17:42" pos:end="17:66"><name pos:start="17:42" pos:end="17:50">eval_expr</name><argument_list pos:start="17:51" pos:end="17:66">(<argument pos:start="17:52" pos:end="17:52"><expr pos:start="17:52" pos:end="17:52"><name pos:start="17:52" pos:end="17:52">p</name></expr></argument>, <argument pos:start="17:55" pos:end="17:65"><expr pos:start="17:55" pos:end="17:65"><name pos:start="17:55" pos:end="17:65"><name pos:start="17:55" pos:end="17:55">e</name><operator pos:start="17:56" pos:end="17:57">-&gt;</operator><name pos:start="17:58" pos:end="17:62">param</name><index pos:start="17:63" pos:end="17:65">[<expr pos:start="17:64" pos:end="17:64"><literal type="number" pos:start="17:64" pos:end="17:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="17:68" pos:end="17:68">)</operator></expr>;</return>

        <case pos:start="19:9" pos:end="19:21">case <expr pos:start="19:14" pos:end="19:20"><name pos:start="19:14" pos:end="19:20">e_gauss</name></expr>:</case> <block pos:start="19:23" pos:end="19:96">{<block_content pos:start="19:25" pos:end="19:94"> <decl_stmt pos:start="19:25" pos:end="19:61"><decl pos:start="19:25" pos:end="19:60"><type pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:30">double</name></type> <name pos:start="19:32" pos:end="19:32">d</name> <init pos:start="19:34" pos:end="19:60">= <expr pos:start="19:36" pos:end="19:60"><call pos:start="19:36" pos:end="19:60"><name pos:start="19:36" pos:end="19:44">eval_expr</name><argument_list pos:start="19:45" pos:end="19:60">(<argument pos:start="19:46" pos:end="19:46"><expr pos:start="19:46" pos:end="19:46"><name pos:start="19:46" pos:end="19:46">p</name></expr></argument>, <argument pos:start="19:49" pos:end="19:59"><expr pos:start="19:49" pos:end="19:59"><name pos:start="19:49" pos:end="19:59"><name pos:start="19:49" pos:end="19:49">e</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:56">param</name><index pos:start="19:57" pos:end="19:59">[<expr pos:start="19:58" pos:end="19:58"><literal type="number" pos:start="19:58" pos:end="19:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <return pos:start="19:63" pos:end="19:94">return <expr pos:start="19:70" pos:end="19:93"><call pos:start="19:70" pos:end="19:80"><name pos:start="19:70" pos:end="19:72">exp</name><argument_list pos:start="19:73" pos:end="19:80">(<argument pos:start="19:74" pos:end="19:79"><expr pos:start="19:74" pos:end="19:79"><operator pos:start="19:74" pos:end="19:74">-</operator><name pos:start="19:75" pos:end="19:75">d</name><operator pos:start="19:76" pos:end="19:76">*</operator><name pos:start="19:77" pos:end="19:77">d</name><operator pos:start="19:78" pos:end="19:78">/</operator><literal type="number" pos:start="19:79" pos:end="19:79">2</literal></expr></argument>)</argument_list></call><operator pos:start="19:81" pos:end="19:81">/</operator><call pos:start="19:82" pos:end="19:93"><name pos:start="19:82" pos:end="19:85">sqrt</name><argument_list pos:start="19:86" pos:end="19:93">(<argument pos:start="19:87" pos:end="19:92"><expr pos:start="19:87" pos:end="19:92"><literal type="number" pos:start="19:87" pos:end="19:87">2</literal><operator pos:start="19:88" pos:end="19:88">*</operator><name pos:start="19:89" pos:end="19:92">M_PI</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block>

        <case pos:start="21:9" pos:end="21:18">case <expr pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:17">e_ld</name></expr>:</case>     <return pos:start="21:24" pos:end="21:95">return <expr pos:start="21:31" pos:end="21:94"><name pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:31">e</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:38">value</name></name> <operator pos:start="21:40" pos:end="21:40">*</operator> <name pos:start="21:42" pos:end="21:94"><name pos:start="21:42" pos:end="21:42">p</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:47">var</name><index pos:start="21:48" pos:end="21:94">[<expr pos:start="21:49" pos:end="21:93"><call pos:start="21:49" pos:end="21:93"><name pos:start="21:49" pos:end="21:55">av_clip</name><argument_list pos:start="21:56" pos:end="21:93">(<argument pos:start="21:57" pos:end="21:81"><expr pos:start="21:57" pos:end="21:81"><call pos:start="21:57" pos:end="21:81"><name pos:start="21:57" pos:end="21:65">eval_expr</name><argument_list pos:start="21:66" pos:end="21:81">(<argument pos:start="21:67" pos:end="21:67"><expr pos:start="21:67" pos:end="21:67"><name pos:start="21:67" pos:end="21:67">p</name></expr></argument>, <argument pos:start="21:70" pos:end="21:80"><expr pos:start="21:70" pos:end="21:80"><name pos:start="21:70" pos:end="21:80"><name pos:start="21:70" pos:end="21:70">e</name><operator pos:start="21:71" pos:end="21:72">-&gt;</operator><name pos:start="21:73" pos:end="21:77">param</name><index pos:start="21:78" pos:end="21:80">[<expr pos:start="21:79" pos:end="21:79"><literal type="number" pos:start="21:79" pos:end="21:79">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:84" pos:end="21:84"><expr pos:start="21:84" pos:end="21:84"><literal type="number" pos:start="21:84" pos:end="21:84">0</literal></expr></argument>, <argument pos:start="21:87" pos:end="21:92"><expr pos:start="21:87" pos:end="21:92"><name pos:start="21:87" pos:end="21:90">VARS</name><operator pos:start="21:91" pos:end="21:91">-</operator><literal type="number" pos:start="21:92" pos:end="21:92">1</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</return>

        <case pos:start="23:9" pos:end="23:21">case <expr pos:start="23:14" pos:end="23:20"><name pos:start="23:14" pos:end="23:20">e_isnan</name></expr>:</case>  <return pos:start="23:24" pos:end="23:76">return <expr pos:start="23:31" pos:end="23:75"><name pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:31">e</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:38">value</name></name> <operator pos:start="23:40" pos:end="23:40">*</operator> <operator pos:start="23:42" pos:end="23:42">!</operator><operator pos:start="23:43" pos:end="23:43">!</operator><call pos:start="23:44" pos:end="23:75"><name pos:start="23:44" pos:end="23:48">isnan</name><argument_list pos:start="23:49" pos:end="23:75">(<argument pos:start="23:50" pos:end="23:74"><expr pos:start="23:50" pos:end="23:74"><call pos:start="23:50" pos:end="23:74"><name pos:start="23:50" pos:end="23:58">eval_expr</name><argument_list pos:start="23:59" pos:end="23:74">(<argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><name pos:start="23:60" pos:end="23:60">p</name></expr></argument>, <argument pos:start="23:63" pos:end="23:73"><expr pos:start="23:63" pos:end="23:73"><name pos:start="23:63" pos:end="23:73"><name pos:start="23:63" pos:end="23:63">e</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:70">param</name><index pos:start="23:71" pos:end="23:73">[<expr pos:start="23:72" pos:end="23:72"><literal type="number" pos:start="23:72" pos:end="23:72">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="25:9" pos:end="25:21">case <expr pos:start="25:14" pos:end="25:20"><name pos:start="25:14" pos:end="25:20">e_floor</name></expr>:</case>  <return pos:start="25:24" pos:end="25:74">return <expr pos:start="25:31" pos:end="25:73"><name pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:31">e</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:38">value</name></name> <operator pos:start="25:40" pos:end="25:40">*</operator> <call pos:start="25:42" pos:end="25:73"><name pos:start="25:42" pos:end="25:46">floor</name><argument_list pos:start="25:47" pos:end="25:73">(<argument pos:start="25:48" pos:end="25:72"><expr pos:start="25:48" pos:end="25:72"><call pos:start="25:48" pos:end="25:72"><name pos:start="25:48" pos:end="25:56">eval_expr</name><argument_list pos:start="25:57" pos:end="25:72">(<argument pos:start="25:58" pos:end="25:58"><expr pos:start="25:58" pos:end="25:58"><name pos:start="25:58" pos:end="25:58">p</name></expr></argument>, <argument pos:start="25:61" pos:end="25:71"><expr pos:start="25:61" pos:end="25:71"><name pos:start="25:61" pos:end="25:71"><name pos:start="25:61" pos:end="25:61">e</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:68">param</name><index pos:start="25:69" pos:end="25:71">[<expr pos:start="25:70" pos:end="25:70"><literal type="number" pos:start="25:70" pos:end="25:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="27:9" pos:end="27:21">case <expr pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:19">e_ceil</name></expr> :</case>  <return pos:start="27:24" pos:end="27:74">return <expr pos:start="27:31" pos:end="27:73"><name pos:start="27:31" pos:end="27:38"><name pos:start="27:31" pos:end="27:31">e</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:38">value</name></name> <operator pos:start="27:40" pos:end="27:40">*</operator> <call pos:start="27:42" pos:end="27:73"><name pos:start="27:42" pos:end="27:45">ceil</name> <argument_list pos:start="27:47" pos:end="27:73">(<argument pos:start="27:48" pos:end="27:72"><expr pos:start="27:48" pos:end="27:72"><call pos:start="27:48" pos:end="27:72"><name pos:start="27:48" pos:end="27:56">eval_expr</name><argument_list pos:start="27:57" pos:end="27:72">(<argument pos:start="27:58" pos:end="27:58"><expr pos:start="27:58" pos:end="27:58"><name pos:start="27:58" pos:end="27:58">p</name></expr></argument>, <argument pos:start="27:61" pos:end="27:71"><expr pos:start="27:61" pos:end="27:71"><name pos:start="27:61" pos:end="27:71"><name pos:start="27:61" pos:end="27:61">e</name><operator pos:start="27:62" pos:end="27:63">-&gt;</operator><name pos:start="27:64" pos:end="27:68">param</name><index pos:start="27:69" pos:end="27:71">[<expr pos:start="27:70" pos:end="27:70"><literal type="number" pos:start="27:70" pos:end="27:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="29:9" pos:end="29:21">case <expr pos:start="29:14" pos:end="29:20"><name pos:start="29:14" pos:end="29:20">e_trunc</name></expr>:</case>  <return pos:start="29:24" pos:end="29:74">return <expr pos:start="29:31" pos:end="29:73"><name pos:start="29:31" pos:end="29:38"><name pos:start="29:31" pos:end="29:31">e</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:38">value</name></name> <operator pos:start="29:40" pos:end="29:40">*</operator> <call pos:start="29:42" pos:end="29:73"><name pos:start="29:42" pos:end="29:46">trunc</name><argument_list pos:start="29:47" pos:end="29:73">(<argument pos:start="29:48" pos:end="29:72"><expr pos:start="29:48" pos:end="29:72"><call pos:start="29:48" pos:end="29:72"><name pos:start="29:48" pos:end="29:56">eval_expr</name><argument_list pos:start="29:57" pos:end="29:72">(<argument pos:start="29:58" pos:end="29:58"><expr pos:start="29:58" pos:end="29:58"><name pos:start="29:58" pos:end="29:58">p</name></expr></argument>, <argument pos:start="29:61" pos:end="29:71"><expr pos:start="29:61" pos:end="29:71"><name pos:start="29:61" pos:end="29:71"><name pos:start="29:61" pos:end="29:61">e</name><operator pos:start="29:62" pos:end="29:63">-&gt;</operator><name pos:start="29:64" pos:end="29:68">param</name><index pos:start="29:69" pos:end="29:71">[<expr pos:start="29:70" pos:end="29:70"><literal type="number" pos:start="29:70" pos:end="29:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="31:9" pos:end="31:20">case <expr pos:start="31:14" pos:end="31:19"><name pos:start="31:14" pos:end="31:19">e_sqrt</name></expr>:</case>   <return pos:start="31:24" pos:end="31:74">return <expr pos:start="31:31" pos:end="31:73"><name pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:31">e</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:38">value</name></name> <operator pos:start="31:40" pos:end="31:40">*</operator> <call pos:start="31:42" pos:end="31:73"><name pos:start="31:42" pos:end="31:45">sqrt</name> <argument_list pos:start="31:47" pos:end="31:73">(<argument pos:start="31:48" pos:end="31:72"><expr pos:start="31:48" pos:end="31:72"><call pos:start="31:48" pos:end="31:72"><name pos:start="31:48" pos:end="31:56">eval_expr</name><argument_list pos:start="31:57" pos:end="31:72">(<argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><name pos:start="31:58" pos:end="31:58">p</name></expr></argument>, <argument pos:start="31:61" pos:end="31:71"><expr pos:start="31:61" pos:end="31:71"><name pos:start="31:61" pos:end="31:71"><name pos:start="31:61" pos:end="31:61">e</name><operator pos:start="31:62" pos:end="31:63">-&gt;</operator><name pos:start="31:64" pos:end="31:68">param</name><index pos:start="31:69" pos:end="31:71">[<expr pos:start="31:70" pos:end="31:70"><literal type="number" pos:start="31:70" pos:end="31:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

        <case pos:start="33:9" pos:end="33:19">case <expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:18">e_not</name></expr>:</case>    <return pos:start="33:24" pos:end="33:74">return <expr pos:start="33:31" pos:end="33:73"><name pos:start="33:31" pos:end="33:38"><name pos:start="33:31" pos:end="33:31">e</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:38">value</name></name> <operator pos:start="33:40" pos:end="33:40">*</operator> <operator pos:start="33:42" pos:end="33:42">(</operator><call pos:start="33:43" pos:end="33:67"><name pos:start="33:43" pos:end="33:51">eval_expr</name><argument_list pos:start="33:52" pos:end="33:67">(<argument pos:start="33:53" pos:end="33:53"><expr pos:start="33:53" pos:end="33:53"><name pos:start="33:53" pos:end="33:53">p</name></expr></argument>, <argument pos:start="33:56" pos:end="33:66"><expr pos:start="33:56" pos:end="33:66"><name pos:start="33:56" pos:end="33:66"><name pos:start="33:56" pos:end="33:56">e</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:63">param</name><index pos:start="33:64" pos:end="33:66">[<expr pos:start="33:65" pos:end="33:65"><literal type="number" pos:start="33:65" pos:end="33:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="33:69" pos:end="33:70">==</operator> <literal type="number" pos:start="33:72" pos:end="33:72">0</literal><operator pos:start="33:73" pos:end="33:73">)</operator></expr>;</return>

        <case pos:start="35:9" pos:end="35:18">case <expr pos:start="35:14" pos:end="35:17"><name pos:start="35:14" pos:end="35:17">e_if</name></expr>:</case>     <return pos:start="35:24" pos:end="35:102">return <expr pos:start="35:31" pos:end="35:101"><name pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:31">e</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:38">value</name></name> <operator pos:start="35:40" pos:end="35:40">*</operator> <operator pos:start="35:42" pos:end="35:42">(</operator> <ternary pos:start="35:44" pos:end="35:100"><condition pos:start="35:44" pos:end="35:70"><expr pos:start="35:44" pos:end="35:68"><call pos:start="35:44" pos:end="35:68"><name pos:start="35:44" pos:end="35:52">eval_expr</name><argument_list pos:start="35:53" pos:end="35:68">(<argument pos:start="35:54" pos:end="35:54"><expr pos:start="35:54" pos:end="35:54"><name pos:start="35:54" pos:end="35:54">p</name></expr></argument>, <argument pos:start="35:57" pos:end="35:67"><expr pos:start="35:57" pos:end="35:67"><name pos:start="35:57" pos:end="35:67"><name pos:start="35:57" pos:end="35:57">e</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:64">param</name><index pos:start="35:65" pos:end="35:67">[<expr pos:start="35:66" pos:end="35:66"><literal type="number" pos:start="35:66" pos:end="35:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="35:72" pos:end="35:96"> <expr pos:start="35:72" pos:end="35:96"><call pos:start="35:72" pos:end="35:96"><name pos:start="35:72" pos:end="35:80">eval_expr</name><argument_list pos:start="35:81" pos:end="35:96">(<argument pos:start="35:82" pos:end="35:82"><expr pos:start="35:82" pos:end="35:82"><name pos:start="35:82" pos:end="35:82">p</name></expr></argument>, <argument pos:start="35:85" pos:end="35:95"><expr pos:start="35:85" pos:end="35:95"><name pos:start="35:85" pos:end="35:95"><name pos:start="35:85" pos:end="35:85">e</name><operator pos:start="35:86" pos:end="35:87">-&gt;</operator><name pos:start="35:88" pos:end="35:92">param</name><index pos:start="35:93" pos:end="35:95">[<expr pos:start="35:94" pos:end="35:94"><literal type="number" pos:start="35:94" pos:end="35:94">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="35:98" pos:end="35:100">: <expr pos:start="35:100" pos:end="35:100"><literal type="number" pos:start="35:100" pos:end="35:100">0</literal></expr></else></ternary><operator pos:start="35:101" pos:end="35:101">)</operator></expr>;</return>

        <case pos:start="37:9" pos:end="37:21">case <expr pos:start="37:14" pos:end="37:20"><name pos:start="37:14" pos:end="37:20">e_ifnot</name></expr>:</case>  <return pos:start="37:24" pos:end="37:102">return <expr pos:start="37:31" pos:end="37:101"><name pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:31">e</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:38">value</name></name> <operator pos:start="37:40" pos:end="37:40">*</operator> <operator pos:start="37:42" pos:end="37:42">(</operator><ternary pos:start="37:43" pos:end="37:100"><condition pos:start="37:43" pos:end="37:70"><expr pos:start="37:43" pos:end="37:68"><operator pos:start="37:43" pos:end="37:43">!</operator><call pos:start="37:44" pos:end="37:68"><name pos:start="37:44" pos:end="37:52">eval_expr</name><argument_list pos:start="37:53" pos:end="37:68">(<argument pos:start="37:54" pos:end="37:54"><expr pos:start="37:54" pos:end="37:54"><name pos:start="37:54" pos:end="37:54">p</name></expr></argument>, <argument pos:start="37:57" pos:end="37:67"><expr pos:start="37:57" pos:end="37:67"><name pos:start="37:57" pos:end="37:67"><name pos:start="37:57" pos:end="37:57">e</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:64">param</name><index pos:start="37:65" pos:end="37:67">[<expr pos:start="37:66" pos:end="37:66"><literal type="number" pos:start="37:66" pos:end="37:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="37:72" pos:end="37:96"> <expr pos:start="37:72" pos:end="37:96"><call pos:start="37:72" pos:end="37:96"><name pos:start="37:72" pos:end="37:80">eval_expr</name><argument_list pos:start="37:81" pos:end="37:96">(<argument pos:start="37:82" pos:end="37:82"><expr pos:start="37:82" pos:end="37:82"><name pos:start="37:82" pos:end="37:82">p</name></expr></argument>, <argument pos:start="37:85" pos:end="37:95"><expr pos:start="37:85" pos:end="37:95"><name pos:start="37:85" pos:end="37:95"><name pos:start="37:85" pos:end="37:85">e</name><operator pos:start="37:86" pos:end="37:87">-&gt;</operator><name pos:start="37:88" pos:end="37:92">param</name><index pos:start="37:93" pos:end="37:95">[<expr pos:start="37:94" pos:end="37:94"><literal type="number" pos:start="37:94" pos:end="37:94">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="37:98" pos:end="37:100">: <expr pos:start="37:100" pos:end="37:100"><literal type="number" pos:start="37:100" pos:end="37:100">0</literal></expr></else></ternary><operator pos:start="37:101" pos:end="37:101">)</operator></expr>;</return>

        <case pos:start="39:9" pos:end="39:22">case <expr pos:start="39:14" pos:end="39:21"><name pos:start="39:14" pos:end="39:21">e_random</name></expr>:</case><block pos:start="39:23" pos:end="51:9">{<block_content pos:start="41:13" pos:end="49:53">

            <decl_stmt pos:start="41:13" pos:end="41:67"><decl pos:start="41:13" pos:end="41:66"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:19">idx</name><init pos:start="41:20" pos:end="41:66">= <expr pos:start="41:22" pos:end="41:66"><call pos:start="41:22" pos:end="41:66"><name pos:start="41:22" pos:end="41:28">av_clip</name><argument_list pos:start="41:29" pos:end="41:66">(<argument pos:start="41:30" pos:end="41:54"><expr pos:start="41:30" pos:end="41:54"><call pos:start="41:30" pos:end="41:54"><name pos:start="41:30" pos:end="41:38">eval_expr</name><argument_list pos:start="41:39" pos:end="41:54">(<argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">p</name></expr></argument>, <argument pos:start="41:43" pos:end="41:53"><expr pos:start="41:43" pos:end="41:53"><name pos:start="41:43" pos:end="41:53"><name pos:start="41:43" pos:end="41:43">e</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:50">param</name><index pos:start="41:51" pos:end="41:53">[<expr pos:start="41:52" pos:end="41:52"><literal type="number" pos:start="41:52" pos:end="41:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:57" pos:end="41:57"><expr pos:start="41:57" pos:end="41:57"><literal type="number" pos:start="41:57" pos:end="41:57">0</literal></expr></argument>, <argument pos:start="41:60" pos:end="41:65"><expr pos:start="41:60" pos:end="41:65"><name pos:start="41:60" pos:end="41:63">VARS</name><operator pos:start="41:64" pos:end="41:64">-</operator><literal type="number" pos:start="41:65" pos:end="41:65">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:61"><decl pos:start="43:13" pos:end="43:60"><type pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">uint64_t</name></type> <name pos:start="43:22" pos:end="43:22">r</name><init pos:start="43:23" pos:end="43:60">= <expr pos:start="43:25" pos:end="43:60"><ternary pos:start="43:25" pos:end="43:60"><condition pos:start="43:25" pos:end="43:44"><expr pos:start="43:25" pos:end="43:42"><call pos:start="43:25" pos:end="43:42"><name pos:start="43:25" pos:end="43:29">isnan</name><argument_list pos:start="43:30" pos:end="43:42">(<argument pos:start="43:31" pos:end="43:41"><expr pos:start="43:31" pos:end="43:41"><name pos:start="43:31" pos:end="43:41"><name pos:start="43:31" pos:end="43:31">p</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:36">var</name><index pos:start="43:37" pos:end="43:41">[<expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="43:46" pos:end="43:46"> <expr pos:start="43:46" pos:end="43:46"><literal type="number" pos:start="43:46" pos:end="43:46">0</literal></expr> </then><else pos:start="43:48" pos:end="43:60">: <expr pos:start="43:50" pos:end="43:60"><name pos:start="43:50" pos:end="43:60"><name pos:start="43:50" pos:end="43:50">p</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:55">var</name><index pos:start="43:56" pos:end="43:60">[<expr pos:start="43:57" pos:end="43:59"><name pos:start="43:57" pos:end="43:59">idx</name></expr>]</index></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:13">r</name><operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:16">r</name><operator pos:start="45:17" pos:end="45:17">*</operator><literal type="number" pos:start="45:18" pos:end="45:25">1664525</literal><operator pos:start="45:25" pos:end="45:25">+</operator><literal type="number" pos:start="45:26" pos:end="45:35">1013904223</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:13">p</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">var</name><index pos:start="47:19" pos:end="47:23">[<expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">idx</name></expr>]</index></name><operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:26">r</name></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:53">return <expr pos:start="49:20" pos:end="49:52"><name pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:20">e</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:27">value</name></name> <operator pos:start="49:29" pos:end="49:29">*</operator> <operator pos:start="49:31" pos:end="49:31">(</operator><name pos:start="49:32" pos:end="49:32">r</name> <operator pos:start="49:34" pos:end="49:34">*</operator> <operator pos:start="49:36" pos:end="49:36">(</operator><literal type="number" pos:start="49:37" pos:end="49:39">1.0</literal><operator pos:start="49:40" pos:end="49:40">/</operator><name pos:start="49:41" pos:end="49:50">UINT64_MAX</name><operator pos:start="49:51" pos:end="49:51">)</operator><operator pos:start="49:52" pos:end="49:52">)</operator></expr>;</return>

        </block_content>}</block>

        <case pos:start="53:9" pos:end="53:21">case <expr pos:start="53:14" pos:end="53:20"><name pos:start="53:14" pos:end="53:20">e_while</name></expr>:</case> <block pos:start="53:23" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:21">

            <decl_stmt pos:start="55:13" pos:end="55:27"><decl pos:start="55:13" pos:end="55:26"><type pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">double</name></type> <name pos:start="55:20" pos:end="55:20">d</name> <init pos:start="55:22" pos:end="55:26">= <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">NAN</name></expr></init></decl>;</decl_stmt>

            <while pos:start="57:13" pos:end="59:44">while <condition pos:start="57:19" pos:end="57:45">(<expr pos:start="57:20" pos:end="57:44"><call pos:start="57:20" pos:end="57:44"><name pos:start="57:20" pos:end="57:28">eval_expr</name><argument_list pos:start="57:29" pos:end="57:44">(<argument pos:start="57:30" pos:end="57:30"><expr pos:start="57:30" pos:end="57:30"><name pos:start="57:30" pos:end="57:30">p</name></expr></argument>, <argument pos:start="57:33" pos:end="57:43"><expr pos:start="57:33" pos:end="57:43"><name pos:start="57:33" pos:end="57:43"><name pos:start="57:33" pos:end="57:33">e</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:40">param</name><index pos:start="57:41" pos:end="57:43">[<expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:44"><block_content pos:start="59:17" pos:end="59:44">

                <expr_stmt pos:start="59:17" pos:end="59:44"><expr pos:start="59:17" pos:end="59:43"><name pos:start="59:17" pos:end="59:17">d</name><operator pos:start="59:18" pos:end="59:18">=</operator><call pos:start="59:19" pos:end="59:43"><name pos:start="59:19" pos:end="59:27">eval_expr</name><argument_list pos:start="59:28" pos:end="59:43">(<argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">p</name></expr></argument>, <argument pos:start="59:32" pos:end="59:42"><expr pos:start="59:32" pos:end="59:42"><name pos:start="59:32" pos:end="59:42"><name pos:start="59:32" pos:end="59:32">e</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:39">param</name><index pos:start="59:40" pos:end="59:42">[<expr pos:start="59:41" pos:end="59:41"><literal type="number" pos:start="59:41" pos:end="59:41">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">d</name></expr>;</return>

        </block_content>}</block>

        <case pos:start="65:9" pos:end="65:22">case <expr pos:start="65:14" pos:end="65:21"><name pos:start="65:14" pos:end="65:21">e_taylor</name></expr>:</case> <block pos:start="65:24" pos:end="99:9">{<block_content pos:start="67:13" pos:end="97:21">

            <decl_stmt pos:start="67:13" pos:end="67:35"><decl pos:start="67:13" pos:end="67:24"><type pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">double</name></type> <name pos:start="67:20" pos:end="67:20">t</name> <init pos:start="67:22" pos:end="67:24">= <expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr></init></decl>, <decl pos:start="67:27" pos:end="67:31"><type ref="prev" pos:start="67:13" pos:end="67:18"/><name pos:start="67:27" pos:end="67:27">d</name> <init pos:start="67:29" pos:end="67:31">= <expr pos:start="67:31" pos:end="67:31"><literal type="number" pos:start="67:31" pos:end="67:31">0</literal></expr></init></decl>, <decl pos:start="67:34" pos:end="67:34"><type ref="prev" pos:start="67:13" pos:end="67:18"/><name pos:start="67:34" pos:end="67:34">v</name></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:49"><decl pos:start="69:13" pos:end="69:48"><type pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:18">double</name></type> <name pos:start="69:20" pos:end="69:20">x</name> <init pos:start="69:22" pos:end="69:48">= <expr pos:start="69:24" pos:end="69:48"><call pos:start="69:24" pos:end="69:48"><name pos:start="69:24" pos:end="69:32">eval_expr</name><argument_list pos:start="69:33" pos:end="69:48">(<argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">p</name></expr></argument>, <argument pos:start="69:37" pos:end="69:47"><expr pos:start="69:37" pos:end="69:47"><name pos:start="69:37" pos:end="69:47"><name pos:start="69:37" pos:end="69:37">e</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:44">param</name><index pos:start="69:45" pos:end="69:47">[<expr pos:start="69:46" pos:end="69:46"><literal type="number" pos:start="69:46" pos:end="69:46">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:85"><decl pos:start="71:13" pos:end="71:84"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:18">id</name> <init pos:start="71:20" pos:end="71:84">= <expr pos:start="71:22" pos:end="71:84"><ternary pos:start="71:22" pos:end="71:84"><condition pos:start="71:22" pos:end="71:34"><expr pos:start="71:22" pos:end="71:32"><name pos:start="71:22" pos:end="71:32"><name pos:start="71:22" pos:end="71:22">e</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:29">param</name><index pos:start="71:30" pos:end="71:32">[<expr pos:start="71:31" pos:end="71:31"><literal type="number" pos:start="71:31" pos:end="71:31">2</literal></expr>]</index></name></expr> ?</condition><then pos:start="71:36" pos:end="71:80"> <expr pos:start="71:36" pos:end="71:80"><call pos:start="71:36" pos:end="71:80"><name pos:start="71:36" pos:end="71:42">av_clip</name><argument_list pos:start="71:43" pos:end="71:80">(<argument pos:start="71:44" pos:end="71:68"><expr pos:start="71:44" pos:end="71:68"><call pos:start="71:44" pos:end="71:68"><name pos:start="71:44" pos:end="71:52">eval_expr</name><argument_list pos:start="71:53" pos:end="71:68">(<argument pos:start="71:54" pos:end="71:54"><expr pos:start="71:54" pos:end="71:54"><name pos:start="71:54" pos:end="71:54">p</name></expr></argument>, <argument pos:start="71:57" pos:end="71:67"><expr pos:start="71:57" pos:end="71:67"><name pos:start="71:57" pos:end="71:67"><name pos:start="71:57" pos:end="71:57">e</name><operator pos:start="71:58" pos:end="71:59">-&gt;</operator><name pos:start="71:60" pos:end="71:64">param</name><index pos:start="71:65" pos:end="71:67">[<expr pos:start="71:66" pos:end="71:66"><literal type="number" pos:start="71:66" pos:end="71:66">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:71" pos:end="71:71"><expr pos:start="71:71" pos:end="71:71"><literal type="number" pos:start="71:71" pos:end="71:71">0</literal></expr></argument>, <argument pos:start="71:74" pos:end="71:79"><expr pos:start="71:74" pos:end="71:79"><name pos:start="71:74" pos:end="71:77">VARS</name><operator pos:start="71:78" pos:end="71:78">-</operator><literal type="number" pos:start="71:79" pos:end="71:79">1</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="71:82" pos:end="71:84">: <expr pos:start="71:84" pos:end="71:84"><literal type="number" pos:start="71:84" pos:end="71:84">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:18"><decl pos:start="73:13" pos:end="73:17"><type pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">int</name></type> <name pos:start="73:17" pos:end="73:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="75:13" pos:end="75:37"><decl pos:start="75:13" pos:end="75:36"><type pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:18">double</name></type> <name pos:start="75:20" pos:end="75:23">var0</name> <init pos:start="75:25" pos:end="75:36">= <expr pos:start="75:27" pos:end="75:36"><name pos:start="75:27" pos:end="75:36"><name pos:start="75:27" pos:end="75:27">p</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:32">var</name><index pos:start="75:33" pos:end="75:36">[<expr pos:start="75:34" pos:end="75:35"><name pos:start="75:34" pos:end="75:35">id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="77:13" pos:end="93:13">for<control pos:start="77:16" pos:end="77:33">(<init pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:17">i</name><operator pos:start="77:18" pos:end="77:18">=</operator><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</init> <condition pos:start="77:22" pos:end="77:28"><expr pos:start="77:22" pos:end="77:27"><name pos:start="77:22" pos:end="77:22">i</name><operator pos:start="77:23" pos:end="77:23">&lt;</operator><literal type="number" pos:start="77:24" pos:end="77:27">1000</literal></expr>;</condition> <incr pos:start="77:30" pos:end="77:32"><expr pos:start="77:30" pos:end="77:32"><name pos:start="77:30" pos:end="77:30">i</name><operator pos:start="77:31" pos:end="77:32">++</operator></expr></incr>)</control> <block pos:start="77:35" pos:end="93:13">{<block_content pos:start="79:17" pos:end="91:31">

                <decl_stmt pos:start="79:17" pos:end="79:30"><decl pos:start="79:17" pos:end="79:29"><type pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">double</name></type> <name pos:start="79:24" pos:end="79:25">ld</name> <init pos:start="79:27" pos:end="79:29">= <expr pos:start="79:29" pos:end="79:29"><name pos:start="79:29" pos:end="79:29">d</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:31"><expr pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:17">p</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:22">var</name><index pos:start="81:23" pos:end="81:26">[<expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">id</name></expr>]</index></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:30">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:46"><expr pos:start="83:17" pos:end="83:45"><name pos:start="83:17" pos:end="83:17">v</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <call pos:start="83:21" pos:end="83:45"><name pos:start="83:21" pos:end="83:29">eval_expr</name><argument_list pos:start="83:30" pos:end="83:45">(<argument pos:start="83:31" pos:end="83:31"><expr pos:start="83:31" pos:end="83:31"><name pos:start="83:31" pos:end="83:31">p</name></expr></argument>, <argument pos:start="83:34" pos:end="83:44"><expr pos:start="83:34" pos:end="83:44"><name pos:start="83:34" pos:end="83:44"><name pos:start="83:34" pos:end="83:34">e</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:41">param</name><index pos:start="83:42" pos:end="83:44">[<expr pos:start="83:43" pos:end="83:43"><literal type="number" pos:start="83:43" pos:end="83:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:25"><expr pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:17">d</name> <operator pos:start="85:19" pos:end="85:20">+=</operator> <name pos:start="85:22" pos:end="85:22">t</name><operator pos:start="85:23" pos:end="85:23">*</operator><name pos:start="85:24" pos:end="85:24">v</name></expr>;</expr_stmt>

                <if_stmt pos:start="87:17" pos:end="89:26"><if pos:start="87:17" pos:end="89:26">if<condition pos:start="87:19" pos:end="87:30">(<expr pos:start="87:20" pos:end="87:29"><name pos:start="87:20" pos:end="87:21">ld</name><operator pos:start="87:22" pos:end="87:23">==</operator><name pos:start="87:24" pos:end="87:24">d</name> <operator pos:start="87:26" pos:end="87:27">&amp;&amp;</operator> <name pos:start="87:29" pos:end="87:29">v</name></expr>)</condition><block type="pseudo" pos:start="89:21" pos:end="89:26"><block_content pos:start="89:21" pos:end="89:26">

                    <break pos:start="89:21" pos:end="89:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:31"><expr pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:17">t</name> <operator pos:start="91:19" pos:end="91:20">*=</operator> <name pos:start="91:22" pos:end="91:22">x</name> <operator pos:start="91:24" pos:end="91:24">/</operator> <operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:27">i</name><operator pos:start="91:28" pos:end="91:28">+</operator><literal type="number" pos:start="91:29" pos:end="91:29">1</literal><operator pos:start="91:30" pos:end="91:30">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:13">p</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:18">var</name><index pos:start="95:19" pos:end="95:22">[<expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">id</name></expr>]</index></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:29">var0</name></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:21">return <expr pos:start="97:20" pos:end="97:20"><name pos:start="97:20" pos:end="97:20">d</name></expr>;</return>

        </block_content>}</block>

        <case pos:start="101:9" pos:end="101:20">case <expr pos:start="101:14" pos:end="101:19"><name pos:start="101:14" pos:end="101:19">e_root</name></expr>:</case> <block pos:start="101:22" pos:end="183:9">{<block_content pos:start="103:13" pos:end="181:46">

            <decl_stmt pos:start="103:13" pos:end="103:18"><decl pos:start="103:13" pos:end="103:17"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:78"><decl pos:start="105:13" pos:end="105:27"><type pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:18">double</name></type> <name pos:start="105:20" pos:end="105:22">low</name> <init pos:start="105:24" pos:end="105:27">= <expr pos:start="105:26" pos:end="105:27"><operator pos:start="105:26" pos:end="105:26">-</operator><literal type="number" pos:start="105:27" pos:end="105:27">1</literal></expr></init></decl>, <decl pos:start="105:30" pos:end="105:38"><type ref="prev" pos:start="105:13" pos:end="105:18"/><name pos:start="105:30" pos:end="105:33">high</name> <init pos:start="105:35" pos:end="105:38">= <expr pos:start="105:37" pos:end="105:38"><operator pos:start="105:37" pos:end="105:37">-</operator><literal type="number" pos:start="105:38" pos:end="105:38">1</literal></expr></init></decl>, <decl pos:start="105:41" pos:end="105:41"><type ref="prev" pos:start="105:13" pos:end="105:18"/><name pos:start="105:41" pos:end="105:41">v</name></decl>, <decl pos:start="105:44" pos:end="105:59"><type ref="prev" pos:start="105:13" pos:end="105:18"/><name pos:start="105:44" pos:end="105:48">low_v</name> <init pos:start="105:50" pos:end="105:59">= <expr pos:start="105:52" pos:end="105:59"><operator pos:start="105:52" pos:end="105:52">-</operator><name pos:start="105:53" pos:end="105:59">DBL_MAX</name></expr></init></decl>, <decl pos:start="105:62" pos:end="105:77"><type ref="prev" pos:start="105:13" pos:end="105:18"/><name pos:start="105:62" pos:end="105:67">high_v</name> <init pos:start="105:69" pos:end="105:77">= <expr pos:start="105:71" pos:end="105:77"><name pos:start="105:71" pos:end="105:77">DBL_MAX</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:36"><decl pos:start="107:13" pos:end="107:35"><type pos:start="107:13" pos:end="107:18"><name pos:start="107:13" pos:end="107:18">double</name></type> <name pos:start="107:20" pos:end="107:23">var0</name> <init pos:start="107:25" pos:end="107:35">= <expr pos:start="107:27" pos:end="107:35"><name pos:start="107:27" pos:end="107:35"><name pos:start="107:27" pos:end="107:27">p</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:32">var</name><index pos:start="107:33" pos:end="107:35">[<expr pos:start="107:34" pos:end="107:34"><literal type="number" pos:start="107:34" pos:end="107:34">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="109:13" pos:end="109:53"><decl pos:start="109:13" pos:end="109:52"><type pos:start="109:13" pos:end="109:18"><name pos:start="109:13" pos:end="109:18">double</name></type> <name pos:start="109:20" pos:end="109:24">x_max</name> <init pos:start="109:26" pos:end="109:52">= <expr pos:start="109:28" pos:end="109:52"><call pos:start="109:28" pos:end="109:52"><name pos:start="109:28" pos:end="109:36">eval_expr</name><argument_list pos:start="109:37" pos:end="109:52">(<argument pos:start="109:38" pos:end="109:38"><expr pos:start="109:38" pos:end="109:38"><name pos:start="109:38" pos:end="109:38">p</name></expr></argument>, <argument pos:start="109:41" pos:end="109:51"><expr pos:start="109:41" pos:end="109:51"><name pos:start="109:41" pos:end="109:51"><name pos:start="109:41" pos:end="109:41">e</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:48">param</name><index pos:start="109:49" pos:end="109:51">[<expr pos:start="109:50" pos:end="109:50"><literal type="number" pos:start="109:50" pos:end="109:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <for pos:start="111:13" pos:end="177:13">for<control pos:start="111:16" pos:end="111:34">(<init pos:start="111:17" pos:end="111:21"><expr pos:start="111:17" pos:end="111:20"><name pos:start="111:17" pos:end="111:17">i</name><operator pos:start="111:18" pos:end="111:18">=</operator><operator pos:start="111:19" pos:end="111:19">-</operator><literal type="number" pos:start="111:20" pos:end="111:20">1</literal></expr>;</init> <condition pos:start="111:23" pos:end="111:29"><expr pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:23">i</name><operator pos:start="111:24" pos:end="111:24">&lt;</operator><literal type="number" pos:start="111:25" pos:end="111:28">1024</literal></expr>;</condition> <incr pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:31">i</name><operator pos:start="111:32" pos:end="111:33">++</operator></expr></incr>)</control> <block pos:start="111:36" pos:end="177:13">{<block_content pos:start="113:17" pos:end="175:17">

                <if_stmt pos:start="113:17" pos:end="127:17"><if pos:start="113:17" pos:end="117:17">if<condition pos:start="113:19" pos:end="113:25">(<expr pos:start="113:20" pos:end="113:24"><name pos:start="113:20" pos:end="113:20">i</name><operator pos:start="113:21" pos:end="113:21">&lt;</operator><literal type="number" pos:start="113:22" pos:end="113:24">255</literal></expr>)</condition> <block pos:start="113:27" pos:end="117:17">{<block_content pos:start="115:21" pos:end="115:60">

                    <expr_stmt pos:start="115:21" pos:end="115:60"><expr pos:start="115:21" pos:end="115:59"><name pos:start="115:21" pos:end="115:29"><name pos:start="115:21" pos:end="115:21">p</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:26">var</name><index pos:start="115:27" pos:end="115:29">[<expr pos:start="115:28" pos:end="115:28"><literal type="number" pos:start="115:28" pos:end="115:28">0</literal></expr>]</index></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:49"><name pos:start="115:33" pos:end="115:42">av_reverse</name><index pos:start="115:43" pos:end="115:49">[<expr pos:start="115:44" pos:end="115:48"><name pos:start="115:44" pos:end="115:44">i</name><operator pos:start="115:45" pos:end="115:45">&amp;</operator><literal type="number" pos:start="115:46" pos:end="115:48">255</literal></expr>]</index></name><operator pos:start="115:50" pos:end="115:50">*</operator><name pos:start="115:51" pos:end="115:55">x_max</name><operator pos:start="115:56" pos:end="115:56">/</operator><literal type="number" pos:start="115:57" pos:end="115:59">255</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="117:19" pos:end="127:17">else <block pos:start="117:24" pos:end="127:17">{<block_content pos:start="119:21" pos:end="125:47">

                    <expr_stmt pos:start="119:21" pos:end="119:54"><expr pos:start="119:21" pos:end="119:53"><name pos:start="119:21" pos:end="119:29"><name pos:start="119:21" pos:end="119:21">p</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:26">var</name><index pos:start="119:27" pos:end="119:29">[<expr pos:start="119:28" pos:end="119:28"><literal type="number" pos:start="119:28" pos:end="119:28">0</literal></expr>]</index></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:37">x_max</name><operator pos:start="119:38" pos:end="119:38">*</operator><call pos:start="119:39" pos:end="119:53"><name pos:start="119:39" pos:end="119:41">pow</name><argument_list pos:start="119:42" pos:end="119:53">(<argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><literal type="number" pos:start="119:43" pos:end="119:45">0.9</literal></expr></argument>, <argument pos:start="119:48" pos:end="119:52"><expr pos:start="119:48" pos:end="119:52"><name pos:start="119:48" pos:end="119:48">i</name><operator pos:start="119:49" pos:end="119:49">-</operator><literal type="number" pos:start="119:50" pos:end="119:52">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="121:21" pos:end="121:45"><if pos:start="121:21" pos:end="121:45">if <condition pos:start="121:24" pos:end="121:28">(<expr pos:start="121:25" pos:end="121:27"><name pos:start="121:25" pos:end="121:25">i</name><operator pos:start="121:26" pos:end="121:26">&amp;</operator><literal type="number" pos:start="121:27" pos:end="121:27">1</literal></expr>)</condition><block type="pseudo" pos:start="121:30" pos:end="121:45"><block_content pos:start="121:30" pos:end="121:45"> <expr_stmt pos:start="121:30" pos:end="121:45"><expr pos:start="121:30" pos:end="121:44"><name pos:start="121:30" pos:end="121:38"><name pos:start="121:30" pos:end="121:30">p</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:35">var</name><index pos:start="121:36" pos:end="121:38">[<expr pos:start="121:37" pos:end="121:37"><literal type="number" pos:start="121:37" pos:end="121:37">0</literal></expr>]</index></name> <operator pos:start="121:40" pos:end="121:41">*=</operator> <operator pos:start="121:43" pos:end="121:43">-</operator><literal type="number" pos:start="121:44" pos:end="121:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="123:21" pos:end="125:47"><if pos:start="123:21" pos:end="123:46">if <condition pos:start="123:24" pos:end="123:28">(<expr pos:start="123:25" pos:end="123:27"><name pos:start="123:25" pos:end="123:25">i</name><operator pos:start="123:26" pos:end="123:26">&amp;</operator><literal type="number" pos:start="123:27" pos:end="123:27">2</literal></expr>)</condition><block type="pseudo" pos:start="123:30" pos:end="123:46"><block_content pos:start="123:30" pos:end="123:46"> <expr_stmt pos:start="123:30" pos:end="123:46"><expr pos:start="123:30" pos:end="123:45"><name pos:start="123:30" pos:end="123:38"><name pos:start="123:30" pos:end="123:30">p</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:35">var</name><index pos:start="123:36" pos:end="123:38">[<expr pos:start="123:37" pos:end="123:37"><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>]</index></name> <operator pos:start="123:40" pos:end="123:41">+=</operator> <name pos:start="123:43" pos:end="123:45">low</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="125:21" pos:end="125:47">else<block type="pseudo" pos:start="125:30" pos:end="125:47"><block_content pos:start="125:30" pos:end="125:47">     <expr_stmt pos:start="125:30" pos:end="125:47"><expr pos:start="125:30" pos:end="125:46"><name pos:start="125:30" pos:end="125:38"><name pos:start="125:30" pos:end="125:30">p</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:35">var</name><index pos:start="125:36" pos:end="125:38">[<expr pos:start="125:37" pos:end="125:37"><literal type="number" pos:start="125:37" pos:end="125:37">0</literal></expr>]</index></name> <operator pos:start="125:40" pos:end="125:41">+=</operator> <name pos:start="125:43" pos:end="125:46">high</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:46"><expr pos:start="129:17" pos:end="129:45"><name pos:start="129:17" pos:end="129:17">v</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <call pos:start="129:21" pos:end="129:45"><name pos:start="129:21" pos:end="129:29">eval_expr</name><argument_list pos:start="129:30" pos:end="129:45">(<argument pos:start="129:31" pos:end="129:31"><expr pos:start="129:31" pos:end="129:31"><name pos:start="129:31" pos:end="129:31">p</name></expr></argument>, <argument pos:start="129:34" pos:end="129:44"><expr pos:start="129:34" pos:end="129:44"><name pos:start="129:34" pos:end="129:44"><name pos:start="129:34" pos:end="129:34">e</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:41">param</name><index pos:start="129:42" pos:end="129:44">[<expr pos:start="129:43" pos:end="129:43"><literal type="number" pos:start="129:43" pos:end="129:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="131:17" pos:end="137:17"><if pos:start="131:17" pos:end="137:17">if <condition pos:start="131:20" pos:end="131:36">(<expr pos:start="131:21" pos:end="131:35"><name pos:start="131:21" pos:end="131:21">v</name><operator pos:start="131:22" pos:end="131:23">&lt;=</operator><literal type="number" pos:start="131:24" pos:end="131:24">0</literal> <operator pos:start="131:26" pos:end="131:27">&amp;&amp;</operator> <name pos:start="131:29" pos:end="131:29">v</name><operator pos:start="131:30" pos:end="131:30">&gt;</operator><name pos:start="131:31" pos:end="131:35">low_v</name></expr>)</condition> <block pos:start="131:38" pos:end="137:17">{<block_content pos:start="133:21" pos:end="135:31">

                    <expr_stmt pos:start="133:21" pos:end="133:39"><expr pos:start="133:21" pos:end="133:38"><name pos:start="133:21" pos:end="133:23">low</name>    <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:38"><name pos:start="133:30" pos:end="133:30">p</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:35">var</name><index pos:start="133:36" pos:end="133:38">[<expr pos:start="133:37" pos:end="133:37"><literal type="number" pos:start="133:37" pos:end="133:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:31"><expr pos:start="135:21" pos:end="135:30"><name pos:start="135:21" pos:end="135:25">low_v</name>  <operator pos:start="135:28" pos:end="135:28">=</operator> <name pos:start="135:30" pos:end="135:30">v</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="139:17" pos:end="145:17"><if pos:start="139:17" pos:end="145:17">if <condition pos:start="139:20" pos:end="139:37">(<expr pos:start="139:21" pos:end="139:36"><name pos:start="139:21" pos:end="139:21">v</name><operator pos:start="139:22" pos:end="139:23">&gt;=</operator><literal type="number" pos:start="139:24" pos:end="139:24">0</literal> <operator pos:start="139:26" pos:end="139:27">&amp;&amp;</operator> <name pos:start="139:29" pos:end="139:29">v</name><operator pos:start="139:30" pos:end="139:30">&lt;</operator><name pos:start="139:31" pos:end="139:36">high_v</name></expr>)</condition> <block pos:start="139:39" pos:end="145:17">{<block_content pos:start="141:21" pos:end="143:31">

                    <expr_stmt pos:start="141:21" pos:end="141:39"><expr pos:start="141:21" pos:end="141:38"><name pos:start="141:21" pos:end="141:24">high</name>   <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:38"><name pos:start="141:30" pos:end="141:30">p</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:35">var</name><index pos:start="141:36" pos:end="141:38">[<expr pos:start="141:37" pos:end="141:37"><literal type="number" pos:start="141:37" pos:end="141:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:31"><expr pos:start="143:21" pos:end="143:30"><name pos:start="143:21" pos:end="143:26">high_v</name> <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:30">v</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="147:17" pos:end="175:17"><if pos:start="147:17" pos:end="175:17">if <condition pos:start="147:20" pos:end="147:38">(<expr pos:start="147:21" pos:end="147:37"><name pos:start="147:21" pos:end="147:23">low</name><operator pos:start="147:24" pos:end="147:25">&gt;=</operator><literal type="number" pos:start="147:26" pos:end="147:26">0</literal> <operator pos:start="147:28" pos:end="147:29">&amp;&amp;</operator> <name pos:start="147:31" pos:end="147:34">high</name><operator pos:start="147:35" pos:end="147:36">&gt;=</operator><literal type="number" pos:start="147:37" pos:end="147:37">0</literal></expr>)</condition><block pos:start="147:39" pos:end="175:17">{<block_content pos:start="149:21" pos:end="173:26">

                    <while pos:start="149:21" pos:end="171:21">while <condition pos:start="149:27" pos:end="149:29">(<expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">1</literal></expr>)</condition> <block pos:start="149:31" pos:end="171:21">{<block_content pos:start="151:25" pos:end="169:25">

                        <expr_stmt pos:start="151:25" pos:end="151:51"><expr pos:start="151:25" pos:end="151:50"><name pos:start="151:25" pos:end="151:33"><name pos:start="151:25" pos:end="151:25">p</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:30">var</name><index pos:start="151:31" pos:end="151:33">[<expr pos:start="151:32" pos:end="151:32"><literal type="number" pos:start="151:32" pos:end="151:32">0</literal></expr>]</index></name> <operator pos:start="151:35" pos:end="151:35">=</operator> <operator pos:start="151:37" pos:end="151:37">(</operator><name pos:start="151:38" pos:end="151:40">low</name><operator pos:start="151:41" pos:end="151:41">+</operator><name pos:start="151:42" pos:end="151:45">high</name><operator pos:start="151:46" pos:end="151:46">)</operator><operator pos:start="151:47" pos:end="151:47">*</operator><literal type="number" pos:start="151:48" pos:end="151:50">0.5</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="153:25" pos:end="155:34"><if pos:start="153:25" pos:end="155:34">if <condition pos:start="153:28" pos:end="153:66">(<expr pos:start="153:29" pos:end="153:65"><name pos:start="153:29" pos:end="153:31">low</name> <operator pos:start="153:33" pos:end="153:34">==</operator> <name pos:start="153:36" pos:end="153:44"><name pos:start="153:36" pos:end="153:36">p</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:41">var</name><index pos:start="153:42" pos:end="153:44">[<expr pos:start="153:43" pos:end="153:43"><literal type="number" pos:start="153:43" pos:end="153:43">0</literal></expr>]</index></name> <operator pos:start="153:46" pos:end="153:47">||</operator> <name pos:start="153:49" pos:end="153:52">high</name> <operator pos:start="153:54" pos:end="153:55">==</operator> <name pos:start="153:57" pos:end="153:65"><name pos:start="153:57" pos:end="153:57">p</name><operator pos:start="153:58" pos:end="153:59">-&gt;</operator><name pos:start="153:60" pos:end="153:62">var</name><index pos:start="153:63" pos:end="153:65">[<expr pos:start="153:64" pos:end="153:64"><literal type="number" pos:start="153:64" pos:end="153:64">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="155:29" pos:end="155:34"><block_content pos:start="155:29" pos:end="155:34">

                            <break pos:start="155:29" pos:end="155:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="157:25" pos:end="157:54"><expr pos:start="157:25" pos:end="157:53"><name pos:start="157:25" pos:end="157:25">v</name> <operator pos:start="157:27" pos:end="157:27">=</operator> <call pos:start="157:29" pos:end="157:53"><name pos:start="157:29" pos:end="157:37">eval_expr</name><argument_list pos:start="157:38" pos:end="157:53">(<argument pos:start="157:39" pos:end="157:39"><expr pos:start="157:39" pos:end="157:39"><name pos:start="157:39" pos:end="157:39">p</name></expr></argument>, <argument pos:start="157:42" pos:end="157:52"><expr pos:start="157:42" pos:end="157:52"><name pos:start="157:42" pos:end="157:52"><name pos:start="157:42" pos:end="157:42">e</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:49">param</name><index pos:start="157:50" pos:end="157:52">[<expr pos:start="157:51" pos:end="157:51"><literal type="number" pos:start="157:51" pos:end="157:51">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="159:25" pos:end="159:50"><if pos:start="159:25" pos:end="159:50">if <condition pos:start="159:28" pos:end="159:33">(<expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:29">v</name><operator pos:start="159:30" pos:end="159:31">&lt;=</operator><literal type="number" pos:start="159:32" pos:end="159:32">0</literal></expr>)</condition><block type="pseudo" pos:start="159:35" pos:end="159:50"><block_content pos:start="159:35" pos:end="159:50"> <expr_stmt pos:start="159:35" pos:end="159:50"><expr pos:start="159:35" pos:end="159:49"><name pos:start="159:35" pos:end="159:37">low</name> <operator pos:start="159:39" pos:end="159:39">=</operator> <name pos:start="159:41" pos:end="159:49"><name pos:start="159:41" pos:end="159:41">p</name><operator pos:start="159:42" pos:end="159:43">-&gt;</operator><name pos:start="159:44" pos:end="159:46">var</name><index pos:start="159:47" pos:end="159:49">[<expr pos:start="159:48" pos:end="159:48"><literal type="number" pos:start="159:48" pos:end="159:48">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="161:25" pos:end="161:50"><if pos:start="161:25" pos:end="161:50">if <condition pos:start="161:28" pos:end="161:33">(<expr pos:start="161:29" pos:end="161:32"><name pos:start="161:29" pos:end="161:29">v</name><operator pos:start="161:30" pos:end="161:31">&gt;=</operator><literal type="number" pos:start="161:32" pos:end="161:32">0</literal></expr>)</condition><block type="pseudo" pos:start="161:35" pos:end="161:50"><block_content pos:start="161:35" pos:end="161:50"> <expr_stmt pos:start="161:35" pos:end="161:50"><expr pos:start="161:35" pos:end="161:49"><name pos:start="161:35" pos:end="161:38">high</name><operator pos:start="161:39" pos:end="161:39">=</operator> <name pos:start="161:41" pos:end="161:49"><name pos:start="161:41" pos:end="161:41">p</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:46">var</name><index pos:start="161:47" pos:end="161:49">[<expr pos:start="161:48" pos:end="161:48"><literal type="number" pos:start="161:48" pos:end="161:48">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="163:25" pos:end="169:25"><if pos:start="163:25" pos:end="169:25">if <condition pos:start="163:28" pos:end="163:37">(<expr pos:start="163:29" pos:end="163:36"><call pos:start="163:29" pos:end="163:36"><name pos:start="163:29" pos:end="163:33">isnan</name><argument_list pos:start="163:34" pos:end="163:36">(<argument pos:start="163:35" pos:end="163:35"><expr pos:start="163:35" pos:end="163:35"><name pos:start="163:35" pos:end="163:35">v</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:39" pos:end="169:25">{<block_content pos:start="165:29" pos:end="167:34">

                            <expr_stmt pos:start="165:29" pos:end="165:43"><expr pos:start="165:29" pos:end="165:42"><name pos:start="165:29" pos:end="165:31">low</name> <operator pos:start="165:33" pos:end="165:33">=</operator> <name pos:start="165:35" pos:end="165:38">high</name> <operator pos:start="165:40" pos:end="165:40">=</operator> <name pos:start="165:42" pos:end="165:42">v</name></expr>;</expr_stmt>

                            <break pos:start="167:29" pos:end="167:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></while>

                    <break pos:start="173:21" pos:end="173:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="179:13" pos:end="179:29"><expr pos:start="179:13" pos:end="179:28"><name pos:start="179:13" pos:end="179:21"><name pos:start="179:13" pos:end="179:13">p</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:18">var</name><index pos:start="179:19" pos:end="179:21">[<expr pos:start="179:20" pos:end="179:20"><literal type="number" pos:start="179:20" pos:end="179:20">0</literal></expr>]</index></name> <operator pos:start="179:23" pos:end="179:23">=</operator> <name pos:start="179:25" pos:end="179:28">var0</name></expr>;</expr_stmt>

            <return pos:start="181:13" pos:end="181:46">return <expr pos:start="181:20" pos:end="181:45"><ternary pos:start="181:20" pos:end="181:45"><condition pos:start="181:20" pos:end="181:34"><expr pos:start="181:20" pos:end="181:32"><operator pos:start="181:20" pos:end="181:20">-</operator><name pos:start="181:21" pos:end="181:25">low_v</name><operator pos:start="181:26" pos:end="181:26">&lt;</operator><name pos:start="181:27" pos:end="181:32">high_v</name></expr> ?</condition><then pos:start="181:36" pos:end="181:38"> <expr pos:start="181:36" pos:end="181:38"><name pos:start="181:36" pos:end="181:38">low</name></expr> </then><else pos:start="181:40" pos:end="181:45">: <expr pos:start="181:42" pos:end="181:45"><name pos:start="181:42" pos:end="181:45">high</name></expr></else></ternary></expr>;</return>

        </block_content>}</block>

        <default pos:start="185:9" pos:end="185:16">default:</default> <block pos:start="185:18" pos:end="223:9">{<block_content pos:start="187:13" pos:end="221:13">

            <decl_stmt pos:start="187:13" pos:end="187:49"><decl pos:start="187:13" pos:end="187:48"><type pos:start="187:13" pos:end="187:18"><name pos:start="187:13" pos:end="187:18">double</name></type> <name pos:start="187:20" pos:end="187:20">d</name> <init pos:start="187:22" pos:end="187:48">= <expr pos:start="187:24" pos:end="187:48"><call pos:start="187:24" pos:end="187:48"><name pos:start="187:24" pos:end="187:32">eval_expr</name><argument_list pos:start="187:33" pos:end="187:48">(<argument pos:start="187:34" pos:end="187:34"><expr pos:start="187:34" pos:end="187:34"><name pos:start="187:34" pos:end="187:34">p</name></expr></argument>, <argument pos:start="187:37" pos:end="187:47"><expr pos:start="187:37" pos:end="187:47"><name pos:start="187:37" pos:end="187:47"><name pos:start="187:37" pos:end="187:37">e</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:44">param</name><index pos:start="187:45" pos:end="187:47">[<expr pos:start="187:46" pos:end="187:46"><literal type="number" pos:start="187:46" pos:end="187:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="189:13" pos:end="189:50"><decl pos:start="189:13" pos:end="189:49"><type pos:start="189:13" pos:end="189:18"><name pos:start="189:13" pos:end="189:18">double</name></type> <name pos:start="189:20" pos:end="189:21">d2</name> <init pos:start="189:23" pos:end="189:49">= <expr pos:start="189:25" pos:end="189:49"><call pos:start="189:25" pos:end="189:49"><name pos:start="189:25" pos:end="189:33">eval_expr</name><argument_list pos:start="189:34" pos:end="189:49">(<argument pos:start="189:35" pos:end="189:35"><expr pos:start="189:35" pos:end="189:35"><name pos:start="189:35" pos:end="189:35">p</name></expr></argument>, <argument pos:start="189:38" pos:end="189:48"><expr pos:start="189:38" pos:end="189:48"><name pos:start="189:38" pos:end="189:48"><name pos:start="189:38" pos:end="189:38">e</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:45">param</name><index pos:start="189:46" pos:end="189:48">[<expr pos:start="189:47" pos:end="189:47"><literal type="number" pos:start="189:47" pos:end="189:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <switch pos:start="191:13" pos:end="221:13">switch <condition pos:start="191:20" pos:end="191:28">(<expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:21">e</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:27">type</name></name></expr>)</condition> <block pos:start="191:30" pos:end="221:13">{<block_content pos:start="193:17" pos:end="219:67">

                <case pos:start="193:17" pos:end="193:27">case <expr pos:start="193:22" pos:end="193:26"><name pos:start="193:22" pos:end="193:26">e_mod</name></expr>:</case> <return pos:start="193:29" pos:end="193:67">return <expr pos:start="193:36" pos:end="193:66"><name pos:start="193:36" pos:end="193:43"><name pos:start="193:36" pos:end="193:36">e</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:43">value</name></name> <operator pos:start="193:45" pos:end="193:45">*</operator> <operator pos:start="193:47" pos:end="193:47">(</operator><name pos:start="193:48" pos:end="193:48">d</name> <operator pos:start="193:50" pos:end="193:50">-</operator> <call pos:start="193:52" pos:end="193:62"><name pos:start="193:52" pos:end="193:56">floor</name><argument_list pos:start="193:57" pos:end="193:62">(<argument pos:start="193:58" pos:end="193:61"><expr pos:start="193:58" pos:end="193:61"><name pos:start="193:58" pos:end="193:58">d</name><operator pos:start="193:59" pos:end="193:59">/</operator><name pos:start="193:60" pos:end="193:61">d2</name></expr></argument>)</argument_list></call><operator pos:start="193:63" pos:end="193:63">*</operator><name pos:start="193:64" pos:end="193:65">d2</name><operator pos:start="193:66" pos:end="193:66">)</operator></expr>;</return>

                <case pos:start="195:17" pos:end="195:27">case <expr pos:start="195:22" pos:end="195:26"><name pos:start="195:22" pos:end="195:26">e_gcd</name></expr>:</case> <return pos:start="195:29" pos:end="195:59">return <expr pos:start="195:36" pos:end="195:58"><name pos:start="195:36" pos:end="195:43"><name pos:start="195:36" pos:end="195:36">e</name><operator pos:start="195:37" pos:end="195:38">-&gt;</operator><name pos:start="195:39" pos:end="195:43">value</name></name> <operator pos:start="195:45" pos:end="195:45">*</operator> <call pos:start="195:47" pos:end="195:58"><name pos:start="195:47" pos:end="195:52">av_gcd</name><argument_list pos:start="195:53" pos:end="195:58">(<argument pos:start="195:54" pos:end="195:54"><expr pos:start="195:54" pos:end="195:54"><name pos:start="195:54" pos:end="195:54">d</name></expr></argument>,<argument pos:start="195:56" pos:end="195:57"><expr pos:start="195:56" pos:end="195:57"><name pos:start="195:56" pos:end="195:57">d2</name></expr></argument>)</argument_list></call></expr>;</return>

                <case pos:start="197:17" pos:end="197:27">case <expr pos:start="197:22" pos:end="197:26"><name pos:start="197:22" pos:end="197:26">e_max</name></expr>:</case> <return pos:start="197:29" pos:end="197:67">return <expr pos:start="197:36" pos:end="197:66"><name pos:start="197:36" pos:end="197:43"><name pos:start="197:36" pos:end="197:36">e</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:43">value</name></name> <operator pos:start="197:45" pos:end="197:45">*</operator> <operator pos:start="197:47" pos:end="197:47">(</operator><ternary pos:start="197:48" pos:end="197:65"><condition pos:start="197:48" pos:end="197:56"><expr pos:start="197:48" pos:end="197:54"><name pos:start="197:48" pos:end="197:48">d</name> <operator pos:start="197:50" pos:end="197:50">&gt;</operator>  <name pos:start="197:53" pos:end="197:54">d2</name></expr> ?</condition><then pos:start="197:60" pos:end="197:60">   <expr pos:start="197:60" pos:end="197:60"><name pos:start="197:60" pos:end="197:60">d</name></expr> </then><else pos:start="197:62" pos:end="197:65">: <expr pos:start="197:64" pos:end="197:65"><name pos:start="197:64" pos:end="197:65">d2</name></expr></else></ternary><operator pos:start="197:66" pos:end="197:66">)</operator></expr>;</return>

                <case pos:start="199:17" pos:end="199:27">case <expr pos:start="199:22" pos:end="199:26"><name pos:start="199:22" pos:end="199:26">e_min</name></expr>:</case> <return pos:start="199:29" pos:end="199:67">return <expr pos:start="199:36" pos:end="199:66"><name pos:start="199:36" pos:end="199:43"><name pos:start="199:36" pos:end="199:36">e</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:43">value</name></name> <operator pos:start="199:45" pos:end="199:45">*</operator> <operator pos:start="199:47" pos:end="199:47">(</operator><ternary pos:start="199:48" pos:end="199:65"><condition pos:start="199:48" pos:end="199:56"><expr pos:start="199:48" pos:end="199:54"><name pos:start="199:48" pos:end="199:48">d</name> <operator pos:start="199:50" pos:end="199:50">&lt;</operator>  <name pos:start="199:53" pos:end="199:54">d2</name></expr> ?</condition><then pos:start="199:60" pos:end="199:60">   <expr pos:start="199:60" pos:end="199:60"><name pos:start="199:60" pos:end="199:60">d</name></expr> </then><else pos:start="199:62" pos:end="199:65">: <expr pos:start="199:64" pos:end="199:65"><name pos:start="199:64" pos:end="199:65">d2</name></expr></else></ternary><operator pos:start="199:66" pos:end="199:66">)</operator></expr>;</return>

                <case pos:start="201:17" pos:end="201:26">case <expr pos:start="201:22" pos:end="201:25"><name pos:start="201:22" pos:end="201:25">e_eq</name></expr>:</case>  <return pos:start="201:29" pos:end="201:68">return <expr pos:start="201:36" pos:end="201:67"><name pos:start="201:36" pos:end="201:43"><name pos:start="201:36" pos:end="201:36">e</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:43">value</name></name> <operator pos:start="201:45" pos:end="201:45">*</operator> <operator pos:start="201:47" pos:end="201:47">(</operator><ternary pos:start="201:48" pos:end="201:66"><condition pos:start="201:48" pos:end="201:56"><expr pos:start="201:48" pos:end="201:54"><name pos:start="201:48" pos:end="201:48">d</name> <operator pos:start="201:50" pos:end="201:51">==</operator> <name pos:start="201:53" pos:end="201:54">d2</name></expr> ?</condition><then pos:start="201:58" pos:end="201:60"> <expr pos:start="201:58" pos:end="201:60"><literal type="number" pos:start="201:58" pos:end="201:60">1.0</literal></expr> </then><else pos:start="201:62" pos:end="201:66">: <expr pos:start="201:64" pos:end="201:66"><literal type="number" pos:start="201:64" pos:end="201:66">0.0</literal></expr></else></ternary><operator pos:start="201:67" pos:end="201:67">)</operator></expr>;</return>

                <case pos:start="203:17" pos:end="203:26">case <expr pos:start="203:22" pos:end="203:25"><name pos:start="203:22" pos:end="203:25">e_gt</name></expr>:</case>  <return pos:start="203:29" pos:end="203:68">return <expr pos:start="203:36" pos:end="203:67"><name pos:start="203:36" pos:end="203:43"><name pos:start="203:36" pos:end="203:36">e</name><operator pos:start="203:37" pos:end="203:38">-&gt;</operator><name pos:start="203:39" pos:end="203:43">value</name></name> <operator pos:start="203:45" pos:end="203:45">*</operator> <operator pos:start="203:47" pos:end="203:47">(</operator><ternary pos:start="203:48" pos:end="203:66"><condition pos:start="203:48" pos:end="203:56"><expr pos:start="203:48" pos:end="203:54"><name pos:start="203:48" pos:end="203:48">d</name> <operator pos:start="203:50" pos:end="203:50">&gt;</operator>  <name pos:start="203:53" pos:end="203:54">d2</name></expr> ?</condition><then pos:start="203:58" pos:end="203:60"> <expr pos:start="203:58" pos:end="203:60"><literal type="number" pos:start="203:58" pos:end="203:60">1.0</literal></expr> </then><else pos:start="203:62" pos:end="203:66">: <expr pos:start="203:64" pos:end="203:66"><literal type="number" pos:start="203:64" pos:end="203:66">0.0</literal></expr></else></ternary><operator pos:start="203:67" pos:end="203:67">)</operator></expr>;</return>

                <case pos:start="205:17" pos:end="205:27">case <expr pos:start="205:22" pos:end="205:26"><name pos:start="205:22" pos:end="205:26">e_gte</name></expr>:</case> <return pos:start="205:29" pos:end="205:68">return <expr pos:start="205:36" pos:end="205:67"><name pos:start="205:36" pos:end="205:43"><name pos:start="205:36" pos:end="205:36">e</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:43">value</name></name> <operator pos:start="205:45" pos:end="205:45">*</operator> <operator pos:start="205:47" pos:end="205:47">(</operator><ternary pos:start="205:48" pos:end="205:66"><condition pos:start="205:48" pos:end="205:56"><expr pos:start="205:48" pos:end="205:54"><name pos:start="205:48" pos:end="205:48">d</name> <operator pos:start="205:50" pos:end="205:51">&gt;=</operator> <name pos:start="205:53" pos:end="205:54">d2</name></expr> ?</condition><then pos:start="205:58" pos:end="205:60"> <expr pos:start="205:58" pos:end="205:60"><literal type="number" pos:start="205:58" pos:end="205:60">1.0</literal></expr> </then><else pos:start="205:62" pos:end="205:66">: <expr pos:start="205:64" pos:end="205:66"><literal type="number" pos:start="205:64" pos:end="205:66">0.0</literal></expr></else></ternary><operator pos:start="205:67" pos:end="205:67">)</operator></expr>;</return>

                <case pos:start="207:17" pos:end="207:27">case <expr pos:start="207:22" pos:end="207:26"><name pos:start="207:22" pos:end="207:26">e_pow</name></expr>:</case> <return pos:start="207:29" pos:end="207:57">return <expr pos:start="207:36" pos:end="207:56"><name pos:start="207:36" pos:end="207:43"><name pos:start="207:36" pos:end="207:36">e</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:43">value</name></name> <operator pos:start="207:45" pos:end="207:45">*</operator> <call pos:start="207:47" pos:end="207:56"><name pos:start="207:47" pos:end="207:49">pow</name><argument_list pos:start="207:50" pos:end="207:56">(<argument pos:start="207:51" pos:end="207:51"><expr pos:start="207:51" pos:end="207:51"><name pos:start="207:51" pos:end="207:51">d</name></expr></argument>, <argument pos:start="207:54" pos:end="207:55"><expr pos:start="207:54" pos:end="207:55"><name pos:start="207:54" pos:end="207:55">d2</name></expr></argument>)</argument_list></call></expr>;</return>

                <case pos:start="209:17" pos:end="209:27">case <expr pos:start="209:22" pos:end="209:26"><name pos:start="209:22" pos:end="209:26">e_mul</name></expr>:</case> <return pos:start="209:29" pos:end="209:55">return <expr pos:start="209:36" pos:end="209:54"><name pos:start="209:36" pos:end="209:43"><name pos:start="209:36" pos:end="209:36">e</name><operator pos:start="209:37" pos:end="209:38">-&gt;</operator><name pos:start="209:39" pos:end="209:43">value</name></name> <operator pos:start="209:45" pos:end="209:45">*</operator> <operator pos:start="209:47" pos:end="209:47">(</operator><name pos:start="209:48" pos:end="209:48">d</name> <operator pos:start="209:50" pos:end="209:50">*</operator> <name pos:start="209:52" pos:end="209:53">d2</name><operator pos:start="209:54" pos:end="209:54">)</operator></expr>;</return>

                <case pos:start="211:17" pos:end="211:27">case <expr pos:start="211:22" pos:end="211:26"><name pos:start="211:22" pos:end="211:26">e_div</name></expr>:</case> <return pos:start="211:29" pos:end="211:55">return <expr pos:start="211:36" pos:end="211:54"><name pos:start="211:36" pos:end="211:43"><name pos:start="211:36" pos:end="211:36">e</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:43">value</name></name> <operator pos:start="211:45" pos:end="211:45">*</operator> <operator pos:start="211:47" pos:end="211:47">(</operator><name pos:start="211:48" pos:end="211:48">d</name> <operator pos:start="211:50" pos:end="211:50">/</operator> <name pos:start="211:52" pos:end="211:53">d2</name><operator pos:start="211:54" pos:end="211:54">)</operator></expr>;</return>

                <case pos:start="213:17" pos:end="213:27">case <expr pos:start="213:22" pos:end="213:26"><name pos:start="213:22" pos:end="213:26">e_add</name></expr>:</case> <return pos:start="213:29" pos:end="213:55">return <expr pos:start="213:36" pos:end="213:54"><name pos:start="213:36" pos:end="213:43"><name pos:start="213:36" pos:end="213:36">e</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:43">value</name></name> <operator pos:start="213:45" pos:end="213:45">*</operator> <operator pos:start="213:47" pos:end="213:47">(</operator><name pos:start="213:48" pos:end="213:48">d</name> <operator pos:start="213:50" pos:end="213:50">+</operator> <name pos:start="213:52" pos:end="213:53">d2</name><operator pos:start="213:54" pos:end="213:54">)</operator></expr>;</return>

                <case pos:start="215:17" pos:end="215:28">case <expr pos:start="215:22" pos:end="215:27"><name pos:start="215:22" pos:end="215:27">e_last</name></expr>:</case><return pos:start="215:29" pos:end="215:49">return <expr pos:start="215:36" pos:end="215:48"><name pos:start="215:36" pos:end="215:43"><name pos:start="215:36" pos:end="215:36">e</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:43">value</name></name> <operator pos:start="215:45" pos:end="215:45">*</operator> <name pos:start="215:47" pos:end="215:48">d2</name></expr>;</return>

                <case pos:start="217:17" pos:end="217:27">case <expr pos:start="217:22" pos:end="217:25"><name pos:start="217:22" pos:end="217:25">e_st</name></expr> :</case> <return pos:start="217:29" pos:end="217:82">return <expr pos:start="217:36" pos:end="217:81"><name pos:start="217:36" pos:end="217:43"><name pos:start="217:36" pos:end="217:36">e</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:43">value</name></name> <operator pos:start="217:45" pos:end="217:45">*</operator> <operator pos:start="217:47" pos:end="217:47">(</operator><name pos:start="217:48" pos:end="217:76"><name pos:start="217:48" pos:end="217:48">p</name><operator pos:start="217:49" pos:end="217:50">-&gt;</operator><name pos:start="217:51" pos:end="217:53">var</name><index pos:start="217:54" pos:end="217:76">[<expr pos:start="217:55" pos:end="217:75"><call pos:start="217:55" pos:end="217:75"><name pos:start="217:55" pos:end="217:61">av_clip</name><argument_list pos:start="217:62" pos:end="217:75">(<argument pos:start="217:63" pos:end="217:63"><expr pos:start="217:63" pos:end="217:63"><name pos:start="217:63" pos:end="217:63">d</name></expr></argument>, <argument pos:start="217:66" pos:end="217:66"><expr pos:start="217:66" pos:end="217:66"><literal type="number" pos:start="217:66" pos:end="217:66">0</literal></expr></argument>, <argument pos:start="217:69" pos:end="217:74"><expr pos:start="217:69" pos:end="217:74"><name pos:start="217:69" pos:end="217:72">VARS</name><operator pos:start="217:73" pos:end="217:73">-</operator><literal type="number" pos:start="217:74" pos:end="217:74">1</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="217:77" pos:end="217:77">=</operator> <name pos:start="217:79" pos:end="217:80">d2</name><operator pos:start="217:81" pos:end="217:81">)</operator></expr>;</return>

                <case pos:start="219:17" pos:end="219:29">case <expr pos:start="219:22" pos:end="219:28"><name pos:start="219:22" pos:end="219:28">e_hypot</name></expr>:</case><return pos:start="219:30" pos:end="219:67">return <expr pos:start="219:37" pos:end="219:66"><name pos:start="219:37" pos:end="219:44"><name pos:start="219:37" pos:end="219:37">e</name><operator pos:start="219:38" pos:end="219:39">-&gt;</operator><name pos:start="219:40" pos:end="219:44">value</name></name> <operator pos:start="219:46" pos:end="219:46">*</operator> <operator pos:start="219:48" pos:end="219:48">(</operator><call pos:start="219:49" pos:end="219:65"><name pos:start="219:49" pos:end="219:52">sqrt</name><argument_list pos:start="219:53" pos:end="219:65">(<argument pos:start="219:54" pos:end="219:64"><expr pos:start="219:54" pos:end="219:64"><name pos:start="219:54" pos:end="219:54">d</name><operator pos:start="219:55" pos:end="219:55">*</operator><name pos:start="219:56" pos:end="219:56">d</name> <operator pos:start="219:58" pos:end="219:58">+</operator> <name pos:start="219:60" pos:end="219:61">d2</name><operator pos:start="219:62" pos:end="219:62">*</operator><name pos:start="219:63" pos:end="219:64">d2</name></expr></argument>)</argument_list></call><operator pos:start="219:66" pos:end="219:66">)</operator></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block>

    </block_content>}</block></switch>

    <return pos:start="227:5" pos:end="227:15">return <expr pos:start="227:12" pos:end="227:14"><name pos:start="227:12" pos:end="227:14">NAN</name></expr>;</return>

</block_content>}</block></function>
</unit>
