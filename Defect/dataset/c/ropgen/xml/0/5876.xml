<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5876.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">css_do_tsch_get_irb</name><parameter_list pos:start="1:24" pos:end="1:69">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">SubchDev</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">sch</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:42">IRB</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:54">target_irb</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:68">irb_len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:51">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">SCSW</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">s</name> <init pos:start="5:13" pos:end="5:36">= <expr pos:start="5:15" pos:end="5:36"><operator pos:start="5:15" pos:end="5:15">&amp;</operator><name pos:start="5:16" pos:end="5:36"><name pos:start="5:16" pos:end="5:18">sch</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:31">curr_status</name><operator pos:start="5:32" pos:end="5:32">.</operator><name pos:start="5:33" pos:end="5:36">scsw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">PMCW</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name> <init pos:start="7:13" pos:end="7:36">= <expr pos:start="7:15" pos:end="7:36"><operator pos:start="7:15" pos:end="7:15">&amp;</operator><name pos:start="7:16" pos:end="7:36"><name pos:start="7:16" pos:end="7:18">sch</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:31">curr_status</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:36">pmcw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:18">stctl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">IRB</name></type> <name pos:start="11:9" pos:end="11:11">irb</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:66">(<expr pos:start="15:9" pos:end="15:65"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:18"><name pos:start="15:11" pos:end="15:11">p</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:18">flags</name></name> <operator pos:start="15:20" pos:end="15:20">&amp;</operator> <operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:41">PMCW_FLAGS_MASK_DNV</name> <operator pos:start="15:43" pos:end="15:43">|</operator> <name pos:start="15:45" pos:end="15:63">PMCW_FLAGS_MASK_ENA</name><operator pos:start="15:64" pos:end="15:64">)</operator><operator pos:start="15:65" pos:end="15:65">)</operator></expr>)</condition> <block pos:start="15:68" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">3</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:9">stctl</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">ctrl</name></name> <operator pos:start="23:21" pos:end="23:21">&amp;</operator> <name pos:start="23:23" pos:end="23:42">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:40">/* Prepare the irb for the guest. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:32">(<argument pos:start="29:12" pos:end="29:15"><expr pos:start="29:12" pos:end="29:15"><operator pos:start="29:12" pos:end="29:12">&amp;</operator><name pos:start="29:13" pos:end="29:15">irb</name></expr></argument>, <argument pos:start="29:18" pos:end="29:18"><expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr></argument>, <argument pos:start="29:21" pos:end="29:31"><expr pos:start="29:21" pos:end="29:31"><sizeof pos:start="29:21" pos:end="29:31">sizeof<argument_list pos:start="29:27" pos:end="29:31">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">IRB</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:40">/* Copy scsw from current status. */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><call pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:10">memcpy</name><argument_list pos:start="35:11" pos:end="35:38">(<argument pos:start="35:12" pos:end="35:20"><expr pos:start="35:12" pos:end="35:20"><operator pos:start="35:12" pos:end="35:12">&amp;</operator><name pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:15">irb</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:20">scsw</name></name></expr></argument>, <argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">s</name></expr></argument>, <argument pos:start="35:26" pos:end="35:37"><expr pos:start="35:26" pos:end="35:37"><sizeof pos:start="35:26" pos:end="35:37">sizeof<argument_list pos:start="35:32" pos:end="35:37">(<argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><name pos:start="35:33" pos:end="35:36">SCSW</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="81:5"><if pos:start="37:5" pos:end="81:5">if <condition pos:start="37:8" pos:end="37:39">(<expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:13">stctl</name> <operator pos:start="37:15" pos:end="37:15">&amp;</operator> <name pos:start="37:17" pos:end="37:38">SCSW_STCTL_STATUS_PEND</name></expr>)</condition> <block pos:start="37:41" pos:end="81:5">{<block_content pos:start="39:9" pos:end="79:9">

        <if_stmt pos:start="39:9" pos:end="53:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="43:50">(<expr pos:start="39:13" pos:end="43:49"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:20">cstat</name></name> <operator pos:start="39:22" pos:end="39:22">&amp;</operator> <operator pos:start="39:24" pos:end="39:24">(</operator><name pos:start="39:25" pos:end="39:45">SCSW_CSTAT_DATA_CHECK</name> <operator pos:start="39:47" pos:end="39:47">|</operator>

                        <name pos:start="41:25" pos:end="41:47">SCSW_CSTAT_CHN_CTRL_CHK</name> <operator pos:start="41:49" pos:end="41:49">|</operator>

                        <name pos:start="43:25" pos:end="43:48">SCSW_CSTAT_INTF_CTRL_CHK</name><operator pos:start="43:49" pos:end="43:49">)</operator></expr>)</condition> <block pos:start="43:52" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:36">

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:15">irb</name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:20">scsw</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:26">flags</name></name> <operator pos:start="45:28" pos:end="45:29">|=</operator> <name pos:start="45:31" pos:end="45:50">SCSW_FLAGS_MASK_ESWF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:15">irb</name><operator pos:start="47:16" pos:end="47:16">.</operator><name pos:start="47:17" pos:end="47:19">esw</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>]</index></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:35">0x04804000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="53:9">else <block pos:start="49:16" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:36">

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:15">irb</name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:19">esw</name><index pos:start="51:20" pos:end="51:22">[<expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr>]</index></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:35">0x00800000</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:58">/* If a unit check is pending, copy sense data. */</comment>

        <if_stmt pos:start="57:9" pos:end="79:9"><if pos:start="57:9" pos:end="79:9">if <condition pos:start="57:12" pos:end="59:48">(<expr pos:start="57:13" pos:end="59:47"><operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:21"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:21">dstat</name></name> <operator pos:start="57:23" pos:end="57:23">&amp;</operator> <name pos:start="57:25" pos:end="57:45">SCSW_DSTAT_UNIT_CHECK</name><operator pos:start="57:46" pos:end="57:46">)</operator> <operator pos:start="57:48" pos:end="57:49">&amp;&amp;</operator>

            <operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:14">p</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">chars</name></name> <operator pos:start="59:23" pos:end="59:23">&amp;</operator> <name pos:start="59:25" pos:end="59:46">PMCW_CHARS_MASK_CSENSE</name><operator pos:start="59:47" pos:end="59:47">)</operator></expr>)</condition> <block pos:start="59:50" pos:end="79:9">{<block_content pos:start="61:13" pos:end="77:69">

            <decl_stmt pos:start="61:13" pos:end="61:18"><decl pos:start="61:13" pos:end="61:17"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:74"><expr pos:start="65:13" pos:end="65:73"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:15">irb</name><operator pos:start="65:16" pos:end="65:16">.</operator><name pos:start="65:17" pos:end="65:20">scsw</name><operator pos:start="65:21" pos:end="65:21">.</operator><name pos:start="65:22" pos:end="65:26">flags</name></name> <operator pos:start="65:28" pos:end="65:29">|=</operator> <name pos:start="65:31" pos:end="65:50">SCSW_FLAGS_MASK_ESWF</name> <operator pos:start="65:52" pos:end="65:52">|</operator> <name pos:start="65:54" pos:end="65:73">SCSW_FLAGS_MASK_ECTL</name></expr>;</expr_stmt>

            <comment type="block" pos:start="67:13" pos:end="67:54">/* Attention: sense_data is already BE! */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:70"><expr pos:start="69:13" pos:end="69:69"><call pos:start="69:13" pos:end="69:69"><name pos:start="69:13" pos:end="69:18">memcpy</name><argument_list pos:start="69:19" pos:end="69:69">(<argument pos:start="69:20" pos:end="69:26"><expr pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:22">irb</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:26">ecw</name></name></expr></argument>, <argument pos:start="69:29" pos:end="69:43"><expr pos:start="69:29" pos:end="69:43"><name pos:start="69:29" pos:end="69:43"><name pos:start="69:29" pos:end="69:31">sch</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:43">sense_data</name></name></expr></argument>, <argument pos:start="69:46" pos:end="69:68"><expr pos:start="69:46" pos:end="69:68"><sizeof pos:start="69:46" pos:end="69:68">sizeof<argument_list pos:start="69:52" pos:end="69:68">(<argument pos:start="69:53" pos:end="69:67"><expr pos:start="69:53" pos:end="69:67"><name pos:start="69:53" pos:end="69:67"><name pos:start="69:53" pos:end="69:55">sch</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:67">sense_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="71:13" pos:end="75:13">for <control pos:start="71:17" pos:end="71:53">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">i</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:48"><expr pos:start="71:25" pos:end="71:47"><name pos:start="71:25" pos:end="71:25">i</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <call pos:start="71:29" pos:end="71:47"><name pos:start="71:29" pos:end="71:38">ARRAY_SIZE</name><argument_list pos:start="71:39" pos:end="71:47">(<argument pos:start="71:40" pos:end="71:46"><expr pos:start="71:40" pos:end="71:46"><name pos:start="71:40" pos:end="71:46"><name pos:start="71:40" pos:end="71:42">irb</name><operator pos:start="71:43" pos:end="71:43">.</operator><name pos:start="71:44" pos:end="71:46">ecw</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="71:50" pos:end="71:52"><expr pos:start="71:50" pos:end="71:52"><name pos:start="71:50" pos:end="71:50">i</name><operator pos:start="71:51" pos:end="71:52">++</operator></expr></incr>)</control> <block pos:start="71:55" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:53">

                <expr_stmt pos:start="73:17" pos:end="73:53"><expr pos:start="73:17" pos:end="73:52"><name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:19">irb</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:23">ecw</name><index pos:start="73:24" pos:end="73:26">[<expr pos:start="73:25" pos:end="73:25"><name pos:start="73:25" pos:end="73:25">i</name></expr>]</index></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <call pos:start="73:30" pos:end="73:52"><name pos:start="73:30" pos:end="73:40">be32_to_cpu</name><argument_list pos:start="73:41" pos:end="73:52">(<argument pos:start="73:42" pos:end="73:51"><expr pos:start="73:42" pos:end="73:51"><name pos:start="73:42" pos:end="73:51"><name pos:start="73:42" pos:end="73:44">irb</name><operator pos:start="73:45" pos:end="73:45">.</operator><name pos:start="73:46" pos:end="73:48">ecw</name><index pos:start="73:49" pos:end="73:51">[<expr pos:start="73:50" pos:end="73:50"><name pos:start="73:50" pos:end="73:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:15">irb</name><operator pos:start="77:16" pos:end="77:16">.</operator><name pos:start="77:17" pos:end="77:19">esw</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>]</index></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <literal type="number" pos:start="77:26" pos:end="77:35">0x01000000</literal> <operator pos:start="77:37" pos:end="77:37">|</operator> <operator pos:start="77:39" pos:end="77:39">(</operator><sizeof pos:start="77:40" pos:end="77:62">sizeof<argument_list pos:start="77:46" pos:end="77:62">(<argument pos:start="77:47" pos:end="77:61"><expr pos:start="77:47" pos:end="77:61"><name pos:start="77:47" pos:end="77:61"><name pos:start="77:47" pos:end="77:49">sch</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:61">sense_data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:64" pos:end="77:65">&lt;&lt;</operator> <literal type="number" pos:start="77:67" pos:end="77:67">8</literal><operator pos:start="77:68" pos:end="77:68">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="83:5" pos:end="83:37">/* Store the irb to the guest. */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:52"><expr pos:start="85:5" pos:end="85:51"><call pos:start="85:5" pos:end="85:51"><name pos:start="85:5" pos:end="85:21">copy_irb_to_guest</name><argument_list pos:start="85:22" pos:end="85:51">(<argument pos:start="85:23" pos:end="85:32"><expr pos:start="85:23" pos:end="85:32"><name pos:start="85:23" pos:end="85:32">target_irb</name></expr></argument>, <argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><operator pos:start="85:35" pos:end="85:35">&amp;</operator><name pos:start="85:36" pos:end="85:38">irb</name></expr></argument>, <argument pos:start="85:41" pos:end="85:41"><expr pos:start="85:41" pos:end="85:41"><name pos:start="85:41" pos:end="85:41">p</name></expr></argument>, <argument pos:start="85:44" pos:end="85:50"><expr pos:start="85:44" pos:end="85:50"><name pos:start="85:44" pos:end="85:50">irb_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="89:5" pos:end="89:51">return <expr pos:start="89:12" pos:end="89:50"><operator pos:start="89:12" pos:end="89:12">(</operator><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:18">stctl</name> <operator pos:start="89:20" pos:end="89:20">&amp;</operator> <name pos:start="89:22" pos:end="89:43">SCSW_STCTL_STATUS_PEND</name><operator pos:start="89:44" pos:end="89:44">)</operator> <operator pos:start="89:46" pos:end="89:47">==</operator> <literal type="number" pos:start="89:49" pos:end="89:49">0</literal><operator pos:start="89:50" pos:end="89:50">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
