<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1200.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">cpu_x86_inject_mce</name><parameter_list pos:start="1:24" pos:end="5:38">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">cenv</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:48">bank</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">uint64_t</name></type> <name pos:start="1:60" pos:end="1:65">status</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:43">mcg_status</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">uint64_t</name></type> <name pos:start="3:55" pos:end="3:58">addr</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:73"><decl pos:start="3:61" pos:end="3:73"><type pos:start="3:61" pos:end="3:73"><name pos:start="3:61" pos:end="3:68">uint64_t</name></type> <name pos:start="3:70" pos:end="3:73">misc</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:37"><decl pos:start="5:25" pos:end="5:37"><type pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:37">broadcast</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:5">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:21">bank_num</name> <init pos:start="9:23" pos:end="9:44">= <expr pos:start="9:25" pos:end="9:44"><name pos:start="9:25" pos:end="9:37"><name pos:start="9:25" pos:end="9:28">cenv</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:37">mcg_cap</name></name> <operator pos:start="9:39" pos:end="9:39">&amp;</operator> <literal type="number" pos:start="9:41" pos:end="9:44">0xff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">CPUState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">flag</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:55">(<expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:12">bank</name> <operator pos:start="17:14" pos:end="17:15">&gt;=</operator> <name pos:start="17:17" pos:end="17:24">bank_num</name> <operator pos:start="17:26" pos:end="17:27">||</operator> <operator pos:start="17:29" pos:end="17:29">!</operator><operator pos:start="17:30" pos:end="17:30">(</operator><name pos:start="17:31" pos:end="17:36">status</name> <operator pos:start="17:38" pos:end="17:38">&amp;</operator> <name pos:start="17:40" pos:end="17:53">MCI_STATUS_VAL</name><operator pos:start="17:54" pos:end="17:54">)</operator></expr>)</condition> <block pos:start="17:57" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:17">broadcast</name></expr>)</condition> <block pos:start="25:20" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:9">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:49">(<expr pos:start="27:13" pos:end="27:48"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:48"><name pos:start="27:14" pos:end="27:42">cpu_x86_support_mca_broadcast</name><argument_list pos:start="27:43" pos:end="27:48">(<argument pos:start="27:44" pos:end="27:47"><expr pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:47">cenv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:51" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:19">

            <expr_stmt pos:start="29:13" pos:end="29:72"><expr pos:start="29:13" pos:end="29:71"><call pos:start="29:13" pos:end="29:71"><name pos:start="29:13" pos:end="29:19">fprintf</name><argument_list pos:start="29:20" pos:end="29:71">(<argument pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:26">stderr</name></expr></argument>, <argument pos:start="29:29" pos:end="29:70"><expr pos:start="29:29" pos:end="29:70"><literal type="string" pos:start="29:29" pos:end="29:70">"Current CPU does not support broadcast\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="73:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:19">kvm_enabled</name><argument_list pos:start="39:20" pos:end="39:21">()</argument_list></call></expr>)</condition> <block pos:start="39:24" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:77">

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:22">(<expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:21">broadcast</name></expr>)</condition> <block pos:start="41:24" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:34">

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:16">flag</name> <operator pos:start="43:18" pos:end="43:19">|=</operator> <name pos:start="43:21" pos:end="43:33">MCE_BROADCAST</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:77"><expr pos:start="49:9" pos:end="49:76"><call pos:start="49:9" pos:end="49:76"><name pos:start="49:9" pos:end="49:26">kvm_inject_x86_mce</name><argument_list pos:start="49:27" pos:end="49:76">(<argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">cenv</name></expr></argument>, <argument pos:start="49:34" pos:end="49:37"><expr pos:start="49:34" pos:end="49:37"><name pos:start="49:34" pos:end="49:37">bank</name></expr></argument>, <argument pos:start="49:40" pos:end="49:45"><expr pos:start="49:40" pos:end="49:45"><name pos:start="49:40" pos:end="49:45">status</name></expr></argument>, <argument pos:start="49:48" pos:end="49:57"><expr pos:start="49:48" pos:end="49:57"><name pos:start="49:48" pos:end="49:57">mcg_status</name></expr></argument>, <argument pos:start="49:60" pos:end="49:63"><expr pos:start="49:60" pos:end="49:63"><name pos:start="49:60" pos:end="49:63">addr</name></expr></argument>, <argument pos:start="49:66" pos:end="49:69"><expr pos:start="49:66" pos:end="49:69"><name pos:start="49:66" pos:end="49:69">misc</name></expr></argument>, <argument pos:start="49:72" pos:end="49:75"><expr pos:start="49:72" pos:end="49:75"><name pos:start="49:72" pos:end="49:75">flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="73:5">else <block pos:start="51:12" pos:end="73:5">{<block_content pos:start="53:9" pos:end="71:9">

        <expr_stmt pos:start="53:9" pos:end="53:72"><expr pos:start="53:9" pos:end="53:71"><call pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:27">qemu_inject_x86_mce</name><argument_list pos:start="53:28" pos:end="53:71">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">cenv</name></expr></argument>, <argument pos:start="53:35" pos:end="53:38"><expr pos:start="53:35" pos:end="53:38"><name pos:start="53:35" pos:end="53:38">bank</name></expr></argument>, <argument pos:start="53:41" pos:end="53:46"><expr pos:start="53:41" pos:end="53:46"><name pos:start="53:41" pos:end="53:46">status</name></expr></argument>, <argument pos:start="53:49" pos:end="53:58"><expr pos:start="53:49" pos:end="53:58"><name pos:start="53:49" pos:end="53:58">mcg_status</name></expr></argument>, <argument pos:start="53:61" pos:end="53:64"><expr pos:start="53:61" pos:end="53:64"><name pos:start="53:61" pos:end="53:64">addr</name></expr></argument>, <argument pos:start="53:67" pos:end="53:70"><expr pos:start="53:67" pos:end="53:70"><name pos:start="53:67" pos:end="53:70">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="71:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:21">broadcast</name></expr>)</condition> <block pos:start="55:24" pos:end="71:9">{<block_content pos:start="57:13" pos:end="69:13">

            <for pos:start="57:13" pos:end="69:13">for <control pos:start="57:17" pos:end="57:67">(<init pos:start="57:18" pos:end="57:33"><expr pos:start="57:18" pos:end="57:32"><name pos:start="57:18" pos:end="57:20">env</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:32">first_cpu</name></expr>;</init> <condition pos:start="57:35" pos:end="57:46"><expr pos:start="57:35" pos:end="57:45"><name pos:start="57:35" pos:end="57:37">env</name> <operator pos:start="57:39" pos:end="57:40">!=</operator> <name pos:start="57:42" pos:end="57:45">NULL</name></expr>;</condition> <incr pos:start="57:48" pos:end="57:66"><expr pos:start="57:48" pos:end="57:66"><name pos:start="57:48" pos:end="57:50">env</name> <operator pos:start="57:52" pos:end="57:52">=</operator> <name pos:start="57:54" pos:end="57:66"><name pos:start="57:54" pos:end="57:56">env</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:66">next_cpu</name></name></expr></incr>)</control> <block pos:start="57:69" pos:end="69:13">{<block_content pos:start="59:17" pos:end="67:77">

                <if_stmt pos:start="59:17" pos:end="63:17"><if pos:start="59:17" pos:end="63:17">if <condition pos:start="59:20" pos:end="59:32">(<expr pos:start="59:21" pos:end="59:31"><name pos:start="59:21" pos:end="59:24">cenv</name> <operator pos:start="59:26" pos:end="59:27">==</operator> <name pos:start="59:29" pos:end="59:31">env</name></expr>)</condition> <block pos:start="59:34" pos:end="63:17">{<block_content pos:start="61:21" pos:end="61:29">

                    <continue pos:start="61:21" pos:end="61:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="67:77"><expr pos:start="65:17" pos:end="67:76"><call pos:start="65:17" pos:end="67:76"><name pos:start="65:17" pos:end="65:35">qemu_inject_x86_mce</name><argument_list pos:start="65:36" pos:end="67:76">(<argument pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:39">env</name></expr></argument>, <argument pos:start="65:42" pos:end="65:42"><expr pos:start="65:42" pos:end="65:42"><literal type="number" pos:start="65:42" pos:end="65:42">1</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:74"><expr pos:start="65:45" pos:end="65:74"><name pos:start="65:45" pos:end="65:58">MCI_STATUS_VAL</name> <operator pos:start="65:60" pos:end="65:60">|</operator> <name pos:start="65:62" pos:end="65:74">MCI_STATUS_UC</name></expr></argument>,

                                    <argument pos:start="67:37" pos:end="67:69"><expr pos:start="67:37" pos:end="67:69"><name pos:start="67:37" pos:end="67:51">MCG_STATUS_MCIP</name> <operator pos:start="67:53" pos:end="67:53">|</operator> <name pos:start="67:55" pos:end="67:69">MCG_STATUS_RIPV</name></expr></argument>, <argument pos:start="67:72" pos:end="67:72"><expr pos:start="67:72" pos:end="67:72"><literal type="number" pos:start="67:72" pos:end="67:72">0</literal></expr></argument>, <argument pos:start="67:75" pos:end="67:75"><expr pos:start="67:75" pos:end="67:75"><literal type="number" pos:start="67:75" pos:end="67:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
