<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15937.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">vga_common_init</name><parameter_list pos:start="1:21" pos:end="1:57">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:35">VGACommonState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:56">vga_ram_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:17">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">v</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">b</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="33:5">for<control pos:start="9:8" pos:end="9:27">(<init pos:start="9:9" pos:end="9:14"><expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:9">i</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr>;</init><condition pos:start="9:15" pos:end="9:22"><expr pos:start="9:15" pos:end="9:21"><name pos:start="9:15" pos:end="9:15">i</name> <operator pos:start="9:17" pos:end="9:17">&lt;</operator> <literal type="number" pos:start="9:19" pos:end="9:21">256</literal></expr>;</condition> <incr pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:24">i</name><operator pos:start="9:25" pos:end="9:26">++</operator></expr></incr>)</control> <block pos:start="9:29" pos:end="33:5">{<block_content pos:start="11:9" pos:end="31:23">

        <expr_stmt pos:start="11:9" pos:end="11:14"><expr pos:start="11:9" pos:end="11:13"><name pos:start="11:9" pos:end="11:9">v</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr>;</expr_stmt>

        <for pos:start="13:9" pos:end="17:9">for<control pos:start="13:12" pos:end="13:30">(<init pos:start="13:13" pos:end="13:18"><expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:13">j</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>;</init> <condition pos:start="13:20" pos:end="13:25"><expr pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:20">j</name> <operator pos:start="13:22" pos:end="13:22">&lt;</operator> <literal type="number" pos:start="13:24" pos:end="13:24">8</literal></expr>;</condition> <incr pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:27">j</name><operator pos:start="13:28" pos:end="13:29">++</operator></expr></incr>)</control> <block pos:start="13:32" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:43">

            <expr_stmt pos:start="15:13" pos:end="15:43"><expr pos:start="15:13" pos:end="15:42"><name pos:start="15:13" pos:end="15:13">v</name> <operator pos:start="15:15" pos:end="15:16">|=</operator> <operator pos:start="15:18" pos:end="15:18">(</operator><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:20">i</name> <operator pos:start="15:22" pos:end="15:23">&gt;&gt;</operator> <name pos:start="15:25" pos:end="15:25">j</name><operator pos:start="15:26" pos:end="15:26">)</operator> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <literal type="number" pos:start="15:30" pos:end="15:30">1</literal><operator pos:start="15:31" pos:end="15:31">)</operator> <operator pos:start="15:33" pos:end="15:34">&lt;&lt;</operator> <operator pos:start="15:36" pos:end="15:36">(</operator><name pos:start="15:37" pos:end="15:37">j</name> <operator pos:start="15:39" pos:end="15:39">*</operator> <literal type="number" pos:start="15:41" pos:end="15:41">4</literal><operator pos:start="15:42" pos:end="15:42">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:15">expand4</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">i</name></expr>]</index></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:22">v</name></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">v</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="29:9">for<control pos:start="25:12" pos:end="25:30">(<init pos:start="25:13" pos:end="25:18"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:13">j</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</init> <condition pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">j</name> <operator pos:start="25:22" pos:end="25:22">&lt;</operator> <literal type="number" pos:start="25:24" pos:end="25:24">4</literal></expr>;</condition> <incr pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:27">j</name><operator pos:start="25:28" pos:end="25:29">++</operator></expr></incr>)</control> <block pos:start="25:32" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:49">

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:13">v</name> <operator pos:start="27:15" pos:end="27:16">|=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:20">i</name> <operator pos:start="27:22" pos:end="27:23">&gt;&gt;</operator> <operator pos:start="27:25" pos:end="27:25">(</operator><literal type="number" pos:start="27:26" pos:end="27:26">2</literal> <operator pos:start="27:28" pos:end="27:28">*</operator> <name pos:start="27:30" pos:end="27:30">j</name><operator pos:start="27:31" pos:end="27:31">)</operator><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">&amp;</operator> <literal type="number" pos:start="27:36" pos:end="27:36">3</literal><operator pos:start="27:37" pos:end="27:37">)</operator> <operator pos:start="27:39" pos:end="27:40">&lt;&lt;</operator> <operator pos:start="27:42" pos:end="27:42">(</operator><name pos:start="27:43" pos:end="27:43">j</name> <operator pos:start="27:45" pos:end="27:45">*</operator> <literal type="number" pos:start="27:47" pos:end="27:47">4</literal><operator pos:start="27:48" pos:end="27:48">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:15">expand2</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">i</name></expr>]</index></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:22">v</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="35:5" pos:end="56:0">for<control pos:start="35:8" pos:end="35:27">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:22"><expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <literal type="number" pos:start="35:20" pos:end="35:21">16</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control> <block pos:start="35:29" pos:end="56:0">{<block_content pos:start="37:9" pos:end="49:26">

        <expr_stmt pos:start="37:9" pos:end="37:14"><expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">v</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr>;</expr_stmt>

        <for pos:start="39:9" pos:end="47:9">for<control pos:start="39:12" pos:end="39:30">(<init pos:start="39:13" pos:end="39:18"><expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:13">j</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>;</init> <condition pos:start="39:20" pos:end="39:25"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:20">j</name> <operator pos:start="39:22" pos:end="39:22">&lt;</operator> <literal type="number" pos:start="39:24" pos:end="39:24">4</literal></expr>;</condition> <incr pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:27">j</name><operator pos:start="39:28" pos:end="39:29">++</operator></expr></incr>)</control> <block pos:start="39:32" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:34">

            <expr_stmt pos:start="41:13" pos:end="41:31"><expr pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:13">b</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">(</operator><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:19">i</name> <operator pos:start="41:21" pos:end="41:22">&gt;&gt;</operator> <name pos:start="41:24" pos:end="41:24">j</name><operator pos:start="41:25" pos:end="41:25">)</operator> <operator pos:start="41:27" pos:end="41:27">&amp;</operator> <literal type="number" pos:start="41:29" pos:end="41:29">1</literal><operator pos:start="41:30" pos:end="41:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:30"><expr pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:13">v</name> <operator pos:start="43:15" pos:end="43:16">|=</operator> <name pos:start="43:18" pos:end="43:18">b</name> <operator pos:start="43:20" pos:end="43:21">&lt;&lt;</operator> <operator pos:start="43:23" pos:end="43:23">(</operator><literal type="number" pos:start="43:24" pos:end="43:24">2</literal> <operator pos:start="43:26" pos:end="43:26">*</operator> <name pos:start="43:28" pos:end="43:28">j</name><operator pos:start="43:29" pos:end="43:29">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:13">v</name> <operator pos:start="45:15" pos:end="45:16">|=</operator> <name pos:start="45:18" pos:end="45:18">b</name> <operator pos:start="45:20" pos:end="45:21">&lt;&lt;</operator> <operator pos:start="45:23" pos:end="45:23">(</operator><literal type="number" pos:start="45:24" pos:end="45:24">2</literal> <operator pos:start="45:26" pos:end="45:26">*</operator> <name pos:start="45:28" pos:end="45:28">j</name> <operator pos:start="45:30" pos:end="45:30">+</operator> <literal type="number" pos:start="45:32" pos:end="45:32">1</literal><operator pos:start="45:33" pos:end="45:33">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:18">expand4to8</name><index pos:start="49:19" pos:end="49:21">[<expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">i</name></expr>]</index></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:25">v</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<cpp:ifdef pos:start="55:1" pos:end="55:23">#<cpp:directive pos:start="55:2" pos:end="55:6">ifdef</cpp:directive> <name pos:start="55:8" pos:end="55:23">CONFIG_BOCHS_VBE</name></cpp:ifdef>

    <expr_stmt pos:start="57:5" pos:end="60:0"><expr pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:21">is_vbe_vmstate</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:21">is_vbe_vmstate</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="65:5" pos:end="65:50"><expr pos:start="65:5" pos:end="65:49"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:18">vram_offset</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <call pos:start="65:22" pos:end="65:49"><name pos:start="65:22" pos:end="65:35">qemu_ram_alloc</name><argument_list pos:start="65:36" pos:end="65:49">(<argument pos:start="65:37" pos:end="65:48"><expr pos:start="65:37" pos:end="65:48"><name pos:start="65:37" pos:end="65:48">vga_ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:51"><expr pos:start="67:5" pos:end="67:50"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:15">vram_ptr</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:50"><name pos:start="67:19" pos:end="67:34">qemu_get_ram_ptr</name><argument_list pos:start="67:35" pos:end="67:50">(<argument pos:start="67:36" pos:end="67:49"><expr pos:start="67:36" pos:end="67:49"><name pos:start="67:36" pos:end="67:49"><name pos:start="67:36" pos:end="67:36">s</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:49">vram_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:16">vram_size</name></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:31">vga_ram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:29"><expr pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:14">get_bpp</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:28">vga_get_bpp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:18">get_offsets</name></name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:36">vga_get_offsets</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:21">get_resolution</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:42">vga_get_resolution</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:13">update</name></name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:34">vga_update_display</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:43"><expr pos:start="79:5" pos:end="79:42"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">invalidate</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:42">vga_invalidate_display</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:37"><expr pos:start="81:5" pos:end="81:36"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:18">screen_dump</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:36">vga_screen_dump</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:18">text_update</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:36">vga_update_text</name></expr>;</expr_stmt>

    <switch pos:start="85:5" pos:end="105:5">switch <condition pos:start="85:12" pos:end="85:31">(<expr pos:start="85:13" pos:end="85:30"><name pos:start="85:13" pos:end="85:30">vga_retrace_method</name></expr>)</condition> <block pos:start="85:33" pos:end="105:5">{<block_content pos:start="87:5" pos:end="103:14">

    <case pos:start="87:5" pos:end="87:26">case <expr pos:start="87:10" pos:end="87:25"><name pos:start="87:10" pos:end="87:25">VGA_RETRACE_DUMB</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">retrace</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:37">vga_dumb_retrace</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:62"><expr pos:start="91:9" pos:end="91:61"><name pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:30">update_retrace_info</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:61">vga_dumb_update_retrace_info</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>



    <case pos:start="97:5" pos:end="97:29">case <expr pos:start="97:10" pos:end="97:28"><name pos:start="97:10" pos:end="97:28">VGA_RETRACE_PRECISE</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:41"><expr pos:start="99:9" pos:end="99:40"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:18">retrace</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:40">vga_precise_retrace</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:65"><expr pos:start="101:9" pos:end="101:64"><name pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:30">update_retrace_info</name></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <name pos:start="101:34" pos:end="101:64">vga_precise_update_retrace_info</name></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="107:5" pos:end="107:17"><expr pos:start="107:5" pos:end="107:16"><call pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:13">vga_reset</name><argument_list pos:start="107:14" pos:end="107:16">(<argument pos:start="107:15" pos:end="107:15"><expr pos:start="107:15" pos:end="107:15"><name pos:start="107:15" pos:end="107:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
