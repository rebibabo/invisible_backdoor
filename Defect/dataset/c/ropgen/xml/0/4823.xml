<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4823.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">av_open_input_file</name><parameter_list pos:start="1:23" pos:end="7:46">(<parameter pos:start="1:24" pos:end="1:47"><decl pos:start="1:24" pos:end="1:47"><type pos:start="1:24" pos:end="1:47"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier><modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">ic_ptr</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:69"><decl pos:start="1:50" pos:end="1:69"><type pos:start="1:50" pos:end="1:69"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:69">filename</name></decl></parameter>, 

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:36">AVInputFormat</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">fmt</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:35"><decl pos:start="5:24" pos:end="5:35"><type pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:35">buf_size</name></decl></parameter>,

                       <parameter pos:start="7:24" pos:end="7:45"><decl pos:start="7:24" pos:end="7:45"><type pos:start="7:24" pos:end="7:45"><name pos:start="7:24" pos:end="7:41">AVFormatParameters</name> <modifier pos:start="7:43" pos:end="7:43">*</modifier></type><name pos:start="7:44" pos:end="7:45">ap</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="167:1">{<block_content pos:start="11:5" pos:end="165:15">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVFormatContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">ic</name> <init pos:start="11:25" pos:end="11:30">= <expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:12">buf</name><index pos:start="15:13" pos:end="15:28">[<expr pos:start="15:14" pos:end="15:27"><name pos:start="15:14" pos:end="15:27">PROBE_BUF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">AVProbeData</name></type> <name pos:start="17:17" pos:end="17:26">probe_data</name></decl>, <decl pos:start="17:29" pos:end="17:45"><type ref="prev" pos:start="17:5" pos:end="17:15"><modifier pos:start="17:29" pos:end="17:29">*</modifier></type><name pos:start="17:30" pos:end="17:31">pd</name> <init pos:start="17:33" pos:end="17:45">= <expr pos:start="17:35" pos:end="17:45"><operator pos:start="17:35" pos:end="17:35">&amp;</operator><name pos:start="17:36" pos:end="17:45">probe_data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:6">ic</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:19">av_mallocz</name><argument_list pos:start="21:20" pos:end="21:44">(<argument pos:start="21:21" pos:end="21:43"><expr pos:start="21:21" pos:end="21:43"><sizeof pos:start="21:21" pos:end="21:43">sizeof<argument_list pos:start="21:27" pos:end="21:43">(<argument pos:start="21:28" pos:end="21:42"><expr pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:42">AVFormatContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">ic</name></expr>)</condition> <block pos:start="23:14" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:27">AVERROR_NOMEM</name></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:11">pstrcpy</name><argument_list pos:start="31:12" pos:end="31:57">(<argument pos:start="31:13" pos:end="31:24"><expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:14">ic</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:24">filename</name></name></expr></argument>, <argument pos:start="31:27" pos:end="31:46"><expr pos:start="31:27" pos:end="31:46"><sizeof pos:start="31:27" pos:end="31:46">sizeof<argument_list pos:start="31:33" pos:end="31:46">(<argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><name pos:start="31:34" pos:end="31:45"><name pos:start="31:34" pos:end="31:35">ic</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:49" pos:end="31:56"><expr pos:start="31:49" pos:end="31:56"><name pos:start="31:49" pos:end="31:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:6">pd</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:16">filename</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:21">ic</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:31">filename</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:6">pd</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:11">buf</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:6">pd</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:16">buf_size</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:13">(<expr pos:start="41:9" pos:end="41:12"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:12">fmt</name></expr>)</condition> <block pos:start="41:15" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:40">

        <comment type="block" pos:start="43:9" pos:end="43:52">/* guess format if no file can be opened  */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:11">fmt</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:39"><name pos:start="45:15" pos:end="45:32">probe_input_format</name><argument_list pos:start="45:33" pos:end="45:39">(<argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">pd</name></expr></argument>, <argument pos:start="45:38" pos:end="45:38"><expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:50">/* if no file needed do not try to open one */</comment>

    <if_stmt pos:start="53:5" pos:end="75:5"><if pos:start="53:5" pos:end="75:5">if <condition pos:start="53:8" pos:end="53:45">(<expr pos:start="53:9" pos:end="53:44"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:12">fmt</name> <operator pos:start="53:14" pos:end="53:15">||</operator> <operator pos:start="53:17" pos:end="53:17">!</operator><operator pos:start="53:18" pos:end="53:18">(</operator><name pos:start="53:19" pos:end="53:28"><name pos:start="53:19" pos:end="53:21">fmt</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:28">flags</name></name> <operator pos:start="53:30" pos:end="53:30">&amp;</operator> <name pos:start="53:32" pos:end="53:43">AVFMT_NOFILE</name><operator pos:start="53:44" pos:end="53:44">)</operator></expr>)</condition> <block pos:start="53:47" pos:end="75:5">{<block_content pos:start="55:9" pos:end="73:40">

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:57">(<expr pos:start="55:13" pos:end="55:56"><call pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:21">url_fopen</name><argument_list pos:start="55:22" pos:end="55:52">(<argument pos:start="55:23" pos:end="55:29"><expr pos:start="55:23" pos:end="55:29"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:25">ic</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:29">pb</name></name></expr></argument>, <argument pos:start="55:32" pos:end="55:39"><expr pos:start="55:32" pos:end="55:39"><name pos:start="55:32" pos:end="55:39">filename</name></expr></argument>, <argument pos:start="55:42" pos:end="55:51"><expr pos:start="55:42" pos:end="55:51"><name pos:start="55:42" pos:end="55:51">URL_RDONLY</name></expr></argument>)</argument_list></call> <operator pos:start="55:54" pos:end="55:54">&lt;</operator> <literal type="number" pos:start="55:56" pos:end="55:56">0</literal></expr>)</condition> <block pos:start="55:59" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:22">

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:15">err</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:28">AVERROR_IO</name></expr>;</expr_stmt>

            <goto pos:start="59:13" pos:end="59:22">goto <name pos:start="59:18" pos:end="59:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:25">(<expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:20">buf_size</name> <operator pos:start="63:22" pos:end="63:22">&gt;</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>)</condition> <block pos:start="63:27" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:46">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><call pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:26">url_setbufsize</name><argument_list pos:start="65:27" pos:end="65:45">(<argument pos:start="65:28" pos:end="65:34"><expr pos:start="65:28" pos:end="65:34"><operator pos:start="65:28" pos:end="65:28">&amp;</operator><name pos:start="65:29" pos:end="65:34"><name pos:start="65:29" pos:end="65:30">ic</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:34">pb</name></name></expr></argument>, <argument pos:start="65:37" pos:end="65:44"><expr pos:start="65:37" pos:end="65:44"><name pos:start="65:37" pos:end="65:44">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:29">/* read probe data */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:64"><expr pos:start="71:9" pos:end="71:63"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:10">pd</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">buf_size</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:63"><name pos:start="71:24" pos:end="71:33">get_buffer</name><argument_list pos:start="71:34" pos:end="71:63">(<argument pos:start="71:35" pos:end="71:41"><expr pos:start="71:35" pos:end="71:41"><operator pos:start="71:35" pos:end="71:35">&amp;</operator><name pos:start="71:36" pos:end="71:41"><name pos:start="71:36" pos:end="71:37">ic</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:41">pb</name></name></expr></argument>, <argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:46">buf</name></expr></argument>, <argument pos:start="71:49" pos:end="71:62"><expr pos:start="71:49" pos:end="71:62"><name pos:start="71:49" pos:end="71:62">PROBE_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><call pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:17">url_fseek</name><argument_list pos:start="73:18" pos:end="73:39">(<argument pos:start="73:19" pos:end="73:25"><expr pos:start="73:19" pos:end="73:25"><operator pos:start="73:19" pos:end="73:19">&amp;</operator><name pos:start="73:20" pos:end="73:25"><name pos:start="73:20" pos:end="73:21">ic</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:25">pb</name></name></expr></argument>, <argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">0</literal></expr></argument>, <argument pos:start="73:31" pos:end="73:38"><expr pos:start="73:31" pos:end="73:38"><name pos:start="73:31" pos:end="73:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="79:5" pos:end="79:27">/* guess file format */</comment>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:13">(<expr pos:start="81:9" pos:end="81:12"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:12">fmt</name></expr>)</condition> <block pos:start="81:15" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:40">

        <expr_stmt pos:start="83:9" pos:end="83:40"><expr pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:11">fmt</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:39"><name pos:start="83:15" pos:end="83:32">probe_input_format</name><argument_list pos:start="83:33" pos:end="83:39">(<argument pos:start="83:34" pos:end="83:35"><expr pos:start="83:34" pos:end="83:35"><name pos:start="83:34" pos:end="83:35">pd</name></expr></argument>, <argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><literal type="number" pos:start="83:38" pos:end="83:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:41">/* if still no format found, error */</comment>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:12">fmt</name></expr>)</condition> <block pos:start="91:15" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:11">err</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <name pos:start="93:15" pos:end="93:27">AVERROR_NOFMT</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

        

    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:6">ic</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:15">iformat</name></name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:21">fmt</name></expr>;</expr_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:31">/* allocate private data */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:52"><expr pos:start="107:5" pos:end="107:51"><name pos:start="107:5" pos:end="107:17"><name pos:start="107:5" pos:end="107:6">ic</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:17">priv_data</name></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <call pos:start="107:21" pos:end="107:51"><name pos:start="107:21" pos:end="107:30">av_mallocz</name><argument_list pos:start="107:31" pos:end="107:51">(<argument pos:start="107:32" pos:end="107:50"><expr pos:start="107:32" pos:end="107:50"><name pos:start="107:32" pos:end="107:50"><name pos:start="107:32" pos:end="107:34">fmt</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:50">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:23">(<expr pos:start="109:9" pos:end="109:22"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:22"><name pos:start="109:10" pos:end="109:11">ic</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:22">priv_data</name></name></expr>)</condition> <block pos:start="109:25" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:18">

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:11">err</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:27">AVERROR_NOMEM</name></expr>;</expr_stmt>

        <goto pos:start="113:9" pos:end="113:18">goto <name pos:start="113:14" pos:end="113:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:63">/* check filename in case of an image number is expected */</comment>

    <if_stmt pos:start="121:5" pos:end="131:5"><if pos:start="121:5" pos:end="131:5">if <condition pos:start="121:8" pos:end="121:46">(<expr pos:start="121:9" pos:end="121:45"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:10">ic</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:19">iformat</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:26">flags</name></name> <operator pos:start="121:28" pos:end="121:28">&amp;</operator> <name pos:start="121:30" pos:end="121:45">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="121:48" pos:end="131:5">{<block_content pos:start="123:9" pos:end="129:9">

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:51">(<expr pos:start="123:13" pos:end="123:50"><call pos:start="123:13" pos:end="123:46"><name pos:start="123:13" pos:end="123:32">filename_number_test</name><argument_list pos:start="123:33" pos:end="123:46">(<argument pos:start="123:34" pos:end="123:45"><expr pos:start="123:34" pos:end="123:45"><name pos:start="123:34" pos:end="123:45"><name pos:start="123:34" pos:end="123:35">ic</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:45">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:48" pos:end="123:48">&lt;</operator> <literal type="number" pos:start="123:50" pos:end="123:50">0</literal></expr>)</condition> <block pos:start="123:53" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:23"> 

            <expr_stmt pos:start="125:13" pos:end="125:38"><expr pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:15">err</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:37">AVERROR_NUMEXPECTED</name></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:23">goto <name pos:start="127:18" pos:end="127:22">fail1</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="135:5" pos:end="135:43"><expr pos:start="135:5" pos:end="135:42"><name pos:start="135:5" pos:end="135:7">err</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <call pos:start="135:11" pos:end="135:42"><name pos:start="135:11" pos:end="135:34"><name pos:start="135:11" pos:end="135:12">ic</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:21">iformat</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:34">read_header</name></name><argument_list pos:start="135:35" pos:end="135:42">(<argument pos:start="135:36" pos:end="135:37"><expr pos:start="135:36" pos:end="135:37"><name pos:start="135:36" pos:end="135:37">ic</name></expr></argument>, <argument pos:start="135:40" pos:end="135:41"><expr pos:start="135:40" pos:end="135:41"><name pos:start="135:40" pos:end="135:41">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="139:19"><if pos:start="137:5" pos:end="139:19">if <condition pos:start="137:8" pos:end="137:16">(<expr pos:start="137:9" pos:end="137:15"><name pos:start="137:9" pos:end="137:11">err</name> <operator pos:start="137:13" pos:end="137:13">&lt;</operator> <literal type="number" pos:start="137:15" pos:end="137:15">0</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:19"><block_content pos:start="139:9" pos:end="139:19">

        <goto pos:start="139:9" pos:end="139:19">goto <name pos:start="139:14" pos:end="139:18">fail1</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:17"><expr pos:start="141:5" pos:end="141:16"><operator pos:start="141:5" pos:end="141:5">*</operator><name pos:start="141:6" pos:end="141:11">ic_ptr</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <name pos:start="141:15" pos:end="141:16">ic</name></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

 <label pos:start="145:2" pos:end="145:7"><name pos:start="145:2" pos:end="145:6">fail1</name>:</label>

    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:37">(<expr pos:start="147:9" pos:end="147:36"><operator pos:start="147:9" pos:end="147:9">!</operator><operator pos:start="147:10" pos:end="147:10">(</operator><name pos:start="147:11" pos:end="147:20"><name pos:start="147:11" pos:end="147:13">fmt</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:20">flags</name></name> <operator pos:start="147:22" pos:end="147:22">&amp;</operator> <name pos:start="147:24" pos:end="147:35">AVFMT_NOFILE</name><operator pos:start="147:36" pos:end="147:36">)</operator></expr>)</condition> <block pos:start="147:39" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:28">

        <expr_stmt pos:start="149:9" pos:end="149:28"><expr pos:start="149:9" pos:end="149:27"><call pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:18">url_fclose</name><argument_list pos:start="149:19" pos:end="149:27">(<argument pos:start="149:20" pos:end="149:26"><expr pos:start="149:20" pos:end="149:26"><operator pos:start="149:20" pos:end="149:20">&amp;</operator><name pos:start="149:21" pos:end="149:26"><name pos:start="149:21" pos:end="149:22">ic</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

 <label pos:start="153:2" pos:end="153:6"><name pos:start="153:2" pos:end="153:5">fail</name>:</label>

    <if_stmt pos:start="155:5" pos:end="159:5"><if pos:start="155:5" pos:end="159:5">if <condition pos:start="155:8" pos:end="155:11">(<expr pos:start="155:9" pos:end="155:10"><name pos:start="155:9" pos:end="155:10">ic</name></expr>)</condition> <block pos:start="155:13" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:31">

        <expr_stmt pos:start="157:9" pos:end="157:31"><expr pos:start="157:9" pos:end="157:30"><call pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:15">av_free</name><argument_list pos:start="157:16" pos:end="157:30">(<argument pos:start="157:17" pos:end="157:29"><expr pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:18">ic</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:29">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:16"><expr pos:start="161:5" pos:end="161:15"><call pos:start="161:5" pos:end="161:15"><name pos:start="161:5" pos:end="161:11">av_free</name><argument_list pos:start="161:12" pos:end="161:15">(<argument pos:start="161:13" pos:end="161:14"><expr pos:start="161:13" pos:end="161:14"><name pos:start="161:13" pos:end="161:14">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:19"><expr pos:start="163:5" pos:end="163:18"><operator pos:start="163:5" pos:end="163:5">*</operator><name pos:start="163:6" pos:end="163:11">ic_ptr</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <name pos:start="163:15" pos:end="163:18">NULL</name></expr>;</expr_stmt>

    <return pos:start="165:5" pos:end="165:15">return <expr pos:start="165:12" pos:end="165:14"><name pos:start="165:12" pos:end="165:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
