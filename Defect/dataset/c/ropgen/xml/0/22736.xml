<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22736.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">bdrv_set_backing_hd</name><parameter_list pos:start="1:25" pos:end="1:76">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:75"><decl pos:start="1:48" pos:end="1:75"><type pos:start="1:48" pos:end="1:75"><name pos:start="1:48" pos:end="1:63">BlockDriverState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:75">backing_hd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:34">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:18">backing_hd</name></expr>)</condition> <block pos:start="5:21" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:29">

        <expr_stmt pos:start="7:9" pos:end="7:29"><expr pos:start="7:9" pos:end="7:28"><call pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:16">bdrv_ref</name><argument_list pos:start="7:17" pos:end="7:28">(<argument pos:start="7:18" pos:end="7:27"><expr pos:start="7:18" pos:end="7:27"><name pos:start="7:18" pos:end="7:27">backing_hd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:10">bs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:19">backing</name></name></expr>)</condition> <block pos:start="13:22" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:42">

        <expr_stmt pos:start="15:9" pos:end="15:36"><expr pos:start="15:9" pos:end="15:35"><call pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:14">assert</name><argument_list pos:start="15:15" pos:end="15:35">(<argument pos:start="15:16" pos:end="15:34"><expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:17">bs</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:34">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:66"><expr pos:start="17:9" pos:end="17:65"><call pos:start="17:9" pos:end="17:65"><name pos:start="17:9" pos:end="17:27">bdrv_op_unblock_all</name><argument_list pos:start="17:28" pos:end="17:65">(<argument pos:start="17:29" pos:end="17:43"><expr pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:43"><name pos:start="17:29" pos:end="17:30">bs</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:39">backing</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:43">bs</name></name></expr></argument>, <argument pos:start="17:46" pos:end="17:64"><expr pos:start="17:46" pos:end="17:64"><name pos:start="17:46" pos:end="17:64"><name pos:start="17:46" pos:end="17:47">bs</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:64">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:24">bdrv_unref_child</name><argument_list pos:start="19:25" pos:end="19:41">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><name pos:start="19:26" pos:end="19:27">bs</name></expr></argument>, <argument pos:start="19:30" pos:end="19:40"><expr pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:31">bs</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:40">backing</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="29:5">else if <condition pos:start="21:15" pos:end="21:26">(<expr pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:25">backing_hd</name></expr>)</condition> <block pos:start="21:28" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:53">

        <expr_stmt pos:start="23:9" pos:end="27:53"><expr pos:start="23:9" pos:end="27:52"><call pos:start="23:9" pos:end="27:52"><name pos:start="23:9" pos:end="23:18">error_setg</name><argument_list pos:start="23:19" pos:end="27:52">(<argument pos:start="23:20" pos:end="23:39"><expr pos:start="23:20" pos:end="23:39"><operator pos:start="23:20" pos:end="23:20">&amp;</operator><name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:22">bs</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:39">backing_blocker</name></name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:55"><expr pos:start="25:20" pos:end="25:55"><literal type="string" pos:start="25:20" pos:end="25:55">"node is used as backing hd of '%s'"</literal></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:51"><expr pos:start="27:20" pos:end="27:51"><call pos:start="27:20" pos:end="27:51"><name pos:start="27:20" pos:end="27:47">bdrv_get_device_or_node_name</name><argument_list pos:start="27:48" pos:end="27:51">(<argument pos:start="27:49" pos:end="27:50"><expr pos:start="27:49" pos:end="27:50"><name pos:start="27:49" pos:end="27:50">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:19">backing_hd</name></expr>)</condition> <block pos:start="33:22" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:17">

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><call pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:18">error_free</name><argument_list pos:start="35:19" pos:end="35:39">(<argument pos:start="35:20" pos:end="35:38"><expr pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:21">bs</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:38">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:10">bs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:27">backing_blocker</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:34">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:10">bs</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:19">backing</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:26">NULL</name></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:68"><expr pos:start="45:5" pos:end="45:67"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">bs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">backing</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:67"><name pos:start="45:19" pos:end="45:35">bdrv_attach_child</name><argument_list pos:start="45:36" pos:end="45:67">(<argument pos:start="45:37" pos:end="45:38"><expr pos:start="45:37" pos:end="45:38"><name pos:start="45:37" pos:end="45:38">bs</name></expr></argument>, <argument pos:start="45:41" pos:end="45:50"><expr pos:start="45:41" pos:end="45:50"><name pos:start="45:41" pos:end="45:50">backing_hd</name></expr></argument>, <argument pos:start="45:53" pos:end="45:66"><expr pos:start="45:53" pos:end="45:66"><operator pos:start="45:53" pos:end="45:53">&amp;</operator><name pos:start="45:54" pos:end="45:66">child_backing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:6">bs</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:18">open_flags</name></name> <operator pos:start="47:20" pos:end="47:21">&amp;=</operator> <operator pos:start="47:23" pos:end="47:23">~</operator><name pos:start="47:24" pos:end="47:40">BDRV_O_NO_BACKING</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:78"><expr pos:start="49:5" pos:end="49:77"><call pos:start="49:5" pos:end="49:77"><name pos:start="49:5" pos:end="49:11">pstrcpy</name><argument_list pos:start="49:12" pos:end="49:77">(<argument pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:14">bs</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:28">backing_file</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:54"><expr pos:start="49:31" pos:end="49:54"><sizeof pos:start="49:31" pos:end="49:54">sizeof<argument_list pos:start="49:37" pos:end="49:54">(<argument pos:start="49:38" pos:end="49:53"><expr pos:start="49:38" pos:end="49:53"><name pos:start="49:38" pos:end="49:53"><name pos:start="49:38" pos:end="49:39">bs</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:53">backing_file</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:57" pos:end="49:76"><expr pos:start="49:57" pos:end="49:76"><name pos:start="49:57" pos:end="49:76"><name pos:start="49:57" pos:end="49:66">backing_hd</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:76">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:65"><expr pos:start="51:5" pos:end="53:64"><call pos:start="51:5" pos:end="53:64"><name pos:start="51:5" pos:end="51:11">pstrcpy</name><argument_list pos:start="51:12" pos:end="53:64">(<argument pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:14">bs</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:30">backing_format</name></name></expr></argument>, <argument pos:start="51:33" pos:end="51:58"><expr pos:start="51:33" pos:end="51:58"><sizeof pos:start="51:33" pos:end="51:58">sizeof<argument_list pos:start="51:39" pos:end="51:58">(<argument pos:start="51:40" pos:end="51:57"><expr pos:start="51:40" pos:end="51:57"><name pos:start="51:40" pos:end="51:57"><name pos:start="51:40" pos:end="51:41">bs</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:57">backing_format</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="53:13" pos:end="53:63"><expr pos:start="53:13" pos:end="53:63"><ternary pos:start="53:13" pos:end="53:63"><condition pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:22">backing_hd</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">drv</name></name></expr> ?</condition><then pos:start="53:31" pos:end="53:58"> <expr pos:start="53:31" pos:end="53:58"><name pos:start="53:31" pos:end="53:58"><name pos:start="53:31" pos:end="53:40">backing_hd</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:45">drv</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:58">format_name</name></name></expr> </then><else pos:start="53:60" pos:end="53:63">: <expr pos:start="53:62" pos:end="53:63"><literal type="string" pos:start="53:62" pos:end="53:63">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:55"><expr pos:start="57:5" pos:end="57:54"><call pos:start="57:5" pos:end="57:54"><name pos:start="57:5" pos:end="57:21">bdrv_op_block_all</name><argument_list pos:start="57:22" pos:end="57:54">(<argument pos:start="57:23" pos:end="57:32"><expr pos:start="57:23" pos:end="57:32"><name pos:start="57:23" pos:end="57:32">backing_hd</name></expr></argument>, <argument pos:start="57:35" pos:end="57:53"><expr pos:start="57:35" pos:end="57:53"><name pos:start="57:35" pos:end="57:53"><name pos:start="57:35" pos:end="57:36">bs</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:53">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:74">/* Otherwise we won't be able to commit due to check in bdrv_commit */</comment>

    <expr_stmt pos:start="61:5" pos:end="63:41"><expr pos:start="61:5" pos:end="63:40"><call pos:start="61:5" pos:end="63:40"><name pos:start="61:5" pos:end="61:19">bdrv_op_unblock</name><argument_list pos:start="61:20" pos:end="63:40">(<argument pos:start="61:21" pos:end="61:30"><expr pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:30">backing_hd</name></expr></argument>, <argument pos:start="61:33" pos:end="61:59"><expr pos:start="61:33" pos:end="61:59"><name pos:start="61:33" pos:end="61:59">BLOCK_OP_TYPE_COMMIT_TARGET</name></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:39"><expr pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:22">bs</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:39">backing_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="65:1" pos:end="65:4"><name pos:start="65:1" pos:end="65:3">out</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><call pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:23">bdrv_refresh_limits</name><argument_list pos:start="67:24" pos:end="67:33">(<argument pos:start="67:25" pos:end="67:26"><expr pos:start="67:25" pos:end="67:26"><name pos:start="67:25" pos:end="67:26">bs</name></expr></argument>, <argument pos:start="67:29" pos:end="67:32"><expr pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
