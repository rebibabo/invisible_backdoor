<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13443.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">ff_h263_resync</name><parameter_list pos:start="1:19" pos:end="1:37">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:33">MpegEncContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>)</parameter_list><block pos:start="1:38" pos:end="77:1">{<block_content pos:start="3:5" pos:end="75:14">

    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:12"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:12">left</name></decl>, <decl pos:start="3:15" pos:end="3:17"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:17">ret</name></decl>;</decl_stmt>

    

    <if_stmt pos:start="7:5" pos:end="9:27"><if pos:start="7:5" pos:end="9:27">if<condition pos:start="7:7" pos:end="7:35">(<expr pos:start="7:8" pos:end="7:34"><name pos:start="7:8" pos:end="7:18"><name pos:start="7:8" pos:end="7:8">s</name><operator pos:start="7:9" pos:end="7:10">-&gt;</operator><name pos:start="7:11" pos:end="7:18">codec_id</name></name><operator pos:start="7:19" pos:end="7:20">==</operator><name pos:start="7:21" pos:end="7:34">CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:27"><block_content pos:start="9:9" pos:end="9:27">

        <expr_stmt pos:start="9:9" pos:end="9:27"><expr pos:start="9:9" pos:end="9:26"><call pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:18">skip_bits1</name><argument_list pos:start="9:19" pos:end="9:26">(<argument pos:start="9:20" pos:end="9:25"><expr pos:start="9:20" pos:end="9:25"><operator pos:start="9:20" pos:end="9:20">&amp;</operator><name pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:18">align_get_bits</name><argument_list pos:start="13:19" pos:end="13:26">(<argument pos:start="13:20" pos:end="13:25"><expr pos:start="13:20" pos:end="13:25"><operator pos:start="13:20" pos:end="13:20">&amp;</operator><name pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if<condition pos:start="17:7" pos:end="17:32">(<expr pos:start="17:8" pos:end="17:31"><call pos:start="17:8" pos:end="17:28"><name pos:start="17:8" pos:end="17:16">show_bits</name><argument_list pos:start="17:17" pos:end="17:28">(<argument pos:start="17:18" pos:end="17:23"><expr pos:start="17:18" pos:end="17:23"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:23"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:23">gb</name></name></expr></argument>, <argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><literal type="number" pos:start="17:26" pos:end="17:27">16</literal></expr></argument>)</argument_list></call><operator pos:start="17:29" pos:end="17:30">==</operator><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr>)</condition><block pos:start="17:33" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:21">

        <if_stmt pos:start="19:9" pos:end="25:43"><if pos:start="19:9" pos:end="21:53">if<condition pos:start="19:11" pos:end="19:39">(<expr pos:start="19:12" pos:end="19:38"><name pos:start="19:12" pos:end="19:22"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:22">codec_id</name></name><operator pos:start="19:23" pos:end="19:24">==</operator><name pos:start="19:25" pos:end="19:38">CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:53"><block_content pos:start="21:13" pos:end="21:53">

            <expr_stmt pos:start="21:13" pos:end="21:53"><expr pos:start="21:13" pos:end="21:52"><name pos:start="21:13" pos:end="21:15">ret</name><operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:52"><name pos:start="21:18" pos:end="21:49">mpeg4_decode_video_packet_header</name><argument_list pos:start="21:50" pos:end="21:52">(<argument pos:start="21:51" pos:end="21:51"><expr pos:start="21:51" pos:end="21:51"><name pos:start="21:51" pos:end="21:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="23:9" pos:end="25:43">else<block type="pseudo" pos:start="25:13" pos:end="25:43"><block_content pos:start="25:13" pos:end="25:43">

            <expr_stmt pos:start="25:13" pos:end="25:43"><expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:15">ret</name><operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:42"><name pos:start="25:18" pos:end="25:39">h263_decode_gob_header</name><argument_list pos:start="25:40" pos:end="25:42">(<argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if<condition pos:start="27:11" pos:end="27:18">(<expr pos:start="27:12" pos:end="27:17"><name pos:start="27:12" pos:end="27:14">ret</name><operator pos:start="27:15" pos:end="27:16">&gt;=</operator><literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="33:5" pos:end="33:46">//ok, its not where its supposed to be ...</comment>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:9">gb</name></name><operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:28">last_resync_gb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><call pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:18">align_get_bits</name><argument_list pos:start="37:19" pos:end="37:26">(<argument pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:25"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:8">left</name><operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:20"><name pos:start="39:11" pos:end="39:11">s</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:15">gb</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:20">size</name></name><operator pos:start="39:21" pos:end="39:21">*</operator><literal type="number" pos:start="39:22" pos:end="39:24">8</literal> <operator pos:start="39:24" pos:end="39:24">-</operator> <call pos:start="39:26" pos:end="39:47"><name pos:start="39:26" pos:end="39:39">get_bits_count</name><argument_list pos:start="39:40" pos:end="39:47">(<argument pos:start="39:41" pos:end="39:46"><expr pos:start="39:41" pos:end="39:46"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:42">s</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <for pos:start="43:5" pos:end="71:5">for<control pos:start="43:8" pos:end="43:32">(<init pos:start="43:9" pos:end="43:9">;</init><condition pos:start="43:10" pos:end="43:23"><expr pos:start="43:10" pos:end="43:22"><name pos:start="43:10" pos:end="43:13">left</name><operator pos:start="43:14" pos:end="43:14">&gt;</operator><literal type="number" pos:start="43:15" pos:end="43:17">16</literal><operator pos:start="43:17" pos:end="43:17">+</operator><literal type="number" pos:start="43:18" pos:end="43:19">1</literal><operator pos:start="43:19" pos:end="43:19">+</operator><literal type="number" pos:start="43:20" pos:end="43:21">5</literal><operator pos:start="43:21" pos:end="43:21">+</operator><literal type="number" pos:start="43:22" pos:end="43:22">5</literal></expr>;</condition> <incr pos:start="43:25" pos:end="43:31"><expr pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:28">left</name><operator pos:start="43:29" pos:end="43:30">-=</operator><literal type="number" pos:start="43:31" pos:end="43:31">8</literal></expr></incr>)</control><block pos:start="43:33" pos:end="71:5">{<block_content pos:start="45:9" pos:end="69:29"> 

        <if_stmt pos:start="45:9" pos:end="67:9"><if pos:start="45:9" pos:end="67:9">if<condition pos:start="45:11" pos:end="45:36">(<expr pos:start="45:12" pos:end="45:35"><call pos:start="45:12" pos:end="45:32"><name pos:start="45:12" pos:end="45:20">show_bits</name><argument_list pos:start="45:21" pos:end="45:32">(<argument pos:start="45:22" pos:end="45:27"><expr pos:start="45:22" pos:end="45:27"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:27">gb</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><literal type="number" pos:start="45:30" pos:end="45:31">16</literal></expr></argument>)</argument_list></call><operator pos:start="45:33" pos:end="45:34">==</operator><literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr>)</condition><block pos:start="45:37" pos:end="67:9">{<block_content pos:start="47:13" pos:end="65:23">

            <decl_stmt pos:start="47:13" pos:end="47:37"><decl pos:start="47:13" pos:end="47:36"><type pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:25">GetBitContext</name></type> <name pos:start="47:27" pos:end="47:29">bak</name><init pos:start="47:30" pos:end="47:36">= <expr pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:32">s</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:36">gb</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="51:13" pos:end="57:47"><if pos:start="51:13" pos:end="53:57">if<condition pos:start="51:15" pos:end="51:43">(<expr pos:start="51:16" pos:end="51:42"><name pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:26">codec_id</name></name><operator pos:start="51:27" pos:end="51:28">==</operator><name pos:start="51:29" pos:end="51:42">CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:57"><block_content pos:start="53:17" pos:end="53:57">

                <expr_stmt pos:start="53:17" pos:end="53:57"><expr pos:start="53:17" pos:end="53:56"><name pos:start="53:17" pos:end="53:19">ret</name><operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:56"><name pos:start="53:22" pos:end="53:53">mpeg4_decode_video_packet_header</name><argument_list pos:start="53:54" pos:end="53:56">(<argument pos:start="53:55" pos:end="53:55"><expr pos:start="53:55" pos:end="53:55"><name pos:start="53:55" pos:end="53:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="55:13" pos:end="57:47">else<block type="pseudo" pos:start="57:17" pos:end="57:47"><block_content pos:start="57:17" pos:end="57:47">

                <expr_stmt pos:start="57:17" pos:end="57:47"><expr pos:start="57:17" pos:end="57:46"><name pos:start="57:17" pos:end="57:19">ret</name><operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:46"><name pos:start="57:22" pos:end="57:43">h263_decode_gob_header</name><argument_list pos:start="57:44" pos:end="57:46">(<argument pos:start="57:45" pos:end="57:45"><expr pos:start="57:45" pos:end="57:45"><name pos:start="57:45" pos:end="57:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="59:13" pos:end="61:25"><if pos:start="59:13" pos:end="61:25">if<condition pos:start="59:15" pos:end="59:22">(<expr pos:start="59:16" pos:end="59:21"><name pos:start="59:16" pos:end="59:18">ret</name><operator pos:start="59:19" pos:end="59:20">&gt;=</operator><literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:25"><block_content pos:start="61:17" pos:end="61:25">

                <return pos:start="61:17" pos:end="61:25">return <expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:23"><expr pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:17">gb</name></name><operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:22">bak</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><call pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:17">skip_bits</name><argument_list pos:start="69:18" pos:end="69:28">(<argument pos:start="69:19" pos:end="69:24"><expr pos:start="69:19" pos:end="69:24"><operator pos:start="69:19" pos:end="69:19">&amp;</operator><name pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:24">gb</name></name></expr></argument>, <argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    

    <return pos:start="75:5" pos:end="75:14">return <expr pos:start="75:12" pos:end="75:13"><operator pos:start="75:12" pos:end="75:12">-</operator><literal type="number" pos:start="75:13" pos:end="75:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
