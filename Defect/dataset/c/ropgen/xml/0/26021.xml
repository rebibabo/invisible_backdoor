<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26021.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">ParallelState</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:31">parallel_mm_init</name><parameter_list pos:start="1:32" pos:end="1:106">(<parameter pos:start="1:33" pos:end="1:55"><decl pos:start="1:33" pos:end="1:55"><type pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:50">target_phys_addr_t</name></type> <name pos:start="1:52" pos:end="1:55">base</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:69">it_shift</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:83"><decl pos:start="1:72" pos:end="1:83"><type pos:start="1:72" pos:end="1:83"><name pos:start="1:72" pos:end="1:79">qemu_irq</name></type> <name pos:start="1:81" pos:end="1:83">irq</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:105"><decl pos:start="1:86" pos:end="1:105"><type pos:start="1:86" pos:end="1:105"><name pos:start="1:86" pos:end="1:100">CharDriverState</name> <modifier pos:start="1:102" pos:end="1:102">*</modifier></type><name pos:start="1:103" pos:end="1:105">chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ParallelState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">io_sw</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:20">qemu_mallocz</name><argument_list pos:start="11:21" pos:end="11:43">(<argument pos:start="11:22" pos:end="11:42"><expr pos:start="11:22" pos:end="11:42"><sizeof pos:start="11:22" pos:end="11:42">sizeof<argument_list pos:start="11:28" pos:end="11:42">(<argument pos:start="11:29" pos:end="11:41"><expr pos:start="11:29" pos:end="11:41"><name pos:start="11:29" pos:end="11:41">ParallelState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:10">irq</name></name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">chr</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:16">chr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:15">it_shift</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:26">it_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:23">qemu_register_reset</name><argument_list pos:start="19:24" pos:end="19:42">(<argument pos:start="19:25" pos:end="19:38"><expr pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:38">parallel_reset</name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:60"><expr pos:start="23:5" pos:end="25:59"><name pos:start="23:5" pos:end="23:9">io_sw</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="25:59"><name pos:start="23:13" pos:end="23:34">cpu_register_io_memory</name><argument_list pos:start="23:35" pos:end="25:59">(<argument pos:start="23:36" pos:end="23:54"><expr pos:start="23:36" pos:end="23:54"><name pos:start="23:36" pos:end="23:54">parallel_mm_read_sw</name></expr></argument>, <argument pos:start="23:57" pos:end="23:76"><expr pos:start="23:57" pos:end="23:76"><name pos:start="23:57" pos:end="23:76">parallel_mm_write_sw</name></expr></argument>,

                                   <argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">s</name></expr></argument>, <argument pos:start="25:39" pos:end="25:58"><expr pos:start="25:39" pos:end="25:58"><name pos:start="25:39" pos:end="25:58">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:61"><expr pos:start="27:5" pos:end="27:60"><call pos:start="27:5" pos:end="27:60"><name pos:start="27:5" pos:end="27:32">cpu_register_physical_memory</name><argument_list pos:start="27:33" pos:end="27:60">(<argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">base</name></expr></argument>, <argument pos:start="27:40" pos:end="27:52"><expr pos:start="27:40" pos:end="27:52"><literal type="number" pos:start="27:40" pos:end="27:40">8</literal> <operator pos:start="27:42" pos:end="27:43">&lt;&lt;</operator> <name pos:start="27:45" pos:end="27:52">it_shift</name></expr></argument>, <argument pos:start="27:55" pos:end="27:59"><expr pos:start="27:55" pos:end="27:59"><name pos:start="27:55" pos:end="27:59">io_sw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><name pos:start="29:12" pos:end="29:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
