<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/997.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:17">url_fseek</name><parameter_list pos:start="1:18" pos:end="1:63">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:31">ByteIOContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:43">int64_t</name></type> <name pos:start="1:45" pos:end="1:50">offset</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">whence</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:19">offset1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">force</name> <init pos:start="9:15" pos:end="9:37">= <expr pos:start="9:17" pos:end="9:37"><name pos:start="9:17" pos:end="9:22">whence</name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:37">AVSEEK_FORCE</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:10">whence</name> <operator pos:start="11:12" pos:end="11:13">&amp;=</operator> <operator pos:start="11:15" pos:end="11:15">~</operator><name pos:start="11:16" pos:end="11:27">AVSEEK_FORCE</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if<condition pos:start="15:7" pos:end="15:10">(<expr pos:start="15:8" pos:end="15:9"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:9">s</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:7">pos</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:16"><name pos:start="21:11" pos:end="21:11">s</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">pos</name></name> <operator pos:start="21:18" pos:end="21:18">-</operator> <operator pos:start="21:20" pos:end="21:20">(</operator><ternary pos:start="21:21" pos:end="21:64"><condition pos:start="21:21" pos:end="21:35"><expr pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">write_flag</name></name></expr> ?</condition><then pos:start="21:37" pos:end="21:37"> <expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">0</literal></expr> </then><else pos:start="21:39" pos:end="21:64">: <expr pos:start="21:41" pos:end="21:64"><operator pos:start="21:41" pos:end="21:41">(</operator><name pos:start="21:42" pos:end="21:51"><name pos:start="21:42" pos:end="21:42">s</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:51">buf_end</name></name> <operator pos:start="21:53" pos:end="21:53">-</operator> <name pos:start="21:55" pos:end="21:63"><name pos:start="21:55" pos:end="21:55">s</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:63">buffer</name></name><operator pos:start="21:64" pos:end="21:64">)</operator></expr></else></ternary><operator pos:start="21:65" pos:end="21:65">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:14">whence</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <name pos:start="25:19" pos:end="25:26">SEEK_CUR</name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <name pos:start="25:31" pos:end="25:36">whence</name> <operator pos:start="25:38" pos:end="25:39">!=</operator> <name pos:start="25:41" pos:end="25:48">SEEK_SET</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:14">whence</name> <operator pos:start="31:16" pos:end="31:17">==</operator> <name pos:start="31:19" pos:end="31:26">SEEK_CUR</name></expr>)</condition> <block pos:start="31:29" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:26">

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:15">offset1</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:21">pos</name> <operator pos:start="33:23" pos:end="33:23">+</operator> <operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:35"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:35">buf_ptr</name></name> <operator pos:start="33:37" pos:end="33:37">-</operator> <name pos:start="33:39" pos:end="33:47"><name pos:start="33:39" pos:end="33:39">s</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:47">buffer</name></name><operator pos:start="33:48" pos:end="33:48">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:27"><if pos:start="35:9" pos:end="37:27">if <condition pos:start="35:12" pos:end="35:24">(<expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:18">offset</name> <operator pos:start="35:20" pos:end="35:21">==</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:27"><block_content pos:start="37:13" pos:end="37:27">

            <return pos:start="37:13" pos:end="37:27">return <expr pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:26">offset1</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:14">offset</name> <operator pos:start="39:16" pos:end="39:17">+=</operator> <name pos:start="39:19" pos:end="39:25">offset1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:11">offset1</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:20">offset</name> <operator pos:start="43:22" pos:end="43:22">-</operator> <name pos:start="43:24" pos:end="43:26">pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="97:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="47:60">(<expr pos:start="45:9" pos:end="47:59"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:10">s</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:22">must_flush</name></name> <operator pos:start="45:24" pos:end="45:25">&amp;&amp;</operator>

        <name pos:start="47:9" pos:end="47:15">offset1</name> <operator pos:start="47:17" pos:end="47:18">&gt;=</operator> <literal type="number" pos:start="47:20" pos:end="47:20">0</literal> <operator pos:start="47:22" pos:end="47:23">&amp;&amp;</operator> <name pos:start="47:25" pos:end="47:31">offset1</name> <operator pos:start="47:33" pos:end="47:34">&lt;=</operator> <operator pos:start="47:36" pos:end="47:36">(</operator><name pos:start="47:37" pos:end="47:46"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:46">buf_end</name></name> <operator pos:start="47:48" pos:end="47:48">-</operator> <name pos:start="47:50" pos:end="47:58"><name pos:start="47:50" pos:end="47:50">s</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:58">buffer</name></name><operator pos:start="47:59" pos:end="47:59">)</operator></expr>)</condition> <block pos:start="47:62" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:41">

        <comment type="block" pos:start="49:9" pos:end="49:47">/* can do the seek inside the buffer */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">buf_ptr</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:30">buffer</name></name> <operator pos:start="51:32" pos:end="51:32">+</operator> <name pos:start="51:34" pos:end="51:40">offset1</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="67:5">else if<condition pos:start="53:14" pos:end="55:44">(<expr pos:start="53:15" pos:end="55:43"><name pos:start="53:15" pos:end="53:28"><name pos:start="53:15" pos:end="53:15">s</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:28">is_streamed</name></name> <operator pos:start="53:30" pos:end="53:31">&amp;&amp;</operator> <operator pos:start="53:33" pos:end="53:33">!</operator><name pos:start="53:34" pos:end="53:46"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:46">write_flag</name></name> <operator pos:start="53:48" pos:end="53:49">&amp;&amp;</operator> <name pos:start="53:51" pos:end="53:57">offset1</name> <operator pos:start="53:59" pos:end="53:60">&gt;=</operator> <literal type="number" pos:start="53:62" pos:end="53:62">0</literal> <operator pos:start="53:64" pos:end="53:65">&amp;&amp;</operator>

              <operator pos:start="55:15" pos:end="55:15">(</operator><name pos:start="55:16" pos:end="55:21">whence</name> <operator pos:start="55:23" pos:end="55:24">!=</operator> <name pos:start="55:26" pos:end="55:33">SEEK_END</name> <operator pos:start="55:35" pos:end="55:36">||</operator> <name pos:start="55:38" pos:end="55:42">force</name><operator pos:start="55:43" pos:end="55:43">)</operator></expr>)</condition> <block pos:start="55:46" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:50">

        <while pos:start="57:9" pos:end="59:27">while<condition pos:start="57:14" pos:end="57:49">(<expr pos:start="57:15" pos:end="57:48"><name pos:start="57:15" pos:end="57:20"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:20">pos</name></name> <operator pos:start="57:22" pos:end="57:22">&lt;</operator> <name pos:start="57:24" pos:end="57:29">offset</name> <operator pos:start="57:31" pos:end="57:32">&amp;&amp;</operator> <operator pos:start="57:34" pos:end="57:34">!</operator><name pos:start="57:35" pos:end="57:48"><name pos:start="57:35" pos:end="57:35">s</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:48">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:27"><block_content pos:start="59:13" pos:end="59:27">

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><call pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:23">fill_buffer</name><argument_list pos:start="59:24" pos:end="59:26">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        <if_stmt pos:start="61:9" pos:end="63:31"><if pos:start="61:9" pos:end="63:31">if <condition pos:start="61:12" pos:end="61:27">(<expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:26">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:31"><block_content pos:start="63:13" pos:end="63:31">

            <return pos:start="63:13" pos:end="63:31">return <expr pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:50"><expr pos:start="65:9" pos:end="65:49"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:18">buf_ptr</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:31"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:31">buf_end</name></name> <operator pos:start="65:33" pos:end="65:33">+</operator> <name pos:start="65:35" pos:end="65:40">offset</name> <operator pos:start="65:42" pos:end="65:42">-</operator> <name pos:start="65:44" pos:end="65:49"><name pos:start="65:44" pos:end="65:44">s</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:49">pos</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="97:5">else <block pos:start="67:12" pos:end="97:5">{<block_content pos:start="69:9" pos:end="95:24">

        <decl_stmt pos:start="69:9" pos:end="74:0"><decl pos:start="69:9" pos:end="69:36"><type pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:15">int64_t</name></type> <name pos:start="69:17" pos:end="69:19">res</name> <init pos:start="69:21" pos:end="69:36">= <expr pos:start="69:23" pos:end="69:36"><call pos:start="69:23" pos:end="69:36"><name pos:start="69:23" pos:end="69:29">AVERROR</name><argument_list pos:start="69:30" pos:end="69:36">(<argument pos:start="69:31" pos:end="69:35"><expr pos:start="69:31" pos:end="69:35"><name pos:start="69:31" pos:end="69:35">EPIPE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="73:1" pos:end="73:35">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:17">CONFIG_MUXERS</name> <operator pos:start="73:19" pos:end="73:20">||</operator> <name pos:start="73:22" pos:end="73:35">CONFIG_NETWORK</name></expr></cpp:if>

        <if_stmt pos:start="75:9" pos:end="84:0"><if pos:start="75:9" pos:end="84:0">if <condition pos:start="75:12" pos:end="75:26">(<expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:25">write_flag</name></name></expr>)</condition> <block pos:start="75:28" pos:end="84:0">{<block_content pos:start="77:13" pos:end="79:30">

            <expr_stmt pos:start="77:13" pos:end="77:28"><expr pos:start="77:13" pos:end="77:27"><call pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:24">flush_buffer</name><argument_list pos:start="77:25" pos:end="77:27">(<argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:30"><expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:25">must_flush</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="83:8" pos:end="83:44">/* CONFIG_MUXERS || CONFIG_NETWORK */</comment>

        <if_stmt pos:start="85:9" pos:end="87:23"><if pos:start="85:9" pos:end="87:23">if <condition pos:start="85:12" pos:end="85:73">(<expr pos:start="85:13" pos:end="85:72"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:20"><name pos:start="85:14" pos:end="85:14">s</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:20">seek</name></name> <operator pos:start="85:22" pos:end="85:23">||</operator> <operator pos:start="85:25" pos:end="85:25">(</operator><name pos:start="85:26" pos:end="85:28">res</name> <operator pos:start="85:30" pos:end="85:30">=</operator> <call pos:start="85:32" pos:end="85:67"><name pos:start="85:32" pos:end="85:38"><name pos:start="85:32" pos:end="85:32">s</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:38">seek</name></name><argument_list pos:start="85:39" pos:end="85:67">(<argument pos:start="85:40" pos:end="85:48"><expr pos:start="85:40" pos:end="85:48"><name pos:start="85:40" pos:end="85:48"><name pos:start="85:40" pos:end="85:40">s</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:48">opaque</name></name></expr></argument>, <argument pos:start="85:51" pos:end="85:56"><expr pos:start="85:51" pos:end="85:56"><name pos:start="85:51" pos:end="85:56">offset</name></expr></argument>, <argument pos:start="85:59" pos:end="85:66"><expr pos:start="85:59" pos:end="85:66"><name pos:start="85:59" pos:end="85:66">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="85:68" pos:end="85:68">)</operator> <operator pos:start="85:70" pos:end="85:70">&lt;</operator> <literal type="number" pos:start="85:72" pos:end="85:72">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:23"><block_content pos:start="87:13" pos:end="87:23">

            <return pos:start="87:13" pos:end="87:23">return <expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:35"><if pos:start="89:9" pos:end="91:35">if <condition pos:start="89:12" pos:end="89:27">(<expr pos:start="89:13" pos:end="89:26"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:26"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">write_flag</name></name></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:35"><block_content pos:start="91:13" pos:end="91:35">

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:22">buf_end</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:34"><name pos:start="91:26" pos:end="91:26">s</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:34">buffer</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:18">buf_ptr</name></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:30"><name pos:start="93:22" pos:end="93:22">s</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:30">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:14"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:14">pos</name></name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:23">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:18">eof_reached</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:18">return <expr pos:start="101:12" pos:end="101:17"><name pos:start="101:12" pos:end="101:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
