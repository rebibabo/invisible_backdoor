<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5571.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">openrisc_pic_cpu_handler</name><parameter_list pos:start="1:37" pos:end="1:70">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">irq</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:69"><decl pos:start="1:61" pos:end="1:69"><type pos:start="1:61" pos:end="1:69"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:69">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">OpenRISCCPU</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">cpu</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:35">OpenRISCCPU</name> <operator pos:start="5:37" pos:end="5:37">*</operator><operator pos:start="5:38" pos:end="5:38">)</operator><name pos:start="5:39" pos:end="5:44">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:20">irq_bit</name> <init pos:start="11:22" pos:end="11:31">= <expr pos:start="11:24" pos:end="11:31"><literal type="number" pos:start="11:24" pos:end="11:24">1</literal> <operator pos:start="11:26" pos:end="11:27">&lt;&lt;</operator> <name pos:start="11:29" pos:end="11:31">irq</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:11">irq</name> <operator pos:start="15:13" pos:end="15:13">&gt;</operator> <literal type="number" pos:start="15:15" pos:end="15:16">31</literal> <operator pos:start="15:18" pos:end="15:19">||</operator> <name pos:start="15:21" pos:end="15:23">irq</name> <operator pos:start="15:25" pos:end="15:25">&lt;</operator> <literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>)</condition> <block pos:start="15:30" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13">level</name></expr>)</condition> <block pos:start="23:16" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:34">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">cpu</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:16">env</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:22">picsr</name></name> <operator pos:start="25:24" pos:end="25:25">|=</operator> <name pos:start="25:27" pos:end="25:33">irq_bit</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:35">

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:11">cpu</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:16">env</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:22">picsr</name></name> <operator pos:start="29:24" pos:end="29:25">&amp;=</operator> <operator pos:start="29:27" pos:end="29:27">~</operator><name pos:start="29:28" pos:end="29:34">irq_bit</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="35:5" pos:end="49:5">for <control pos:start="35:9" pos:end="35:28">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:23"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <literal type="number" pos:start="35:21" pos:end="35:22">32</literal></expr>;</condition> <incr pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:25">i</name><operator pos:start="35:26" pos:end="35:27">++</operator></expr></incr>)</control> <block pos:start="35:30" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:9">

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:73">(<expr pos:start="37:13" pos:end="37:72"><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:27"><name pos:start="37:14" pos:end="37:16">cpu</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">env</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:27">picsr</name></name> <operator pos:start="37:29" pos:end="37:30">&amp;&amp;</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><literal type="number" pos:start="37:33" pos:end="37:33">1</literal> <operator pos:start="37:35" pos:end="37:36">&lt;&lt;</operator> <name pos:start="37:38" pos:end="37:38">i</name><operator pos:start="37:39" pos:end="37:39">)</operator><operator pos:start="37:40" pos:end="37:40">)</operator> <operator pos:start="37:42" pos:end="37:43">&amp;&amp;</operator> <operator pos:start="37:45" pos:end="37:45">(</operator><name pos:start="37:46" pos:end="37:59"><name pos:start="37:46" pos:end="37:48">cpu</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:53">env</name><operator pos:start="37:54" pos:end="37:54">.</operator><name pos:start="37:55" pos:end="37:59">picmr</name></name> <operator pos:start="37:61" pos:end="37:62">&amp;&amp;</operator> <operator pos:start="37:64" pos:end="37:64">(</operator><literal type="number" pos:start="37:65" pos:end="37:65">1</literal> <operator pos:start="37:67" pos:end="37:68">&lt;&lt;</operator> <name pos:start="37:70" pos:end="37:70">i</name><operator pos:start="37:71" pos:end="37:71">)</operator><operator pos:start="37:72" pos:end="37:72">)</operator></expr>)</condition> <block pos:start="37:75" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:50">

            <expr_stmt pos:start="39:13" pos:end="39:50"><expr pos:start="39:13" pos:end="39:49"><call pos:start="39:13" pos:end="39:49"><name pos:start="39:13" pos:end="39:25">cpu_interrupt</name><argument_list pos:start="39:26" pos:end="39:49">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">cs</name></expr></argument>, <argument pos:start="39:31" pos:end="39:48"><expr pos:start="39:31" pos:end="39:48"><name pos:start="39:31" pos:end="39:48">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="47:9">else <block pos:start="41:16" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:40">

            <expr_stmt pos:start="43:13" pos:end="43:56"><expr pos:start="43:13" pos:end="43:55"><call pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:31">cpu_reset_interrupt</name><argument_list pos:start="43:32" pos:end="43:55">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">cs</name></expr></argument>, <argument pos:start="43:37" pos:end="43:54"><expr pos:start="43:37" pos:end="43:54"><name pos:start="43:37" pos:end="43:54">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:40"><expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:15">cpu</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">env</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:26">picsr</name></name> <operator pos:start="45:28" pos:end="45:29">&amp;=</operator> <operator pos:start="45:31" pos:end="45:31">~</operator><operator pos:start="45:32" pos:end="45:32">(</operator><literal type="number" pos:start="45:33" pos:end="45:33">1</literal> <operator pos:start="45:35" pos:end="45:36">&lt;&lt;</operator> <name pos:start="45:38" pos:end="45:38">i</name><operator pos:start="45:39" pos:end="45:39">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
