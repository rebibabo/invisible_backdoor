<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11777.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:11">vmexit</name><parameter_list pos:start="1:12" pos:end="1:53">(<parameter pos:start="1:13" pos:end="1:30"><decl pos:start="1:13" pos:end="1:30"><type pos:start="1:13" pos:end="1:30"><name pos:start="1:13" pos:end="1:20">uint64_t</name></type> <name pos:start="1:22" pos:end="1:30">exit_code</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:40">uint64_t</name></type> <name pos:start="1:42" pos:end="1:52">exit_info_1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:20">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:20">int_ctl</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:21"><if pos:start="9:5" pos:end="17:21">if <condition pos:start="9:8" pos:end="9:37">(<expr pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:16">loglevel</name> <operator pos:start="9:18" pos:end="9:18">&amp;</operator> <name pos:start="9:20" pos:end="9:36">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="17:21"><block_content pos:start="11:9" pos:end="17:21">

        <expr_stmt pos:start="11:9" pos:end="17:21"><expr pos:start="11:9" pos:end="17:20"><call pos:start="11:9" pos:end="17:20"><name pos:start="11:9" pos:end="11:15">fprintf</name><argument_list pos:start="11:16" pos:end="17:20">(<argument pos:start="11:17" pos:end="11:23"><expr pos:start="11:17" pos:end="11:23"><name pos:start="11:17" pos:end="11:23">logfile</name></expr></argument>,<argument pos:start="11:25" pos:end="11:102"><expr pos:start="11:25" pos:end="11:102"><literal type="string" pos:start="11:25" pos:end="11:37">"vmexit(%016"</literal> <name pos:start="11:39" pos:end="11:44">PRIx64</name> <literal type="string" pos:start="11:46" pos:end="11:53">", %016"</literal> <name pos:start="11:55" pos:end="11:60">PRIx64</name> <literal type="string" pos:start="11:62" pos:end="11:69">", %016"</literal> <name pos:start="11:71" pos:end="11:76">PRIx64</name> <literal type="string" pos:start="11:78" pos:end="11:81">", "</literal> <name pos:start="11:83" pos:end="11:95">TARGET_FMT_lx</name> <literal type="string" pos:start="11:97" pos:end="11:102">")!\n"</literal></expr></argument>,

                <argument pos:start="13:17" pos:end="13:25"><expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:25">exit_code</name></expr></argument>, <argument pos:start="13:28" pos:end="13:38"><expr pos:start="13:28" pos:end="13:38"><name pos:start="13:28" pos:end="13:38">exit_info_1</name></expr></argument>,

                <argument pos:start="15:17" pos:end="15:83"><expr pos:start="15:17" pos:end="15:83"><call pos:start="15:17" pos:end="15:83"><name pos:start="15:17" pos:end="15:24">ldq_phys</name><argument_list pos:start="15:25" pos:end="15:83">(<argument pos:start="15:26" pos:end="15:82"><expr pos:start="15:26" pos:end="15:82"><name pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:28">env</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:37">vm_vmcb</name></name> <operator pos:start="15:39" pos:end="15:39">+</operator> <call pos:start="15:41" pos:end="15:82"><name pos:start="15:41" pos:end="15:48">offsetof</name><argument_list pos:start="15:49" pos:end="15:82">(<argument pos:start="15:50" pos:end="15:60"><expr pos:start="15:50" pos:end="15:60">struct <name pos:start="15:57" pos:end="15:60">vmcb</name></expr></argument>, <argument pos:start="15:63" pos:end="15:81"><expr pos:start="15:63" pos:end="15:81"><name pos:start="15:63" pos:end="15:81"><name pos:start="15:63" pos:end="15:69">control</name><operator pos:start="15:70" pos:end="15:70">.</operator><name pos:start="15:71" pos:end="15:81">exit_info_2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">EIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="27:5">if<condition pos:start="21:7" pos:end="21:41">(<expr pos:start="21:8" pos:end="21:40"><name pos:start="21:8" pos:end="21:18"><name pos:start="21:8" pos:end="21:10">env</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:18">hflags</name></name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <name pos:start="21:22" pos:end="21:40">HF_INHIBIT_IRQ_MASK</name></expr>)</condition> <block pos:start="21:43" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:44">

        <expr_stmt pos:start="23:9" pos:end="23:101"><expr pos:start="23:9" pos:end="23:100"><call pos:start="23:9" pos:end="23:100"><name pos:start="23:9" pos:end="23:16">stl_phys</name><argument_list pos:start="23:17" pos:end="23:100">(<argument pos:start="23:18" pos:end="23:72"><expr pos:start="23:18" pos:end="23:72"><name pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:20">env</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:29">vm_vmcb</name></name> <operator pos:start="23:31" pos:end="23:31">+</operator> <call pos:start="23:33" pos:end="23:72"><name pos:start="23:33" pos:end="23:40">offsetof</name><argument_list pos:start="23:41" pos:end="23:72">(<argument pos:start="23:42" pos:end="23:52"><expr pos:start="23:42" pos:end="23:52">struct <name pos:start="23:49" pos:end="23:52">vmcb</name></expr></argument>, <argument pos:start="23:55" pos:end="23:71"><expr pos:start="23:55" pos:end="23:71"><name pos:start="23:55" pos:end="23:71"><name pos:start="23:55" pos:end="23:61">control</name><operator pos:start="23:62" pos:end="23:62">.</operator><name pos:start="23:63" pos:end="23:71">int_state</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:75" pos:end="23:99"><expr pos:start="23:75" pos:end="23:99"><name pos:start="23:75" pos:end="23:99">SVM_INTERRUPT_SHADOW_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">hflags</name></name> <operator pos:start="25:21" pos:end="25:22">&amp;=</operator> <operator pos:start="25:24" pos:end="25:24">~</operator><name pos:start="25:25" pos:end="25:43">HF_INHIBIT_IRQ_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:77">

        <expr_stmt pos:start="29:9" pos:end="29:77"><expr pos:start="29:9" pos:end="29:76"><call pos:start="29:9" pos:end="29:76"><name pos:start="29:9" pos:end="29:16">stl_phys</name><argument_list pos:start="29:17" pos:end="29:76">(<argument pos:start="29:18" pos:end="29:72"><expr pos:start="29:18" pos:end="29:72"><name pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:20">env</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:29">vm_vmcb</name></name> <operator pos:start="29:31" pos:end="29:31">+</operator> <call pos:start="29:33" pos:end="29:72"><name pos:start="29:33" pos:end="29:40">offsetof</name><argument_list pos:start="29:41" pos:end="29:72">(<argument pos:start="29:42" pos:end="29:52"><expr pos:start="29:42" pos:end="29:52">struct <name pos:start="29:49" pos:end="29:52">vmcb</name></expr></argument>, <argument pos:start="29:55" pos:end="29:71"><expr pos:start="29:55" pos:end="29:71"><name pos:start="29:55" pos:end="29:71"><name pos:start="29:55" pos:end="29:61">control</name><operator pos:start="29:62" pos:end="29:62">.</operator><name pos:start="29:63" pos:end="29:71">int_state</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:75" pos:end="29:75"><expr pos:start="29:75" pos:end="29:75"><literal type="number" pos:start="29:75" pos:end="29:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:39">/* Save the VM state in the vmcb */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><call pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:16">SVM_SAVE_SEG</name><argument_list pos:start="37:17" pos:end="37:46">(<argument pos:start="37:18" pos:end="37:29"><expr pos:start="37:18" pos:end="37:29"><name pos:start="37:18" pos:end="37:29"><name pos:start="37:18" pos:end="37:20">env</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="37:32" pos:end="37:41"><expr pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:41"><name pos:start="37:32" pos:end="37:35">segs</name><index pos:start="37:36" pos:end="37:41">[<expr pos:start="37:37" pos:end="37:40"><name pos:start="37:37" pos:end="37:40">R_ES</name></expr>]</index></name></expr></argument>, <argument pos:start="37:44" pos:end="37:45"><expr pos:start="37:44" pos:end="37:45"><name pos:start="37:44" pos:end="37:45">es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><call pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:16">SVM_SAVE_SEG</name><argument_list pos:start="39:17" pos:end="39:46">(<argument pos:start="39:18" pos:end="39:29"><expr pos:start="39:18" pos:end="39:29"><name pos:start="39:18" pos:end="39:29"><name pos:start="39:18" pos:end="39:20">env</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="39:32" pos:end="39:41"><expr pos:start="39:32" pos:end="39:41"><name pos:start="39:32" pos:end="39:41"><name pos:start="39:32" pos:end="39:35">segs</name><index pos:start="39:36" pos:end="39:41">[<expr pos:start="39:37" pos:end="39:40"><name pos:start="39:37" pos:end="39:40">R_CS</name></expr>]</index></name></expr></argument>, <argument pos:start="39:44" pos:end="39:45"><expr pos:start="39:44" pos:end="39:45"><name pos:start="39:44" pos:end="39:45">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:16">SVM_SAVE_SEG</name><argument_list pos:start="41:17" pos:end="41:46">(<argument pos:start="41:18" pos:end="41:29"><expr pos:start="41:18" pos:end="41:29"><name pos:start="41:18" pos:end="41:29"><name pos:start="41:18" pos:end="41:20">env</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:41"><expr pos:start="41:32" pos:end="41:41"><name pos:start="41:32" pos:end="41:41"><name pos:start="41:32" pos:end="41:35">segs</name><index pos:start="41:36" pos:end="41:41">[<expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">R_SS</name></expr>]</index></name></expr></argument>, <argument pos:start="41:44" pos:end="41:45"><expr pos:start="41:44" pos:end="41:45"><name pos:start="41:44" pos:end="41:45">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><call pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:16">SVM_SAVE_SEG</name><argument_list pos:start="43:17" pos:end="43:46">(<argument pos:start="43:18" pos:end="43:29"><expr pos:start="43:18" pos:end="43:29"><name pos:start="43:18" pos:end="43:29"><name pos:start="43:18" pos:end="43:20">env</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="43:32" pos:end="43:41"><expr pos:start="43:32" pos:end="43:41"><name pos:start="43:32" pos:end="43:41"><name pos:start="43:32" pos:end="43:35">segs</name><index pos:start="43:36" pos:end="43:41">[<expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">R_DS</name></expr>]</index></name></expr></argument>, <argument pos:start="43:44" pos:end="43:45"><expr pos:start="43:44" pos:end="43:45"><name pos:start="43:44" pos:end="43:45">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:82"><expr pos:start="47:5" pos:end="47:81"><call pos:start="47:5" pos:end="47:81"><name pos:start="47:5" pos:end="47:12">stq_phys</name><argument_list pos:start="47:13" pos:end="47:81">(<argument pos:start="47:14" pos:end="47:65"><expr pos:start="47:14" pos:end="47:65"><name pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:16">env</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:25">vm_vmcb</name></name> <operator pos:start="47:27" pos:end="47:27">+</operator> <call pos:start="47:29" pos:end="47:65"><name pos:start="47:29" pos:end="47:36">offsetof</name><argument_list pos:start="47:37" pos:end="47:65">(<argument pos:start="47:38" pos:end="47:48"><expr pos:start="47:38" pos:end="47:48">struct <name pos:start="47:45" pos:end="47:48">vmcb</name></expr></argument>, <argument pos:start="47:51" pos:end="47:64"><expr pos:start="47:51" pos:end="47:64"><name pos:start="47:51" pos:end="47:64"><name pos:start="47:51" pos:end="47:54">save</name><operator pos:start="47:55" pos:end="47:55">.</operator><name pos:start="47:56" pos:end="47:59">gdtr</name><operator pos:start="47:60" pos:end="47:60">.</operator><name pos:start="47:61" pos:end="47:64">base</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:68" pos:end="47:80"><expr pos:start="47:68" pos:end="47:80"><name pos:start="47:68" pos:end="47:80"><name pos:start="47:68" pos:end="47:70">env</name><operator pos:start="47:71" pos:end="47:72">-&gt;</operator><name pos:start="47:73" pos:end="47:75">gdt</name><operator pos:start="47:76" pos:end="47:76">.</operator><name pos:start="47:77" pos:end="47:80">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:84"><expr pos:start="49:5" pos:end="49:83"><call pos:start="49:5" pos:end="49:83"><name pos:start="49:5" pos:end="49:12">stl_phys</name><argument_list pos:start="49:13" pos:end="49:83">(<argument pos:start="49:14" pos:end="49:66"><expr pos:start="49:14" pos:end="49:66"><name pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:16">env</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:25">vm_vmcb</name></name> <operator pos:start="49:27" pos:end="49:27">+</operator> <call pos:start="49:29" pos:end="49:66"><name pos:start="49:29" pos:end="49:36">offsetof</name><argument_list pos:start="49:37" pos:end="49:66">(<argument pos:start="49:38" pos:end="49:48"><expr pos:start="49:38" pos:end="49:48">struct <name pos:start="49:45" pos:end="49:48">vmcb</name></expr></argument>, <argument pos:start="49:51" pos:end="49:65"><expr pos:start="49:51" pos:end="49:65"><name pos:start="49:51" pos:end="49:65"><name pos:start="49:51" pos:end="49:54">save</name><operator pos:start="49:55" pos:end="49:55">.</operator><name pos:start="49:56" pos:end="49:59">gdtr</name><operator pos:start="49:60" pos:end="49:60">.</operator><name pos:start="49:61" pos:end="49:65">limit</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:69" pos:end="49:82"><expr pos:start="49:69" pos:end="49:82"><name pos:start="49:69" pos:end="49:82"><name pos:start="49:69" pos:end="49:71">env</name><operator pos:start="49:72" pos:end="49:73">-&gt;</operator><name pos:start="49:74" pos:end="49:76">gdt</name><operator pos:start="49:77" pos:end="49:77">.</operator><name pos:start="49:78" pos:end="49:82">limit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:82"><expr pos:start="53:5" pos:end="53:81"><call pos:start="53:5" pos:end="53:81"><name pos:start="53:5" pos:end="53:12">stq_phys</name><argument_list pos:start="53:13" pos:end="53:81">(<argument pos:start="53:14" pos:end="53:65"><expr pos:start="53:14" pos:end="53:65"><name pos:start="53:14" pos:end="53:25"><name pos:start="53:14" pos:end="53:16">env</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:25">vm_vmcb</name></name> <operator pos:start="53:27" pos:end="53:27">+</operator> <call pos:start="53:29" pos:end="53:65"><name pos:start="53:29" pos:end="53:36">offsetof</name><argument_list pos:start="53:37" pos:end="53:65">(<argument pos:start="53:38" pos:end="53:48"><expr pos:start="53:38" pos:end="53:48">struct <name pos:start="53:45" pos:end="53:48">vmcb</name></expr></argument>, <argument pos:start="53:51" pos:end="53:64"><expr pos:start="53:51" pos:end="53:64"><name pos:start="53:51" pos:end="53:64"><name pos:start="53:51" pos:end="53:54">save</name><operator pos:start="53:55" pos:end="53:55">.</operator><name pos:start="53:56" pos:end="53:59">idtr</name><operator pos:start="53:60" pos:end="53:60">.</operator><name pos:start="53:61" pos:end="53:64">base</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:68" pos:end="53:80"><expr pos:start="53:68" pos:end="53:80"><name pos:start="53:68" pos:end="53:80"><name pos:start="53:68" pos:end="53:70">env</name><operator pos:start="53:71" pos:end="53:72">-&gt;</operator><name pos:start="53:73" pos:end="53:75">idt</name><operator pos:start="53:76" pos:end="53:76">.</operator><name pos:start="53:77" pos:end="53:80">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:84"><expr pos:start="55:5" pos:end="55:83"><call pos:start="55:5" pos:end="55:83"><name pos:start="55:5" pos:end="55:12">stl_phys</name><argument_list pos:start="55:13" pos:end="55:83">(<argument pos:start="55:14" pos:end="55:66"><expr pos:start="55:14" pos:end="55:66"><name pos:start="55:14" pos:end="55:25"><name pos:start="55:14" pos:end="55:16">env</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:25">vm_vmcb</name></name> <operator pos:start="55:27" pos:end="55:27">+</operator> <call pos:start="55:29" pos:end="55:66"><name pos:start="55:29" pos:end="55:36">offsetof</name><argument_list pos:start="55:37" pos:end="55:66">(<argument pos:start="55:38" pos:end="55:48"><expr pos:start="55:38" pos:end="55:48">struct <name pos:start="55:45" pos:end="55:48">vmcb</name></expr></argument>, <argument pos:start="55:51" pos:end="55:65"><expr pos:start="55:51" pos:end="55:65"><name pos:start="55:51" pos:end="55:65"><name pos:start="55:51" pos:end="55:54">save</name><operator pos:start="55:55" pos:end="55:55">.</operator><name pos:start="55:56" pos:end="55:59">idtr</name><operator pos:start="55:60" pos:end="55:60">.</operator><name pos:start="55:61" pos:end="55:65">limit</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:69" pos:end="55:82"><expr pos:start="55:69" pos:end="55:82"><name pos:start="55:69" pos:end="55:82"><name pos:start="55:69" pos:end="55:71">env</name><operator pos:start="55:72" pos:end="55:73">-&gt;</operator><name pos:start="55:74" pos:end="55:76">idt</name><operator pos:start="55:77" pos:end="55:77">.</operator><name pos:start="55:78" pos:end="55:82">limit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:73"><expr pos:start="59:5" pos:end="59:72"><call pos:start="59:5" pos:end="59:72"><name pos:start="59:5" pos:end="59:12">stq_phys</name><argument_list pos:start="59:13" pos:end="59:72">(<argument pos:start="59:14" pos:end="59:60"><expr pos:start="59:14" pos:end="59:60"><name pos:start="59:14" pos:end="59:25"><name pos:start="59:14" pos:end="59:16">env</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:25">vm_vmcb</name></name> <operator pos:start="59:27" pos:end="59:27">+</operator> <call pos:start="59:29" pos:end="59:60"><name pos:start="59:29" pos:end="59:36">offsetof</name><argument_list pos:start="59:37" pos:end="59:60">(<argument pos:start="59:38" pos:end="59:48"><expr pos:start="59:38" pos:end="59:48">struct <name pos:start="59:45" pos:end="59:48">vmcb</name></expr></argument>, <argument pos:start="59:51" pos:end="59:59"><expr pos:start="59:51" pos:end="59:59"><name pos:start="59:51" pos:end="59:59"><name pos:start="59:51" pos:end="59:54">save</name><operator pos:start="59:55" pos:end="59:55">.</operator><name pos:start="59:56" pos:end="59:59">efer</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:63" pos:end="59:71"><expr pos:start="59:63" pos:end="59:71"><name pos:start="59:63" pos:end="59:71"><name pos:start="59:63" pos:end="59:65">env</name><operator pos:start="59:66" pos:end="59:67">-&gt;</operator><name pos:start="59:68" pos:end="59:71">efer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:73"><expr pos:start="61:5" pos:end="61:72"><call pos:start="61:5" pos:end="61:72"><name pos:start="61:5" pos:end="61:12">stq_phys</name><argument_list pos:start="61:13" pos:end="61:72">(<argument pos:start="61:14" pos:end="61:59"><expr pos:start="61:14" pos:end="61:59"><name pos:start="61:14" pos:end="61:25"><name pos:start="61:14" pos:end="61:16">env</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:25">vm_vmcb</name></name> <operator pos:start="61:27" pos:end="61:27">+</operator> <call pos:start="61:29" pos:end="61:59"><name pos:start="61:29" pos:end="61:36">offsetof</name><argument_list pos:start="61:37" pos:end="61:59">(<argument pos:start="61:38" pos:end="61:48"><expr pos:start="61:38" pos:end="61:48">struct <name pos:start="61:45" pos:end="61:48">vmcb</name></expr></argument>, <argument pos:start="61:51" pos:end="61:58"><expr pos:start="61:51" pos:end="61:58"><name pos:start="61:51" pos:end="61:58"><name pos:start="61:51" pos:end="61:54">save</name><operator pos:start="61:55" pos:end="61:55">.</operator><name pos:start="61:56" pos:end="61:58">cr0</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:62" pos:end="61:71"><expr pos:start="61:62" pos:end="61:71"><name pos:start="61:62" pos:end="61:71"><name pos:start="61:62" pos:end="61:64">env</name><operator pos:start="61:65" pos:end="61:66">-&gt;</operator><name pos:start="61:67" pos:end="61:68">cr</name><index pos:start="61:69" pos:end="61:71">[<expr pos:start="61:70" pos:end="61:70"><literal type="number" pos:start="61:70" pos:end="61:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:73"><expr pos:start="63:5" pos:end="63:72"><call pos:start="63:5" pos:end="63:72"><name pos:start="63:5" pos:end="63:12">stq_phys</name><argument_list pos:start="63:13" pos:end="63:72">(<argument pos:start="63:14" pos:end="63:59"><expr pos:start="63:14" pos:end="63:59"><name pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:16">env</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:25">vm_vmcb</name></name> <operator pos:start="63:27" pos:end="63:27">+</operator> <call pos:start="63:29" pos:end="63:59"><name pos:start="63:29" pos:end="63:36">offsetof</name><argument_list pos:start="63:37" pos:end="63:59">(<argument pos:start="63:38" pos:end="63:48"><expr pos:start="63:38" pos:end="63:48">struct <name pos:start="63:45" pos:end="63:48">vmcb</name></expr></argument>, <argument pos:start="63:51" pos:end="63:58"><expr pos:start="63:51" pos:end="63:58"><name pos:start="63:51" pos:end="63:58"><name pos:start="63:51" pos:end="63:54">save</name><operator pos:start="63:55" pos:end="63:55">.</operator><name pos:start="63:56" pos:end="63:58">cr2</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:62" pos:end="63:71"><expr pos:start="63:62" pos:end="63:71"><name pos:start="63:62" pos:end="63:71"><name pos:start="63:62" pos:end="63:64">env</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:68">cr</name><index pos:start="63:69" pos:end="63:71">[<expr pos:start="63:70" pos:end="63:70"><literal type="number" pos:start="63:70" pos:end="63:70">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:73"><expr pos:start="65:5" pos:end="65:72"><call pos:start="65:5" pos:end="65:72"><name pos:start="65:5" pos:end="65:12">stq_phys</name><argument_list pos:start="65:13" pos:end="65:72">(<argument pos:start="65:14" pos:end="65:59"><expr pos:start="65:14" pos:end="65:59"><name pos:start="65:14" pos:end="65:25"><name pos:start="65:14" pos:end="65:16">env</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:25">vm_vmcb</name></name> <operator pos:start="65:27" pos:end="65:27">+</operator> <call pos:start="65:29" pos:end="65:59"><name pos:start="65:29" pos:end="65:36">offsetof</name><argument_list pos:start="65:37" pos:end="65:59">(<argument pos:start="65:38" pos:end="65:48"><expr pos:start="65:38" pos:end="65:48">struct <name pos:start="65:45" pos:end="65:48">vmcb</name></expr></argument>, <argument pos:start="65:51" pos:end="65:58"><expr pos:start="65:51" pos:end="65:58"><name pos:start="65:51" pos:end="65:58"><name pos:start="65:51" pos:end="65:54">save</name><operator pos:start="65:55" pos:end="65:55">.</operator><name pos:start="65:56" pos:end="65:58">cr3</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:62" pos:end="65:71"><expr pos:start="65:62" pos:end="65:71"><name pos:start="65:62" pos:end="65:71"><name pos:start="65:62" pos:end="65:64">env</name><operator pos:start="65:65" pos:end="65:66">-&gt;</operator><name pos:start="65:67" pos:end="65:68">cr</name><index pos:start="65:69" pos:end="65:71">[<expr pos:start="65:70" pos:end="65:70"><literal type="number" pos:start="65:70" pos:end="65:70">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:73"><expr pos:start="67:5" pos:end="67:72"><call pos:start="67:5" pos:end="67:72"><name pos:start="67:5" pos:end="67:12">stq_phys</name><argument_list pos:start="67:13" pos:end="67:72">(<argument pos:start="67:14" pos:end="67:59"><expr pos:start="67:14" pos:end="67:59"><name pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:16">env</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:25">vm_vmcb</name></name> <operator pos:start="67:27" pos:end="67:27">+</operator> <call pos:start="67:29" pos:end="67:59"><name pos:start="67:29" pos:end="67:36">offsetof</name><argument_list pos:start="67:37" pos:end="67:59">(<argument pos:start="67:38" pos:end="67:48"><expr pos:start="67:38" pos:end="67:48">struct <name pos:start="67:45" pos:end="67:48">vmcb</name></expr></argument>, <argument pos:start="67:51" pos:end="67:58"><expr pos:start="67:51" pos:end="67:58"><name pos:start="67:51" pos:end="67:58"><name pos:start="67:51" pos:end="67:54">save</name><operator pos:start="67:55" pos:end="67:55">.</operator><name pos:start="67:56" pos:end="67:58">cr4</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:62" pos:end="67:71"><expr pos:start="67:62" pos:end="67:71"><name pos:start="67:62" pos:end="67:71"><name pos:start="67:62" pos:end="67:64">env</name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:68">cr</name><index pos:start="67:69" pos:end="67:71">[<expr pos:start="67:70" pos:end="67:70"><literal type="number" pos:start="67:70" pos:end="67:70">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:106">(<expr pos:start="71:9" pos:end="71:105"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:16">int_ctl</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:82"><name pos:start="71:20" pos:end="71:27">ldl_phys</name><argument_list pos:start="71:28" pos:end="71:82">(<argument pos:start="71:29" pos:end="71:81"><expr pos:start="71:29" pos:end="71:81"><name pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:31">env</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:40">vm_vmcb</name></name> <operator pos:start="71:42" pos:end="71:42">+</operator> <call pos:start="71:44" pos:end="71:81"><name pos:start="71:44" pos:end="71:51">offsetof</name><argument_list pos:start="71:52" pos:end="71:81">(<argument pos:start="71:53" pos:end="71:63"><expr pos:start="71:53" pos:end="71:63">struct <name pos:start="71:60" pos:end="71:63">vmcb</name></expr></argument>, <argument pos:start="71:66" pos:end="71:80"><expr pos:start="71:66" pos:end="71:80"><name pos:start="71:66" pos:end="71:80"><name pos:start="71:66" pos:end="71:72">control</name><operator pos:start="71:73" pos:end="71:73">.</operator><name pos:start="71:74" pos:end="71:80">int_ctl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="71:83" pos:end="71:83">)</operator> <operator pos:start="71:85" pos:end="71:85">&amp;</operator> <name pos:start="71:87" pos:end="71:105">V_INTR_MASKING_MASK</name></expr>)</condition> <block pos:start="71:108" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:81">

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:15">int_ctl</name> <operator pos:start="73:17" pos:end="73:18">&amp;=</operator> <operator pos:start="73:20" pos:end="73:20">~</operator><name pos:start="73:21" pos:end="73:30">V_TPR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:43"><expr pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:15">int_ctl</name> <operator pos:start="75:17" pos:end="75:18">|=</operator> <name pos:start="75:20" pos:end="75:29"><name pos:start="75:20" pos:end="75:22">env</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:26">cr</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">8</literal></expr>]</index></name> <operator pos:start="75:31" pos:end="75:31">&amp;</operator> <name pos:start="75:33" pos:end="75:42">V_TPR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:81"><expr pos:start="77:9" pos:end="77:80"><call pos:start="77:9" pos:end="77:80"><name pos:start="77:9" pos:end="77:16">stl_phys</name><argument_list pos:start="77:17" pos:end="77:80">(<argument pos:start="77:18" pos:end="77:70"><expr pos:start="77:18" pos:end="77:70"><name pos:start="77:18" pos:end="77:29"><name pos:start="77:18" pos:end="77:20">env</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:29">vm_vmcb</name></name> <operator pos:start="77:31" pos:end="77:31">+</operator> <call pos:start="77:33" pos:end="77:70"><name pos:start="77:33" pos:end="77:40">offsetof</name><argument_list pos:start="77:41" pos:end="77:70">(<argument pos:start="77:42" pos:end="77:52"><expr pos:start="77:42" pos:end="77:52">struct <name pos:start="77:49" pos:end="77:52">vmcb</name></expr></argument>, <argument pos:start="77:55" pos:end="77:69"><expr pos:start="77:55" pos:end="77:69"><name pos:start="77:55" pos:end="77:69"><name pos:start="77:55" pos:end="77:61">control</name><operator pos:start="77:62" pos:end="77:62">.</operator><name pos:start="77:63" pos:end="77:69">int_ctl</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:73" pos:end="77:79"><expr pos:start="77:73" pos:end="77:79"><name pos:start="77:73" pos:end="77:79">int_ctl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:82"><expr pos:start="83:5" pos:end="83:81"><call pos:start="83:5" pos:end="83:81"><name pos:start="83:5" pos:end="83:12">stq_phys</name><argument_list pos:start="83:13" pos:end="83:81">(<argument pos:start="83:14" pos:end="83:62"><expr pos:start="83:14" pos:end="83:62"><name pos:start="83:14" pos:end="83:25"><name pos:start="83:14" pos:end="83:16">env</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:25">vm_vmcb</name></name> <operator pos:start="83:27" pos:end="83:27">+</operator> <call pos:start="83:29" pos:end="83:62"><name pos:start="83:29" pos:end="83:36">offsetof</name><argument_list pos:start="83:37" pos:end="83:62">(<argument pos:start="83:38" pos:end="83:48"><expr pos:start="83:38" pos:end="83:48">struct <name pos:start="83:45" pos:end="83:48">vmcb</name></expr></argument>, <argument pos:start="83:51" pos:end="83:61"><expr pos:start="83:51" pos:end="83:61"><name pos:start="83:51" pos:end="83:61"><name pos:start="83:51" pos:end="83:54">save</name><operator pos:start="83:55" pos:end="83:55">.</operator><name pos:start="83:56" pos:end="83:61">rflags</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:65" pos:end="83:80"><expr pos:start="83:65" pos:end="83:80"><call pos:start="83:65" pos:end="83:80"><name pos:start="83:65" pos:end="83:78">compute_eflags</name><argument_list pos:start="83:79" pos:end="83:80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:71"><expr pos:start="85:5" pos:end="85:70"><call pos:start="85:5" pos:end="85:70"><name pos:start="85:5" pos:end="85:12">stq_phys</name><argument_list pos:start="85:13" pos:end="85:70">(<argument pos:start="85:14" pos:end="85:59"><expr pos:start="85:14" pos:end="85:59"><name pos:start="85:14" pos:end="85:25"><name pos:start="85:14" pos:end="85:16">env</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:25">vm_vmcb</name></name> <operator pos:start="85:27" pos:end="85:27">+</operator> <call pos:start="85:29" pos:end="85:59"><name pos:start="85:29" pos:end="85:36">offsetof</name><argument_list pos:start="85:37" pos:end="85:59">(<argument pos:start="85:38" pos:end="85:48"><expr pos:start="85:38" pos:end="85:48">struct <name pos:start="85:45" pos:end="85:48">vmcb</name></expr></argument>, <argument pos:start="85:51" pos:end="85:58"><expr pos:start="85:51" pos:end="85:58"><name pos:start="85:51" pos:end="85:58"><name pos:start="85:51" pos:end="85:54">save</name><operator pos:start="85:55" pos:end="85:55">.</operator><name pos:start="85:56" pos:end="85:58">rip</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:62" pos:end="85:69"><expr pos:start="85:62" pos:end="85:69"><name pos:start="85:62" pos:end="85:69"><name pos:start="85:62" pos:end="85:64">env</name><operator pos:start="85:65" pos:end="85:66">-&gt;</operator><name pos:start="85:67" pos:end="85:69">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:66"><expr pos:start="87:5" pos:end="87:65"><call pos:start="87:5" pos:end="87:65"><name pos:start="87:5" pos:end="87:12">stq_phys</name><argument_list pos:start="87:13" pos:end="87:65">(<argument pos:start="87:14" pos:end="87:59"><expr pos:start="87:14" pos:end="87:59"><name pos:start="87:14" pos:end="87:25"><name pos:start="87:14" pos:end="87:16">env</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:25">vm_vmcb</name></name> <operator pos:start="87:27" pos:end="87:27">+</operator> <call pos:start="87:29" pos:end="87:59"><name pos:start="87:29" pos:end="87:36">offsetof</name><argument_list pos:start="87:37" pos:end="87:59">(<argument pos:start="87:38" pos:end="87:48"><expr pos:start="87:38" pos:end="87:48">struct <name pos:start="87:45" pos:end="87:48">vmcb</name></expr></argument>, <argument pos:start="87:51" pos:end="87:58"><expr pos:start="87:51" pos:end="87:58"><name pos:start="87:51" pos:end="87:58"><name pos:start="87:51" pos:end="87:54">save</name><operator pos:start="87:55" pos:end="87:55">.</operator><name pos:start="87:56" pos:end="87:58">rsp</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:62" pos:end="87:64"><expr pos:start="87:62" pos:end="87:64"><name pos:start="87:62" pos:end="87:64">ESP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:66"><expr pos:start="89:5" pos:end="89:65"><call pos:start="89:5" pos:end="89:65"><name pos:start="89:5" pos:end="89:12">stq_phys</name><argument_list pos:start="89:13" pos:end="89:65">(<argument pos:start="89:14" pos:end="89:59"><expr pos:start="89:14" pos:end="89:59"><name pos:start="89:14" pos:end="89:25"><name pos:start="89:14" pos:end="89:16">env</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:25">vm_vmcb</name></name> <operator pos:start="89:27" pos:end="89:27">+</operator> <call pos:start="89:29" pos:end="89:59"><name pos:start="89:29" pos:end="89:36">offsetof</name><argument_list pos:start="89:37" pos:end="89:59">(<argument pos:start="89:38" pos:end="89:48"><expr pos:start="89:38" pos:end="89:48">struct <name pos:start="89:45" pos:end="89:48">vmcb</name></expr></argument>, <argument pos:start="89:51" pos:end="89:58"><expr pos:start="89:51" pos:end="89:58"><name pos:start="89:51" pos:end="89:58"><name pos:start="89:51" pos:end="89:54">save</name><operator pos:start="89:55" pos:end="89:55">.</operator><name pos:start="89:56" pos:end="89:58">rax</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:62" pos:end="89:64"><expr pos:start="89:62" pos:end="89:64"><name pos:start="89:62" pos:end="89:64">EAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:73"><expr pos:start="91:5" pos:end="91:72"><call pos:start="91:5" pos:end="91:72"><name pos:start="91:5" pos:end="91:12">stq_phys</name><argument_list pos:start="91:13" pos:end="91:72">(<argument pos:start="91:14" pos:end="91:59"><expr pos:start="91:14" pos:end="91:59"><name pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:16">env</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:25">vm_vmcb</name></name> <operator pos:start="91:27" pos:end="91:27">+</operator> <call pos:start="91:29" pos:end="91:59"><name pos:start="91:29" pos:end="91:36">offsetof</name><argument_list pos:start="91:37" pos:end="91:59">(<argument pos:start="91:38" pos:end="91:48"><expr pos:start="91:38" pos:end="91:48">struct <name pos:start="91:45" pos:end="91:48">vmcb</name></expr></argument>, <argument pos:start="91:51" pos:end="91:58"><expr pos:start="91:51" pos:end="91:58"><name pos:start="91:51" pos:end="91:58"><name pos:start="91:51" pos:end="91:54">save</name><operator pos:start="91:55" pos:end="91:55">.</operator><name pos:start="91:56" pos:end="91:58">dr7</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:62" pos:end="91:71"><expr pos:start="91:62" pos:end="91:71"><name pos:start="91:62" pos:end="91:71"><name pos:start="91:62" pos:end="91:64">env</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:68">dr</name><index pos:start="91:69" pos:end="91:71">[<expr pos:start="91:70" pos:end="91:70"><literal type="number" pos:start="91:70" pos:end="91:70">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:73"><expr pos:start="93:5" pos:end="93:72"><call pos:start="93:5" pos:end="93:72"><name pos:start="93:5" pos:end="93:12">stq_phys</name><argument_list pos:start="93:13" pos:end="93:72">(<argument pos:start="93:14" pos:end="93:59"><expr pos:start="93:14" pos:end="93:59"><name pos:start="93:14" pos:end="93:25"><name pos:start="93:14" pos:end="93:16">env</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:25">vm_vmcb</name></name> <operator pos:start="93:27" pos:end="93:27">+</operator> <call pos:start="93:29" pos:end="93:59"><name pos:start="93:29" pos:end="93:36">offsetof</name><argument_list pos:start="93:37" pos:end="93:59">(<argument pos:start="93:38" pos:end="93:48"><expr pos:start="93:38" pos:end="93:48">struct <name pos:start="93:45" pos:end="93:48">vmcb</name></expr></argument>, <argument pos:start="93:51" pos:end="93:58"><expr pos:start="93:51" pos:end="93:58"><name pos:start="93:51" pos:end="93:58"><name pos:start="93:51" pos:end="93:54">save</name><operator pos:start="93:55" pos:end="93:55">.</operator><name pos:start="93:56" pos:end="93:58">dr6</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:62" pos:end="93:71"><expr pos:start="93:62" pos:end="93:71"><name pos:start="93:62" pos:end="93:71"><name pos:start="93:62" pos:end="93:64">env</name><operator pos:start="93:65" pos:end="93:66">-&gt;</operator><name pos:start="93:67" pos:end="93:68">dr</name><index pos:start="93:69" pos:end="93:71">[<expr pos:start="93:70" pos:end="93:70"><literal type="number" pos:start="93:70" pos:end="93:70">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:88"><expr pos:start="95:5" pos:end="95:87"><call pos:start="95:5" pos:end="95:87"><name pos:start="95:5" pos:end="95:12">stb_phys</name><argument_list pos:start="95:13" pos:end="95:87">(<argument pos:start="95:14" pos:end="95:59"><expr pos:start="95:14" pos:end="95:59"><name pos:start="95:14" pos:end="95:25"><name pos:start="95:14" pos:end="95:16">env</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:25">vm_vmcb</name></name> <operator pos:start="95:27" pos:end="95:27">+</operator> <call pos:start="95:29" pos:end="95:59"><name pos:start="95:29" pos:end="95:36">offsetof</name><argument_list pos:start="95:37" pos:end="95:59">(<argument pos:start="95:38" pos:end="95:48"><expr pos:start="95:38" pos:end="95:48">struct <name pos:start="95:45" pos:end="95:48">vmcb</name></expr></argument>, <argument pos:start="95:51" pos:end="95:58"><expr pos:start="95:51" pos:end="95:58"><name pos:start="95:51" pos:end="95:58"><name pos:start="95:51" pos:end="95:54">save</name><operator pos:start="95:55" pos:end="95:55">.</operator><name pos:start="95:56" pos:end="95:58">cpl</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:62" pos:end="95:86"><expr pos:start="95:62" pos:end="95:86"><name pos:start="95:62" pos:end="95:72"><name pos:start="95:62" pos:end="95:64">env</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:72">hflags</name></name> <operator pos:start="95:74" pos:end="95:74">&amp;</operator> <name pos:start="95:76" pos:end="95:86">HF_CPL_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:45">/* Reload the host state from vm_hsave */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:15">hflags</name></name> <operator pos:start="101:17" pos:end="101:18">&amp;=</operator> <operator pos:start="101:20" pos:end="101:20">~</operator><name pos:start="101:21" pos:end="101:31">HF_HIF_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:7">env</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:18">intercept</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:34"><expr pos:start="105:5" pos:end="105:33"><name pos:start="105:5" pos:end="105:29"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:29">intercept_exceptions</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <literal type="number" pos:start="105:33" pos:end="105:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:50"><expr pos:start="107:5" pos:end="107:49"><name pos:start="107:5" pos:end="107:26"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:26">interrupt_request</name></name> <operator pos:start="107:28" pos:end="107:29">&amp;=</operator> <operator pos:start="107:31" pos:end="107:31">~</operator><name pos:start="107:32" pos:end="107:49">CPU_INTERRUPT_VIRQ</name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:85"><expr pos:start="111:5" pos:end="111:84"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:7">env</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:12">gdt</name><operator pos:start="111:13" pos:end="111:13">.</operator><name pos:start="111:14" pos:end="111:17">base</name></name>  <operator pos:start="111:20" pos:end="111:20">=</operator> <call pos:start="111:22" pos:end="111:84"><name pos:start="111:22" pos:end="111:29">ldq_phys</name><argument_list pos:start="111:30" pos:end="111:84">(<argument pos:start="111:31" pos:end="111:83"><expr pos:start="111:31" pos:end="111:83"><name pos:start="111:31" pos:end="111:43"><name pos:start="111:31" pos:end="111:33">env</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:43">vm_hsave</name></name> <operator pos:start="111:45" pos:end="111:45">+</operator> <call pos:start="111:47" pos:end="111:83"><name pos:start="111:47" pos:end="111:54">offsetof</name><argument_list pos:start="111:55" pos:end="111:83">(<argument pos:start="111:56" pos:end="111:66"><expr pos:start="111:56" pos:end="111:66">struct <name pos:start="111:63" pos:end="111:66">vmcb</name></expr></argument>, <argument pos:start="111:69" pos:end="111:82"><expr pos:start="111:69" pos:end="111:82"><name pos:start="111:69" pos:end="111:82"><name pos:start="111:69" pos:end="111:72">save</name><operator pos:start="111:73" pos:end="111:73">.</operator><name pos:start="111:74" pos:end="111:77">gdtr</name><operator pos:start="111:78" pos:end="111:78">.</operator><name pos:start="111:79" pos:end="111:82">base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:86"><expr pos:start="113:5" pos:end="113:85"><name pos:start="113:5" pos:end="113:18"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:12">gdt</name><operator pos:start="113:13" pos:end="113:13">.</operator><name pos:start="113:14" pos:end="113:18">limit</name></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:85"><name pos:start="113:22" pos:end="113:29">ldl_phys</name><argument_list pos:start="113:30" pos:end="113:85">(<argument pos:start="113:31" pos:end="113:84"><expr pos:start="113:31" pos:end="113:84"><name pos:start="113:31" pos:end="113:43"><name pos:start="113:31" pos:end="113:33">env</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:43">vm_hsave</name></name> <operator pos:start="113:45" pos:end="113:45">+</operator> <call pos:start="113:47" pos:end="113:84"><name pos:start="113:47" pos:end="113:54">offsetof</name><argument_list pos:start="113:55" pos:end="113:84">(<argument pos:start="113:56" pos:end="113:66"><expr pos:start="113:56" pos:end="113:66">struct <name pos:start="113:63" pos:end="113:66">vmcb</name></expr></argument>, <argument pos:start="113:69" pos:end="113:83"><expr pos:start="113:69" pos:end="113:83"><name pos:start="113:69" pos:end="113:83"><name pos:start="113:69" pos:end="113:72">save</name><operator pos:start="113:73" pos:end="113:73">.</operator><name pos:start="113:74" pos:end="113:77">gdtr</name><operator pos:start="113:78" pos:end="113:78">.</operator><name pos:start="113:79" pos:end="113:83">limit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:85"><expr pos:start="117:5" pos:end="117:84"><name pos:start="117:5" pos:end="117:17"><name pos:start="117:5" pos:end="117:7">env</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:12">idt</name><operator pos:start="117:13" pos:end="117:13">.</operator><name pos:start="117:14" pos:end="117:17">base</name></name>  <operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="117:84"><name pos:start="117:22" pos:end="117:29">ldq_phys</name><argument_list pos:start="117:30" pos:end="117:84">(<argument pos:start="117:31" pos:end="117:83"><expr pos:start="117:31" pos:end="117:83"><name pos:start="117:31" pos:end="117:43"><name pos:start="117:31" pos:end="117:33">env</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:43">vm_hsave</name></name> <operator pos:start="117:45" pos:end="117:45">+</operator> <call pos:start="117:47" pos:end="117:83"><name pos:start="117:47" pos:end="117:54">offsetof</name><argument_list pos:start="117:55" pos:end="117:83">(<argument pos:start="117:56" pos:end="117:66"><expr pos:start="117:56" pos:end="117:66">struct <name pos:start="117:63" pos:end="117:66">vmcb</name></expr></argument>, <argument pos:start="117:69" pos:end="117:82"><expr pos:start="117:69" pos:end="117:82"><name pos:start="117:69" pos:end="117:82"><name pos:start="117:69" pos:end="117:72">save</name><operator pos:start="117:73" pos:end="117:73">.</operator><name pos:start="117:74" pos:end="117:77">idtr</name><operator pos:start="117:78" pos:end="117:78">.</operator><name pos:start="117:79" pos:end="117:82">base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:86"><expr pos:start="119:5" pos:end="119:85"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:7">env</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:12">idt</name><operator pos:start="119:13" pos:end="119:13">.</operator><name pos:start="119:14" pos:end="119:18">limit</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <call pos:start="119:22" pos:end="119:85"><name pos:start="119:22" pos:end="119:29">ldl_phys</name><argument_list pos:start="119:30" pos:end="119:85">(<argument pos:start="119:31" pos:end="119:84"><expr pos:start="119:31" pos:end="119:84"><name pos:start="119:31" pos:end="119:43"><name pos:start="119:31" pos:end="119:33">env</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:43">vm_hsave</name></name> <operator pos:start="119:45" pos:end="119:45">+</operator> <call pos:start="119:47" pos:end="119:84"><name pos:start="119:47" pos:end="119:54">offsetof</name><argument_list pos:start="119:55" pos:end="119:84">(<argument pos:start="119:56" pos:end="119:66"><expr pos:start="119:56" pos:end="119:66">struct <name pos:start="119:63" pos:end="119:66">vmcb</name></expr></argument>, <argument pos:start="119:69" pos:end="119:83"><expr pos:start="119:69" pos:end="119:83"><name pos:start="119:69" pos:end="119:83"><name pos:start="119:69" pos:end="119:72">save</name><operator pos:start="119:73" pos:end="119:73">.</operator><name pos:start="119:74" pos:end="119:77">idtr</name><operator pos:start="119:78" pos:end="119:78">.</operator><name pos:start="119:79" pos:end="119:83">limit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:101"><expr pos:start="123:5" pos:end="123:100"><call pos:start="123:5" pos:end="123:100"><name pos:start="123:5" pos:end="123:22">cpu_x86_update_cr0</name><argument_list pos:start="123:23" pos:end="123:100">(<argument pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">env</name></expr></argument>, <argument pos:start="123:29" pos:end="123:99"><expr pos:start="123:29" pos:end="123:99"><call pos:start="123:29" pos:end="123:85"><name pos:start="123:29" pos:end="123:36">ldq_phys</name><argument_list pos:start="123:37" pos:end="123:85">(<argument pos:start="123:38" pos:end="123:84"><expr pos:start="123:38" pos:end="123:84"><name pos:start="123:38" pos:end="123:50"><name pos:start="123:38" pos:end="123:40">env</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:50">vm_hsave</name></name> <operator pos:start="123:52" pos:end="123:52">+</operator> <call pos:start="123:54" pos:end="123:84"><name pos:start="123:54" pos:end="123:61">offsetof</name><argument_list pos:start="123:62" pos:end="123:84">(<argument pos:start="123:63" pos:end="123:73"><expr pos:start="123:63" pos:end="123:73">struct <name pos:start="123:70" pos:end="123:73">vmcb</name></expr></argument>, <argument pos:start="123:76" pos:end="123:83"><expr pos:start="123:76" pos:end="123:83"><name pos:start="123:76" pos:end="123:83"><name pos:start="123:76" pos:end="123:79">save</name><operator pos:start="123:80" pos:end="123:80">.</operator><name pos:start="123:81" pos:end="123:83">cr0</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="123:87" pos:end="123:87">|</operator> <name pos:start="123:89" pos:end="123:99">CR0_PE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:87"><expr pos:start="125:5" pos:end="125:86"><call pos:start="125:5" pos:end="125:86"><name pos:start="125:5" pos:end="125:22">cpu_x86_update_cr4</name><argument_list pos:start="125:23" pos:end="125:86">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">env</name></expr></argument>, <argument pos:start="125:29" pos:end="125:85"><expr pos:start="125:29" pos:end="125:85"><call pos:start="125:29" pos:end="125:85"><name pos:start="125:29" pos:end="125:36">ldq_phys</name><argument_list pos:start="125:37" pos:end="125:85">(<argument pos:start="125:38" pos:end="125:84"><expr pos:start="125:38" pos:end="125:84"><name pos:start="125:38" pos:end="125:50"><name pos:start="125:38" pos:end="125:40">env</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:50">vm_hsave</name></name> <operator pos:start="125:52" pos:end="125:52">+</operator> <call pos:start="125:54" pos:end="125:84"><name pos:start="125:54" pos:end="125:61">offsetof</name><argument_list pos:start="125:62" pos:end="125:84">(<argument pos:start="125:63" pos:end="125:73"><expr pos:start="125:63" pos:end="125:73">struct <name pos:start="125:70" pos:end="125:73">vmcb</name></expr></argument>, <argument pos:start="125:76" pos:end="125:83"><expr pos:start="125:76" pos:end="125:83"><name pos:start="125:76" pos:end="125:83"><name pos:start="125:76" pos:end="125:79">save</name><operator pos:start="125:80" pos:end="125:80">.</operator><name pos:start="125:81" pos:end="125:83">cr4</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:87"><expr pos:start="127:5" pos:end="127:86"><call pos:start="127:5" pos:end="127:86"><name pos:start="127:5" pos:end="127:22">cpu_x86_update_cr3</name><argument_list pos:start="127:23" pos:end="127:86">(<argument pos:start="127:24" pos:end="127:26"><expr pos:start="127:24" pos:end="127:26"><name pos:start="127:24" pos:end="127:26">env</name></expr></argument>, <argument pos:start="127:29" pos:end="127:85"><expr pos:start="127:29" pos:end="127:85"><call pos:start="127:29" pos:end="127:85"><name pos:start="127:29" pos:end="127:36">ldq_phys</name><argument_list pos:start="127:37" pos:end="127:85">(<argument pos:start="127:38" pos:end="127:84"><expr pos:start="127:38" pos:end="127:84"><name pos:start="127:38" pos:end="127:50"><name pos:start="127:38" pos:end="127:40">env</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:50">vm_hsave</name></name> <operator pos:start="127:52" pos:end="127:52">+</operator> <call pos:start="127:54" pos:end="127:84"><name pos:start="127:54" pos:end="127:61">offsetof</name><argument_list pos:start="127:62" pos:end="127:84">(<argument pos:start="127:63" pos:end="127:73"><expr pos:start="127:63" pos:end="127:73">struct <name pos:start="127:70" pos:end="127:73">vmcb</name></expr></argument>, <argument pos:start="127:76" pos:end="127:83"><expr pos:start="127:76" pos:end="127:83"><name pos:start="127:76" pos:end="127:83"><name pos:start="127:76" pos:end="127:79">save</name><operator pos:start="127:80" pos:end="127:80">.</operator><name pos:start="127:81" pos:end="127:83">cr3</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="136:0"><if pos:start="129:5" pos:end="136:0">if <condition pos:start="129:8" pos:end="129:38">(<expr pos:start="129:9" pos:end="129:37"><name pos:start="129:9" pos:end="129:15">int_ctl</name> <operator pos:start="129:17" pos:end="129:17">&amp;</operator> <name pos:start="129:19" pos:end="129:37">V_INTR_MASKING_MASK</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="136:0"><block_content pos:start="131:9" pos:end="136:0">

        <expr_stmt pos:start="131:9" pos:end="136:0"><expr pos:start="131:9" pos:end="131:78"><name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:11">env</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:15">cr</name><index pos:start="131:16" pos:end="131:18">[<expr pos:start="131:17" pos:end="131:17"><literal type="number" pos:start="131:17" pos:end="131:17">8</literal></expr>]</index></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <call pos:start="131:22" pos:end="131:78"><name pos:start="131:22" pos:end="131:29">ldq_phys</name><argument_list pos:start="131:30" pos:end="131:78">(<argument pos:start="131:31" pos:end="131:77"><expr pos:start="131:31" pos:end="131:77"><name pos:start="131:31" pos:end="131:43"><name pos:start="131:31" pos:end="131:33">env</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:43">vm_hsave</name></name> <operator pos:start="131:45" pos:end="131:45">+</operator> <call pos:start="131:47" pos:end="131:77"><name pos:start="131:47" pos:end="131:54">offsetof</name><argument_list pos:start="131:55" pos:end="131:77">(<argument pos:start="131:56" pos:end="131:66"><expr pos:start="131:56" pos:end="131:66">struct <name pos:start="131:63" pos:end="131:66">vmcb</name></expr></argument>, <argument pos:start="131:69" pos:end="131:76"><expr pos:start="131:69" pos:end="131:76"><name pos:start="131:69" pos:end="131:76"><name pos:start="131:69" pos:end="131:72">save</name><operator pos:start="131:73" pos:end="131:73">.</operator><name pos:start="131:74" pos:end="131:76">cr8</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="133:5" pos:end="133:84">/* we need to set the efer after the crs so the hidden flags get set properly */</comment>

<cpp:ifdef pos:start="135:1" pos:end="135:20">#<cpp:directive pos:start="135:2" pos:end="135:6">ifdef</cpp:directive> <name pos:start="135:8" pos:end="135:20">TARGET_X86_64</name></cpp:ifdef>

    <expr_stmt pos:start="137:5" pos:end="137:76"><expr pos:start="137:5" pos:end="137:75"><name pos:start="137:5" pos:end="137:13"><name pos:start="137:5" pos:end="137:7">env</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:13">efer</name></name>  <operator pos:start="137:16" pos:end="137:16">=</operator> <call pos:start="137:18" pos:end="137:75"><name pos:start="137:18" pos:end="137:25">ldq_phys</name><argument_list pos:start="137:26" pos:end="137:75">(<argument pos:start="137:27" pos:end="137:74"><expr pos:start="137:27" pos:end="137:74"><name pos:start="137:27" pos:end="137:39"><name pos:start="137:27" pos:end="137:29">env</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:39">vm_hsave</name></name> <operator pos:start="137:41" pos:end="137:41">+</operator> <call pos:start="137:43" pos:end="137:74"><name pos:start="137:43" pos:end="137:50">offsetof</name><argument_list pos:start="137:51" pos:end="137:74">(<argument pos:start="137:52" pos:end="137:62"><expr pos:start="137:52" pos:end="137:62">struct <name pos:start="137:59" pos:end="137:62">vmcb</name></expr></argument>, <argument pos:start="137:65" pos:end="137:73"><expr pos:start="137:65" pos:end="137:73"><name pos:start="137:65" pos:end="137:73"><name pos:start="137:65" pos:end="137:68">save</name><operator pos:start="137:69" pos:end="137:69">.</operator><name pos:start="137:70" pos:end="137:73">efer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:32"><expr pos:start="139:5" pos:end="139:31"><name pos:start="139:5" pos:end="139:15"><name pos:start="139:5" pos:end="139:7">env</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:15">hflags</name></name> <operator pos:start="139:17" pos:end="139:18">&amp;=</operator> <operator pos:start="139:20" pos:end="139:20">~</operator><name pos:start="139:21" pos:end="139:31">HF_LMA_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="146:0"><if pos:start="141:5" pos:end="146:0">if <condition pos:start="141:8" pos:end="141:33">(<expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:17"><name pos:start="141:9" pos:end="141:11">env</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:17">efer</name></name> <operator pos:start="141:19" pos:end="141:19">&amp;</operator> <name pos:start="141:21" pos:end="141:32">MSR_EFER_LMA</name></expr>)</condition><block type="pseudo" pos:start="143:8" pos:end="146:0"><block_content pos:start="143:8" pos:end="146:0">

       <expr_stmt pos:start="143:8" pos:end="146:0"><expr pos:start="143:8" pos:end="143:33"><name pos:start="143:8" pos:end="143:18"><name pos:start="143:8" pos:end="143:10">env</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:18">hflags</name></name> <operator pos:start="143:20" pos:end="143:21">|=</operator> <name pos:start="143:23" pos:end="143:33">HF_LMA_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="145:1" pos:end="145:6">#<cpp:directive pos:start="145:2" pos:end="145:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="149:5" pos:end="149:20"><expr pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:15"><name pos:start="149:5" pos:end="149:7">env</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:15">eflags</name></name> <operator pos:start="149:17" pos:end="149:17">=</operator> <literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="153:70"><expr pos:start="151:5" pos:end="153:69"><call pos:start="151:5" pos:end="153:69"><name pos:start="151:5" pos:end="151:15">load_eflags</name><argument_list pos:start="151:16" pos:end="153:69">(<argument pos:start="151:17" pos:end="151:76"><expr pos:start="151:17" pos:end="151:76"><call pos:start="151:17" pos:end="151:76"><name pos:start="151:17" pos:end="151:24">ldq_phys</name><argument_list pos:start="151:25" pos:end="151:76">(<argument pos:start="151:26" pos:end="151:75"><expr pos:start="151:26" pos:end="151:75"><name pos:start="151:26" pos:end="151:38"><name pos:start="151:26" pos:end="151:28">env</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:38">vm_hsave</name></name> <operator pos:start="151:40" pos:end="151:40">+</operator> <call pos:start="151:42" pos:end="151:75"><name pos:start="151:42" pos:end="151:49">offsetof</name><argument_list pos:start="151:50" pos:end="151:75">(<argument pos:start="151:51" pos:end="151:61"><expr pos:start="151:51" pos:end="151:61">struct <name pos:start="151:58" pos:end="151:61">vmcb</name></expr></argument>, <argument pos:start="151:64" pos:end="151:74"><expr pos:start="151:64" pos:end="151:74"><name pos:start="151:64" pos:end="151:74"><name pos:start="151:64" pos:end="151:67">save</name><operator pos:start="151:68" pos:end="151:68">.</operator><name pos:start="151:69" pos:end="151:74">rflags</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="153:17" pos:end="153:68"><expr pos:start="153:17" pos:end="153:68"><operator pos:start="153:17" pos:end="153:17">~</operator><operator pos:start="153:18" pos:end="153:18">(</operator><name pos:start="153:19" pos:end="153:22">CC_O</name> <operator pos:start="153:24" pos:end="153:24">|</operator> <name pos:start="153:26" pos:end="153:29">CC_S</name> <operator pos:start="153:31" pos:end="153:31">|</operator> <name pos:start="153:33" pos:end="153:36">CC_Z</name> <operator pos:start="153:38" pos:end="153:38">|</operator> <name pos:start="153:40" pos:end="153:43">CC_A</name> <operator pos:start="153:45" pos:end="153:45">|</operator> <name pos:start="153:47" pos:end="153:50">CC_P</name> <operator pos:start="153:52" pos:end="153:52">|</operator> <name pos:start="153:54" pos:end="153:57">CC_C</name> <operator pos:start="153:59" pos:end="153:59">|</operator> <name pos:start="153:61" pos:end="153:67">DF_MASK</name><operator pos:start="153:68" pos:end="153:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:25"><expr pos:start="155:5" pos:end="155:24"><name pos:start="155:5" pos:end="155:9">CC_OP</name> <operator pos:start="155:11" pos:end="155:11">=</operator> <name pos:start="155:13" pos:end="155:24">CC_OP_EFLAGS</name></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:40"><expr pos:start="159:5" pos:end="159:39"><call pos:start="159:5" pos:end="159:39"><name pos:start="159:5" pos:end="159:16">SVM_LOAD_SEG</name><argument_list pos:start="159:17" pos:end="159:39">(<argument pos:start="159:18" pos:end="159:30"><expr pos:start="159:18" pos:end="159:30"><name pos:start="159:18" pos:end="159:30"><name pos:start="159:18" pos:end="159:20">env</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">vm_hsave</name></name></expr></argument>, <argument pos:start="159:33" pos:end="159:34"><expr pos:start="159:33" pos:end="159:34"><name pos:start="159:33" pos:end="159:34">ES</name></expr></argument>, <argument pos:start="159:37" pos:end="159:38"><expr pos:start="159:37" pos:end="159:38"><name pos:start="159:37" pos:end="159:38">es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:40"><expr pos:start="161:5" pos:end="161:39"><call pos:start="161:5" pos:end="161:39"><name pos:start="161:5" pos:end="161:16">SVM_LOAD_SEG</name><argument_list pos:start="161:17" pos:end="161:39">(<argument pos:start="161:18" pos:end="161:30"><expr pos:start="161:18" pos:end="161:30"><name pos:start="161:18" pos:end="161:30"><name pos:start="161:18" pos:end="161:20">env</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:30">vm_hsave</name></name></expr></argument>, <argument pos:start="161:33" pos:end="161:34"><expr pos:start="161:33" pos:end="161:34"><name pos:start="161:33" pos:end="161:34">CS</name></expr></argument>, <argument pos:start="161:37" pos:end="161:38"><expr pos:start="161:37" pos:end="161:38"><name pos:start="161:37" pos:end="161:38">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:40"><expr pos:start="163:5" pos:end="163:39"><call pos:start="163:5" pos:end="163:39"><name pos:start="163:5" pos:end="163:16">SVM_LOAD_SEG</name><argument_list pos:start="163:17" pos:end="163:39">(<argument pos:start="163:18" pos:end="163:30"><expr pos:start="163:18" pos:end="163:30"><name pos:start="163:18" pos:end="163:30"><name pos:start="163:18" pos:end="163:20">env</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:30">vm_hsave</name></name></expr></argument>, <argument pos:start="163:33" pos:end="163:34"><expr pos:start="163:33" pos:end="163:34"><name pos:start="163:33" pos:end="163:34">SS</name></expr></argument>, <argument pos:start="163:37" pos:end="163:38"><expr pos:start="163:37" pos:end="163:38"><name pos:start="163:37" pos:end="163:38">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:40"><expr pos:start="165:5" pos:end="165:39"><call pos:start="165:5" pos:end="165:39"><name pos:start="165:5" pos:end="165:16">SVM_LOAD_SEG</name><argument_list pos:start="165:17" pos:end="165:39">(<argument pos:start="165:18" pos:end="165:30"><expr pos:start="165:18" pos:end="165:30"><name pos:start="165:18" pos:end="165:30"><name pos:start="165:18" pos:end="165:20">env</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:30">vm_hsave</name></name></expr></argument>, <argument pos:start="165:33" pos:end="165:34"><expr pos:start="165:33" pos:end="165:34"><name pos:start="165:33" pos:end="165:34">DS</name></expr></argument>, <argument pos:start="165:37" pos:end="165:38"><expr pos:start="165:37" pos:end="165:38"><name pos:start="165:37" pos:end="165:38">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:68"><expr pos:start="169:5" pos:end="169:67"><name pos:start="169:5" pos:end="169:7">EIP</name> <operator pos:start="169:9" pos:end="169:9">=</operator> <call pos:start="169:11" pos:end="169:67"><name pos:start="169:11" pos:end="169:18">ldq_phys</name><argument_list pos:start="169:19" pos:end="169:67">(<argument pos:start="169:20" pos:end="169:66"><expr pos:start="169:20" pos:end="169:66"><name pos:start="169:20" pos:end="169:32"><name pos:start="169:20" pos:end="169:22">env</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:32">vm_hsave</name></name> <operator pos:start="169:34" pos:end="169:34">+</operator> <call pos:start="169:36" pos:end="169:66"><name pos:start="169:36" pos:end="169:43">offsetof</name><argument_list pos:start="169:44" pos:end="169:66">(<argument pos:start="169:45" pos:end="169:55"><expr pos:start="169:45" pos:end="169:55">struct <name pos:start="169:52" pos:end="169:55">vmcb</name></expr></argument>, <argument pos:start="169:58" pos:end="169:65"><expr pos:start="169:58" pos:end="169:65"><name pos:start="169:58" pos:end="169:65"><name pos:start="169:58" pos:end="169:61">save</name><operator pos:start="169:62" pos:end="169:62">.</operator><name pos:start="169:63" pos:end="169:65">rip</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:68"><expr pos:start="171:5" pos:end="171:67"><name pos:start="171:5" pos:end="171:7">ESP</name> <operator pos:start="171:9" pos:end="171:9">=</operator> <call pos:start="171:11" pos:end="171:67"><name pos:start="171:11" pos:end="171:18">ldq_phys</name><argument_list pos:start="171:19" pos:end="171:67">(<argument pos:start="171:20" pos:end="171:66"><expr pos:start="171:20" pos:end="171:66"><name pos:start="171:20" pos:end="171:32"><name pos:start="171:20" pos:end="171:22">env</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:32">vm_hsave</name></name> <operator pos:start="171:34" pos:end="171:34">+</operator> <call pos:start="171:36" pos:end="171:66"><name pos:start="171:36" pos:end="171:43">offsetof</name><argument_list pos:start="171:44" pos:end="171:66">(<argument pos:start="171:45" pos:end="171:55"><expr pos:start="171:45" pos:end="171:55">struct <name pos:start="171:52" pos:end="171:55">vmcb</name></expr></argument>, <argument pos:start="171:58" pos:end="171:65"><expr pos:start="171:58" pos:end="171:65"><name pos:start="171:58" pos:end="171:65"><name pos:start="171:58" pos:end="171:61">save</name><operator pos:start="171:62" pos:end="171:62">.</operator><name pos:start="171:63" pos:end="171:65">rsp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:68"><expr pos:start="173:5" pos:end="173:67"><name pos:start="173:5" pos:end="173:7">EAX</name> <operator pos:start="173:9" pos:end="173:9">=</operator> <call pos:start="173:11" pos:end="173:67"><name pos:start="173:11" pos:end="173:18">ldq_phys</name><argument_list pos:start="173:19" pos:end="173:67">(<argument pos:start="173:20" pos:end="173:66"><expr pos:start="173:20" pos:end="173:66"><name pos:start="173:20" pos:end="173:32"><name pos:start="173:20" pos:end="173:22">env</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:32">vm_hsave</name></name> <operator pos:start="173:34" pos:end="173:34">+</operator> <call pos:start="173:36" pos:end="173:66"><name pos:start="173:36" pos:end="173:43">offsetof</name><argument_list pos:start="173:44" pos:end="173:66">(<argument pos:start="173:45" pos:end="173:55"><expr pos:start="173:45" pos:end="173:55">struct <name pos:start="173:52" pos:end="173:55">vmcb</name></expr></argument>, <argument pos:start="173:58" pos:end="173:65"><expr pos:start="173:58" pos:end="173:65"><name pos:start="173:58" pos:end="173:65"><name pos:start="173:58" pos:end="173:61">save</name><operator pos:start="173:62" pos:end="173:62">.</operator><name pos:start="173:63" pos:end="173:65">rax</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:75"><expr pos:start="177:5" pos:end="177:74"><name pos:start="177:5" pos:end="177:14"><name pos:start="177:5" pos:end="177:7">env</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:11">dr</name><index pos:start="177:12" pos:end="177:14">[<expr pos:start="177:13" pos:end="177:13"><literal type="number" pos:start="177:13" pos:end="177:13">6</literal></expr>]</index></name> <operator pos:start="177:16" pos:end="177:16">=</operator> <call pos:start="177:18" pos:end="177:74"><name pos:start="177:18" pos:end="177:25">ldq_phys</name><argument_list pos:start="177:26" pos:end="177:74">(<argument pos:start="177:27" pos:end="177:73"><expr pos:start="177:27" pos:end="177:73"><name pos:start="177:27" pos:end="177:39"><name pos:start="177:27" pos:end="177:29">env</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:39">vm_hsave</name></name> <operator pos:start="177:41" pos:end="177:41">+</operator> <call pos:start="177:43" pos:end="177:73"><name pos:start="177:43" pos:end="177:50">offsetof</name><argument_list pos:start="177:51" pos:end="177:73">(<argument pos:start="177:52" pos:end="177:62"><expr pos:start="177:52" pos:end="177:62">struct <name pos:start="177:59" pos:end="177:62">vmcb</name></expr></argument>, <argument pos:start="177:65" pos:end="177:72"><expr pos:start="177:65" pos:end="177:72"><name pos:start="177:65" pos:end="177:72"><name pos:start="177:65" pos:end="177:68">save</name><operator pos:start="177:69" pos:end="177:69">.</operator><name pos:start="177:70" pos:end="177:72">dr6</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:75"><expr pos:start="179:5" pos:end="179:74"><name pos:start="179:5" pos:end="179:14"><name pos:start="179:5" pos:end="179:7">env</name><operator pos:start="179:8" pos:end="179:9">-&gt;</operator><name pos:start="179:10" pos:end="179:11">dr</name><index pos:start="179:12" pos:end="179:14">[<expr pos:start="179:13" pos:end="179:13"><literal type="number" pos:start="179:13" pos:end="179:13">7</literal></expr>]</index></name> <operator pos:start="179:16" pos:end="179:16">=</operator> <call pos:start="179:18" pos:end="179:74"><name pos:start="179:18" pos:end="179:25">ldq_phys</name><argument_list pos:start="179:26" pos:end="179:74">(<argument pos:start="179:27" pos:end="179:73"><expr pos:start="179:27" pos:end="179:73"><name pos:start="179:27" pos:end="179:39"><name pos:start="179:27" pos:end="179:29">env</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:39">vm_hsave</name></name> <operator pos:start="179:41" pos:end="179:41">+</operator> <call pos:start="179:43" pos:end="179:73"><name pos:start="179:43" pos:end="179:50">offsetof</name><argument_list pos:start="179:51" pos:end="179:73">(<argument pos:start="179:52" pos:end="179:62"><expr pos:start="179:52" pos:end="179:62">struct <name pos:start="179:59" pos:end="179:62">vmcb</name></expr></argument>, <argument pos:start="179:65" pos:end="179:72"><expr pos:start="179:65" pos:end="179:72"><name pos:start="179:65" pos:end="179:72"><name pos:start="179:65" pos:end="179:68">save</name><operator pos:start="179:69" pos:end="179:69">.</operator><name pos:start="179:70" pos:end="179:72">dr7</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:22">/* other setups */</comment>

    <expr_stmt pos:start="185:5" pos:end="185:28"><expr pos:start="185:5" pos:end="185:27"><call pos:start="185:5" pos:end="185:27"><name pos:start="185:5" pos:end="185:19">cpu_x86_set_cpl</name><argument_list pos:start="185:20" pos:end="185:27">(<argument pos:start="185:21" pos:end="185:23"><expr pos:start="185:21" pos:end="185:23"><name pos:start="185:21" pos:end="185:23">env</name></expr></argument>, <argument pos:start="185:26" pos:end="185:26"><expr pos:start="185:26" pos:end="185:26"><literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:102"><expr pos:start="187:5" pos:end="187:101"><call pos:start="187:5" pos:end="187:101"><name pos:start="187:5" pos:end="187:12">stl_phys</name><argument_list pos:start="187:13" pos:end="187:101">(<argument pos:start="187:14" pos:end="187:71"><expr pos:start="187:14" pos:end="187:71"><name pos:start="187:14" pos:end="187:25"><name pos:start="187:14" pos:end="187:16">env</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:25">vm_vmcb</name></name> <operator pos:start="187:27" pos:end="187:27">+</operator> <call pos:start="187:29" pos:end="187:71"><name pos:start="187:29" pos:end="187:36">offsetof</name><argument_list pos:start="187:37" pos:end="187:71">(<argument pos:start="187:38" pos:end="187:48"><expr pos:start="187:38" pos:end="187:48">struct <name pos:start="187:45" pos:end="187:48">vmcb</name></expr></argument>, <argument pos:start="187:51" pos:end="187:70"><expr pos:start="187:51" pos:end="187:70"><name pos:start="187:51" pos:end="187:70"><name pos:start="187:51" pos:end="187:57">control</name><operator pos:start="187:58" pos:end="187:58">.</operator><name pos:start="187:59" pos:end="187:70">exit_code_hi</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="187:74" pos:end="187:100"><expr pos:start="187:74" pos:end="187:100"><operator pos:start="187:74" pos:end="187:74">(</operator><name pos:start="187:75" pos:end="187:82">uint32_t</name><operator pos:start="187:83" pos:end="187:83">)</operator><operator pos:start="187:84" pos:end="187:84">(</operator><name pos:start="187:85" pos:end="187:93">exit_code</name> <operator pos:start="187:95" pos:end="187:96">&gt;&gt;</operator> <literal type="number" pos:start="187:98" pos:end="187:99">32</literal><operator pos:start="187:100" pos:end="187:100">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:81"><expr pos:start="189:5" pos:end="189:80"><call pos:start="189:5" pos:end="189:80"><name pos:start="189:5" pos:end="189:12">stl_phys</name><argument_list pos:start="189:13" pos:end="189:80">(<argument pos:start="189:14" pos:end="189:68"><expr pos:start="189:14" pos:end="189:68"><name pos:start="189:14" pos:end="189:25"><name pos:start="189:14" pos:end="189:16">env</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:25">vm_vmcb</name></name> <operator pos:start="189:27" pos:end="189:27">+</operator> <call pos:start="189:29" pos:end="189:68"><name pos:start="189:29" pos:end="189:36">offsetof</name><argument_list pos:start="189:37" pos:end="189:68">(<argument pos:start="189:38" pos:end="189:48"><expr pos:start="189:38" pos:end="189:48">struct <name pos:start="189:45" pos:end="189:48">vmcb</name></expr></argument>, <argument pos:start="189:51" pos:end="189:67"><expr pos:start="189:51" pos:end="189:67"><name pos:start="189:51" pos:end="189:67"><name pos:start="189:51" pos:end="189:57">control</name><operator pos:start="189:58" pos:end="189:58">.</operator><name pos:start="189:59" pos:end="189:67">exit_code</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="189:71" pos:end="189:79"><expr pos:start="189:71" pos:end="189:79"><name pos:start="189:71" pos:end="189:79">exit_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:85"><expr pos:start="191:5" pos:end="191:84"><call pos:start="191:5" pos:end="191:84"><name pos:start="191:5" pos:end="191:12">stq_phys</name><argument_list pos:start="191:13" pos:end="191:84">(<argument pos:start="191:14" pos:end="191:70"><expr pos:start="191:14" pos:end="191:70"><name pos:start="191:14" pos:end="191:25"><name pos:start="191:14" pos:end="191:16">env</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:25">vm_vmcb</name></name> <operator pos:start="191:27" pos:end="191:27">+</operator> <call pos:start="191:29" pos:end="191:70"><name pos:start="191:29" pos:end="191:36">offsetof</name><argument_list pos:start="191:37" pos:end="191:70">(<argument pos:start="191:38" pos:end="191:48"><expr pos:start="191:38" pos:end="191:48">struct <name pos:start="191:45" pos:end="191:48">vmcb</name></expr></argument>, <argument pos:start="191:51" pos:end="191:69"><expr pos:start="191:51" pos:end="191:69"><name pos:start="191:51" pos:end="191:69"><name pos:start="191:51" pos:end="191:57">control</name><operator pos:start="191:58" pos:end="191:58">.</operator><name pos:start="191:59" pos:end="191:69">exit_info_1</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="191:73" pos:end="191:83"><expr pos:start="191:73" pos:end="191:83"><name pos:start="191:73" pos:end="191:83">exit_info_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:18"><expr pos:start="195:5" pos:end="195:17"><call pos:start="195:5" pos:end="195:17"><name pos:start="195:5" pos:end="195:15">helper_clgi</name><argument_list pos:start="195:16" pos:end="195:17">()</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="197:5" pos:end="197:70">/* FIXME: Resets the current ASID register to zero (host ASID). */</comment>



    <comment type="block" pos:start="201:5" pos:end="201:72">/* Clears the V_IRQ and V_INTR_MASKING bits inside the processor. */</comment>



    <comment type="block" pos:start="205:5" pos:end="205:53">/* Clears the TSC_OFFSET inside the processor. */</comment>



    <comment type="block" pos:start="209:5" pos:end="213:57">/* If the host is in PAE mode, the processor reloads the host's PDPEs

       from the page table indicated the host's CR3. If the PDPEs contain

       illegal state, the processor causes a shutdown. */</comment>



    <comment type="block" pos:start="217:5" pos:end="217:43">/* Forces CR0.PE = 1, RFLAGS.VM = 0. */</comment>

    <expr_stmt pos:start="219:5" pos:end="219:30"><expr pos:start="219:5" pos:end="219:29"><name pos:start="219:5" pos:end="219:14"><name pos:start="219:5" pos:end="219:7">env</name><operator pos:start="219:8" pos:end="219:9">-&gt;</operator><name pos:start="219:10" pos:end="219:11">cr</name><index pos:start="219:12" pos:end="219:14">[<expr pos:start="219:13" pos:end="219:13"><literal type="number" pos:start="219:13" pos:end="219:13">0</literal></expr>]</index></name> <operator pos:start="219:16" pos:end="219:17">|=</operator> <name pos:start="219:19" pos:end="219:29">CR0_PE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:28"><expr pos:start="221:5" pos:end="221:27"><name pos:start="221:5" pos:end="221:15"><name pos:start="221:5" pos:end="221:7">env</name><operator pos:start="221:8" pos:end="221:9">-&gt;</operator><name pos:start="221:10" pos:end="221:15">eflags</name></name> <operator pos:start="221:17" pos:end="221:18">&amp;=</operator> <operator pos:start="221:20" pos:end="221:20">~</operator><name pos:start="221:21" pos:end="221:27">VM_MASK</name></expr>;</expr_stmt>



    <comment type="block" pos:start="225:5" pos:end="225:60">/* Disables all breakpoints in the host DR7 register. */</comment>



    <comment type="block" pos:start="229:5" pos:end="229:57">/* Checks the reloaded host state for consistency. */</comment>



    <comment type="block" pos:start="233:5" pos:end="237:50">/* If the host's rIP reloaded by #VMEXIT is outside the limit of the

       host's code segment or non-canonical (in the case of long mode), a

       #GP fault is delivered inside the host.) */</comment>



    <comment type="block" pos:start="241:5" pos:end="241:38">/* remove any pending exception */</comment>

    <expr_stmt pos:start="243:5" pos:end="243:30"><expr pos:start="243:5" pos:end="243:29"><name pos:start="243:5" pos:end="243:24"><name pos:start="243:5" pos:end="243:7">env</name><operator pos:start="243:8" pos:end="243:9">-&gt;</operator><name pos:start="243:10" pos:end="243:24">exception_index</name></name> <operator pos:start="243:26" pos:end="243:26">=</operator> <operator pos:start="243:28" pos:end="243:28">-</operator><literal type="number" pos:start="243:29" pos:end="243:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:24"><expr pos:start="245:5" pos:end="245:23"><name pos:start="245:5" pos:end="245:19"><name pos:start="245:5" pos:end="245:7">env</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:19">error_code</name></name> <operator pos:start="245:21" pos:end="245:21">=</operator> <literal type="number" pos:start="245:23" pos:end="245:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:28"><expr pos:start="247:5" pos:end="247:27"><name pos:start="247:5" pos:end="247:22"><name pos:start="247:5" pos:end="247:7">env</name><operator pos:start="247:8" pos:end="247:9">-&gt;</operator><name pos:start="247:10" pos:end="247:22">old_exception</name></name> <operator pos:start="247:24" pos:end="247:24">=</operator> <operator pos:start="247:26" pos:end="247:26">-</operator><literal type="number" pos:start="247:27" pos:end="247:27">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:18"><expr pos:start="251:5" pos:end="251:17"><call pos:start="251:5" pos:end="251:17"><name pos:start="251:5" pos:end="251:15">regs_to_env</name><argument_list pos:start="251:16" pos:end="251:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:20"><expr pos:start="253:5" pos:end="253:19"><call pos:start="253:5" pos:end="253:19"><name pos:start="253:5" pos:end="253:17">cpu_loop_exit</name><argument_list pos:start="253:18" pos:end="253:19">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
