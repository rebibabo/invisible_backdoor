<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15933.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">nvdimm_dsm_get_label_data</name><parameter_list pos:start="1:38" pos:end="3:58">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:50">NVDIMMDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">nvdimm</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:71">NvdimmDsmIn</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">in</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:57"><decl pos:start="3:39" pos:end="3:57"><type pos:start="3:39" pos:end="3:57"><name pos:start="3:39" pos:end="3:44">hwaddr</name></type> <name pos:start="3:46" pos:end="3:57">dsm_mem_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:31">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">NVDIMMClass</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">nvc</name> <init pos:start="7:22" pos:end="7:47">= <expr pos:start="7:24" pos:end="7:47"><call pos:start="7:24" pos:end="7:47"><name pos:start="7:24" pos:end="7:39">NVDIMM_GET_CLASS</name><argument_list pos:start="7:40" pos:end="7:47">(<argument pos:start="7:41" pos:end="7:46"><expr pos:start="7:41" pos:end="7:46"><name pos:start="7:41" pos:end="7:46">nvdimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:28">NvdimmFuncGetLabelDataIn</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:44">get_label_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:29">NvdimmFuncGetLabelDataOut</name> <modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:49">get_label_data_out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:19">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:58"><expr pos:start="19:5" pos:end="19:57"><name pos:start="19:5" pos:end="19:18">get_label_data</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:46">NvdimmFuncGetLabelDataIn</name> <operator pos:start="19:48" pos:end="19:48">*</operator><operator pos:start="19:49" pos:end="19:49">)</operator><name pos:start="19:50" pos:end="19:57"><name pos:start="19:50" pos:end="19:51">in</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:57">arg3</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:16">le32_to_cpus</name><argument_list pos:start="21:17" pos:end="21:41">(<argument pos:start="21:18" pos:end="21:40"><expr pos:start="21:18" pos:end="21:40"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:40"><name pos:start="21:19" pos:end="21:32">get_label_data</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:16">le32_to_cpus</name><argument_list pos:start="23:17" pos:end="23:41">(<argument pos:start="23:18" pos:end="23:40"><expr pos:start="23:18" pos:end="23:40"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:40"><name pos:start="23:19" pos:end="23:32">get_label_data</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:40">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:65"><expr pos:start="27:5" pos:end="29:64"><call pos:start="27:5" pos:end="29:64"><name pos:start="27:5" pos:end="27:16">nvdimm_debug</name><argument_list pos:start="27:17" pos:end="29:64">(<argument pos:start="27:18" pos:end="27:60"><expr pos:start="27:18" pos:end="27:60"><literal type="string" pos:start="27:18" pos:end="27:60">"Read Label Data: offset %#x length %#x.\n"</literal></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:39"><expr pos:start="29:18" pos:end="29:39"><name pos:start="29:18" pos:end="29:39"><name pos:start="29:18" pos:end="29:31">get_label_data</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:39">offset</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:63"><expr pos:start="29:42" pos:end="29:63"><name pos:start="29:42" pos:end="29:63"><name pos:start="29:42" pos:end="29:55">get_label_data</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:63">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:64"><expr pos:start="33:5" pos:end="35:63"><name pos:start="33:5" pos:end="33:10">status</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="35:63"><name pos:start="33:14" pos:end="33:39">nvdimm_rw_label_data_check</name><argument_list pos:start="33:40" pos:end="35:63">(<argument pos:start="33:41" pos:end="33:46"><expr pos:start="33:41" pos:end="33:46"><name pos:start="33:41" pos:end="33:46">nvdimm</name></expr></argument>, <argument pos:start="33:49" pos:end="33:70"><expr pos:start="33:49" pos:end="33:70"><name pos:start="33:49" pos:end="33:70"><name pos:start="33:49" pos:end="33:62">get_label_data</name><operator pos:start="33:63" pos:end="33:64">-&gt;</operator><name pos:start="33:65" pos:end="33:70">offset</name></name></expr></argument>,

                                        <argument pos:start="35:41" pos:end="35:62"><expr pos:start="35:41" pos:end="35:62"><name pos:start="35:41" pos:end="35:62"><name pos:start="35:41" pos:end="35:54">get_label_data</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:62">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:34">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:14">status</name> <operator pos:start="37:16" pos:end="37:17">!=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr> <comment type="block" pos:start="37:21" pos:end="37:33">/* Success */</comment>)</condition> <block pos:start="37:36" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:15">

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:29">nvdimm_dsm_no_payload</name><argument_list pos:start="39:30" pos:end="39:51">(<argument pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:36">status</name></expr></argument>, <argument pos:start="39:39" pos:end="39:50"><expr pos:start="39:39" pos:end="39:50"><name pos:start="39:39" pos:end="39:50">dsm_mem_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:64"><expr pos:start="47:5" pos:end="47:63"><name pos:start="47:5" pos:end="47:8">size</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <sizeof pos:start="47:12" pos:end="47:38">sizeof<argument_list pos:start="47:18" pos:end="47:38">(<argument pos:start="47:19" pos:end="47:37"><expr pos:start="47:19" pos:end="47:37"><operator pos:start="47:19" pos:end="47:19">*</operator><name pos:start="47:20" pos:end="47:37">get_label_data_out</name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:40" pos:end="47:40">+</operator> <name pos:start="47:42" pos:end="47:63"><name pos:start="47:42" pos:end="47:55">get_label_data</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:63">length</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><call pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:10">assert</name><argument_list pos:start="49:11" pos:end="49:24">(<argument pos:start="49:12" pos:end="49:23"><expr pos:start="49:12" pos:end="49:23"><name pos:start="49:12" pos:end="49:15">size</name> <operator pos:start="49:17" pos:end="49:18">&lt;=</operator> <literal type="number" pos:start="49:20" pos:end="49:23">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:22">get_label_data_out</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:39"><name pos:start="51:26" pos:end="51:33">g_malloc</name><argument_list pos:start="51:34" pos:end="51:39">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:22">get_label_data_out</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:27">len</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <call pos:start="55:31" pos:end="55:47"><name pos:start="55:31" pos:end="55:41">cpu_to_le32</name><argument_list pos:start="55:42" pos:end="55:47">(<argument pos:start="55:43" pos:end="55:46"><expr pos:start="55:43" pos:end="55:46"><name pos:start="55:43" pos:end="55:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:71"><expr pos:start="57:5" pos:end="57:70"><name pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:22">get_label_data_out</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:39">func_ret_status</name></name> <operator pos:start="57:41" pos:end="57:41">=</operator> <call pos:start="57:43" pos:end="57:70"><name pos:start="57:43" pos:end="57:53">cpu_to_le32</name><argument_list pos:start="57:54" pos:end="57:70">(<argument pos:start="57:55" pos:end="57:55"><expr pos:start="57:55" pos:end="57:55"><literal type="number" pos:start="57:55" pos:end="57:55">0</literal></expr></argument> <comment type="block" pos:start="57:57" pos:end="57:69">/* Success */</comment>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:73"><expr pos:start="59:5" pos:end="61:72"><call pos:start="59:5" pos:end="61:72"><name pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:7">nvc</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:24">read_label_data</name></name><argument_list pos:start="59:25" pos:end="61:72">(<argument pos:start="59:26" pos:end="59:31"><expr pos:start="59:26" pos:end="59:31"><name pos:start="59:26" pos:end="59:31">nvdimm</name></expr></argument>, <argument pos:start="59:34" pos:end="59:60"><expr pos:start="59:34" pos:end="59:60"><name pos:start="59:34" pos:end="59:60"><name pos:start="59:34" pos:end="59:51">get_label_data_out</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:60">out_buf</name></name></expr></argument>,

                         <argument pos:start="61:26" pos:end="61:47"><expr pos:start="61:26" pos:end="61:47"><name pos:start="61:26" pos:end="61:47"><name pos:start="61:26" pos:end="61:39">get_label_data</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:47">length</name></name></expr></argument>, <argument pos:start="61:50" pos:end="61:71"><expr pos:start="61:50" pos:end="61:71"><name pos:start="61:50" pos:end="61:71"><name pos:start="61:50" pos:end="61:63">get_label_data</name><operator pos:start="61:64" pos:end="61:65">-&gt;</operator><name pos:start="61:66" pos:end="61:71">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:70"><expr pos:start="65:5" pos:end="65:69"><call pos:start="65:5" pos:end="65:69"><name pos:start="65:5" pos:end="65:29">cpu_physical_memory_write</name><argument_list pos:start="65:30" pos:end="65:69">(<argument pos:start="65:31" pos:end="65:42"><expr pos:start="65:31" pos:end="65:42"><name pos:start="65:31" pos:end="65:42">dsm_mem_addr</name></expr></argument>, <argument pos:start="65:45" pos:end="65:62"><expr pos:start="65:45" pos:end="65:62"><name pos:start="65:45" pos:end="65:62">get_label_data_out</name></expr></argument>, <argument pos:start="65:65" pos:end="65:68"><expr pos:start="65:65" pos:end="65:68"><name pos:start="65:65" pos:end="65:68">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><call pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:30">(<argument pos:start="67:12" pos:end="67:29"><expr pos:start="67:12" pos:end="67:29"><name pos:start="67:12" pos:end="67:29">get_label_data_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
