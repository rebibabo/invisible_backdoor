<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20391.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mpegvideo_parse</name><parameter_list pos:start="1:27" pos:end="7:60">(<parameter pos:start="1:28" pos:end="1:50"><decl pos:start="1:28" pos:end="1:50"><type pos:start="1:28" pos:end="1:50"><name pos:start="1:28" pos:end="1:47">AVCodecParserContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:48"><decl pos:start="3:28" pos:end="3:48"><type pos:start="3:28" pos:end="3:48"><name pos:start="3:28" pos:end="3:41">AVCodecContext</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">avctx</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:50"><decl pos:start="5:28" pos:end="5:50"><type pos:start="5:28" pos:end="5:50"><specifier pos:start="5:28" pos:end="5:32">const</specifier> <name pos:start="5:34" pos:end="5:40">uint8_t</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier><modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:50">poutbuf</name></decl></parameter>, <parameter pos:start="5:53" pos:end="5:69"><decl pos:start="5:53" pos:end="5:69"><type pos:start="5:53" pos:end="5:69"><name pos:start="5:53" pos:end="5:55">int</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:69">poutbuf_size</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:45"><decl pos:start="7:28" pos:end="7:45"><type pos:start="7:28" pos:end="7:45"><specifier pos:start="7:28" pos:end="7:32">const</specifier> <name pos:start="7:34" pos:end="7:40">uint8_t</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:45">buf</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:59"><decl pos:start="7:48" pos:end="7:59"><type pos:start="7:48" pos:end="7:59"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:59">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="67:1">{<block_content pos:start="11:5" pos:end="65:16">

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">ParseContext1</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">pc1</name> <init pos:start="11:24" pos:end="11:37">= <expr pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">ParseContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">pc</name><init pos:start="13:21" pos:end="13:30">= <expr pos:start="13:23" pos:end="13:30"><operator pos:start="13:23" pos:end="13:23">&amp;</operator><name pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:26">pc1</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:30">pc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">next</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="41:5"><if pos:start="19:5" pos:end="23:5">if<condition pos:start="19:7" pos:end="19:46">(<expr pos:start="19:8" pos:end="19:45"><name pos:start="19:8" pos:end="19:15"><name pos:start="19:8" pos:end="19:8">s</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:15">flags</name></name> <operator pos:start="19:17" pos:end="19:17">&amp;</operator> <name pos:start="19:19" pos:end="19:45">PARSER_FLAG_COMPLETE_FRAMES</name></expr>)</condition><block pos:start="19:47" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:12">next</name><operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:22">buf_size</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="23:6" pos:end="41:5">else<block pos:start="23:10" pos:end="41:5">{<block_content pos:start="25:9" pos:end="37:9">

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:12">next</name><operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:56"><name pos:start="25:15" pos:end="25:37">ff_mpeg1_find_frame_end</name><argument_list pos:start="25:38" pos:end="25:56">(<argument pos:start="25:39" pos:end="25:40"><expr pos:start="25:39" pos:end="25:40"><name pos:start="25:39" pos:end="25:40">pc</name></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">buf</name></expr></argument>, <argument pos:start="25:48" pos:end="25:55"><expr pos:start="25:48" pos:end="25:55"><name pos:start="25:48" pos:end="25:55">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:60">(<expr pos:start="29:13" pos:end="29:59"><call pos:start="29:13" pos:end="29:55"><name pos:start="29:13" pos:end="29:28">ff_combine_frame</name><argument_list pos:start="29:29" pos:end="29:55">(<argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">pc</name></expr></argument>, <argument pos:start="29:34" pos:end="29:37"><expr pos:start="29:34" pos:end="29:37"><name pos:start="29:34" pos:end="29:37">next</name></expr></argument>, <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><operator pos:start="29:40" pos:end="29:40">&amp;</operator><name pos:start="29:41" pos:end="29:43">buf</name></expr></argument>, <argument pos:start="29:46" pos:end="29:54"><expr pos:start="29:46" pos:end="29:54"><operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:54">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="29:57" pos:end="29:57">&lt;</operator> <literal type="number" pos:start="29:59" pos:end="29:59">0</literal></expr>)</condition> <block pos:start="29:62" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:28">

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:20">poutbuf</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:27">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:30"><expr pos:start="33:13" pos:end="33:29"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:25">poutbuf_size</name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:28">return <expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="43:5" pos:end="47:63">/* we have a full frame : we just parse the first few MPEG headers

       to have the full timing information. The time take by this

       function should be negligible for uncorrupted streams */</comment>

    <expr_stmt pos:start="49:5" pos:end="58:0"><expr pos:start="49:5" pos:end="49:54"><call pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:29">mpegvideo_extract_headers</name><argument_list pos:start="49:30" pos:end="49:54">(<argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">s</name></expr></argument>, <argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">avctx</name></expr></argument>, <argument pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><name pos:start="49:41" pos:end="49:43">buf</name></expr></argument>, <argument pos:start="49:46" pos:end="49:53"><expr pos:start="49:46" pos:end="49:53"><name pos:start="49:46" pos:end="49:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="51:1" pos:end="51:5">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:5"><literal type="number" pos:start="51:5" pos:end="51:5">0</literal></expr></cpp:if>

    printf("pict_type=%d frame_rate=%0.3f repeat_pict=%d\n",

           s-&gt;pict_type, (double)avctx-&gt;time_base.den / avctx-&gt;time_base.num, s-&gt;repeat_pict);

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:12">poutbuf</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:18">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><operator pos:start="63:5" pos:end="63:5">*</operator><name pos:start="63:6" pos:end="63:17">poutbuf_size</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:28">buf_size</name></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:16">return <expr pos:start="65:12" pos:end="65:15"><name pos:start="65:12" pos:end="65:15">next</name></expr>;</return>

</block_content>}</block></function>
</unit>
