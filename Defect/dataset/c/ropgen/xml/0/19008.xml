<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19008.c" pos:tabs="8"><function pos:start="1:1" pos:end="415:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:32">ff_vaapi_encode_init</name><parameter_list pos:start="1:33" pos:end="3:61">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:60"><decl pos:start="3:34" pos:end="3:60"><type pos:start="3:34" pos:end="3:60"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:54">VAAPIEncodeType</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:60">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="415:1">{<block_content pos:start="7:5" pos:end="413:15">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">VAAPIEncodeContext</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:27">ctx</name> <init pos:start="7:29" pos:end="7:46">= <expr pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:35">avctx</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">AVVAAPIFramesContext</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:37">recon_hwctx</name> <init pos:start="9:39" pos:end="9:44">= <expr pos:start="9:41" pos:end="9:44"><name pos:start="9:41" pos:end="9:44">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVVAAPIHWConfig</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:29">hwconfig</name> <init pos:start="11:31" pos:end="11:36">= <expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25">AVHWFramesConstraints</name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:38">constraints</name> <init pos:start="13:40" pos:end="13:45">= <expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:22">AVPixelFormat</name></name></type> <name pos:start="15:24" pos:end="15:35">recon_format</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">VAStatus</name></type> <name pos:start="17:14" pos:end="17:16">vas</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">err</name></decl>, <decl pos:start="19:14" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:14">avctx</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:29">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="23:32" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:31">

        <expr_stmt pos:start="25:9" pos:end="27:63"><expr pos:start="25:9" pos:end="27:62"><call pos:start="25:9" pos:end="27:62"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="27:62">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="27:61"><expr pos:start="25:37" pos:end="27:61"><literal type="string" pos:start="25:37" pos:end="25:69">"A hardware frames reference is "</literal>

               <literal type="string" pos:start="27:16" pos:end="27:61">"required to associate the encoding device.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">codec</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:21">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:22">codec_options</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:48"><name pos:start="37:26" pos:end="37:28">ctx</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:48">codec_options_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:18">va_config</name></name>  <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:35">VA_INVALID_ID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:19">va_context</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:35">VA_INVALID_ID</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:7">ctx</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:18">priv_data</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:53"><name pos:start="47:22" pos:end="47:31">av_mallocz</name><argument_list pos:start="47:32" pos:end="47:53">(<argument pos:start="47:33" pos:end="47:52"><expr pos:start="47:33" pos:end="47:52"><name pos:start="47:33" pos:end="47:52"><name pos:start="47:33" pos:end="47:36">type</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:52">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:24">(<expr pos:start="49:9" pos:end="49:23"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:23"><name pos:start="49:10" pos:end="49:12">ctx</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:23">priv_data</name></name></expr>)</condition> <block pos:start="49:26" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:11">err</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:29"><name pos:start="51:15" pos:end="51:21">AVERROR</name><argument_list pos:start="51:22" pos:end="51:29">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><name pos:start="51:23" pos:end="51:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:64"><expr pos:start="59:5" pos:end="59:63"><name pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:7">ctx</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:25">input_frames_ref</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:63"><name pos:start="59:29" pos:end="59:41">av_buffer_ref</name><argument_list pos:start="59:42" pos:end="59:63">(<argument pos:start="59:43" pos:end="59:62"><expr pos:start="59:43" pos:end="59:62"><name pos:start="59:43" pos:end="59:62"><name pos:start="59:43" pos:end="59:47">avctx</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:62">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:31">(<expr pos:start="61:9" pos:end="61:30"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:30"><name pos:start="61:10" pos:end="61:12">ctx</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:30">input_frames_ref</name></name></expr>)</condition> <block pos:start="61:33" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:18">

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:11">err</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:29"><name pos:start="63:15" pos:end="63:21">AVERROR</name><argument_list pos:start="63:22" pos:end="63:29">(<argument pos:start="63:23" pos:end="63:28"><expr pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:72"><expr pos:start="69:5" pos:end="69:71"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:7">ctx</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:21">input_frames</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:42">AVHWFramesContext</name><operator pos:start="69:43" pos:end="69:43">*</operator><operator pos:start="69:44" pos:end="69:44">)</operator><name pos:start="69:45" pos:end="69:71"><name pos:start="69:45" pos:end="69:47">ctx</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:65">input_frames_ref</name><operator pos:start="69:66" pos:end="69:67">-&gt;</operator><name pos:start="69:68" pos:end="69:71">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:67"><expr pos:start="73:5" pos:end="73:66"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:7">ctx</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:19">device_ref</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:66"><name pos:start="73:23" pos:end="73:35">av_buffer_ref</name><argument_list pos:start="73:36" pos:end="73:66">(<argument pos:start="73:37" pos:end="73:65"><expr pos:start="73:37" pos:end="73:65"><name pos:start="73:37" pos:end="73:65"><name pos:start="73:37" pos:end="73:39">ctx</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:53">input_frames</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:65">device_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:25">(<expr pos:start="75:9" pos:end="75:24"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:24"><name pos:start="75:10" pos:end="75:12">ctx</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:24">device_ref</name></name></expr>)</condition> <block pos:start="75:27" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:18">

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:11">err</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:29"><name pos:start="77:15" pos:end="77:21">AVERROR</name><argument_list pos:start="77:22" pos:end="77:29">(<argument pos:start="77:23" pos:end="77:28"><expr pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:60"><expr pos:start="83:5" pos:end="83:59"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:7">ctx</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:15">device</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <operator pos:start="83:19" pos:end="83:19">(</operator><name pos:start="83:20" pos:end="83:36">AVHWDeviceContext</name><operator pos:start="83:37" pos:end="83:37">*</operator><operator pos:start="83:38" pos:end="83:38">)</operator><name pos:start="83:39" pos:end="83:59"><name pos:start="83:39" pos:end="83:41">ctx</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:53">device_ref</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:59">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:7">ctx</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:14">hwctx</name></name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:35"><name pos:start="85:18" pos:end="85:20">ctx</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:28">device</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:35">hwctx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:34"><expr pos:start="89:5" pos:end="89:33"><name pos:start="89:5" pos:end="89:7">err</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <call pos:start="89:11" pos:end="89:33"><name pos:start="89:11" pos:end="89:26"><name pos:start="89:11" pos:end="89:13">ctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">codec</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:26">init</name></name><argument_list pos:start="89:27" pos:end="89:33">(<argument pos:start="89:28" pos:end="89:32"><expr pos:start="89:28" pos:end="89:32"><name pos:start="89:28" pos:end="89:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:18"><if pos:start="91:5" pos:end="93:18">if <condition pos:start="91:8" pos:end="91:16">(<expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:11">err</name> <operator pos:start="91:13" pos:end="91:13">&lt;</operator> <literal type="number" pos:start="91:15" pos:end="91:15">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:18"><block_content pos:start="93:9" pos:end="93:18">

        <goto pos:start="93:9" pos:end="93:18">goto <name pos:start="93:14" pos:end="93:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:43"><expr pos:start="97:5" pos:end="97:42"><name pos:start="97:5" pos:end="97:7">err</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:42"><name pos:start="97:11" pos:end="97:35">vaapi_encode_check_config</name><argument_list pos:start="97:36" pos:end="97:42">(<argument pos:start="97:37" pos:end="97:41"><expr pos:start="97:37" pos:end="97:41"><name pos:start="97:37" pos:end="97:41">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:18"><if pos:start="99:5" pos:end="101:18">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">err</name> <operator pos:start="99:13" pos:end="99:13">&lt;</operator> <literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:18"><block_content pos:start="101:9" pos:end="101:18">

        <goto pos:start="101:9" pos:end="101:18">goto <name pos:start="101:14" pos:end="101:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="111:42"><expr pos:start="105:5" pos:end="111:41"><name pos:start="105:5" pos:end="105:7">vas</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="111:41"><name pos:start="105:11" pos:end="105:24">vaCreateConfig</name><argument_list pos:start="105:25" pos:end="111:41">(<argument pos:start="105:26" pos:end="105:44"><expr pos:start="105:26" pos:end="105:44"><name pos:start="105:26" pos:end="105:44"><name pos:start="105:26" pos:end="105:28">ctx</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:35">hwctx</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:44">display</name></name></expr></argument>,

                         <argument pos:start="107:26" pos:end="107:40"><expr pos:start="107:26" pos:end="107:40"><name pos:start="107:26" pos:end="107:40"><name pos:start="107:26" pos:end="107:28">ctx</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:40">va_profile</name></name></expr></argument>, <argument pos:start="107:43" pos:end="107:60"><expr pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:45">ctx</name><operator pos:start="107:46" pos:end="107:47">-&gt;</operator><name pos:start="107:48" pos:end="107:60">va_entrypoint</name></name></expr></argument>,

                         <argument pos:start="109:26" pos:end="109:47"><expr pos:start="109:26" pos:end="109:47"><name pos:start="109:26" pos:end="109:47"><name pos:start="109:26" pos:end="109:28">ctx</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:47">config_attributes</name></name></expr></argument>, <argument pos:start="109:50" pos:end="109:74"><expr pos:start="109:50" pos:end="109:74"><name pos:start="109:50" pos:end="109:74"><name pos:start="109:50" pos:end="109:52">ctx</name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:74">nb_config_attributes</name></name></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:40"><expr pos:start="111:26" pos:end="111:40"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:40"><name pos:start="111:27" pos:end="111:29">ctx</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:40">va_config</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="123:5"><if pos:start="113:5" pos:end="123:5">if <condition pos:start="113:8" pos:end="113:33">(<expr pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:11">vas</name> <operator pos:start="113:13" pos:end="113:14">!=</operator> <name pos:start="113:16" pos:end="113:32">VA_STATUS_SUCCESS</name></expr>)</condition> <block pos:start="113:35" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:18">

        <expr_stmt pos:start="115:9" pos:end="117:66"><expr pos:start="115:9" pos:end="117:65"><call pos:start="115:9" pos:end="117:65"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="117:65">(<argument pos:start="115:16" pos:end="115:20"><expr pos:start="115:16" pos:end="115:20"><name pos:start="115:16" pos:end="115:20">avctx</name></expr></argument>, <argument pos:start="115:23" pos:end="115:34"><expr pos:start="115:23" pos:end="115:34"><name pos:start="115:23" pos:end="115:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:37" pos:end="117:42"><expr pos:start="115:37" pos:end="117:42"><literal type="string" pos:start="115:37" pos:end="115:71">"Failed to create encode pipeline "</literal>

               <literal type="string" pos:start="117:16" pos:end="117:42">"configuration: %d (%s).\n"</literal></expr></argument>, <argument pos:start="117:45" pos:end="117:47"><expr pos:start="117:45" pos:end="117:47"><name pos:start="117:45" pos:end="117:47">vas</name></expr></argument>, <argument pos:start="117:50" pos:end="117:64"><expr pos:start="117:50" pos:end="117:64"><call pos:start="117:50" pos:end="117:64"><name pos:start="117:50" pos:end="117:59">vaErrorStr</name><argument_list pos:start="117:60" pos:end="117:64">(<argument pos:start="117:61" pos:end="117:63"><expr pos:start="117:61" pos:end="117:63"><name pos:start="117:61" pos:end="117:63">vas</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:11">err</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <call pos:start="119:15" pos:end="119:26"><name pos:start="119:15" pos:end="119:21">AVERROR</name><argument_list pos:start="119:22" pos:end="119:26">(<argument pos:start="119:23" pos:end="119:25"><expr pos:start="119:23" pos:end="119:25"><name pos:start="119:23" pos:end="119:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:59"><expr pos:start="127:5" pos:end="127:58"><name pos:start="127:5" pos:end="127:12">hwconfig</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <call pos:start="127:16" pos:end="127:58"><name pos:start="127:16" pos:end="127:41">av_hwdevice_hwconfig_alloc</name><argument_list pos:start="127:42" pos:end="127:58">(<argument pos:start="127:43" pos:end="127:57"><expr pos:start="127:43" pos:end="127:57"><name pos:start="127:43" pos:end="127:57"><name pos:start="127:43" pos:end="127:45">ctx</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:57">device_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if <condition pos:start="129:8" pos:end="129:18">(<expr pos:start="129:9" pos:end="129:17"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:17">hwconfig</name></expr>)</condition> <block pos:start="129:20" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:18">

        <expr_stmt pos:start="131:9" pos:end="131:30"><expr pos:start="131:9" pos:end="131:29"><name pos:start="131:9" pos:end="131:11">err</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:29"><name pos:start="131:15" pos:end="131:21">AVERROR</name><argument_list pos:start="131:22" pos:end="131:29">(<argument pos:start="131:23" pos:end="131:28"><expr pos:start="131:23" pos:end="131:28"><name pos:start="131:23" pos:end="131:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="133:9" pos:end="133:18">goto <name pos:start="133:14" pos:end="133:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:41"><expr pos:start="137:5" pos:end="137:40"><name pos:start="137:5" pos:end="137:23"><name pos:start="137:5" pos:end="137:12">hwconfig</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:23">config_id</name></name> <operator pos:start="137:25" pos:end="137:25">=</operator> <name pos:start="137:27" pos:end="137:40"><name pos:start="137:27" pos:end="137:29">ctx</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:40">va_config</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="143:64"><expr pos:start="141:5" pos:end="143:63"><name pos:start="141:5" pos:end="141:15">constraints</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="143:63"><name pos:start="141:19" pos:end="141:53">av_hwdevice_get_hwframe_constraints</name><argument_list pos:start="141:54" pos:end="143:63">(<argument pos:start="141:55" pos:end="141:69"><expr pos:start="141:55" pos:end="141:69"><name pos:start="141:55" pos:end="141:69"><name pos:start="141:55" pos:end="141:57">ctx</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:69">device_ref</name></name></expr></argument>,

                                                      <argument pos:start="143:55" pos:end="143:62"><expr pos:start="143:55" pos:end="143:62"><name pos:start="143:55" pos:end="143:62">hwconfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:21">(<expr pos:start="145:9" pos:end="145:20"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:20">constraints</name></expr>)</condition> <block pos:start="145:23" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:18">

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:11">err</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <call pos:start="147:15" pos:end="147:29"><name pos:start="147:15" pos:end="147:21">AVERROR</name><argument_list pos:start="147:22" pos:end="147:29">(<argument pos:start="147:23" pos:end="147:28"><expr pos:start="147:23" pos:end="147:28"><name pos:start="147:23" pos:end="147:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="149:9" pos:end="149:18">goto <name pos:start="149:14" pos:end="149:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="155:5" pos:end="155:73">// Probably we can use the input surface format as the surface format</comment>

    <comment type="line" pos:start="157:5" pos:end="157:75">// of the reconstructed frames.  If not, we just pick the first (only?)</comment>

    <comment type="line" pos:start="159:5" pos:end="159:59">// format in the valid list and hope that it all works.</comment>

    <expr_stmt pos:start="161:5" pos:end="161:35"><expr pos:start="161:5" pos:end="161:34"><name pos:start="161:5" pos:end="161:16">recon_format</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <name pos:start="161:20" pos:end="161:34">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="195:5"><if pos:start="163:5" pos:end="189:5">if <condition pos:start="163:8" pos:end="163:38">(<expr pos:start="163:9" pos:end="163:37"><name pos:start="163:9" pos:end="163:37"><name pos:start="163:9" pos:end="163:19">constraints</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:37">valid_sw_formats</name></name></expr>)</condition> <block pos:start="163:40" pos:end="189:5">{<block_content pos:start="165:9" pos:end="187:9">

        <for pos:start="165:9" pos:end="177:9">for <control pos:start="165:13" pos:end="165:77">(<init pos:start="165:14" pos:end="165:19"><expr pos:start="165:14" pos:end="165:18"><name pos:start="165:14" pos:end="165:14">i</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>;</init> <condition pos:start="165:21" pos:end="165:72"><expr pos:start="165:21" pos:end="165:71"><name pos:start="165:21" pos:end="165:52"><name pos:start="165:21" pos:end="165:31">constraints</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:49">valid_sw_formats</name><index pos:start="165:50" pos:end="165:52">[<expr pos:start="165:51" pos:end="165:51"><name pos:start="165:51" pos:end="165:51">i</name></expr>]</index></name> <operator pos:start="165:54" pos:end="165:55">!=</operator> <name pos:start="165:57" pos:end="165:71">AV_PIX_FMT_NONE</name></expr>;</condition> <incr pos:start="165:74" pos:end="165:76"><expr pos:start="165:74" pos:end="165:76"><name pos:start="165:74" pos:end="165:74">i</name><operator pos:start="165:75" pos:end="165:76">++</operator></expr></incr>)</control> <block pos:start="165:79" pos:end="177:9">{<block_content pos:start="167:13" pos:end="175:13">

            <if_stmt pos:start="167:13" pos:end="175:13"><if pos:start="167:13" pos:end="175:13">if <condition pos:start="167:16" pos:end="169:49">(<expr pos:start="167:17" pos:end="169:48"><name pos:start="167:17" pos:end="167:44"><name pos:start="167:17" pos:end="167:19">ctx</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:33">input_frames</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:44">sw_format</name></name> <operator pos:start="167:46" pos:end="167:47">==</operator>

                <name pos:start="169:17" pos:end="169:48"><name pos:start="169:17" pos:end="169:27">constraints</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:45">valid_sw_formats</name><index pos:start="169:46" pos:end="169:48">[<expr pos:start="169:47" pos:end="169:47"><name pos:start="169:47" pos:end="169:47">i</name></expr>]</index></name></expr>)</condition> <block pos:start="169:51" pos:end="175:13">{<block_content pos:start="171:17" pos:end="173:22">

                <expr_stmt pos:start="171:17" pos:end="171:60"><expr pos:start="171:17" pos:end="171:59"><name pos:start="171:17" pos:end="171:28">recon_format</name> <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:59"><name pos:start="171:32" pos:end="171:34">ctx</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:48">input_frames</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:59">sw_format</name></name></expr>;</expr_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:44">(<expr pos:start="179:13" pos:end="179:43"><name pos:start="179:13" pos:end="179:24">recon_format</name> <operator pos:start="179:26" pos:end="179:27">==</operator> <name pos:start="179:29" pos:end="179:43">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="179:46" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:60">

            <comment type="line" pos:start="181:13" pos:end="181:70">// No match.  Just use the first in the supported list and</comment>

            <comment type="line" pos:start="183:13" pos:end="183:33">// hope for the best.</comment>

            <expr_stmt pos:start="185:13" pos:end="185:60"><expr pos:start="185:13" pos:end="185:59"><name pos:start="185:13" pos:end="185:24">recon_format</name> <operator pos:start="185:26" pos:end="185:26">=</operator> <name pos:start="185:28" pos:end="185:59"><name pos:start="185:28" pos:end="185:38">constraints</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:56">valid_sw_formats</name><index pos:start="185:57" pos:end="185:59">[<expr pos:start="185:58" pos:end="185:58"><literal type="number" pos:start="185:58" pos:end="185:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="195:5">else <block pos:start="189:12" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:52">

        <comment type="line" pos:start="191:9" pos:end="191:50">// No idea what to use; copy input format.</comment>

        <expr_stmt pos:start="193:9" pos:end="193:52"><expr pos:start="193:9" pos:end="193:51"><name pos:start="193:9" pos:end="193:20">recon_format</name> <operator pos:start="193:22" pos:end="193:22">=</operator> <name pos:start="193:24" pos:end="193:51"><name pos:start="193:24" pos:end="193:26">ctx</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:40">input_frames</name><operator pos:start="193:41" pos:end="193:42">-&gt;</operator><name pos:start="193:43" pos:end="193:51">sw_format</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="197:5" pos:end="199:73"><expr pos:start="197:5" pos:end="199:72"><call pos:start="197:5" pos:end="199:72"><name pos:start="197:5" pos:end="197:10">av_log</name><argument_list pos:start="197:11" pos:end="199:72">(<argument pos:start="197:12" pos:end="197:16"><expr pos:start="197:12" pos:end="197:16"><name pos:start="197:12" pos:end="197:16">avctx</name></expr></argument>, <argument pos:start="197:19" pos:end="197:30"><expr pos:start="197:19" pos:end="197:30"><name pos:start="197:19" pos:end="197:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="197:33" pos:end="199:36"><expr pos:start="197:33" pos:end="199:36"><literal type="string" pos:start="197:33" pos:end="197:56">"Using %s as format of "</literal>

           <literal type="string" pos:start="199:12" pos:end="199:36">"reconstructed frames.\n"</literal></expr></argument>, <argument pos:start="199:39" pos:end="199:71"><expr pos:start="199:39" pos:end="199:71"><call pos:start="199:39" pos:end="199:71"><name pos:start="199:39" pos:end="199:57">av_get_pix_fmt_name</name><argument_list pos:start="199:58" pos:end="199:71">(<argument pos:start="199:59" pos:end="199:70"><expr pos:start="199:59" pos:end="199:70"><name pos:start="199:59" pos:end="199:70">recon_format</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="203:5" pos:end="225:5"><if pos:start="203:5" pos:end="225:5">if <condition pos:start="203:8" pos:end="209:54">(<expr pos:start="203:9" pos:end="209:53"><name pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:11">ctx</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:26">aligned_width</name></name>  <operator pos:start="203:29" pos:end="203:29">&lt;</operator> <name pos:start="203:31" pos:end="203:52"><name pos:start="203:31" pos:end="203:41">constraints</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:52">min_width</name></name>  <operator pos:start="203:55" pos:end="203:56">||</operator>

        <name pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:11">ctx</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:27">aligned_height</name></name> <operator pos:start="205:29" pos:end="205:29">&lt;</operator> <name pos:start="205:31" pos:end="205:53"><name pos:start="205:31" pos:end="205:41">constraints</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:53">min_height</name></name> <operator pos:start="205:55" pos:end="205:56">||</operator>

        <name pos:start="207:9" pos:end="207:26"><name pos:start="207:9" pos:end="207:11">ctx</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:26">aligned_width</name></name>  <operator pos:start="207:29" pos:end="207:29">&gt;</operator> <name pos:start="207:31" pos:end="207:52"><name pos:start="207:31" pos:end="207:41">constraints</name><operator pos:start="207:42" pos:end="207:43">-&gt;</operator><name pos:start="207:44" pos:end="207:52">max_width</name></name> <operator pos:start="207:54" pos:end="207:55">||</operator>

        <name pos:start="209:9" pos:end="209:27"><name pos:start="209:9" pos:end="209:11">ctx</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:27">aligned_height</name></name> <operator pos:start="209:29" pos:end="209:29">&gt;</operator> <name pos:start="209:31" pos:end="209:53"><name pos:start="209:31" pos:end="209:41">constraints</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:53">max_height</name></name></expr>)</condition> <block pos:start="209:56" pos:end="225:5">{<block_content pos:start="211:9" pos:end="223:18">

        <expr_stmt pos:start="211:9" pos:end="219:65"><expr pos:start="211:9" pos:end="219:64"><call pos:start="211:9" pos:end="219:64"><name pos:start="211:9" pos:end="211:14">av_log</name><argument_list pos:start="211:15" pos:end="219:64">(<argument pos:start="211:16" pos:end="211:20"><expr pos:start="211:16" pos:end="211:20"><name pos:start="211:16" pos:end="211:20">avctx</name></expr></argument>, <argument pos:start="211:23" pos:end="211:34"><expr pos:start="211:23" pos:end="211:34"><name pos:start="211:23" pos:end="211:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:37" pos:end="213:70"><expr pos:start="211:37" pos:end="213:70"><literal type="string" pos:start="211:37" pos:end="211:76">"Hardware does not support encoding at "</literal>

               <literal type="string" pos:start="213:16" pos:end="213:70">"size %dx%d (constraints: width %d-%d height %d-%d).\n"</literal></expr></argument>,

               <argument pos:start="215:16" pos:end="215:33"><expr pos:start="215:16" pos:end="215:33"><name pos:start="215:16" pos:end="215:33"><name pos:start="215:16" pos:end="215:18">ctx</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:33">aligned_width</name></name></expr></argument>, <argument pos:start="215:36" pos:end="215:54"><expr pos:start="215:36" pos:end="215:54"><name pos:start="215:36" pos:end="215:54"><name pos:start="215:36" pos:end="215:38">ctx</name><operator pos:start="215:39" pos:end="215:40">-&gt;</operator><name pos:start="215:41" pos:end="215:54">aligned_height</name></name></expr></argument>,

               <argument pos:start="217:16" pos:end="217:37"><expr pos:start="217:16" pos:end="217:37"><name pos:start="217:16" pos:end="217:37"><name pos:start="217:16" pos:end="217:26">constraints</name><operator pos:start="217:27" pos:end="217:28">-&gt;</operator><name pos:start="217:29" pos:end="217:37">min_width</name></name></expr></argument>,  <argument pos:start="217:41" pos:end="217:62"><expr pos:start="217:41" pos:end="217:62"><name pos:start="217:41" pos:end="217:62"><name pos:start="217:41" pos:end="217:51">constraints</name><operator pos:start="217:52" pos:end="217:53">-&gt;</operator><name pos:start="217:54" pos:end="217:62">max_width</name></name></expr></argument>,

               <argument pos:start="219:16" pos:end="219:38"><expr pos:start="219:16" pos:end="219:38"><name pos:start="219:16" pos:end="219:38"><name pos:start="219:16" pos:end="219:26">constraints</name><operator pos:start="219:27" pos:end="219:28">-&gt;</operator><name pos:start="219:29" pos:end="219:38">min_height</name></name></expr></argument>, <argument pos:start="219:41" pos:end="219:63"><expr pos:start="219:41" pos:end="219:63"><name pos:start="219:41" pos:end="219:63"><name pos:start="219:41" pos:end="219:51">constraints</name><operator pos:start="219:52" pos:end="219:53">-&gt;</operator><name pos:start="219:54" pos:end="219:63">max_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:30"><expr pos:start="221:9" pos:end="221:29"><name pos:start="221:9" pos:end="221:11">err</name> <operator pos:start="221:13" pos:end="221:13">=</operator> <call pos:start="221:15" pos:end="221:29"><name pos:start="221:15" pos:end="221:21">AVERROR</name><argument_list pos:start="221:22" pos:end="221:29">(<argument pos:start="221:23" pos:end="221:28"><expr pos:start="221:23" pos:end="221:28"><name pos:start="221:23" pos:end="221:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="223:9" pos:end="223:18">goto <name pos:start="223:14" pos:end="223:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:24"><expr pos:start="229:5" pos:end="229:23"><call pos:start="229:5" pos:end="229:23"><name pos:start="229:5" pos:end="229:12">av_freep</name><argument_list pos:start="229:13" pos:end="229:23">(<argument pos:start="229:14" pos:end="229:22"><expr pos:start="229:14" pos:end="229:22"><operator pos:start="229:14" pos:end="229:14">&amp;</operator><name pos:start="229:15" pos:end="229:22">hwconfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:46"><expr pos:start="231:5" pos:end="231:45"><call pos:start="231:5" pos:end="231:45"><name pos:start="231:5" pos:end="231:31">av_hwframe_constraints_free</name><argument_list pos:start="231:32" pos:end="231:45">(<argument pos:start="231:33" pos:end="231:44"><expr pos:start="231:33" pos:end="231:44"><operator pos:start="231:33" pos:end="231:33">&amp;</operator><name pos:start="231:34" pos:end="231:44">constraints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:66"><expr pos:start="235:5" pos:end="235:65"><name pos:start="235:5" pos:end="235:25"><name pos:start="235:5" pos:end="235:7">ctx</name><operator pos:start="235:8" pos:end="235:9">-&gt;</operator><name pos:start="235:10" pos:end="235:25">recon_frames_ref</name></name> <operator pos:start="235:27" pos:end="235:27">=</operator> <call pos:start="235:29" pos:end="235:65"><name pos:start="235:29" pos:end="235:48">av_hwframe_ctx_alloc</name><argument_list pos:start="235:49" pos:end="235:65">(<argument pos:start="235:50" pos:end="235:64"><expr pos:start="235:50" pos:end="235:64"><name pos:start="235:50" pos:end="235:64"><name pos:start="235:50" pos:end="235:52">ctx</name><operator pos:start="235:53" pos:end="235:54">-&gt;</operator><name pos:start="235:55" pos:end="235:64">device_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="243:5"><if pos:start="237:5" pos:end="243:5">if <condition pos:start="237:8" pos:end="237:31">(<expr pos:start="237:9" pos:end="237:30"><operator pos:start="237:9" pos:end="237:9">!</operator><name pos:start="237:10" pos:end="237:30"><name pos:start="237:10" pos:end="237:12">ctx</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:30">recon_frames_ref</name></name></expr>)</condition> <block pos:start="237:33" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:18">

        <expr_stmt pos:start="239:9" pos:end="239:30"><expr pos:start="239:9" pos:end="239:29"><name pos:start="239:9" pos:end="239:11">err</name> <operator pos:start="239:13" pos:end="239:13">=</operator> <call pos:start="239:15" pos:end="239:29"><name pos:start="239:15" pos:end="239:21">AVERROR</name><argument_list pos:start="239:22" pos:end="239:29">(<argument pos:start="239:23" pos:end="239:28"><expr pos:start="239:23" pos:end="239:28"><name pos:start="239:23" pos:end="239:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="241:9" pos:end="241:18">goto <name pos:start="241:14" pos:end="241:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:72"><expr pos:start="245:5" pos:end="245:71"><name pos:start="245:5" pos:end="245:21"><name pos:start="245:5" pos:end="245:7">ctx</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:21">recon_frames</name></name> <operator pos:start="245:23" pos:end="245:23">=</operator> <operator pos:start="245:25" pos:end="245:25">(</operator><name pos:start="245:26" pos:end="245:42">AVHWFramesContext</name><operator pos:start="245:43" pos:end="245:43">*</operator><operator pos:start="245:44" pos:end="245:44">)</operator><name pos:start="245:45" pos:end="245:71"><name pos:start="245:45" pos:end="245:47">ctx</name><operator pos:start="245:48" pos:end="245:49">-&gt;</operator><name pos:start="245:50" pos:end="245:65">recon_frames_ref</name><operator pos:start="245:66" pos:end="245:67">-&gt;</operator><name pos:start="245:68" pos:end="245:71">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:52"><expr pos:start="249:5" pos:end="249:51"><name pos:start="249:5" pos:end="249:29"><name pos:start="249:5" pos:end="249:7">ctx</name><operator pos:start="249:8" pos:end="249:9">-&gt;</operator><name pos:start="249:10" pos:end="249:21">recon_frames</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:29">format</name></name>    <operator pos:start="249:34" pos:end="249:34">=</operator> <name pos:start="249:36" pos:end="249:51">AV_PIX_FMT_VAAPI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:48"><expr pos:start="251:5" pos:end="251:47"><name pos:start="251:5" pos:end="251:32"><name pos:start="251:5" pos:end="251:7">ctx</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:21">recon_frames</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:32">sw_format</name></name> <operator pos:start="251:34" pos:end="251:34">=</operator> <name pos:start="251:36" pos:end="251:47">recon_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:54"><expr pos:start="253:5" pos:end="253:53"><name pos:start="253:5" pos:end="253:28"><name pos:start="253:5" pos:end="253:7">ctx</name><operator pos:start="253:8" pos:end="253:9">-&gt;</operator><name pos:start="253:10" pos:end="253:21">recon_frames</name><operator pos:start="253:22" pos:end="253:23">-&gt;</operator><name pos:start="253:24" pos:end="253:28">width</name></name>     <operator pos:start="253:34" pos:end="253:34">=</operator> <name pos:start="253:36" pos:end="253:53"><name pos:start="253:36" pos:end="253:38">ctx</name><operator pos:start="253:39" pos:end="253:40">-&gt;</operator><name pos:start="253:41" pos:end="253:53">aligned_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:55"><expr pos:start="255:5" pos:end="255:54"><name pos:start="255:5" pos:end="255:29"><name pos:start="255:5" pos:end="255:7">ctx</name><operator pos:start="255:8" pos:end="255:9">-&gt;</operator><name pos:start="255:10" pos:end="255:21">recon_frames</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:29">height</name></name>    <operator pos:start="255:34" pos:end="255:34">=</operator> <name pos:start="255:36" pos:end="255:54"><name pos:start="255:36" pos:end="255:38">ctx</name><operator pos:start="255:39" pos:end="255:40">-&gt;</operator><name pos:start="255:41" pos:end="255:54">aligned_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:64"><expr pos:start="257:5" pos:end="257:63"><name pos:start="257:5" pos:end="257:40"><name pos:start="257:5" pos:end="257:7">ctx</name><operator pos:start="257:8" pos:end="257:9">-&gt;</operator><name pos:start="257:10" pos:end="257:21">recon_frames</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:40">initial_pool_size</name></name> <operator pos:start="257:42" pos:end="257:42">=</operator> <name pos:start="257:44" pos:end="257:63"><name pos:start="257:44" pos:end="257:46">ctx</name><operator pos:start="257:47" pos:end="257:48">-&gt;</operator><name pos:start="257:49" pos:end="257:63">nb_recon_frames</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:53"><expr pos:start="261:5" pos:end="261:52"><name pos:start="261:5" pos:end="261:7">err</name> <operator pos:start="261:9" pos:end="261:9">=</operator> <call pos:start="261:11" pos:end="261:52"><name pos:start="261:11" pos:end="261:29">av_hwframe_ctx_init</name><argument_list pos:start="261:30" pos:end="261:52">(<argument pos:start="261:31" pos:end="261:51"><expr pos:start="261:31" pos:end="261:51"><name pos:start="261:31" pos:end="261:51"><name pos:start="261:31" pos:end="261:33">ctx</name><operator pos:start="261:34" pos:end="261:35">-&gt;</operator><name pos:start="261:36" pos:end="261:51">recon_frames_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="263:5" pos:end="271:5"><if pos:start="263:5" pos:end="271:5">if <condition pos:start="263:8" pos:end="263:16">(<expr pos:start="263:9" pos:end="263:15"><name pos:start="263:9" pos:end="263:11">err</name> <operator pos:start="263:13" pos:end="263:13">&lt;</operator> <literal type="number" pos:start="263:15" pos:end="263:15">0</literal></expr>)</condition> <block pos:start="263:18" pos:end="271:5">{<block_content pos:start="265:9" pos:end="269:18">

        <expr_stmt pos:start="265:9" pos:end="267:44"><expr pos:start="265:9" pos:end="267:43"><call pos:start="265:9" pos:end="267:43"><name pos:start="265:9" pos:end="265:14">av_log</name><argument_list pos:start="265:15" pos:end="267:43">(<argument pos:start="265:16" pos:end="265:20"><expr pos:start="265:16" pos:end="265:20"><name pos:start="265:16" pos:end="265:20">avctx</name></expr></argument>, <argument pos:start="265:23" pos:end="265:34"><expr pos:start="265:23" pos:end="265:34"><name pos:start="265:23" pos:end="265:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:37" pos:end="267:37"><expr pos:start="265:37" pos:end="267:37"><literal type="string" pos:start="265:37" pos:end="265:73">"Failed to initialise reconstructed "</literal>

               <literal type="string" pos:start="267:16" pos:end="267:37">"frame context: %d.\n"</literal></expr></argument>, <argument pos:start="267:40" pos:end="267:42"><expr pos:start="267:40" pos:end="267:42"><name pos:start="267:40" pos:end="267:42">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="269:9" pos:end="269:18">goto <name pos:start="269:14" pos:end="269:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:43"><expr pos:start="273:5" pos:end="273:42"><name pos:start="273:5" pos:end="273:15">recon_hwctx</name> <operator pos:start="273:17" pos:end="273:17">=</operator> <name pos:start="273:19" pos:end="273:42"><name pos:start="273:19" pos:end="273:21">ctx</name><operator pos:start="273:22" pos:end="273:23">-&gt;</operator><name pos:start="273:24" pos:end="273:35">recon_frames</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:42">hwctx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="287:44"><expr pos:start="277:5" pos:end="287:43"><name pos:start="277:5" pos:end="277:7">vas</name> <operator pos:start="277:9" pos:end="277:9">=</operator> <call pos:start="277:11" pos:end="287:43"><name pos:start="277:11" pos:end="277:25">vaCreateContext</name><argument_list pos:start="277:26" pos:end="287:43">(<argument pos:start="277:27" pos:end="277:45"><expr pos:start="277:27" pos:end="277:45"><name pos:start="277:27" pos:end="277:45"><name pos:start="277:27" pos:end="277:29">ctx</name><operator pos:start="277:30" pos:end="277:31">-&gt;</operator><name pos:start="277:32" pos:end="277:36">hwctx</name><operator pos:start="277:37" pos:end="277:38">-&gt;</operator><name pos:start="277:39" pos:end="277:45">display</name></name></expr></argument>, <argument pos:start="277:48" pos:end="277:61"><expr pos:start="277:48" pos:end="277:61"><name pos:start="277:48" pos:end="277:61"><name pos:start="277:48" pos:end="277:50">ctx</name><operator pos:start="277:51" pos:end="277:52">-&gt;</operator><name pos:start="277:53" pos:end="277:61">va_config</name></name></expr></argument>,

                          <argument pos:start="279:27" pos:end="279:44"><expr pos:start="279:27" pos:end="279:44"><name pos:start="279:27" pos:end="279:44"><name pos:start="279:27" pos:end="279:29">ctx</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:44">aligned_width</name></name></expr></argument>, <argument pos:start="279:47" pos:end="279:65"><expr pos:start="279:47" pos:end="279:65"><name pos:start="279:47" pos:end="279:65"><name pos:start="279:47" pos:end="279:49">ctx</name><operator pos:start="279:50" pos:end="279:51">-&gt;</operator><name pos:start="279:52" pos:end="279:65">aligned_height</name></name></expr></argument>,

                          <argument pos:start="281:27" pos:end="281:40"><expr pos:start="281:27" pos:end="281:40"><name pos:start="281:27" pos:end="281:40">VA_PROGRESSIVE</name></expr></argument>,

                          <argument pos:start="283:27" pos:end="283:50"><expr pos:start="283:27" pos:end="283:50"><name pos:start="283:27" pos:end="283:50"><name pos:start="283:27" pos:end="283:37">recon_hwctx</name><operator pos:start="283:38" pos:end="283:39">-&gt;</operator><name pos:start="283:40" pos:end="283:50">surface_ids</name></name></expr></argument>,

                          <argument pos:start="285:27" pos:end="285:50"><expr pos:start="285:27" pos:end="285:50"><name pos:start="285:27" pos:end="285:50"><name pos:start="285:27" pos:end="285:37">recon_hwctx</name><operator pos:start="285:38" pos:end="285:39">-&gt;</operator><name pos:start="285:40" pos:end="285:50">nb_surfaces</name></name></expr></argument>,

                          <argument pos:start="287:27" pos:end="287:42"><expr pos:start="287:27" pos:end="287:42"><operator pos:start="287:27" pos:end="287:27">&amp;</operator><name pos:start="287:28" pos:end="287:42"><name pos:start="287:28" pos:end="287:30">ctx</name><operator pos:start="287:31" pos:end="287:32">-&gt;</operator><name pos:start="287:33" pos:end="287:42">va_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="299:5"><if pos:start="289:5" pos:end="299:5">if <condition pos:start="289:8" pos:end="289:33">(<expr pos:start="289:9" pos:end="289:32"><name pos:start="289:9" pos:end="289:11">vas</name> <operator pos:start="289:13" pos:end="289:14">!=</operator> <name pos:start="289:16" pos:end="289:32">VA_STATUS_SUCCESS</name></expr>)</condition> <block pos:start="289:35" pos:end="299:5">{<block_content pos:start="291:9" pos:end="297:18">

        <expr_stmt pos:start="291:9" pos:end="293:60"><expr pos:start="291:9" pos:end="293:59"><call pos:start="291:9" pos:end="293:59"><name pos:start="291:9" pos:end="291:14">av_log</name><argument_list pos:start="291:15" pos:end="293:59">(<argument pos:start="291:16" pos:end="291:20"><expr pos:start="291:16" pos:end="291:20"><name pos:start="291:16" pos:end="291:20">avctx</name></expr></argument>, <argument pos:start="291:23" pos:end="291:34"><expr pos:start="291:23" pos:end="291:34"><name pos:start="291:23" pos:end="291:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="291:37" pos:end="293:36"><expr pos:start="291:37" pos:end="293:36"><literal type="string" pos:start="291:37" pos:end="291:71">"Failed to create encode pipeline "</literal>

               <literal type="string" pos:start="293:16" pos:end="293:36">"context: %d (%s).\n"</literal></expr></argument>, <argument pos:start="293:39" pos:end="293:41"><expr pos:start="293:39" pos:end="293:41"><name pos:start="293:39" pos:end="293:41">vas</name></expr></argument>, <argument pos:start="293:44" pos:end="293:58"><expr pos:start="293:44" pos:end="293:58"><call pos:start="293:44" pos:end="293:58"><name pos:start="293:44" pos:end="293:53">vaErrorStr</name><argument_list pos:start="293:54" pos:end="293:58">(<argument pos:start="293:55" pos:end="293:57"><expr pos:start="293:55" pos:end="293:57"><name pos:start="293:55" pos:end="293:57">vas</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:27"><expr pos:start="295:9" pos:end="295:26"><name pos:start="295:9" pos:end="295:11">err</name> <operator pos:start="295:13" pos:end="295:13">=</operator> <call pos:start="295:15" pos:end="295:26"><name pos:start="295:15" pos:end="295:21">AVERROR</name><argument_list pos:start="295:22" pos:end="295:26">(<argument pos:start="295:23" pos:end="295:25"><expr pos:start="295:23" pos:end="295:25"><name pos:start="295:23" pos:end="295:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="297:9" pos:end="297:18">goto <name pos:start="297:14" pos:end="297:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:26"><expr pos:start="303:5" pos:end="303:25"><name pos:start="303:5" pos:end="303:20"><name pos:start="303:5" pos:end="303:7">ctx</name><operator pos:start="303:8" pos:end="303:9">-&gt;</operator><name pos:start="303:10" pos:end="303:20">input_order</name></name>  <operator pos:start="303:23" pos:end="303:23">=</operator> <literal type="number" pos:start="303:25" pos:end="303:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:44"><expr pos:start="305:5" pos:end="305:43"><name pos:start="305:5" pos:end="305:21"><name pos:start="305:5" pos:end="305:7">ctx</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:21">output_delay</name></name> <operator pos:start="305:23" pos:end="305:23">=</operator> <name pos:start="305:25" pos:end="305:43"><name pos:start="305:25" pos:end="305:29">avctx</name><operator pos:start="305:30" pos:end="305:31">-&gt;</operator><name pos:start="305:32" pos:end="305:43">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:26"><expr pos:start="307:5" pos:end="307:25"><name pos:start="307:5" pos:end="307:21"><name pos:start="307:5" pos:end="307:7">ctx</name><operator pos:start="307:8" pos:end="307:9">-&gt;</operator><name pos:start="307:10" pos:end="307:21">decode_delay</name></name> <operator pos:start="307:23" pos:end="307:23">=</operator> <literal type="number" pos:start="307:25" pos:end="307:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:48"><expr pos:start="309:5" pos:end="309:47"><name pos:start="309:5" pos:end="309:21"><name pos:start="309:5" pos:end="309:7">ctx</name><operator pos:start="309:8" pos:end="309:9">-&gt;</operator><name pos:start="309:10" pos:end="309:21">output_order</name></name> <operator pos:start="309:23" pos:end="309:23">=</operator> <operator pos:start="309:25" pos:end="309:25">-</operator> <name pos:start="309:27" pos:end="309:43"><name pos:start="309:27" pos:end="309:29">ctx</name><operator pos:start="309:30" pos:end="309:31">-&gt;</operator><name pos:start="309:32" pos:end="309:43">output_delay</name></name> <operator pos:start="309:45" pos:end="309:45">-</operator> <literal type="number" pos:start="309:47" pos:end="309:47">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="313:5" pos:end="327:5"><if pos:start="313:5" pos:end="327:5">if <condition pos:start="313:8" pos:end="313:45">(<expr pos:start="313:9" pos:end="313:44"><name pos:start="313:9" pos:end="313:40"><name pos:start="313:9" pos:end="313:11">ctx</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:18">codec</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:40">sequence_params_size</name></name> <operator pos:start="313:42" pos:end="313:42">&gt;</operator> <literal type="number" pos:start="313:44" pos:end="313:44">0</literal></expr>)</condition> <block pos:start="313:47" pos:end="327:5">{<block_content pos:start="315:9" pos:end="325:9">

        <expr_stmt pos:start="315:9" pos:end="317:57"><expr pos:start="315:9" pos:end="317:56"><name pos:start="315:9" pos:end="315:34"><name pos:start="315:9" pos:end="315:11">ctx</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:34">codec_sequence_params</name></name> <operator pos:start="315:36" pos:end="315:36">=</operator>

            <call pos:start="317:13" pos:end="317:56"><name pos:start="317:13" pos:end="317:22">av_mallocz</name><argument_list pos:start="317:23" pos:end="317:56">(<argument pos:start="317:24" pos:end="317:55"><expr pos:start="317:24" pos:end="317:55"><name pos:start="317:24" pos:end="317:55"><name pos:start="317:24" pos:end="317:26">ctx</name><operator pos:start="317:27" pos:end="317:28">-&gt;</operator><name pos:start="317:29" pos:end="317:33">codec</name><operator pos:start="317:34" pos:end="317:35">-&gt;</operator><name pos:start="317:36" pos:end="317:55">sequence_params_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="325:9"><if pos:start="319:9" pos:end="325:9">if <condition pos:start="319:12" pos:end="319:40">(<expr pos:start="319:13" pos:end="319:39"><operator pos:start="319:13" pos:end="319:13">!</operator><name pos:start="319:14" pos:end="319:39"><name pos:start="319:14" pos:end="319:16">ctx</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:39">codec_sequence_params</name></name></expr>)</condition> <block pos:start="319:42" pos:end="325:9">{<block_content pos:start="321:13" pos:end="323:22">

            <expr_stmt pos:start="321:13" pos:end="321:34"><expr pos:start="321:13" pos:end="321:33"><name pos:start="321:13" pos:end="321:15">err</name> <operator pos:start="321:17" pos:end="321:17">=</operator> <call pos:start="321:19" pos:end="321:33"><name pos:start="321:19" pos:end="321:25">AVERROR</name><argument_list pos:start="321:26" pos:end="321:33">(<argument pos:start="321:27" pos:end="321:32"><expr pos:start="321:27" pos:end="321:32"><name pos:start="321:27" pos:end="321:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="323:13" pos:end="323:22">goto <name pos:start="323:18" pos:end="323:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="329:5" pos:end="343:5"><if pos:start="329:5" pos:end="343:5">if <condition pos:start="329:8" pos:end="329:44">(<expr pos:start="329:9" pos:end="329:43"><name pos:start="329:9" pos:end="329:39"><name pos:start="329:9" pos:end="329:11">ctx</name><operator pos:start="329:12" pos:end="329:13">-&gt;</operator><name pos:start="329:14" pos:end="329:18">codec</name><operator pos:start="329:19" pos:end="329:20">-&gt;</operator><name pos:start="329:21" pos:end="329:39">picture_params_size</name></name> <operator pos:start="329:41" pos:end="329:41">&gt;</operator> <literal type="number" pos:start="329:43" pos:end="329:43">0</literal></expr>)</condition> <block pos:start="329:46" pos:end="343:5">{<block_content pos:start="331:9" pos:end="341:9">

        <expr_stmt pos:start="331:9" pos:end="333:56"><expr pos:start="331:9" pos:end="333:55"><name pos:start="331:9" pos:end="331:33"><name pos:start="331:9" pos:end="331:11">ctx</name><operator pos:start="331:12" pos:end="331:13">-&gt;</operator><name pos:start="331:14" pos:end="331:33">codec_picture_params</name></name> <operator pos:start="331:35" pos:end="331:35">=</operator>

            <call pos:start="333:13" pos:end="333:55"><name pos:start="333:13" pos:end="333:22">av_mallocz</name><argument_list pos:start="333:23" pos:end="333:55">(<argument pos:start="333:24" pos:end="333:54"><expr pos:start="333:24" pos:end="333:54"><name pos:start="333:24" pos:end="333:54"><name pos:start="333:24" pos:end="333:26">ctx</name><operator pos:start="333:27" pos:end="333:28">-&gt;</operator><name pos:start="333:29" pos:end="333:33">codec</name><operator pos:start="333:34" pos:end="333:35">-&gt;</operator><name pos:start="333:36" pos:end="333:54">picture_params_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="335:9" pos:end="341:9"><if pos:start="335:9" pos:end="341:9">if <condition pos:start="335:12" pos:end="335:39">(<expr pos:start="335:13" pos:end="335:38"><operator pos:start="335:13" pos:end="335:13">!</operator><name pos:start="335:14" pos:end="335:38"><name pos:start="335:14" pos:end="335:16">ctx</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:38">codec_picture_params</name></name></expr>)</condition> <block pos:start="335:41" pos:end="341:9">{<block_content pos:start="337:13" pos:end="339:22">

            <expr_stmt pos:start="337:13" pos:end="337:34"><expr pos:start="337:13" pos:end="337:33"><name pos:start="337:13" pos:end="337:15">err</name> <operator pos:start="337:17" pos:end="337:17">=</operator> <call pos:start="337:19" pos:end="337:33"><name pos:start="337:19" pos:end="337:25">AVERROR</name><argument_list pos:start="337:26" pos:end="337:33">(<argument pos:start="337:27" pos:end="337:32"><expr pos:start="337:27" pos:end="337:32"><name pos:start="337:27" pos:end="337:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="339:13" pos:end="339:22">goto <name pos:start="339:18" pos:end="339:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="347:5" pos:end="361:5"><if pos:start="347:5" pos:end="361:5">if <condition pos:start="347:8" pos:end="347:41">(<expr pos:start="347:9" pos:end="347:40"><name pos:start="347:9" pos:end="347:40"><name pos:start="347:9" pos:end="347:11">ctx</name><operator pos:start="347:12" pos:end="347:13">-&gt;</operator><name pos:start="347:14" pos:end="347:18">codec</name><operator pos:start="347:19" pos:end="347:20">-&gt;</operator><name pos:start="347:21" pos:end="347:40">init_sequence_params</name></name></expr>)</condition> <block pos:start="347:43" pos:end="361:5">{<block_content pos:start="349:9" pos:end="359:9">

        <expr_stmt pos:start="349:9" pos:end="349:54"><expr pos:start="349:9" pos:end="349:53"><name pos:start="349:9" pos:end="349:11">err</name> <operator pos:start="349:13" pos:end="349:13">=</operator> <call pos:start="349:15" pos:end="349:53"><name pos:start="349:15" pos:end="349:46"><name pos:start="349:15" pos:end="349:17">ctx</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:24">codec</name><operator pos:start="349:25" pos:end="349:26">-&gt;</operator><name pos:start="349:27" pos:end="349:46">init_sequence_params</name></name><argument_list pos:start="349:47" pos:end="349:53">(<argument pos:start="349:48" pos:end="349:52"><expr pos:start="349:48" pos:end="349:52"><name pos:start="349:48" pos:end="349:52">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="359:9"><if pos:start="351:9" pos:end="359:9">if <condition pos:start="351:12" pos:end="351:20">(<expr pos:start="351:13" pos:end="351:19"><name pos:start="351:13" pos:end="351:15">err</name> <operator pos:start="351:17" pos:end="351:17">&lt;</operator> <literal type="number" pos:start="351:19" pos:end="351:19">0</literal></expr>)</condition> <block pos:start="351:22" pos:end="359:9">{<block_content pos:start="353:13" pos:end="357:22">

            <expr_stmt pos:start="353:13" pos:end="355:41"><expr pos:start="353:13" pos:end="355:40"><call pos:start="353:13" pos:end="355:40"><name pos:start="353:13" pos:end="353:18">av_log</name><argument_list pos:start="353:19" pos:end="355:40">(<argument pos:start="353:20" pos:end="353:24"><expr pos:start="353:20" pos:end="353:24"><name pos:start="353:20" pos:end="353:24">avctx</name></expr></argument>, <argument pos:start="353:27" pos:end="353:38"><expr pos:start="353:27" pos:end="353:38"><name pos:start="353:27" pos:end="353:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="353:41" pos:end="355:34"><expr pos:start="353:41" pos:end="355:34"><literal type="string" pos:start="353:41" pos:end="353:72">"Codec sequence initialisation "</literal>

                   <literal type="string" pos:start="355:20" pos:end="355:34">"failed: %d.\n"</literal></expr></argument>, <argument pos:start="355:37" pos:end="355:39"><expr pos:start="355:37" pos:end="355:39"><name pos:start="355:37" pos:end="355:39">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="357:13" pos:end="357:22">goto <name pos:start="357:18" pos:end="357:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="365:5" pos:end="369:70"><expr pos:start="365:5" pos:end="369:69"><name pos:start="365:5" pos:end="365:27"><name pos:start="365:5" pos:end="365:7">ctx</name><operator pos:start="365:8" pos:end="365:9">-&gt;</operator><name pos:start="365:10" pos:end="365:27">output_buffer_pool</name></name> <operator pos:start="365:29" pos:end="365:29">=</operator>

        <call pos:start="367:9" pos:end="369:69"><name pos:start="367:9" pos:end="367:28">av_buffer_pool_init2</name><argument_list pos:start="367:29" pos:end="369:69">(<argument pos:start="367:30" pos:end="367:47"><expr pos:start="367:30" pos:end="367:47"><sizeof pos:start="367:30" pos:end="367:47">sizeof<argument_list pos:start="367:36" pos:end="367:47">(<argument pos:start="367:37" pos:end="367:46"><expr pos:start="367:37" pos:end="367:46"><name pos:start="367:37" pos:end="367:46">VABufferID</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="367:50" pos:end="367:54"><expr pos:start="367:50" pos:end="367:54"><name pos:start="367:50" pos:end="367:54">avctx</name></expr></argument>,

                             <argument pos:start="369:30" pos:end="369:62"><expr pos:start="369:30" pos:end="369:62"><operator pos:start="369:30" pos:end="369:30">&amp;</operator><name pos:start="369:31" pos:end="369:62">vaapi_encode_alloc_output_buffer</name></expr></argument>, <argument pos:start="369:65" pos:end="369:68"><expr pos:start="369:65" pos:end="369:68"><name pos:start="369:65" pos:end="369:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="371:5" pos:end="377:5"><if pos:start="371:5" pos:end="377:5">if <condition pos:start="371:8" pos:end="371:33">(<expr pos:start="371:9" pos:end="371:32"><operator pos:start="371:9" pos:end="371:9">!</operator><name pos:start="371:10" pos:end="371:32"><name pos:start="371:10" pos:end="371:12">ctx</name><operator pos:start="371:13" pos:end="371:14">-&gt;</operator><name pos:start="371:15" pos:end="371:32">output_buffer_pool</name></name></expr>)</condition> <block pos:start="371:35" pos:end="377:5">{<block_content pos:start="373:9" pos:end="375:18">

        <expr_stmt pos:start="373:9" pos:end="373:30"><expr pos:start="373:9" pos:end="373:29"><name pos:start="373:9" pos:end="373:11">err</name> <operator pos:start="373:13" pos:end="373:13">=</operator> <call pos:start="373:15" pos:end="373:29"><name pos:start="373:15" pos:end="373:21">AVERROR</name><argument_list pos:start="373:22" pos:end="373:29">(<argument pos:start="373:23" pos:end="373:28"><expr pos:start="373:23" pos:end="373:28"><name pos:start="373:23" pos:end="373:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="375:9" pos:end="375:18">goto <name pos:start="375:14" pos:end="375:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="381:5" pos:end="381:29">// All I are IDR for now.</comment>

    <expr_stmt pos:start="383:5" pos:end="383:23"><expr pos:start="383:5" pos:end="383:22"><name pos:start="383:5" pos:end="383:18"><name pos:start="383:5" pos:end="383:7">ctx</name><operator pos:start="383:8" pos:end="383:9">-&gt;</operator><name pos:start="383:10" pos:end="383:18">i_per_idr</name></name> <operator pos:start="383:20" pos:end="383:20">=</operator> <literal type="number" pos:start="383:22" pos:end="383:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="385:5" pos:end="387:47"><expr pos:start="385:5" pos:end="387:46"><name pos:start="385:5" pos:end="385:16"><name pos:start="385:5" pos:end="385:7">ctx</name><operator pos:start="385:8" pos:end="385:9">-&gt;</operator><name pos:start="385:10" pos:end="385:16">p_per_i</name></name> <operator pos:start="385:18" pos:end="385:18">=</operator> <operator pos:start="385:20" pos:end="385:20">(</operator><operator pos:start="385:21" pos:end="385:21">(</operator><name pos:start="385:22" pos:end="385:36"><name pos:start="385:22" pos:end="385:26">avctx</name><operator pos:start="385:27" pos:end="385:28">-&gt;</operator><name pos:start="385:29" pos:end="385:36">gop_size</name></name> <operator pos:start="385:38" pos:end="385:38">+</operator> <name pos:start="385:40" pos:end="385:58"><name pos:start="385:40" pos:end="385:44">avctx</name><operator pos:start="385:45" pos:end="385:46">-&gt;</operator><name pos:start="385:47" pos:end="385:58">max_b_frames</name></name><operator pos:start="385:59" pos:end="385:59">)</operator> <operator pos:start="385:61" pos:end="385:61">/</operator>

                    <operator pos:start="387:21" pos:end="387:21">(</operator><name pos:start="387:22" pos:end="387:40"><name pos:start="387:22" pos:end="387:26">avctx</name><operator pos:start="387:27" pos:end="387:28">-&gt;</operator><name pos:start="387:29" pos:end="387:40">max_b_frames</name></name> <operator pos:start="387:42" pos:end="387:42">+</operator> <literal type="number" pos:start="387:44" pos:end="387:44">1</literal><operator pos:start="387:45" pos:end="387:45">)</operator><operator pos:start="387:46" pos:end="387:46">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="389:5" pos:end="389:39"><expr pos:start="389:5" pos:end="389:38"><name pos:start="389:5" pos:end="389:16"><name pos:start="389:5" pos:end="389:7">ctx</name><operator pos:start="389:8" pos:end="389:9">-&gt;</operator><name pos:start="389:10" pos:end="389:16">b_per_p</name></name> <operator pos:start="389:18" pos:end="389:18">=</operator> <name pos:start="389:20" pos:end="389:38"><name pos:start="389:20" pos:end="389:24">avctx</name><operator pos:start="389:25" pos:end="389:26">-&gt;</operator><name pos:start="389:27" pos:end="389:38">max_b_frames</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="393:5" pos:end="393:72">// This should be configurable somehow.  (Needs testing on a machine</comment>

    <comment type="line" pos:start="395:5" pos:end="395:52">// where it actually overlaps properly, though.)</comment>

    <expr_stmt pos:start="397:5" pos:end="397:53"><expr pos:start="397:5" pos:end="397:52"><name pos:start="397:5" pos:end="397:19"><name pos:start="397:5" pos:end="397:7">ctx</name><operator pos:start="397:8" pos:end="397:9">-&gt;</operator><name pos:start="397:10" pos:end="397:19">issue_mode</name></name> <operator pos:start="397:21" pos:end="397:21">=</operator> <name pos:start="397:23" pos:end="397:52">ISSUE_MODE_MAXIMISE_THROUGHPUT</name></expr>;</expr_stmt>



    <return pos:start="401:5" pos:end="401:13">return <expr pos:start="401:12" pos:end="401:12"><literal type="number" pos:start="401:12" pos:end="401:12">0</literal></expr>;</return>



<label pos:start="405:1" pos:end="405:5"><name pos:start="405:1" pos:end="405:4">fail</name>:</label>

    <expr_stmt pos:start="407:5" pos:end="407:24"><expr pos:start="407:5" pos:end="407:23"><call pos:start="407:5" pos:end="407:23"><name pos:start="407:5" pos:end="407:12">av_freep</name><argument_list pos:start="407:13" pos:end="407:23">(<argument pos:start="407:14" pos:end="407:22"><expr pos:start="407:14" pos:end="407:22"><operator pos:start="407:14" pos:end="407:14">&amp;</operator><name pos:start="407:15" pos:end="407:22">hwconfig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:46"><expr pos:start="409:5" pos:end="409:45"><call pos:start="409:5" pos:end="409:45"><name pos:start="409:5" pos:end="409:31">av_hwframe_constraints_free</name><argument_list pos:start="409:32" pos:end="409:45">(<argument pos:start="409:33" pos:end="409:44"><expr pos:start="409:33" pos:end="409:44"><operator pos:start="409:33" pos:end="409:33">&amp;</operator><name pos:start="409:34" pos:end="409:44">constraints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="411:5" pos:end="411:33"><expr pos:start="411:5" pos:end="411:32"><call pos:start="411:5" pos:end="411:32"><name pos:start="411:5" pos:end="411:25">ff_vaapi_encode_close</name><argument_list pos:start="411:26" pos:end="411:32">(<argument pos:start="411:27" pos:end="411:31"><expr pos:start="411:27" pos:end="411:31"><name pos:start="411:27" pos:end="411:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="413:5" pos:end="413:15">return <expr pos:start="413:12" pos:end="413:14"><name pos:start="413:12" pos:end="413:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
