<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9716.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="61:1"><decl pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:15">DEF</name><argument_list pos:start="1:16" pos:end="1:32">(<argument pos:start="1:17" pos:end="1:19"><expr pos:start="1:17" pos:end="1:19"><name pos:start="1:17" pos:end="1:19">put</name></expr></argument>, <argument pos:start="1:22" pos:end="1:31"><expr pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:31">pixels8_x2</name></expr></argument>)</argument_list><argument_list pos:start="1:33" pos:end="1:99">(<argument pos:start="1:34" pos:end="1:47"><expr pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:40">uint8_t</name> <operator pos:start="1:42" pos:end="1:42">*</operator><name pos:start="1:43" pos:end="1:47">block</name></expr></argument>, <argument pos:start="1:50" pos:end="1:70"><expr pos:start="1:50" pos:end="1:70"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">uint8_t</name> <operator pos:start="1:64" pos:end="1:64">*</operator><name pos:start="1:65" pos:end="1:70">pixels</name></expr></argument>, <argument pos:start="1:73" pos:end="1:91"><expr pos:start="1:73" pos:end="1:91"><name pos:start="1:73" pos:end="1:81">ptrdiff_t</name> <name pos:start="1:83" pos:end="1:91">line_size</name></expr></argument>, <argument pos:start="1:94" pos:end="1:98"><expr pos:start="1:94" pos:end="1:98"><name pos:start="1:94" pos:end="1:96">int</name> <name pos:start="1:98" pos:end="1:98">h</name></expr></argument>)</argument_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:26">

    <expr_stmt pos:start="5:5" pos:end="5:18"><expr pos:start="5:5" pos:end="5:17"><call pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:12">MOVQ_BFE</name><argument_list pos:start="5:13" pos:end="5:17">(<argument pos:start="5:14" pos:end="5:16"><expr pos:start="5:14" pos:end="5:16"><name pos:start="5:14" pos:end="5:16">mm6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <asm pos:start="7:5" pos:end="59:26">__asm__ <specifier pos:start="7:13" pos:end="7:20">volatile</specifier>(

        "lea    (%3, %3), %%"REG_a"     \n\t"

        ".p2align 3                     \n\t"

        "1:                             \n\t"

        "movq   (%1), %%mm0             \n\t"

        "movq   1(%1), %%mm1            \n\t"

        "movq   (%1, %3), %%mm2         \n\t"

        "movq   1(%1, %3), %%mm3        \n\t"

        PAVGBP(%%mm0, %%mm1, %%mm4,   %%mm2, %%mm3, %%mm5)

        "movq   %%mm4, (%2)             \n\t"

        "movq   %%mm5, (%2, %3)         \n\t"

        "add    %%"REG_a", %1           \n\t"

        "add    %%"REG_a", %2           \n\t"

        "movq   (%1), %%mm0             \n\t"

        "movq   1(%1), %%mm1            \n\t"

        "movq   (%1, %3), %%mm2         \n\t"

        "movq   1(%1, %3), %%mm3        \n\t"

        PAVGBP(%%mm0, %%mm1, %%mm4,   %%mm2, %%mm3, %%mm5)

        "movq   %%mm4, (%2)             \n\t"

        "movq   %%mm5, (%2, %3)         \n\t"

        "add    %%"REG_a", %1           \n\t"

        "add    %%"REG_a", %2           \n\t"

        "subl   $4, %0                  \n\t"

        "jnz    1b                      \n\t"

        :"+g"(h), "+S"(pixels), "+D"(block)

        :"r"((x86_reg)line_size)

        :REG_a, "memory");</asm>

</block_content>}</block></decl></decl_stmt>
</unit>
