<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12835.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">apic_init</name><parameter_list pos:start="1:14" pos:end="1:28">(<parameter pos:start="1:15" pos:end="1:27"><decl pos:start="1:15" pos:end="1:27"><type pos:start="1:15" pos:end="1:24"><name pos:start="1:15" pos:end="1:22">CPUState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:27">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">APICState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:21">last_apic_idx</name> <operator pos:start="9:23" pos:end="9:24">&gt;=</operator> <name pos:start="9:26" pos:end="9:34">MAX_APICS</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:20">qemu_mallocz</name><argument_list pos:start="13:21" pos:end="13:39">(<argument pos:start="13:22" pos:end="13:38"><expr pos:start="13:22" pos:end="13:38"><sizeof pos:start="13:22" pos:end="13:38">sizeof<argument_list pos:start="13:28" pos:end="13:38">(<argument pos:start="13:29" pos:end="13:37"><expr pos:start="13:29" pos:end="13:37"><name pos:start="13:29" pos:end="13:37">APICState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:19">apic_state</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:23">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">idx</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:26">last_apic_idx</name><operator pos:start="17:27" pos:end="17:28">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:9">id</name></name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:15">env</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:30">cpuid_apic_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">cpu_env</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:20">env</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:14">apic_reset</name><argument_list pos:start="25:15" pos:end="25:17">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:18">msix_supported</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:61">/* XXX: mapping more APICs at the same memory location */</comment>

    <if_stmt pos:start="33:5" pos:end="49:5"><if pos:start="33:5" pos:end="49:5">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:22">apic_io_memory</name> <operator pos:start="33:24" pos:end="33:25">==</operator> <literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr>)</condition> <block pos:start="33:30" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:53">

        <comment type="block" pos:start="35:9" pos:end="37:39">/* NOTE: the APIC is directly connected to the CPU - it is not

           on the global memory bus. */</comment>

        <expr_stmt pos:start="39:9" pos:end="41:70"><expr pos:start="39:9" pos:end="41:69"><name pos:start="39:9" pos:end="39:22">apic_io_memory</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <call pos:start="39:26" pos:end="41:69"><name pos:start="39:26" pos:end="39:47">cpu_register_io_memory</name><argument_list pos:start="39:48" pos:end="41:69">(<argument pos:start="39:49" pos:end="39:61"><expr pos:start="39:49" pos:end="39:61"><name pos:start="39:49" pos:end="39:61">apic_mem_read</name></expr></argument>,

                                                <argument pos:start="41:49" pos:end="41:62"><expr pos:start="41:49" pos:end="41:62"><name pos:start="41:49" pos:end="41:62">apic_mem_write</name></expr></argument>, <argument pos:start="41:65" pos:end="41:68"><expr pos:start="41:65" pos:end="41:68"><name pos:start="41:65" pos:end="41:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="43:9" pos:end="43:44">/* XXX: what if the base changes? */</comment>

        <expr_stmt pos:start="45:9" pos:end="47:53"><expr pos:start="45:9" pos:end="47:52"><call pos:start="45:9" pos:end="47:52"><name pos:start="45:9" pos:end="45:36">cpu_register_physical_memory</name><argument_list pos:start="45:37" pos:end="47:52">(<argument pos:start="45:38" pos:end="45:50"><expr pos:start="45:38" pos:end="45:50"><name pos:start="45:38" pos:end="45:50">MSI_ADDR_BASE</name></expr></argument>, <argument pos:start="45:53" pos:end="45:65"><expr pos:start="45:53" pos:end="45:65"><name pos:start="45:53" pos:end="45:65">MSI_ADDR_SIZE</name></expr></argument>,

                                     <argument pos:start="47:38" pos:end="47:51"><expr pos:start="47:38" pos:end="47:51"><name pos:start="47:38" pos:end="47:51">apic_io_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:12">timer</name></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:54"><name pos:start="51:16" pos:end="51:29">qemu_new_timer</name><argument_list pos:start="51:30" pos:end="51:54">(<argument pos:start="51:31" pos:end="51:38"><expr pos:start="51:31" pos:end="51:38"><name pos:start="51:31" pos:end="51:38">vm_clock</name></expr></argument>, <argument pos:start="51:41" pos:end="51:50"><expr pos:start="51:41" pos:end="51:50"><name pos:start="51:41" pos:end="51:50">apic_timer</name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:47"><expr pos:start="55:5" pos:end="55:46"><call pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:20">vmstate_register</name><argument_list pos:start="55:21" pos:end="55:46">(<argument pos:start="55:22" pos:end="55:27"><expr pos:start="55:22" pos:end="55:27"><name pos:start="55:22" pos:end="55:27"><name pos:start="55:22" pos:end="55:22">s</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:27">idx</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:42"><expr pos:start="55:30" pos:end="55:42"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:42">vmstate_apic</name></expr></argument>, <argument pos:start="55:45" pos:end="55:45"><expr pos:start="55:45" pos:end="55:45"><name pos:start="55:45" pos:end="55:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><call pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:23">qemu_register_reset</name><argument_list pos:start="57:24" pos:end="57:38">(<argument pos:start="57:25" pos:end="57:34"><expr pos:start="57:25" pos:end="57:34"><name pos:start="57:25" pos:end="57:34">apic_reset</name></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><name pos:start="57:37" pos:end="57:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:28"><expr pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:15">local_apics</name><index pos:start="61:16" pos:end="61:23">[<expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:22">idx</name></name></expr>]</index></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:27">s</name></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
