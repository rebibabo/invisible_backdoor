<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15470.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:24">get_clock</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="9:5" pos:end="33:5">

<cpp:if pos:start="5:1" pos:end="7:33">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="7:33"><call pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:22">(<argument pos:start="5:13" pos:end="5:21"><expr pos:start="5:13" pos:end="5:21"><name pos:start="5:13" pos:end="5:21">__linux__</name></expr></argument>)</argument_list></call> <operator pos:start="5:24" pos:end="5:25">||</operator> <operator pos:start="5:27" pos:end="5:27">(</operator><call pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:34">defined</name><argument_list pos:start="5:35" pos:end="5:47">(<argument pos:start="5:36" pos:end="5:46"><expr pos:start="5:36" pos:end="5:46"><name pos:start="5:36" pos:end="5:46">__FreeBSD__</name></expr></argument>)</argument_list></call> <operator pos:start="5:49" pos:end="5:50">&amp;&amp;</operator> <name pos:start="5:52" pos:end="5:68">__FreeBSD_version</name> <operator pos:start="5:70" pos:end="5:71">&gt;=</operator> <literal type="number" pos:start="5:73" pos:end="5:78">500000</literal><operator pos:start="5:79" pos:end="5:79">)</operator> \

	<operator pos:start="7:9" pos:end="7:10">||</operator> <call pos:start="7:12" pos:end="7:33"><name pos:start="7:12" pos:end="7:18">defined</name><argument_list pos:start="7:19" pos:end="7:33">(<argument pos:start="7:20" pos:end="7:32"><expr pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:32">__DragonFly__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="9:5" pos:end="33:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:20">use_rt_clock</name></expr>)</condition> <block pos:start="9:23" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:53">

        <decl_stmt pos:start="11:9" pos:end="11:27"><decl pos:start="11:9" pos:end="11:26"><type pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:14">struct</name> <name pos:start="11:16" pos:end="11:23">timespec</name></name></type> <name pos:start="11:25" pos:end="11:26">ts</name></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:44"><expr pos:start="13:9" pos:end="13:43"><call pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:21">clock_gettime</name><argument_list pos:start="13:22" pos:end="13:43">(<argument pos:start="13:23" pos:end="13:37"><expr pos:start="13:23" pos:end="13:37"><name pos:start="13:23" pos:end="13:37">CLOCK_MONOTONIC</name></expr></argument>, <argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><operator pos:start="13:40" pos:end="13:40">&amp;</operator><name pos:start="13:41" pos:end="13:42">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:53">return <expr pos:start="15:16" pos:end="15:52"><name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:17">ts</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:24">tv_sec</name></name> <operator pos:start="15:26" pos:end="15:26">*</operator> <literal type="number" pos:start="15:28" pos:end="15:41">1000000000LL</literal> <operator pos:start="15:41" pos:end="15:41">+</operator> <name pos:start="15:43" pos:end="15:52"><name pos:start="15:43" pos:end="15:44">ts</name><operator pos:start="15:45" pos:end="15:45">.</operator><name pos:start="15:46" pos:end="15:52">tv_nsec</name></name></expr>;</return>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="33:5">else

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <block pos:start="21:5" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:62">

        <comment type="block" pos:start="23:9" pos:end="25:47">/* XXX: using gettimeofday leads to problems if the date

           changes, so it should be avoided. */</comment>

        <decl_stmt pos:start="27:9" pos:end="27:26"><decl pos:start="27:9" pos:end="27:25"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:14">struct</name> <name pos:start="27:16" pos:end="27:22">timeval</name></name></type> <name pos:start="27:24" pos:end="27:25">tv</name></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:20">gettimeofday</name><argument_list pos:start="29:21" pos:end="29:31">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:24">tv</name></expr></argument>, <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:62">return <expr pos:start="31:16" pos:end="31:61"><name pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:17">tv</name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:24">tv_sec</name></name> <operator pos:start="31:26" pos:end="31:26">*</operator> <literal type="number" pos:start="31:28" pos:end="31:41">1000000000LL</literal> <operator pos:start="31:41" pos:end="31:41">+</operator> <operator pos:start="31:43" pos:end="31:43">(</operator><name pos:start="31:44" pos:end="31:53"><name pos:start="31:44" pos:end="31:45">tv</name><operator pos:start="31:46" pos:end="31:46">.</operator><name pos:start="31:47" pos:end="31:53">tv_usec</name></name> <operator pos:start="31:55" pos:end="31:55">*</operator> <literal type="number" pos:start="31:57" pos:end="31:60">1000</literal><operator pos:start="31:61" pos:end="31:61">)</operator></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
