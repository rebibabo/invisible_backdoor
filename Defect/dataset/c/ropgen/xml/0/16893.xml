<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16893.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">kvm_set_ioeventfd_pio_word</name><parameter_list pos:start="1:31" pos:end="1:80">(<parameter pos:start="1:32" pos:end="1:37"><decl pos:start="1:32" pos:end="1:37"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:37">fd</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint16_t</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">uint16_t</name></type> <name pos:start="1:64" pos:end="1:66">val</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:79"><decl pos:start="1:69" pos:end="1:79"><type pos:start="1:69" pos:end="1:79"><name pos:start="1:69" pos:end="1:72">bool</name></type> <name pos:start="1:74" pos:end="1:79">assign</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="17:6"><decl pos:start="5:5" pos:end="17:5"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">kvm_ioeventfd</name></name></type> <name pos:start="5:26" pos:end="5:29">kick</name> <init pos:start="5:31" pos:end="17:5">= <expr pos:start="5:33" pos:end="17:5"><block pos:start="5:33" pos:end="17:5">{

        <expr pos:start="7:9" pos:end="7:24"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:18">datamatch</name> <operator pos:start="7:20" pos:end="7:20">=</operator> <name pos:start="7:22" pos:end="7:24">val</name></expr>,

        <expr pos:start="9:9" pos:end="9:20"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:13">addr</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <name pos:start="9:17" pos:end="9:20">addr</name></expr>,

        <expr pos:start="11:9" pos:end="11:16"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:12">len</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <literal type="number" pos:start="11:16" pos:end="11:16">2</literal></expr>,

        <expr pos:start="13:9" pos:end="13:70"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:14">flags</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:45">KVM_IOEVENTFD_FLAG_DATAMATCH</name> <operator pos:start="13:47" pos:end="13:47">|</operator> <name pos:start="13:49" pos:end="13:70">KVM_IOEVENTFD_FLAG_PIO</name></expr>,

        <expr pos:start="15:9" pos:end="15:16"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:11">fd</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:16">fd</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="21:5" pos:end="23:23"><if pos:start="21:5" pos:end="23:23">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:22"><name pos:start="21:10" pos:end="21:20">kvm_enabled</name><argument_list pos:start="21:21" pos:end="21:22">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:23"><block_content pos:start="23:9" pos:end="23:23">

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">ENOSYS</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:50"><if pos:start="25:5" pos:end="27:50">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">assign</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:50"><block_content pos:start="27:9" pos:end="27:50">

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12">kick</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:18">flags</name></name> <operator pos:start="27:20" pos:end="27:21">|=</operator> <name pos:start="27:23" pos:end="27:49">KVM_IOEVENTFD_FLAG_DEASSIGN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:5">r</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:20">kvm_vm_ioctl</name><argument_list pos:start="29:21" pos:end="29:53">(<argument pos:start="29:22" pos:end="29:30"><expr pos:start="29:22" pos:end="29:30"><name pos:start="29:22" pos:end="29:30">kvm_state</name></expr></argument>, <argument pos:start="29:33" pos:end="29:45"><expr pos:start="29:33" pos:end="29:45"><name pos:start="29:33" pos:end="29:45">KVM_IOEVENTFD</name></expr></argument>, <argument pos:start="29:48" pos:end="29:52"><expr pos:start="29:48" pos:end="29:52"><operator pos:start="29:48" pos:end="29:48">&amp;</operator><name pos:start="29:49" pos:end="29:52">kick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:17"><if pos:start="31:5" pos:end="33:17">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">r</name> <operator pos:start="31:11" pos:end="31:11">&lt;</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">r</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
