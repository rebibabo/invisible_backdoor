<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12047.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">scsi_do_read</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIDiskReq</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:65">= <expr pos:start="7:24" pos:end="7:65"><call pos:start="7:24" pos:end="7:65"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:65">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:64"><expr pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:55">r</name><operator pos:start="7:56" pos:end="7:57">-&gt;</operator><name pos:start="7:58" pos:end="7:60">req</name><operator pos:start="7:61" pos:end="7:61">.</operator><name pos:start="7:62" pos:end="7:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">r</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">req</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:20">aiocb</name></name> <operator pos:start="13:22" pos:end="13:23">!=</operator> <name pos:start="13:25" pos:end="13:28">NULL</name></expr>)</condition> <block pos:start="13:31" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:50">

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">r</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">req</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:20">aiocb</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:50"><expr pos:start="17:9" pos:end="17:49"><call pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:22">bdrv_acct_done</name><argument_list pos:start="17:23" pos:end="17:49">(<argument pos:start="17:24" pos:end="17:38"><expr pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:30">qdev</name><operator pos:start="17:31" pos:end="17:31">.</operator><name pos:start="17:32" pos:end="17:35">conf</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:38">bs</name></name></expr></argument>, <argument pos:start="17:41" pos:end="17:48"><expr pos:start="17:41" pos:end="17:48"><operator pos:start="17:41" pos:end="17:41">&amp;</operator><name pos:start="17:42" pos:end="17:48"><name pos:start="17:42" pos:end="17:42">r</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:48">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:42">(<expr pos:start="25:13" pos:end="25:41"><call pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:32">scsi_handle_rw_error</name><argument_list pos:start="25:33" pos:end="25:41">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">r</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><operator pos:start="25:37" pos:end="25:37">-</operator><name pos:start="25:38" pos:end="25:40">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:44" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:22">

            <goto pos:start="27:13" pos:end="27:22">goto <name pos:start="27:18" pos:end="27:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:9">r</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">req</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:26">io_canceled</name></name></expr>)</condition> <block pos:start="35:29" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:69">/* The request is used as the AIO opaque value, so add a ref.  */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><call pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:16">scsi_req_ref</name><argument_list pos:start="45:17" pos:end="45:25">(<argument pos:start="45:18" pos:end="45:24"><expr pos:start="45:18" pos:end="45:24"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:24"><name pos:start="45:19" pos:end="45:19">r</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:24">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="69:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">r</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">req</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:17">sg</name></name></expr>)</condition> <block pos:start="49:20" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:59">

        <expr_stmt pos:start="51:9" pos:end="51:77"><expr pos:start="51:9" pos:end="51:76"><call pos:start="51:9" pos:end="51:76"><name pos:start="51:9" pos:end="51:22">dma_acct_start</name><argument_list pos:start="51:23" pos:end="51:76">(<argument pos:start="51:24" pos:end="51:38"><expr pos:start="51:24" pos:end="51:38"><name pos:start="51:24" pos:end="51:38"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:30">qdev</name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:35">conf</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:38">bs</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:48"><expr pos:start="51:41" pos:end="51:48"><operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:48"><name pos:start="51:42" pos:end="51:42">r</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:48">acct</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:59"><expr pos:start="51:51" pos:end="51:59"><name pos:start="51:51" pos:end="51:59"><name pos:start="51:51" pos:end="51:51">r</name><operator pos:start="51:52" pos:end="51:53">-&gt;</operator><name pos:start="51:54" pos:end="51:56">req</name><operator pos:start="51:57" pos:end="51:57">.</operator><name pos:start="51:58" pos:end="51:59">sg</name></name></expr></argument>, <argument pos:start="51:62" pos:end="51:75"><expr pos:start="51:62" pos:end="51:75"><name pos:start="51:62" pos:end="51:75">BDRV_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">r</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:14">req</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:20">resid</name></name> <operator pos:start="53:22" pos:end="53:23">-=</operator> <name pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:25">r</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:30">req</name><operator pos:start="53:31" pos:end="53:31">.</operator><name pos:start="53:32" pos:end="53:33">sg</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:39">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:59"><expr pos:start="55:9" pos:end="57:58"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">r</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">req</name><operator pos:start="55:15" pos:end="55:15">.</operator><name pos:start="55:16" pos:end="55:20">aiocb</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="57:58"><name pos:start="55:24" pos:end="55:36">dma_bdrv_read</name><argument_list pos:start="55:37" pos:end="57:58">(<argument pos:start="55:38" pos:end="55:52"><expr pos:start="55:38" pos:end="55:52"><name pos:start="55:38" pos:end="55:52"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:44">qdev</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:49">conf</name><operator pos:start="55:50" pos:end="55:50">.</operator><name pos:start="55:51" pos:end="55:52">bs</name></name></expr></argument>, <argument pos:start="55:55" pos:end="55:63"><expr pos:start="55:55" pos:end="55:63"><name pos:start="55:55" pos:end="55:63"><name pos:start="55:55" pos:end="55:55">r</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:60">req</name><operator pos:start="55:61" pos:end="55:61">.</operator><name pos:start="55:62" pos:end="55:63">sg</name></name></expr></argument>, <argument pos:start="55:66" pos:end="55:74"><expr pos:start="55:66" pos:end="55:74"><name pos:start="55:66" pos:end="55:74"><name pos:start="55:66" pos:end="55:66">r</name><operator pos:start="55:67" pos:end="55:68">-&gt;</operator><name pos:start="55:69" pos:end="55:74">sector</name></name></expr></argument>,

                                     <argument pos:start="57:38" pos:end="57:54"><expr pos:start="57:38" pos:end="57:54"><name pos:start="57:38" pos:end="57:54">scsi_dma_complete</name></expr></argument>, <argument pos:start="57:57" pos:end="57:57"><expr pos:start="57:57" pos:end="57:57"><name pos:start="57:57" pos:end="57:57">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="69:5">else <block pos:start="59:12" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:61">

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:9">n</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:27">scsi_init_iovec</name><argument_list pos:start="61:28" pos:end="61:49">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">r</name></expr></argument>, <argument pos:start="61:32" pos:end="61:48"><expr pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:48">SCSI_DMA_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:89"><expr pos:start="63:9" pos:end="63:88"><call pos:start="63:9" pos:end="63:88"><name pos:start="63:9" pos:end="63:23">bdrv_acct_start</name><argument_list pos:start="63:24" pos:end="63:88">(<argument pos:start="63:25" pos:end="63:39"><expr pos:start="63:25" pos:end="63:39"><name pos:start="63:25" pos:end="63:39"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:31">qdev</name><operator pos:start="63:32" pos:end="63:32">.</operator><name pos:start="63:33" pos:end="63:36">conf</name><operator pos:start="63:37" pos:end="63:37">.</operator><name pos:start="63:38" pos:end="63:39">bs</name></name></expr></argument>, <argument pos:start="63:42" pos:end="63:49"><expr pos:start="63:42" pos:end="63:49"><operator pos:start="63:42" pos:end="63:42">&amp;</operator><name pos:start="63:43" pos:end="63:49"><name pos:start="63:43" pos:end="63:43">r</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:49">acct</name></name></expr></argument>, <argument pos:start="63:52" pos:end="63:71"><expr pos:start="63:52" pos:end="63:71"><name pos:start="63:52" pos:end="63:52">n</name> <operator pos:start="63:54" pos:end="63:54">*</operator> <name pos:start="63:56" pos:end="63:71">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="63:74" pos:end="63:87"><expr pos:start="63:74" pos:end="63:87"><name pos:start="63:74" pos:end="63:87">BDRV_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:61"><expr pos:start="65:9" pos:end="67:60"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">r</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">req</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:20">aiocb</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="67:60"><name pos:start="65:24" pos:end="65:37">bdrv_aio_readv</name><argument_list pos:start="65:38" pos:end="67:60">(<argument pos:start="65:39" pos:end="65:53"><expr pos:start="65:39" pos:end="65:53"><name pos:start="65:39" pos:end="65:53"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:45">qdev</name><operator pos:start="65:46" pos:end="65:46">.</operator><name pos:start="65:47" pos:end="65:50">conf</name><operator pos:start="65:51" pos:end="65:51">.</operator><name pos:start="65:52" pos:end="65:53">bs</name></name></expr></argument>, <argument pos:start="65:56" pos:end="65:64"><expr pos:start="65:56" pos:end="65:64"><name pos:start="65:56" pos:end="65:64"><name pos:start="65:56" pos:end="65:56">r</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:64">sector</name></name></expr></argument>, <argument pos:start="65:67" pos:end="65:74"><expr pos:start="65:67" pos:end="65:74"><operator pos:start="65:67" pos:end="65:67">&amp;</operator><name pos:start="65:68" pos:end="65:74"><name pos:start="65:68" pos:end="65:68">r</name><operator pos:start="65:69" pos:end="65:70">-&gt;</operator><name pos:start="65:71" pos:end="65:74">qiov</name></name></expr></argument>, <argument pos:start="65:77" pos:end="65:77"><expr pos:start="65:77" pos:end="65:77"><name pos:start="65:77" pos:end="65:77">n</name></expr></argument>,

                                      <argument pos:start="67:39" pos:end="67:56"><expr pos:start="67:39" pos:end="67:56"><name pos:start="67:39" pos:end="67:56">scsi_read_complete</name></expr></argument>, <argument pos:start="67:59" pos:end="67:59"><expr pos:start="67:59" pos:end="67:59"><name pos:start="67:59" pos:end="67:59">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">done</name>:</label>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:28">(<expr pos:start="75:9" pos:end="75:27"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:10">r</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:15">req</name><operator pos:start="75:16" pos:end="75:16">.</operator><name pos:start="75:17" pos:end="75:27">io_canceled</name></name></expr>)</condition> <block pos:start="75:30" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:32">

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><call pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:22">scsi_req_unref</name><argument_list pos:start="77:23" pos:end="77:31">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:30"><name pos:start="77:25" pos:end="77:25">r</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:30">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
