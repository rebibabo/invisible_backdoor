<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9382.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_trun</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="261:1">{<block_content pos:start="5:5" pos:end="259:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MOVFragment</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">frag</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:26">c</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:36">fragment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MOVStreamContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">MOVStts</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">ctts_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">dts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">data_offset</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:55"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">unsigned</name></type> <name pos:start="19:14" pos:end="19:20">entries</name></decl>, <decl pos:start="19:23" pos:end="19:54"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:23" pos:end="19:40">first_sample_flags</name> <init pos:start="19:42" pos:end="19:54">= <expr pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:54"><name pos:start="19:44" pos:end="19:47">frag</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:54">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:52"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">flags</name></decl>, <decl pos:start="21:16" pos:end="21:23"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:23">distance</name></decl>, <decl pos:start="21:26" pos:end="21:26"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:26" pos:end="21:26">i</name></decl>, <decl pos:start="21:29" pos:end="21:46"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:29" pos:end="21:42">found_keyframe</name> <init pos:start="21:44" pos:end="21:46">= <expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr></init></decl>, <decl pos:start="21:49" pos:end="21:51"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:49" pos:end="21:51">err</name></decl>;</decl_stmt>



    <for pos:start="25:5" pos:end="35:5">for <control pos:start="25:9" pos:end="25:43">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:21">c</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:25">fc</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:37">nb_streams</name></name></expr>;</condition> <incr pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:40">i</name><operator pos:start="25:41" pos:end="25:42">++</operator></expr></incr>)</control> <block pos:start="25:45" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:9">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:52">(<expr pos:start="27:13" pos:end="27:51"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:13">c</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:17">fc</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">streams</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">id</name> <operator pos:start="27:35" pos:end="27:36">==</operator> <name pos:start="27:38" pos:end="27:51"><name pos:start="27:38" pos:end="27:41">frag</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:51">track_id</name></name></expr>)</condition> <block pos:start="27:54" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:18">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:14">st</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:34"><name pos:start="29:18" pos:end="29:18">c</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:22">fc</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:31">streams</name><index pos:start="29:32" pos:end="29:34">[<expr pos:start="29:33" pos:end="29:33"><name pos:start="29:33" pos:end="29:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">st</name></expr>)</condition> <block pos:start="37:14" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:35">

        <expr_stmt pos:start="39:9" pos:end="39:98"><expr pos:start="39:9" pos:end="39:97"><call pos:start="39:9" pos:end="39:97"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:97">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">c</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">fc</name></name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:80"><expr pos:start="39:37" pos:end="39:80"><literal type="string" pos:start="39:37" pos:end="39:80">"could not find corresponding track id %d\n"</literal></expr></argument>, <argument pos:start="39:83" pos:end="39:96"><expr pos:start="39:83" pos:end="39:96"><name pos:start="39:83" pos:end="39:96"><name pos:start="39:83" pos:end="39:86">frag</name><operator pos:start="39:87" pos:end="39:88">-&gt;</operator><name pos:start="39:89" pos:end="39:96">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:6">sc</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <name pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:11">st</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">priv_data</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:17"><if pos:start="47:5" pos:end="49:17">if <condition pos:start="47:8" pos:end="47:78">(<expr pos:start="47:9" pos:end="47:77"><name pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:10">sc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:28">pseudo_stream_id</name></name><operator pos:start="47:29" pos:end="47:29">+</operator><literal type="number" pos:start="47:30" pos:end="47:30">1</literal> <operator pos:start="47:32" pos:end="47:33">!=</operator> <name pos:start="47:35" pos:end="47:47"><name pos:start="47:35" pos:end="47:38">frag</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:47">stsd_id</name></name> <operator pos:start="47:49" pos:end="47:50">&amp;&amp;</operator> <name pos:start="47:52" pos:end="47:71"><name pos:start="47:52" pos:end="47:53">sc</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:71">pseudo_stream_id</name></name> <operator pos:start="47:73" pos:end="47:74">!=</operator> <operator pos:start="47:76" pos:end="47:76">-</operator><literal type="number" pos:start="47:77" pos:end="47:77">1</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:17"><block_content pos:start="49:9" pos:end="49:17">

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><call pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:11">avio_r8</name><argument_list pos:start="51:12" pos:end="51:15">(<argument pos:start="51:13" pos:end="51:14"><expr pos:start="51:13" pos:end="51:14"><name pos:start="51:13" pos:end="51:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:18" pos:end="51:30">/* version */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:9">flags</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:21">avio_rb24</name><argument_list pos:start="53:22" pos:end="53:25">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:11">entries</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:27"><name pos:start="55:15" pos:end="55:23">avio_rb32</name><argument_list pos:start="55:24" pos:end="55:27">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:62"><expr pos:start="57:5" pos:end="57:61"><call pos:start="57:5" pos:end="57:61"><name pos:start="57:5" pos:end="57:11">av_dlog</name><argument_list pos:start="57:12" pos:end="57:61">(<argument pos:start="57:13" pos:end="57:17"><expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">c</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:17">fc</name></name></expr></argument>, <argument pos:start="57:20" pos:end="57:44"><expr pos:start="57:20" pos:end="57:44"><literal type="string" pos:start="57:20" pos:end="57:44">"flags 0x%x entries %d\n"</literal></expr></argument>, <argument pos:start="57:47" pos:end="57:51"><expr pos:start="57:47" pos:end="57:51"><name pos:start="57:47" pos:end="57:51">flags</name></expr></argument>, <argument pos:start="57:54" pos:end="57:60"><expr pos:start="57:54" pos:end="57:60"><name pos:start="57:54" pos:end="57:60">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="69:96">/* Always assume the presence of composition time offsets.

     * Without this assumption, for instance, we cannot deal with a track in fragmented movies that meet the following.

     *  1) in the initial movie, there are no samples.

     *  2) in the first movie fragment, there is only one sample without composition time offset.

     *  3) in the subsequent movie fragments, there are samples with composition time offset. */</comment>

    <if_stmt pos:start="71:5" pos:end="91:5"><if pos:start="71:5" pos:end="91:5">if <condition pos:start="71:8" pos:end="71:44">(<expr pos:start="71:9" pos:end="71:43"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:11">sc</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:23">ctts_count</name></name> <operator pos:start="71:25" pos:end="71:26">&amp;&amp;</operator> <name pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:29">sc</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:43">sample_count</name></name></expr>)</condition>

    <block pos:start="73:5" pos:end="91:5">{<block_content pos:start="77:9" pos:end="89:25">

        <comment type="block" pos:start="75:9" pos:end="75:72">/* Complement ctts table if moov atom doesn't have ctts atom. */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:61"><expr pos:start="77:9" pos:end="77:60"><name pos:start="77:9" pos:end="77:17">ctts_data</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:60"><name pos:start="77:21" pos:end="77:30">av_realloc</name><argument_list pos:start="77:31" pos:end="77:60">(<argument pos:start="77:32" pos:end="77:35"><expr pos:start="77:32" pos:end="77:35"><name pos:start="77:32" pos:end="77:35">NULL</name></expr></argument>, <argument pos:start="77:38" pos:end="77:59"><expr pos:start="77:38" pos:end="77:59"><sizeof pos:start="77:38" pos:end="77:59">sizeof<argument_list pos:start="77:44" pos:end="77:59">(<argument pos:start="77:45" pos:end="77:58"><expr pos:start="77:45" pos:end="77:58"><operator pos:start="77:45" pos:end="77:45">*</operator><name pos:start="77:46" pos:end="77:58"><name pos:start="77:46" pos:end="77:47">sc</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:58">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:35"><if pos:start="79:9" pos:end="81:35">if <condition pos:start="79:12" pos:end="79:23">(<expr pos:start="79:13" pos:end="79:22"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:22">ctts_data</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:35"><block_content pos:start="81:13" pos:end="81:35">

            <return pos:start="81:13" pos:end="81:35">return <expr pos:start="81:20" pos:end="81:34"><call pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:26">AVERROR</name><argument_list pos:start="81:27" pos:end="81:34">(<argument pos:start="81:28" pos:end="81:33"><expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:34"><expr pos:start="83:9" pos:end="83:33"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:10">sc</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:21">ctts_data</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:33">ctts_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:63"><expr pos:start="85:9" pos:end="85:62"><name pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:10">sc</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:21">ctts_data</name><index pos:start="85:22" pos:end="85:37">[<expr pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:24">sc</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:36">ctts_count</name></name></expr>]</index></name><operator pos:start="85:38" pos:end="85:38">.</operator><name pos:start="85:39" pos:end="85:43">count</name> <operator pos:start="85:45" pos:end="85:45">=</operator> <name pos:start="85:47" pos:end="85:62"><name pos:start="85:47" pos:end="85:48">sc</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:62">sample_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:51"><expr pos:start="87:9" pos:end="87:50"><name pos:start="87:9" pos:end="87:37"><name pos:start="87:9" pos:end="87:10">sc</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:21">ctts_data</name><index pos:start="87:22" pos:end="87:37">[<expr pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:24">sc</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:36">ctts_count</name></name></expr>]</index></name><operator pos:start="87:38" pos:end="87:38">.</operator><name pos:start="87:39" pos:end="87:46">duration</name> <operator pos:start="87:48" pos:end="87:48">=</operator> <literal type="number" pos:start="87:50" pos:end="87:50">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:10">sc</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:22">ctts_count</name></name><operator pos:start="89:23" pos:end="89:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="95:35"><if pos:start="93:5" pos:end="95:35">if <condition pos:start="93:8" pos:end="93:76">(<expr pos:start="93:9" pos:end="93:75"><operator pos:start="93:9" pos:end="93:9">(</operator><name pos:start="93:10" pos:end="93:17">uint64_t</name><operator pos:start="93:18" pos:end="93:18">)</operator><name pos:start="93:19" pos:end="93:25">entries</name><operator pos:start="93:26" pos:end="93:26">+</operator><name pos:start="93:27" pos:end="93:40"><name pos:start="93:27" pos:end="93:28">sc</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:40">ctts_count</name></name> <operator pos:start="93:42" pos:end="93:43">&gt;=</operator> <name pos:start="93:45" pos:end="93:52">UINT_MAX</name><operator pos:start="93:53" pos:end="93:53">/</operator><sizeof pos:start="93:54" pos:end="93:75">sizeof<argument_list pos:start="93:60" pos:end="93:75">(<argument pos:start="93:61" pos:end="93:74"><expr pos:start="93:61" pos:end="93:74"><operator pos:start="93:61" pos:end="93:61">*</operator><name pos:start="93:62" pos:end="93:74"><name pos:start="93:62" pos:end="93:63">sc</name><operator pos:start="93:64" pos:end="93:65">-&gt;</operator><name pos:start="93:66" pos:end="93:74">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:35"><block_content pos:start="95:9" pos:end="95:35">

        <return pos:start="95:9" pos:end="95:35">return <expr pos:start="95:16" pos:end="95:34"><name pos:start="95:16" pos:end="95:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="99:62">(<expr pos:start="97:9" pos:end="99:61"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">err</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="99:56"><name pos:start="97:16" pos:end="97:32">av_reallocp_array</name><argument_list pos:start="97:33" pos:end="99:56">(<argument pos:start="97:34" pos:end="97:47"><expr pos:start="97:34" pos:end="97:47"><operator pos:start="97:34" pos:end="97:34">&amp;</operator><name pos:start="97:35" pos:end="97:47"><name pos:start="97:35" pos:end="97:36">sc</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:47">ctts_data</name></name></expr></argument>, <argument pos:start="97:50" pos:end="97:73"><expr pos:start="97:50" pos:end="97:73"><name pos:start="97:50" pos:end="97:56">entries</name> <operator pos:start="97:58" pos:end="97:58">+</operator> <name pos:start="97:60" pos:end="97:73"><name pos:start="97:60" pos:end="97:61">sc</name><operator pos:start="97:62" pos:end="97:63">-&gt;</operator><name pos:start="97:64" pos:end="97:73">ctts_count</name></name></expr></argument>,

                                 <argument pos:start="99:34" pos:end="99:55"><expr pos:start="99:34" pos:end="99:55"><sizeof pos:start="99:34" pos:end="99:55">sizeof<argument_list pos:start="99:40" pos:end="99:55">(<argument pos:start="99:41" pos:end="99:54"><expr pos:start="99:41" pos:end="99:54"><operator pos:start="99:41" pos:end="99:41">*</operator><name pos:start="99:42" pos:end="99:54"><name pos:start="99:42" pos:end="99:43">sc</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:54">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="99:57" pos:end="99:57">)</operator> <operator pos:start="99:59" pos:end="99:59">&lt;</operator> <literal type="number" pos:start="99:61" pos:end="99:61">0</literal></expr>)</condition> <block pos:start="99:64" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:19">

        <expr_stmt pos:start="101:9" pos:end="101:27"><expr pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:10">sc</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:22">ctts_count</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="107:80"><if pos:start="107:5" pos:end="107:80">if <condition pos:start="107:8" pos:end="107:37">(<expr pos:start="107:9" pos:end="107:36"><name pos:start="107:9" pos:end="107:13">flags</name> <operator pos:start="107:15" pos:end="107:15">&amp;</operator> <name pos:start="107:17" pos:end="107:36">MOV_TRUN_DATA_OFFSET</name></expr>)</condition><block type="pseudo" pos:start="107:46" pos:end="107:80"><block_content pos:start="107:46" pos:end="107:80">        <expr_stmt pos:start="107:46" pos:end="107:80"><expr pos:start="107:46" pos:end="107:79"><name pos:start="107:46" pos:end="107:56">data_offset</name>        <operator pos:start="107:65" pos:end="107:65">=</operator> <call pos:start="107:67" pos:end="107:79"><name pos:start="107:67" pos:end="107:75">avio_rb32</name><argument_list pos:start="107:76" pos:end="107:79">(<argument pos:start="107:77" pos:end="107:78"><expr pos:start="107:77" pos:end="107:78"><name pos:start="107:77" pos:end="107:78">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="109:80"><if pos:start="109:5" pos:end="109:80">if <condition pos:start="109:8" pos:end="109:44">(<expr pos:start="109:9" pos:end="109:43"><name pos:start="109:9" pos:end="109:13">flags</name> <operator pos:start="109:15" pos:end="109:15">&amp;</operator> <name pos:start="109:17" pos:end="109:43">MOV_TRUN_FIRST_SAMPLE_FLAGS</name></expr>)</condition><block type="pseudo" pos:start="109:46" pos:end="109:80"><block_content pos:start="109:46" pos:end="109:80"> <expr_stmt pos:start="109:46" pos:end="109:80"><expr pos:start="109:46" pos:end="109:79"><name pos:start="109:46" pos:end="109:63">first_sample_flags</name> <operator pos:start="109:65" pos:end="109:65">=</operator> <call pos:start="109:67" pos:end="109:79"><name pos:start="109:67" pos:end="109:75">avio_rb32</name><argument_list pos:start="109:76" pos:end="109:79">(<argument pos:start="109:77" pos:end="109:78"><expr pos:start="109:77" pos:end="109:78"><name pos:start="109:77" pos:end="109:78">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:45"><expr pos:start="111:5" pos:end="111:44"><name pos:start="111:5" pos:end="111:7">dts</name>    <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:26"><name pos:start="111:14" pos:end="111:15">sc</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:26">track_end</name></name> <operator pos:start="111:28" pos:end="111:28">-</operator> <name pos:start="111:30" pos:end="111:44"><name pos:start="111:30" pos:end="111:31">sc</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:44">time_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:50"><expr pos:start="113:5" pos:end="113:49"><name pos:start="113:5" pos:end="113:10">offset</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <name pos:start="113:14" pos:end="113:35"><name pos:start="113:14" pos:end="113:17">frag</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:35">base_data_offset</name></name> <operator pos:start="113:37" pos:end="113:37">+</operator> <name pos:start="113:39" pos:end="113:49">data_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:17"><expr pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:12">distance</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:68"><expr pos:start="117:5" pos:end="117:67"><call pos:start="117:5" pos:end="117:67"><name pos:start="117:5" pos:end="117:11">av_dlog</name><argument_list pos:start="117:12" pos:end="117:67">(<argument pos:start="117:13" pos:end="117:17"><expr pos:start="117:13" pos:end="117:17"><name pos:start="117:13" pos:end="117:17"><name pos:start="117:13" pos:end="117:13">c</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:17">fc</name></name></expr></argument>, <argument pos:start="117:20" pos:end="117:46"><expr pos:start="117:20" pos:end="117:46"><literal type="string" pos:start="117:20" pos:end="117:46">"first sample flags 0x%x\n"</literal></expr></argument>, <argument pos:start="117:49" pos:end="117:66"><expr pos:start="117:49" pos:end="117:66"><name pos:start="117:49" pos:end="117:66">first_sample_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="119:5" pos:end="245:5">for <control pos:start="119:9" pos:end="119:53">(<init pos:start="119:10" pos:end="119:15"><expr pos:start="119:10" pos:end="119:14"><name pos:start="119:10" pos:end="119:10">i</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</init> <condition pos:start="119:17" pos:end="119:48"><expr pos:start="119:17" pos:end="119:47"><name pos:start="119:17" pos:end="119:17">i</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <name pos:start="119:21" pos:end="119:27">entries</name> <operator pos:start="119:29" pos:end="119:30">&amp;&amp;</operator> <operator pos:start="119:32" pos:end="119:32">!</operator><name pos:start="119:33" pos:end="119:47"><name pos:start="119:33" pos:end="119:34">pb</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:47">eof_reached</name></name></expr>;</condition> <incr pos:start="119:50" pos:end="119:52"><expr pos:start="119:50" pos:end="119:52"><name pos:start="119:50" pos:end="119:50">i</name><operator pos:start="119:51" pos:end="119:52">++</operator></expr></incr>)</control> <block pos:start="119:55" pos:end="245:5">{<block_content pos:start="121:9" pos:end="243:33">

        <decl_stmt pos:start="121:9" pos:end="121:42"><decl pos:start="121:9" pos:end="121:41"><type pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:16">unsigned</name></type> <name pos:start="121:18" pos:end="121:28">sample_size</name> <init pos:start="121:30" pos:end="121:41">= <expr pos:start="121:32" pos:end="121:41"><name pos:start="121:32" pos:end="121:41"><name pos:start="121:32" pos:end="121:35">frag</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:41">size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="123:9" pos:end="123:64"><decl pos:start="123:9" pos:end="123:63"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:24">sample_flags</name> <init pos:start="123:26" pos:end="123:63">= <expr pos:start="123:28" pos:end="123:63"><ternary pos:start="123:28" pos:end="123:63"><condition pos:start="123:28" pos:end="123:30"><expr pos:start="123:28" pos:end="123:28"><name pos:start="123:28" pos:end="123:28">i</name></expr> ?</condition><then pos:start="123:32" pos:end="123:42"> <expr pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:35">frag</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:42">flags</name></name></expr> </then><else pos:start="123:44" pos:end="123:63">: <expr pos:start="123:46" pos:end="123:63"><name pos:start="123:46" pos:end="123:63">first_sample_flags</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:50"><decl pos:start="125:9" pos:end="125:49"><type pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:16">unsigned</name></type> <name pos:start="125:18" pos:end="125:32">sample_duration</name> <init pos:start="125:34" pos:end="125:49">= <expr pos:start="125:36" pos:end="125:49"><name pos:start="125:36" pos:end="125:49"><name pos:start="125:36" pos:end="125:39">frag</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:49">duration</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:25"><decl pos:start="127:9" pos:end="127:24"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:20">keyframe</name> <init pos:start="127:22" pos:end="127:24">= <expr pos:start="127:24" pos:end="127:24"><literal type="number" pos:start="127:24" pos:end="127:24">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:27"><decl pos:start="129:9" pos:end="129:26"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:22">sample_cts</name> <init pos:start="129:24" pos:end="129:26">= <expr pos:start="129:26" pos:end="129:26"><literal type="number" pos:start="129:26" pos:end="129:26">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:20"><decl pos:start="131:9" pos:end="131:19"><type pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:15">int64_t</name></type> <name pos:start="131:17" pos:end="131:19">cts</name></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="135:78"><if pos:start="135:9" pos:end="135:78">if <condition pos:start="135:12" pos:end="135:45">(<expr pos:start="135:13" pos:end="135:44"><name pos:start="135:13" pos:end="135:17">flags</name> <operator pos:start="135:19" pos:end="135:19">&amp;</operator> <name pos:start="135:21" pos:end="135:44">MOV_TRUN_SAMPLE_DURATION</name></expr>)</condition><block type="pseudo" pos:start="135:47" pos:end="135:78"><block_content pos:start="135:47" pos:end="135:78"> <expr_stmt pos:start="135:47" pos:end="135:78"><expr pos:start="135:47" pos:end="135:77"><name pos:start="135:47" pos:end="135:61">sample_duration</name> <operator pos:start="135:63" pos:end="135:63">=</operator> <call pos:start="135:65" pos:end="135:77"><name pos:start="135:65" pos:end="135:73">avio_rb32</name><argument_list pos:start="135:74" pos:end="135:77">(<argument pos:start="135:75" pos:end="135:76"><expr pos:start="135:75" pos:end="135:76"><name pos:start="135:75" pos:end="135:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="137:78"><if pos:start="137:9" pos:end="137:78">if <condition pos:start="137:12" pos:end="137:41">(<expr pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:17">flags</name> <operator pos:start="137:19" pos:end="137:19">&amp;</operator> <name pos:start="137:21" pos:end="137:40">MOV_TRUN_SAMPLE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="137:47" pos:end="137:78"><block_content pos:start="137:47" pos:end="137:78">     <expr_stmt pos:start="137:47" pos:end="137:78"><expr pos:start="137:47" pos:end="137:77"><name pos:start="137:47" pos:end="137:57">sample_size</name>     <operator pos:start="137:63" pos:end="137:63">=</operator> <call pos:start="137:65" pos:end="137:77"><name pos:start="137:65" pos:end="137:73">avio_rb32</name><argument_list pos:start="137:74" pos:end="137:77">(<argument pos:start="137:75" pos:end="137:76"><expr pos:start="137:75" pos:end="137:76"><name pos:start="137:75" pos:end="137:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="139:78"><if pos:start="139:9" pos:end="139:78">if <condition pos:start="139:12" pos:end="139:42">(<expr pos:start="139:13" pos:end="139:41"><name pos:start="139:13" pos:end="139:17">flags</name> <operator pos:start="139:19" pos:end="139:19">&amp;</operator> <name pos:start="139:21" pos:end="139:41">MOV_TRUN_SAMPLE_FLAGS</name></expr>)</condition><block type="pseudo" pos:start="139:47" pos:end="139:78"><block_content pos:start="139:47" pos:end="139:78">    <expr_stmt pos:start="139:47" pos:end="139:78"><expr pos:start="139:47" pos:end="139:77"><name pos:start="139:47" pos:end="139:58">sample_flags</name>    <operator pos:start="139:63" pos:end="139:63">=</operator> <call pos:start="139:65" pos:end="139:77"><name pos:start="139:65" pos:end="139:73">avio_rb32</name><argument_list pos:start="139:74" pos:end="139:77">(<argument pos:start="139:75" pos:end="139:76"><expr pos:start="139:75" pos:end="139:76"><name pos:start="139:75" pos:end="139:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="141:78"><if pos:start="141:9" pos:end="141:78">if <condition pos:start="141:12" pos:end="141:40">(<expr pos:start="141:13" pos:end="141:39"><name pos:start="141:13" pos:end="141:17">flags</name> <operator pos:start="141:19" pos:end="141:19">&amp;</operator> <name pos:start="141:21" pos:end="141:39">MOV_TRUN_SAMPLE_CTS</name></expr>)</condition><block type="pseudo" pos:start="141:47" pos:end="141:78"><block_content pos:start="141:47" pos:end="141:78">      <expr_stmt pos:start="141:47" pos:end="141:78"><expr pos:start="141:47" pos:end="141:77"><name pos:start="141:47" pos:end="141:56">sample_cts</name>      <operator pos:start="141:63" pos:end="141:63">=</operator> <call pos:start="141:65" pos:end="141:77"><name pos:start="141:65" pos:end="141:73">avio_rb32</name><argument_list pos:start="141:74" pos:end="141:77">(<argument pos:start="141:75" pos:end="141:76"><expr pos:start="141:75" pos:end="141:76"><name pos:start="141:75" pos:end="141:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:37"><name pos:start="143:9" pos:end="143:10">sc</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:21">ctts_data</name><index pos:start="143:22" pos:end="143:37">[<expr pos:start="143:23" pos:end="143:36"><name pos:start="143:23" pos:end="143:36"><name pos:start="143:23" pos:end="143:24">sc</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:36">ctts_count</name></name></expr>]</index></name><operator pos:start="143:38" pos:end="143:38">.</operator><name pos:start="143:39" pos:end="143:43">count</name>    <operator pos:start="143:48" pos:end="143:48">=</operator> <literal type="number" pos:start="143:50" pos:end="143:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:60"><expr pos:start="145:9" pos:end="145:59"><name pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:10">sc</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:21">ctts_data</name><index pos:start="145:22" pos:end="145:37">[<expr pos:start="145:23" pos:end="145:36"><name pos:start="145:23" pos:end="145:36"><name pos:start="145:23" pos:end="145:24">sc</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:36">ctts_count</name></name></expr>]</index></name><operator pos:start="145:38" pos:end="145:38">.</operator><name pos:start="145:39" pos:end="145:46">duration</name> <operator pos:start="145:48" pos:end="145:48">=</operator> <name pos:start="145:50" pos:end="145:59">sample_cts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:73"><expr pos:start="147:9" pos:end="147:72"><call pos:start="147:9" pos:end="147:72"><name pos:start="147:9" pos:end="147:28">mov_update_dts_shift</name><argument_list pos:start="147:29" pos:end="147:72">(<argument pos:start="147:30" pos:end="147:31"><expr pos:start="147:30" pos:end="147:31"><name pos:start="147:30" pos:end="147:31">sc</name></expr></argument>, <argument pos:start="147:34" pos:end="147:71"><expr pos:start="147:34" pos:end="147:71"><name pos:start="147:34" pos:end="147:62"><name pos:start="147:34" pos:end="147:35">sc</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:46">ctts_data</name><index pos:start="147:47" pos:end="147:62">[<expr pos:start="147:48" pos:end="147:61"><name pos:start="147:48" pos:end="147:61"><name pos:start="147:48" pos:end="147:49">sc</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:61">ctts_count</name></name></expr>]</index></name><operator pos:start="147:63" pos:end="147:63">.</operator><name pos:start="147:64" pos:end="147:71">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="191:9"><if pos:start="149:9" pos:end="191:9">if <condition pos:start="149:12" pos:end="149:41">(<expr pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:16">frag</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:22">time</name></name> <operator pos:start="149:24" pos:end="149:25">!=</operator> <name pos:start="149:27" pos:end="149:40">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="149:43" pos:end="191:9">{<block_content pos:start="151:13" pos:end="189:40">

            <if_stmt pos:start="151:13" pos:end="187:13"><if pos:start="151:13" pos:end="179:13">if <condition pos:start="151:16" pos:end="151:56">(<expr pos:start="151:17" pos:end="151:55"><name pos:start="151:17" pos:end="151:31"><name pos:start="151:17" pos:end="151:17">c</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:31">use_mfra_for</name></name> <operator pos:start="151:33" pos:end="151:34">==</operator> <name pos:start="151:36" pos:end="151:55">FF_MOV_FLAG_MFRA_PTS</name></expr>)</condition> <block pos:start="151:58" pos:end="179:13">{<block_content pos:start="153:17" pos:end="177:84">

                <decl_stmt pos:start="153:17" pos:end="153:41"><decl pos:start="153:17" pos:end="153:40"><type pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:23">int64_t</name></type> <name pos:start="153:25" pos:end="153:27">pts</name> <init pos:start="153:29" pos:end="153:40">= <expr pos:start="153:31" pos:end="153:40"><name pos:start="153:31" pos:end="153:40"><name pos:start="153:31" pos:end="153:34">frag</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:40">time</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="155:17" pos:end="163:70"><expr pos:start="155:17" pos:end="163:69"><call pos:start="155:17" pos:end="163:69"><name pos:start="155:17" pos:end="155:22">av_log</name><argument_list pos:start="155:23" pos:end="163:69">(<argument pos:start="155:24" pos:end="155:28"><expr pos:start="155:24" pos:end="155:28"><name pos:start="155:24" pos:end="155:28"><name pos:start="155:24" pos:end="155:24">c</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:28">fc</name></name></expr></argument>, <argument pos:start="155:31" pos:end="155:42"><expr pos:start="155:31" pos:end="155:42"><name pos:start="155:31" pos:end="155:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="155:45" pos:end="159:85"><expr pos:start="155:45" pos:end="159:85"><literal type="string" pos:start="155:45" pos:end="155:63">"found frag time %"</literal><name pos:start="155:64" pos:end="155:69">PRId64</name>

                        <literal type="string" pos:start="157:25" pos:end="157:60">" sc-&gt;dts_shift %d ctts.duration %d"</literal>

                        <literal type="string" pos:start="159:25" pos:end="159:44">" sc-&gt;time_offset %"</literal><name pos:start="159:45" pos:end="159:50">PRId64</name><literal type="string" pos:start="159:51" pos:end="159:85">" flags &amp; MOV_TRUN_SAMPLE_CTS %d\n"</literal></expr></argument>, <argument pos:start="159:88" pos:end="159:90"><expr pos:start="159:88" pos:end="159:90"><name pos:start="159:88" pos:end="159:90">pts</name></expr></argument>,

                        <argument pos:start="161:25" pos:end="161:37"><expr pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:26">sc</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:37">dts_shift</name></name></expr></argument>, <argument pos:start="161:40" pos:end="161:77"><expr pos:start="161:40" pos:end="161:77"><name pos:start="161:40" pos:end="161:68"><name pos:start="161:40" pos:end="161:41">sc</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:52">ctts_data</name><index pos:start="161:53" pos:end="161:68">[<expr pos:start="161:54" pos:end="161:67"><name pos:start="161:54" pos:end="161:67"><name pos:start="161:54" pos:end="161:55">sc</name><operator pos:start="161:56" pos:end="161:57">-&gt;</operator><name pos:start="161:58" pos:end="161:67">ctts_count</name></name></expr>]</index></name><operator pos:start="161:69" pos:end="161:69">.</operator><name pos:start="161:70" pos:end="161:77">duration</name></expr></argument>,

                        <argument pos:start="163:25" pos:end="163:39"><expr pos:start="163:25" pos:end="163:39"><name pos:start="163:25" pos:end="163:39"><name pos:start="163:25" pos:end="163:26">sc</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:39">time_offset</name></name></expr></argument>, <argument pos:start="163:42" pos:end="163:68"><expr pos:start="163:42" pos:end="163:68"><name pos:start="163:42" pos:end="163:46">flags</name> <operator pos:start="163:48" pos:end="163:48">&amp;</operator> <name pos:start="163:50" pos:end="163:68">MOV_TRUN_SAMPLE_CTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:42"><expr pos:start="165:17" pos:end="165:41"><name pos:start="165:17" pos:end="165:19">dts</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:25">pts</name> <operator pos:start="165:27" pos:end="165:27">-</operator> <name pos:start="165:29" pos:end="165:41"><name pos:start="165:29" pos:end="165:30">sc</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:41">dts_shift</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="167:17" pos:end="175:17"><if pos:start="167:17" pos:end="171:17">if <condition pos:start="167:20" pos:end="167:48">(<expr pos:start="167:21" pos:end="167:47"><name pos:start="167:21" pos:end="167:25">flags</name> <operator pos:start="167:27" pos:end="167:27">&amp;</operator> <name pos:start="167:29" pos:end="167:47">MOV_TRUN_SAMPLE_CTS</name></expr>)</condition> <block pos:start="167:50" pos:end="171:17">{<block_content pos:start="169:21" pos:end="169:66">

                    <expr_stmt pos:start="169:21" pos:end="169:66"><expr pos:start="169:21" pos:end="169:65"><name pos:start="169:21" pos:end="169:23">dts</name> <operator pos:start="169:25" pos:end="169:26">-=</operator> <name pos:start="169:28" pos:end="169:56"><name pos:start="169:28" pos:end="169:29">sc</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:40">ctts_data</name><index pos:start="169:41" pos:end="169:56">[<expr pos:start="169:42" pos:end="169:55"><name pos:start="169:42" pos:end="169:55"><name pos:start="169:42" pos:end="169:43">sc</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:55">ctts_count</name></name></expr>]</index></name><operator pos:start="169:57" pos:end="169:57">.</operator><name pos:start="169:58" pos:end="169:65">duration</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="171:19" pos:end="175:17">else <block pos:start="171:24" pos:end="175:17">{<block_content pos:start="173:21" pos:end="173:43">

                    <expr_stmt pos:start="173:21" pos:end="173:43"><expr pos:start="173:21" pos:end="173:42"><name pos:start="173:21" pos:end="173:23">dts</name> <operator pos:start="173:25" pos:end="173:26">-=</operator> <name pos:start="173:28" pos:end="173:42"><name pos:start="173:28" pos:end="173:29">sc</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:42">time_offset</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:84"><expr pos:start="177:17" pos:end="177:83"><call pos:start="177:17" pos:end="177:83"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="177:83">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:24">c</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:28">fc</name></name></expr></argument>, <argument pos:start="177:31" pos:end="177:42"><expr pos:start="177:31" pos:end="177:42"><name pos:start="177:31" pos:end="177:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="177:45" pos:end="177:77"><expr pos:start="177:45" pos:end="177:77"><literal type="string" pos:start="177:45" pos:end="177:67">"calculated into dts %"</literal><name pos:start="177:68" pos:end="177:73">PRId64</name><literal type="string" pos:start="177:74" pos:end="177:77">"\n"</literal></expr></argument>, <argument pos:start="177:80" pos:end="177:82"><expr pos:start="177:80" pos:end="177:82"><name pos:start="177:80" pos:end="177:82">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="187:13">else <block pos:start="179:20" pos:end="187:13">{<block_content pos:start="181:17" pos:end="185:53">

                <expr_stmt pos:start="181:17" pos:end="181:33"><expr pos:start="181:17" pos:end="181:32"><name pos:start="181:17" pos:end="181:19">dts</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <name pos:start="181:23" pos:end="181:32"><name pos:start="181:23" pos:end="181:26">frag</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:32">time</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="185:53"><expr pos:start="183:17" pos:end="185:52"><call pos:start="183:17" pos:end="185:52"><name pos:start="183:17" pos:end="183:22">av_log</name><argument_list pos:start="183:23" pos:end="185:52">(<argument pos:start="183:24" pos:end="183:28"><expr pos:start="183:24" pos:end="183:28"><name pos:start="183:24" pos:end="183:28"><name pos:start="183:24" pos:end="183:24">c</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:28">fc</name></name></expr></argument>, <argument pos:start="183:31" pos:end="183:42"><expr pos:start="183:31" pos:end="183:42"><name pos:start="183:31" pos:end="183:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="183:45" pos:end="185:46"><expr pos:start="183:45" pos:end="185:46"><literal type="string" pos:start="183:45" pos:end="183:63">"found frag time %"</literal><name pos:start="183:64" pos:end="183:69">PRId64</name>

                        <literal type="string" pos:start="185:25" pos:end="185:46">", using it for dts\n"</literal></expr></argument>, <argument pos:start="185:49" pos:end="185:51"><expr pos:start="185:49" pos:end="185:51"><name pos:start="185:49" pos:end="185:51">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:40"><expr pos:start="189:13" pos:end="189:39"><name pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:16">frag</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:22">time</name></name> <operator pos:start="189:24" pos:end="189:24">=</operator> <name pos:start="189:26" pos:end="189:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:31"><expr pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:11">cts</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <name pos:start="193:15" pos:end="193:17">dts</name> <operator pos:start="193:19" pos:end="193:19">+</operator> <name pos:start="193:21" pos:end="193:30">sample_cts</name></expr>;</expr_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:25"><expr pos:start="197:9" pos:end="197:24"><name pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:10">sc</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:22">ctts_count</name></name><operator pos:start="197:23" pos:end="197:24">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="209:69"><if pos:start="199:9" pos:end="201:25">if <condition pos:start="199:12" pos:end="199:56">(<expr pos:start="199:13" pos:end="199:55"><name pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:14">st</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:21">codec</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:33">codec_type</name></name> <operator pos:start="199:35" pos:end="199:36">==</operator> <name pos:start="199:38" pos:end="199:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:25"><block_content pos:start="201:13" pos:end="201:25">

            <expr_stmt pos:start="201:13" pos:end="201:25"><expr pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:20">keyframe</name> <operator pos:start="201:22" pos:end="201:22">=</operator> <literal type="number" pos:start="201:24" pos:end="201:24">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="203:9" pos:end="209:69">else if <condition pos:start="203:17" pos:end="203:33">(<expr pos:start="203:18" pos:end="203:32"><operator pos:start="203:18" pos:end="203:18">!</operator><name pos:start="203:19" pos:end="203:32">found_keyframe</name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="209:69"><block_content pos:start="205:13" pos:end="209:69">

            <expr_stmt pos:start="205:13" pos:end="209:69"><expr pos:start="205:13" pos:end="209:68"><name pos:start="205:13" pos:end="205:20">keyframe</name> <operator pos:start="205:22" pos:end="205:22">=</operator> <name pos:start="205:24" pos:end="205:37">found_keyframe</name> <operator pos:start="205:39" pos:end="205:39">=</operator>

                <operator pos:start="207:17" pos:end="207:17">!</operator><operator pos:start="207:18" pos:end="207:18">(</operator><name pos:start="207:19" pos:end="207:30">sample_flags</name> <operator pos:start="207:32" pos:end="207:32">&amp;</operator> <operator pos:start="207:34" pos:end="207:34">(</operator><name pos:start="207:35" pos:end="207:66">MOV_FRAG_SAMPLE_FLAG_IS_NON_SYNC</name> <operator pos:start="207:68" pos:end="207:68">|</operator>

                                  <name pos:start="209:35" pos:end="209:66">MOV_FRAG_SAMPLE_FLAG_DEPENDS_YES</name><operator pos:start="209:67" pos:end="209:67">)</operator><operator pos:start="209:68" pos:end="209:68">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="211:9" pos:end="213:25"><if pos:start="211:9" pos:end="213:25">if <condition pos:start="211:12" pos:end="211:21">(<expr pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:20">keyframe</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:25"><block_content pos:start="213:13" pos:end="213:25">

            <expr_stmt pos:start="213:13" pos:end="213:25"><expr pos:start="213:13" pos:end="213:24"><name pos:start="213:13" pos:end="213:20">distance</name> <operator pos:start="213:22" pos:end="213:22">=</operator> <literal type="number" pos:start="213:24" pos:end="213:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="215:9" pos:end="217:66"><expr pos:start="215:9" pos:end="217:65"><name pos:start="215:9" pos:end="215:11">err</name> <operator pos:start="215:13" pos:end="215:13">=</operator> <call pos:start="215:15" pos:end="217:65"><name pos:start="215:15" pos:end="215:32">av_add_index_entry</name><argument_list pos:start="215:33" pos:end="217:65">(<argument pos:start="215:34" pos:end="215:35"><expr pos:start="215:34" pos:end="215:35"><name pos:start="215:34" pos:end="215:35">st</name></expr></argument>, <argument pos:start="215:38" pos:end="215:43"><expr pos:start="215:38" pos:end="215:43"><name pos:start="215:38" pos:end="215:43">offset</name></expr></argument>, <argument pos:start="215:46" pos:end="215:56"><expr pos:start="215:46" pos:end="215:56"><name pos:start="215:46" pos:end="215:54">INT64_MAX</name><operator pos:start="215:55" pos:end="215:55">/</operator><literal type="number" pos:start="215:56" pos:end="215:56">2</literal></expr></argument>, <argument pos:start="215:59" pos:end="215:69"><expr pos:start="215:59" pos:end="215:69"><name pos:start="215:59" pos:end="215:69">sample_size</name></expr></argument>, <argument pos:start="215:72" pos:end="215:79"><expr pos:start="215:72" pos:end="215:79"><name pos:start="215:72" pos:end="215:79">distance</name></expr></argument>,

                                 <argument pos:start="217:34" pos:end="217:64"><expr pos:start="217:34" pos:end="217:64"><ternary pos:start="217:34" pos:end="217:64"><condition pos:start="217:34" pos:end="217:43"><expr pos:start="217:34" pos:end="217:41"><name pos:start="217:34" pos:end="217:41">keyframe</name></expr> ?</condition><then pos:start="217:45" pos:end="217:60"> <expr pos:start="217:45" pos:end="217:60"><name pos:start="217:45" pos:end="217:60">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="217:62" pos:end="217:64">: <expr pos:start="217:64" pos:end="217:64"><literal type="number" pos:start="217:64" pos:end="217:64">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="225:72"><if pos:start="219:9" pos:end="223:9">if <condition pos:start="219:12" pos:end="219:20">(<expr pos:start="219:13" pos:end="219:19"><name pos:start="219:13" pos:end="219:15">err</name> <operator pos:start="219:17" pos:end="219:17">&lt;</operator> <literal type="number" pos:start="219:19" pos:end="219:19">0</literal></expr>)</condition> <block pos:start="219:22" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:71">

            <expr_stmt pos:start="221:13" pos:end="221:71"><expr pos:start="221:13" pos:end="221:70"><call pos:start="221:13" pos:end="221:70"><name pos:start="221:13" pos:end="221:18">av_log</name><argument_list pos:start="221:19" pos:end="221:70">(<argument pos:start="221:20" pos:end="221:24"><expr pos:start="221:20" pos:end="221:24"><name pos:start="221:20" pos:end="221:24"><name pos:start="221:20" pos:end="221:20">c</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:24">fc</name></name></expr></argument>, <argument pos:start="221:27" pos:end="221:38"><expr pos:start="221:27" pos:end="221:38"><name pos:start="221:27" pos:end="221:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="221:41" pos:end="221:69"><expr pos:start="221:41" pos:end="221:69"><literal type="string" pos:start="221:41" pos:end="221:69">"Failed to add index entry\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="223:11" pos:end="225:72">else<block type="pseudo" pos:start="225:13" pos:end="225:72"><block_content pos:start="225:13" pos:end="225:72">

            <expr_stmt pos:start="225:13" pos:end="225:72"><expr pos:start="225:13" pos:end="225:71"><name pos:start="225:13" pos:end="225:55"><name pos:start="225:13" pos:end="225:14">st</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:29">index_entries</name><index pos:start="225:30" pos:end="225:55">[<expr pos:start="225:31" pos:end="225:54"><name pos:start="225:31" pos:end="225:50"><name pos:start="225:31" pos:end="225:32">st</name><operator pos:start="225:33" pos:end="225:34">-&gt;</operator><name pos:start="225:35" pos:end="225:50">nb_index_entries</name></name> <operator pos:start="225:52" pos:end="225:52">-</operator> <literal type="number" pos:start="225:54" pos:end="225:54">1</literal></expr>]</index></name><operator pos:start="225:56" pos:end="225:56">.</operator><name pos:start="225:57" pos:end="225:65">timestamp</name> <operator pos:start="225:67" pos:end="225:67">=</operator> <name pos:start="225:69" pos:end="225:71">cts</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="231:62"><expr pos:start="227:9" pos:end="231:61"><call pos:start="227:9" pos:end="231:61"><name pos:start="227:9" pos:end="227:15">av_dlog</name><argument_list pos:start="227:16" pos:end="231:61">(<argument pos:start="227:17" pos:end="227:21"><expr pos:start="227:17" pos:end="227:21"><name pos:start="227:17" pos:end="227:21"><name pos:start="227:17" pos:end="227:17">c</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:21">fc</name></name></expr></argument>, <argument pos:start="227:24" pos:end="229:53"><expr pos:start="227:24" pos:end="229:53"><literal type="string" pos:start="227:24" pos:end="227:63">"AVIndex stream %d, sample %d, offset %"</literal><name pos:start="227:64" pos:end="227:69">PRIx64</name><literal type="string" pos:start="227:70" pos:end="227:78">", cts %"</literal><name pos:start="227:79" pos:end="227:84">PRId64</name><literal type="string" pos:start="227:85" pos:end="227:88">", "</literal>

                <literal type="string" pos:start="229:17" pos:end="229:53">"size %d, distance %d, keyframe %d\n"</literal></expr></argument>, <argument pos:start="229:56" pos:end="229:64"><expr pos:start="229:56" pos:end="229:64"><name pos:start="229:56" pos:end="229:64"><name pos:start="229:56" pos:end="229:57">st</name><operator pos:start="229:58" pos:end="229:59">-&gt;</operator><name pos:start="229:60" pos:end="229:64">index</name></name></expr></argument>, <argument pos:start="229:67" pos:end="229:84"><expr pos:start="229:67" pos:end="229:84"><name pos:start="229:67" pos:end="229:82"><name pos:start="229:67" pos:end="229:68">sc</name><operator pos:start="229:69" pos:end="229:70">-&gt;</operator><name pos:start="229:71" pos:end="229:82">sample_count</name></name><operator pos:start="229:83" pos:end="229:83">+</operator><name pos:start="229:84" pos:end="229:84">i</name></expr></argument>,

                <argument pos:start="231:17" pos:end="231:22"><expr pos:start="231:17" pos:end="231:22"><name pos:start="231:17" pos:end="231:22">offset</name></expr></argument>, <argument pos:start="231:25" pos:end="231:27"><expr pos:start="231:25" pos:end="231:27"><name pos:start="231:25" pos:end="231:27">cts</name></expr></argument>, <argument pos:start="231:30" pos:end="231:40"><expr pos:start="231:30" pos:end="231:40"><name pos:start="231:30" pos:end="231:40">sample_size</name></expr></argument>, <argument pos:start="231:43" pos:end="231:50"><expr pos:start="231:43" pos:end="231:50"><name pos:start="231:43" pos:end="231:50">distance</name></expr></argument>, <argument pos:start="231:53" pos:end="231:60"><expr pos:start="231:53" pos:end="231:60"><name pos:start="231:53" pos:end="231:60">keyframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:19"><expr pos:start="233:9" pos:end="233:18"><name pos:start="233:9" pos:end="233:16">distance</name><operator pos:start="233:17" pos:end="233:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:31"><expr pos:start="235:9" pos:end="235:30"><name pos:start="235:9" pos:end="235:11">dts</name> <operator pos:start="235:13" pos:end="235:14">+=</operator> <name pos:start="235:16" pos:end="235:30">sample_duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:30"><expr pos:start="237:9" pos:end="237:29"><name pos:start="237:9" pos:end="237:14">offset</name> <operator pos:start="237:16" pos:end="237:17">+=</operator> <name pos:start="237:19" pos:end="237:29">sample_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:37"><expr pos:start="239:9" pos:end="239:36"><name pos:start="239:9" pos:end="239:21"><name pos:start="239:9" pos:end="239:10">sc</name><operator pos:start="239:11" pos:end="239:12">-&gt;</operator><name pos:start="239:13" pos:end="239:21">data_size</name></name> <operator pos:start="239:23" pos:end="239:24">+=</operator> <name pos:start="239:26" pos:end="239:36">sample_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:48"><expr pos:start="241:9" pos:end="241:47"><name pos:start="241:9" pos:end="241:28"><name pos:start="241:9" pos:end="241:10">sc</name><operator pos:start="241:11" pos:end="241:12">-&gt;</operator><name pos:start="241:13" pos:end="241:28">duration_for_fps</name></name> <operator pos:start="241:30" pos:end="241:31">+=</operator> <name pos:start="241:33" pos:end="241:47">sample_duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:33"><expr pos:start="243:9" pos:end="243:32"><name pos:start="243:9" pos:end="243:29"><name pos:start="243:9" pos:end="243:10">sc</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:29">nb_frames_for_fps</name></name> <operator pos:start="243:31" pos:end="243:32">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="249:5" pos:end="251:27"><if pos:start="249:5" pos:end="251:27">if <condition pos:start="249:8" pos:end="249:24">(<expr pos:start="249:9" pos:end="249:23"><name pos:start="249:9" pos:end="249:23"><name pos:start="249:9" pos:end="249:10">pb</name><operator pos:start="249:11" pos:end="249:12">-&gt;</operator><name pos:start="249:13" pos:end="249:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:27"><block_content pos:start="251:9" pos:end="251:27">

        <return pos:start="251:9" pos:end="251:27">return <expr pos:start="251:16" pos:end="251:26"><name pos:start="251:16" pos:end="251:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:35"><expr pos:start="255:5" pos:end="255:34"><name pos:start="255:5" pos:end="255:25"><name pos:start="255:5" pos:end="255:8">frag</name><operator pos:start="255:9" pos:end="255:10">-&gt;</operator><name pos:start="255:11" pos:end="255:25">implicit_offset</name></name> <operator pos:start="255:27" pos:end="255:27">=</operator> <name pos:start="255:29" pos:end="255:34">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:57"><expr pos:start="257:5" pos:end="257:56"><name pos:start="257:5" pos:end="257:16"><name pos:start="257:5" pos:end="257:6">st</name><operator pos:start="257:7" pos:end="257:8">-&gt;</operator><name pos:start="257:9" pos:end="257:16">duration</name></name> <operator pos:start="257:18" pos:end="257:18">=</operator> <name pos:start="257:20" pos:end="257:32"><name pos:start="257:20" pos:end="257:21">sc</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:32">track_end</name></name> <operator pos:start="257:34" pos:end="257:34">=</operator> <name pos:start="257:36" pos:end="257:38">dts</name> <operator pos:start="257:40" pos:end="257:40">+</operator> <name pos:start="257:42" pos:end="257:56"><name pos:start="257:42" pos:end="257:43">sc</name><operator pos:start="257:44" pos:end="257:45">-&gt;</operator><name pos:start="257:46" pos:end="257:56">time_offset</name></name></expr>;</expr_stmt>

    <return pos:start="259:5" pos:end="259:13">return <expr pos:start="259:12" pos:end="259:12"><literal type="number" pos:start="259:12" pos:end="259:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
