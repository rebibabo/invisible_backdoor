<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15014.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:25">timerlist_run_timers</name><parameter_list pos:start="1:26" pos:end="1:52">(<parameter pos:start="1:27" pos:end="1:51"><decl pos:start="1:27" pos:end="1:51"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:39">QEMUTimerList</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:51">timer_list</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:20">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">QEMUTimer</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:24">current_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:17">progress</name> <init pos:start="9:19" pos:end="9:25">= <expr pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:25">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">QEMUTimerCB</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">cb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">opaque</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:48"><name pos:start="17:10" pos:end="17:20">atomic_read</name><argument_list pos:start="17:21" pos:end="17:48">(<argument pos:start="17:22" pos:end="17:47"><expr pos:start="17:22" pos:end="17:47"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:47"><name pos:start="17:23" pos:end="17:32">timer_list</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:47">active_timers</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:51" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:21">

        <return pos:start="19:9" pos:end="19:21">return <expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:50"><expr pos:start="25:5" pos:end="25:49"><call pos:start="25:5" pos:end="25:49"><name pos:start="25:5" pos:end="25:20">qemu_event_reset</name><argument_list pos:start="25:21" pos:end="25:49">(<argument pos:start="25:22" pos:end="25:48"><expr pos:start="25:22" pos:end="25:48"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:48"><name pos:start="25:23" pos:end="25:32">timer_list</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:48">timers_done_ev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:35"><name pos:start="27:10" pos:end="27:19">timer_list</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:26">clock</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:35">enabled</name></name></expr>)</condition> <block pos:start="27:38" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="35:5" pos:end="73:5">switch <condition pos:start="35:12" pos:end="35:36">(<expr pos:start="35:13" pos:end="35:35"><name pos:start="35:13" pos:end="35:35"><name pos:start="35:13" pos:end="35:22">timer_list</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:29">clock</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:35">type</name></name></expr>)</condition> <block pos:start="35:38" pos:end="73:5">{<block_content pos:start="37:5" pos:end="71:14">

    <case pos:start="37:5" pos:end="37:29">case <expr pos:start="37:10" pos:end="37:28"><name pos:start="37:10" pos:end="37:28">QEMU_CLOCK_REALTIME</name></expr>:</case>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

    <case pos:start="43:5" pos:end="43:28">case <expr pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:27">QEMU_CLOCK_VIRTUAL</name></expr>:</case>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:57">(<expr pos:start="45:13" pos:end="45:56"><operator pos:start="45:13" pos:end="45:13">!</operator><call pos:start="45:14" pos:end="45:56"><name pos:start="45:14" pos:end="45:30">replay_checkpoint</name><argument_list pos:start="45:31" pos:end="45:56">(<argument pos:start="45:32" pos:end="45:55"><expr pos:start="45:32" pos:end="45:55"><name pos:start="45:32" pos:end="45:55">CHECKPOINT_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:59" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:21">

            <goto pos:start="47:13" pos:end="47:21">goto <name pos:start="47:18" pos:end="47:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:25">case <expr pos:start="53:10" pos:end="53:24"><name pos:start="53:10" pos:end="53:24">QEMU_CLOCK_HOST</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:54">(<expr pos:start="55:13" pos:end="55:53"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:53"><name pos:start="55:14" pos:end="55:30">replay_checkpoint</name><argument_list pos:start="55:31" pos:end="55:53">(<argument pos:start="55:32" pos:end="55:52"><expr pos:start="55:32" pos:end="55:52"><name pos:start="55:32" pos:end="55:52">CHECKPOINT_CLOCK_HOST</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:56" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:21">

            <goto pos:start="57:13" pos:end="57:21">goto <name pos:start="57:18" pos:end="57:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:31">case <expr pos:start="63:10" pos:end="63:30"><name pos:start="63:10" pos:end="63:30">QEMU_CLOCK_VIRTUAL_RT</name></expr>:</case>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:60">(<expr pos:start="65:13" pos:end="65:59"><operator pos:start="65:13" pos:end="65:13">!</operator><call pos:start="65:14" pos:end="65:59"><name pos:start="65:14" pos:end="65:30">replay_checkpoint</name><argument_list pos:start="65:31" pos:end="65:59">(<argument pos:start="65:32" pos:end="65:58"><expr pos:start="65:32" pos:end="65:58"><name pos:start="65:32" pos:end="65:58">CHECKPOINT_CLOCK_VIRTUAL_RT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:62" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:21">

            <goto pos:start="67:13" pos:end="67:21">goto <name pos:start="67:18" pos:end="67:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:16">current_time</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:61"><name pos:start="77:20" pos:end="77:36">qemu_clock_get_ns</name><argument_list pos:start="77:37" pos:end="77:61">(<argument pos:start="77:38" pos:end="77:60"><expr pos:start="77:38" pos:end="77:60"><name pos:start="77:38" pos:end="77:60"><name pos:start="77:38" pos:end="77:47">timer_list</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:54">clock</name><operator pos:start="77:55" pos:end="77:56">-&gt;</operator><name pos:start="77:57" pos:end="77:60">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="79:5" pos:end="117:5">for<control pos:start="79:8" pos:end="79:11">(<init pos:start="79:9" pos:end="79:9">;</init><condition pos:start="79:10" pos:end="79:10">;</condition><incr/>)</control> <block pos:start="79:13" pos:end="117:5">{<block_content pos:start="81:9" pos:end="115:24">

        <expr_stmt pos:start="81:9" pos:end="81:57"><expr pos:start="81:9" pos:end="81:56"><call pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:23">qemu_mutex_lock</name><argument_list pos:start="81:24" pos:end="81:56">(<argument pos:start="81:25" pos:end="81:55"><expr pos:start="81:25" pos:end="81:55"><operator pos:start="81:25" pos:end="81:25">&amp;</operator><name pos:start="81:26" pos:end="81:55"><name pos:start="81:26" pos:end="81:35">timer_list</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:55">active_timers_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:10">ts</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <name pos:start="83:14" pos:end="83:38"><name pos:start="83:14" pos:end="83:23">timer_list</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:38">active_timers</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:48">(<expr pos:start="85:13" pos:end="85:47"><operator pos:start="85:13" pos:end="85:13">!</operator><call pos:start="85:14" pos:end="85:47"><name pos:start="85:14" pos:end="85:29">timer_expired_ns</name><argument_list pos:start="85:30" pos:end="85:47">(<argument pos:start="85:31" pos:end="85:32"><expr pos:start="85:31" pos:end="85:32"><name pos:start="85:31" pos:end="85:32">ts</name></expr></argument>, <argument pos:start="85:35" pos:end="85:46"><expr pos:start="85:35" pos:end="85:46"><name pos:start="85:35" pos:end="85:46">current_time</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:50" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:18">

            <expr_stmt pos:start="87:13" pos:end="87:63"><expr pos:start="87:13" pos:end="87:62"><call pos:start="87:13" pos:end="87:62"><name pos:start="87:13" pos:end="87:29">qemu_mutex_unlock</name><argument_list pos:start="87:30" pos:end="87:62">(<argument pos:start="87:31" pos:end="87:61"><expr pos:start="87:31" pos:end="87:61"><operator pos:start="87:31" pos:end="87:31">&amp;</operator><name pos:start="87:32" pos:end="87:61"><name pos:start="87:32" pos:end="87:41">timer_list</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:61">active_timers_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="95:9" pos:end="95:68">/* remove timer from the list before calling the callback */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:18">timer_list</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:33">active_timers</name></name> <operator pos:start="97:35" pos:end="97:35">=</operator> <name pos:start="97:37" pos:end="97:44"><name pos:start="97:37" pos:end="97:38">ts</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:44">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:10">ts</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:16">next</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:23">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:10">ts</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:23">expire_time</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <operator pos:start="101:27" pos:end="101:27">-</operator><literal type="number" pos:start="101:28" pos:end="101:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:10">cb</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:19"><name pos:start="103:14" pos:end="103:15">ts</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:19">cb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:14">opaque</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:27"><name pos:start="105:18" pos:end="105:19">ts</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:27">opaque</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:59"><expr pos:start="107:9" pos:end="107:58"><call pos:start="107:9" pos:end="107:58"><name pos:start="107:9" pos:end="107:25">qemu_mutex_unlock</name><argument_list pos:start="107:26" pos:end="107:58">(<argument pos:start="107:27" pos:end="107:57"><expr pos:start="107:27" pos:end="107:57"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:57"><name pos:start="107:28" pos:end="107:37">timer_list</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:57">active_timers_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="111:9" pos:end="111:63">/* run the callback (the timer list can be modified) */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:19"><expr pos:start="113:9" pos:end="113:18"><call pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:10">cb</name><argument_list pos:start="113:11" pos:end="113:18">(<argument pos:start="113:12" pos:end="113:17"><expr pos:start="113:12" pos:end="113:17"><name pos:start="113:12" pos:end="113:17">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:24"><expr pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:16">progress</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:23">true</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<label pos:start="121:1" pos:end="121:4"><name pos:start="121:1" pos:end="121:3">out</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:48"><expr pos:start="123:5" pos:end="123:47"><call pos:start="123:5" pos:end="123:47"><name pos:start="123:5" pos:end="123:18">qemu_event_set</name><argument_list pos:start="123:19" pos:end="123:47">(<argument pos:start="123:20" pos:end="123:46"><expr pos:start="123:20" pos:end="123:46"><operator pos:start="123:20" pos:end="123:20">&amp;</operator><name pos:start="123:21" pos:end="123:46"><name pos:start="123:21" pos:end="123:30">timer_list</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:46">timers_done_ev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:20">return <expr pos:start="125:12" pos:end="125:19"><name pos:start="125:12" pos:end="125:19">progress</name></expr>;</return>

</block_content>}</block></function>
</unit>
