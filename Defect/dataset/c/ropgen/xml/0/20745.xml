<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20745.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">vnc_init_state</name><parameter_list pos:start="1:20" pos:end="1:33">(<parameter pos:start="1:21" pos:end="1:32"><decl pos:start="1:21" pos:end="1:32"><type pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:28">VncState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:32">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:66">

    <expr_stmt pos:start="5:5" pos:end="5:27"><expr pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:6">vs</name><operator pos:start="5:7" pos:end="5:8">-&gt;</operator><name pos:start="5:9" pos:end="5:19">initialized</name></name> <operator pos:start="5:21" pos:end="5:21">=</operator> <name pos:start="5:23" pos:end="5:26">true</name></expr>;</expr_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VncDisplay</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">vd</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:23">vs</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">vd</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:21">first_client</name> <init pos:start="9:23" pos:end="9:50">= <expr pos:start="9:25" pos:end="9:50"><call pos:start="9:25" pos:end="9:50"><name pos:start="9:25" pos:end="9:36">QTAILQ_EMPTY</name><argument_list pos:start="9:37" pos:end="9:50">(<argument pos:start="9:38" pos:end="9:49"><expr pos:start="9:38" pos:end="9:49"><operator pos:start="9:38" pos:end="9:38">&amp;</operator><name pos:start="9:39" pos:end="9:49"><name pos:start="9:39" pos:end="9:40">vd</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:49">clients</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:6">vs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:14">last_x</name></name> <operator pos:start="13:16" pos:end="13:16">=</operator> <operator pos:start="13:18" pos:end="13:18">-</operator><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:6">vs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:14">last_y</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <operator pos:start="15:18" pos:end="15:18">-</operator><literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">vs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:10">as</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:15">freq</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:23">44100</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:6">vs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:10">as</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:20">nchannels</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:6">vs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:10">as</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:14">fmt</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:28">AUD_FMT_S16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:6">vs</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:10">as</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:21">endianness</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:19">qemu_mutex_init</name><argument_list pos:start="29:20" pos:end="29:38">(<argument pos:start="29:21" pos:end="29:37"><expr pos:start="29:21" pos:end="29:37"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:37"><name pos:start="29:22" pos:end="29:23">vs</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:37">output_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:6">vs</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:10">bh</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:41"><name pos:start="31:14" pos:end="31:24">qemu_bh_new</name><argument_list pos:start="31:25" pos:end="31:41">(<argument pos:start="31:26" pos:end="31:36"><expr pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:36">vnc_jobs_bh</name></expr></argument>, <argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="35:23" pos:end="35:46">(<argument pos:start="35:24" pos:end="35:35"><expr pos:start="35:24" pos:end="35:35"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:35"><name pos:start="35:25" pos:end="35:26">vd</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:35">clients</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">vs</name></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:20">first_client</name></expr>)</condition> <block pos:start="37:23" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:38">

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:33">vnc_update_server_surface</name><argument_list pos:start="39:34" pos:end="39:37">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:21">graphic_hw_update</name><argument_list pos:start="45:22" pos:end="45:34">(<argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><name pos:start="45:23" pos:end="45:33"><name pos:start="45:23" pos:end="45:24">vd</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">dcl</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:33">con</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><call pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:13">vnc_write</name><argument_list pos:start="49:14" pos:end="49:38">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">vs</name></expr></argument>, <argument pos:start="49:19" pos:end="49:33"><expr pos:start="49:19" pos:end="49:33"><literal type="string" pos:start="49:19" pos:end="49:33">"RFB 003.008\n"</literal></expr></argument>, <argument pos:start="49:36" pos:end="49:37"><expr pos:start="49:36" pos:end="49:37"><literal type="number" pos:start="49:36" pos:end="49:37">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><call pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:13">vnc_flush</name><argument_list pos:start="51:14" pos:end="51:17">(<argument pos:start="51:15" pos:end="51:16"><expr pos:start="51:15" pos:end="51:16"><name pos:start="51:15" pos:end="51:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><call pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:17">vnc_read_when</name><argument_list pos:start="53:18" pos:end="53:43">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">vs</name></expr></argument>, <argument pos:start="53:23" pos:end="53:38"><expr pos:start="53:23" pos:end="53:38"><name pos:start="53:23" pos:end="53:38">protocol_version</name></expr></argument>, <argument pos:start="53:41" pos:end="53:42"><expr pos:start="53:41" pos:end="53:42"><literal type="number" pos:start="53:41" pos:end="53:42">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><call pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:14">reset_keys</name><argument_list pos:start="55:15" pos:end="55:18">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:59"><if pos:start="57:5" pos:end="59:59">if <condition pos:start="57:8" pos:end="57:30">(<expr pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:10">vs</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:14">vd</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:29">lock_key_sync</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:59"><block_content pos:start="59:9" pos:end="59:59">

        <expr_stmt pos:start="59:9" pos:end="59:59"><expr pos:start="59:9" pos:end="59:58"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:10">vs</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:15">led</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:58"><name pos:start="59:19" pos:end="59:44">qemu_add_led_event_handler</name><argument_list pos:start="59:45" pos:end="59:58">(<argument pos:start="59:46" pos:end="59:53"><expr pos:start="59:46" pos:end="59:53"><name pos:start="59:46" pos:end="59:53">kbd_leds</name></expr></argument>, <argument pos:start="59:56" pos:end="59:57"><expr pos:start="59:56" pos:end="59:57"><name pos:start="59:56" pos:end="59:57">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:63"><expr pos:start="63:5" pos:end="63:62"><name pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:6">vs</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:27">mouse_mode_notifier</name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:34">notify</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <name pos:start="63:38" pos:end="63:62">check_pointer_type_change</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:66"><expr pos:start="65:5" pos:end="65:65"><call pos:start="65:5" pos:end="65:65"><name pos:start="65:5" pos:end="65:39">qemu_add_mouse_mode_change_notifier</name><argument_list pos:start="65:40" pos:end="65:65">(<argument pos:start="65:41" pos:end="65:64"><expr pos:start="65:41" pos:end="65:64"><operator pos:start="65:41" pos:end="65:41">&amp;</operator><name pos:start="65:42" pos:end="65:64"><name pos:start="65:42" pos:end="65:43">vs</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:64">mouse_mode_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
