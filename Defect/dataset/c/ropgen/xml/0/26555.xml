<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26555.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">mpeg_mc_decode_init</name><parameter_list pos:start="1:39" pos:end="1:61">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>)</parameter_list><block pos:start="1:62" pos:end="29:1">{<block_content pos:start="3:5" pos:end="27:13">

    <if_stmt pos:start="3:5" pos:end="5:18"><if pos:start="3:5" pos:end="5:18">if<condition pos:start="3:7" pos:end="3:32">( <expr pos:start="3:9" pos:end="3:31"><name pos:start="3:9" pos:end="3:27"><name pos:start="3:9" pos:end="3:13">avctx</name><operator pos:start="3:14" pos:end="3:15">-&gt;</operator><name pos:start="3:16" pos:end="3:27">thread_count</name></name> <operator pos:start="3:29" pos:end="3:29">&gt;</operator> <literal type="number" pos:start="3:31" pos:end="3:31">1</literal></expr>)</condition><block type="pseudo" pos:start="5:9" pos:end="5:18"><block_content pos:start="5:9" pos:end="5:18">

        <return pos:start="5:9" pos:end="5:18">return <expr pos:start="5:16" pos:end="5:17"><operator pos:start="5:16" pos:end="5:16">-</operator><literal type="number" pos:start="5:17" pos:end="5:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="7:5" pos:end="9:18"><if pos:start="7:5" pos:end="9:18">if<condition pos:start="7:7" pos:end="7:56">( <expr pos:start="7:9" pos:end="7:54"><operator pos:start="7:9" pos:end="7:9">!</operator><operator pos:start="7:10" pos:end="7:10">(</operator><name pos:start="7:11" pos:end="7:28"><name pos:start="7:11" pos:end="7:15">avctx</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:28">slice_flags</name></name> <operator pos:start="7:30" pos:end="7:30">&amp;</operator> <name pos:start="7:32" pos:end="7:53">SLICE_FLAG_CODED_ORDER</name><operator pos:start="7:54" pos:end="7:54">)</operator></expr> )</condition><block type="pseudo" pos:start="9:9" pos:end="9:18"><block_content pos:start="9:9" pos:end="9:18">

        <return pos:start="9:9" pos:end="9:18">return <expr pos:start="9:16" pos:end="9:17"><operator pos:start="9:16" pos:end="9:16">-</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if<condition pos:start="11:7" pos:end="11:56">( <expr pos:start="11:9" pos:end="11:54"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:28"><name pos:start="11:11" pos:end="11:15">avctx</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:28">slice_flags</name></name> <operator pos:start="11:30" pos:end="11:30">&amp;</operator> <name pos:start="11:32" pos:end="11:53">SLICE_FLAG_ALLOW_FIELD</name><operator pos:start="11:54" pos:end="11:54">)</operator></expr> )</condition><block pos:start="11:57" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:101">

        <expr_stmt pos:start="13:9" pos:end="13:101"><expr pos:start="13:9" pos:end="13:100"><call pos:start="13:9" pos:end="13:100"><name pos:start="13:9" pos:end="13:15">av_dlog</name><argument_list pos:start="13:16" pos:end="13:100">(<argument pos:start="13:17" pos:end="13:21"><expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:21">avctx</name></expr></argument>, <argument pos:start="13:24" pos:end="13:99"><expr pos:start="13:24" pos:end="13:99"><literal type="string" pos:start="13:24" pos:end="13:99">"mpeg12.c: XvMC decoder will work better if SLICE_FLAG_ALLOW_FIELD is set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><call pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:20">mpeg_decode_init</name><argument_list pos:start="17:21" pos:end="17:27">(<argument pos:start="17:22" pos:end="17:26"><expr pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:26">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:9">avctx</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:18">pix_fmt</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:44">PIX_FMT_XVMC_MPEG2_IDCT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:28">xvmc_acceleration</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">2</literal></expr>;</expr_stmt><comment type="line" pos:start="23:34" pos:end="23:61">//2 - the blocks are packed!</comment>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
