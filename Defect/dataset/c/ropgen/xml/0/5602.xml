<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5602.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">av_interleaved_write_frame</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:18">flush</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:30"><name pos:start="9:11" pos:end="9:22">check_packet</name><argument_list pos:start="9:23" pos:end="9:30">(<argument pos:start="9:24" pos:end="9:24"><expr pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">s</name></expr></argument>, <argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <goto pos:start="13:9" pos:end="13:18">goto <name pos:start="13:14" pos:end="13:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="59:5"><if pos:start="17:5" pos:end="53:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">pkt</name></expr>)</condition> <block pos:start="17:14" pos:end="53:5">{<block_content pos:start="19:9" pos:end="51:9">

        <decl_stmt pos:start="19:9" pos:end="19:53"><decl pos:start="19:9" pos:end="19:52"><type pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:16">AVStream</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:20">st</name> <init pos:start="19:22" pos:end="19:52">= <expr pos:start="19:24" pos:end="19:52"><name pos:start="19:24" pos:end="19:52"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:33">streams</name><index pos:start="19:34" pos:end="19:52">[<expr pos:start="19:35" pos:end="19:51"><name pos:start="19:35" pos:end="19:51"><name pos:start="19:35" pos:end="19:37">pkt</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:51">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="23:9" pos:end="23:48">//FIXME/XXX/HACK drop zero sized packets</comment>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:74">(<expr pos:start="25:13" pos:end="25:73"><name pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:14">st</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:21">codec</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:33">codec_type</name></name> <operator pos:start="25:35" pos:end="25:36">==</operator> <name pos:start="25:38" pos:end="25:55">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="25:57" pos:end="25:58">&amp;&amp;</operator> <name pos:start="25:60" pos:end="25:68"><name pos:start="25:60" pos:end="25:62">pkt</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:68">size</name></name> <operator pos:start="25:70" pos:end="25:71">==</operator> <literal type="number" pos:start="25:73" pos:end="25:73">0</literal></expr>)</condition> <block pos:start="25:76" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:22">

            <expr_stmt pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</expr_stmt>

            <goto pos:start="29:13" pos:end="29:22">goto <name pos:start="29:18" pos:end="29:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="37:47"><expr pos:start="35:9" pos:end="37:46"><call pos:start="35:9" pos:end="37:46"><name pos:start="35:9" pos:end="35:15">av_dlog</name><argument_list pos:start="35:16" pos:end="37:46">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">s</name></expr></argument>, <argument pos:start="35:20" pos:end="35:89"><expr pos:start="35:20" pos:end="35:89"><literal type="string" pos:start="35:20" pos:end="35:61">"av_interleaved_write_frame size:%d dts:%"</literal> <name pos:start="35:63" pos:end="35:68">PRId64</name> <literal type="string" pos:start="35:70" pos:end="35:77">" pts:%"</literal> <name pos:start="35:79" pos:end="35:84">PRId64</name> <literal type="string" pos:start="35:86" pos:end="35:89">"\n"</literal></expr></argument>,

                <argument pos:start="37:17" pos:end="37:25"><expr pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:25"><name pos:start="37:17" pos:end="37:19">pkt</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">size</name></name></expr></argument>, <argument pos:start="37:28" pos:end="37:35"><expr pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:35"><name pos:start="37:28" pos:end="37:30">pkt</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:35">dts</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:45"><expr pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:40">pkt</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:45">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:101">(<expr pos:start="39:13" pos:end="39:100"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:50"><name pos:start="39:20" pos:end="39:38">compute_pkt_fields2</name><argument_list pos:start="39:39" pos:end="39:50">(<argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">s</name></expr></argument>, <argument pos:start="39:43" pos:end="39:44"><expr pos:start="39:43" pos:end="39:44"><name pos:start="39:43" pos:end="39:44">st</name></expr></argument>, <argument pos:start="39:47" pos:end="39:49"><expr pos:start="39:47" pos:end="39:49"><name pos:start="39:47" pos:end="39:49">pkt</name></expr></argument>)</argument_list></call><operator pos:start="39:51" pos:end="39:51">)</operator> <operator pos:start="39:53" pos:end="39:53">&lt;</operator> <literal type="number" pos:start="39:55" pos:end="39:55">0</literal> <operator pos:start="39:57" pos:end="39:58">&amp;&amp;</operator> <operator pos:start="39:60" pos:end="39:60">!</operator><operator pos:start="39:61" pos:end="39:61">(</operator><name pos:start="39:62" pos:end="39:78"><name pos:start="39:62" pos:end="39:62">s</name><operator pos:start="39:63" pos:end="39:64">-&gt;</operator><name pos:start="39:65" pos:end="39:71">oformat</name><operator pos:start="39:72" pos:end="39:73">-&gt;</operator><name pos:start="39:74" pos:end="39:78">flags</name></name> <operator pos:start="39:80" pos:end="39:80">&amp;</operator> <name pos:start="39:82" pos:end="39:99">AVFMT_NOTIMESTAMPS</name><operator pos:start="39:100" pos:end="39:100">)</operator></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <goto pos:start="41:13" pos:end="41:22">goto <name pos:start="41:18" pos:end="41:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:84">(<expr pos:start="45:13" pos:end="45:83"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:15">pkt</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">dts</name></name> <operator pos:start="45:22" pos:end="45:23">==</operator> <name pos:start="45:25" pos:end="45:38">AV_NOPTS_VALUE</name> <operator pos:start="45:40" pos:end="45:41">&amp;&amp;</operator> <operator pos:start="45:43" pos:end="45:43">!</operator><operator pos:start="45:44" pos:end="45:44">(</operator><name pos:start="45:45" pos:end="45:61"><name pos:start="45:45" pos:end="45:45">s</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:54">oformat</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:61">flags</name></name> <operator pos:start="45:63" pos:end="45:63">&amp;</operator> <name pos:start="45:65" pos:end="45:82">AVFMT_NOTIMESTAMPS</name><operator pos:start="45:83" pos:end="45:83">)</operator></expr>)</condition> <block pos:start="45:86" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:33"><name pos:start="47:19" pos:end="47:25">AVERROR</name><argument_list pos:start="47:26" pos:end="47:33">(<argument pos:start="47:27" pos:end="47:32"><expr pos:start="47:27" pos:end="47:32"><name pos:start="47:27" pos:end="47:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="59:5">else <block pos:start="53:12" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:57"><expr pos:start="55:9" pos:end="55:56"><call pos:start="55:9" pos:end="55:56"><name pos:start="55:9" pos:end="55:15">av_dlog</name><argument_list pos:start="55:16" pos:end="55:56">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">s</name></expr></argument>, <argument pos:start="55:20" pos:end="55:55"><expr pos:start="55:20" pos:end="55:55"><literal type="string" pos:start="55:20" pos:end="55:55">"av_interleaved_write_frame FLUSH\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:13">flush</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="63:5" pos:end="101:5">for <control pos:start="63:9" pos:end="63:13">(<init pos:start="63:10" pos:end="63:10">;</init><condition pos:start="63:11" pos:end="63:11">;</condition> <incr/>)</control> <block pos:start="63:15" pos:end="101:5">{<block_content pos:start="65:9" pos:end="99:23">

        <decl_stmt pos:start="65:9" pos:end="65:22"><decl pos:start="65:9" pos:end="65:21"><type pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:16">AVPacket</name></type> <name pos:start="65:18" pos:end="65:21">opkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:58"><decl pos:start="67:9" pos:end="67:57"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:15">ret</name> <init pos:start="67:17" pos:end="67:57">= <expr pos:start="67:19" pos:end="67:57"><call pos:start="67:19" pos:end="67:57"><name pos:start="67:19" pos:end="67:35">interleave_packet</name><argument_list pos:start="67:36" pos:end="67:57">(<argument pos:start="67:37" pos:end="67:37"><expr pos:start="67:37" pos:end="67:37"><name pos:start="67:37" pos:end="67:37">s</name></expr></argument>, <argument pos:start="67:40" pos:end="67:44"><expr pos:start="67:40" pos:end="67:44"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:44">opkt</name></expr></argument>, <argument pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:49"><name pos:start="67:47" pos:end="67:49">pkt</name></expr></argument>, <argument pos:start="67:52" pos:end="67:56"><expr pos:start="67:52" pos:end="67:56"><name pos:start="67:52" pos:end="67:56">flush</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="69:16">(<expr pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">pkt</name></expr>)</condition> <block pos:start="69:18" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:23">

            <expr_stmt pos:start="71:13" pos:end="71:41"><expr pos:start="71:13" pos:end="71:40"><call pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:18">memset</name><argument_list pos:start="71:19" pos:end="71:40">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">pkt</name></expr></argument>, <argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr></argument>, <argument pos:start="71:28" pos:end="71:39"><expr pos:start="71:28" pos:end="71:39"><sizeof pos:start="71:28" pos:end="71:39">sizeof<argument_list pos:start="71:34" pos:end="71:39">(<argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><operator pos:start="71:35" pos:end="71:35">*</operator><name pos:start="71:36" pos:end="71:38">pkt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><call pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:26">av_init_packet</name><argument_list pos:start="73:27" pos:end="73:31">(<argument pos:start="73:28" pos:end="73:30"><expr pos:start="73:28" pos:end="73:30"><name pos:start="73:28" pos:end="73:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:23"><expr pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:15">pkt</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:22">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="81:23"><if pos:start="79:9" pos:end="81:23">if <condition pos:start="79:12" pos:end="79:21">(<expr pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:18">&lt;=</operator> <literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:23"><block_content pos:start="81:13" pos:end="81:23"> <comment type="line" pos:start="79:23" pos:end="79:56">//FIXME cleanup needed for ret&lt;0 ?</comment>

            <return pos:start="81:13" pos:end="81:23">return <expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:37"><expr pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:36"><name pos:start="85:15" pos:end="85:26">write_packet</name><argument_list pos:start="85:27" pos:end="85:36">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">s</name></expr></argument>, <argument pos:start="85:31" pos:end="85:35"><expr pos:start="85:31" pos:end="85:35"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:35">opkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:55"><if pos:start="87:9" pos:end="89:55">if <condition pos:start="87:12" pos:end="87:21">(<expr pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:18">&gt;=</operator> <literal type="number" pos:start="87:20" pos:end="87:20">0</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:55"><block_content pos:start="89:13" pos:end="89:55">

            <expr_stmt pos:start="89:13" pos:end="89:55"><expr pos:start="89:13" pos:end="89:54"><name pos:start="89:13" pos:end="89:41"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">streams</name><index pos:start="89:23" pos:end="89:41">[<expr pos:start="89:24" pos:end="89:40"><name pos:start="89:24" pos:end="89:40"><name pos:start="89:24" pos:end="89:27">opkt</name><operator pos:start="89:28" pos:end="89:28">.</operator><name pos:start="89:29" pos:end="89:40">stream_index</name></name></expr>]</index></name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:52">nb_frames</name><operator pos:start="89:53" pos:end="89:54">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><call pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:22">av_free_packet</name><argument_list pos:start="93:23" pos:end="93:29">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><operator pos:start="93:24" pos:end="93:24">&amp;</operator><name pos:start="93:25" pos:end="93:28">opkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="99:23"><if pos:start="97:9" pos:end="99:23">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:23"><block_content pos:start="99:13" pos:end="99:23">

            <return pos:start="99:13" pos:end="99:23">return <expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="103:1" pos:end="103:5"><name pos:start="103:1" pos:end="103:4">fail</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:25"><expr pos:start="105:5" pos:end="105:24"><call pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:19">av_packet_unref</name><argument_list pos:start="105:20" pos:end="105:24">(<argument pos:start="105:21" pos:end="105:23"><expr pos:start="105:21" pos:end="105:23"><name pos:start="105:21" pos:end="105:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:15">return <expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
