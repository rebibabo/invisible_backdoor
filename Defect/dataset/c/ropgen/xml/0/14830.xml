<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14830.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">pci_get_node_name</name><parameter_list pos:start="1:30" pos:end="1:70">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">nodename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:53"><decl pos:start="1:47" pos:end="1:53"><type pos:start="1:47" pos:end="1:53"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:53">len</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:64">PCIDevice</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">slot</name> <init pos:start="5:14" pos:end="5:35">= <expr pos:start="5:16" pos:end="5:35"><call pos:start="5:16" pos:end="5:35"><name pos:start="5:16" pos:end="5:23">PCI_SLOT</name><argument_list pos:start="5:24" pos:end="5:35">(<argument pos:start="5:25" pos:end="5:34"><expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:27">dev</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:34">devfn</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">func</name> <init pos:start="7:14" pos:end="7:35">= <expr pos:start="7:16" pos:end="7:35"><call pos:start="7:16" pos:end="7:35"><name pos:start="7:16" pos:end="7:23">PCI_FUNC</name><argument_list pos:start="7:24" pos:end="7:35">(<argument pos:start="7:25" pos:end="7:34"><expr pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:27">dev</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:34">devfn</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:69"><decl pos:start="9:5" pos:end="9:68"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">ccode</name> <init pos:start="9:20" pos:end="9:68">= <expr pos:start="9:22" pos:end="9:68"><call pos:start="9:22" pos:end="9:68"><name pos:start="9:22" pos:end="9:44">pci_default_read_config</name><argument_list pos:start="9:45" pos:end="9:68">(<argument pos:start="9:46" pos:end="9:48"><expr pos:start="9:46" pos:end="9:48"><name pos:start="9:46" pos:end="9:48">dev</name></expr></argument>, <argument pos:start="9:51" pos:end="9:64"><expr pos:start="9:51" pos:end="9:64"><name pos:start="9:51" pos:end="9:64">PCI_CLASS_PROG</name></expr></argument>, <argument pos:start="9:67" pos:end="9:67"><expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">name</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:46"><expr pos:start="15:5" pos:end="17:45"><name pos:start="15:5" pos:end="15:8">name</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="17:45"><name pos:start="15:12" pos:end="15:31">pci_find_device_name</name><argument_list pos:start="15:32" pos:end="17:45">(<argument pos:start="15:33" pos:end="15:52"><expr pos:start="15:33" pos:end="15:52"><operator pos:start="15:33" pos:end="15:33">(</operator><name pos:start="15:34" pos:end="15:38">ccode</name> <operator pos:start="15:40" pos:end="15:41">&gt;&gt;</operator> <literal type="number" pos:start="15:43" pos:end="15:44">16</literal><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:47">&amp;</operator> <literal type="number" pos:start="15:49" pos:end="15:52">0xff</literal></expr></argument>, <argument pos:start="15:55" pos:end="15:73"><expr pos:start="15:55" pos:end="15:73"><operator pos:start="15:55" pos:end="15:55">(</operator><name pos:start="15:56" pos:end="15:60">ccode</name> <operator pos:start="15:62" pos:end="15:63">&gt;&gt;</operator> <literal type="number" pos:start="15:65" pos:end="15:65">8</literal><operator pos:start="15:66" pos:end="15:66">)</operator> <operator pos:start="15:68" pos:end="15:68">&amp;</operator> <literal type="number" pos:start="15:70" pos:end="15:73">0xff</literal></expr></argument>,

                                <argument pos:start="17:33" pos:end="17:44"><expr pos:start="17:33" pos:end="17:44"><name pos:start="17:33" pos:end="17:37">ccode</name> <operator pos:start="17:39" pos:end="17:39">&amp;</operator> <literal type="number" pos:start="17:41" pos:end="17:44">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:12">func</name> <operator pos:start="21:14" pos:end="21:15">!=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>)</condition> <block pos:start="21:20" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:62">

        <expr_stmt pos:start="23:9" pos:end="23:62"><expr pos:start="23:9" pos:end="23:61"><call pos:start="23:9" pos:end="23:61"><name pos:start="23:9" pos:end="23:16">snprintf</name><argument_list pos:start="23:17" pos:end="23:61">(<argument pos:start="23:18" pos:end="23:25"><expr pos:start="23:18" pos:end="23:25"><name pos:start="23:18" pos:end="23:25">nodename</name></expr></argument>, <argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">len</name></expr></argument>, <argument pos:start="23:33" pos:end="23:42"><expr pos:start="23:33" pos:end="23:42"><literal type="string" pos:start="23:33" pos:end="23:42">"%s@%x,%x"</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:48">name</name></expr></argument>, <argument pos:start="23:51" pos:end="23:54"><expr pos:start="23:51" pos:end="23:54"><name pos:start="23:51" pos:end="23:54">slot</name></expr></argument>, <argument pos:start="23:57" pos:end="23:60"><expr pos:start="23:57" pos:end="23:60"><name pos:start="23:57" pos:end="23:60">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:53">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><call pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:16">snprintf</name><argument_list pos:start="27:17" pos:end="27:52">(<argument pos:start="27:18" pos:end="27:25"><expr pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:25">nodename</name></expr></argument>, <argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">len</name></expr></argument>, <argument pos:start="27:33" pos:end="27:39"><expr pos:start="27:33" pos:end="27:39"><literal type="string" pos:start="27:33" pos:end="27:39">"%s@%x"</literal></expr></argument>, <argument pos:start="27:42" pos:end="27:45"><expr pos:start="27:42" pos:end="27:45"><name pos:start="27:42" pos:end="27:45">name</name></expr></argument>, <argument pos:start="27:48" pos:end="27:51"><expr pos:start="27:48" pos:end="27:51"><name pos:start="27:48" pos:end="27:51">slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
