<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13960.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">test_source_flush_event_notifier</name><parameter_list pos:start="1:45" pos:end="1:50">(<parameter pos:start="1:46" pos:end="1:49"><decl pos:start="1:46" pos:end="1:49"><type pos:start="1:46" pos:end="1:49"><name pos:start="1:46" pos:end="1:49">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:36">

    <decl_stmt pos:start="5:5" pos:end="5:76"><decl pos:start="5:5" pos:end="5:75"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:25">EventNotifierTestData</name></type> <name pos:start="5:27" pos:end="5:30">data</name> <init pos:start="5:32" pos:end="5:75">= <expr pos:start="5:34" pos:end="5:75"><block pos:start="5:34" pos:end="5:75">{ <expr pos:start="5:36" pos:end="5:41"><operator pos:start="5:36" pos:end="5:36">.</operator><name pos:start="5:37" pos:end="5:37">n</name> <operator pos:start="5:39" pos:end="5:39">=</operator> <literal type="number" pos:start="5:41" pos:end="5:41">0</literal></expr>, <expr pos:start="5:44" pos:end="5:55"><operator pos:start="5:44" pos:end="5:44">.</operator><name pos:start="5:45" pos:end="5:50">active</name> <operator pos:start="5:52" pos:end="5:52">=</operator> <literal type="number" pos:start="5:54" pos:end="5:55">10</literal></expr>, <expr pos:start="5:58" pos:end="5:73"><operator pos:start="5:58" pos:end="5:58">.</operator><name pos:start="5:59" pos:end="5:66">auto_set</name> <operator pos:start="5:68" pos:end="5:68">=</operator> <name pos:start="5:70" pos:end="5:73">true</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:40"><expr pos:start="7:5" pos:end="7:39"><call pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:23">event_notifier_init</name><argument_list pos:start="7:24" pos:end="7:39">(<argument pos:start="7:25" pos:end="7:31"><expr pos:start="7:25" pos:end="7:31"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:31"><name pos:start="7:26" pos:end="7:29">data</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:31">e</name></name></expr></argument>, <argument pos:start="7:34" pos:end="7:38"><expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:57"><expr pos:start="9:5" pos:end="9:56"><call pos:start="9:5" pos:end="9:56"><name pos:start="9:5" pos:end="9:26">aio_set_event_notifier</name><argument_list pos:start="9:27" pos:end="9:56">(<argument pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:30">ctx</name></expr></argument>, <argument pos:start="9:33" pos:end="9:39"><expr pos:start="9:33" pos:end="9:39"><operator pos:start="9:33" pos:end="9:33">&amp;</operator><name pos:start="9:34" pos:end="9:39"><name pos:start="9:34" pos:end="9:37">data</name><operator pos:start="9:38" pos:end="9:38">.</operator><name pos:start="9:39" pos:end="9:39">e</name></name></expr></argument>, <argument pos:start="9:42" pos:end="9:55"><expr pos:start="9:42" pos:end="9:55"><name pos:start="9:42" pos:end="9:55">event_ready_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:52"><expr pos:start="11:5" pos:end="11:51"><call pos:start="11:5" pos:end="11:51"><name pos:start="11:5" pos:end="11:12">g_assert</name><argument_list pos:start="11:13" pos:end="11:51">(<argument pos:start="11:14" pos:end="11:50"><expr pos:start="11:14" pos:end="11:50"><call pos:start="11:14" pos:end="11:50"><name pos:start="11:14" pos:end="11:37">g_main_context_iteration</name><argument_list pos:start="11:38" pos:end="11:50">(<argument pos:start="11:39" pos:end="11:42"><expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">NULL</name></expr></argument>, <argument pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><name pos:start="11:45" pos:end="11:49">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><call pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:19">g_assert_cmpint</name><argument_list pos:start="13:20" pos:end="13:34">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:24">data</name><operator pos:start="13:25" pos:end="13:25">.</operator><name pos:start="13:26" pos:end="13:26">n</name></name></expr></argument>, <argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><operator pos:start="13:29" pos:end="13:30">==</operator></expr></argument>, <argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><call pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:19">g_assert_cmpint</name><argument_list pos:start="15:20" pos:end="15:40">(<argument pos:start="15:21" pos:end="15:31"><expr pos:start="15:21" pos:end="15:31"><name pos:start="15:21" pos:end="15:31"><name pos:start="15:21" pos:end="15:24">data</name><operator pos:start="15:25" pos:end="15:25">.</operator><name pos:start="15:26" pos:end="15:31">active</name></name></expr></argument>, <argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><operator pos:start="15:34" pos:end="15:35">==</operator></expr></argument>, <argument pos:start="15:38" pos:end="15:39"><expr pos:start="15:38" pos:end="15:39"><literal type="number" pos:start="15:38" pos:end="15:39">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:22">event_notifier_set</name><argument_list pos:start="19:23" pos:end="19:31">(<argument pos:start="19:24" pos:end="19:30"><expr pos:start="19:24" pos:end="19:30"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:28">data</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:30">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><call pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:51">(<argument pos:start="21:14" pos:end="21:50"><expr pos:start="21:14" pos:end="21:50"><call pos:start="21:14" pos:end="21:50"><name pos:start="21:14" pos:end="21:37">g_main_context_iteration</name><argument_list pos:start="21:38" pos:end="21:50">(<argument pos:start="21:39" pos:end="21:42"><expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">NULL</name></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:19">g_assert_cmpint</name><argument_list pos:start="23:20" pos:end="23:34">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:24">data</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:26">n</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><operator pos:start="23:29" pos:end="23:30">==</operator></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><call pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:19">g_assert_cmpint</name><argument_list pos:start="25:20" pos:end="25:39">(<argument pos:start="25:21" pos:end="25:31"><expr pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:24">data</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:31">active</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><operator pos:start="25:34" pos:end="25:35">==</operator></expr></argument>, <argument pos:start="25:38" pos:end="25:38"><expr pos:start="25:38" pos:end="25:38"><literal type="number" pos:start="25:38" pos:end="25:38">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><call pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:12">g_assert</name><argument_list pos:start="27:13" pos:end="27:51">(<argument pos:start="27:14" pos:end="27:50"><expr pos:start="27:14" pos:end="27:50"><call pos:start="27:14" pos:end="27:50"><name pos:start="27:14" pos:end="27:37">g_main_context_iteration</name><argument_list pos:start="27:38" pos:end="27:50">(<argument pos:start="27:39" pos:end="27:42"><expr pos:start="27:39" pos:end="27:42"><name pos:start="27:39" pos:end="27:42">NULL</name></expr></argument>, <argument pos:start="27:45" pos:end="27:49"><expr pos:start="27:45" pos:end="27:49"><name pos:start="27:45" pos:end="27:49">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="31:5" pos:end="31:50">while <condition pos:start="31:11" pos:end="31:49">(<expr pos:start="31:12" pos:end="31:48"><call pos:start="31:12" pos:end="31:48"><name pos:start="31:12" pos:end="31:35">g_main_context_iteration</name><argument_list pos:start="31:36" pos:end="31:48">(<argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">NULL</name></expr></argument>, <argument pos:start="31:43" pos:end="31:47"><expr pos:start="31:43" pos:end="31:47"><name pos:start="31:43" pos:end="31:47">false</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:50" pos:end="31:50"><block_content pos:start="31:50" pos:end="31:50"><empty_stmt pos:start="31:50" pos:end="31:50">;</empty_stmt></block_content></block></while>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:19">g_assert_cmpint</name><argument_list pos:start="33:20" pos:end="33:35">(<argument pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:24">data</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:26">n</name></name></expr></argument>, <argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><operator pos:start="33:29" pos:end="33:30">==</operator></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><literal type="number" pos:start="33:33" pos:end="33:34">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><call pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:39">(<argument pos:start="35:21" pos:end="35:31"><expr pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:24">data</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:31">active</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:35"><expr pos:start="35:34" pos:end="35:35"><operator pos:start="35:34" pos:end="35:35">==</operator></expr></argument>, <argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:12">g_assert</name><argument_list pos:start="37:13" pos:end="37:52">(<argument pos:start="37:14" pos:end="37:51"><expr pos:start="37:14" pos:end="37:51"><operator pos:start="37:14" pos:end="37:14">!</operator><call pos:start="37:15" pos:end="37:51"><name pos:start="37:15" pos:end="37:38">g_main_context_iteration</name><argument_list pos:start="37:39" pos:end="37:51">(<argument pos:start="37:40" pos:end="37:43"><expr pos:start="37:40" pos:end="37:43"><name pos:start="37:40" pos:end="37:43">NULL</name></expr></argument>, <argument pos:start="37:46" pos:end="37:50"><expr pos:start="37:46" pos:end="37:50"><name pos:start="37:46" pos:end="37:50">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:26">aio_set_event_notifier</name><argument_list pos:start="41:27" pos:end="41:46">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">ctx</name></expr></argument>, <argument pos:start="41:33" pos:end="41:39"><expr pos:start="41:33" pos:end="41:39"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:39"><name pos:start="41:34" pos:end="41:37">data</name><operator pos:start="41:38" pos:end="41:38">.</operator><name pos:start="41:39" pos:end="41:39">e</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="43:5" pos:end="43:50">while <condition pos:start="43:11" pos:end="43:49">(<expr pos:start="43:12" pos:end="43:48"><call pos:start="43:12" pos:end="43:48"><name pos:start="43:12" pos:end="43:35">g_main_context_iteration</name><argument_list pos:start="43:36" pos:end="43:48">(<argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">NULL</name></expr></argument>, <argument pos:start="43:43" pos:end="43:47"><expr pos:start="43:43" pos:end="43:47"><name pos:start="43:43" pos:end="43:47">false</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:50" pos:end="43:50"><block_content pos:start="43:50" pos:end="43:50"><empty_stmt pos:start="43:50" pos:end="43:50">;</empty_stmt></block_content></block></while>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:26">event_notifier_cleanup</name><argument_list pos:start="45:27" pos:end="45:35">(<argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:34"><name pos:start="45:29" pos:end="45:32">data</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:34">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
