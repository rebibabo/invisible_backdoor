<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2905.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:52">qcow_co_get_block_status</name><parameter_list pos:start="1:53" pos:end="3:54">(<parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:53"><decl pos:start="3:45" pos:end="3:53"><type pos:start="3:45" pos:end="3:53"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:70">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">index_in_cluster</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:27">cluster_offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:22">qemu_co_mutex_lock</name><argument_list pos:start="15:23" pos:end="15:32">(<argument pos:start="15:24" pos:end="15:31"><expr pos:start="15:24" pos:end="15:31"><operator pos:start="15:24" pos:end="15:24">&amp;</operator><name pos:start="15:25" pos:end="15:31"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:73"><expr pos:start="17:5" pos:end="17:72"><name pos:start="17:5" pos:end="17:18">cluster_offset</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:72"><name pos:start="17:22" pos:end="17:39">get_cluster_offset</name><argument_list pos:start="17:40" pos:end="17:72">(<argument pos:start="17:41" pos:end="17:42"><expr pos:start="17:41" pos:end="17:42"><name pos:start="17:41" pos:end="17:42">bs</name></expr></argument>, <argument pos:start="17:45" pos:end="17:59"><expr pos:start="17:45" pos:end="17:59"><name pos:start="17:45" pos:end="17:54">sector_num</name> <operator pos:start="17:56" pos:end="17:57">&lt;&lt;</operator> <literal type="number" pos:start="17:59" pos:end="17:59">9</literal></expr></argument>, <argument pos:start="17:62" pos:end="17:62"><expr pos:start="17:62" pos:end="17:62"><literal type="number" pos:start="17:62" pos:end="17:62">0</literal></expr></argument>, <argument pos:start="17:65" pos:end="17:65"><expr pos:start="17:65" pos:end="17:65"><literal type="number" pos:start="17:65" pos:end="17:65">0</literal></expr></argument>, <argument pos:start="17:68" pos:end="17:68"><expr pos:start="17:68" pos:end="17:68"><literal type="number" pos:start="17:68" pos:end="17:68">0</literal></expr></argument>, <argument pos:start="17:71" pos:end="17:71"><expr pos:start="17:71" pos:end="17:71"><literal type="number" pos:start="17:71" pos:end="17:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:24">qemu_co_mutex_unlock</name><argument_list pos:start="19:25" pos:end="19:34">(<argument pos:start="19:26" pos:end="19:33"><expr pos:start="19:26" pos:end="19:33"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:61"><expr pos:start="21:5" pos:end="21:60"><name pos:start="21:5" pos:end="21:20">index_in_cluster</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:33">sector_num</name> <operator pos:start="21:35" pos:end="21:35">&amp;</operator> <operator pos:start="21:37" pos:end="21:37">(</operator><name pos:start="21:38" pos:end="21:55"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:55">cluster_sectors</name></name> <operator pos:start="21:57" pos:end="21:57">-</operator> <literal type="number" pos:start="21:59" pos:end="21:59">1</literal><operator pos:start="21:60" pos:end="21:60">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:5">n</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:26">cluster_sectors</name></name> <operator pos:start="23:28" pos:end="23:28">-</operator> <name pos:start="23:30" pos:end="23:45">index_in_cluster</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:23"><if pos:start="25:5" pos:end="27:23">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:11">&gt;</operator> <name pos:start="25:13" pos:end="25:22">nb_sectors</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:23"><block_content pos:start="27:9" pos:end="27:23">

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">n</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:22">nb_sectors</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:14"><expr pos:start="29:5" pos:end="29:13"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:9">pnum</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:13">n</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:23">cluster_offset</name></expr>)</condition> <block pos:start="31:26" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:62">(<expr pos:start="37:9" pos:end="37:61"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:23">cluster_offset</name> <operator pos:start="37:25" pos:end="37:25">&amp;</operator> <name pos:start="37:27" pos:end="37:47">QCOW_OFLAG_COMPRESSED</name><operator pos:start="37:48" pos:end="37:48">)</operator> <operator pos:start="37:50" pos:end="37:51">||</operator> <name pos:start="37:53" pos:end="37:61"><name pos:start="37:53" pos:end="37:53">s</name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:61">cipher</name></name></expr>)</condition> <block pos:start="37:64" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:30">BDRV_BLOCK_DATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:61"><expr pos:start="43:5" pos:end="43:60"><name pos:start="43:5" pos:end="43:18">cluster_offset</name> <operator pos:start="43:20" pos:end="43:21">|=</operator> <operator pos:start="43:23" pos:end="43:23">(</operator><name pos:start="43:24" pos:end="43:39">index_in_cluster</name> <operator pos:start="43:41" pos:end="43:42">&lt;&lt;</operator> <name pos:start="43:44" pos:end="43:59">BDRV_SECTOR_BITS</name><operator pos:start="43:60" pos:end="43:60">)</operator></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:70">return <expr pos:start="45:12" pos:end="45:69"><name pos:start="45:12" pos:end="45:26">BDRV_BLOCK_DATA</name> <operator pos:start="45:28" pos:end="45:28">|</operator> <name pos:start="45:30" pos:end="45:52">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="45:54" pos:end="45:54">|</operator> <name pos:start="45:56" pos:end="45:69">cluster_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
