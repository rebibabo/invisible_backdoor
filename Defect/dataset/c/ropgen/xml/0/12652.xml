<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12652.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">list_cpus</name><parameter_list pos:start="1:15" pos:end="3:34">(<parameter pos:start="1:16" pos:end="1:22"><decl pos:start="1:16" pos:end="1:22"><type pos:start="1:16" pos:end="1:22"><name pos:start="1:16" pos:end="1:19">FILE</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:22">f</name></decl></parameter>, <parameter pos:start="1:25" pos:end="1:73"><function_decl pos:start="1:25" pos:end="1:73"><type pos:start="1:25" pos:end="1:27"><name pos:start="1:25" pos:end="1:27">int</name></type> (<modifier pos:start="1:30" pos:end="1:30">*</modifier><name pos:start="1:31" pos:end="1:41">cpu_fprintf</name>)<parameter_list pos:start="1:43" pos:end="1:73">(<parameter pos:start="1:44" pos:end="1:50"><decl pos:start="1:44" pos:end="1:50"><type pos:start="1:44" pos:end="1:50"><name pos:start="1:44" pos:end="1:47">FILE</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">f</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">fmt</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:72"><decl pos:start="1:70" pos:end="1:72"><type pos:start="1:70" pos:end="1:72"><modifier pos:start="1:70" pos:end="1:72">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:33"><decl pos:start="3:16" pos:end="3:33"><type pos:start="3:16" pos:end="3:33"><specifier pos:start="3:16" pos:end="3:20">const</specifier> <name pos:start="3:22" pos:end="3:25">char</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier></type><name pos:start="3:28" pos:end="3:33">optarg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="11:5" pos:end="18:0">

    <comment type="block" pos:start="7:5" pos:end="7:68">/* XXX: implement xxx_cpu_list for targets that still miss it */</comment>

<cpp:if pos:start="9:1" pos:end="9:24">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:24"><call pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:11">defined</name><argument_list pos:start="9:12" pos:end="9:24">(<argument pos:start="9:13" pos:end="9:23"><expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:23">cpu_list_id</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="11:5" pos:end="14:0"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:15">cpu_list_id</name><argument_list pos:start="11:16" pos:end="11:39">(<argument pos:start="11:17" pos:end="11:17"><expr pos:start="11:17" pos:end="11:17"><name pos:start="11:17" pos:end="11:17">f</name></expr></argument>, <argument pos:start="11:20" pos:end="11:30"><expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30">cpu_fprintf</name></expr></argument>, <argument pos:start="11:33" pos:end="11:38"><expr pos:start="11:33" pos:end="11:38"><name pos:start="11:33" pos:end="11:38">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="13:1" pos:end="13:23">#<cpp:directive pos:start="13:2" pos:end="13:5">elif</cpp:directive> <expr pos:start="13:7" pos:end="13:23"><call pos:start="13:7" pos:end="13:23"><name pos:start="13:7" pos:end="13:13">defined</name><argument_list pos:start="13:14" pos:end="13:23">(<argument pos:start="13:15" pos:end="13:22"><expr pos:start="13:15" pos:end="13:22"><name pos:start="13:15" pos:end="13:22">cpu_list</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:12">cpu_list</name><argument_list pos:start="15:13" pos:end="15:28">(<argument pos:start="15:14" pos:end="15:14"><expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">f</name></expr></argument>, <argument pos:start="15:17" pos:end="15:27"><expr pos:start="15:17" pos:end="15:27"><name pos:start="15:17" pos:end="15:27">cpu_fprintf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:31" pos:end="15:46">/* deprecated */</comment>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
