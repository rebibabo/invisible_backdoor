<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19503.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_jpegls_decode_picture</name><parameter_list pos:start="1:29" pos:end="1:91">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:60"><decl pos:start="1:53" pos:end="1:60"><type pos:start="1:53" pos:end="1:60"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:60">near</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:81"><decl pos:start="1:63" pos:end="1:81"><type pos:start="1:63" pos:end="1:81"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:81">point_transform</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:90"><decl pos:start="1:84" pos:end="1:90"><type pos:start="1:84" pos:end="1:90"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:90">ilv</name></decl></parameter>)</parameter_list><block pos:start="1:92" pos:end="223:1">{<block_content pos:start="3:5" pos:end="221:13">

    <decl_stmt pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:16"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">t</name> <init pos:start="3:14" pos:end="3:16">= <expr pos:start="3:16" pos:end="3:16"><literal type="number" pos:start="3:16" pos:end="3:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">zero</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">last</name></decl>, <decl pos:start="5:27" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:30">cur</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">JLSState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">off</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>, <decl pos:start="9:18" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:23">stride</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">1</literal></expr></init></decl>, <decl pos:start="9:30" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:34">width</name></decl>, <decl pos:start="9:37" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:41">shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:8">zero</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:45"><name pos:start="13:12" pos:end="13:21">av_mallocz</name><argument_list pos:start="13:22" pos:end="13:45">(<argument pos:start="13:23" pos:end="13:44"><expr pos:start="13:23" pos:end="13:44"><name pos:start="13:23" pos:end="13:44"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:32">picture</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:41">linesize</name><index pos:start="13:42" pos:end="13:44">[<expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:8">last</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:15">zero</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:7">cur</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:28"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:20">picture</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:25">data</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:9">state</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:22">av_mallocz</name><argument_list pos:start="21:23" pos:end="21:40">(<argument pos:start="21:24" pos:end="21:39"><expr pos:start="21:24" pos:end="21:39"><sizeof pos:start="21:24" pos:end="21:39">sizeof<argument_list pos:start="21:30" pos:end="21:39">(<argument pos:start="21:31" pos:end="21:38"><expr pos:start="21:31" pos:end="21:38"><name pos:start="21:31" pos:end="21:38">JLSState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:55">/* initialize JPEG-LS state from JPEG parameters */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:9">state</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">near</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:22">near</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:9">state</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:14">bpp</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <ternary pos:start="27:18" pos:end="27:44"><condition pos:start="27:18" pos:end="27:32"><expr pos:start="27:18" pos:end="27:30"><operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">bits</name></name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <literal type="number" pos:start="27:29" pos:end="27:29">2</literal><operator pos:start="27:30" pos:end="27:30">)</operator></expr> ?</condition><then pos:start="27:34" pos:end="27:34"> <expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">2</literal></expr> </then><else pos:start="27:36" pos:end="27:44">: <expr pos:start="27:38" pos:end="27:44"><name pos:start="27:38" pos:end="27:44"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:44">bits</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:9">state</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">maxval</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:29">maxval</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:9">state</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:13">T1</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">t1</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:9">state</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:13">T2</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:21">t2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:9">state</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:13">T3</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:21">t3</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:9">state</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">reset</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">reset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><call pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:37">ff_jpegls_reset_coding_parameters</name><argument_list pos:start="39:38" pos:end="39:47">(<argument pos:start="39:39" pos:end="39:43"><expr pos:start="39:39" pos:end="39:43"><name pos:start="39:39" pos:end="39:43">state</name></expr></argument>, <argument pos:start="39:46" pos:end="39:46"><expr pos:start="39:46" pos:end="39:46"><literal type="number" pos:start="39:46" pos:end="39:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><call pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:24">ff_jpegls_init_state</name><argument_list pos:start="41:25" pos:end="41:31">(<argument pos:start="41:26" pos:end="41:30"><expr pos:start="41:26" pos:end="41:30"><name pos:start="41:26" pos:end="41:30">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:49"><if pos:start="45:5" pos:end="47:48">if<condition pos:start="45:7" pos:end="45:20">(<expr pos:start="45:8" pos:end="45:19"><name pos:start="45:8" pos:end="45:14"><name pos:start="45:8" pos:end="45:8">s</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:14">bits</name></name> <operator pos:start="45:16" pos:end="45:17">&lt;=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">8</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:48"><block_content pos:start="47:9" pos:end="47:48">

        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:13">shift</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:31">point_transform</name> <operator pos:start="47:33" pos:end="47:33">+</operator> <operator pos:start="47:35" pos:end="47:35">(</operator><literal type="number" pos:start="47:36" pos:end="47:38">8</literal> <operator pos:start="47:38" pos:end="47:38">-</operator> <name pos:start="47:40" pos:end="47:46"><name pos:start="47:40" pos:end="47:40">s</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:46">bits</name></name><operator pos:start="47:47" pos:end="47:47">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="51:49">else<block type="pseudo" pos:start="51:9" pos:end="51:49"><block_content pos:start="51:9" pos:end="51:49">

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:13">shift</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:31">point_transform</name> <operator pos:start="51:33" pos:end="51:33">+</operator> <operator pos:start="51:35" pos:end="51:35">(</operator><literal type="number" pos:start="51:36" pos:end="51:39">16</literal> <operator pos:start="51:39" pos:end="51:39">-</operator> <name pos:start="51:41" pos:end="51:47"><name pos:start="51:41" pos:end="51:41">s</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:47">bits</name></name><operator pos:start="51:48" pos:end="51:48">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="69:5"><if pos:start="55:5" pos:end="69:5">if <condition pos:start="55:8" pos:end="55:45">(<expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">avctx</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">debug</name></name> <operator pos:start="55:25" pos:end="55:25">&amp;</operator> <name pos:start="55:27" pos:end="55:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="55:47" pos:end="69:5">{<block_content pos:start="57:9" pos:end="67:60">

        <expr_stmt pos:start="57:9" pos:end="63:71"><expr pos:start="57:9" pos:end="63:70"><call pos:start="57:9" pos:end="63:70"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="63:70">(<argument pos:start="57:16" pos:end="57:23"><expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">avctx</name></name></expr></argument>, <argument pos:start="57:26" pos:end="57:37"><expr pos:start="57:26" pos:end="57:37"><name pos:start="57:26" pos:end="57:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="57:40" pos:end="57:128"><expr pos:start="57:40" pos:end="57:128"><literal type="string" pos:start="57:40" pos:end="57:128">"JPEG-LS params: %ix%i NEAR=%i MV=%i T(%i,%i,%i) RESET=%i, LIMIT=%i, qbpp=%i, RANGE=%i\n"</literal></expr></argument>,

                <argument pos:start="59:17" pos:end="59:24"><expr pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">width</name></name></expr></argument>, <argument pos:start="59:27" pos:end="59:35"><expr pos:start="59:27" pos:end="59:35"><name pos:start="59:27" pos:end="59:35"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:35">height</name></name></expr></argument>, <argument pos:start="59:38" pos:end="59:48"><expr pos:start="59:38" pos:end="59:48"><name pos:start="59:38" pos:end="59:48"><name pos:start="59:38" pos:end="59:42">state</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:48">near</name></name></expr></argument>, <argument pos:start="59:51" pos:end="59:63"><expr pos:start="59:51" pos:end="59:63"><name pos:start="59:51" pos:end="59:63"><name pos:start="59:51" pos:end="59:55">state</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:63">maxval</name></name></expr></argument>,

                <argument pos:start="61:17" pos:end="61:25"><expr pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:21">state</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:25">T1</name></name></expr></argument>, <argument pos:start="61:28" pos:end="61:36"><expr pos:start="61:28" pos:end="61:36"><name pos:start="61:28" pos:end="61:36"><name pos:start="61:28" pos:end="61:32">state</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:36">T2</name></name></expr></argument>, <argument pos:start="61:39" pos:end="61:47"><expr pos:start="61:39" pos:end="61:47"><name pos:start="61:39" pos:end="61:47"><name pos:start="61:39" pos:end="61:43">state</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:47">T3</name></name></expr></argument>,

                <argument pos:start="63:17" pos:end="63:28"><expr pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:21">state</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:28">reset</name></name></expr></argument>, <argument pos:start="63:31" pos:end="63:42"><expr pos:start="63:31" pos:end="63:42"><name pos:start="63:31" pos:end="63:42"><name pos:start="63:31" pos:end="63:35">state</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:42">limit</name></name></expr></argument>, <argument pos:start="63:45" pos:end="63:55"><expr pos:start="63:45" pos:end="63:55"><name pos:start="63:45" pos:end="63:55"><name pos:start="63:45" pos:end="63:49">state</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:55">qbpp</name></name></expr></argument>, <argument pos:start="63:58" pos:end="63:69"><expr pos:start="63:58" pos:end="63:69"><name pos:start="63:58" pos:end="63:69"><name pos:start="63:58" pos:end="63:62">state</name><operator pos:start="63:63" pos:end="63:64">-&gt;</operator><name pos:start="63:65" pos:end="63:69">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:60"><expr pos:start="65:9" pos:end="67:59"><call pos:start="65:9" pos:end="67:59"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="67:59">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">avctx</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:37"><expr pos:start="65:26" pos:end="65:37"><name pos:start="65:26" pos:end="65:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:40" pos:end="65:86"><expr pos:start="65:40" pos:end="65:86"><literal type="string" pos:start="65:40" pos:end="65:86">"JPEG params: ILV=%i Pt=%i BPP=%i, scan = %i\n"</literal></expr></argument>,

                <argument pos:start="67:17" pos:end="67:19"><expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:19">ilv</name></expr></argument>, <argument pos:start="67:22" pos:end="67:36"><expr pos:start="67:22" pos:end="67:36"><name pos:start="67:22" pos:end="67:36">point_transform</name></expr></argument>, <argument pos:start="67:39" pos:end="67:45"><expr pos:start="67:39" pos:end="67:45"><name pos:start="67:39" pos:end="67:45"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:45">bits</name></name></expr></argument>, <argument pos:start="67:48" pos:end="67:58"><expr pos:start="67:48" pos:end="67:58"><name pos:start="67:48" pos:end="67:58"><name pos:start="67:48" pos:end="67:48">s</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:58">cur_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="161:5"><if pos:start="71:5" pos:end="113:5">if<condition pos:start="71:7" pos:end="71:16">(<expr pos:start="71:8" pos:end="71:15"><name pos:start="71:8" pos:end="71:10">ilv</name> <operator pos:start="71:12" pos:end="71:13">==</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal></expr>)</condition> <block pos:start="71:18" pos:end="113:5">{<block_content pos:start="73:9" pos:end="111:9"> <comment type="block" pos:start="71:20" pos:end="71:40">/* separate planes */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:14">stride</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <ternary pos:start="73:18" pos:end="73:47"><condition pos:start="73:18" pos:end="73:41"><expr pos:start="73:18" pos:end="73:39"><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:34"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:34">nb_components</name></name> <operator pos:start="73:36" pos:end="73:36">&gt;</operator> <literal type="number" pos:start="73:38" pos:end="73:38">1</literal><operator pos:start="73:39" pos:end="73:39">)</operator></expr> ?</condition><then pos:start="73:43" pos:end="73:43"> <expr pos:start="73:43" pos:end="73:43"><literal type="number" pos:start="73:43" pos:end="73:43">3</literal></expr> </then><else pos:start="73:45" pos:end="73:47">: <expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:11">off</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:49"><name pos:start="75:15" pos:end="75:21">av_clip</name><argument_list pos:start="75:22" pos:end="75:49">(<argument pos:start="75:23" pos:end="75:37"><expr pos:start="75:23" pos:end="75:37"><name pos:start="75:23" pos:end="75:33"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:33">cur_scan</name></name> <operator pos:start="75:35" pos:end="75:35">-</operator> <literal type="number" pos:start="75:37" pos:end="75:37">1</literal></expr></argument>, <argument pos:start="75:40" pos:end="75:40"><expr pos:start="75:40" pos:end="75:40"><literal type="number" pos:start="75:40" pos:end="75:40">0</literal></expr></argument>, <argument pos:start="75:43" pos:end="75:48"><expr pos:start="75:43" pos:end="75:48"><name pos:start="75:43" pos:end="75:48">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:13">width</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:24">width</name></name> <operator pos:start="77:26" pos:end="77:26">*</operator> <name pos:start="77:28" pos:end="77:33">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:19"><expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:11">cur</name> <operator pos:start="79:13" pos:end="79:14">+=</operator> <name pos:start="79:16" pos:end="79:18">off</name></expr>;</expr_stmt>

        <for pos:start="81:9" pos:end="111:9">for<control pos:start="81:12" pos:end="81:38">(<init pos:start="81:13" pos:end="81:18"><expr pos:start="81:13" pos:end="81:17"><name pos:start="81:13" pos:end="81:13">i</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <literal type="number" pos:start="81:17" pos:end="81:17">0</literal></expr>;</init> <condition pos:start="81:20" pos:end="81:33"><expr pos:start="81:20" pos:end="81:32"><name pos:start="81:20" pos:end="81:20">i</name> <operator pos:start="81:22" pos:end="81:22">&lt;</operator> <name pos:start="81:24" pos:end="81:32"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:32">height</name></name></expr>;</condition> <incr pos:start="81:35" pos:end="81:37"><expr pos:start="81:35" pos:end="81:37"><name pos:start="81:35" pos:end="81:35">i</name><operator pos:start="81:36" pos:end="81:37">++</operator></expr></incr>)</control> <block pos:start="81:40" pos:end="111:9">{<block_content pos:start="83:13" pos:end="109:13">

            <if_stmt pos:start="83:13" pos:end="95:13"><if pos:start="83:13" pos:end="89:13">if<condition pos:start="83:15" pos:end="83:28">(<expr pos:start="83:16" pos:end="83:27"><name pos:start="83:16" pos:end="83:22"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:22">bits</name></name> <operator pos:start="83:24" pos:end="83:25">&lt;=</operator> <literal type="number" pos:start="83:27" pos:end="83:27">8</literal></expr>)</condition><block pos:start="83:29" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:28">

                <expr_stmt pos:start="85:17" pos:end="85:79"><expr pos:start="85:17" pos:end="85:78"><call pos:start="85:17" pos:end="85:78"><name pos:start="85:17" pos:end="85:30">ls_decode_line</name><argument_list pos:start="85:31" pos:end="85:78">(<argument pos:start="85:32" pos:end="85:36"><expr pos:start="85:32" pos:end="85:36"><name pos:start="85:32" pos:end="85:36">state</name></expr></argument>, <argument pos:start="85:39" pos:end="85:39"><expr pos:start="85:39" pos:end="85:39"><name pos:start="85:39" pos:end="85:39">s</name></expr></argument>, <argument pos:start="85:42" pos:end="85:45"><expr pos:start="85:42" pos:end="85:45"><name pos:start="85:42" pos:end="85:45">last</name></expr></argument>, <argument pos:start="85:48" pos:end="85:50"><expr pos:start="85:48" pos:end="85:50"><name pos:start="85:48" pos:end="85:50">cur</name></expr></argument>, <argument pos:start="85:53" pos:end="85:53"><expr pos:start="85:53" pos:end="85:53"><name pos:start="85:53" pos:end="85:53">t</name></expr></argument>, <argument pos:start="85:56" pos:end="85:60"><expr pos:start="85:56" pos:end="85:60"><name pos:start="85:56" pos:end="85:60">width</name></expr></argument>, <argument pos:start="85:63" pos:end="85:68"><expr pos:start="85:63" pos:end="85:68"><name pos:start="85:63" pos:end="85:68">stride</name></expr></argument>, <argument pos:start="85:71" pos:end="85:73"><expr pos:start="85:71" pos:end="85:73"><name pos:start="85:71" pos:end="85:73">off</name></expr></argument>,  <argument pos:start="85:77" pos:end="85:77"><expr pos:start="85:77" pos:end="85:77"><literal type="number" pos:start="85:77" pos:end="85:77">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:28"><expr pos:start="87:17" pos:end="87:27"><name pos:start="87:17" pos:end="87:17">t</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:27"><name pos:start="87:21" pos:end="87:24">last</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="89:14" pos:end="95:13">else<block pos:start="89:18" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:39">

                <expr_stmt pos:start="91:17" pos:end="91:79"><expr pos:start="91:17" pos:end="91:78"><call pos:start="91:17" pos:end="91:78"><name pos:start="91:17" pos:end="91:30">ls_decode_line</name><argument_list pos:start="91:31" pos:end="91:78">(<argument pos:start="91:32" pos:end="91:36"><expr pos:start="91:32" pos:end="91:36"><name pos:start="91:32" pos:end="91:36">state</name></expr></argument>, <argument pos:start="91:39" pos:end="91:39"><expr pos:start="91:39" pos:end="91:39"><name pos:start="91:39" pos:end="91:39">s</name></expr></argument>, <argument pos:start="91:42" pos:end="91:45"><expr pos:start="91:42" pos:end="91:45"><name pos:start="91:42" pos:end="91:45">last</name></expr></argument>, <argument pos:start="91:48" pos:end="91:50"><expr pos:start="91:48" pos:end="91:50"><name pos:start="91:48" pos:end="91:50">cur</name></expr></argument>, <argument pos:start="91:53" pos:end="91:53"><expr pos:start="91:53" pos:end="91:53"><name pos:start="91:53" pos:end="91:53">t</name></expr></argument>, <argument pos:start="91:56" pos:end="91:60"><expr pos:start="91:56" pos:end="91:60"><name pos:start="91:56" pos:end="91:60">width</name></expr></argument>, <argument pos:start="91:63" pos:end="91:68"><expr pos:start="91:63" pos:end="91:68"><name pos:start="91:63" pos:end="91:68">stride</name></expr></argument>, <argument pos:start="91:71" pos:end="91:73"><expr pos:start="91:71" pos:end="91:73"><name pos:start="91:71" pos:end="91:73">off</name></expr></argument>, <argument pos:start="91:76" pos:end="91:77"><expr pos:start="91:76" pos:end="91:77"><literal type="number" pos:start="91:76" pos:end="91:77">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:39"><expr pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:17">t</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <operator pos:start="93:21" pos:end="93:21">*</operator><operator pos:start="93:22" pos:end="93:22">(</operator><operator pos:start="93:23" pos:end="93:23">(</operator><name pos:start="93:24" pos:end="93:31">uint16_t</name><operator pos:start="93:32" pos:end="93:32">*</operator><operator pos:start="93:33" pos:end="93:33">)</operator><name pos:start="93:34" pos:end="93:37">last</name><operator pos:start="93:38" pos:end="93:38">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:16">last</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:42"><expr pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:15">cur</name> <operator pos:start="99:17" pos:end="99:18">+=</operator> <name pos:start="99:20" pos:end="99:41"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:29">picture</name><operator pos:start="99:30" pos:end="99:30">.</operator><name pos:start="99:31" pos:end="99:38">linesize</name><index pos:start="99:39" pos:end="99:41">[<expr pos:start="99:40" pos:end="99:40"><literal type="number" pos:start="99:40" pos:end="99:40">0</literal></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="103:13" pos:end="109:13"><if pos:start="103:13" pos:end="109:13">if <condition pos:start="103:16" pos:end="103:59">(<expr pos:start="103:17" pos:end="103:58"><name pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:35">restart_interval</name></name> <operator pos:start="103:37" pos:end="103:38">&amp;&amp;</operator> <operator pos:start="103:40" pos:end="103:40">!</operator><operator pos:start="103:41" pos:end="103:42">--</operator><name pos:start="103:43" pos:end="103:58"><name pos:start="103:43" pos:end="103:43">s</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:58">restart_count</name></name></expr>)</condition> <block pos:start="103:61" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:38">

                <expr_stmt pos:start="105:17" pos:end="105:39"><expr pos:start="105:17" pos:end="105:38"><call pos:start="105:17" pos:end="105:38"><name pos:start="105:17" pos:end="105:30">align_get_bits</name><argument_list pos:start="105:31" pos:end="105:38">(<argument pos:start="105:32" pos:end="105:37"><expr pos:start="105:32" pos:end="105:37"><operator pos:start="105:32" pos:end="105:32">&amp;</operator><name pos:start="105:33" pos:end="105:37"><name pos:start="105:33" pos:end="105:33">s</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:38"><expr pos:start="107:17" pos:end="107:37"><call pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:25">skip_bits</name><argument_list pos:start="107:26" pos:end="107:37">(<argument pos:start="107:27" pos:end="107:32"><expr pos:start="107:27" pos:end="107:32"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:32"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:32">gb</name></name></expr></argument>, <argument pos:start="107:35" pos:end="107:36"><expr pos:start="107:35" pos:end="107:36"><literal type="number" pos:start="107:35" pos:end="107:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:40" pos:end="107:54">/* skip RSTn */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="151:5">else if<condition pos:start="113:14" pos:end="113:23">(<expr pos:start="113:15" pos:end="113:22"><name pos:start="113:15" pos:end="113:17">ilv</name> <operator pos:start="113:19" pos:end="113:20">==</operator> <literal type="number" pos:start="113:22" pos:end="113:22">1</literal></expr>)</condition> <block pos:start="113:25" pos:end="151:5">{<block_content pos:start="115:9" pos:end="149:9"> <comment type="block" pos:start="113:27" pos:end="113:49">/* line interleaving */</comment>

        <decl_stmt pos:start="115:9" pos:end="115:14"><decl pos:start="115:9" pos:end="115:13"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="117:9" pos:end="117:30"><decl pos:start="117:9" pos:end="117:29"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:17"><name pos:start="117:13" pos:end="117:14">Rc</name><index pos:start="117:15" pos:end="117:17">[<expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">3</literal></expr>]</index></name> <init pos:start="117:19" pos:end="117:29">= <expr pos:start="117:21" pos:end="117:29"><block pos:start="117:21" pos:end="117:29">{<expr pos:start="117:22" pos:end="117:22"><literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr>, <expr pos:start="117:25" pos:end="117:25"><literal type="number" pos:start="117:25" pos:end="117:25">0</literal></expr>, <expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:14">stride</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <ternary pos:start="119:18" pos:end="119:47"><condition pos:start="119:18" pos:end="119:41"><expr pos:start="119:18" pos:end="119:39"><operator pos:start="119:18" pos:end="119:18">(</operator><name pos:start="119:19" pos:end="119:34"><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:34">nb_components</name></name> <operator pos:start="119:36" pos:end="119:36">&gt;</operator> <literal type="number" pos:start="119:38" pos:end="119:38">1</literal><operator pos:start="119:39" pos:end="119:39">)</operator></expr> ?</condition><then pos:start="119:43" pos:end="119:43"> <expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">3</literal></expr> </then><else pos:start="119:45" pos:end="119:47">: <expr pos:start="119:47" pos:end="119:47"><literal type="number" pos:start="119:47" pos:end="119:47">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:14">memset</name><argument_list pos:start="121:15" pos:end="121:46">(<argument pos:start="121:16" pos:end="121:18"><expr pos:start="121:16" pos:end="121:18"><name pos:start="121:16" pos:end="121:18">cur</name></expr></argument>, <argument pos:start="121:21" pos:end="121:21"><expr pos:start="121:21" pos:end="121:21"><literal type="number" pos:start="121:21" pos:end="121:21">0</literal></expr></argument>, <argument pos:start="121:24" pos:end="121:45"><expr pos:start="121:24" pos:end="121:45"><name pos:start="121:24" pos:end="121:45"><name pos:start="121:24" pos:end="121:24">s</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:33">picture</name><operator pos:start="121:34" pos:end="121:34">.</operator><name pos:start="121:35" pos:end="121:42">linesize</name><index pos:start="121:43" pos:end="121:45">[<expr pos:start="121:44" pos:end="121:44"><literal type="number" pos:start="121:44" pos:end="121:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:34"><expr pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:13">width</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <name pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">width</name></name> <operator pos:start="123:26" pos:end="123:26">*</operator> <name pos:start="123:28" pos:end="123:33">stride</name></expr>;</expr_stmt>

        <for pos:start="125:9" pos:end="149:9">for<control pos:start="125:12" pos:end="125:38">(<init pos:start="125:13" pos:end="125:18"><expr pos:start="125:13" pos:end="125:17"><name pos:start="125:13" pos:end="125:13">i</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <literal type="number" pos:start="125:17" pos:end="125:17">0</literal></expr>;</init> <condition pos:start="125:20" pos:end="125:33"><expr pos:start="125:20" pos:end="125:32"><name pos:start="125:20" pos:end="125:20">i</name> <operator pos:start="125:22" pos:end="125:22">&lt;</operator> <name pos:start="125:24" pos:end="125:32"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:32">height</name></name></expr>;</condition> <incr pos:start="125:35" pos:end="125:37"><expr pos:start="125:35" pos:end="125:37"><name pos:start="125:35" pos:end="125:35">i</name><operator pos:start="125:36" pos:end="125:37">++</operator></expr></incr>)</control> <block pos:start="125:40" pos:end="149:9">{<block_content pos:start="127:13" pos:end="147:42">

            <for pos:start="127:13" pos:end="143:13">for<control pos:start="127:16" pos:end="127:39">(<init pos:start="127:17" pos:end="127:22"><expr pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:17">j</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr>;</init> <condition pos:start="127:24" pos:end="127:34"><expr pos:start="127:24" pos:end="127:33"><name pos:start="127:24" pos:end="127:24">j</name> <operator pos:start="127:26" pos:end="127:26">&lt;</operator> <name pos:start="127:28" pos:end="127:33">stride</name></expr>;</condition> <incr pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:36">j</name><operator pos:start="127:37" pos:end="127:38">++</operator></expr></incr>)</control> <block pos:start="127:41" pos:end="143:13">{<block_content pos:start="129:17" pos:end="141:17">

                <expr_stmt pos:start="129:17" pos:end="129:88"><expr pos:start="129:17" pos:end="129:87"><call pos:start="129:17" pos:end="129:87"><name pos:start="129:17" pos:end="129:30">ls_decode_line</name><argument_list pos:start="129:31" pos:end="129:87">(<argument pos:start="129:32" pos:end="129:36"><expr pos:start="129:32" pos:end="129:36"><name pos:start="129:32" pos:end="129:36">state</name></expr></argument>, <argument pos:start="129:39" pos:end="129:39"><expr pos:start="129:39" pos:end="129:39"><name pos:start="129:39" pos:end="129:39">s</name></expr></argument>, <argument pos:start="129:42" pos:end="129:49"><expr pos:start="129:42" pos:end="129:49"><name pos:start="129:42" pos:end="129:45">last</name> <operator pos:start="129:47" pos:end="129:47">+</operator> <name pos:start="129:49" pos:end="129:49">j</name></expr></argument>, <argument pos:start="129:52" pos:end="129:58"><expr pos:start="129:52" pos:end="129:58"><name pos:start="129:52" pos:end="129:54">cur</name> <operator pos:start="129:56" pos:end="129:56">+</operator> <name pos:start="129:58" pos:end="129:58">j</name></expr></argument>, <argument pos:start="129:61" pos:end="129:65"><expr pos:start="129:61" pos:end="129:65"><name pos:start="129:61" pos:end="129:65"><name pos:start="129:61" pos:end="129:62">Rc</name><index pos:start="129:63" pos:end="129:65">[<expr pos:start="129:64" pos:end="129:64"><name pos:start="129:64" pos:end="129:64">j</name></expr>]</index></name></expr></argument>, <argument pos:start="129:68" pos:end="129:72"><expr pos:start="129:68" pos:end="129:72"><name pos:start="129:68" pos:end="129:72">width</name></expr></argument>, <argument pos:start="129:75" pos:end="129:80"><expr pos:start="129:75" pos:end="129:80"><name pos:start="129:75" pos:end="129:80">stride</name></expr></argument>, <argument pos:start="129:83" pos:end="129:83"><expr pos:start="129:83" pos:end="129:83"><name pos:start="129:83" pos:end="129:83">j</name></expr></argument>, <argument pos:start="129:86" pos:end="129:86"><expr pos:start="129:86" pos:end="129:86"><literal type="number" pos:start="129:86" pos:end="129:86">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:32"><expr pos:start="131:17" pos:end="131:31"><name pos:start="131:17" pos:end="131:21"><name pos:start="131:17" pos:end="131:18">Rc</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">j</name></expr>]</index></name> <operator pos:start="131:23" pos:end="131:23">=</operator> <name pos:start="131:25" pos:end="131:31"><name pos:start="131:25" pos:end="131:28">last</name><index pos:start="131:29" pos:end="131:31">[<expr pos:start="131:30" pos:end="131:30"><name pos:start="131:30" pos:end="131:30">j</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="135:17" pos:end="141:17"><if pos:start="135:17" pos:end="141:17">if <condition pos:start="135:20" pos:end="135:63">(<expr pos:start="135:21" pos:end="135:62"><name pos:start="135:21" pos:end="135:39"><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:39">restart_interval</name></name> <operator pos:start="135:41" pos:end="135:42">&amp;&amp;</operator> <operator pos:start="135:44" pos:end="135:44">!</operator><operator pos:start="135:45" pos:end="135:46">--</operator><name pos:start="135:47" pos:end="135:62"><name pos:start="135:47" pos:end="135:47">s</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:62">restart_count</name></name></expr>)</condition> <block pos:start="135:65" pos:end="141:17">{<block_content pos:start="137:21" pos:end="139:42">

                    <expr_stmt pos:start="137:21" pos:end="137:43"><expr pos:start="137:21" pos:end="137:42"><call pos:start="137:21" pos:end="137:42"><name pos:start="137:21" pos:end="137:34">align_get_bits</name><argument_list pos:start="137:35" pos:end="137:42">(<argument pos:start="137:36" pos:end="137:41"><expr pos:start="137:36" pos:end="137:41"><operator pos:start="137:36" pos:end="137:36">&amp;</operator><name pos:start="137:37" pos:end="137:41"><name pos:start="137:37" pos:end="137:37">s</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:42"><expr pos:start="139:21" pos:end="139:41"><call pos:start="139:21" pos:end="139:41"><name pos:start="139:21" pos:end="139:29">skip_bits</name><argument_list pos:start="139:30" pos:end="139:41">(<argument pos:start="139:31" pos:end="139:36"><expr pos:start="139:31" pos:end="139:36"><operator pos:start="139:31" pos:end="139:31">&amp;</operator><name pos:start="139:32" pos:end="139:36"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:36">gb</name></name></expr></argument>, <argument pos:start="139:39" pos:end="139:40"><expr pos:start="139:39" pos:end="139:40"><literal type="number" pos:start="139:39" pos:end="139:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="139:44" pos:end="139:58">/* skip RSTn */</comment>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="145:13" pos:end="145:23"><expr pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:16">last</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:42"><expr pos:start="147:13" pos:end="147:41"><name pos:start="147:13" pos:end="147:15">cur</name> <operator pos:start="147:17" pos:end="147:18">+=</operator> <name pos:start="147:20" pos:end="147:41"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:29">picture</name><operator pos:start="147:30" pos:end="147:30">.</operator><name pos:start="147:31" pos:end="147:38">linesize</name><index pos:start="147:39" pos:end="147:41">[<expr pos:start="147:40" pos:end="147:40"><literal type="number" pos:start="147:40" pos:end="147:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="161:5">else if<condition pos:start="151:14" pos:end="151:23">(<expr pos:start="151:15" pos:end="151:22"><name pos:start="151:15" pos:end="151:17">ilv</name> <operator pos:start="151:19" pos:end="151:20">==</operator> <literal type="number" pos:start="151:22" pos:end="151:22">2</literal></expr>)</condition> <block pos:start="151:25" pos:end="161:5">{<block_content pos:start="153:9" pos:end="159:18"> <comment type="block" pos:start="151:27" pos:end="151:51">/* sample interleaving */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:89"><expr pos:start="153:9" pos:end="153:88"><call pos:start="153:9" pos:end="153:88"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="153:88">(<argument pos:start="153:16" pos:end="153:23"><expr pos:start="153:16" pos:end="153:23"><name pos:start="153:16" pos:end="153:23"><name pos:start="153:16" pos:end="153:16">s</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:23">avctx</name></name></expr></argument>, <argument pos:start="153:26" pos:end="153:37"><expr pos:start="153:26" pos:end="153:37"><name pos:start="153:26" pos:end="153:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:40" pos:end="153:87"><expr pos:start="153:40" pos:end="153:87"><literal type="string" pos:start="153:40" pos:end="153:87">"Sample interleaved images are not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:23"><expr pos:start="155:9" pos:end="155:22"><call pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:15">av_free</name><argument_list pos:start="155:16" pos:end="155:22">(<argument pos:start="155:17" pos:end="155:21"><expr pos:start="155:17" pos:end="155:21"><name pos:start="155:17" pos:end="155:21">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:22"><expr pos:start="157:9" pos:end="157:21"><call pos:start="157:9" pos:end="157:21"><name pos:start="157:9" pos:end="157:15">av_free</name><argument_list pos:start="157:16" pos:end="157:21">(<argument pos:start="157:17" pos:end="157:20"><expr pos:start="157:17" pos:end="157:20"><name pos:start="157:17" pos:end="157:20">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:18">return <expr pos:start="159:16" pos:end="159:17"><operator pos:start="159:16" pos:end="159:16">-</operator><literal type="number" pos:start="159:17" pos:end="159:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="213:5"><if pos:start="165:5" pos:end="213:5">if<condition pos:start="165:7" pos:end="165:13">(<expr pos:start="165:8" pos:end="165:12"><name pos:start="165:8" pos:end="165:12">shift</name></expr>)</condition><block pos:start="165:14" pos:end="213:5">{<block_content pos:start="167:9" pos:end="211:9"> <comment type="block" pos:start="165:16" pos:end="165:71">/* we need to do point transform or normalize samples */</comment>

        <decl_stmt pos:start="167:9" pos:end="167:17"><decl pos:start="167:9" pos:end="167:13"><type pos:start="167:9" pos:end="167:11"><name pos:start="167:9" pos:end="167:11">int</name></type> <name pos:start="167:13" pos:end="167:13">x</name></decl>, <decl pos:start="167:16" pos:end="167:16"><type ref="prev" pos:start="167:9" pos:end="167:11"/><name pos:start="167:16" pos:end="167:16">w</name></decl>;</decl_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:40"><expr pos:start="171:9" pos:end="171:39"><name pos:start="171:9" pos:end="171:9">w</name> <operator pos:start="171:11" pos:end="171:11">=</operator> <name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:20">width</name></name> <operator pos:start="171:22" pos:end="171:22">*</operator> <name pos:start="171:24" pos:end="171:39"><name pos:start="171:24" pos:end="171:24">s</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:39">nb_components</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="175:9" pos:end="211:9"><if pos:start="175:9" pos:end="193:9">if<condition pos:start="175:11" pos:end="175:24">(<expr pos:start="175:12" pos:end="175:23"><name pos:start="175:12" pos:end="175:18"><name pos:start="175:12" pos:end="175:12">s</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:18">bits</name></name> <operator pos:start="175:20" pos:end="175:21">&lt;=</operator> <literal type="number" pos:start="175:23" pos:end="175:23">8</literal></expr>)</condition><block pos:start="175:25" pos:end="193:9">{<block_content pos:start="177:13" pos:end="191:13">

            <decl_stmt pos:start="177:13" pos:end="177:46"><decl pos:start="177:13" pos:end="177:45"><type pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:19">uint8_t</name> <modifier pos:start="177:21" pos:end="177:21">*</modifier></type><name pos:start="177:22" pos:end="177:24">src</name> <init pos:start="177:26" pos:end="177:45">= <expr pos:start="177:28" pos:end="177:45"><name pos:start="177:28" pos:end="177:45"><name pos:start="177:28" pos:end="177:28">s</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:37">picture</name><operator pos:start="177:38" pos:end="177:38">.</operator><name pos:start="177:39" pos:end="177:42">data</name><index pos:start="177:43" pos:end="177:45">[<expr pos:start="177:44" pos:end="177:44"><literal type="number" pos:start="177:44" pos:end="177:44">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="181:13" pos:end="191:13">for<control pos:start="181:16" pos:end="181:42">(<init pos:start="181:17" pos:end="181:22"><expr pos:start="181:17" pos:end="181:21"><name pos:start="181:17" pos:end="181:17">i</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <literal type="number" pos:start="181:21" pos:end="181:21">0</literal></expr>;</init> <condition pos:start="181:24" pos:end="181:37"><expr pos:start="181:24" pos:end="181:36"><name pos:start="181:24" pos:end="181:24">i</name> <operator pos:start="181:26" pos:end="181:26">&lt;</operator> <name pos:start="181:28" pos:end="181:36"><name pos:start="181:28" pos:end="181:28">s</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:36">height</name></name></expr>;</condition> <incr pos:start="181:39" pos:end="181:41"><expr pos:start="181:39" pos:end="181:41"><name pos:start="181:39" pos:end="181:39">i</name><operator pos:start="181:40" pos:end="181:41">++</operator></expr></incr>)</control><block pos:start="181:43" pos:end="191:13">{<block_content pos:start="183:17" pos:end="189:46">

                <for pos:start="183:17" pos:end="187:17">for<control pos:start="183:20" pos:end="183:47">(<init pos:start="183:21" pos:end="183:28"><expr pos:start="183:21" pos:end="183:27"><name pos:start="183:21" pos:end="183:21">x</name> <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:27">off</name></expr>;</init> <condition pos:start="183:30" pos:end="183:35"><expr pos:start="183:30" pos:end="183:34"><name pos:start="183:30" pos:end="183:30">x</name> <operator pos:start="183:32" pos:end="183:32">&lt;</operator> <name pos:start="183:34" pos:end="183:34">w</name></expr>;</condition> <incr pos:start="183:37" pos:end="183:46"><expr pos:start="183:37" pos:end="183:46"><name pos:start="183:37" pos:end="183:37">x</name><operator pos:start="183:38" pos:end="183:39">+=</operator> <name pos:start="183:41" pos:end="183:46">stride</name></expr></incr>)</control><block pos:start="183:48" pos:end="187:17">{<block_content pos:start="185:21" pos:end="185:37">

                    <expr_stmt pos:start="185:21" pos:end="185:37"><expr pos:start="185:21" pos:end="185:36"><name pos:start="185:21" pos:end="185:26"><name pos:start="185:21" pos:end="185:23">src</name><index pos:start="185:24" pos:end="185:26">[<expr pos:start="185:25" pos:end="185:25"><name pos:start="185:25" pos:end="185:25">x</name></expr>]</index></name> <operator pos:start="185:28" pos:end="185:30">&lt;&lt;=</operator> <name pos:start="185:32" pos:end="185:36">shift</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="189:17" pos:end="189:46"><expr pos:start="189:17" pos:end="189:45"><name pos:start="189:17" pos:end="189:19">src</name> <operator pos:start="189:21" pos:end="189:22">+=</operator> <name pos:start="189:24" pos:end="189:45"><name pos:start="189:24" pos:end="189:24">s</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:33">picture</name><operator pos:start="189:34" pos:end="189:34">.</operator><name pos:start="189:35" pos:end="189:42">linesize</name><index pos:start="189:43" pos:end="189:45">[<expr pos:start="189:44" pos:end="189:44"><literal type="number" pos:start="189:44" pos:end="189:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="193:10" pos:end="211:9">else<block pos:start="193:14" pos:end="211:9">{<block_content pos:start="195:13" pos:end="209:13">

            <decl_stmt pos:start="195:13" pos:end="195:59"><decl pos:start="195:13" pos:end="195:58"><type pos:start="195:13" pos:end="195:22"><name pos:start="195:13" pos:end="195:20">uint16_t</name> <modifier pos:start="195:22" pos:end="195:22">*</modifier></type><name pos:start="195:23" pos:end="195:25">src</name> <init pos:start="195:27" pos:end="195:58">= <expr pos:start="195:29" pos:end="195:58"><operator pos:start="195:29" pos:end="195:29">(</operator><name pos:start="195:30" pos:end="195:37">uint16_t</name><operator pos:start="195:38" pos:end="195:38">*</operator><operator pos:start="195:39" pos:end="195:39">)</operator> <name pos:start="195:41" pos:end="195:58"><name pos:start="195:41" pos:end="195:41">s</name><operator pos:start="195:42" pos:end="195:43">-&gt;</operator><name pos:start="195:44" pos:end="195:50">picture</name><operator pos:start="195:51" pos:end="195:51">.</operator><name pos:start="195:52" pos:end="195:55">data</name><index pos:start="195:56" pos:end="195:58">[<expr pos:start="195:57" pos:end="195:57"><literal type="number" pos:start="195:57" pos:end="195:57">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="199:13" pos:end="209:13">for<control pos:start="199:16" pos:end="199:42">(<init pos:start="199:17" pos:end="199:22"><expr pos:start="199:17" pos:end="199:21"><name pos:start="199:17" pos:end="199:17">i</name> <operator pos:start="199:19" pos:end="199:19">=</operator> <literal type="number" pos:start="199:21" pos:end="199:21">0</literal></expr>;</init> <condition pos:start="199:24" pos:end="199:37"><expr pos:start="199:24" pos:end="199:36"><name pos:start="199:24" pos:end="199:24">i</name> <operator pos:start="199:26" pos:end="199:26">&lt;</operator> <name pos:start="199:28" pos:end="199:36"><name pos:start="199:28" pos:end="199:28">s</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:36">height</name></name></expr>;</condition> <incr pos:start="199:39" pos:end="199:41"><expr pos:start="199:39" pos:end="199:41"><name pos:start="199:39" pos:end="199:39">i</name><operator pos:start="199:40" pos:end="199:41">++</operator></expr></incr>)</control><block pos:start="199:43" pos:end="209:13">{<block_content pos:start="201:17" pos:end="207:48">

                <for pos:start="201:17" pos:end="205:17">for<control pos:start="201:20" pos:end="201:38">(<init pos:start="201:21" pos:end="201:26"><expr pos:start="201:21" pos:end="201:25"><name pos:start="201:21" pos:end="201:21">x</name> <operator pos:start="201:23" pos:end="201:23">=</operator> <literal type="number" pos:start="201:25" pos:end="201:25">0</literal></expr>;</init> <condition pos:start="201:28" pos:end="201:33"><expr pos:start="201:28" pos:end="201:32"><name pos:start="201:28" pos:end="201:28">x</name> <operator pos:start="201:30" pos:end="201:30">&lt;</operator> <name pos:start="201:32" pos:end="201:32">w</name></expr>;</condition> <incr pos:start="201:35" pos:end="201:37"><expr pos:start="201:35" pos:end="201:37"><name pos:start="201:35" pos:end="201:35">x</name><operator pos:start="201:36" pos:end="201:37">++</operator></expr></incr>)</control><block pos:start="201:39" pos:end="205:17">{<block_content pos:start="203:21" pos:end="203:37">

                    <expr_stmt pos:start="203:21" pos:end="203:37"><expr pos:start="203:21" pos:end="203:36"><name pos:start="203:21" pos:end="203:26"><name pos:start="203:21" pos:end="203:23">src</name><index pos:start="203:24" pos:end="203:26">[<expr pos:start="203:25" pos:end="203:25"><name pos:start="203:25" pos:end="203:25">x</name></expr>]</index></name> <operator pos:start="203:28" pos:end="203:30">&lt;&lt;=</operator> <name pos:start="203:32" pos:end="203:36">shift</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="207:17" pos:end="207:48"><expr pos:start="207:17" pos:end="207:47"><name pos:start="207:17" pos:end="207:19">src</name> <operator pos:start="207:21" pos:end="207:22">+=</operator> <name pos:start="207:24" pos:end="207:45"><name pos:start="207:24" pos:end="207:24">s</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:33">picture</name><operator pos:start="207:34" pos:end="207:34">.</operator><name pos:start="207:35" pos:end="207:42">linesize</name><index pos:start="207:43" pos:end="207:45">[<expr pos:start="207:44" pos:end="207:44"><literal type="number" pos:start="207:44" pos:end="207:44">0</literal></expr>]</index></name><operator pos:start="207:46" pos:end="207:46">/</operator><literal type="number" pos:start="207:47" pos:end="207:47">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:19"><expr pos:start="215:5" pos:end="215:18"><call pos:start="215:5" pos:end="215:18"><name pos:start="215:5" pos:end="215:11">av_free</name><argument_list pos:start="215:12" pos:end="215:18">(<argument pos:start="215:13" pos:end="215:17"><expr pos:start="215:13" pos:end="215:17"><name pos:start="215:13" pos:end="215:17">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:18"><expr pos:start="217:5" pos:end="217:17"><call pos:start="217:5" pos:end="217:17"><name pos:start="217:5" pos:end="217:11">av_free</name><argument_list pos:start="217:12" pos:end="217:17">(<argument pos:start="217:13" pos:end="217:16"><expr pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:16">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
