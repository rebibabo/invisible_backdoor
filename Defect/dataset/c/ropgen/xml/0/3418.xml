<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3418.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:48"><name pos:start="1:1" pos:end="1:21">yuv2mono_2_c_template</name><argument_list pos:start="1:22" pos:end="9:48">(<argument pos:start="1:23" pos:end="1:35">SwsContext *c</argument>, <argument pos:start="1:38" pos:end="1:58">const int16_t *buf[<literal type="number" pos:start="1:57" pos:end="1:57">2</literal>]</argument>,

                      <argument pos:start="3:23" pos:end="3:44">const int16_t *ubuf[<literal type="number" pos:start="3:43" pos:end="3:43">2</literal>]</argument>, <argument pos:start="3:47" pos:end="3:68">const int16_t *vbuf[<literal type="number" pos:start="3:67" pos:end="3:67">2</literal>]</argument>,

                      <argument pos:start="5:23" pos:end="5:44">const int16_t *abuf[<literal type="number" pos:start="5:43" pos:end="5:43">2</literal>]</argument>, <argument pos:start="5:47" pos:end="5:59">uint8_t *dest</argument>, <argument pos:start="5:62" pos:end="5:69">int dstW</argument>,

                      <argument pos:start="7:23" pos:end="7:32">int yalpha</argument>, <argument pos:start="7:35" pos:end="7:45">int uvalpha</argument>, <argument pos:start="7:48" pos:end="7:52">int y</argument>,

                      <argument pos:start="9:23" pos:end="9:47">enum AVPixelFormat target</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="115:1">{<block_content pos:start="13:5" pos:end="113:5">

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">buf0</name>  <init pos:start="13:26" pos:end="13:33">= <expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:30">buf</name><index pos:start="13:31" pos:end="13:33">[<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>]</index></name></expr></init></decl>,  <decl pos:start="13:37" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:41">buf1</name>  <init pos:start="13:44" pos:end="13:51">= <expr pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:48">buf</name><index pos:start="13:49" pos:end="13:51">[<expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:25"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier> <specifier pos:start="15:21" pos:end="15:25">const</specifier></type> <name pos:start="15:27" pos:end="15:30">d128</name> <init pos:start="15:32" pos:end="15:54">= <expr pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:47">dither_8x8_220</name><index pos:start="15:48" pos:end="15:54">[<expr pos:start="15:49" pos:end="15:53"><name pos:start="15:49" pos:end="15:49">y</name> <operator pos:start="15:51" pos:end="15:51">&amp;</operator> <literal type="number" pos:start="15:53" pos:end="15:53">7</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type>  <name pos:start="17:10" pos:end="17:16">yalpha1</name> <init pos:start="17:18" pos:end="17:32">= <expr pos:start="17:20" pos:end="17:32"><literal type="number" pos:start="17:20" pos:end="17:25">4096</literal> <operator pos:start="17:25" pos:end="17:25">-</operator> <name pos:start="17:27" pos:end="17:32">yalpha</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="113:5"><if pos:start="23:5" pos:end="67:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">flags</name></name> <operator pos:start="23:18" pos:end="23:18">&amp;</operator> <name pos:start="23:20" pos:end="23:38">SWS_ERROR_DIFFUSION</name></expr>)</condition> <block pos:start="23:41" pos:end="67:5">{<block_content pos:start="25:9" pos:end="65:36">

        <decl_stmt pos:start="25:9" pos:end="25:20"><decl pos:start="25:9" pos:end="25:19"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">err</name> <init pos:start="25:17" pos:end="25:19">= <expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:20"><decl pos:start="27:9" pos:end="27:19"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:15">acc</name> <init pos:start="27:17" pos:end="27:19">= <expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="29:9" pos:end="63:9">for <control pos:start="29:13" pos:end="29:36">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:29"><expr pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:28">dstW</name></expr>;</condition> <incr pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:31">i</name> <operator pos:start="29:33" pos:end="29:34">+=</operator><literal type="number" pos:start="29:35" pos:end="29:35">2</literal></expr></incr>)</control> <block pos:start="29:38" pos:end="63:9">{<block_content pos:start="31:13" pos:end="61:43">

            <decl_stmt pos:start="31:13" pos:end="31:18"><decl pos:start="31:13" pos:end="31:17"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">Y</name></decl>;</decl_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:69"><expr pos:start="35:13" pos:end="35:68"><name pos:start="35:13" pos:end="35:13">Y</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:21">buf0</name><index pos:start="35:22" pos:end="35:28">[<expr pos:start="35:23" pos:end="35:27"><name pos:start="35:23" pos:end="35:23">i</name> <operator pos:start="35:25" pos:end="35:25">+</operator> <literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:30">*</operator> <name pos:start="35:32" pos:end="35:38">yalpha1</name> <operator pos:start="35:40" pos:end="35:40">+</operator> <name pos:start="35:42" pos:end="35:52"><name pos:start="35:42" pos:end="35:45">buf1</name><index pos:start="35:46" pos:end="35:52">[<expr pos:start="35:47" pos:end="35:51"><name pos:start="35:47" pos:end="35:47">i</name> <operator pos:start="35:49" pos:end="35:49">+</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>]</index></name> <operator pos:start="35:54" pos:end="35:54">*</operator> <name pos:start="35:56" pos:end="35:61">yalpha</name><operator pos:start="35:62" pos:end="35:62">)</operator> <operator pos:start="35:64" pos:end="35:65">&gt;&gt;</operator> <literal type="number" pos:start="35:67" pos:end="35:68">19</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:120"><expr pos:start="37:13" pos:end="37:119"><name pos:start="37:13" pos:end="37:13">Y</name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <operator pos:start="37:18" pos:end="37:18">(</operator><literal type="number" pos:start="37:19" pos:end="37:19">7</literal><operator pos:start="37:20" pos:end="37:20">*</operator><name pos:start="37:21" pos:end="37:23">err</name> <operator pos:start="37:25" pos:end="37:25">+</operator> <literal type="number" pos:start="37:27" pos:end="37:27">1</literal><operator pos:start="37:28" pos:end="37:28">*</operator><name pos:start="37:29" pos:end="37:49"><name pos:start="37:29" pos:end="37:29">c</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:43">dither_error</name><index pos:start="37:44" pos:end="37:46">[<expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">0</literal></expr>]</index><index pos:start="37:47" pos:end="37:49">[<expr pos:start="37:48" pos:end="37:48"><name pos:start="37:48" pos:end="37:48">i</name></expr>]</index></name> <operator pos:start="37:51" pos:end="37:51">+</operator> <literal type="number" pos:start="37:53" pos:end="37:53">5</literal><operator pos:start="37:54" pos:end="37:54">*</operator><name pos:start="37:55" pos:end="37:77"><name pos:start="37:55" pos:end="37:55">c</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:69">dither_error</name><index pos:start="37:70" pos:end="37:72">[<expr pos:start="37:71" pos:end="37:71"><literal type="number" pos:start="37:71" pos:end="37:71">0</literal></expr>]</index><index pos:start="37:73" pos:end="37:77">[<expr pos:start="37:74" pos:end="37:76"><name pos:start="37:74" pos:end="37:74">i</name><operator pos:start="37:75" pos:end="37:75">+</operator><literal type="number" pos:start="37:76" pos:end="37:76">1</literal></expr>]</index></name> <operator pos:start="37:79" pos:end="37:79">+</operator> <literal type="number" pos:start="37:81" pos:end="37:81">3</literal><operator pos:start="37:82" pos:end="37:82">*</operator><name pos:start="37:83" pos:end="37:105"><name pos:start="37:83" pos:end="37:83">c</name><operator pos:start="37:84" pos:end="37:85">-&gt;</operator><name pos:start="37:86" pos:end="37:97">dither_error</name><index pos:start="37:98" pos:end="37:100">[<expr pos:start="37:99" pos:end="37:99"><literal type="number" pos:start="37:99" pos:end="37:99">0</literal></expr>]</index><index pos:start="37:101" pos:end="37:105">[<expr pos:start="37:102" pos:end="37:104"><name pos:start="37:102" pos:end="37:102">i</name><operator pos:start="37:103" pos:end="37:103">+</operator><literal type="number" pos:start="37:104" pos:end="37:104">2</literal></expr>]</index></name> <operator pos:start="37:107" pos:end="37:107">+</operator> <literal type="number" pos:start="37:109" pos:end="37:111">8</literal> <operator pos:start="37:111" pos:end="37:111">-</operator> <literal type="number" pos:start="37:113" pos:end="37:115">256</literal><operator pos:start="37:116" pos:end="37:116">)</operator><operator pos:start="37:117" pos:end="37:118">&gt;&gt;</operator><literal type="number" pos:start="37:119" pos:end="37:119">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:13">c</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:27">dither_error</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>]</index><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <name pos:start="39:37" pos:end="39:39">err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:15">acc</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <literal type="number" pos:start="41:19" pos:end="41:19">2</literal><operator pos:start="41:20" pos:end="41:20">*</operator><name pos:start="41:21" pos:end="41:23">acc</name> <operator pos:start="41:25" pos:end="41:25">+</operator> <operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:28">Y</name> <operator pos:start="41:30" pos:end="41:31">&gt;=</operator> <literal type="number" pos:start="41:33" pos:end="41:35">128</literal><operator pos:start="41:36" pos:end="41:36">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:13">Y</name> <operator pos:start="43:15" pos:end="43:16">-=</operator> <literal type="number" pos:start="43:18" pos:end="43:20">220</literal><operator pos:start="43:21" pos:end="43:21">*</operator><operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:25">acc</name><operator pos:start="43:26" pos:end="43:26">&amp;</operator><literal type="number" pos:start="43:27" pos:end="43:27">1</literal><operator pos:start="43:28" pos:end="43:28">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="47:13" pos:end="47:71"><expr pos:start="47:13" pos:end="47:70"><name pos:start="47:13" pos:end="47:15">err</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:23">buf0</name><index pos:start="47:24" pos:end="47:30">[<expr pos:start="47:25" pos:end="47:29"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">+</operator> <literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>]</index></name> <operator pos:start="47:32" pos:end="47:32">*</operator> <name pos:start="47:34" pos:end="47:40">yalpha1</name> <operator pos:start="47:42" pos:end="47:42">+</operator> <name pos:start="47:44" pos:end="47:54"><name pos:start="47:44" pos:end="47:47">buf1</name><index pos:start="47:48" pos:end="47:54">[<expr pos:start="47:49" pos:end="47:53"><name pos:start="47:49" pos:end="47:49">i</name> <operator pos:start="47:51" pos:end="47:51">+</operator> <literal type="number" pos:start="47:53" pos:end="47:53">1</literal></expr>]</index></name> <operator pos:start="47:56" pos:end="47:56">*</operator> <name pos:start="47:58" pos:end="47:63">yalpha</name><operator pos:start="47:64" pos:end="47:64">)</operator> <operator pos:start="47:66" pos:end="47:67">&gt;&gt;</operator> <literal type="number" pos:start="47:69" pos:end="47:70">19</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:122"><expr pos:start="49:13" pos:end="49:121"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:18">+=</operator> <operator pos:start="49:20" pos:end="49:20">(</operator><literal type="number" pos:start="49:21" pos:end="49:21">7</literal><operator pos:start="49:22" pos:end="49:22">*</operator><name pos:start="49:23" pos:end="49:23">Y</name> <operator pos:start="49:25" pos:end="49:25">+</operator> <literal type="number" pos:start="49:27" pos:end="49:27">1</literal><operator pos:start="49:28" pos:end="49:28">*</operator><name pos:start="49:29" pos:end="49:51"><name pos:start="49:29" pos:end="49:29">c</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:43">dither_error</name><index pos:start="49:44" pos:end="49:46">[<expr pos:start="49:45" pos:end="49:45"><literal type="number" pos:start="49:45" pos:end="49:45">0</literal></expr>]</index><index pos:start="49:47" pos:end="49:51">[<expr pos:start="49:48" pos:end="49:50"><name pos:start="49:48" pos:end="49:48">i</name><operator pos:start="49:49" pos:end="49:49">+</operator><literal type="number" pos:start="49:50" pos:end="49:50">1</literal></expr>]</index></name> <operator pos:start="49:53" pos:end="49:53">+</operator> <literal type="number" pos:start="49:55" pos:end="49:55">5</literal><operator pos:start="49:56" pos:end="49:56">*</operator><name pos:start="49:57" pos:end="49:79"><name pos:start="49:57" pos:end="49:57">c</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:71">dither_error</name><index pos:start="49:72" pos:end="49:74">[<expr pos:start="49:73" pos:end="49:73"><literal type="number" pos:start="49:73" pos:end="49:73">0</literal></expr>]</index><index pos:start="49:75" pos:end="49:79">[<expr pos:start="49:76" pos:end="49:78"><name pos:start="49:76" pos:end="49:76">i</name><operator pos:start="49:77" pos:end="49:77">+</operator><literal type="number" pos:start="49:78" pos:end="49:78">2</literal></expr>]</index></name> <operator pos:start="49:81" pos:end="49:81">+</operator> <literal type="number" pos:start="49:83" pos:end="49:83">3</literal><operator pos:start="49:84" pos:end="49:84">*</operator><name pos:start="49:85" pos:end="49:107"><name pos:start="49:85" pos:end="49:85">c</name><operator pos:start="49:86" pos:end="49:87">-&gt;</operator><name pos:start="49:88" pos:end="49:99">dither_error</name><index pos:start="49:100" pos:end="49:102">[<expr pos:start="49:101" pos:end="49:101"><literal type="number" pos:start="49:101" pos:end="49:101">0</literal></expr>]</index><index pos:start="49:103" pos:end="49:107">[<expr pos:start="49:104" pos:end="49:106"><name pos:start="49:104" pos:end="49:104">i</name><operator pos:start="49:105" pos:end="49:105">+</operator><literal type="number" pos:start="49:106" pos:end="49:106">3</literal></expr>]</index></name> <operator pos:start="49:109" pos:end="49:109">+</operator> <literal type="number" pos:start="49:111" pos:end="49:113">8</literal> <operator pos:start="49:113" pos:end="49:113">-</operator> <literal type="number" pos:start="49:115" pos:end="49:117">256</literal><operator pos:start="49:118" pos:end="49:118">)</operator><operator pos:start="49:119" pos:end="49:120">&gt;&gt;</operator><literal type="number" pos:start="49:121" pos:end="49:121">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:13">c</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:27">dither_error</name><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr>]</index><index pos:start="51:31" pos:end="51:35">[<expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:32">i</name><operator pos:start="51:33" pos:end="51:33">+</operator><literal type="number" pos:start="51:34" pos:end="51:34">1</literal></expr>]</index></name> <operator pos:start="51:37" pos:end="51:37">=</operator> <name pos:start="51:39" pos:end="51:39">Y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:15">acc</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">2</literal><operator pos:start="53:20" pos:end="53:20">*</operator><name pos:start="53:21" pos:end="53:23">acc</name> <operator pos:start="53:25" pos:end="53:25">+</operator> <operator pos:start="53:27" pos:end="53:27">(</operator><name pos:start="53:28" pos:end="53:30">err</name> <operator pos:start="53:32" pos:end="53:33">&gt;=</operator> <literal type="number" pos:start="53:35" pos:end="53:37">128</literal><operator pos:start="53:38" pos:end="53:38">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:15">err</name> <operator pos:start="55:17" pos:end="55:18">-=</operator> <literal type="number" pos:start="55:20" pos:end="55:22">220</literal><operator pos:start="55:23" pos:end="55:23">*</operator><operator pos:start="55:24" pos:end="55:24">(</operator><name pos:start="55:25" pos:end="55:27">acc</name><operator pos:start="55:28" pos:end="55:28">&amp;</operator><literal type="number" pos:start="55:29" pos:end="55:29">1</literal><operator pos:start="55:30" pos:end="55:30">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="59:13" pos:end="61:43"><if pos:start="59:13" pos:end="61:43">if <condition pos:start="59:16" pos:end="59:29">(<expr pos:start="59:17" pos:end="59:28"><operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:18">i</name> <operator pos:start="59:20" pos:end="59:20">&amp;</operator> <literal type="number" pos:start="59:22" pos:end="59:22">7</literal><operator pos:start="59:23" pos:end="59:23">)</operator> <operator pos:start="59:25" pos:end="59:26">==</operator> <literal type="number" pos:start="59:28" pos:end="59:28">6</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:43"><block_content pos:start="61:17" pos:end="61:43">

                <expr_stmt pos:start="61:17" pos:end="61:43"><expr pos:start="61:17" pos:end="61:42"><call pos:start="61:17" pos:end="61:42"><name pos:start="61:17" pos:end="61:28">output_pixel</name><argument_list pos:start="61:29" pos:end="61:42">(<argument pos:start="61:30" pos:end="61:36"><expr pos:start="61:30" pos:end="61:36"><operator pos:start="61:30" pos:end="61:30">*</operator><name pos:start="61:31" pos:end="61:34">dest</name><operator pos:start="61:35" pos:end="61:36">++</operator></expr></argument>, <argument pos:start="61:39" pos:end="61:41"><expr pos:start="61:39" pos:end="61:41"><name pos:start="61:39" pos:end="61:41">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="65:9" pos:end="65:36"><expr pos:start="65:9" pos:end="65:35"><name pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:9">c</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:23">dither_error</name><index pos:start="65:24" pos:end="65:26">[<expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>]</index><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">i</name></expr>]</index></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:35">err</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="113:5">else <block pos:start="67:12" pos:end="113:5">{<block_content pos:start="69:5" pos:end="111:5">

    <for pos:start="69:5" pos:end="111:5">for <control pos:start="69:9" pos:end="69:33">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:25"><expr pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:24">dstW</name></expr>;</condition> <incr pos:start="69:27" pos:end="69:32"><expr pos:start="69:27" pos:end="69:32"><name pos:start="69:27" pos:end="69:27">i</name> <operator pos:start="69:29" pos:end="69:30">+=</operator> <literal type="number" pos:start="69:32" pos:end="69:32">8</literal></expr></incr>)</control> <block pos:start="69:35" pos:end="111:5">{<block_content pos:start="71:9" pos:end="109:35">

        <decl_stmt pos:start="71:9" pos:end="71:23"><decl pos:start="71:9" pos:end="71:13"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:13">Y</name></decl>, <decl pos:start="71:16" pos:end="71:22"><type ref="prev" pos:start="71:9" pos:end="71:11"/><name pos:start="71:16" pos:end="71:18">acc</name> <init pos:start="71:20" pos:end="71:22">= <expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:65"><expr pos:start="75:9" pos:end="75:64"><name pos:start="75:9" pos:end="75:9">Y</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <operator pos:start="75:13" pos:end="75:13">(</operator><name pos:start="75:14" pos:end="75:24"><name pos:start="75:14" pos:end="75:17">buf0</name><index pos:start="75:18" pos:end="75:24">[<expr pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:19">i</name> <operator pos:start="75:21" pos:end="75:21">+</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>]</index></name> <operator pos:start="75:26" pos:end="75:26">*</operator> <name pos:start="75:28" pos:end="75:34">yalpha1</name> <operator pos:start="75:36" pos:end="75:36">+</operator> <name pos:start="75:38" pos:end="75:48"><name pos:start="75:38" pos:end="75:41">buf1</name><index pos:start="75:42" pos:end="75:48">[<expr pos:start="75:43" pos:end="75:47"><name pos:start="75:43" pos:end="75:43">i</name> <operator pos:start="75:45" pos:end="75:45">+</operator> <literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr>]</index></name> <operator pos:start="75:50" pos:end="75:50">*</operator> <name pos:start="75:52" pos:end="75:57">yalpha</name><operator pos:start="75:58" pos:end="75:58">)</operator> <operator pos:start="75:60" pos:end="75:61">&gt;&gt;</operator> <literal type="number" pos:start="75:63" pos:end="75:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><call pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:22">accumulate_bit</name><argument_list pos:start="77:23" pos:end="77:40">(<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">acc</name></expr></argument>, <argument pos:start="77:29" pos:end="77:39"><expr pos:start="77:29" pos:end="77:39"><name pos:start="77:29" pos:end="77:29">Y</name> <operator pos:start="77:31" pos:end="77:31">+</operator> <name pos:start="77:33" pos:end="77:39"><name pos:start="77:33" pos:end="77:36">d128</name><index pos:start="77:37" pos:end="77:39">[<expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:65"><expr pos:start="79:9" pos:end="79:64"><name pos:start="79:9" pos:end="79:9">Y</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:24"><name pos:start="79:14" pos:end="79:17">buf0</name><index pos:start="79:18" pos:end="79:24">[<expr pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:19">i</name> <operator pos:start="79:21" pos:end="79:21">+</operator> <literal type="number" pos:start="79:23" pos:end="79:23">1</literal></expr>]</index></name> <operator pos:start="79:26" pos:end="79:26">*</operator> <name pos:start="79:28" pos:end="79:34">yalpha1</name> <operator pos:start="79:36" pos:end="79:36">+</operator> <name pos:start="79:38" pos:end="79:48"><name pos:start="79:38" pos:end="79:41">buf1</name><index pos:start="79:42" pos:end="79:48">[<expr pos:start="79:43" pos:end="79:47"><name pos:start="79:43" pos:end="79:43">i</name> <operator pos:start="79:45" pos:end="79:45">+</operator> <literal type="number" pos:start="79:47" pos:end="79:47">1</literal></expr>]</index></name> <operator pos:start="79:50" pos:end="79:50">*</operator> <name pos:start="79:52" pos:end="79:57">yalpha</name><operator pos:start="79:58" pos:end="79:58">)</operator> <operator pos:start="79:60" pos:end="79:61">&gt;&gt;</operator> <literal type="number" pos:start="79:63" pos:end="79:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><call pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:22">accumulate_bit</name><argument_list pos:start="81:23" pos:end="81:40">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">acc</name></expr></argument>, <argument pos:start="81:29" pos:end="81:39"><expr pos:start="81:29" pos:end="81:39"><name pos:start="81:29" pos:end="81:29">Y</name> <operator pos:start="81:31" pos:end="81:31">+</operator> <name pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:36">d128</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:65"><expr pos:start="83:9" pos:end="83:64"><name pos:start="83:9" pos:end="83:9">Y</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <operator pos:start="83:13" pos:end="83:13">(</operator><name pos:start="83:14" pos:end="83:24"><name pos:start="83:14" pos:end="83:17">buf0</name><index pos:start="83:18" pos:end="83:24">[<expr pos:start="83:19" pos:end="83:23"><name pos:start="83:19" pos:end="83:19">i</name> <operator pos:start="83:21" pos:end="83:21">+</operator> <literal type="number" pos:start="83:23" pos:end="83:23">2</literal></expr>]</index></name> <operator pos:start="83:26" pos:end="83:26">*</operator> <name pos:start="83:28" pos:end="83:34">yalpha1</name> <operator pos:start="83:36" pos:end="83:36">+</operator> <name pos:start="83:38" pos:end="83:48"><name pos:start="83:38" pos:end="83:41">buf1</name><index pos:start="83:42" pos:end="83:48">[<expr pos:start="83:43" pos:end="83:47"><name pos:start="83:43" pos:end="83:43">i</name> <operator pos:start="83:45" pos:end="83:45">+</operator> <literal type="number" pos:start="83:47" pos:end="83:47">2</literal></expr>]</index></name> <operator pos:start="83:50" pos:end="83:50">*</operator> <name pos:start="83:52" pos:end="83:57">yalpha</name><operator pos:start="83:58" pos:end="83:58">)</operator> <operator pos:start="83:60" pos:end="83:61">&gt;&gt;</operator> <literal type="number" pos:start="83:63" pos:end="83:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:41"><expr pos:start="85:9" pos:end="85:40"><call pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:22">accumulate_bit</name><argument_list pos:start="85:23" pos:end="85:40">(<argument pos:start="85:24" pos:end="85:26"><expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">acc</name></expr></argument>, <argument pos:start="85:29" pos:end="85:39"><expr pos:start="85:29" pos:end="85:39"><name pos:start="85:29" pos:end="85:29">Y</name> <operator pos:start="85:31" pos:end="85:31">+</operator> <name pos:start="85:33" pos:end="85:39"><name pos:start="85:33" pos:end="85:36">d128</name><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><literal type="number" pos:start="85:38" pos:end="85:38">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:65"><expr pos:start="87:9" pos:end="87:64"><name pos:start="87:9" pos:end="87:9">Y</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <operator pos:start="87:13" pos:end="87:13">(</operator><name pos:start="87:14" pos:end="87:24"><name pos:start="87:14" pos:end="87:17">buf0</name><index pos:start="87:18" pos:end="87:24">[<expr pos:start="87:19" pos:end="87:23"><name pos:start="87:19" pos:end="87:19">i</name> <operator pos:start="87:21" pos:end="87:21">+</operator> <literal type="number" pos:start="87:23" pos:end="87:23">3</literal></expr>]</index></name> <operator pos:start="87:26" pos:end="87:26">*</operator> <name pos:start="87:28" pos:end="87:34">yalpha1</name> <operator pos:start="87:36" pos:end="87:36">+</operator> <name pos:start="87:38" pos:end="87:48"><name pos:start="87:38" pos:end="87:41">buf1</name><index pos:start="87:42" pos:end="87:48">[<expr pos:start="87:43" pos:end="87:47"><name pos:start="87:43" pos:end="87:43">i</name> <operator pos:start="87:45" pos:end="87:45">+</operator> <literal type="number" pos:start="87:47" pos:end="87:47">3</literal></expr>]</index></name> <operator pos:start="87:50" pos:end="87:50">*</operator> <name pos:start="87:52" pos:end="87:57">yalpha</name><operator pos:start="87:58" pos:end="87:58">)</operator> <operator pos:start="87:60" pos:end="87:61">&gt;&gt;</operator> <literal type="number" pos:start="87:63" pos:end="87:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><call pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:22">accumulate_bit</name><argument_list pos:start="89:23" pos:end="89:40">(<argument pos:start="89:24" pos:end="89:26"><expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:26">acc</name></expr></argument>, <argument pos:start="89:29" pos:end="89:39"><expr pos:start="89:29" pos:end="89:39"><name pos:start="89:29" pos:end="89:29">Y</name> <operator pos:start="89:31" pos:end="89:31">+</operator> <name pos:start="89:33" pos:end="89:39"><name pos:start="89:33" pos:end="89:36">d128</name><index pos:start="89:37" pos:end="89:39">[<expr pos:start="89:38" pos:end="89:38"><literal type="number" pos:start="89:38" pos:end="89:38">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:65"><expr pos:start="91:9" pos:end="91:64"><name pos:start="91:9" pos:end="91:9">Y</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <operator pos:start="91:13" pos:end="91:13">(</operator><name pos:start="91:14" pos:end="91:24"><name pos:start="91:14" pos:end="91:17">buf0</name><index pos:start="91:18" pos:end="91:24">[<expr pos:start="91:19" pos:end="91:23"><name pos:start="91:19" pos:end="91:19">i</name> <operator pos:start="91:21" pos:end="91:21">+</operator> <literal type="number" pos:start="91:23" pos:end="91:23">4</literal></expr>]</index></name> <operator pos:start="91:26" pos:end="91:26">*</operator> <name pos:start="91:28" pos:end="91:34">yalpha1</name> <operator pos:start="91:36" pos:end="91:36">+</operator> <name pos:start="91:38" pos:end="91:48"><name pos:start="91:38" pos:end="91:41">buf1</name><index pos:start="91:42" pos:end="91:48">[<expr pos:start="91:43" pos:end="91:47"><name pos:start="91:43" pos:end="91:43">i</name> <operator pos:start="91:45" pos:end="91:45">+</operator> <literal type="number" pos:start="91:47" pos:end="91:47">4</literal></expr>]</index></name> <operator pos:start="91:50" pos:end="91:50">*</operator> <name pos:start="91:52" pos:end="91:57">yalpha</name><operator pos:start="91:58" pos:end="91:58">)</operator> <operator pos:start="91:60" pos:end="91:61">&gt;&gt;</operator> <literal type="number" pos:start="91:63" pos:end="91:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><call pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:22">accumulate_bit</name><argument_list pos:start="93:23" pos:end="93:40">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">acc</name></expr></argument>, <argument pos:start="93:29" pos:end="93:39"><expr pos:start="93:29" pos:end="93:39"><name pos:start="93:29" pos:end="93:29">Y</name> <operator pos:start="93:31" pos:end="93:31">+</operator> <name pos:start="93:33" pos:end="93:39"><name pos:start="93:33" pos:end="93:36">d128</name><index pos:start="93:37" pos:end="93:39">[<expr pos:start="93:38" pos:end="93:38"><literal type="number" pos:start="93:38" pos:end="93:38">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:65"><expr pos:start="95:9" pos:end="95:64"><name pos:start="95:9" pos:end="95:9">Y</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:24"><name pos:start="95:14" pos:end="95:17">buf0</name><index pos:start="95:18" pos:end="95:24">[<expr pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:19">i</name> <operator pos:start="95:21" pos:end="95:21">+</operator> <literal type="number" pos:start="95:23" pos:end="95:23">5</literal></expr>]</index></name> <operator pos:start="95:26" pos:end="95:26">*</operator> <name pos:start="95:28" pos:end="95:34">yalpha1</name> <operator pos:start="95:36" pos:end="95:36">+</operator> <name pos:start="95:38" pos:end="95:48"><name pos:start="95:38" pos:end="95:41">buf1</name><index pos:start="95:42" pos:end="95:48">[<expr pos:start="95:43" pos:end="95:47"><name pos:start="95:43" pos:end="95:43">i</name> <operator pos:start="95:45" pos:end="95:45">+</operator> <literal type="number" pos:start="95:47" pos:end="95:47">5</literal></expr>]</index></name> <operator pos:start="95:50" pos:end="95:50">*</operator> <name pos:start="95:52" pos:end="95:57">yalpha</name><operator pos:start="95:58" pos:end="95:58">)</operator> <operator pos:start="95:60" pos:end="95:61">&gt;&gt;</operator> <literal type="number" pos:start="95:63" pos:end="95:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:41"><expr pos:start="97:9" pos:end="97:40"><call pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:22">accumulate_bit</name><argument_list pos:start="97:23" pos:end="97:40">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">acc</name></expr></argument>, <argument pos:start="97:29" pos:end="97:39"><expr pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:29">Y</name> <operator pos:start="97:31" pos:end="97:31">+</operator> <name pos:start="97:33" pos:end="97:39"><name pos:start="97:33" pos:end="97:36">d128</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><literal type="number" pos:start="97:38" pos:end="97:38">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:65"><expr pos:start="99:9" pos:end="99:64"><name pos:start="99:9" pos:end="99:9">Y</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:24"><name pos:start="99:14" pos:end="99:17">buf0</name><index pos:start="99:18" pos:end="99:24">[<expr pos:start="99:19" pos:end="99:23"><name pos:start="99:19" pos:end="99:19">i</name> <operator pos:start="99:21" pos:end="99:21">+</operator> <literal type="number" pos:start="99:23" pos:end="99:23">6</literal></expr>]</index></name> <operator pos:start="99:26" pos:end="99:26">*</operator> <name pos:start="99:28" pos:end="99:34">yalpha1</name> <operator pos:start="99:36" pos:end="99:36">+</operator> <name pos:start="99:38" pos:end="99:48"><name pos:start="99:38" pos:end="99:41">buf1</name><index pos:start="99:42" pos:end="99:48">[<expr pos:start="99:43" pos:end="99:47"><name pos:start="99:43" pos:end="99:43">i</name> <operator pos:start="99:45" pos:end="99:45">+</operator> <literal type="number" pos:start="99:47" pos:end="99:47">6</literal></expr>]</index></name> <operator pos:start="99:50" pos:end="99:50">*</operator> <name pos:start="99:52" pos:end="99:57">yalpha</name><operator pos:start="99:58" pos:end="99:58">)</operator> <operator pos:start="99:60" pos:end="99:61">&gt;&gt;</operator> <literal type="number" pos:start="99:63" pos:end="99:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:40"><call pos:start="101:9" pos:end="101:40"><name pos:start="101:9" pos:end="101:22">accumulate_bit</name><argument_list pos:start="101:23" pos:end="101:40">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">acc</name></expr></argument>, <argument pos:start="101:29" pos:end="101:39"><expr pos:start="101:29" pos:end="101:39"><name pos:start="101:29" pos:end="101:29">Y</name> <operator pos:start="101:31" pos:end="101:31">+</operator> <name pos:start="101:33" pos:end="101:39"><name pos:start="101:33" pos:end="101:36">d128</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:65"><expr pos:start="103:9" pos:end="103:64"><name pos:start="103:9" pos:end="103:9">Y</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:24"><name pos:start="103:14" pos:end="103:17">buf0</name><index pos:start="103:18" pos:end="103:24">[<expr pos:start="103:19" pos:end="103:23"><name pos:start="103:19" pos:end="103:19">i</name> <operator pos:start="103:21" pos:end="103:21">+</operator> <literal type="number" pos:start="103:23" pos:end="103:23">7</literal></expr>]</index></name> <operator pos:start="103:26" pos:end="103:26">*</operator> <name pos:start="103:28" pos:end="103:34">yalpha1</name> <operator pos:start="103:36" pos:end="103:36">+</operator> <name pos:start="103:38" pos:end="103:48"><name pos:start="103:38" pos:end="103:41">buf1</name><index pos:start="103:42" pos:end="103:48">[<expr pos:start="103:43" pos:end="103:47"><name pos:start="103:43" pos:end="103:43">i</name> <operator pos:start="103:45" pos:end="103:45">+</operator> <literal type="number" pos:start="103:47" pos:end="103:47">7</literal></expr>]</index></name> <operator pos:start="103:50" pos:end="103:50">*</operator> <name pos:start="103:52" pos:end="103:57">yalpha</name><operator pos:start="103:58" pos:end="103:58">)</operator> <operator pos:start="103:60" pos:end="103:61">&gt;&gt;</operator> <literal type="number" pos:start="103:63" pos:end="103:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:41"><expr pos:start="105:9" pos:end="105:40"><call pos:start="105:9" pos:end="105:40"><name pos:start="105:9" pos:end="105:22">accumulate_bit</name><argument_list pos:start="105:23" pos:end="105:40">(<argument pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">acc</name></expr></argument>, <argument pos:start="105:29" pos:end="105:39"><expr pos:start="105:29" pos:end="105:39"><name pos:start="105:29" pos:end="105:29">Y</name> <operator pos:start="105:31" pos:end="105:31">+</operator> <name pos:start="105:33" pos:end="105:39"><name pos:start="105:33" pos:end="105:36">d128</name><index pos:start="105:37" pos:end="105:39">[<expr pos:start="105:38" pos:end="105:38"><literal type="number" pos:start="105:38" pos:end="105:38">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:35"><expr pos:start="109:9" pos:end="109:34"><call pos:start="109:9" pos:end="109:34"><name pos:start="109:9" pos:end="109:20">output_pixel</name><argument_list pos:start="109:21" pos:end="109:34">(<argument pos:start="109:22" pos:end="109:28"><expr pos:start="109:22" pos:end="109:28"><operator pos:start="109:22" pos:end="109:22">*</operator><name pos:start="109:23" pos:end="109:26">dest</name><operator pos:start="109:27" pos:end="109:28">++</operator></expr></argument>, <argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
