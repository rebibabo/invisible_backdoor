<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5890.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:38"><name pos:start="1:1" pos:end="1:9">MKSCALE16</name><argument_list pos:start="1:10" pos:end="1:38">(<argument pos:start="1:11" pos:end="1:19">scale16be</argument>, <argument pos:start="1:22" pos:end="1:28">AV_RB16</argument>, <argument pos:start="1:31" pos:end="1:37">AV_WB16</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:38"><name pos:start="3:1" pos:end="3:9">MKSCALE16</name><argument_list pos:start="3:10" pos:end="3:38">(<argument pos:start="3:11" pos:end="3:19">scale16le</argument>, <argument pos:start="3:22" pos:end="3:28">AV_RL16</argument>, <argument pos:start="3:31" pos:end="3:37">AV_WL16</argument>)</argument_list></macro>



<function pos:start="7:1" pos:end="623:1"><type pos:start="7:1" pos:end="7:10"><specifier pos:start="7:1" pos:end="7:6">static</specifier> <name pos:start="7:8" pos:end="7:10">int</name></type> <name pos:start="7:12" pos:end="7:21">raw_decode</name><parameter_list pos:start="7:22" pos:end="9:38">(<parameter pos:start="7:23" pos:end="7:43"><decl pos:start="7:23" pos:end="7:43"><type pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:36">AVCodecContext</name> <modifier pos:start="7:38" pos:end="7:38">*</modifier></type><name pos:start="7:39" pos:end="7:43">avctx</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:55"><decl pos:start="7:46" pos:end="7:55"><type pos:start="7:46" pos:end="7:55"><name pos:start="7:46" pos:end="7:49">void</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier></type><name pos:start="7:52" pos:end="7:55">data</name></decl></parameter>, <parameter pos:start="7:58" pos:end="7:71"><decl pos:start="7:58" pos:end="7:71"><type pos:start="7:58" pos:end="7:71"><name pos:start="7:58" pos:end="7:60">int</name> <modifier pos:start="7:62" pos:end="7:62">*</modifier></type><name pos:start="7:63" pos:end="7:71">got_frame</name></decl></parameter>,

                      <parameter pos:start="9:23" pos:end="9:37"><decl pos:start="9:23" pos:end="9:37"><type pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:30">AVPacket</name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:37">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="623:1">{<block_content pos:start="13:5" pos:end="621:20">

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:30"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:28">AVPixFmtDescriptor</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:34">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">RawVideoContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:28">context</name>       <init pos:start="15:36" pos:end="15:53">= <expr pos:start="15:38" pos:end="15:53"><name pos:start="15:38" pos:end="15:53"><name pos:start="15:38" pos:end="15:42">avctx</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:53">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:49"><decl pos:start="17:5" pos:end="17:48"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">buf</name>             <init pos:start="17:36" pos:end="17:48">= <expr pos:start="17:38" pos:end="17:48"><name pos:start="17:38" pos:end="17:48"><name pos:start="17:38" pos:end="17:42">avpkt</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:48">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:49"><decl pos:start="19:5" pos:end="19:48"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">buf_size</name>                   <init pos:start="19:36" pos:end="19:48">= <expr pos:start="19:38" pos:end="19:48"><name pos:start="19:38" pos:end="19:48"><name pos:start="19:38" pos:end="19:42">avpkt</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:48">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:39"><decl pos:start="21:5" pos:end="21:38"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22">linesize_align</name>             <init pos:start="21:36" pos:end="21:38">= <expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:14">stride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">res</name></decl>, <decl pos:start="25:14" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:14" pos:end="25:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:17">need_copy</name></decl>;</decl_stmt>



    <decl_stmt pos:start="31:5" pos:end="31:30"><decl pos:start="31:5" pos:end="31:29"><type pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:11">AVFrame</name>   <modifier pos:start="31:15" pos:end="31:15">*</modifier></type><name pos:start="31:16" pos:end="31:20">frame</name>   <init pos:start="31:24" pos:end="31:29">= <expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">width</name></name> <operator pos:start="35:22" pos:end="35:23">&lt;=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>)</condition> <block pos:start="35:28" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:35">

        <expr_stmt pos:start="37:9" pos:end="37:58"><expr pos:start="37:9" pos:end="37:57"><call pos:start="37:9" pos:end="37:57"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:57">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:56"><expr pos:start="37:37" pos:end="37:56"><literal type="string" pos:start="37:37" pos:end="37:56">"width is not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:21">height</name></name> <operator pos:start="43:23" pos:end="43:24">&lt;=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>)</condition> <block pos:start="43:29" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:35">

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:58">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:57"><expr pos:start="45:37" pos:end="45:57"><literal type="string" pos:start="45:37" pos:end="45:57">"height is not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:35">return <expr pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="63:45"><if pos:start="53:5" pos:end="55:63">if <condition pos:start="53:8" pos:end="53:29">(<expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:15">context</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:28">is_nut_mono</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:63"><block_content pos:start="55:9" pos:end="55:63">

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:14">stride</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:29"><name pos:start="55:18" pos:end="55:22">avctx</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:29">width</name></name> <operator pos:start="55:31" pos:end="55:31">/</operator> <literal type="number" pos:start="55:33" pos:end="55:35">8</literal> <operator pos:start="55:35" pos:end="55:35">+</operator> <operator pos:start="55:37" pos:end="55:37">(</operator><ternary pos:start="55:38" pos:end="55:61"><condition pos:start="55:38" pos:end="55:55"><expr pos:start="55:38" pos:end="55:53"><name pos:start="55:38" pos:end="55:49"><name pos:start="55:38" pos:end="55:42">avctx</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:49">width</name></name> <operator pos:start="55:51" pos:end="55:51">&amp;</operator> <literal type="number" pos:start="55:53" pos:end="55:53">7</literal></expr> ?</condition><then pos:start="55:57" pos:end="55:57"> <expr pos:start="55:57" pos:end="55:57"><literal type="number" pos:start="55:57" pos:end="55:57">1</literal></expr> </then><else pos:start="55:59" pos:end="55:61">: <expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">0</literal></expr></else></ternary><operator pos:start="55:62" pos:end="55:62">)</operator></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="57:5" pos:end="59:30">else if <condition pos:start="57:13" pos:end="57:34">(<expr pos:start="57:14" pos:end="57:33"><name pos:start="57:14" pos:end="57:33"><name pos:start="57:14" pos:end="57:20">context</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:33">is_nut_pal8</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:30"><block_content pos:start="59:9" pos:end="59:30">

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:14">stride</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:29"><name pos:start="59:18" pos:end="59:22">avctx</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:29">width</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="61:5" pos:end="63:45">else<block type="pseudo" pos:start="63:9" pos:end="63:45"><block_content pos:start="63:9" pos:end="63:45">

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:14">stride</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:28"><name pos:start="63:18" pos:end="63:22">avpkt</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:28">size</name></name> <operator pos:start="63:30" pos:end="63:30">/</operator> <name pos:start="63:32" pos:end="63:44"><name pos:start="63:32" pos:end="63:36">avctx</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:44">height</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:86"><expr pos:start="67:5" pos:end="67:85"><call pos:start="67:5" pos:end="67:85"><name pos:start="67:5" pos:end="67:10">av_log</name><argument_list pos:start="67:11" pos:end="67:85">(<argument pos:start="67:12" pos:end="67:16"><expr pos:start="67:12" pos:end="67:16"><name pos:start="67:12" pos:end="67:16">avctx</name></expr></argument>, <argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:33" pos:end="67:63"><expr pos:start="67:33" pos:end="67:63"><literal type="string" pos:start="67:33" pos:end="67:63">"PACKET SIZE: %d, STRIDE: %d\n"</literal></expr></argument>, <argument pos:start="67:66" pos:end="67:76"><expr pos:start="67:66" pos:end="67:76"><name pos:start="67:66" pos:end="67:76"><name pos:start="67:66" pos:end="67:70">avpkt</name><operator pos:start="67:71" pos:end="67:72">-&gt;</operator><name pos:start="67:73" pos:end="67:76">size</name></name></expr></argument>, <argument pos:start="67:79" pos:end="67:84"><expr pos:start="67:79" pos:end="67:84"><name pos:start="67:79" pos:end="67:84">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:60">(<expr pos:start="71:9" pos:end="71:59"><name pos:start="71:9" pos:end="71:14">stride</name> <operator pos:start="71:16" pos:end="71:17">==</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal> <operator pos:start="71:21" pos:end="71:22">||</operator> <name pos:start="71:24" pos:end="71:34"><name pos:start="71:24" pos:end="71:28">avpkt</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:34">size</name></name> <operator pos:start="71:36" pos:end="71:36">&lt;</operator> <name pos:start="71:38" pos:end="71:43">stride</name> <operator pos:start="71:45" pos:end="71:45">*</operator> <name pos:start="71:47" pos:end="71:59"><name pos:start="71:47" pos:end="71:51">avctx</name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:59">height</name></name></expr>)</condition> <block pos:start="71:62" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:35">

        <expr_stmt pos:start="73:9" pos:end="73:76"><expr pos:start="73:9" pos:end="73:75"><call pos:start="73:9" pos:end="73:75"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:75">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:61"><expr pos:start="73:37" pos:end="73:61"><literal type="string" pos:start="73:37" pos:end="73:61">"Packet too small (%d)\n"</literal></expr></argument>, <argument pos:start="73:64" pos:end="73:74"><expr pos:start="73:64" pos:end="73:74"><name pos:start="73:64" pos:end="73:74"><name pos:start="73:64" pos:end="73:68">avpkt</name><operator pos:start="73:69" pos:end="73:70">-&gt;</operator><name pos:start="73:71" pos:end="73:74">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:35">return <expr pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:47"><expr pos:start="81:5" pos:end="81:46"><name pos:start="81:5" pos:end="81:8">desc</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <call pos:start="81:12" pos:end="81:46"><name pos:start="81:12" pos:end="81:30">av_pix_fmt_desc_get</name><argument_list pos:start="81:31" pos:end="81:46">(<argument pos:start="81:32" pos:end="81:45"><expr pos:start="81:32" pos:end="81:45"><name pos:start="81:32" pos:end="81:45"><name pos:start="81:32" pos:end="81:36">avctx</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:45">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="125:5"><if pos:start="85:5" pos:end="117:5">if <condition pos:start="85:8" pos:end="95:62">(<expr pos:start="85:9" pos:end="95:61"><operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:37"><name pos:start="85:10" pos:end="85:14">avctx</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:37">bits_per_coded_sample</name></name> <operator pos:start="85:39" pos:end="85:40">==</operator> <literal type="number" pos:start="85:42" pos:end="85:42">8</literal> <operator pos:start="85:44" pos:end="85:45">||</operator> <name pos:start="85:47" pos:end="85:74"><name pos:start="85:47" pos:end="85:51">avctx</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:74">bits_per_coded_sample</name></name> <operator pos:start="85:76" pos:end="85:77">==</operator> <literal type="number" pos:start="85:79" pos:end="85:79">4</literal> <operator pos:start="85:81" pos:end="85:82">||</operator>

         <name pos:start="87:10" pos:end="87:37"><name pos:start="87:10" pos:end="87:14">avctx</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:37">bits_per_coded_sample</name></name> <operator pos:start="87:39" pos:end="87:40">==</operator> <literal type="number" pos:start="87:42" pos:end="87:42">2</literal> <operator pos:start="87:44" pos:end="87:45">||</operator> <name pos:start="87:47" pos:end="87:74"><name pos:start="87:47" pos:end="87:51">avctx</name><operator pos:start="87:52" pos:end="87:53">-&gt;</operator><name pos:start="87:54" pos:end="87:74">bits_per_coded_sample</name></name> <operator pos:start="87:76" pos:end="87:77">==</operator> <literal type="number" pos:start="87:79" pos:end="87:79">1</literal> <operator pos:start="87:81" pos:end="87:82">||</operator>

         <operator pos:start="89:10" pos:end="89:10">(</operator><name pos:start="89:11" pos:end="89:38"><name pos:start="89:11" pos:end="89:15">avctx</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:38">bits_per_coded_sample</name></name> <operator pos:start="89:40" pos:end="89:41">==</operator> <literal type="number" pos:start="89:43" pos:end="89:43">0</literal> <operator pos:start="89:45" pos:end="89:46">&amp;&amp;</operator> <operator pos:start="89:48" pos:end="89:48">(</operator><name pos:start="89:49" pos:end="89:68"><name pos:start="89:49" pos:end="89:55">context</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:68">is_nut_pal8</name></name> <operator pos:start="89:70" pos:end="89:71">||</operator> <name pos:start="89:73" pos:end="89:88"><name pos:start="89:73" pos:end="89:79">context</name><operator pos:start="89:80" pos:end="89:81">-&gt;</operator><name pos:start="89:82" pos:end="89:88">is_mono</name></name><operator pos:start="89:89" pos:end="89:89">)</operator><operator pos:start="89:90" pos:end="89:90">)</operator> <operator pos:start="89:92" pos:end="89:92">)</operator> <operator pos:start="89:94" pos:end="89:95">&amp;&amp;</operator>

        <operator pos:start="91:9" pos:end="91:9">(</operator><name pos:start="91:10" pos:end="91:25"><name pos:start="91:10" pos:end="91:16">context</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:25">is_mono</name></name> <operator pos:start="91:27" pos:end="91:28">||</operator> <name pos:start="91:30" pos:end="91:45"><name pos:start="91:30" pos:end="91:36">context</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:45">is_pal8</name></name><operator pos:start="91:46" pos:end="91:46">)</operator> <operator pos:start="91:48" pos:end="91:49">&amp;&amp;</operator>

        <operator pos:start="93:9" pos:end="93:9">(</operator><operator pos:start="93:10" pos:end="93:10">!</operator><name pos:start="93:11" pos:end="93:26"><name pos:start="93:11" pos:end="93:15">avctx</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:26">codec_tag</name></name> <operator pos:start="93:28" pos:end="93:29">||</operator> <name pos:start="93:31" pos:end="93:46"><name pos:start="93:31" pos:end="93:35">avctx</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:46">codec_tag</name></name> <operator pos:start="93:48" pos:end="93:49">==</operator> <call pos:start="93:51" pos:end="93:72"><name pos:start="93:51" pos:end="93:55">MKTAG</name><argument_list pos:start="93:56" pos:end="93:72">(<argument pos:start="93:57" pos:end="93:59"><expr pos:start="93:57" pos:end="93:59"><literal type="char" pos:start="93:57" pos:end="93:59">'r'</literal></expr></argument>,<argument pos:start="93:61" pos:end="93:63"><expr pos:start="93:61" pos:end="93:63"><literal type="char" pos:start="93:61" pos:end="93:63">'a'</literal></expr></argument>,<argument pos:start="93:65" pos:end="93:67"><expr pos:start="93:65" pos:end="93:67"><literal type="char" pos:start="93:65" pos:end="93:67">'w'</literal></expr></argument>,<argument pos:start="93:69" pos:end="93:71"><expr pos:start="93:69" pos:end="93:71"><literal type="char" pos:start="93:69" pos:end="93:71">' '</literal></expr></argument>)</argument_list></call> <operator pos:start="93:74" pos:end="93:75">||</operator>

                <name pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:23">context</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:36">is_nut_mono</name></name> <operator pos:start="95:38" pos:end="95:39">||</operator> <name pos:start="95:41" pos:end="95:60"><name pos:start="95:41" pos:end="95:47">context</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:60">is_nut_pal8</name></name><operator pos:start="95:61" pos:end="95:61">)</operator></expr>)</condition> <block pos:start="95:64" pos:end="117:5">{<block_content pos:start="97:9" pos:end="115:77">

        <expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:15">context</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:31">is_1_2_4_8_bpp</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <literal type="number" pos:start="97:35" pos:end="97:35">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="115:77"><if pos:start="99:9" pos:end="109:9">if <condition pos:start="99:12" pos:end="99:29">(<expr pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:19">context</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:28">is_mono</name></name></expr>)</condition> <block pos:start="99:31" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:77">

            <decl_stmt pos:start="101:13" pos:end="101:74"><decl pos:start="101:13" pos:end="101:73"><type pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:15">int</name></type> <name pos:start="101:17" pos:end="101:25">row_bytes</name> <init pos:start="101:27" pos:end="101:73">= <expr pos:start="101:29" pos:end="101:73"><name pos:start="101:29" pos:end="101:40"><name pos:start="101:29" pos:end="101:33">avctx</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:40">width</name></name> <operator pos:start="101:42" pos:end="101:42">/</operator> <literal type="number" pos:start="101:44" pos:end="101:46">8</literal> <operator pos:start="101:46" pos:end="101:46">+</operator> <operator pos:start="101:48" pos:end="101:48">(</operator><ternary pos:start="101:49" pos:end="101:72"><condition pos:start="101:49" pos:end="101:66"><expr pos:start="101:49" pos:end="101:64"><name pos:start="101:49" pos:end="101:60"><name pos:start="101:49" pos:end="101:53">avctx</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:60">width</name></name> <operator pos:start="101:62" pos:end="101:62">&amp;</operator> <literal type="number" pos:start="101:64" pos:end="101:64">7</literal></expr> ?</condition><then pos:start="101:68" pos:end="101:68"> <expr pos:start="101:68" pos:end="101:68"><literal type="number" pos:start="101:68" pos:end="101:68">1</literal></expr> </then><else pos:start="101:70" pos:end="101:72">: <expr pos:start="101:72" pos:end="101:72"><literal type="number" pos:start="101:72" pos:end="101:72">0</literal></expr></else></ternary><operator pos:start="101:73" pos:end="101:73">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="103:13" pos:end="107:77"><expr pos:start="103:13" pos:end="107:76"><name pos:start="103:13" pos:end="103:31"><name pos:start="103:13" pos:end="103:19">context</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:31">frame_size</name></name> <operator pos:start="103:33" pos:end="103:33">=</operator> <call pos:start="103:35" pos:end="107:76"><name pos:start="103:35" pos:end="103:58">av_image_get_buffer_size</name><argument_list pos:start="103:59" pos:end="107:76">(<argument pos:start="103:60" pos:end="103:73"><expr pos:start="103:60" pos:end="103:73"><name pos:start="103:60" pos:end="103:73"><name pos:start="103:60" pos:end="103:64">avctx</name><operator pos:start="103:65" pos:end="103:66">-&gt;</operator><name pos:start="103:67" pos:end="103:73">pix_fmt</name></name></expr></argument>,

                                                           <argument pos:start="105:60" pos:end="105:85"><expr pos:start="105:60" pos:end="105:85"><call pos:start="105:60" pos:end="105:81"><name pos:start="105:60" pos:end="105:66">FFALIGN</name><argument_list pos:start="105:67" pos:end="105:81">(<argument pos:start="105:68" pos:end="105:76"><expr pos:start="105:68" pos:end="105:76"><name pos:start="105:68" pos:end="105:76">row_bytes</name></expr></argument>, <argument pos:start="105:79" pos:end="105:80"><expr pos:start="105:79" pos:end="105:80"><literal type="number" pos:start="105:79" pos:end="105:80">16</literal></expr></argument>)</argument_list></call> <operator pos:start="105:83" pos:end="105:83">*</operator> <literal type="number" pos:start="105:85" pos:end="105:85">8</literal></expr></argument>,

                                                           <argument pos:start="107:60" pos:end="107:72"><expr pos:start="107:60" pos:end="107:72"><name pos:start="107:60" pos:end="107:72"><name pos:start="107:60" pos:end="107:64">avctx</name><operator pos:start="107:65" pos:end="107:66">-&gt;</operator><name pos:start="107:67" pos:end="107:72">height</name></name></expr></argument>, <argument pos:start="107:75" pos:end="107:75"><expr pos:start="107:75" pos:end="107:75"><literal type="number" pos:start="107:75" pos:end="107:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="115:77">else<block type="pseudo" pos:start="111:13" pos:end="115:77"><block_content pos:start="111:13" pos:end="115:77">

            <expr_stmt pos:start="111:13" pos:end="115:77"><expr pos:start="111:13" pos:end="115:76"><name pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:19">context</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:31">frame_size</name></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <call pos:start="111:35" pos:end="115:76"><name pos:start="111:35" pos:end="111:58">av_image_get_buffer_size</name><argument_list pos:start="111:59" pos:end="115:76">(<argument pos:start="111:60" pos:end="111:73"><expr pos:start="111:60" pos:end="111:73"><name pos:start="111:60" pos:end="111:73"><name pos:start="111:60" pos:end="111:64">avctx</name><operator pos:start="111:65" pos:end="111:66">-&gt;</operator><name pos:start="111:67" pos:end="111:73">pix_fmt</name></name></expr></argument>,

                                                           <argument pos:start="113:60" pos:end="113:84"><expr pos:start="113:60" pos:end="113:84"><call pos:start="113:60" pos:end="113:84"><name pos:start="113:60" pos:end="113:66">FFALIGN</name><argument_list pos:start="113:67" pos:end="113:84">(<argument pos:start="113:68" pos:end="113:79"><expr pos:start="113:68" pos:end="113:79"><name pos:start="113:68" pos:end="113:79"><name pos:start="113:68" pos:end="113:72">avctx</name><operator pos:start="113:73" pos:end="113:74">-&gt;</operator><name pos:start="113:75" pos:end="113:79">width</name></name></expr></argument>, <argument pos:start="113:82" pos:end="113:83"><expr pos:start="113:82" pos:end="113:83"><literal type="number" pos:start="113:82" pos:end="113:83">16</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                           <argument pos:start="115:60" pos:end="115:72"><expr pos:start="115:60" pos:end="115:72"><name pos:start="115:60" pos:end="115:72"><name pos:start="115:60" pos:end="115:64">avctx</name><operator pos:start="115:65" pos:end="115:66">-&gt;</operator><name pos:start="115:67" pos:end="115:72">height</name></name></expr></argument>, <argument pos:start="115:75" pos:end="115:75"><expr pos:start="115:75" pos:end="115:75"><literal type="number" pos:start="115:75" pos:end="115:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="125:5">else <block pos:start="117:12" pos:end="125:5">{<block_content pos:start="119:9" pos:end="123:73">

        <expr_stmt pos:start="119:9" pos:end="119:134"><expr pos:start="119:9" pos:end="119:133"><name pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:15">context</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:28">is_lt_16bpp</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:58"><name pos:start="119:32" pos:end="119:52">av_get_bits_per_pixel</name><argument_list pos:start="119:53" pos:end="119:58">(<argument pos:start="119:54" pos:end="119:57"><expr pos:start="119:54" pos:end="119:57"><name pos:start="119:54" pos:end="119:57">desc</name></expr></argument>)</argument_list></call> <operator pos:start="119:60" pos:end="119:61">==</operator> <literal type="number" pos:start="119:63" pos:end="119:64">16</literal> <operator pos:start="119:66" pos:end="119:67">&amp;&amp;</operator> <name pos:start="119:69" pos:end="119:96"><name pos:start="119:69" pos:end="119:73">avctx</name><operator pos:start="119:74" pos:end="119:75">-&gt;</operator><name pos:start="119:76" pos:end="119:96">bits_per_coded_sample</name></name> <operator pos:start="119:98" pos:end="119:99">&amp;&amp;</operator> <name pos:start="119:101" pos:end="119:128"><name pos:start="119:101" pos:end="119:105">avctx</name><operator pos:start="119:106" pos:end="119:107">-&gt;</operator><name pos:start="119:108" pos:end="119:128">bits_per_coded_sample</name></name> <operator pos:start="119:130" pos:end="119:130">&lt;</operator> <literal type="number" pos:start="119:132" pos:end="119:133">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="123:73"><expr pos:start="121:9" pos:end="123:72"><name pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:15">context</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:27">frame_size</name></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <call pos:start="121:31" pos:end="123:72"><name pos:start="121:31" pos:end="121:54">av_image_get_buffer_size</name><argument_list pos:start="121:55" pos:end="123:72">(<argument pos:start="121:56" pos:end="121:69"><expr pos:start="121:56" pos:end="121:69"><name pos:start="121:56" pos:end="121:69"><name pos:start="121:56" pos:end="121:60">avctx</name><operator pos:start="121:61" pos:end="121:62">-&gt;</operator><name pos:start="121:63" pos:end="121:69">pix_fmt</name></name></expr></argument>, <argument pos:start="121:72" pos:end="121:83"><expr pos:start="121:72" pos:end="121:83"><name pos:start="121:72" pos:end="121:83"><name pos:start="121:72" pos:end="121:76">avctx</name><operator pos:start="121:77" pos:end="121:78">-&gt;</operator><name pos:start="121:79" pos:end="121:83">width</name></name></expr></argument>,

                                                       <argument pos:start="123:56" pos:end="123:68"><expr pos:start="123:56" pos:end="123:68"><name pos:start="123:56" pos:end="123:68"><name pos:start="123:56" pos:end="123:60">avctx</name><operator pos:start="123:61" pos:end="123:62">-&gt;</operator><name pos:start="123:63" pos:end="123:68">height</name></name></expr></argument>, <argument pos:start="123:71" pos:end="123:71"><expr pos:start="123:71" pos:end="123:71"><literal type="number" pos:start="123:71" pos:end="123:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="127:5" pos:end="129:35"><if pos:start="127:5" pos:end="129:35">if <condition pos:start="127:8" pos:end="127:32">(<expr pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:15">context</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:27">frame_size</name></name> <operator pos:start="127:29" pos:end="127:29">&lt;</operator> <literal type="number" pos:start="127:31" pos:end="127:31">0</literal></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:35"><block_content pos:start="129:9" pos:end="129:35">

        <return pos:start="129:9" pos:end="129:35">return <expr pos:start="129:16" pos:end="129:34"><name pos:start="129:16" pos:end="129:34"><name pos:start="129:16" pos:end="129:22">context</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:34">frame_size</name></name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:99"><expr pos:start="133:5" pos:end="133:98"><name pos:start="133:5" pos:end="133:13">need_copy</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <operator pos:start="133:17" pos:end="133:17">!</operator><name pos:start="133:18" pos:end="133:27"><name pos:start="133:18" pos:end="133:22">avpkt</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:27">buf</name></name> <operator pos:start="133:29" pos:end="133:30">||</operator> <name pos:start="133:32" pos:end="133:54"><name pos:start="133:32" pos:end="133:38">context</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:54">is_1_2_4_8_bpp</name></name> <operator pos:start="133:56" pos:end="133:57">||</operator> <name pos:start="133:59" pos:end="133:74"><name pos:start="133:59" pos:end="133:65">context</name><operator pos:start="133:66" pos:end="133:67">-&gt;</operator><name pos:start="133:68" pos:end="133:74">is_yuv2</name></name> <operator pos:start="133:76" pos:end="133:77">||</operator> <name pos:start="133:79" pos:end="133:98"><name pos:start="133:79" pos:end="133:85">context</name><operator pos:start="133:86" pos:end="133:87">-&gt;</operator><name pos:start="133:88" pos:end="133:98">is_lt_16bpp</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:48"><expr pos:start="137:5" pos:end="137:47"><name pos:start="137:5" pos:end="137:20"><name pos:start="137:5" pos:end="137:9">frame</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:20">pict_type</name></name>        <operator pos:start="137:29" pos:end="137:29">=</operator> <name pos:start="137:31" pos:end="137:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:32"><expr pos:start="139:5" pos:end="139:31"><name pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:9">frame</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:20">key_frame</name></name>        <operator pos:start="139:29" pos:end="139:29">=</operator> <literal type="number" pos:start="139:31" pos:end="139:31">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:46"><expr pos:start="143:5" pos:end="143:45"><name pos:start="143:5" pos:end="143:7">res</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:45"><name pos:start="143:11" pos:end="143:31">ff_decode_frame_props</name><argument_list pos:start="143:32" pos:end="143:45">(<argument pos:start="143:33" pos:end="143:37"><expr pos:start="143:33" pos:end="143:37"><name pos:start="143:33" pos:end="143:37">avctx</name></expr></argument>, <argument pos:start="143:40" pos:end="143:44"><expr pos:start="143:40" pos:end="143:44"><name pos:start="143:40" pos:end="143:44">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:19"><if pos:start="145:5" pos:end="147:19">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:11">res</name> <operator pos:start="145:13" pos:end="145:13">&lt;</operator> <literal type="number" pos:start="145:15" pos:end="145:15">0</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:19"><block_content pos:start="147:9" pos:end="147:19">

        <return pos:start="147:9" pos:end="147:19">return <expr pos:start="147:16" pos:end="147:18"><name pos:start="147:16" pos:end="147:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:64"><expr pos:start="151:5" pos:end="151:63"><call pos:start="151:5" pos:end="151:63"><name pos:start="151:5" pos:end="151:24">av_frame_set_pkt_pos</name>     <argument_list pos:start="151:30" pos:end="151:63">(<argument pos:start="151:31" pos:end="151:35"><expr pos:start="151:31" pos:end="151:35"><name pos:start="151:31" pos:end="151:35">frame</name></expr></argument>, <argument pos:start="151:38" pos:end="151:62"><expr pos:start="151:38" pos:end="151:62"><name pos:start="151:38" pos:end="151:62"><name pos:start="151:38" pos:end="151:42">avctx</name><operator pos:start="151:43" pos:end="151:44">-&gt;</operator><name pos:start="151:45" pos:end="151:52">internal</name><operator pos:start="151:53" pos:end="151:54">-&gt;</operator><name pos:start="151:55" pos:end="151:57">pkt</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:62">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:69"><expr pos:start="153:5" pos:end="153:68"><call pos:start="153:5" pos:end="153:68"><name pos:start="153:5" pos:end="153:29">av_frame_set_pkt_duration</name><argument_list pos:start="153:30" pos:end="153:68">(<argument pos:start="153:31" pos:end="153:35"><expr pos:start="153:31" pos:end="153:35"><name pos:start="153:31" pos:end="153:35">frame</name></expr></argument>, <argument pos:start="153:38" pos:end="153:67"><expr pos:start="153:38" pos:end="153:67"><name pos:start="153:38" pos:end="153:67"><name pos:start="153:38" pos:end="153:42">avctx</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:52">internal</name><operator pos:start="153:53" pos:end="153:54">-&gt;</operator><name pos:start="153:55" pos:end="153:57">pkt</name><operator pos:start="153:58" pos:end="153:59">-&gt;</operator><name pos:start="153:60" pos:end="153:67">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:26">(<expr pos:start="157:9" pos:end="157:25"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:15">context</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:20">tff</name></name> <operator pos:start="157:22" pos:end="157:23">&gt;=</operator> <literal type="number" pos:start="157:25" pos:end="157:25">0</literal></expr>)</condition> <block pos:start="157:28" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:47">

        <expr_stmt pos:start="159:9" pos:end="159:36"><expr pos:start="159:9" pos:end="159:35"><name pos:start="159:9" pos:end="159:31"><name pos:start="159:9" pos:end="159:13">frame</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:31">interlaced_frame</name></name> <operator pos:start="159:33" pos:end="159:33">=</operator> <literal type="number" pos:start="159:35" pos:end="159:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:47"><expr pos:start="161:9" pos:end="161:46"><name pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:13">frame</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:30">top_field_first</name></name>  <operator pos:start="161:33" pos:end="161:33">=</operator> <name pos:start="161:35" pos:end="161:46"><name pos:start="161:35" pos:end="161:41">context</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:46">tff</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="169:19"><if pos:start="167:5" pos:end="169:19">if <condition pos:start="167:8" pos:end="167:79">(<expr pos:start="167:9" pos:end="167:78"><operator pos:start="167:9" pos:end="167:9">(</operator><name pos:start="167:10" pos:end="167:12">res</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <call pos:start="167:16" pos:end="167:73"><name pos:start="167:16" pos:end="167:34">av_image_check_size</name><argument_list pos:start="167:35" pos:end="167:73">(<argument pos:start="167:36" pos:end="167:47"><expr pos:start="167:36" pos:end="167:47"><name pos:start="167:36" pos:end="167:47"><name pos:start="167:36" pos:end="167:40">avctx</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:47">width</name></name></expr></argument>, <argument pos:start="167:50" pos:end="167:62"><expr pos:start="167:50" pos:end="167:62"><name pos:start="167:50" pos:end="167:62"><name pos:start="167:50" pos:end="167:54">avctx</name><operator pos:start="167:55" pos:end="167:56">-&gt;</operator><name pos:start="167:57" pos:end="167:62">height</name></name></expr></argument>, <argument pos:start="167:65" pos:end="167:65"><expr pos:start="167:65" pos:end="167:65"><literal type="number" pos:start="167:65" pos:end="167:65">0</literal></expr></argument>, <argument pos:start="167:68" pos:end="167:72"><expr pos:start="167:68" pos:end="167:72"><name pos:start="167:68" pos:end="167:72">avctx</name></expr></argument>)</argument_list></call><operator pos:start="167:74" pos:end="167:74">)</operator> <operator pos:start="167:76" pos:end="167:76">&lt;</operator> <literal type="number" pos:start="167:78" pos:end="167:78">0</literal></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:19"><block_content pos:start="169:9" pos:end="169:19">

        <return pos:start="169:9" pos:end="169:19">return <expr pos:start="169:16" pos:end="169:18"><name pos:start="169:16" pos:end="169:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="179:50"><if pos:start="173:5" pos:end="175:78">if <condition pos:start="173:8" pos:end="173:18">(<expr pos:start="173:9" pos:end="173:17"><name pos:start="173:9" pos:end="173:17">need_copy</name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:78"><block_content pos:start="175:9" pos:end="175:78">

        <expr_stmt pos:start="175:9" pos:end="175:78"><expr pos:start="175:9" pos:end="175:77"><name pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:13">frame</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:18">buf</name><index pos:start="175:19" pos:end="175:21">[<expr pos:start="175:20" pos:end="175:20"><literal type="number" pos:start="175:20" pos:end="175:20">0</literal></expr>]</index></name> <operator pos:start="175:23" pos:end="175:23">=</operator> <call pos:start="175:25" pos:end="175:77"><name pos:start="175:25" pos:end="175:39">av_buffer_alloc</name><argument_list pos:start="175:40" pos:end="175:77">(<argument pos:start="175:41" pos:end="175:76"><expr pos:start="175:41" pos:end="175:76"><call pos:start="175:41" pos:end="175:76"><name pos:start="175:41" pos:end="175:45">FFMAX</name><argument_list pos:start="175:46" pos:end="175:76">(<argument pos:start="175:47" pos:end="175:65"><expr pos:start="175:47" pos:end="175:65"><name pos:start="175:47" pos:end="175:65"><name pos:start="175:47" pos:end="175:53">context</name><operator pos:start="175:54" pos:end="175:55">-&gt;</operator><name pos:start="175:56" pos:end="175:65">frame_size</name></name></expr></argument>, <argument pos:start="175:68" pos:end="175:75"><expr pos:start="175:68" pos:end="175:75"><name pos:start="175:68" pos:end="175:75">buf_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="177:5" pos:end="179:50">else<block type="pseudo" pos:start="179:9" pos:end="179:50"><block_content pos:start="179:9" pos:end="179:50">

        <expr_stmt pos:start="179:9" pos:end="179:50"><expr pos:start="179:9" pos:end="179:49"><name pos:start="179:9" pos:end="179:21"><name pos:start="179:9" pos:end="179:13">frame</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:18">buf</name><index pos:start="179:19" pos:end="179:21">[<expr pos:start="179:20" pos:end="179:20"><literal type="number" pos:start="179:20" pos:end="179:20">0</literal></expr>]</index></name> <operator pos:start="179:23" pos:end="179:23">=</operator> <call pos:start="179:25" pos:end="179:49"><name pos:start="179:25" pos:end="179:37">av_buffer_ref</name><argument_list pos:start="179:38" pos:end="179:49">(<argument pos:start="179:39" pos:end="179:48"><expr pos:start="179:39" pos:end="179:48"><name pos:start="179:39" pos:end="179:48"><name pos:start="179:39" pos:end="179:43">avpkt</name><operator pos:start="179:44" pos:end="179:45">-&gt;</operator><name pos:start="179:46" pos:end="179:48">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="181:5" pos:end="183:31"><if pos:start="181:5" pos:end="183:31">if <condition pos:start="181:8" pos:end="181:23">(<expr pos:start="181:9" pos:end="181:22"><operator pos:start="181:9" pos:end="181:9">!</operator><name pos:start="181:10" pos:end="181:22"><name pos:start="181:10" pos:end="181:14">frame</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:19">buf</name><index pos:start="181:20" pos:end="181:22">[<expr pos:start="181:21" pos:end="181:21"><literal type="number" pos:start="181:21" pos:end="181:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="183:9" pos:end="183:31"><block_content pos:start="183:9" pos:end="183:31">

        <return pos:start="183:9" pos:end="183:31">return <expr pos:start="183:16" pos:end="183:30"><call pos:start="183:16" pos:end="183:30"><name pos:start="183:16" pos:end="183:22">AVERROR</name><argument_list pos:start="183:23" pos:end="183:30">(<argument pos:start="183:24" pos:end="183:29"><expr pos:start="183:24" pos:end="183:29"><name pos:start="183:24" pos:end="183:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="187:5" pos:end="187:55">// 1, 2, 4 and 8 bpp in avi/mov, 1 and 8 bpp in nut</comment>

    <if_stmt pos:start="189:5" pos:end="363:5"><if pos:start="189:5" pos:end="309:5">if <condition pos:start="189:8" pos:end="189:32">(<expr pos:start="189:9" pos:end="189:31"><name pos:start="189:9" pos:end="189:31"><name pos:start="189:9" pos:end="189:15">context</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:31">is_1_2_4_8_bpp</name></name></expr>)</condition> <block pos:start="189:34" pos:end="309:5">{<block_content pos:start="191:9" pos:end="307:18">

        <decl_stmt pos:start="191:9" pos:end="191:30"><decl pos:start="191:9" pos:end="191:13"><type pos:start="191:9" pos:end="191:11"><name pos:start="191:9" pos:end="191:11">int</name></type> <name pos:start="191:13" pos:end="191:13">i</name></decl>, <decl pos:start="191:16" pos:end="191:16"><type ref="prev" pos:start="191:9" pos:end="191:11"/><name pos:start="191:16" pos:end="191:16">j</name></decl>, <decl pos:start="191:19" pos:end="191:29"><type ref="prev" pos:start="191:9" pos:end="191:11"/><name pos:start="191:19" pos:end="191:25">row_pix</name> <init pos:start="191:27" pos:end="191:29">= <expr pos:start="191:29" pos:end="191:29"><literal type="number" pos:start="191:29" pos:end="191:29">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:43"><decl pos:start="193:9" pos:end="193:42"><type pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:15">uint8_t</name> <modifier pos:start="193:17" pos:end="193:17">*</modifier></type><name pos:start="193:18" pos:end="193:20">dst</name> <init pos:start="193:22" pos:end="193:42">= <expr pos:start="193:24" pos:end="193:42"><name pos:start="193:24" pos:end="193:36"><name pos:start="193:24" pos:end="193:28">frame</name><operator pos:start="193:29" pos:end="193:30">-&gt;</operator><name pos:start="193:31" pos:end="193:33">buf</name><index pos:start="193:34" pos:end="193:36">[<expr pos:start="193:35" pos:end="193:35"><literal type="number" pos:start="193:35" pos:end="193:35">0</literal></expr>]</index></name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:42">data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:81"><expr pos:start="195:9" pos:end="195:80"><name pos:start="195:9" pos:end="195:16">buf_size</name> <operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:38"><name pos:start="195:20" pos:end="195:26">context</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:38">frame_size</name></name> <operator pos:start="195:40" pos:end="195:40">-</operator> <operator pos:start="195:42" pos:end="195:42">(</operator><ternary pos:start="195:43" pos:end="195:79"><condition pos:start="195:43" pos:end="195:60"><expr pos:start="195:43" pos:end="195:58"><name pos:start="195:43" pos:end="195:58"><name pos:start="195:43" pos:end="195:49">context</name><operator pos:start="195:50" pos:end="195:51">-&gt;</operator><name pos:start="195:52" pos:end="195:58">is_pal8</name></name></expr> ?</condition><then pos:start="195:62" pos:end="195:75"> <expr pos:start="195:62" pos:end="195:75"><name pos:start="195:62" pos:end="195:75">AVPALETTE_SIZE</name></expr> </then><else pos:start="195:77" pos:end="195:79">: <expr pos:start="195:79" pos:end="195:79"><literal type="number" pos:start="195:79" pos:end="195:79">0</literal></expr></else></ternary><operator pos:start="195:80" pos:end="195:80">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="303:9"><if pos:start="197:9" pos:end="219:9">if <condition pos:start="197:12" pos:end="197:90">(<expr pos:start="197:13" pos:end="197:89"><name pos:start="197:13" pos:end="197:40"><name pos:start="197:13" pos:end="197:17">avctx</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:40">bits_per_coded_sample</name></name> <operator pos:start="197:42" pos:end="197:43">==</operator> <literal type="number" pos:start="197:45" pos:end="197:45">8</literal> <operator pos:start="197:47" pos:end="197:48">||</operator> <name pos:start="197:50" pos:end="197:69"><name pos:start="197:50" pos:end="197:56">context</name><operator pos:start="197:57" pos:end="197:58">-&gt;</operator><name pos:start="197:59" pos:end="197:69">is_nut_pal8</name></name> <operator pos:start="197:71" pos:end="197:72">||</operator> <name pos:start="197:74" pos:end="197:89"><name pos:start="197:74" pos:end="197:80">context</name><operator pos:start="197:81" pos:end="197:82">-&gt;</operator><name pos:start="197:83" pos:end="197:89">is_mono</name></name></expr>)</condition> <block pos:start="197:92" pos:end="219:9">{<block_content pos:start="199:13" pos:end="217:13">

            <decl_stmt pos:start="199:13" pos:end="199:56"><decl pos:start="199:13" pos:end="199:55"><type pos:start="199:13" pos:end="199:15"><name pos:start="199:13" pos:end="199:15">int</name></type> <name pos:start="199:17" pos:end="199:28">pix_per_byte</name> <init pos:start="199:30" pos:end="199:55">= <expr pos:start="199:32" pos:end="199:55"><ternary pos:start="199:32" pos:end="199:55"><condition pos:start="199:32" pos:end="199:49"><expr pos:start="199:32" pos:end="199:47"><name pos:start="199:32" pos:end="199:47"><name pos:start="199:32" pos:end="199:38">context</name><operator pos:start="199:39" pos:end="199:40">-&gt;</operator><name pos:start="199:41" pos:end="199:47">is_mono</name></name></expr> ?</condition><then pos:start="199:51" pos:end="199:51"> <expr pos:start="199:51" pos:end="199:51"><literal type="number" pos:start="199:51" pos:end="199:51">8</literal></expr> </then><else pos:start="199:53" pos:end="199:55">: <expr pos:start="199:55" pos:end="199:55"><literal type="number" pos:start="199:55" pos:end="199:55">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <for pos:start="201:13" pos:end="217:13">for <control pos:start="201:17" pos:end="201:71">(<init pos:start="201:18" pos:end="201:30"><expr pos:start="201:18" pos:end="201:22"><name pos:start="201:18" pos:end="201:18">i</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr><operator pos:start="201:23" pos:end="201:23">,</operator> <expr pos:start="201:25" pos:end="201:29"><name pos:start="201:25" pos:end="201:25">j</name> <operator pos:start="201:27" pos:end="201:27">=</operator> <literal type="number" pos:start="201:29" pos:end="201:29">0</literal></expr>;</init> <condition pos:start="201:32" pos:end="201:61"><expr pos:start="201:32" pos:end="201:60"><name pos:start="201:32" pos:end="201:32">j</name> <operator pos:start="201:34" pos:end="201:34">&lt;</operator> <name pos:start="201:36" pos:end="201:43">buf_size</name> <operator pos:start="201:45" pos:end="201:46">&amp;&amp;</operator> <name pos:start="201:48" pos:end="201:48">i</name><operator pos:start="201:49" pos:end="201:49">&lt;</operator><name pos:start="201:50" pos:end="201:60"><name pos:start="201:50" pos:end="201:54">avpkt</name><operator pos:start="201:55" pos:end="201:56">-&gt;</operator><name pos:start="201:57" pos:end="201:60">size</name></name></expr>;</condition> <incr pos:start="201:63" pos:end="201:70"><expr pos:start="201:63" pos:end="201:65"><name pos:start="201:63" pos:end="201:63">i</name><operator pos:start="201:64" pos:end="201:65">++</operator></expr><operator pos:start="201:66" pos:end="201:66">,</operator> <expr pos:start="201:68" pos:end="201:70"><name pos:start="201:68" pos:end="201:68">j</name><operator pos:start="201:69" pos:end="201:70">++</operator></expr></incr>)</control> <block pos:start="201:73" pos:end="217:13">{<block_content pos:start="203:17" pos:end="215:17">

                <expr_stmt pos:start="203:17" pos:end="203:32"><expr pos:start="203:17" pos:end="203:31"><name pos:start="203:17" pos:end="203:22"><name pos:start="203:17" pos:end="203:19">dst</name><index pos:start="203:20" pos:end="203:22">[<expr pos:start="203:21" pos:end="203:21"><name pos:start="203:21" pos:end="203:21">j</name></expr>]</index></name> <operator pos:start="203:24" pos:end="203:24">=</operator> <name pos:start="203:26" pos:end="203:31"><name pos:start="203:26" pos:end="203:28">buf</name><index pos:start="203:29" pos:end="203:31">[<expr pos:start="203:30" pos:end="203:30"><name pos:start="203:30" pos:end="203:30">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:40"><expr pos:start="205:17" pos:end="205:39"><name pos:start="205:17" pos:end="205:23">row_pix</name> <operator pos:start="205:25" pos:end="205:26">+=</operator> <name pos:start="205:28" pos:end="205:39">pix_per_byte</name></expr>;</expr_stmt>

                <if_stmt pos:start="207:17" pos:end="215:17"><if pos:start="207:17" pos:end="215:17">if <condition pos:start="207:20" pos:end="207:44">(<expr pos:start="207:21" pos:end="207:43"><name pos:start="207:21" pos:end="207:27">row_pix</name> <operator pos:start="207:29" pos:end="207:30">&gt;=</operator> <name pos:start="207:32" pos:end="207:43"><name pos:start="207:32" pos:end="207:36">avctx</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:43">width</name></name></expr>)</condition> <block pos:start="207:46" pos:end="215:17">{<block_content pos:start="209:21" pos:end="213:32">

                    <expr_stmt pos:start="209:21" pos:end="209:51"><expr pos:start="209:21" pos:end="209:50"><name pos:start="209:21" pos:end="209:21">i</name> <operator pos:start="209:23" pos:end="209:24">+=</operator> <name pos:start="209:26" pos:end="209:31">stride</name> <operator pos:start="209:33" pos:end="209:33">-</operator> <operator pos:start="209:35" pos:end="209:35">(</operator><name pos:start="209:36" pos:end="209:36">i</name> <operator pos:start="209:38" pos:end="209:38">%</operator> <name pos:start="209:40" pos:end="209:45">stride</name><operator pos:start="209:46" pos:end="209:46">)</operator> <operator pos:start="209:48" pos:end="209:48">-</operator> <literal type="number" pos:start="209:50" pos:end="209:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:43"><expr pos:start="211:21" pos:end="211:42"><name pos:start="211:21" pos:end="211:21">j</name> <operator pos:start="211:23" pos:end="211:24">+=</operator> <literal type="number" pos:start="211:26" pos:end="211:29">16</literal> <operator pos:start="211:29" pos:end="211:29">-</operator> <operator pos:start="211:31" pos:end="211:31">(</operator><name pos:start="211:32" pos:end="211:32">j</name> <operator pos:start="211:34" pos:end="211:34">%</operator> <literal type="number" pos:start="211:36" pos:end="211:37">16</literal><operator pos:start="211:38" pos:end="211:38">)</operator> <operator pos:start="211:40" pos:end="211:40">-</operator> <literal type="number" pos:start="211:42" pos:end="211:42">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:32"><expr pos:start="213:21" pos:end="213:31"><name pos:start="213:21" pos:end="213:27">row_pix</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <literal type="number" pos:start="213:31" pos:end="213:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="219:11" pos:end="241:9">else if <condition pos:start="219:19" pos:end="219:53">(<expr pos:start="219:20" pos:end="219:52"><name pos:start="219:20" pos:end="219:47"><name pos:start="219:20" pos:end="219:24">avctx</name><operator pos:start="219:25" pos:end="219:26">-&gt;</operator><name pos:start="219:27" pos:end="219:47">bits_per_coded_sample</name></name> <operator pos:start="219:49" pos:end="219:50">==</operator> <literal type="number" pos:start="219:52" pos:end="219:52">4</literal></expr>)</condition> <block pos:start="219:55" pos:end="241:9">{<block_content pos:start="221:13" pos:end="239:13">

            <for pos:start="221:13" pos:end="239:13">for <control pos:start="221:17" pos:end="221:79">(<init pos:start="221:18" pos:end="221:30"><expr pos:start="221:18" pos:end="221:22"><name pos:start="221:18" pos:end="221:18">i</name> <operator pos:start="221:20" pos:end="221:20">=</operator> <literal type="number" pos:start="221:22" pos:end="221:22">0</literal></expr><operator pos:start="221:23" pos:end="221:23">,</operator> <expr pos:start="221:25" pos:end="221:29"><name pos:start="221:25" pos:end="221:25">j</name> <operator pos:start="221:27" pos:end="221:27">=</operator> <literal type="number" pos:start="221:29" pos:end="221:29">0</literal></expr>;</init> <condition pos:start="221:32" pos:end="221:69"><expr pos:start="221:32" pos:end="221:68"><literal type="number" pos:start="221:32" pos:end="221:32">2</literal> <operator pos:start="221:34" pos:end="221:34">*</operator> <name pos:start="221:36" pos:end="221:36">j</name> <operator pos:start="221:38" pos:end="221:38">+</operator> <literal type="number" pos:start="221:40" pos:end="221:40">1</literal> <operator pos:start="221:42" pos:end="221:42">&lt;</operator> <name pos:start="221:44" pos:end="221:51">buf_size</name> <operator pos:start="221:53" pos:end="221:54">&amp;&amp;</operator> <name pos:start="221:56" pos:end="221:56">i</name><operator pos:start="221:57" pos:end="221:57">&lt;</operator><name pos:start="221:58" pos:end="221:68"><name pos:start="221:58" pos:end="221:62">avpkt</name><operator pos:start="221:63" pos:end="221:64">-&gt;</operator><name pos:start="221:65" pos:end="221:68">size</name></name></expr>;</condition> <incr pos:start="221:71" pos:end="221:78"><expr pos:start="221:71" pos:end="221:73"><name pos:start="221:71" pos:end="221:71">i</name><operator pos:start="221:72" pos:end="221:73">++</operator></expr><operator pos:start="221:74" pos:end="221:74">,</operator> <expr pos:start="221:76" pos:end="221:78"><name pos:start="221:76" pos:end="221:76">j</name><operator pos:start="221:77" pos:end="221:78">++</operator></expr></incr>)</control> <block pos:start="221:81" pos:end="239:13">{<block_content pos:start="223:17" pos:end="237:17">

                <expr_stmt pos:start="223:17" pos:end="223:45"><expr pos:start="223:17" pos:end="223:44"><name pos:start="223:17" pos:end="223:30"><name pos:start="223:17" pos:end="223:19">dst</name><index pos:start="223:20" pos:end="223:30">[<expr pos:start="223:21" pos:end="223:29"><literal type="number" pos:start="223:21" pos:end="223:21">2</literal> <operator pos:start="223:23" pos:end="223:23">*</operator> <name pos:start="223:25" pos:end="223:25">j</name> <operator pos:start="223:27" pos:end="223:27">+</operator> <literal type="number" pos:start="223:29" pos:end="223:29">0</literal></expr>]</index></name> <operator pos:start="223:32" pos:end="223:32">=</operator> <name pos:start="223:34" pos:end="223:39"><name pos:start="223:34" pos:end="223:36">buf</name><index pos:start="223:37" pos:end="223:39">[<expr pos:start="223:38" pos:end="223:38"><name pos:start="223:38" pos:end="223:38">i</name></expr>]</index></name> <operator pos:start="223:41" pos:end="223:42">&gt;&gt;</operator> <literal type="number" pos:start="223:44" pos:end="223:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:45"><expr pos:start="225:17" pos:end="225:44"><name pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:19">dst</name><index pos:start="225:20" pos:end="225:30">[<expr pos:start="225:21" pos:end="225:29"><literal type="number" pos:start="225:21" pos:end="225:21">2</literal> <operator pos:start="225:23" pos:end="225:23">*</operator> <name pos:start="225:25" pos:end="225:25">j</name> <operator pos:start="225:27" pos:end="225:27">+</operator> <literal type="number" pos:start="225:29" pos:end="225:29">1</literal></expr>]</index></name> <operator pos:start="225:32" pos:end="225:32">=</operator> <name pos:start="225:34" pos:end="225:39"><name pos:start="225:34" pos:end="225:36">buf</name><index pos:start="225:37" pos:end="225:39">[<expr pos:start="225:38" pos:end="225:38"><name pos:start="225:38" pos:end="225:38">i</name></expr>]</index></name> <operator pos:start="225:41" pos:end="225:41">&amp;</operator> <literal type="number" pos:start="225:43" pos:end="225:44">15</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:29"><expr pos:start="227:17" pos:end="227:28"><name pos:start="227:17" pos:end="227:23">row_pix</name> <operator pos:start="227:25" pos:end="227:26">+=</operator> <literal type="number" pos:start="227:28" pos:end="227:28">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="229:17" pos:end="237:17"><if pos:start="229:17" pos:end="237:17">if <condition pos:start="229:20" pos:end="229:44">(<expr pos:start="229:21" pos:end="229:43"><name pos:start="229:21" pos:end="229:27">row_pix</name> <operator pos:start="229:29" pos:end="229:30">&gt;=</operator> <name pos:start="229:32" pos:end="229:43"><name pos:start="229:32" pos:end="229:36">avctx</name><operator pos:start="229:37" pos:end="229:38">-&gt;</operator><name pos:start="229:39" pos:end="229:43">width</name></name></expr>)</condition> <block pos:start="229:46" pos:end="237:17">{<block_content pos:start="231:21" pos:end="235:32">

                    <expr_stmt pos:start="231:21" pos:end="231:51"><expr pos:start="231:21" pos:end="231:50"><name pos:start="231:21" pos:end="231:21">i</name> <operator pos:start="231:23" pos:end="231:24">+=</operator> <name pos:start="231:26" pos:end="231:31">stride</name> <operator pos:start="231:33" pos:end="231:33">-</operator> <operator pos:start="231:35" pos:end="231:35">(</operator><name pos:start="231:36" pos:end="231:36">i</name> <operator pos:start="231:38" pos:end="231:38">%</operator> <name pos:start="231:40" pos:end="231:45">stride</name><operator pos:start="231:46" pos:end="231:46">)</operator> <operator pos:start="231:48" pos:end="231:48">-</operator> <literal type="number" pos:start="231:50" pos:end="231:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:41"><expr pos:start="233:21" pos:end="233:40"><name pos:start="233:21" pos:end="233:21">j</name> <operator pos:start="233:23" pos:end="233:24">+=</operator> <literal type="number" pos:start="233:26" pos:end="233:28">8</literal> <operator pos:start="233:28" pos:end="233:28">-</operator> <operator pos:start="233:30" pos:end="233:30">(</operator><name pos:start="233:31" pos:end="233:31">j</name> <operator pos:start="233:33" pos:end="233:33">%</operator> <literal type="number" pos:start="233:35" pos:end="233:35">8</literal><operator pos:start="233:36" pos:end="233:36">)</operator> <operator pos:start="233:38" pos:end="233:38">-</operator> <literal type="number" pos:start="233:40" pos:end="233:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:32"><expr pos:start="235:21" pos:end="235:31"><name pos:start="235:21" pos:end="235:27">row_pix</name> <operator pos:start="235:29" pos:end="235:29">=</operator> <literal type="number" pos:start="235:31" pos:end="235:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="241:11" pos:end="267:9">else if <condition pos:start="241:19" pos:end="241:53">(<expr pos:start="241:20" pos:end="241:52"><name pos:start="241:20" pos:end="241:47"><name pos:start="241:20" pos:end="241:24">avctx</name><operator pos:start="241:25" pos:end="241:26">-&gt;</operator><name pos:start="241:27" pos:end="241:47">bits_per_coded_sample</name></name> <operator pos:start="241:49" pos:end="241:50">==</operator> <literal type="number" pos:start="241:52" pos:end="241:52">2</literal></expr>)</condition> <block pos:start="241:55" pos:end="267:9">{<block_content pos:start="243:13" pos:end="265:13">

            <for pos:start="243:13" pos:end="265:13">for <control pos:start="243:17" pos:end="243:79">(<init pos:start="243:18" pos:end="243:30"><expr pos:start="243:18" pos:end="243:22"><name pos:start="243:18" pos:end="243:18">i</name> <operator pos:start="243:20" pos:end="243:20">=</operator> <literal type="number" pos:start="243:22" pos:end="243:22">0</literal></expr><operator pos:start="243:23" pos:end="243:23">,</operator> <expr pos:start="243:25" pos:end="243:29"><name pos:start="243:25" pos:end="243:25">j</name> <operator pos:start="243:27" pos:end="243:27">=</operator> <literal type="number" pos:start="243:29" pos:end="243:29">0</literal></expr>;</init> <condition pos:start="243:32" pos:end="243:69"><expr pos:start="243:32" pos:end="243:68"><literal type="number" pos:start="243:32" pos:end="243:32">4</literal> <operator pos:start="243:34" pos:end="243:34">*</operator> <name pos:start="243:36" pos:end="243:36">j</name> <operator pos:start="243:38" pos:end="243:38">+</operator> <literal type="number" pos:start="243:40" pos:end="243:40">3</literal> <operator pos:start="243:42" pos:end="243:42">&lt;</operator> <name pos:start="243:44" pos:end="243:51">buf_size</name> <operator pos:start="243:53" pos:end="243:54">&amp;&amp;</operator> <name pos:start="243:56" pos:end="243:56">i</name><operator pos:start="243:57" pos:end="243:57">&lt;</operator><name pos:start="243:58" pos:end="243:68"><name pos:start="243:58" pos:end="243:62">avpkt</name><operator pos:start="243:63" pos:end="243:64">-&gt;</operator><name pos:start="243:65" pos:end="243:68">size</name></name></expr>;</condition> <incr pos:start="243:71" pos:end="243:78"><expr pos:start="243:71" pos:end="243:73"><name pos:start="243:71" pos:end="243:71">i</name><operator pos:start="243:72" pos:end="243:73">++</operator></expr><operator pos:start="243:74" pos:end="243:74">,</operator> <expr pos:start="243:76" pos:end="243:78"><name pos:start="243:76" pos:end="243:76">j</name><operator pos:start="243:77" pos:end="243:78">++</operator></expr></incr>)</control> <block pos:start="243:81" pos:end="265:13">{<block_content pos:start="245:17" pos:end="263:17">

                <expr_stmt pos:start="245:17" pos:end="245:45"><expr pos:start="245:17" pos:end="245:44"><name pos:start="245:17" pos:end="245:30"><name pos:start="245:17" pos:end="245:19">dst</name><index pos:start="245:20" pos:end="245:30">[<expr pos:start="245:21" pos:end="245:29"><literal type="number" pos:start="245:21" pos:end="245:21">4</literal> <operator pos:start="245:23" pos:end="245:23">*</operator> <name pos:start="245:25" pos:end="245:25">j</name> <operator pos:start="245:27" pos:end="245:27">+</operator> <literal type="number" pos:start="245:29" pos:end="245:29">0</literal></expr>]</index></name> <operator pos:start="245:32" pos:end="245:32">=</operator> <name pos:start="245:34" pos:end="245:39"><name pos:start="245:34" pos:end="245:36">buf</name><index pos:start="245:37" pos:end="245:39">[<expr pos:start="245:38" pos:end="245:38"><name pos:start="245:38" pos:end="245:38">i</name></expr>]</index></name> <operator pos:start="245:41" pos:end="245:42">&gt;&gt;</operator> <literal type="number" pos:start="245:44" pos:end="245:44">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:49"><expr pos:start="247:17" pos:end="247:48"><name pos:start="247:17" pos:end="247:30"><name pos:start="247:17" pos:end="247:19">dst</name><index pos:start="247:20" pos:end="247:30">[<expr pos:start="247:21" pos:end="247:29"><literal type="number" pos:start="247:21" pos:end="247:21">4</literal> <operator pos:start="247:23" pos:end="247:23">*</operator> <name pos:start="247:25" pos:end="247:25">j</name> <operator pos:start="247:27" pos:end="247:27">+</operator> <literal type="number" pos:start="247:29" pos:end="247:29">1</literal></expr>]</index></name> <operator pos:start="247:32" pos:end="247:32">=</operator> <name pos:start="247:34" pos:end="247:39"><name pos:start="247:34" pos:end="247:36">buf</name><index pos:start="247:37" pos:end="247:39">[<expr pos:start="247:38" pos:end="247:38"><name pos:start="247:38" pos:end="247:38">i</name></expr>]</index></name> <operator pos:start="247:41" pos:end="247:42">&gt;&gt;</operator> <literal type="number" pos:start="247:44" pos:end="247:44">4</literal> <operator pos:start="247:46" pos:end="247:46">&amp;</operator> <literal type="number" pos:start="247:48" pos:end="247:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:49"><expr pos:start="249:17" pos:end="249:48"><name pos:start="249:17" pos:end="249:30"><name pos:start="249:17" pos:end="249:19">dst</name><index pos:start="249:20" pos:end="249:30">[<expr pos:start="249:21" pos:end="249:29"><literal type="number" pos:start="249:21" pos:end="249:21">4</literal> <operator pos:start="249:23" pos:end="249:23">*</operator> <name pos:start="249:25" pos:end="249:25">j</name> <operator pos:start="249:27" pos:end="249:27">+</operator> <literal type="number" pos:start="249:29" pos:end="249:29">2</literal></expr>]</index></name> <operator pos:start="249:32" pos:end="249:32">=</operator> <name pos:start="249:34" pos:end="249:39"><name pos:start="249:34" pos:end="249:36">buf</name><index pos:start="249:37" pos:end="249:39">[<expr pos:start="249:38" pos:end="249:38"><name pos:start="249:38" pos:end="249:38">i</name></expr>]</index></name> <operator pos:start="249:41" pos:end="249:42">&gt;&gt;</operator> <literal type="number" pos:start="249:44" pos:end="249:44">2</literal> <operator pos:start="249:46" pos:end="249:46">&amp;</operator> <literal type="number" pos:start="249:48" pos:end="249:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:49"><expr pos:start="251:17" pos:end="251:48"><name pos:start="251:17" pos:end="251:30"><name pos:start="251:17" pos:end="251:19">dst</name><index pos:start="251:20" pos:end="251:30">[<expr pos:start="251:21" pos:end="251:29"><literal type="number" pos:start="251:21" pos:end="251:21">4</literal> <operator pos:start="251:23" pos:end="251:23">*</operator> <name pos:start="251:25" pos:end="251:25">j</name> <operator pos:start="251:27" pos:end="251:27">+</operator> <literal type="number" pos:start="251:29" pos:end="251:29">3</literal></expr>]</index></name> <operator pos:start="251:32" pos:end="251:32">=</operator> <name pos:start="251:34" pos:end="251:39"><name pos:start="251:34" pos:end="251:36">buf</name><index pos:start="251:37" pos:end="251:39">[<expr pos:start="251:38" pos:end="251:38"><name pos:start="251:38" pos:end="251:38">i</name></expr>]</index></name>      <operator pos:start="251:46" pos:end="251:46">&amp;</operator> <literal type="number" pos:start="251:48" pos:end="251:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:29"><expr pos:start="253:17" pos:end="253:28"><name pos:start="253:17" pos:end="253:23">row_pix</name> <operator pos:start="253:25" pos:end="253:26">+=</operator> <literal type="number" pos:start="253:28" pos:end="253:28">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="255:17" pos:end="263:17"><if pos:start="255:17" pos:end="263:17">if <condition pos:start="255:20" pos:end="255:44">(<expr pos:start="255:21" pos:end="255:43"><name pos:start="255:21" pos:end="255:27">row_pix</name> <operator pos:start="255:29" pos:end="255:30">&gt;=</operator> <name pos:start="255:32" pos:end="255:43"><name pos:start="255:32" pos:end="255:36">avctx</name><operator pos:start="255:37" pos:end="255:38">-&gt;</operator><name pos:start="255:39" pos:end="255:43">width</name></name></expr>)</condition> <block pos:start="255:46" pos:end="263:17">{<block_content pos:start="257:21" pos:end="261:32">

                    <expr_stmt pos:start="257:21" pos:end="257:51"><expr pos:start="257:21" pos:end="257:50"><name pos:start="257:21" pos:end="257:21">i</name> <operator pos:start="257:23" pos:end="257:24">+=</operator> <name pos:start="257:26" pos:end="257:31">stride</name> <operator pos:start="257:33" pos:end="257:33">-</operator> <operator pos:start="257:35" pos:end="257:35">(</operator><name pos:start="257:36" pos:end="257:36">i</name> <operator pos:start="257:38" pos:end="257:38">%</operator> <name pos:start="257:40" pos:end="257:45">stride</name><operator pos:start="257:46" pos:end="257:46">)</operator> <operator pos:start="257:48" pos:end="257:48">-</operator> <literal type="number" pos:start="257:50" pos:end="257:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:41"><expr pos:start="259:21" pos:end="259:40"><name pos:start="259:21" pos:end="259:21">j</name> <operator pos:start="259:23" pos:end="259:24">+=</operator> <literal type="number" pos:start="259:26" pos:end="259:28">4</literal> <operator pos:start="259:28" pos:end="259:28">-</operator> <operator pos:start="259:30" pos:end="259:30">(</operator><name pos:start="259:31" pos:end="259:31">j</name> <operator pos:start="259:33" pos:end="259:33">%</operator> <literal type="number" pos:start="259:35" pos:end="259:35">4</literal><operator pos:start="259:36" pos:end="259:36">)</operator> <operator pos:start="259:38" pos:end="259:38">-</operator> <literal type="number" pos:start="259:40" pos:end="259:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:32"><expr pos:start="261:21" pos:end="261:31"><name pos:start="261:21" pos:end="261:27">row_pix</name> <operator pos:start="261:29" pos:end="261:29">=</operator> <literal type="number" pos:start="261:31" pos:end="261:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="267:11" pos:end="303:9">else <block pos:start="267:16" pos:end="303:9">{<block_content pos:start="269:13" pos:end="301:13">

            <expr_stmt pos:start="269:13" pos:end="269:58"><expr pos:start="269:13" pos:end="269:57"><call pos:start="269:13" pos:end="269:57"><name pos:start="269:13" pos:end="269:22">av_assert0</name><argument_list pos:start="269:23" pos:end="269:57">(<argument pos:start="269:24" pos:end="269:56"><expr pos:start="269:24" pos:end="269:56"><name pos:start="269:24" pos:end="269:51"><name pos:start="269:24" pos:end="269:28">avctx</name><operator pos:start="269:29" pos:end="269:30">-&gt;</operator><name pos:start="269:31" pos:end="269:51">bits_per_coded_sample</name></name> <operator pos:start="269:53" pos:end="269:54">==</operator> <literal type="number" pos:start="269:56" pos:end="269:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="271:13" pos:end="301:13">for <control pos:start="271:17" pos:end="271:79">(<init pos:start="271:18" pos:end="271:30"><expr pos:start="271:18" pos:end="271:22"><name pos:start="271:18" pos:end="271:18">i</name> <operator pos:start="271:20" pos:end="271:20">=</operator> <literal type="number" pos:start="271:22" pos:end="271:22">0</literal></expr><operator pos:start="271:23" pos:end="271:23">,</operator> <expr pos:start="271:25" pos:end="271:29"><name pos:start="271:25" pos:end="271:25">j</name> <operator pos:start="271:27" pos:end="271:27">=</operator> <literal type="number" pos:start="271:29" pos:end="271:29">0</literal></expr>;</init> <condition pos:start="271:32" pos:end="271:69"><expr pos:start="271:32" pos:end="271:68"><literal type="number" pos:start="271:32" pos:end="271:32">8</literal> <operator pos:start="271:34" pos:end="271:34">*</operator> <name pos:start="271:36" pos:end="271:36">j</name> <operator pos:start="271:38" pos:end="271:38">+</operator> <literal type="number" pos:start="271:40" pos:end="271:40">7</literal> <operator pos:start="271:42" pos:end="271:42">&lt;</operator> <name pos:start="271:44" pos:end="271:51">buf_size</name> <operator pos:start="271:53" pos:end="271:54">&amp;&amp;</operator> <name pos:start="271:56" pos:end="271:56">i</name><operator pos:start="271:57" pos:end="271:57">&lt;</operator><name pos:start="271:58" pos:end="271:68"><name pos:start="271:58" pos:end="271:62">avpkt</name><operator pos:start="271:63" pos:end="271:64">-&gt;</operator><name pos:start="271:65" pos:end="271:68">size</name></name></expr>;</condition> <incr pos:start="271:71" pos:end="271:78"><expr pos:start="271:71" pos:end="271:73"><name pos:start="271:71" pos:end="271:71">i</name><operator pos:start="271:72" pos:end="271:73">++</operator></expr><operator pos:start="271:74" pos:end="271:74">,</operator> <expr pos:start="271:76" pos:end="271:78"><name pos:start="271:76" pos:end="271:76">j</name><operator pos:start="271:77" pos:end="271:78">++</operator></expr></incr>)</control> <block pos:start="271:81" pos:end="301:13">{<block_content pos:start="273:17" pos:end="299:17">

                <expr_stmt pos:start="273:17" pos:end="273:45"><expr pos:start="273:17" pos:end="273:44"><name pos:start="273:17" pos:end="273:30"><name pos:start="273:17" pos:end="273:19">dst</name><index pos:start="273:20" pos:end="273:30">[<expr pos:start="273:21" pos:end="273:29"><literal type="number" pos:start="273:21" pos:end="273:21">8</literal> <operator pos:start="273:23" pos:end="273:23">*</operator> <name pos:start="273:25" pos:end="273:25">j</name> <operator pos:start="273:27" pos:end="273:27">+</operator> <literal type="number" pos:start="273:29" pos:end="273:29">0</literal></expr>]</index></name> <operator pos:start="273:32" pos:end="273:32">=</operator> <name pos:start="273:34" pos:end="273:39"><name pos:start="273:34" pos:end="273:36">buf</name><index pos:start="273:37" pos:end="273:39">[<expr pos:start="273:38" pos:end="273:38"><name pos:start="273:38" pos:end="273:38">i</name></expr>]</index></name> <operator pos:start="273:41" pos:end="273:42">&gt;&gt;</operator> <literal type="number" pos:start="273:44" pos:end="273:44">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:49"><expr pos:start="275:17" pos:end="275:48"><name pos:start="275:17" pos:end="275:30"><name pos:start="275:17" pos:end="275:19">dst</name><index pos:start="275:20" pos:end="275:30">[<expr pos:start="275:21" pos:end="275:29"><literal type="number" pos:start="275:21" pos:end="275:21">8</literal> <operator pos:start="275:23" pos:end="275:23">*</operator> <name pos:start="275:25" pos:end="275:25">j</name> <operator pos:start="275:27" pos:end="275:27">+</operator> <literal type="number" pos:start="275:29" pos:end="275:29">1</literal></expr>]</index></name> <operator pos:start="275:32" pos:end="275:32">=</operator> <name pos:start="275:34" pos:end="275:39"><name pos:start="275:34" pos:end="275:36">buf</name><index pos:start="275:37" pos:end="275:39">[<expr pos:start="275:38" pos:end="275:38"><name pos:start="275:38" pos:end="275:38">i</name></expr>]</index></name> <operator pos:start="275:41" pos:end="275:42">&gt;&gt;</operator> <literal type="number" pos:start="275:44" pos:end="275:44">6</literal> <operator pos:start="275:46" pos:end="275:46">&amp;</operator> <literal type="number" pos:start="275:48" pos:end="275:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:49"><expr pos:start="277:17" pos:end="277:48"><name pos:start="277:17" pos:end="277:30"><name pos:start="277:17" pos:end="277:19">dst</name><index pos:start="277:20" pos:end="277:30">[<expr pos:start="277:21" pos:end="277:29"><literal type="number" pos:start="277:21" pos:end="277:21">8</literal> <operator pos:start="277:23" pos:end="277:23">*</operator> <name pos:start="277:25" pos:end="277:25">j</name> <operator pos:start="277:27" pos:end="277:27">+</operator> <literal type="number" pos:start="277:29" pos:end="277:29">2</literal></expr>]</index></name> <operator pos:start="277:32" pos:end="277:32">=</operator> <name pos:start="277:34" pos:end="277:39"><name pos:start="277:34" pos:end="277:36">buf</name><index pos:start="277:37" pos:end="277:39">[<expr pos:start="277:38" pos:end="277:38"><name pos:start="277:38" pos:end="277:38">i</name></expr>]</index></name> <operator pos:start="277:41" pos:end="277:42">&gt;&gt;</operator> <literal type="number" pos:start="277:44" pos:end="277:44">5</literal> <operator pos:start="277:46" pos:end="277:46">&amp;</operator> <literal type="number" pos:start="277:48" pos:end="277:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:49"><expr pos:start="279:17" pos:end="279:48"><name pos:start="279:17" pos:end="279:30"><name pos:start="279:17" pos:end="279:19">dst</name><index pos:start="279:20" pos:end="279:30">[<expr pos:start="279:21" pos:end="279:29"><literal type="number" pos:start="279:21" pos:end="279:21">8</literal> <operator pos:start="279:23" pos:end="279:23">*</operator> <name pos:start="279:25" pos:end="279:25">j</name> <operator pos:start="279:27" pos:end="279:27">+</operator> <literal type="number" pos:start="279:29" pos:end="279:29">3</literal></expr>]</index></name> <operator pos:start="279:32" pos:end="279:32">=</operator> <name pos:start="279:34" pos:end="279:39"><name pos:start="279:34" pos:end="279:36">buf</name><index pos:start="279:37" pos:end="279:39">[<expr pos:start="279:38" pos:end="279:38"><name pos:start="279:38" pos:end="279:38">i</name></expr>]</index></name> <operator pos:start="279:41" pos:end="279:42">&gt;&gt;</operator> <literal type="number" pos:start="279:44" pos:end="279:44">4</literal> <operator pos:start="279:46" pos:end="279:46">&amp;</operator> <literal type="number" pos:start="279:48" pos:end="279:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:49"><expr pos:start="281:17" pos:end="281:48"><name pos:start="281:17" pos:end="281:30"><name pos:start="281:17" pos:end="281:19">dst</name><index pos:start="281:20" pos:end="281:30">[<expr pos:start="281:21" pos:end="281:29"><literal type="number" pos:start="281:21" pos:end="281:21">8</literal> <operator pos:start="281:23" pos:end="281:23">*</operator> <name pos:start="281:25" pos:end="281:25">j</name> <operator pos:start="281:27" pos:end="281:27">+</operator> <literal type="number" pos:start="281:29" pos:end="281:29">4</literal></expr>]</index></name> <operator pos:start="281:32" pos:end="281:32">=</operator> <name pos:start="281:34" pos:end="281:39"><name pos:start="281:34" pos:end="281:36">buf</name><index pos:start="281:37" pos:end="281:39">[<expr pos:start="281:38" pos:end="281:38"><name pos:start="281:38" pos:end="281:38">i</name></expr>]</index></name> <operator pos:start="281:41" pos:end="281:42">&gt;&gt;</operator> <literal type="number" pos:start="281:44" pos:end="281:44">3</literal> <operator pos:start="281:46" pos:end="281:46">&amp;</operator> <literal type="number" pos:start="281:48" pos:end="281:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:49"><expr pos:start="283:17" pos:end="283:48"><name pos:start="283:17" pos:end="283:30"><name pos:start="283:17" pos:end="283:19">dst</name><index pos:start="283:20" pos:end="283:30">[<expr pos:start="283:21" pos:end="283:29"><literal type="number" pos:start="283:21" pos:end="283:21">8</literal> <operator pos:start="283:23" pos:end="283:23">*</operator> <name pos:start="283:25" pos:end="283:25">j</name> <operator pos:start="283:27" pos:end="283:27">+</operator> <literal type="number" pos:start="283:29" pos:end="283:29">5</literal></expr>]</index></name> <operator pos:start="283:32" pos:end="283:32">=</operator> <name pos:start="283:34" pos:end="283:39"><name pos:start="283:34" pos:end="283:36">buf</name><index pos:start="283:37" pos:end="283:39">[<expr pos:start="283:38" pos:end="283:38"><name pos:start="283:38" pos:end="283:38">i</name></expr>]</index></name> <operator pos:start="283:41" pos:end="283:42">&gt;&gt;</operator> <literal type="number" pos:start="283:44" pos:end="283:44">2</literal> <operator pos:start="283:46" pos:end="283:46">&amp;</operator> <literal type="number" pos:start="283:48" pos:end="283:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:49"><expr pos:start="285:17" pos:end="285:48"><name pos:start="285:17" pos:end="285:30"><name pos:start="285:17" pos:end="285:19">dst</name><index pos:start="285:20" pos:end="285:30">[<expr pos:start="285:21" pos:end="285:29"><literal type="number" pos:start="285:21" pos:end="285:21">8</literal> <operator pos:start="285:23" pos:end="285:23">*</operator> <name pos:start="285:25" pos:end="285:25">j</name> <operator pos:start="285:27" pos:end="285:27">+</operator> <literal type="number" pos:start="285:29" pos:end="285:29">6</literal></expr>]</index></name> <operator pos:start="285:32" pos:end="285:32">=</operator> <name pos:start="285:34" pos:end="285:39"><name pos:start="285:34" pos:end="285:36">buf</name><index pos:start="285:37" pos:end="285:39">[<expr pos:start="285:38" pos:end="285:38"><name pos:start="285:38" pos:end="285:38">i</name></expr>]</index></name> <operator pos:start="285:41" pos:end="285:42">&gt;&gt;</operator> <literal type="number" pos:start="285:44" pos:end="285:44">1</literal> <operator pos:start="285:46" pos:end="285:46">&amp;</operator> <literal type="number" pos:start="285:48" pos:end="285:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:49"><expr pos:start="287:17" pos:end="287:48"><name pos:start="287:17" pos:end="287:30"><name pos:start="287:17" pos:end="287:19">dst</name><index pos:start="287:20" pos:end="287:30">[<expr pos:start="287:21" pos:end="287:29"><literal type="number" pos:start="287:21" pos:end="287:21">8</literal> <operator pos:start="287:23" pos:end="287:23">*</operator> <name pos:start="287:25" pos:end="287:25">j</name> <operator pos:start="287:27" pos:end="287:27">+</operator> <literal type="number" pos:start="287:29" pos:end="287:29">7</literal></expr>]</index></name> <operator pos:start="287:32" pos:end="287:32">=</operator> <name pos:start="287:34" pos:end="287:39"><name pos:start="287:34" pos:end="287:36">buf</name><index pos:start="287:37" pos:end="287:39">[<expr pos:start="287:38" pos:end="287:38"><name pos:start="287:38" pos:end="287:38">i</name></expr>]</index></name>      <operator pos:start="287:46" pos:end="287:46">&amp;</operator> <literal type="number" pos:start="287:48" pos:end="287:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:29"><expr pos:start="289:17" pos:end="289:28"><name pos:start="289:17" pos:end="289:23">row_pix</name> <operator pos:start="289:25" pos:end="289:26">+=</operator> <literal type="number" pos:start="289:28" pos:end="289:28">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="299:17"><if pos:start="291:17" pos:end="299:17">if <condition pos:start="291:20" pos:end="291:44">(<expr pos:start="291:21" pos:end="291:43"><name pos:start="291:21" pos:end="291:27">row_pix</name> <operator pos:start="291:29" pos:end="291:30">&gt;=</operator> <name pos:start="291:32" pos:end="291:43"><name pos:start="291:32" pos:end="291:36">avctx</name><operator pos:start="291:37" pos:end="291:38">-&gt;</operator><name pos:start="291:39" pos:end="291:43">width</name></name></expr>)</condition> <block pos:start="291:46" pos:end="299:17">{<block_content pos:start="293:21" pos:end="297:32">

                    <expr_stmt pos:start="293:21" pos:end="293:51"><expr pos:start="293:21" pos:end="293:50"><name pos:start="293:21" pos:end="293:21">i</name> <operator pos:start="293:23" pos:end="293:24">+=</operator> <name pos:start="293:26" pos:end="293:31">stride</name> <operator pos:start="293:33" pos:end="293:33">-</operator> <operator pos:start="293:35" pos:end="293:35">(</operator><name pos:start="293:36" pos:end="293:36">i</name> <operator pos:start="293:38" pos:end="293:38">%</operator> <name pos:start="293:40" pos:end="293:45">stride</name><operator pos:start="293:46" pos:end="293:46">)</operator> <operator pos:start="293:48" pos:end="293:48">-</operator> <literal type="number" pos:start="293:50" pos:end="293:50">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="295:21" pos:end="295:41"><expr pos:start="295:21" pos:end="295:40"><name pos:start="295:21" pos:end="295:21">j</name> <operator pos:start="295:23" pos:end="295:24">+=</operator> <literal type="number" pos:start="295:26" pos:end="295:28">2</literal> <operator pos:start="295:28" pos:end="295:28">-</operator> <operator pos:start="295:30" pos:end="295:30">(</operator><name pos:start="295:31" pos:end="295:31">j</name> <operator pos:start="295:33" pos:end="295:33">%</operator> <literal type="number" pos:start="295:35" pos:end="295:35">2</literal><operator pos:start="295:36" pos:end="295:36">)</operator> <operator pos:start="295:38" pos:end="295:38">-</operator> <literal type="number" pos:start="295:40" pos:end="295:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:32"><expr pos:start="297:21" pos:end="297:31"><name pos:start="297:21" pos:end="297:27">row_pix</name> <operator pos:start="297:29" pos:end="297:29">=</operator> <literal type="number" pos:start="297:31" pos:end="297:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:28"><expr pos:start="305:9" pos:end="305:27"><name pos:start="305:9" pos:end="305:22">linesize_align</name> <operator pos:start="305:24" pos:end="305:24">=</operator> <literal type="number" pos:start="305:26" pos:end="305:27">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:18"><expr pos:start="307:9" pos:end="307:17"><name pos:start="307:9" pos:end="307:11">buf</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <name pos:start="307:15" pos:end="307:17">dst</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="309:7" pos:end="357:5">else if <condition pos:start="309:15" pos:end="309:36">(<expr pos:start="309:16" pos:end="309:35"><name pos:start="309:16" pos:end="309:35"><name pos:start="309:16" pos:end="309:22">context</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:35">is_lt_16bpp</name></name></expr>)</condition> <block pos:start="309:38" pos:end="357:5">{<block_content pos:start="311:9" pos:end="355:18">

        <decl_stmt pos:start="311:9" pos:end="311:43"><decl pos:start="311:9" pos:end="311:42"><type pos:start="311:9" pos:end="311:17"><name pos:start="311:9" pos:end="311:15">uint8_t</name> <modifier pos:start="311:17" pos:end="311:17">*</modifier></type><name pos:start="311:18" pos:end="311:20">dst</name> <init pos:start="311:22" pos:end="311:42">= <expr pos:start="311:24" pos:end="311:42"><name pos:start="311:24" pos:end="311:36"><name pos:start="311:24" pos:end="311:28">frame</name><operator pos:start="311:29" pos:end="311:30">-&gt;</operator><name pos:start="311:31" pos:end="311:33">buf</name><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><literal type="number" pos:start="311:35" pos:end="311:35">0</literal></expr>]</index></name><operator pos:start="311:37" pos:end="311:38">-&gt;</operator><name pos:start="311:39" pos:end="311:42">data</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="313:9" pos:end="313:76"><decl pos:start="313:9" pos:end="313:75"><type pos:start="313:9" pos:end="313:11"><name pos:start="313:9" pos:end="313:11">int</name></type> <name pos:start="313:13" pos:end="313:18">packed</name> <init pos:start="313:20" pos:end="313:75">= <expr pos:start="313:22" pos:end="313:75"><operator pos:start="313:22" pos:end="313:22">(</operator><name pos:start="313:23" pos:end="313:38"><name pos:start="313:23" pos:end="313:27">avctx</name><operator pos:start="313:28" pos:end="313:29">-&gt;</operator><name pos:start="313:30" pos:end="313:38">codec_tag</name></name> <operator pos:start="313:40" pos:end="313:40">&amp;</operator> <literal type="number" pos:start="313:42" pos:end="313:49">0xFFFFFF</literal><operator pos:start="313:50" pos:end="313:50">)</operator> <operator pos:start="313:52" pos:end="313:53">==</operator> <call pos:start="313:55" pos:end="313:75"><name pos:start="313:55" pos:end="313:59">MKTAG</name><argument_list pos:start="313:60" pos:end="313:75">(<argument pos:start="313:61" pos:end="313:63"><expr pos:start="313:61" pos:end="313:63"><literal type="char" pos:start="313:61" pos:end="313:63">'B'</literal></expr></argument>,<argument pos:start="313:65" pos:end="313:67"><expr pos:start="313:65" pos:end="313:67"><literal type="char" pos:start="313:65" pos:end="313:67">'I'</literal></expr></argument>,<argument pos:start="313:69" pos:end="313:71"><expr pos:start="313:69" pos:end="313:71"><literal type="char" pos:start="313:69" pos:end="313:71">'T'</literal></expr></argument>, <argument pos:start="313:74" pos:end="313:74"><expr pos:start="313:74" pos:end="313:74"><literal type="number" pos:start="313:74" pos:end="313:74">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="315:9" pos:end="315:45"><decl pos:start="315:9" pos:end="315:44"><type pos:start="315:9" pos:end="315:11"><name pos:start="315:9" pos:end="315:11">int</name></type> <name pos:start="315:13" pos:end="315:16">swap</name>   <init pos:start="315:20" pos:end="315:44">=  <expr pos:start="315:23" pos:end="315:44"><name pos:start="315:23" pos:end="315:38"><name pos:start="315:23" pos:end="315:27">avctx</name><operator pos:start="315:28" pos:end="315:29">-&gt;</operator><name pos:start="315:30" pos:end="315:38">codec_tag</name></name> <operator pos:start="315:40" pos:end="315:41">&gt;&gt;</operator> <literal type="number" pos:start="315:43" pos:end="315:44">24</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="319:9" pos:end="341:9"><if pos:start="319:9" pos:end="341:9">if <condition pos:start="319:12" pos:end="319:27">(<expr pos:start="319:13" pos:end="319:26"><name pos:start="319:13" pos:end="319:18">packed</name> <operator pos:start="319:20" pos:end="319:21">&amp;&amp;</operator> <name pos:start="319:23" pos:end="319:26">swap</name></expr>)</condition> <block pos:start="319:29" pos:end="341:9">{<block_content pos:start="321:13" pos:end="339:41">

            <expr_stmt pos:start="321:13" pos:end="321:99"><expr pos:start="321:13" pos:end="321:98"><call pos:start="321:13" pos:end="321:98"><name pos:start="321:13" pos:end="321:33">av_fast_padded_malloc</name><argument_list pos:start="321:34" pos:end="321:98">(<argument pos:start="321:35" pos:end="321:57"><expr pos:start="321:35" pos:end="321:57"><operator pos:start="321:35" pos:end="321:35">&amp;</operator><name pos:start="321:36" pos:end="321:57"><name pos:start="321:36" pos:end="321:42">context</name><operator pos:start="321:43" pos:end="321:44">-&gt;</operator><name pos:start="321:45" pos:end="321:57">bitstream_buf</name></name></expr></argument>, <argument pos:start="321:60" pos:end="321:87"><expr pos:start="321:60" pos:end="321:87"><operator pos:start="321:60" pos:end="321:60">&amp;</operator><name pos:start="321:61" pos:end="321:87"><name pos:start="321:61" pos:end="321:67">context</name><operator pos:start="321:68" pos:end="321:69">-&gt;</operator><name pos:start="321:70" pos:end="321:87">bitstream_buf_size</name></name></expr></argument>, <argument pos:start="321:90" pos:end="321:97"><expr pos:start="321:90" pos:end="321:97"><name pos:start="321:90" pos:end="321:97">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="325:39"><if pos:start="323:13" pos:end="325:39">if <condition pos:start="323:16" pos:end="323:40">(<expr pos:start="323:17" pos:end="323:39"><operator pos:start="323:17" pos:end="323:17">!</operator><name pos:start="323:18" pos:end="323:39"><name pos:start="323:18" pos:end="323:24">context</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:39">bitstream_buf</name></name></expr>)</condition><block type="pseudo" pos:start="325:17" pos:end="325:39"><block_content pos:start="325:17" pos:end="325:39">

                <return pos:start="325:17" pos:end="325:39">return <expr pos:start="325:24" pos:end="325:38"><call pos:start="325:24" pos:end="325:38"><name pos:start="325:24" pos:end="325:30">AVERROR</name><argument_list pos:start="325:31" pos:end="325:38">(<argument pos:start="325:32" pos:end="325:37"><expr pos:start="325:32" pos:end="325:37"><name pos:start="325:32" pos:end="325:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="327:13" pos:end="337:43"><if pos:start="327:13" pos:end="329:103">if <condition pos:start="327:16" pos:end="327:27">(<expr pos:start="327:17" pos:end="327:26"><name pos:start="327:17" pos:end="327:20">swap</name> <operator pos:start="327:22" pos:end="327:23">==</operator> <literal type="number" pos:start="327:25" pos:end="327:26">16</literal></expr>)</condition><block type="pseudo" pos:start="329:17" pos:end="329:103"><block_content pos:start="329:17" pos:end="329:103">

                <expr_stmt pos:start="329:17" pos:end="329:103"><expr pos:start="329:17" pos:end="329:102"><call pos:start="329:17" pos:end="329:102"><name pos:start="329:17" pos:end="329:42"><name pos:start="329:17" pos:end="329:23">context</name><operator pos:start="329:24" pos:end="329:25">-&gt;</operator><name pos:start="329:26" pos:end="329:30">bbdsp</name><operator pos:start="329:31" pos:end="329:31">.</operator><name pos:start="329:32" pos:end="329:42">bswap16_buf</name></name><argument_list pos:start="329:43" pos:end="329:102">(<argument pos:start="329:44" pos:end="329:65"><expr pos:start="329:44" pos:end="329:65"><name pos:start="329:44" pos:end="329:65"><name pos:start="329:44" pos:end="329:50">context</name><operator pos:start="329:51" pos:end="329:52">-&gt;</operator><name pos:start="329:53" pos:end="329:65">bitstream_buf</name></name></expr></argument>, <argument pos:start="329:68" pos:end="329:87"><expr pos:start="329:68" pos:end="329:87"><operator pos:start="329:68" pos:end="329:68">(</operator><specifier pos:start="329:69" pos:end="329:73">const</specifier> <name pos:start="329:75" pos:end="329:82">uint16_t</name><operator pos:start="329:83" pos:end="329:83">*</operator><operator pos:start="329:84" pos:end="329:84">)</operator><name pos:start="329:85" pos:end="329:87">buf</name></expr></argument>, <argument pos:start="329:90" pos:end="329:101"><expr pos:start="329:90" pos:end="329:101"><name pos:start="329:90" pos:end="329:97">buf_size</name> <operator pos:start="329:99" pos:end="329:99">/</operator> <literal type="number" pos:start="329:101" pos:end="329:101">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="331:13" pos:end="333:101">else if <condition pos:start="331:21" pos:end="331:32">(<expr pos:start="331:22" pos:end="331:31"><name pos:start="331:22" pos:end="331:25">swap</name> <operator pos:start="331:27" pos:end="331:28">==</operator> <literal type="number" pos:start="331:30" pos:end="331:31">32</literal></expr>)</condition><block type="pseudo" pos:start="333:17" pos:end="333:101"><block_content pos:start="333:17" pos:end="333:101">

                <expr_stmt pos:start="333:17" pos:end="333:101"><expr pos:start="333:17" pos:end="333:100"><call pos:start="333:17" pos:end="333:100"><name pos:start="333:17" pos:end="333:40"><name pos:start="333:17" pos:end="333:23">context</name><operator pos:start="333:24" pos:end="333:25">-&gt;</operator><name pos:start="333:26" pos:end="333:30">bbdsp</name><operator pos:start="333:31" pos:end="333:31">.</operator><name pos:start="333:32" pos:end="333:40">bswap_buf</name></name><argument_list pos:start="333:41" pos:end="333:100">(<argument pos:start="333:42" pos:end="333:63"><expr pos:start="333:42" pos:end="333:63"><name pos:start="333:42" pos:end="333:63"><name pos:start="333:42" pos:end="333:48">context</name><operator pos:start="333:49" pos:end="333:50">-&gt;</operator><name pos:start="333:51" pos:end="333:63">bitstream_buf</name></name></expr></argument>, <argument pos:start="333:66" pos:end="333:85"><expr pos:start="333:66" pos:end="333:85"><operator pos:start="333:66" pos:end="333:66">(</operator><specifier pos:start="333:67" pos:end="333:71">const</specifier> <name pos:start="333:73" pos:end="333:80">uint32_t</name><operator pos:start="333:81" pos:end="333:81">*</operator><operator pos:start="333:82" pos:end="333:82">)</operator><name pos:start="333:83" pos:end="333:85">buf</name></expr></argument>, <argument pos:start="333:88" pos:end="333:99"><expr pos:start="333:88" pos:end="333:99"><name pos:start="333:88" pos:end="333:95">buf_size</name> <operator pos:start="333:97" pos:end="333:97">/</operator> <literal type="number" pos:start="333:99" pos:end="333:99">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="335:13" pos:end="337:43">else<block type="pseudo" pos:start="337:17" pos:end="337:43"><block_content pos:start="337:17" pos:end="337:43">

                <return pos:start="337:17" pos:end="337:43">return <expr pos:start="337:24" pos:end="337:42"><name pos:start="337:24" pos:end="337:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:41"><expr pos:start="339:13" pos:end="339:40"><name pos:start="339:13" pos:end="339:15">buf</name> <operator pos:start="339:17" pos:end="339:17">=</operator> <name pos:start="339:19" pos:end="339:40"><name pos:start="339:19" pos:end="339:25">context</name><operator pos:start="339:26" pos:end="339:27">-&gt;</operator><name pos:start="339:28" pos:end="339:40">bitstream_buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="345:9" pos:end="351:57"><if pos:start="345:9" pos:end="347:57">if <condition pos:start="345:12" pos:end="345:45">(<expr pos:start="345:13" pos:end="345:44"><name pos:start="345:13" pos:end="345:23"><name pos:start="345:13" pos:end="345:16">desc</name><operator pos:start="345:17" pos:end="345:18">-&gt;</operator><name pos:start="345:19" pos:end="345:23">flags</name></name> <operator pos:start="345:25" pos:end="345:25">&amp;</operator> <name pos:start="345:27" pos:end="345:44">AV_PIX_FMT_FLAG_BE</name></expr>)</condition><block type="pseudo" pos:start="347:13" pos:end="347:57"><block_content pos:start="347:13" pos:end="347:57">

            <expr_stmt pos:start="347:13" pos:end="347:57"><expr pos:start="347:13" pos:end="347:56"><call pos:start="347:13" pos:end="347:56"><name pos:start="347:13" pos:end="347:21">scale16be</name><argument_list pos:start="347:22" pos:end="347:56">(<argument pos:start="347:23" pos:end="347:27"><expr pos:start="347:23" pos:end="347:27"><name pos:start="347:23" pos:end="347:27">avctx</name></expr></argument>, <argument pos:start="347:30" pos:end="347:32"><expr pos:start="347:30" pos:end="347:32"><name pos:start="347:30" pos:end="347:32">dst</name></expr></argument>, <argument pos:start="347:35" pos:end="347:37"><expr pos:start="347:35" pos:end="347:37"><name pos:start="347:35" pos:end="347:37">buf</name></expr></argument>, <argument pos:start="347:40" pos:end="347:47"><expr pos:start="347:40" pos:end="347:47"><name pos:start="347:40" pos:end="347:47">buf_size</name></expr></argument>, <argument pos:start="347:50" pos:end="347:55"><expr pos:start="347:50" pos:end="347:55"><name pos:start="347:50" pos:end="347:55">packed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="349:9" pos:end="351:57">else<block type="pseudo" pos:start="351:13" pos:end="351:57"><block_content pos:start="351:13" pos:end="351:57">

            <expr_stmt pos:start="351:13" pos:end="351:57"><expr pos:start="351:13" pos:end="351:56"><call pos:start="351:13" pos:end="351:56"><name pos:start="351:13" pos:end="351:21">scale16le</name><argument_list pos:start="351:22" pos:end="351:56">(<argument pos:start="351:23" pos:end="351:27"><expr pos:start="351:23" pos:end="351:27"><name pos:start="351:23" pos:end="351:27">avctx</name></expr></argument>, <argument pos:start="351:30" pos:end="351:32"><expr pos:start="351:30" pos:end="351:32"><name pos:start="351:30" pos:end="351:32">dst</name></expr></argument>, <argument pos:start="351:35" pos:end="351:37"><expr pos:start="351:35" pos:end="351:37"><name pos:start="351:35" pos:end="351:37">buf</name></expr></argument>, <argument pos:start="351:40" pos:end="351:47"><expr pos:start="351:40" pos:end="351:47"><name pos:start="351:40" pos:end="351:47">buf_size</name></expr></argument>, <argument pos:start="351:50" pos:end="351:55"><expr pos:start="351:50" pos:end="351:55"><name pos:start="351:50" pos:end="351:55">packed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="355:9" pos:end="355:18"><expr pos:start="355:9" pos:end="355:17"><name pos:start="355:9" pos:end="355:11">buf</name> <operator pos:start="355:13" pos:end="355:13">=</operator> <name pos:start="355:15" pos:end="355:17">dst</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="357:7" pos:end="363:5">else if <condition pos:start="357:15" pos:end="357:25">(<expr pos:start="357:16" pos:end="357:24"><name pos:start="357:16" pos:end="357:24">need_copy</name></expr>)</condition> <block pos:start="357:27" pos:end="363:5">{<block_content pos:start="359:9" pos:end="361:34">

        <expr_stmt pos:start="359:9" pos:end="359:51"><expr pos:start="359:9" pos:end="359:50"><call pos:start="359:9" pos:end="359:50"><name pos:start="359:9" pos:end="359:14">memcpy</name><argument_list pos:start="359:15" pos:end="359:50">(<argument pos:start="359:16" pos:end="359:34"><expr pos:start="359:16" pos:end="359:34"><name pos:start="359:16" pos:end="359:28"><name pos:start="359:16" pos:end="359:20">frame</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:25">buf</name><index pos:start="359:26" pos:end="359:28">[<expr pos:start="359:27" pos:end="359:27"><literal type="number" pos:start="359:27" pos:end="359:27">0</literal></expr>]</index></name><operator pos:start="359:29" pos:end="359:30">-&gt;</operator><name pos:start="359:31" pos:end="359:34">data</name></expr></argument>, <argument pos:start="359:37" pos:end="359:39"><expr pos:start="359:37" pos:end="359:39"><name pos:start="359:37" pos:end="359:39">buf</name></expr></argument>, <argument pos:start="359:42" pos:end="359:49"><expr pos:start="359:42" pos:end="359:49"><name pos:start="359:42" pos:end="359:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:34"><expr pos:start="361:9" pos:end="361:33"><name pos:start="361:9" pos:end="361:11">buf</name> <operator pos:start="361:13" pos:end="361:13">=</operator> <name pos:start="361:15" pos:end="361:27"><name pos:start="361:15" pos:end="361:19">frame</name><operator pos:start="361:20" pos:end="361:21">-&gt;</operator><name pos:start="361:22" pos:end="361:24">buf</name><index pos:start="361:25" pos:end="361:27">[<expr pos:start="361:26" pos:end="361:26"><literal type="number" pos:start="361:26" pos:end="361:26">0</literal></expr>]</index></name><operator pos:start="361:28" pos:end="361:29">-&gt;</operator><name pos:start="361:30" pos:end="361:33">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="371:46"><if pos:start="367:5" pos:end="371:46">if <condition pos:start="367:8" pos:end="369:54">(<expr pos:start="367:9" pos:end="369:53"><name pos:start="367:9" pos:end="367:24"><name pos:start="367:9" pos:end="367:13">avctx</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:24">codec_tag</name></name> <operator pos:start="367:26" pos:end="367:27">==</operator> <call pos:start="367:29" pos:end="367:53"><name pos:start="367:29" pos:end="367:33">MKTAG</name><argument_list pos:start="367:34" pos:end="367:53">(<argument pos:start="367:35" pos:end="367:37"><expr pos:start="367:35" pos:end="367:37"><literal type="char" pos:start="367:35" pos:end="367:37">'A'</literal></expr></argument>, <argument pos:start="367:40" pos:end="367:42"><expr pos:start="367:40" pos:end="367:42"><literal type="char" pos:start="367:40" pos:end="367:42">'V'</literal></expr></argument>, <argument pos:start="367:45" pos:end="367:47"><expr pos:start="367:45" pos:end="367:47"><literal type="char" pos:start="367:45" pos:end="367:47">'1'</literal></expr></argument>, <argument pos:start="367:50" pos:end="367:52"><expr pos:start="367:50" pos:end="367:52"><literal type="char" pos:start="367:50" pos:end="367:52">'x'</literal></expr></argument>)</argument_list></call> <operator pos:start="367:55" pos:end="367:56">||</operator>

        <name pos:start="369:9" pos:end="369:24"><name pos:start="369:9" pos:end="369:13">avctx</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:24">codec_tag</name></name> <operator pos:start="369:26" pos:end="369:27">==</operator> <call pos:start="369:29" pos:end="369:53"><name pos:start="369:29" pos:end="369:33">MKTAG</name><argument_list pos:start="369:34" pos:end="369:53">(<argument pos:start="369:35" pos:end="369:37"><expr pos:start="369:35" pos:end="369:37"><literal type="char" pos:start="369:35" pos:end="369:37">'A'</literal></expr></argument>, <argument pos:start="369:40" pos:end="369:42"><expr pos:start="369:40" pos:end="369:42"><literal type="char" pos:start="369:40" pos:end="369:42">'V'</literal></expr></argument>, <argument pos:start="369:45" pos:end="369:47"><expr pos:start="369:45" pos:end="369:47"><literal type="char" pos:start="369:45" pos:end="369:47">'u'</literal></expr></argument>, <argument pos:start="369:50" pos:end="369:52"><expr pos:start="369:50" pos:end="369:52"><literal type="char" pos:start="369:50" pos:end="369:52">'p'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="371:9" pos:end="371:46"><block_content pos:start="371:9" pos:end="371:46">

        <expr_stmt pos:start="371:9" pos:end="371:46"><expr pos:start="371:9" pos:end="371:45"><name pos:start="371:9" pos:end="371:11">buf</name> <operator pos:start="371:13" pos:end="371:14">+=</operator> <name pos:start="371:16" pos:end="371:23">buf_size</name> <operator pos:start="371:25" pos:end="371:25">-</operator> <name pos:start="371:27" pos:end="371:45"><name pos:start="371:27" pos:end="371:33">context</name><operator pos:start="371:34" pos:end="371:35">-&gt;</operator><name pos:start="371:36" pos:end="371:45">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="375:5" pos:end="375:87"><expr pos:start="375:5" pos:end="375:86"><name pos:start="375:5" pos:end="375:7">len</name> <operator pos:start="375:9" pos:end="375:9">=</operator> <name pos:start="375:11" pos:end="375:29"><name pos:start="375:11" pos:end="375:17">context</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:29">frame_size</name></name> <operator pos:start="375:31" pos:end="375:31">-</operator> <operator pos:start="375:33" pos:end="375:33">(</operator><ternary pos:start="375:34" pos:end="375:85"><condition pos:start="375:34" pos:end="375:66"><expr pos:start="375:34" pos:end="375:64"><name pos:start="375:34" pos:end="375:47"><name pos:start="375:34" pos:end="375:38">avctx</name><operator pos:start="375:39" pos:end="375:40">-&gt;</operator><name pos:start="375:41" pos:end="375:47">pix_fmt</name></name><operator pos:start="375:48" pos:end="375:49">==</operator><name pos:start="375:50" pos:end="375:64">AV_PIX_FMT_PAL8</name></expr> ?</condition><then pos:start="375:68" pos:end="375:81"> <expr pos:start="375:68" pos:end="375:81"><name pos:start="375:68" pos:end="375:81">AVPALETTE_SIZE</name></expr> </then><else pos:start="375:83" pos:end="375:85">: <expr pos:start="375:85" pos:end="375:85"><literal type="number" pos:start="375:85" pos:end="375:85">0</literal></expr></else></ternary><operator pos:start="375:86" pos:end="375:86">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="377:5" pos:end="385:5"><if pos:start="377:5" pos:end="385:5">if <condition pos:start="377:8" pos:end="377:97">(<expr pos:start="377:9" pos:end="377:96"><name pos:start="377:9" pos:end="377:16">buf_size</name> <operator pos:start="377:18" pos:end="377:18">&lt;</operator> <name pos:start="377:20" pos:end="377:22">len</name> <operator pos:start="377:24" pos:end="377:25">&amp;&amp;</operator> <operator pos:start="377:27" pos:end="377:27">(</operator><operator pos:start="377:28" pos:end="377:28">(</operator><name pos:start="377:29" pos:end="377:44"><name pos:start="377:29" pos:end="377:33">avctx</name><operator pos:start="377:34" pos:end="377:35">-&gt;</operator><name pos:start="377:36" pos:end="377:44">codec_tag</name></name> <operator pos:start="377:46" pos:end="377:46">&amp;</operator> <literal type="number" pos:start="377:48" pos:end="377:55">0xFFFFFF</literal><operator pos:start="377:56" pos:end="377:56">)</operator> <operator pos:start="377:58" pos:end="377:59">!=</operator> <call pos:start="377:61" pos:end="377:81"><name pos:start="377:61" pos:end="377:65">MKTAG</name><argument_list pos:start="377:66" pos:end="377:81">(<argument pos:start="377:67" pos:end="377:69"><expr pos:start="377:67" pos:end="377:69"><literal type="char" pos:start="377:67" pos:end="377:69">'B'</literal></expr></argument>,<argument pos:start="377:71" pos:end="377:73"><expr pos:start="377:71" pos:end="377:73"><literal type="char" pos:start="377:71" pos:end="377:73">'I'</literal></expr></argument>,<argument pos:start="377:75" pos:end="377:77"><expr pos:start="377:75" pos:end="377:77"><literal type="char" pos:start="377:75" pos:end="377:77">'T'</literal></expr></argument>, <argument pos:start="377:80" pos:end="377:80"><expr pos:start="377:80" pos:end="377:80"><literal type="number" pos:start="377:80" pos:end="377:80">0</literal></expr></argument>)</argument_list></call> <operator pos:start="377:83" pos:end="377:84">||</operator> <operator pos:start="377:86" pos:end="377:86">!</operator><name pos:start="377:87" pos:end="377:95">need_copy</name><operator pos:start="377:96" pos:end="377:96">)</operator></expr>)</condition> <block pos:start="377:99" pos:end="385:5">{<block_content pos:start="379:9" pos:end="383:31">

        <expr_stmt pos:start="379:9" pos:end="379:117"><expr pos:start="379:9" pos:end="379:116"><call pos:start="379:9" pos:end="379:116"><name pos:start="379:9" pos:end="379:14">av_log</name><argument_list pos:start="379:15" pos:end="379:116">(<argument pos:start="379:16" pos:end="379:20"><expr pos:start="379:16" pos:end="379:20"><name pos:start="379:16" pos:end="379:20">avctx</name></expr></argument>, <argument pos:start="379:23" pos:end="379:34"><expr pos:start="379:23" pos:end="379:34"><name pos:start="379:23" pos:end="379:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="379:37" pos:end="379:100"><expr pos:start="379:37" pos:end="379:100"><literal type="string" pos:start="379:37" pos:end="379:100">"Invalid buffer size, packet size %d &lt; expected frame_size %d\n"</literal></expr></argument>, <argument pos:start="379:103" pos:end="379:110"><expr pos:start="379:103" pos:end="379:110"><name pos:start="379:103" pos:end="379:110">buf_size</name></expr></argument>, <argument pos:start="379:113" pos:end="379:115"><expr pos:start="379:113" pos:end="379:115"><name pos:start="379:113" pos:end="379:115">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:40"><expr pos:start="381:9" pos:end="381:39"><call pos:start="381:9" pos:end="381:39"><name pos:start="381:9" pos:end="381:23">av_buffer_unref</name><argument_list pos:start="381:24" pos:end="381:39">(<argument pos:start="381:25" pos:end="381:38"><expr pos:start="381:25" pos:end="381:38"><operator pos:start="381:25" pos:end="381:25">&amp;</operator><name pos:start="381:26" pos:end="381:38"><name pos:start="381:26" pos:end="381:30">frame</name><operator pos:start="381:31" pos:end="381:32">-&gt;</operator><name pos:start="381:33" pos:end="381:35">buf</name><index pos:start="381:36" pos:end="381:38">[<expr pos:start="381:37" pos:end="381:37"><literal type="number" pos:start="381:37" pos:end="381:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="383:9" pos:end="383:31">return <expr pos:start="383:16" pos:end="383:30"><call pos:start="383:16" pos:end="383:30"><name pos:start="383:16" pos:end="383:22">AVERROR</name><argument_list pos:start="383:23" pos:end="383:30">(<argument pos:start="383:24" pos:end="383:29"><expr pos:start="383:24" pos:end="383:29"><name pos:start="383:24" pos:end="383:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="389:5" pos:end="399:5"><if pos:start="389:5" pos:end="399:5">if <condition pos:start="389:8" pos:end="393:73">(<expr pos:start="389:9" pos:end="393:72"><operator pos:start="389:9" pos:end="389:9">(</operator><name pos:start="389:10" pos:end="389:12">res</name> <operator pos:start="389:14" pos:end="389:14">=</operator> <call pos:start="389:16" pos:end="393:67"><name pos:start="389:16" pos:end="389:35">av_image_fill_arrays</name><argument_list pos:start="389:36" pos:end="393:67">(<argument pos:start="389:37" pos:end="389:47"><expr pos:start="389:37" pos:end="389:47"><name pos:start="389:37" pos:end="389:47"><name pos:start="389:37" pos:end="389:41">frame</name><operator pos:start="389:42" pos:end="389:43">-&gt;</operator><name pos:start="389:44" pos:end="389:47">data</name></name></expr></argument>, <argument pos:start="389:50" pos:end="389:64"><expr pos:start="389:50" pos:end="389:64"><name pos:start="389:50" pos:end="389:64"><name pos:start="389:50" pos:end="389:54">frame</name><operator pos:start="389:55" pos:end="389:56">-&gt;</operator><name pos:start="389:57" pos:end="389:64">linesize</name></name></expr></argument>,

                                    <argument pos:start="391:37" pos:end="391:39"><expr pos:start="391:37" pos:end="391:39"><name pos:start="391:37" pos:end="391:39">buf</name></expr></argument>, <argument pos:start="391:42" pos:end="391:55"><expr pos:start="391:42" pos:end="391:55"><name pos:start="391:42" pos:end="391:55"><name pos:start="391:42" pos:end="391:46">avctx</name><operator pos:start="391:47" pos:end="391:48">-&gt;</operator><name pos:start="391:49" pos:end="391:55">pix_fmt</name></name></expr></argument>,

                                    <argument pos:start="393:37" pos:end="393:48"><expr pos:start="393:37" pos:end="393:48"><name pos:start="393:37" pos:end="393:48"><name pos:start="393:37" pos:end="393:41">avctx</name><operator pos:start="393:42" pos:end="393:43">-&gt;</operator><name pos:start="393:44" pos:end="393:48">width</name></name></expr></argument>, <argument pos:start="393:51" pos:end="393:63"><expr pos:start="393:51" pos:end="393:63"><name pos:start="393:51" pos:end="393:63"><name pos:start="393:51" pos:end="393:55">avctx</name><operator pos:start="393:56" pos:end="393:57">-&gt;</operator><name pos:start="393:58" pos:end="393:63">height</name></name></expr></argument>, <argument pos:start="393:66" pos:end="393:66"><expr pos:start="393:66" pos:end="393:66"><literal type="number" pos:start="393:66" pos:end="393:66">1</literal></expr></argument>)</argument_list></call><operator pos:start="393:68" pos:end="393:68">)</operator> <operator pos:start="393:70" pos:end="393:70">&lt;</operator> <literal type="number" pos:start="393:72" pos:end="393:72">0</literal></expr>)</condition> <block pos:start="393:75" pos:end="399:5">{<block_content pos:start="395:9" pos:end="397:19">

        <expr_stmt pos:start="395:9" pos:end="395:40"><expr pos:start="395:9" pos:end="395:39"><call pos:start="395:9" pos:end="395:39"><name pos:start="395:9" pos:end="395:23">av_buffer_unref</name><argument_list pos:start="395:24" pos:end="395:39">(<argument pos:start="395:25" pos:end="395:38"><expr pos:start="395:25" pos:end="395:38"><operator pos:start="395:25" pos:end="395:25">&amp;</operator><name pos:start="395:26" pos:end="395:38"><name pos:start="395:26" pos:end="395:30">frame</name><operator pos:start="395:31" pos:end="395:32">-&gt;</operator><name pos:start="395:33" pos:end="395:35">buf</name><index pos:start="395:36" pos:end="395:38">[<expr pos:start="395:37" pos:end="395:37"><literal type="number" pos:start="395:37" pos:end="395:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="397:9" pos:end="397:19">return <expr pos:start="397:16" pos:end="397:18"><name pos:start="397:16" pos:end="397:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="403:5" pos:end="461:5"><if pos:start="403:5" pos:end="461:5">if <condition pos:start="403:8" pos:end="403:42">(<expr pos:start="403:9" pos:end="403:41"><name pos:start="403:9" pos:end="403:22"><name pos:start="403:9" pos:end="403:13">avctx</name><operator pos:start="403:14" pos:end="403:15">-&gt;</operator><name pos:start="403:16" pos:end="403:22">pix_fmt</name></name> <operator pos:start="403:24" pos:end="403:25">==</operator> <name pos:start="403:27" pos:end="403:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="403:44" pos:end="461:5">{<block_content pos:start="405:9" pos:end="459:9">

        <decl_stmt pos:start="405:9" pos:end="407:59"><decl pos:start="405:9" pos:end="407:58"><type pos:start="405:9" pos:end="405:23"><specifier pos:start="405:9" pos:end="405:13">const</specifier> <name pos:start="405:15" pos:end="405:21">uint8_t</name> <modifier pos:start="405:23" pos:end="405:23">*</modifier></type><name pos:start="405:24" pos:end="405:26">pal</name> <init pos:start="405:28" pos:end="407:58">= <expr pos:start="405:30" pos:end="407:58"><call pos:start="405:30" pos:end="407:58"><name pos:start="405:30" pos:end="405:52">av_packet_get_side_data</name><argument_list pos:start="405:53" pos:end="407:58">(<argument pos:start="405:54" pos:end="405:58"><expr pos:start="405:54" pos:end="405:58"><name pos:start="405:54" pos:end="405:58">avpkt</name></expr></argument>, <argument pos:start="405:61" pos:end="405:79"><expr pos:start="405:61" pos:end="405:79"><name pos:start="405:61" pos:end="405:79">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                                     <argument pos:start="407:54" pos:end="407:57"><expr pos:start="407:54" pos:end="407:57"><name pos:start="407:54" pos:end="407:57">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="409:9" pos:end="409:16"><decl pos:start="409:9" pos:end="409:15"><type pos:start="409:9" pos:end="409:11"><name pos:start="409:9" pos:end="409:11">int</name></type> <name pos:start="409:13" pos:end="409:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="411:9" pos:end="413:63"><if pos:start="411:9" pos:end="413:63">if <condition pos:start="411:12" pos:end="411:30">(<expr pos:start="411:13" pos:end="411:29"><operator pos:start="411:13" pos:end="411:13">!</operator><name pos:start="411:14" pos:end="411:29"><name pos:start="411:14" pos:end="411:20">context</name><operator pos:start="411:21" pos:end="411:22">-&gt;</operator><name pos:start="411:23" pos:end="411:29">palette</name></name></expr>)</condition><block type="pseudo" pos:start="413:13" pos:end="413:63"><block_content pos:start="413:13" pos:end="413:63">

            <expr_stmt pos:start="413:13" pos:end="413:63"><expr pos:start="413:13" pos:end="413:62"><name pos:start="413:13" pos:end="413:28"><name pos:start="413:13" pos:end="413:19">context</name><operator pos:start="413:20" pos:end="413:21">-&gt;</operator><name pos:start="413:22" pos:end="413:28">palette</name></name> <operator pos:start="413:30" pos:end="413:30">=</operator> <call pos:start="413:32" pos:end="413:62"><name pos:start="413:32" pos:end="413:46">av_buffer_alloc</name><argument_list pos:start="413:47" pos:end="413:62">(<argument pos:start="413:48" pos:end="413:61"><expr pos:start="413:48" pos:end="413:61"><name pos:start="413:48" pos:end="413:61">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="415:9" pos:end="421:9"><if pos:start="415:9" pos:end="421:9">if <condition pos:start="415:12" pos:end="415:30">(<expr pos:start="415:13" pos:end="415:29"><operator pos:start="415:13" pos:end="415:13">!</operator><name pos:start="415:14" pos:end="415:29"><name pos:start="415:14" pos:end="415:20">context</name><operator pos:start="415:21" pos:end="415:22">-&gt;</operator><name pos:start="415:23" pos:end="415:29">palette</name></name></expr>)</condition> <block pos:start="415:32" pos:end="421:9">{<block_content pos:start="417:13" pos:end="419:35">

            <expr_stmt pos:start="417:13" pos:end="417:44"><expr pos:start="417:13" pos:end="417:43"><call pos:start="417:13" pos:end="417:43"><name pos:start="417:13" pos:end="417:27">av_buffer_unref</name><argument_list pos:start="417:28" pos:end="417:43">(<argument pos:start="417:29" pos:end="417:42"><expr pos:start="417:29" pos:end="417:42"><operator pos:start="417:29" pos:end="417:29">&amp;</operator><name pos:start="417:30" pos:end="417:42"><name pos:start="417:30" pos:end="417:34">frame</name><operator pos:start="417:35" pos:end="417:36">-&gt;</operator><name pos:start="417:37" pos:end="417:39">buf</name><index pos:start="417:40" pos:end="417:42">[<expr pos:start="417:41" pos:end="417:41"><literal type="number" pos:start="417:41" pos:end="417:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="419:13" pos:end="419:35">return <expr pos:start="419:20" pos:end="419:34"><call pos:start="419:20" pos:end="419:34"><name pos:start="419:20" pos:end="419:26">AVERROR</name><argument_list pos:start="419:27" pos:end="419:34">(<argument pos:start="419:28" pos:end="419:33"><expr pos:start="419:28" pos:end="419:33"><name pos:start="419:28" pos:end="419:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:57"><expr pos:start="423:9" pos:end="423:56"><name pos:start="423:9" pos:end="423:11">ret</name> <operator pos:start="423:13" pos:end="423:13">=</operator> <call pos:start="423:15" pos:end="423:56"><name pos:start="423:15" pos:end="423:37">av_buffer_make_writable</name><argument_list pos:start="423:38" pos:end="423:56">(<argument pos:start="423:39" pos:end="423:55"><expr pos:start="423:39" pos:end="423:55"><operator pos:start="423:39" pos:end="423:39">&amp;</operator><name pos:start="423:40" pos:end="423:55"><name pos:start="423:40" pos:end="423:46">context</name><operator pos:start="423:47" pos:end="423:48">-&gt;</operator><name pos:start="423:49" pos:end="423:55">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="425:9" pos:end="431:9"><if pos:start="425:9" pos:end="431:9">if <condition pos:start="425:12" pos:end="425:20">(<expr pos:start="425:13" pos:end="425:19"><name pos:start="425:13" pos:end="425:15">ret</name> <operator pos:start="425:17" pos:end="425:17">&lt;</operator> <literal type="number" pos:start="425:19" pos:end="425:19">0</literal></expr>)</condition> <block pos:start="425:22" pos:end="431:9">{<block_content pos:start="427:13" pos:end="429:23">

            <expr_stmt pos:start="427:13" pos:end="427:44"><expr pos:start="427:13" pos:end="427:43"><call pos:start="427:13" pos:end="427:43"><name pos:start="427:13" pos:end="427:27">av_buffer_unref</name><argument_list pos:start="427:28" pos:end="427:43">(<argument pos:start="427:29" pos:end="427:42"><expr pos:start="427:29" pos:end="427:42"><operator pos:start="427:29" pos:end="427:29">&amp;</operator><name pos:start="427:30" pos:end="427:42"><name pos:start="427:30" pos:end="427:34">frame</name><operator pos:start="427:35" pos:end="427:36">-&gt;</operator><name pos:start="427:37" pos:end="427:39">buf</name><index pos:start="427:40" pos:end="427:42">[<expr pos:start="427:41" pos:end="427:41"><literal type="number" pos:start="427:41" pos:end="427:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="429:13" pos:end="429:23">return <expr pos:start="429:20" pos:end="429:22"><name pos:start="429:20" pos:end="429:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="435:9" pos:end="459:9"><if pos:start="435:9" pos:end="441:9">if <condition pos:start="435:12" pos:end="435:16">(<expr pos:start="435:13" pos:end="435:15"><name pos:start="435:13" pos:end="435:15">pal</name></expr>)</condition> <block pos:start="435:18" pos:end="441:9">{<block_content pos:start="437:13" pos:end="439:43">

            <expr_stmt pos:start="437:13" pos:end="437:64"><expr pos:start="437:13" pos:end="437:63"><call pos:start="437:13" pos:end="437:63"><name pos:start="437:13" pos:end="437:18">memcpy</name><argument_list pos:start="437:19" pos:end="437:63">(<argument pos:start="437:20" pos:end="437:41"><expr pos:start="437:20" pos:end="437:41"><name pos:start="437:20" pos:end="437:41"><name pos:start="437:20" pos:end="437:26">context</name><operator pos:start="437:27" pos:end="437:28">-&gt;</operator><name pos:start="437:29" pos:end="437:35">palette</name><operator pos:start="437:36" pos:end="437:37">-&gt;</operator><name pos:start="437:38" pos:end="437:41">data</name></name></expr></argument>, <argument pos:start="437:44" pos:end="437:46"><expr pos:start="437:44" pos:end="437:46"><name pos:start="437:44" pos:end="437:46">pal</name></expr></argument>, <argument pos:start="437:49" pos:end="437:62"><expr pos:start="437:49" pos:end="437:62"><name pos:start="437:49" pos:end="437:62">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:43"><expr pos:start="439:13" pos:end="439:42"><name pos:start="439:13" pos:end="439:38"><name pos:start="439:13" pos:end="439:17">frame</name><operator pos:start="439:18" pos:end="439:19">-&gt;</operator><name pos:start="439:20" pos:end="439:38">palette_has_changed</name></name> <operator pos:start="439:40" pos:end="439:40">=</operator> <literal type="number" pos:start="439:42" pos:end="439:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="441:11" pos:end="459:9">else if <condition pos:start="441:19" pos:end="441:40">(<expr pos:start="441:20" pos:end="441:39"><name pos:start="441:20" pos:end="441:39"><name pos:start="441:20" pos:end="441:26">context</name><operator pos:start="441:27" pos:end="441:28">-&gt;</operator><name pos:start="441:29" pos:end="441:39">is_nut_pal8</name></name></expr>)</condition> <block pos:start="441:42" pos:end="459:9">{<block_content pos:start="443:13" pos:end="457:13">

            <decl_stmt pos:start="443:13" pos:end="443:56"><decl pos:start="443:13" pos:end="443:55"><type pos:start="443:13" pos:end="443:15"><name pos:start="443:13" pos:end="443:15">int</name></type> <name pos:start="443:17" pos:end="443:24">vid_size</name> <init pos:start="443:26" pos:end="443:55">= <expr pos:start="443:28" pos:end="443:55"><name pos:start="443:28" pos:end="443:39"><name pos:start="443:28" pos:end="443:32">avctx</name><operator pos:start="443:33" pos:end="443:34">-&gt;</operator><name pos:start="443:35" pos:end="443:39">width</name></name> <operator pos:start="443:41" pos:end="443:41">*</operator> <name pos:start="443:43" pos:end="443:55"><name pos:start="443:43" pos:end="443:47">avctx</name><operator pos:start="443:48" pos:end="443:49">-&gt;</operator><name pos:start="443:50" pos:end="443:55">height</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="445:13" pos:end="445:50"><decl pos:start="445:13" pos:end="445:49"><type pos:start="445:13" pos:end="445:15"><name pos:start="445:13" pos:end="445:15">int</name></type> <name pos:start="445:17" pos:end="445:24">pal_size</name> <init pos:start="445:26" pos:end="445:49">= <expr pos:start="445:28" pos:end="445:49"><name pos:start="445:28" pos:end="445:38"><name pos:start="445:28" pos:end="445:32">avpkt</name><operator pos:start="445:33" pos:end="445:34">-&gt;</operator><name pos:start="445:35" pos:end="445:38">size</name></name> <operator pos:start="445:40" pos:end="445:40">-</operator> <name pos:start="445:42" pos:end="445:49">vid_size</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="449:13" pos:end="457:13"><if pos:start="449:13" pos:end="457:13">if <condition pos:start="449:16" pos:end="449:69">(<expr pos:start="449:17" pos:end="449:68"><name pos:start="449:17" pos:end="449:27"><name pos:start="449:17" pos:end="449:21">avpkt</name><operator pos:start="449:22" pos:end="449:23">-&gt;</operator><name pos:start="449:24" pos:end="449:27">size</name></name> <operator pos:start="449:29" pos:end="449:29">&gt;</operator> <name pos:start="449:31" pos:end="449:38">vid_size</name> <operator pos:start="449:40" pos:end="449:41">&amp;&amp;</operator> <name pos:start="449:43" pos:end="449:50">pal_size</name> <operator pos:start="449:52" pos:end="449:53">&lt;=</operator> <name pos:start="449:55" pos:end="449:68">AVPALETTE_SIZE</name></expr>)</condition> <block pos:start="449:71" pos:end="457:13">{<block_content pos:start="451:17" pos:end="455:47">

                <expr_stmt pos:start="451:17" pos:end="451:45"><expr pos:start="451:17" pos:end="451:44"><name pos:start="451:17" pos:end="451:19">pal</name> <operator pos:start="451:21" pos:end="451:21">=</operator> <name pos:start="451:23" pos:end="451:33"><name pos:start="451:23" pos:end="451:27">avpkt</name><operator pos:start="451:28" pos:end="451:29">-&gt;</operator><name pos:start="451:30" pos:end="451:33">data</name></name> <operator pos:start="451:35" pos:end="451:35">+</operator> <name pos:start="451:37" pos:end="451:44">vid_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:62"><expr pos:start="453:17" pos:end="453:61"><call pos:start="453:17" pos:end="453:61"><name pos:start="453:17" pos:end="453:22">memcpy</name><argument_list pos:start="453:23" pos:end="453:61">(<argument pos:start="453:24" pos:end="453:45"><expr pos:start="453:24" pos:end="453:45"><name pos:start="453:24" pos:end="453:45"><name pos:start="453:24" pos:end="453:30">context</name><operator pos:start="453:31" pos:end="453:32">-&gt;</operator><name pos:start="453:33" pos:end="453:39">palette</name><operator pos:start="453:40" pos:end="453:41">-&gt;</operator><name pos:start="453:42" pos:end="453:45">data</name></name></expr></argument>, <argument pos:start="453:48" pos:end="453:50"><expr pos:start="453:48" pos:end="453:50"><name pos:start="453:48" pos:end="453:50">pal</name></expr></argument>, <argument pos:start="453:53" pos:end="453:60"><expr pos:start="453:53" pos:end="453:60"><name pos:start="453:53" pos:end="453:60">pal_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:47"><expr pos:start="455:17" pos:end="455:46"><name pos:start="455:17" pos:end="455:42"><name pos:start="455:17" pos:end="455:21">frame</name><operator pos:start="455:22" pos:end="455:23">-&gt;</operator><name pos:start="455:24" pos:end="455:42">palette_has_changed</name></name> <operator pos:start="455:44" pos:end="455:44">=</operator> <literal type="number" pos:start="455:46" pos:end="455:46">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="465:5" pos:end="485:73"><if pos:start="465:5" pos:end="485:73">if <condition pos:start="465:8" pos:end="483:80">(<expr pos:start="465:9" pos:end="483:79"><operator pos:start="465:9" pos:end="465:9">(</operator><name pos:start="465:10" pos:end="465:23"><name pos:start="465:10" pos:end="465:14">avctx</name><operator pos:start="465:15" pos:end="465:16">-&gt;</operator><name pos:start="465:17" pos:end="465:23">pix_fmt</name></name><operator pos:start="465:24" pos:end="465:25">==</operator><name pos:start="465:26" pos:end="465:41">AV_PIX_FMT_RGB24</name>    <operator pos:start="465:46" pos:end="465:47">||</operator>

        <name pos:start="467:9" pos:end="467:22"><name pos:start="467:9" pos:end="467:13">avctx</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:22">pix_fmt</name></name><operator pos:start="467:23" pos:end="467:24">==</operator><name pos:start="467:25" pos:end="467:40">AV_PIX_FMT_BGR24</name>     <operator pos:start="467:46" pos:end="467:47">||</operator>

        <name pos:start="469:9" pos:end="469:22"><name pos:start="469:9" pos:end="469:13">avctx</name><operator pos:start="469:14" pos:end="469:15">-&gt;</operator><name pos:start="469:16" pos:end="469:22">pix_fmt</name></name><operator pos:start="469:23" pos:end="469:24">==</operator><name pos:start="469:25" pos:end="469:40">AV_PIX_FMT_GRAY8</name>     <operator pos:start="469:46" pos:end="469:47">||</operator>

        <name pos:start="471:9" pos:end="471:22"><name pos:start="471:9" pos:end="471:13">avctx</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:22">pix_fmt</name></name><operator pos:start="471:23" pos:end="471:24">==</operator><name pos:start="471:25" pos:end="471:43">AV_PIX_FMT_RGB555LE</name>  <operator pos:start="471:46" pos:end="471:47">||</operator>

        <name pos:start="473:9" pos:end="473:22"><name pos:start="473:9" pos:end="473:13">avctx</name><operator pos:start="473:14" pos:end="473:15">-&gt;</operator><name pos:start="473:16" pos:end="473:22">pix_fmt</name></name><operator pos:start="473:23" pos:end="473:24">==</operator><name pos:start="473:25" pos:end="473:43">AV_PIX_FMT_RGB555BE</name>  <operator pos:start="473:46" pos:end="473:47">||</operator>

        <name pos:start="475:9" pos:end="475:22"><name pos:start="475:9" pos:end="475:13">avctx</name><operator pos:start="475:14" pos:end="475:15">-&gt;</operator><name pos:start="475:16" pos:end="475:22">pix_fmt</name></name><operator pos:start="475:23" pos:end="475:24">==</operator><name pos:start="475:25" pos:end="475:43">AV_PIX_FMT_RGB565LE</name>  <operator pos:start="475:46" pos:end="475:47">||</operator>

        <name pos:start="477:9" pos:end="477:22"><name pos:start="477:9" pos:end="477:13">avctx</name><operator pos:start="477:14" pos:end="477:15">-&gt;</operator><name pos:start="477:16" pos:end="477:22">pix_fmt</name></name><operator pos:start="477:23" pos:end="477:24">==</operator><name pos:start="477:25" pos:end="477:44">AV_PIX_FMT_MONOWHITE</name> <operator pos:start="477:46" pos:end="477:47">||</operator>

        <name pos:start="479:9" pos:end="479:22"><name pos:start="479:9" pos:end="479:13">avctx</name><operator pos:start="479:14" pos:end="479:15">-&gt;</operator><name pos:start="479:16" pos:end="479:22">pix_fmt</name></name><operator pos:start="479:23" pos:end="479:24">==</operator><name pos:start="479:25" pos:end="479:44">AV_PIX_FMT_MONOBLACK</name> <operator pos:start="479:46" pos:end="479:47">||</operator>

        <name pos:start="481:9" pos:end="481:22"><name pos:start="481:9" pos:end="481:13">avctx</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:22">pix_fmt</name></name><operator pos:start="481:23" pos:end="481:24">==</operator><name pos:start="481:25" pos:end="481:39">AV_PIX_FMT_PAL8</name><operator pos:start="481:40" pos:end="481:40">)</operator> <operator pos:start="481:42" pos:end="481:43">&amp;&amp;</operator>

        <call pos:start="483:9" pos:end="483:51"><name pos:start="483:9" pos:end="483:15">FFALIGN</name><argument_list pos:start="483:16" pos:end="483:51">(<argument pos:start="483:17" pos:end="483:34"><expr pos:start="483:17" pos:end="483:34"><name pos:start="483:17" pos:end="483:34"><name pos:start="483:17" pos:end="483:21">frame</name><operator pos:start="483:22" pos:end="483:23">-&gt;</operator><name pos:start="483:24" pos:end="483:31">linesize</name><index pos:start="483:32" pos:end="483:34">[<expr pos:start="483:33" pos:end="483:33"><literal type="number" pos:start="483:33" pos:end="483:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="483:37" pos:end="483:50"><expr pos:start="483:37" pos:end="483:50"><name pos:start="483:37" pos:end="483:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="483:53" pos:end="483:53">*</operator> <name pos:start="483:55" pos:end="483:67"><name pos:start="483:55" pos:end="483:59">avctx</name><operator pos:start="483:60" pos:end="483:61">-&gt;</operator><name pos:start="483:62" pos:end="483:67">height</name></name> <operator pos:start="483:69" pos:end="483:70">&lt;=</operator> <name pos:start="483:72" pos:end="483:79">buf_size</name></expr>)</condition><block type="pseudo" pos:start="485:9" pos:end="485:73"><block_content pos:start="485:9" pos:end="485:73">

        <expr_stmt pos:start="485:9" pos:end="485:73"><expr pos:start="485:9" pos:end="485:72"><name pos:start="485:9" pos:end="485:26"><name pos:start="485:9" pos:end="485:13">frame</name><operator pos:start="485:14" pos:end="485:15">-&gt;</operator><name pos:start="485:16" pos:end="485:23">linesize</name><index pos:start="485:24" pos:end="485:26">[<expr pos:start="485:25" pos:end="485:25"><literal type="number" pos:start="485:25" pos:end="485:25">0</literal></expr>]</index></name> <operator pos:start="485:28" pos:end="485:28">=</operator> <call pos:start="485:30" pos:end="485:72"><name pos:start="485:30" pos:end="485:36">FFALIGN</name><argument_list pos:start="485:37" pos:end="485:72">(<argument pos:start="485:38" pos:end="485:55"><expr pos:start="485:38" pos:end="485:55"><name pos:start="485:38" pos:end="485:55"><name pos:start="485:38" pos:end="485:42">frame</name><operator pos:start="485:43" pos:end="485:44">-&gt;</operator><name pos:start="485:45" pos:end="485:52">linesize</name><index pos:start="485:53" pos:end="485:55">[<expr pos:start="485:54" pos:end="485:54"><literal type="number" pos:start="485:54" pos:end="485:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="485:58" pos:end="485:71"><expr pos:start="485:58" pos:end="485:71"><name pos:start="485:58" pos:end="485:71">linesize_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="489:5" pos:end="503:5"><if pos:start="489:5" pos:end="503:5">if <condition pos:start="489:8" pos:end="493:92">(<expr pos:start="489:9" pos:end="493:91"><name pos:start="489:9" pos:end="489:22"><name pos:start="489:9" pos:end="489:13">avctx</name><operator pos:start="489:14" pos:end="489:15">-&gt;</operator><name pos:start="489:16" pos:end="489:22">pix_fmt</name></name> <operator pos:start="489:24" pos:end="489:25">==</operator> <name pos:start="489:27" pos:end="489:41">AV_PIX_FMT_NV12</name> <operator pos:start="489:43" pos:end="489:44">&amp;&amp;</operator> <name pos:start="489:46" pos:end="489:61"><name pos:start="489:46" pos:end="489:50">avctx</name><operator pos:start="489:51" pos:end="489:52">-&gt;</operator><name pos:start="489:53" pos:end="489:61">codec_tag</name></name> <operator pos:start="489:63" pos:end="489:64">==</operator> <call pos:start="489:66" pos:end="489:90"><name pos:start="489:66" pos:end="489:70">MKTAG</name><argument_list pos:start="489:71" pos:end="489:90">(<argument pos:start="489:72" pos:end="489:74"><expr pos:start="489:72" pos:end="489:74"><literal type="char" pos:start="489:72" pos:end="489:74">'N'</literal></expr></argument>, <argument pos:start="489:77" pos:end="489:79"><expr pos:start="489:77" pos:end="489:79"><literal type="char" pos:start="489:77" pos:end="489:79">'V'</literal></expr></argument>, <argument pos:start="489:82" pos:end="489:84"><expr pos:start="489:82" pos:end="489:84"><literal type="char" pos:start="489:82" pos:end="489:84">'1'</literal></expr></argument>, <argument pos:start="489:87" pos:end="489:89"><expr pos:start="489:87" pos:end="489:89"><literal type="char" pos:start="489:87" pos:end="489:89">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="489:92" pos:end="489:93">&amp;&amp;</operator>

        <call pos:start="491:9" pos:end="491:51"><name pos:start="491:9" pos:end="491:15">FFALIGN</name><argument_list pos:start="491:16" pos:end="491:51">(<argument pos:start="491:17" pos:end="491:34"><expr pos:start="491:17" pos:end="491:34"><name pos:start="491:17" pos:end="491:34"><name pos:start="491:17" pos:end="491:21">frame</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:31">linesize</name><index pos:start="491:32" pos:end="491:34">[<expr pos:start="491:33" pos:end="491:33"><literal type="number" pos:start="491:33" pos:end="491:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="491:37" pos:end="491:50"><expr pos:start="491:37" pos:end="491:50"><name pos:start="491:37" pos:end="491:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="491:53" pos:end="491:53">*</operator> <name pos:start="491:55" pos:end="491:67"><name pos:start="491:55" pos:end="491:59">avctx</name><operator pos:start="491:60" pos:end="491:61">-&gt;</operator><name pos:start="491:62" pos:end="491:67">height</name></name> <operator pos:start="491:69" pos:end="491:69">+</operator>

        <call pos:start="493:9" pos:end="493:51"><name pos:start="493:9" pos:end="493:15">FFALIGN</name><argument_list pos:start="493:16" pos:end="493:51">(<argument pos:start="493:17" pos:end="493:34"><expr pos:start="493:17" pos:end="493:34"><name pos:start="493:17" pos:end="493:34"><name pos:start="493:17" pos:end="493:21">frame</name><operator pos:start="493:22" pos:end="493:23">-&gt;</operator><name pos:start="493:24" pos:end="493:31">linesize</name><index pos:start="493:32" pos:end="493:34">[<expr pos:start="493:33" pos:end="493:33"><literal type="number" pos:start="493:33" pos:end="493:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="493:37" pos:end="493:50"><expr pos:start="493:37" pos:end="493:50"><name pos:start="493:37" pos:end="493:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="493:53" pos:end="493:53">*</operator> <operator pos:start="493:55" pos:end="493:55">(</operator><operator pos:start="493:56" pos:end="493:56">(</operator><name pos:start="493:57" pos:end="493:69"><name pos:start="493:57" pos:end="493:61">avctx</name><operator pos:start="493:62" pos:end="493:63">-&gt;</operator><name pos:start="493:64" pos:end="493:69">height</name></name> <operator pos:start="493:71" pos:end="493:71">+</operator> <literal type="number" pos:start="493:73" pos:end="493:73">1</literal><operator pos:start="493:74" pos:end="493:74">)</operator> <operator pos:start="493:76" pos:end="493:76">/</operator> <literal type="number" pos:start="493:78" pos:end="493:78">2</literal><operator pos:start="493:79" pos:end="493:79">)</operator> <operator pos:start="493:81" pos:end="493:82">&lt;=</operator> <name pos:start="493:84" pos:end="493:91">buf_size</name></expr>)</condition> <block pos:start="493:94" pos:end="503:5">{<block_content pos:start="495:9" pos:end="501:73">

        <decl_stmt pos:start="495:9" pos:end="495:62"><decl pos:start="495:9" pos:end="495:61"><type pos:start="495:9" pos:end="495:11"><name pos:start="495:9" pos:end="495:11">int</name></type> <name pos:start="495:13" pos:end="495:15">la0</name> <init pos:start="495:17" pos:end="495:61">= <expr pos:start="495:19" pos:end="495:61"><call pos:start="495:19" pos:end="495:61"><name pos:start="495:19" pos:end="495:25">FFALIGN</name><argument_list pos:start="495:26" pos:end="495:61">(<argument pos:start="495:27" pos:end="495:44"><expr pos:start="495:27" pos:end="495:44"><name pos:start="495:27" pos:end="495:44"><name pos:start="495:27" pos:end="495:31">frame</name><operator pos:start="495:32" pos:end="495:33">-&gt;</operator><name pos:start="495:34" pos:end="495:41">linesize</name><index pos:start="495:42" pos:end="495:44">[<expr pos:start="495:43" pos:end="495:43"><literal type="number" pos:start="495:43" pos:end="495:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="495:47" pos:end="495:60"><expr pos:start="495:47" pos:end="495:60"><name pos:start="495:47" pos:end="495:60">linesize_align</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:69"><expr pos:start="497:9" pos:end="497:68"><name pos:start="497:9" pos:end="497:22"><name pos:start="497:9" pos:end="497:13">frame</name><operator pos:start="497:14" pos:end="497:15">-&gt;</operator><name pos:start="497:16" pos:end="497:19">data</name><index pos:start="497:20" pos:end="497:22">[<expr pos:start="497:21" pos:end="497:21"><literal type="number" pos:start="497:21" pos:end="497:21">1</literal></expr>]</index></name> <operator pos:start="497:24" pos:end="497:25">+=</operator> <operator pos:start="497:27" pos:end="497:27">(</operator><name pos:start="497:28" pos:end="497:30">la0</name> <operator pos:start="497:32" pos:end="497:32">-</operator> <name pos:start="497:34" pos:end="497:51"><name pos:start="497:34" pos:end="497:38">frame</name><operator pos:start="497:39" pos:end="497:40">-&gt;</operator><name pos:start="497:41" pos:end="497:48">linesize</name><index pos:start="497:49" pos:end="497:51">[<expr pos:start="497:50" pos:end="497:50"><literal type="number" pos:start="497:50" pos:end="497:50">0</literal></expr>]</index></name><operator pos:start="497:52" pos:end="497:52">)</operator> <operator pos:start="497:54" pos:end="497:54">*</operator> <name pos:start="497:56" pos:end="497:68"><name pos:start="497:56" pos:end="497:60">avctx</name><operator pos:start="497:61" pos:end="497:62">-&gt;</operator><name pos:start="497:63" pos:end="497:68">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="499:9" pos:end="499:33"><expr pos:start="499:9" pos:end="499:32"><name pos:start="499:9" pos:end="499:26"><name pos:start="499:9" pos:end="499:13">frame</name><operator pos:start="499:14" pos:end="499:15">-&gt;</operator><name pos:start="499:16" pos:end="499:23">linesize</name><index pos:start="499:24" pos:end="499:26">[<expr pos:start="499:25" pos:end="499:25"><literal type="number" pos:start="499:25" pos:end="499:25">0</literal></expr>]</index></name> <operator pos:start="499:28" pos:end="499:28">=</operator> <name pos:start="499:30" pos:end="499:32">la0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="501:9" pos:end="501:73"><expr pos:start="501:9" pos:end="501:72"><name pos:start="501:9" pos:end="501:26"><name pos:start="501:9" pos:end="501:13">frame</name><operator pos:start="501:14" pos:end="501:15">-&gt;</operator><name pos:start="501:16" pos:end="501:23">linesize</name><index pos:start="501:24" pos:end="501:26">[<expr pos:start="501:25" pos:end="501:25"><literal type="number" pos:start="501:25" pos:end="501:25">1</literal></expr>]</index></name> <operator pos:start="501:28" pos:end="501:28">=</operator> <call pos:start="501:30" pos:end="501:72"><name pos:start="501:30" pos:end="501:36">FFALIGN</name><argument_list pos:start="501:37" pos:end="501:72">(<argument pos:start="501:38" pos:end="501:55"><expr pos:start="501:38" pos:end="501:55"><name pos:start="501:38" pos:end="501:55"><name pos:start="501:38" pos:end="501:42">frame</name><operator pos:start="501:43" pos:end="501:44">-&gt;</operator><name pos:start="501:45" pos:end="501:52">linesize</name><index pos:start="501:53" pos:end="501:55">[<expr pos:start="501:54" pos:end="501:54"><literal type="number" pos:start="501:54" pos:end="501:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="501:58" pos:end="501:71"><expr pos:start="501:58" pos:end="501:71"><name pos:start="501:58" pos:end="501:71">linesize_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="507:5" pos:end="523:5"><if pos:start="507:5" pos:end="523:5">if <condition pos:start="507:8" pos:end="509:50">(<expr pos:start="507:9" pos:end="509:49"><operator pos:start="507:9" pos:end="507:9">(</operator><name pos:start="507:10" pos:end="507:23"><name pos:start="507:10" pos:end="507:14">avctx</name><operator pos:start="507:15" pos:end="507:16">-&gt;</operator><name pos:start="507:17" pos:end="507:23">pix_fmt</name></name> <operator pos:start="507:25" pos:end="507:26">==</operator> <name pos:start="507:28" pos:end="507:42">AV_PIX_FMT_PAL8</name> <operator pos:start="507:44" pos:end="507:45">&amp;&amp;</operator> <name pos:start="507:47" pos:end="507:54">buf_size</name> <operator pos:start="507:56" pos:end="507:56">&lt;</operator> <name pos:start="507:58" pos:end="507:76"><name pos:start="507:58" pos:end="507:64">context</name><operator pos:start="507:65" pos:end="507:66">-&gt;</operator><name pos:start="507:67" pos:end="507:76">frame_size</name></name><operator pos:start="507:77" pos:end="507:77">)</operator> <operator pos:start="507:79" pos:end="507:80">||</operator>

        <operator pos:start="509:9" pos:end="509:9">(</operator><name pos:start="509:10" pos:end="509:20"><name pos:start="509:10" pos:end="509:13">desc</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:20">flags</name></name> <operator pos:start="509:22" pos:end="509:22">&amp;</operator> <name pos:start="509:24" pos:end="509:48">AV_PIX_FMT_FLAG_PSEUDOPAL</name><operator pos:start="509:49" pos:end="509:49">)</operator></expr>)</condition> <block pos:start="509:52" pos:end="523:5">{<block_content pos:start="511:9" pos:end="521:45">

        <expr_stmt pos:start="511:9" pos:end="511:57"><expr pos:start="511:9" pos:end="511:56"><name pos:start="511:9" pos:end="511:21"><name pos:start="511:9" pos:end="511:13">frame</name><operator pos:start="511:14" pos:end="511:15">-&gt;</operator><name pos:start="511:16" pos:end="511:18">buf</name><index pos:start="511:19" pos:end="511:21">[<expr pos:start="511:20" pos:end="511:20"><literal type="number" pos:start="511:20" pos:end="511:20">1</literal></expr>]</index></name>  <operator pos:start="511:24" pos:end="511:24">=</operator> <call pos:start="511:26" pos:end="511:56"><name pos:start="511:26" pos:end="511:38">av_buffer_ref</name><argument_list pos:start="511:39" pos:end="511:56">(<argument pos:start="511:40" pos:end="511:55"><expr pos:start="511:40" pos:end="511:55"><name pos:start="511:40" pos:end="511:55"><name pos:start="511:40" pos:end="511:46">context</name><operator pos:start="511:47" pos:end="511:48">-&gt;</operator><name pos:start="511:49" pos:end="511:55">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="513:9" pos:end="519:9"><if pos:start="513:9" pos:end="519:9">if <condition pos:start="513:12" pos:end="513:27">(<expr pos:start="513:13" pos:end="513:26"><operator pos:start="513:13" pos:end="513:13">!</operator><name pos:start="513:14" pos:end="513:26"><name pos:start="513:14" pos:end="513:18">frame</name><operator pos:start="513:19" pos:end="513:20">-&gt;</operator><name pos:start="513:21" pos:end="513:23">buf</name><index pos:start="513:24" pos:end="513:26">[<expr pos:start="513:25" pos:end="513:25"><literal type="number" pos:start="513:25" pos:end="513:25">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="513:29" pos:end="519:9">{<block_content pos:start="515:13" pos:end="517:35">

            <expr_stmt pos:start="515:13" pos:end="515:44"><expr pos:start="515:13" pos:end="515:43"><call pos:start="515:13" pos:end="515:43"><name pos:start="515:13" pos:end="515:27">av_buffer_unref</name><argument_list pos:start="515:28" pos:end="515:43">(<argument pos:start="515:29" pos:end="515:42"><expr pos:start="515:29" pos:end="515:42"><operator pos:start="515:29" pos:end="515:29">&amp;</operator><name pos:start="515:30" pos:end="515:42"><name pos:start="515:30" pos:end="515:34">frame</name><operator pos:start="515:35" pos:end="515:36">-&gt;</operator><name pos:start="515:37" pos:end="515:39">buf</name><index pos:start="515:40" pos:end="515:42">[<expr pos:start="515:41" pos:end="515:41"><literal type="number" pos:start="515:41" pos:end="515:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="517:13" pos:end="517:35">return <expr pos:start="517:20" pos:end="517:34"><call pos:start="517:20" pos:end="517:34"><name pos:start="517:20" pos:end="517:26">AVERROR</name><argument_list pos:start="517:27" pos:end="517:34">(<argument pos:start="517:28" pos:end="517:33"><expr pos:start="517:28" pos:end="517:33"><name pos:start="517:28" pos:end="517:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="521:9" pos:end="521:45"><expr pos:start="521:9" pos:end="521:44"><name pos:start="521:9" pos:end="521:22"><name pos:start="521:9" pos:end="521:13">frame</name><operator pos:start="521:14" pos:end="521:15">-&gt;</operator><name pos:start="521:16" pos:end="521:19">data</name><index pos:start="521:20" pos:end="521:22">[<expr pos:start="521:21" pos:end="521:21"><literal type="number" pos:start="521:21" pos:end="521:21">1</literal></expr>]</index></name> <operator pos:start="521:24" pos:end="521:24">=</operator> <name pos:start="521:26" pos:end="521:38"><name pos:start="521:26" pos:end="521:30">frame</name><operator pos:start="521:31" pos:end="521:32">-&gt;</operator><name pos:start="521:33" pos:end="521:35">buf</name><index pos:start="521:36" pos:end="521:38">[<expr pos:start="521:37" pos:end="521:37"><literal type="number" pos:start="521:37" pos:end="521:37">1</literal></expr>]</index></name><operator pos:start="521:39" pos:end="521:40">-&gt;</operator><name pos:start="521:41" pos:end="521:44">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="527:5" pos:end="531:59"><if pos:start="527:5" pos:end="531:59">if <condition pos:start="527:8" pos:end="529:68">(<expr pos:start="527:9" pos:end="529:67"><name pos:start="527:9" pos:end="527:22"><name pos:start="527:9" pos:end="527:13">avctx</name><operator pos:start="527:14" pos:end="527:15">-&gt;</operator><name pos:start="527:16" pos:end="527:22">pix_fmt</name></name> <operator pos:start="527:24" pos:end="527:25">==</operator> <name pos:start="527:27" pos:end="527:42">AV_PIX_FMT_BGR24</name> <operator pos:start="527:44" pos:end="527:45">&amp;&amp;</operator>

        <operator pos:start="529:9" pos:end="529:9">(</operator><operator pos:start="529:10" pos:end="529:10">(</operator><name pos:start="529:11" pos:end="529:28"><name pos:start="529:11" pos:end="529:15">frame</name><operator pos:start="529:16" pos:end="529:17">-&gt;</operator><name pos:start="529:18" pos:end="529:25">linesize</name><index pos:start="529:26" pos:end="529:28">[<expr pos:start="529:27" pos:end="529:27"><literal type="number" pos:start="529:27" pos:end="529:27">0</literal></expr>]</index></name> <operator pos:start="529:30" pos:end="529:30">+</operator> <literal type="number" pos:start="529:32" pos:end="529:32">3</literal><operator pos:start="529:33" pos:end="529:33">)</operator> <operator pos:start="529:35" pos:end="529:35">&amp;</operator> <operator pos:start="529:37" pos:end="529:37">~</operator><literal type="number" pos:start="529:38" pos:end="529:38">3</literal><operator pos:start="529:39" pos:end="529:39">)</operator> <operator pos:start="529:41" pos:end="529:41">*</operator> <name pos:start="529:43" pos:end="529:55"><name pos:start="529:43" pos:end="529:47">avctx</name><operator pos:start="529:48" pos:end="529:49">-&gt;</operator><name pos:start="529:50" pos:end="529:55">height</name></name> <operator pos:start="529:57" pos:end="529:58">&lt;=</operator> <name pos:start="529:60" pos:end="529:67">buf_size</name></expr>)</condition><block type="pseudo" pos:start="531:9" pos:end="531:59"><block_content pos:start="531:9" pos:end="531:59">

        <expr_stmt pos:start="531:9" pos:end="531:59"><expr pos:start="531:9" pos:end="531:58"><name pos:start="531:9" pos:end="531:26"><name pos:start="531:9" pos:end="531:13">frame</name><operator pos:start="531:14" pos:end="531:15">-&gt;</operator><name pos:start="531:16" pos:end="531:23">linesize</name><index pos:start="531:24" pos:end="531:26">[<expr pos:start="531:25" pos:end="531:25"><literal type="number" pos:start="531:25" pos:end="531:25">0</literal></expr>]</index></name> <operator pos:start="531:28" pos:end="531:28">=</operator> <operator pos:start="531:30" pos:end="531:30">(</operator><name pos:start="531:31" pos:end="531:48"><name pos:start="531:31" pos:end="531:35">frame</name><operator pos:start="531:36" pos:end="531:37">-&gt;</operator><name pos:start="531:38" pos:end="531:45">linesize</name><index pos:start="531:46" pos:end="531:48">[<expr pos:start="531:47" pos:end="531:47"><literal type="number" pos:start="531:47" pos:end="531:47">0</literal></expr>]</index></name> <operator pos:start="531:50" pos:end="531:50">+</operator> <literal type="number" pos:start="531:52" pos:end="531:52">3</literal><operator pos:start="531:53" pos:end="531:53">)</operator> <operator pos:start="531:55" pos:end="531:55">&amp;</operator> <operator pos:start="531:57" pos:end="531:57">~</operator><literal type="number" pos:start="531:58" pos:end="531:58">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="535:5" pos:end="537:27"><if pos:start="535:5" pos:end="537:27">if <condition pos:start="535:8" pos:end="535:22">(<expr pos:start="535:9" pos:end="535:21"><name pos:start="535:9" pos:end="535:21"><name pos:start="535:9" pos:end="535:15">context</name><operator pos:start="535:16" pos:end="535:17">-&gt;</operator><name pos:start="535:18" pos:end="535:21">flip</name></name></expr>)</condition><block type="pseudo" pos:start="537:9" pos:end="537:27"><block_content pos:start="537:9" pos:end="537:27">

        <expr_stmt pos:start="537:9" pos:end="537:27"><expr pos:start="537:9" pos:end="537:26"><call pos:start="537:9" pos:end="537:26"><name pos:start="537:9" pos:end="537:12">flip</name><argument_list pos:start="537:13" pos:end="537:26">(<argument pos:start="537:14" pos:end="537:18"><expr pos:start="537:14" pos:end="537:18"><name pos:start="537:14" pos:end="537:18">avctx</name></expr></argument>, <argument pos:start="537:21" pos:end="537:25"><expr pos:start="537:21" pos:end="537:25"><name pos:start="537:21" pos:end="537:25">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="541:5" pos:end="549:58"><if pos:start="541:5" pos:end="549:58">if <condition pos:start="541:8" pos:end="547:54">(<expr pos:start="541:9" pos:end="547:53"><name pos:start="541:9" pos:end="541:24"><name pos:start="541:9" pos:end="541:13">avctx</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:24">codec_tag</name></name> <operator pos:start="541:26" pos:end="541:27">==</operator> <call pos:start="541:29" pos:end="541:53"><name pos:start="541:29" pos:end="541:33">MKTAG</name><argument_list pos:start="541:34" pos:end="541:53">(<argument pos:start="541:35" pos:end="541:37"><expr pos:start="541:35" pos:end="541:37"><literal type="char" pos:start="541:35" pos:end="541:37">'Y'</literal></expr></argument>, <argument pos:start="541:40" pos:end="541:42"><expr pos:start="541:40" pos:end="541:42"><literal type="char" pos:start="541:40" pos:end="541:42">'V'</literal></expr></argument>, <argument pos:start="541:45" pos:end="541:47"><expr pos:start="541:45" pos:end="541:47"><literal type="char" pos:start="541:45" pos:end="541:47">'1'</literal></expr></argument>, <argument pos:start="541:50" pos:end="541:52"><expr pos:start="541:50" pos:end="541:52"><literal type="char" pos:start="541:50" pos:end="541:52">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="541:55" pos:end="541:56">||</operator>

        <name pos:start="543:9" pos:end="543:24"><name pos:start="543:9" pos:end="543:13">avctx</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:24">codec_tag</name></name> <operator pos:start="543:26" pos:end="543:27">==</operator> <call pos:start="543:29" pos:end="543:53"><name pos:start="543:29" pos:end="543:33">MKTAG</name><argument_list pos:start="543:34" pos:end="543:53">(<argument pos:start="543:35" pos:end="543:37"><expr pos:start="543:35" pos:end="543:37"><literal type="char" pos:start="543:35" pos:end="543:37">'Y'</literal></expr></argument>, <argument pos:start="543:40" pos:end="543:42"><expr pos:start="543:40" pos:end="543:42"><literal type="char" pos:start="543:40" pos:end="543:42">'V'</literal></expr></argument>, <argument pos:start="543:45" pos:end="543:47"><expr pos:start="543:45" pos:end="543:47"><literal type="char" pos:start="543:45" pos:end="543:47">'1'</literal></expr></argument>, <argument pos:start="543:50" pos:end="543:52"><expr pos:start="543:50" pos:end="543:52"><literal type="char" pos:start="543:50" pos:end="543:52">'6'</literal></expr></argument>)</argument_list></call> <operator pos:start="543:55" pos:end="543:56">||</operator>

        <name pos:start="545:9" pos:end="545:24"><name pos:start="545:9" pos:end="545:13">avctx</name><operator pos:start="545:14" pos:end="545:15">-&gt;</operator><name pos:start="545:16" pos:end="545:24">codec_tag</name></name> <operator pos:start="545:26" pos:end="545:27">==</operator> <call pos:start="545:29" pos:end="545:53"><name pos:start="545:29" pos:end="545:33">MKTAG</name><argument_list pos:start="545:34" pos:end="545:53">(<argument pos:start="545:35" pos:end="545:37"><expr pos:start="545:35" pos:end="545:37"><literal type="char" pos:start="545:35" pos:end="545:37">'Y'</literal></expr></argument>, <argument pos:start="545:40" pos:end="545:42"><expr pos:start="545:40" pos:end="545:42"><literal type="char" pos:start="545:40" pos:end="545:42">'V'</literal></expr></argument>, <argument pos:start="545:45" pos:end="545:47"><expr pos:start="545:45" pos:end="545:47"><literal type="char" pos:start="545:45" pos:end="545:47">'2'</literal></expr></argument>, <argument pos:start="545:50" pos:end="545:52"><expr pos:start="545:50" pos:end="545:52"><literal type="char" pos:start="545:50" pos:end="545:52">'4'</literal></expr></argument>)</argument_list></call> <operator pos:start="545:55" pos:end="545:56">||</operator>

        <name pos:start="547:9" pos:end="547:24"><name pos:start="547:9" pos:end="547:13">avctx</name><operator pos:start="547:14" pos:end="547:15">-&gt;</operator><name pos:start="547:16" pos:end="547:24">codec_tag</name></name> <operator pos:start="547:26" pos:end="547:27">==</operator> <call pos:start="547:29" pos:end="547:53"><name pos:start="547:29" pos:end="547:33">MKTAG</name><argument_list pos:start="547:34" pos:end="547:53">(<argument pos:start="547:35" pos:end="547:37"><expr pos:start="547:35" pos:end="547:37"><literal type="char" pos:start="547:35" pos:end="547:37">'Y'</literal></expr></argument>, <argument pos:start="547:40" pos:end="547:42"><expr pos:start="547:40" pos:end="547:42"><literal type="char" pos:start="547:40" pos:end="547:42">'V'</literal></expr></argument>, <argument pos:start="547:45" pos:end="547:47"><expr pos:start="547:45" pos:end="547:47"><literal type="char" pos:start="547:45" pos:end="547:47">'U'</literal></expr></argument>, <argument pos:start="547:50" pos:end="547:52"><expr pos:start="547:50" pos:end="547:52"><literal type="char" pos:start="547:50" pos:end="547:52">'9'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="549:9" pos:end="549:58"><block_content pos:start="549:9" pos:end="549:58">

        <expr_stmt pos:start="549:9" pos:end="549:58"><expr pos:start="549:9" pos:end="549:57"><call pos:start="549:9" pos:end="549:57"><name pos:start="549:9" pos:end="549:14">FFSWAP</name><argument_list pos:start="549:15" pos:end="549:57">(<argument pos:start="549:16" pos:end="549:24"><expr pos:start="549:16" pos:end="549:24"><name pos:start="549:16" pos:end="549:22">uint8_t</name> <operator pos:start="549:24" pos:end="549:24">*</operator></expr></argument>, <argument pos:start="549:27" pos:end="549:40"><expr pos:start="549:27" pos:end="549:40"><name pos:start="549:27" pos:end="549:40"><name pos:start="549:27" pos:end="549:31">frame</name><operator pos:start="549:32" pos:end="549:33">-&gt;</operator><name pos:start="549:34" pos:end="549:37">data</name><index pos:start="549:38" pos:end="549:40">[<expr pos:start="549:39" pos:end="549:39"><literal type="number" pos:start="549:39" pos:end="549:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="549:43" pos:end="549:56"><expr pos:start="549:43" pos:end="549:56"><name pos:start="549:43" pos:end="549:56"><name pos:start="549:43" pos:end="549:47">frame</name><operator pos:start="549:48" pos:end="549:49">-&gt;</operator><name pos:start="549:50" pos:end="549:53">data</name><index pos:start="549:54" pos:end="549:56">[<expr pos:start="549:55" pos:end="549:55"><literal type="number" pos:start="549:55" pos:end="549:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="553:5" pos:end="559:5"><if pos:start="553:5" pos:end="559:5">if <condition pos:start="553:8" pos:end="553:100">(<expr pos:start="553:9" pos:end="553:99"><name pos:start="553:9" pos:end="553:24"><name pos:start="553:9" pos:end="553:13">avctx</name><operator pos:start="553:14" pos:end="553:15">-&gt;</operator><name pos:start="553:16" pos:end="553:24">codec_tag</name></name> <operator pos:start="553:26" pos:end="553:27">==</operator> <call pos:start="553:29" pos:end="553:43"><name pos:start="553:29" pos:end="553:35">AV_RL32</name><argument_list pos:start="553:36" pos:end="553:43">(<argument pos:start="553:37" pos:end="553:42"><expr pos:start="553:37" pos:end="553:42"><literal type="string" pos:start="553:37" pos:end="553:42">"I420"</literal></expr></argument>)</argument_list></call> <operator pos:start="553:45" pos:end="553:46">&amp;&amp;</operator> <operator pos:start="553:48" pos:end="553:48">(</operator><name pos:start="553:49" pos:end="553:60"><name pos:start="553:49" pos:end="553:53">avctx</name><operator pos:start="553:54" pos:end="553:55">-&gt;</operator><name pos:start="553:56" pos:end="553:60">width</name></name><operator pos:start="553:61" pos:end="553:61">+</operator><literal type="number" pos:start="553:62" pos:end="553:62">1</literal><operator pos:start="553:63" pos:end="553:63">)</operator><operator pos:start="553:64" pos:end="553:64">*</operator><operator pos:start="553:65" pos:end="553:65">(</operator><name pos:start="553:66" pos:end="553:78"><name pos:start="553:66" pos:end="553:70">avctx</name><operator pos:start="553:71" pos:end="553:72">-&gt;</operator><name pos:start="553:73" pos:end="553:78">height</name></name><operator pos:start="553:79" pos:end="553:79">+</operator><literal type="number" pos:start="553:80" pos:end="553:80">1</literal><operator pos:start="553:81" pos:end="553:81">)</operator> <operator pos:start="553:83" pos:end="553:83">*</operator> <literal type="number" pos:start="553:85" pos:end="553:85">3</literal><operator pos:start="553:86" pos:end="553:86">/</operator><literal type="number" pos:start="553:87" pos:end="553:87">2</literal> <operator pos:start="553:89" pos:end="553:90">==</operator> <name pos:start="553:92" pos:end="553:99">buf_size</name></expr>)</condition> <block pos:start="553:102" pos:end="559:5">{<block_content pos:start="555:9" pos:end="557:111">

        <expr_stmt pos:start="555:9" pos:end="555:106"><expr pos:start="555:9" pos:end="555:105"><name pos:start="555:9" pos:end="555:22"><name pos:start="555:9" pos:end="555:13">frame</name><operator pos:start="555:14" pos:end="555:15">-&gt;</operator><name pos:start="555:16" pos:end="555:19">data</name><index pos:start="555:20" pos:end="555:22">[<expr pos:start="555:21" pos:end="555:21"><literal type="number" pos:start="555:21" pos:end="555:21">1</literal></expr>]</index></name> <operator pos:start="555:24" pos:end="555:24">=</operator> <name pos:start="555:26" pos:end="555:39"><name pos:start="555:26" pos:end="555:30">frame</name><operator pos:start="555:31" pos:end="555:32">-&gt;</operator><name pos:start="555:33" pos:end="555:36">data</name><index pos:start="555:37" pos:end="555:39">[<expr pos:start="555:38" pos:end="555:38"><literal type="number" pos:start="555:38" pos:end="555:38">1</literal></expr>]</index></name> <operator pos:start="555:41" pos:end="555:41">+</operator>  <operator pos:start="555:44" pos:end="555:44">(</operator><name pos:start="555:45" pos:end="555:56"><name pos:start="555:45" pos:end="555:49">avctx</name><operator pos:start="555:50" pos:end="555:51">-&gt;</operator><name pos:start="555:52" pos:end="555:56">width</name></name><operator pos:start="555:57" pos:end="555:57">+</operator><literal type="number" pos:start="555:58" pos:end="555:58">1</literal><operator pos:start="555:59" pos:end="555:59">)</operator><operator pos:start="555:60" pos:end="555:60">*</operator><operator pos:start="555:61" pos:end="555:61">(</operator><name pos:start="555:62" pos:end="555:74"><name pos:start="555:62" pos:end="555:66">avctx</name><operator pos:start="555:67" pos:end="555:68">-&gt;</operator><name pos:start="555:69" pos:end="555:74">height</name></name><operator pos:start="555:75" pos:end="555:75">+</operator><literal type="number" pos:start="555:76" pos:end="555:76">1</literal><operator pos:start="555:77" pos:end="555:77">)</operator> <operator pos:start="555:79" pos:end="555:79">-</operator><name pos:start="555:80" pos:end="555:91"><name pos:start="555:80" pos:end="555:84">avctx</name><operator pos:start="555:85" pos:end="555:86">-&gt;</operator><name pos:start="555:87" pos:end="555:91">width</name></name><operator pos:start="555:92" pos:end="555:92">*</operator><name pos:start="555:93" pos:end="555:105"><name pos:start="555:93" pos:end="555:97">avctx</name><operator pos:start="555:98" pos:end="555:99">-&gt;</operator><name pos:start="555:100" pos:end="555:105">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="557:9" pos:end="557:111"><expr pos:start="557:9" pos:end="557:110"><name pos:start="557:9" pos:end="557:22"><name pos:start="557:9" pos:end="557:13">frame</name><operator pos:start="557:14" pos:end="557:15">-&gt;</operator><name pos:start="557:16" pos:end="557:19">data</name><index pos:start="557:20" pos:end="557:22">[<expr pos:start="557:21" pos:end="557:21"><literal type="number" pos:start="557:21" pos:end="557:21">2</literal></expr>]</index></name> <operator pos:start="557:24" pos:end="557:24">=</operator> <name pos:start="557:26" pos:end="557:39"><name pos:start="557:26" pos:end="557:30">frame</name><operator pos:start="557:31" pos:end="557:32">-&gt;</operator><name pos:start="557:33" pos:end="557:36">data</name><index pos:start="557:37" pos:end="557:39">[<expr pos:start="557:38" pos:end="557:38"><literal type="number" pos:start="557:38" pos:end="557:38">2</literal></expr>]</index></name> <operator pos:start="557:41" pos:end="557:41">+</operator> <operator pos:start="557:43" pos:end="557:43">(</operator><operator pos:start="557:44" pos:end="557:44">(</operator><name pos:start="557:45" pos:end="557:56"><name pos:start="557:45" pos:end="557:49">avctx</name><operator pos:start="557:50" pos:end="557:51">-&gt;</operator><name pos:start="557:52" pos:end="557:56">width</name></name><operator pos:start="557:57" pos:end="557:57">+</operator><literal type="number" pos:start="557:58" pos:end="557:58">1</literal><operator pos:start="557:59" pos:end="557:59">)</operator><operator pos:start="557:60" pos:end="557:60">*</operator><operator pos:start="557:61" pos:end="557:61">(</operator><name pos:start="557:62" pos:end="557:74"><name pos:start="557:62" pos:end="557:66">avctx</name><operator pos:start="557:67" pos:end="557:68">-&gt;</operator><name pos:start="557:69" pos:end="557:74">height</name></name><operator pos:start="557:75" pos:end="557:75">+</operator><literal type="number" pos:start="557:76" pos:end="557:76">1</literal><operator pos:start="557:77" pos:end="557:77">)</operator> <operator pos:start="557:79" pos:end="557:79">-</operator><name pos:start="557:80" pos:end="557:91"><name pos:start="557:80" pos:end="557:84">avctx</name><operator pos:start="557:85" pos:end="557:86">-&gt;</operator><name pos:start="557:87" pos:end="557:91">width</name></name><operator pos:start="557:92" pos:end="557:92">*</operator><name pos:start="557:93" pos:end="557:105"><name pos:start="557:93" pos:end="557:97">avctx</name><operator pos:start="557:98" pos:end="557:99">-&gt;</operator><name pos:start="557:100" pos:end="557:105">height</name></name><operator pos:start="557:106" pos:end="557:106">)</operator><operator pos:start="557:107" pos:end="557:107">*</operator><literal type="number" pos:start="557:108" pos:end="557:108">5</literal><operator pos:start="557:109" pos:end="557:109">/</operator><literal type="number" pos:start="557:110" pos:end="557:110">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="563:5" pos:end="581:5"><if pos:start="563:5" pos:end="581:5">if <condition pos:start="563:8" pos:end="565:47">(<expr pos:start="563:9" pos:end="565:46"><name pos:start="563:9" pos:end="563:24"><name pos:start="563:9" pos:end="563:13">avctx</name><operator pos:start="563:14" pos:end="563:15">-&gt;</operator><name pos:start="563:16" pos:end="563:24">codec_tag</name></name> <operator pos:start="563:26" pos:end="563:27">==</operator> <call pos:start="563:29" pos:end="563:43"><name pos:start="563:29" pos:end="563:35">AV_RL32</name><argument_list pos:start="563:36" pos:end="563:43">(<argument pos:start="563:37" pos:end="563:42"><expr pos:start="563:37" pos:end="563:42"><literal type="string" pos:start="563:37" pos:end="563:42">"yuv2"</literal></expr></argument>)</argument_list></call> <operator pos:start="563:45" pos:end="563:46">&amp;&amp;</operator>

        <name pos:start="565:9" pos:end="565:22"><name pos:start="565:9" pos:end="565:13">avctx</name><operator pos:start="565:14" pos:end="565:15">-&gt;</operator><name pos:start="565:16" pos:end="565:22">pix_fmt</name></name>   <operator pos:start="565:26" pos:end="565:27">==</operator> <name pos:start="565:29" pos:end="565:46">AV_PIX_FMT_YUYV422</name></expr>)</condition> <block pos:start="565:49" pos:end="581:5">{<block_content pos:start="567:9" pos:end="579:9">

        <decl_stmt pos:start="567:9" pos:end="567:17"><decl pos:start="567:9" pos:end="567:13"><type pos:start="567:9" pos:end="567:11"><name pos:start="567:9" pos:end="567:11">int</name></type> <name pos:start="567:13" pos:end="567:13">x</name></decl>, <decl pos:start="567:16" pos:end="567:16"><type ref="prev" pos:start="567:9" pos:end="567:11"/><name pos:start="567:16" pos:end="567:16">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="569:9" pos:end="569:39"><decl pos:start="569:9" pos:end="569:38"><type pos:start="569:9" pos:end="569:17"><name pos:start="569:9" pos:end="569:15">uint8_t</name> <modifier pos:start="569:17" pos:end="569:17">*</modifier></type><name pos:start="569:18" pos:end="569:21">line</name> <init pos:start="569:23" pos:end="569:38">= <expr pos:start="569:25" pos:end="569:38"><name pos:start="569:25" pos:end="569:38"><name pos:start="569:25" pos:end="569:29">frame</name><operator pos:start="569:30" pos:end="569:31">-&gt;</operator><name pos:start="569:32" pos:end="569:35">data</name><index pos:start="569:36" pos:end="569:38">[<expr pos:start="569:37" pos:end="569:37"><literal type="number" pos:start="569:37" pos:end="569:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="571:9" pos:end="579:9">for <control pos:start="571:13" pos:end="571:43">(<init pos:start="571:14" pos:end="571:19"><expr pos:start="571:14" pos:end="571:18"><name pos:start="571:14" pos:end="571:14">y</name> <operator pos:start="571:16" pos:end="571:16">=</operator> <literal type="number" pos:start="571:18" pos:end="571:18">0</literal></expr>;</init> <condition pos:start="571:21" pos:end="571:38"><expr pos:start="571:21" pos:end="571:37"><name pos:start="571:21" pos:end="571:21">y</name> <operator pos:start="571:23" pos:end="571:23">&lt;</operator> <name pos:start="571:25" pos:end="571:37"><name pos:start="571:25" pos:end="571:29">avctx</name><operator pos:start="571:30" pos:end="571:31">-&gt;</operator><name pos:start="571:32" pos:end="571:37">height</name></name></expr>;</condition> <incr pos:start="571:40" pos:end="571:42"><expr pos:start="571:40" pos:end="571:42"><name pos:start="571:40" pos:end="571:40">y</name><operator pos:start="571:41" pos:end="571:42">++</operator></expr></incr>)</control> <block pos:start="571:45" pos:end="579:9">{<block_content pos:start="573:13" pos:end="577:39">

            <for pos:start="573:13" pos:end="575:40">for <control pos:start="573:17" pos:end="573:46">(<init pos:start="573:18" pos:end="573:23"><expr pos:start="573:18" pos:end="573:22"><name pos:start="573:18" pos:end="573:18">x</name> <operator pos:start="573:20" pos:end="573:20">=</operator> <literal type="number" pos:start="573:22" pos:end="573:22">0</literal></expr>;</init> <condition pos:start="573:25" pos:end="573:41"><expr pos:start="573:25" pos:end="573:40"><name pos:start="573:25" pos:end="573:25">x</name> <operator pos:start="573:27" pos:end="573:27">&lt;</operator> <name pos:start="573:29" pos:end="573:40"><name pos:start="573:29" pos:end="573:33">avctx</name><operator pos:start="573:34" pos:end="573:35">-&gt;</operator><name pos:start="573:36" pos:end="573:40">width</name></name></expr>;</condition> <incr pos:start="573:43" pos:end="573:45"><expr pos:start="573:43" pos:end="573:45"><name pos:start="573:43" pos:end="573:43">x</name><operator pos:start="573:44" pos:end="573:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="575:17" pos:end="575:40"><block_content pos:start="575:17" pos:end="575:40">

                <expr_stmt pos:start="575:17" pos:end="575:40"><expr pos:start="575:17" pos:end="575:39"><name pos:start="575:17" pos:end="575:31"><name pos:start="575:17" pos:end="575:20">line</name><index pos:start="575:21" pos:end="575:31">[<expr pos:start="575:22" pos:end="575:30"><literal type="number" pos:start="575:22" pos:end="575:22">2</literal> <operator pos:start="575:24" pos:end="575:24">*</operator> <name pos:start="575:26" pos:end="575:26">x</name> <operator pos:start="575:28" pos:end="575:28">+</operator> <literal type="number" pos:start="575:30" pos:end="575:30">1</literal></expr>]</index></name> <operator pos:start="575:33" pos:end="575:34">^=</operator> <literal type="number" pos:start="575:36" pos:end="575:39">0x80</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="577:13" pos:end="577:39"><expr pos:start="577:13" pos:end="577:38"><name pos:start="577:13" pos:end="577:16">line</name> <operator pos:start="577:18" pos:end="577:19">+=</operator> <name pos:start="577:21" pos:end="577:38"><name pos:start="577:21" pos:end="577:25">frame</name><operator pos:start="577:26" pos:end="577:27">-&gt;</operator><name pos:start="577:28" pos:end="577:35">linesize</name><index pos:start="577:36" pos:end="577:38">[<expr pos:start="577:37" pos:end="577:37"><literal type="number" pos:start="577:37" pos:end="577:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="585:5" pos:end="603:5"><if pos:start="585:5" pos:end="603:5">if <condition pos:start="585:8" pos:end="587:48">(<expr pos:start="585:9" pos:end="587:47"><name pos:start="585:9" pos:end="585:24"><name pos:start="585:9" pos:end="585:13">avctx</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:24">codec_tag</name></name> <operator pos:start="585:26" pos:end="585:27">==</operator> <call pos:start="585:29" pos:end="585:43"><name pos:start="585:29" pos:end="585:35">AV_RL32</name><argument_list pos:start="585:36" pos:end="585:43">(<argument pos:start="585:37" pos:end="585:42"><expr pos:start="585:37" pos:end="585:42"><literal type="string" pos:start="585:37" pos:end="585:42">"b64a"</literal></expr></argument>)</argument_list></call> <operator pos:start="585:45" pos:end="585:46">&amp;&amp;</operator>

        <name pos:start="587:9" pos:end="587:22"><name pos:start="587:9" pos:end="587:13">avctx</name><operator pos:start="587:14" pos:end="587:15">-&gt;</operator><name pos:start="587:16" pos:end="587:22">pix_fmt</name></name>   <operator pos:start="587:26" pos:end="587:27">==</operator> <name pos:start="587:29" pos:end="587:47">AV_PIX_FMT_RGBA64BE</name></expr>)</condition> <block pos:start="587:50" pos:end="603:5">{<block_content pos:start="589:9" pos:end="601:9">

        <decl_stmt pos:start="589:9" pos:end="589:38"><decl pos:start="589:9" pos:end="589:37"><type pos:start="589:9" pos:end="589:17"><name pos:start="589:9" pos:end="589:15">uint8_t</name> <modifier pos:start="589:17" pos:end="589:17">*</modifier></type><name pos:start="589:18" pos:end="589:20">dst</name> <init pos:start="589:22" pos:end="589:37">= <expr pos:start="589:24" pos:end="589:37"><name pos:start="589:24" pos:end="589:37"><name pos:start="589:24" pos:end="589:28">frame</name><operator pos:start="589:29" pos:end="589:30">-&gt;</operator><name pos:start="589:31" pos:end="589:34">data</name><index pos:start="589:35" pos:end="589:37">[<expr pos:start="589:36" pos:end="589:36"><literal type="number" pos:start="589:36" pos:end="589:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="591:9" pos:end="591:19"><decl pos:start="591:9" pos:end="591:18"><type pos:start="591:9" pos:end="591:16"><name pos:start="591:9" pos:end="591:16">uint64_t</name></type> <name pos:start="591:18" pos:end="591:18">v</name></decl>;</decl_stmt>

        <decl_stmt pos:start="593:9" pos:end="593:14"><decl pos:start="593:9" pos:end="593:13"><type pos:start="593:9" pos:end="593:11"><name pos:start="593:9" pos:end="593:11">int</name></type> <name pos:start="593:13" pos:end="593:13">x</name></decl>;</decl_stmt>

        <for pos:start="595:9" pos:end="601:9">for <control pos:start="595:13" pos:end="595:66">(<init pos:start="595:14" pos:end="595:19"><expr pos:start="595:14" pos:end="595:18"><name pos:start="595:14" pos:end="595:14">x</name> <operator pos:start="595:16" pos:end="595:16">=</operator> <literal type="number" pos:start="595:18" pos:end="595:18">0</literal></expr>;</init> <condition pos:start="595:21" pos:end="595:58"><expr pos:start="595:21" pos:end="595:57"><name pos:start="595:21" pos:end="595:21">x</name> <operator pos:start="595:23" pos:end="595:24">&gt;&gt;</operator> <literal type="number" pos:start="595:26" pos:end="595:26">3</literal> <operator pos:start="595:28" pos:end="595:28">&lt;</operator> <name pos:start="595:30" pos:end="595:41"><name pos:start="595:30" pos:end="595:34">avctx</name><operator pos:start="595:35" pos:end="595:36">-&gt;</operator><name pos:start="595:37" pos:end="595:41">width</name></name> <operator pos:start="595:43" pos:end="595:43">*</operator> <name pos:start="595:45" pos:end="595:57"><name pos:start="595:45" pos:end="595:49">avctx</name><operator pos:start="595:50" pos:end="595:51">-&gt;</operator><name pos:start="595:52" pos:end="595:57">height</name></name></expr>;</condition> <incr pos:start="595:60" pos:end="595:65"><expr pos:start="595:60" pos:end="595:65"><name pos:start="595:60" pos:end="595:60">x</name> <operator pos:start="595:62" pos:end="595:63">+=</operator> <literal type="number" pos:start="595:65" pos:end="595:65">8</literal></expr></incr>)</control> <block pos:start="595:68" pos:end="601:9">{<block_content pos:start="597:13" pos:end="599:48">

            <expr_stmt pos:start="597:13" pos:end="597:33"><expr pos:start="597:13" pos:end="597:32"><name pos:start="597:13" pos:end="597:13">v</name> <operator pos:start="597:15" pos:end="597:15">=</operator> <call pos:start="597:17" pos:end="597:32"><name pos:start="597:17" pos:end="597:23">AV_RB64</name><argument_list pos:start="597:24" pos:end="597:32">(<argument pos:start="597:25" pos:end="597:31"><expr pos:start="597:25" pos:end="597:31"><operator pos:start="597:25" pos:end="597:25">&amp;</operator><name pos:start="597:26" pos:end="597:31"><name pos:start="597:26" pos:end="597:28">dst</name><index pos:start="597:29" pos:end="597:31">[<expr pos:start="597:30" pos:end="597:30"><name pos:start="597:30" pos:end="597:30">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:48"><expr pos:start="599:13" pos:end="599:47"><call pos:start="599:13" pos:end="599:47"><name pos:start="599:13" pos:end="599:19">AV_WB64</name><argument_list pos:start="599:20" pos:end="599:47">(<argument pos:start="599:21" pos:end="599:27"><expr pos:start="599:21" pos:end="599:27"><operator pos:start="599:21" pos:end="599:21">&amp;</operator><name pos:start="599:22" pos:end="599:27"><name pos:start="599:22" pos:end="599:24">dst</name><index pos:start="599:25" pos:end="599:27">[<expr pos:start="599:26" pos:end="599:26"><name pos:start="599:26" pos:end="599:26">x</name></expr>]</index></name></expr></argument>, <argument pos:start="599:30" pos:end="599:46"><expr pos:start="599:30" pos:end="599:46"><name pos:start="599:30" pos:end="599:30">v</name> <operator pos:start="599:32" pos:end="599:33">&lt;&lt;</operator> <literal type="number" pos:start="599:35" pos:end="599:36">16</literal> <operator pos:start="599:38" pos:end="599:38">|</operator> <name pos:start="599:40" pos:end="599:40">v</name> <operator pos:start="599:42" pos:end="599:43">&gt;&gt;</operator> <literal type="number" pos:start="599:45" pos:end="599:46">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="607:5" pos:end="615:5"><if pos:start="607:5" pos:end="615:5">if <condition pos:start="607:8" pos:end="607:50">(<expr pos:start="607:9" pos:end="607:49"><name pos:start="607:9" pos:end="607:26"><name pos:start="607:9" pos:end="607:13">avctx</name><operator pos:start="607:14" pos:end="607:15">-&gt;</operator><name pos:start="607:16" pos:end="607:26">field_order</name></name> <operator pos:start="607:28" pos:end="607:28">&gt;</operator> <name pos:start="607:30" pos:end="607:49">AV_FIELD_PROGRESSIVE</name></expr>)</condition> <block pos:start="607:52" pos:end="615:5">{<block_content pos:start="609:9" pos:end="613:39"> <comment type="block" pos:start="607:54" pos:end="607:107">/* we have interlaced material flagged in container */</comment>

        <expr_stmt pos:start="609:9" pos:end="609:36"><expr pos:start="609:9" pos:end="609:35"><name pos:start="609:9" pos:end="609:31"><name pos:start="609:9" pos:end="609:13">frame</name><operator pos:start="609:14" pos:end="609:15">-&gt;</operator><name pos:start="609:16" pos:end="609:31">interlaced_frame</name></name> <operator pos:start="609:33" pos:end="609:33">=</operator> <literal type="number" pos:start="609:35" pos:end="609:35">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="611:9" pos:end="613:39"><if pos:start="611:9" pos:end="613:39">if <condition pos:start="611:12" pos:end="611:83">(<expr pos:start="611:13" pos:end="611:82"><name pos:start="611:13" pos:end="611:30"><name pos:start="611:13" pos:end="611:17">avctx</name><operator pos:start="611:18" pos:end="611:19">-&gt;</operator><name pos:start="611:20" pos:end="611:30">field_order</name></name> <operator pos:start="611:32" pos:end="611:33">==</operator> <name pos:start="611:35" pos:end="611:45">AV_FIELD_TT</name> <operator pos:start="611:47" pos:end="611:48">||</operator> <name pos:start="611:50" pos:end="611:67"><name pos:start="611:50" pos:end="611:54">avctx</name><operator pos:start="611:55" pos:end="611:56">-&gt;</operator><name pos:start="611:57" pos:end="611:67">field_order</name></name> <operator pos:start="611:69" pos:end="611:70">==</operator> <name pos:start="611:72" pos:end="611:82">AV_FIELD_TB</name></expr>)</condition><block type="pseudo" pos:start="613:13" pos:end="613:39"><block_content pos:start="613:13" pos:end="613:39">

            <expr_stmt pos:start="613:13" pos:end="613:39"><expr pos:start="613:13" pos:end="613:38"><name pos:start="613:13" pos:end="613:34"><name pos:start="613:13" pos:end="613:17">frame</name><operator pos:start="613:18" pos:end="613:19">-&gt;</operator><name pos:start="613:20" pos:end="613:34">top_field_first</name></name> <operator pos:start="613:36" pos:end="613:36">=</operator> <literal type="number" pos:start="613:38" pos:end="613:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="619:5" pos:end="619:19"><expr pos:start="619:5" pos:end="619:18"><operator pos:start="619:5" pos:end="619:5">*</operator><name pos:start="619:6" pos:end="619:14">got_frame</name> <operator pos:start="619:16" pos:end="619:16">=</operator> <literal type="number" pos:start="619:18" pos:end="619:18">1</literal></expr>;</expr_stmt>

    <return pos:start="621:5" pos:end="621:20">return <expr pos:start="621:12" pos:end="621:19"><name pos:start="621:12" pos:end="621:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
