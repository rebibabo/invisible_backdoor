<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14548.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">event_thread</name><parameter_list pos:start="1:24" pos:end="1:34">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="185:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:28">= <expr pos:start="5:26" pos:end="5:28"><name pos:start="5:26" pos:end="5:28">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SDLContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">sdl</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:79"><decl pos:start="9:5" pos:end="9:78"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">flags</name> <init pos:start="9:15" pos:end="9:78">= <expr pos:start="9:17" pos:end="9:78"><name pos:start="9:17" pos:end="9:30">SDL_BASE_FLAGS</name> <operator pos:start="9:32" pos:end="9:32">|</operator> <operator pos:start="9:34" pos:end="9:34">(</operator><ternary pos:start="9:35" pos:end="9:77"><condition pos:start="9:35" pos:end="9:58"><expr pos:start="9:35" pos:end="9:56"><name pos:start="9:35" pos:end="9:56"><name pos:start="9:35" pos:end="9:37">sdl</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:56">window_fullscreen</name></name></expr> ?</condition><then pos:start="9:60" pos:end="9:73"> <expr pos:start="9:60" pos:end="9:73"><name pos:start="9:60" pos:end="9:73">SDL_FULLSCREEN</name></expr> </then><else pos:start="9:75" pos:end="9:77">: <expr pos:start="9:77" pos:end="9:77"><literal type="number" pos:start="9:77" pos:end="9:77">0</literal></expr></else></ternary><operator pos:start="9:78" pos:end="9:78">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:32">= <expr pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:32"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:29">streams</name><index pos:start="11:30" pos:end="11:32">[<expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">AVCodecContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:26">encctx</name> <init pos:start="13:28" pos:end="13:38">= <expr pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:38"><name pos:start="13:30" pos:end="13:31">st</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:38">codec</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:24">/* initialization */</comment>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:16">SDL_Init</name><argument_list pos:start="19:17" pos:end="19:32">(<argument pos:start="19:18" pos:end="19:31"><expr pos:start="19:18" pos:end="19:31"><name pos:start="19:18" pos:end="19:31">SDL_INIT_VIDEO</name></expr></argument>)</argument_list></call> <operator pos:start="19:34" pos:end="19:35">!=</operator> <literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>)</condition> <block pos:start="19:40" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:22">

        <expr_stmt pos:start="21:9" pos:end="21:82"><expr pos:start="21:9" pos:end="21:81"><call pos:start="21:9" pos:end="21:81"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:81">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:33" pos:end="21:64"><expr pos:start="21:33" pos:end="21:64"><literal type="string" pos:start="21:33" pos:end="21:64">"Unable to initialize SDL: %s\n"</literal></expr></argument>, <argument pos:start="21:67" pos:end="21:80"><expr pos:start="21:67" pos:end="21:80"><call pos:start="21:67" pos:end="21:80"><name pos:start="21:67" pos:end="21:78">SDL_GetError</name><argument_list pos:start="21:79" pos:end="21:80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">sdl</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:21">init_ret</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <call pos:start="23:25" pos:end="23:39"><name pos:start="23:25" pos:end="23:31">AVERROR</name><argument_list pos:start="23:32" pos:end="23:39">(<argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="25:9" pos:end="25:22">goto <name pos:start="25:14" pos:end="25:21">init_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><call pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:21">SDL_WM_SetCaption</name><argument_list pos:start="31:22" pos:end="31:57">(<argument pos:start="31:23" pos:end="31:39"><expr pos:start="31:23" pos:end="31:39"><name pos:start="31:23" pos:end="31:39"><name pos:start="31:23" pos:end="31:25">sdl</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:39">window_title</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:56"><expr pos:start="31:42" pos:end="31:56"><name pos:start="31:42" pos:end="31:56"><name pos:start="31:42" pos:end="31:44">sdl</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:56">icon_title</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:47"><expr pos:start="33:5" pos:end="35:46"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:7">sdl</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:16">surface</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="35:46"><name pos:start="33:20" pos:end="33:35">SDL_SetVideoMode</name><argument_list pos:start="33:36" pos:end="35:46">(<argument pos:start="33:37" pos:end="33:53"><expr pos:start="33:37" pos:end="33:53"><name pos:start="33:37" pos:end="33:53"><name pos:start="33:37" pos:end="33:39">sdl</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:53">window_width</name></name></expr></argument>, <argument pos:start="33:56" pos:end="33:73"><expr pos:start="33:56" pos:end="33:73"><name pos:start="33:56" pos:end="33:73"><name pos:start="33:56" pos:end="33:58">sdl</name><operator pos:start="33:59" pos:end="33:60">-&gt;</operator><name pos:start="33:61" pos:end="33:73">window_height</name></name></expr></argument>,

                                    <argument pos:start="35:37" pos:end="35:38"><expr pos:start="35:37" pos:end="35:38"><literal type="number" pos:start="35:37" pos:end="35:38">24</literal></expr></argument>, <argument pos:start="35:41" pos:end="35:45"><expr pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:45">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:21"><name pos:start="37:10" pos:end="37:12">sdl</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:21">surface</name></name></expr>)</condition> <block pos:start="37:24" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:22">

        <expr_stmt pos:start="39:9" pos:end="39:84"><expr pos:start="39:9" pos:end="39:83"><call pos:start="39:9" pos:end="39:83"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:83">(<argument pos:start="39:16" pos:end="39:18"><expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">sdl</name></expr></argument>, <argument pos:start="39:21" pos:end="39:32"><expr pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:35" pos:end="39:66"><expr pos:start="39:35" pos:end="39:66"><literal type="string" pos:start="39:35" pos:end="39:66">"Unable to set video mode: %s\n"</literal></expr></argument>, <argument pos:start="39:69" pos:end="39:82"><expr pos:start="39:69" pos:end="39:82"><call pos:start="39:69" pos:end="39:82"><name pos:start="39:69" pos:end="39:80">SDL_GetError</name><argument_list pos:start="39:81" pos:end="39:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">sdl</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:21">init_ret</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:31">AVERROR</name><argument_list pos:start="41:32" pos:end="41:39">(<argument pos:start="41:33" pos:end="41:38"><expr pos:start="41:33" pos:end="41:38"><name pos:start="41:33" pos:end="41:38">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:22">goto <name pos:start="43:14" pos:end="43:21">init_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:72"><expr pos:start="49:5" pos:end="51:71"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:7">sdl</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:16">overlay</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="51:71"><name pos:start="49:20" pos:end="49:39">SDL_CreateYUVOverlay</name><argument_list pos:start="49:40" pos:end="51:71">(<argument pos:start="49:41" pos:end="49:53"><expr pos:start="49:41" pos:end="49:53"><name pos:start="49:41" pos:end="49:53"><name pos:start="49:41" pos:end="49:46">encctx</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:53">width</name></name></expr></argument>, <argument pos:start="49:56" pos:end="49:69"><expr pos:start="49:56" pos:end="49:69"><name pos:start="49:56" pos:end="49:69"><name pos:start="49:56" pos:end="49:61">encctx</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:69">height</name></name></expr></argument>,

                                        <argument pos:start="51:41" pos:end="51:56"><expr pos:start="51:41" pos:end="51:56"><name pos:start="51:41" pos:end="51:56"><name pos:start="51:41" pos:end="51:43">sdl</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:56">overlay_fmt</name></name></expr></argument>, <argument pos:start="51:59" pos:end="51:70"><expr pos:start="51:59" pos:end="51:70"><name pos:start="51:59" pos:end="51:70"><name pos:start="51:59" pos:end="51:61">sdl</name><operator pos:start="51:62" pos:end="51:63">-&gt;</operator><name pos:start="51:64" pos:end="51:70">surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:66">(<expr pos:start="53:9" pos:end="53:65"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:21"><name pos:start="53:10" pos:end="53:12">sdl</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:21">overlay</name></name> <operator pos:start="53:23" pos:end="53:24">||</operator> <name pos:start="53:26" pos:end="53:49"><name pos:start="53:26" pos:end="53:28">sdl</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:37">overlay</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:46">pitches</name><index pos:start="53:47" pos:end="53:49">[<expr pos:start="53:48" pos:end="53:48"><literal type="number" pos:start="53:48" pos:end="53:48">0</literal></expr>]</index></name> <operator pos:start="53:51" pos:end="53:51">&lt;</operator> <name pos:start="53:53" pos:end="53:65"><name pos:start="53:53" pos:end="53:58">encctx</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:65">width</name></name></expr>)</condition> <block pos:start="53:68" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:22">

        <expr_stmt pos:start="55:9" pos:end="59:46"><expr pos:start="55:9" pos:end="59:45"><call pos:start="55:9" pos:end="59:45"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="59:45">(<argument pos:start="55:16" pos:end="55:16"><expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">s</name></expr></argument>, <argument pos:start="55:19" pos:end="55:30"><expr pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="57:16" pos:end="57:76"><expr pos:start="57:16" pos:end="57:76"><literal type="string" pos:start="57:16" pos:end="57:76">"SDL does not support an overlay with size of %dx%d pixels\n"</literal></expr></argument>,

               <argument pos:start="59:16" pos:end="59:28"><expr pos:start="59:16" pos:end="59:28"><name pos:start="59:16" pos:end="59:28"><name pos:start="59:16" pos:end="59:21">encctx</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:28">width</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:44"><expr pos:start="59:31" pos:end="59:44"><name pos:start="59:31" pos:end="59:44"><name pos:start="59:31" pos:end="59:36">encctx</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:44">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:11">sdl</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:21">init_ret</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:39"><name pos:start="61:25" pos:end="61:31">AVERROR</name><argument_list pos:start="61:32" pos:end="61:39">(<argument pos:start="61:33" pos:end="61:38"><expr pos:start="61:33" pos:end="61:38"><name pos:start="61:33" pos:end="61:38">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:22">goto <name pos:start="63:14" pos:end="63:21">init_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:7">sdl</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:17">init_ret</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="75:53"><expr pos:start="71:5" pos:end="75:52"><call pos:start="71:5" pos:end="75:52"><name pos:start="71:5" pos:end="71:10">av_log</name><argument_list pos:start="71:11" pos:end="75:52">(<argument pos:start="71:12" pos:end="71:12"><expr pos:start="71:12" pos:end="71:12"><name pos:start="71:12" pos:end="71:12">s</name></expr></argument>, <argument pos:start="71:15" pos:end="71:28"><expr pos:start="71:15" pos:end="71:28"><name pos:start="71:15" pos:end="71:28">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="71:31" pos:end="71:63"><expr pos:start="71:31" pos:end="71:63"><literal type="string" pos:start="71:31" pos:end="71:63">"w:%d h:%d fmt:%s -&gt; w:%d h:%d\n"</literal></expr></argument>,

           <argument pos:start="73:12" pos:end="73:24"><expr pos:start="73:12" pos:end="73:24"><name pos:start="73:12" pos:end="73:24"><name pos:start="73:12" pos:end="73:17">encctx</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:24">width</name></name></expr></argument>, <argument pos:start="73:27" pos:end="73:40"><expr pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:32">encctx</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:40">height</name></name></expr></argument>, <argument pos:start="73:43" pos:end="73:78"><expr pos:start="73:43" pos:end="73:78"><call pos:start="73:43" pos:end="73:78"><name pos:start="73:43" pos:end="73:61">av_get_pix_fmt_name</name><argument_list pos:start="73:62" pos:end="73:78">(<argument pos:start="73:63" pos:end="73:77"><expr pos:start="73:63" pos:end="73:77"><name pos:start="73:63" pos:end="73:77"><name pos:start="73:63" pos:end="73:68">encctx</name><operator pos:start="73:69" pos:end="73:70">-&gt;</operator><name pos:start="73:71" pos:end="73:77">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="75:12" pos:end="75:30"><expr pos:start="75:12" pos:end="75:30"><name pos:start="75:12" pos:end="75:30"><name pos:start="75:12" pos:end="75:14">sdl</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:28">overlay_rect</name><operator pos:start="75:29" pos:end="75:29">.</operator><name pos:start="75:30" pos:end="75:30">w</name></name></expr></argument>, <argument pos:start="75:33" pos:end="75:51"><expr pos:start="75:33" pos:end="75:51"><name pos:start="75:33" pos:end="75:51"><name pos:start="75:33" pos:end="75:35">sdl</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:49">overlay_rect</name><operator pos:start="75:50" pos:end="75:50">.</operator><name pos:start="75:51" pos:end="75:51">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="79:1" pos:end="79:9"><name pos:start="79:1" pos:end="79:8">init_end</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><call pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:17">SDL_LockMutex</name><argument_list pos:start="81:18" pos:end="81:29">(<argument pos:start="81:19" pos:end="81:28"><expr pos:start="81:19" pos:end="81:28"><name pos:start="81:19" pos:end="81:28"><name pos:start="81:19" pos:end="81:21">sdl</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:28">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:20"><expr pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:7">sdl</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:15">inited</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:32"><expr pos:start="85:5" pos:end="85:31"><call pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:19">SDL_UnlockMutex</name><argument_list pos:start="85:20" pos:end="85:31">(<argument pos:start="85:21" pos:end="85:30"><expr pos:start="85:21" pos:end="85:30"><name pos:start="85:21" pos:end="85:30"><name pos:start="85:21" pos:end="85:23">sdl</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:30">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><call pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:18">SDL_CondSignal</name><argument_list pos:start="87:19" pos:end="87:34">(<argument pos:start="87:20" pos:end="87:33"><expr pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:22">sdl</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:33">init_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="93:29"><if pos:start="91:5" pos:end="93:29">if <condition pos:start="91:8" pos:end="91:26">(<expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:11">sdl</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:21">init_ret</name></name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <literal type="number" pos:start="91:25" pos:end="91:25">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:29"><block_content pos:start="93:9" pos:end="93:29">

        <return pos:start="93:9" pos:end="93:29">return <expr pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:18">sdl</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:28">init_ret</name></name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:20">/* event loop */</comment>

    <while pos:start="99:5" pos:end="181:5">while <condition pos:start="99:11" pos:end="99:22">(<expr pos:start="99:12" pos:end="99:21"><operator pos:start="99:12" pos:end="99:12">!</operator><name pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:15">sdl</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:21">quit</name></name></expr>)</condition> <block pos:start="99:24" pos:end="181:5">{<block_content pos:start="101:9" pos:end="179:9">

        <decl_stmt pos:start="101:9" pos:end="101:16"><decl pos:start="101:9" pos:end="101:15"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:24"><decl pos:start="103:9" pos:end="103:23"><type pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:17">SDL_Event</name></type> <name pos:start="103:19" pos:end="103:23">event</name></decl>;</decl_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:25"><expr pos:start="105:9" pos:end="105:24"><call pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:22">SDL_PumpEvents</name><argument_list pos:start="105:23" pos:end="105:24">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:69"><expr pos:start="107:9" pos:end="107:68"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:68"><name pos:start="107:15" pos:end="107:28">SDL_PeepEvents</name><argument_list pos:start="107:29" pos:end="107:68">(<argument pos:start="107:30" pos:end="107:35"><expr pos:start="107:30" pos:end="107:35"><operator pos:start="107:30" pos:end="107:30">&amp;</operator><name pos:start="107:31" pos:end="107:35">event</name></expr></argument>, <argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><literal type="number" pos:start="107:38" pos:end="107:38">1</literal></expr></argument>, <argument pos:start="107:41" pos:end="107:52"><expr pos:start="107:41" pos:end="107:52"><name pos:start="107:41" pos:end="107:52">SDL_GETEVENT</name></expr></argument>, <argument pos:start="107:55" pos:end="107:67"><expr pos:start="107:55" pos:end="107:67"><name pos:start="107:55" pos:end="107:67">SDL_ALLEVENTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="111:90"><if pos:start="109:9" pos:end="111:90">if <condition pos:start="109:12" pos:end="109:20">(<expr pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">&lt;</operator> <literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:90"><block_content pos:start="111:13" pos:end="111:90">

            <expr_stmt pos:start="111:13" pos:end="111:90"><expr pos:start="111:13" pos:end="111:89"><call pos:start="111:13" pos:end="111:89"><name pos:start="111:13" pos:end="111:18">av_log</name><argument_list pos:start="111:19" pos:end="111:89">(<argument pos:start="111:20" pos:end="111:20"><expr pos:start="111:20" pos:end="111:20"><name pos:start="111:20" pos:end="111:20">s</name></expr></argument>, <argument pos:start="111:23" pos:end="111:34"><expr pos:start="111:23" pos:end="111:34"><name pos:start="111:23" pos:end="111:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:37" pos:end="111:72"><expr pos:start="111:37" pos:end="111:72"><literal type="string" pos:start="111:37" pos:end="111:72">"Error when getting SDL event: %s\n"</literal></expr></argument>, <argument pos:start="111:75" pos:end="111:88"><expr pos:start="111:75" pos:end="111:88"><call pos:start="111:75" pos:end="111:88"><name pos:start="111:75" pos:end="111:86">SDL_GetError</name><argument_list pos:start="111:87" pos:end="111:88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="115:21"><if pos:start="113:9" pos:end="115:21">if <condition pos:start="113:12" pos:end="113:21">(<expr pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:18">&lt;=</operator> <literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:21"><block_content pos:start="115:13" pos:end="115:21">

            <continue pos:start="115:13" pos:end="115:21">continue;</continue></block_content></block></if></if_stmt>



        <switch pos:start="119:9" pos:end="179:9">switch <condition pos:start="119:16" pos:end="119:27">(<expr pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:21">event</name><operator pos:start="119:22" pos:end="119:22">.</operator><name pos:start="119:23" pos:end="119:26">type</name></name></expr>)</condition> <block pos:start="119:29" pos:end="179:9">{<block_content pos:start="121:9" pos:end="177:18">

        <case pos:start="121:9" pos:end="121:25">case <expr pos:start="121:14" pos:end="121:24"><name pos:start="121:14" pos:end="121:24">SDL_KEYDOWN</name></expr>:</case>

            <switch pos:start="123:13" pos:end="133:13">switch <condition pos:start="123:20" pos:end="123:41">(<expr pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:25">event</name><operator pos:start="123:26" pos:end="123:26">.</operator><name pos:start="123:27" pos:end="123:29">key</name><operator pos:start="123:30" pos:end="123:30">.</operator><name pos:start="123:31" pos:end="123:36">keysym</name><operator pos:start="123:37" pos:end="123:37">.</operator><name pos:start="123:38" pos:end="123:40">sym</name></name></expr>)</condition> <block pos:start="123:43" pos:end="133:13">{<block_content pos:start="125:13" pos:end="131:22">

            <case pos:start="125:13" pos:end="125:29">case <expr pos:start="125:18" pos:end="125:28"><name pos:start="125:18" pos:end="125:28">SDLK_ESCAPE</name></expr>:</case>

            <case pos:start="127:13" pos:end="127:24">case <expr pos:start="127:18" pos:end="127:23"><name pos:start="127:18" pos:end="127:23">SDLK_q</name></expr>:</case>

                <expr_stmt pos:start="129:17" pos:end="129:30"><expr pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:25"><name pos:start="129:17" pos:end="129:19">sdl</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:25">quit</name></name> <operator pos:start="129:27" pos:end="129:27">=</operator> <literal type="number" pos:start="129:29" pos:end="129:29">1</literal></expr>;</expr_stmt>

                <break pos:start="131:17" pos:end="131:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:22">case <expr pos:start="137:14" pos:end="137:21"><name pos:start="137:14" pos:end="137:21">SDL_QUIT</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:26"><expr pos:start="139:13" pos:end="139:25"><name pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:15">sdl</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:21">quit</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <literal type="number" pos:start="139:25" pos:end="139:25">1</literal></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>



        <case pos:start="145:9" pos:end="145:29">case <expr pos:start="145:14" pos:end="145:28"><name pos:start="145:14" pos:end="145:28">SDL_VIDEORESIZE</name></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:48"><expr pos:start="147:13" pos:end="147:47"><name pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:15">sdl</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:29">window_width</name></name>  <operator pos:start="147:32" pos:end="147:32">=</operator> <name pos:start="147:34" pos:end="147:47"><name pos:start="147:34" pos:end="147:38">event</name><operator pos:start="147:39" pos:end="147:39">.</operator><name pos:start="147:40" pos:end="147:45">resize</name><operator pos:start="147:46" pos:end="147:46">.</operator><name pos:start="147:47" pos:end="147:47">w</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:48"><expr pos:start="149:13" pos:end="149:47"><name pos:start="149:13" pos:end="149:30"><name pos:start="149:13" pos:end="149:15">sdl</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:30">window_height</name></name> <operator pos:start="149:32" pos:end="149:32">=</operator> <name pos:start="149:34" pos:end="149:47"><name pos:start="149:34" pos:end="149:38">event</name><operator pos:start="149:39" pos:end="149:39">.</operator><name pos:start="149:40" pos:end="149:45">resize</name><operator pos:start="149:46" pos:end="149:46">.</operator><name pos:start="149:47" pos:end="149:47">h</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:38"><expr pos:start="153:13" pos:end="153:37"><call pos:start="153:13" pos:end="153:37"><name pos:start="153:13" pos:end="153:25">SDL_LockMutex</name><argument_list pos:start="153:26" pos:end="153:37">(<argument pos:start="153:27" pos:end="153:36"><expr pos:start="153:27" pos:end="153:36"><name pos:start="153:27" pos:end="153:36"><name pos:start="153:27" pos:end="153:29">sdl</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:36">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:103"><expr pos:start="155:13" pos:end="155:102"><name pos:start="155:13" pos:end="155:24"><name pos:start="155:13" pos:end="155:15">sdl</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:24">surface</name></name> <operator pos:start="155:26" pos:end="155:26">=</operator> <call pos:start="155:28" pos:end="155:102"><name pos:start="155:28" pos:end="155:43">SDL_SetVideoMode</name><argument_list pos:start="155:44" pos:end="155:102">(<argument pos:start="155:45" pos:end="155:61"><expr pos:start="155:45" pos:end="155:61"><name pos:start="155:45" pos:end="155:61"><name pos:start="155:45" pos:end="155:47">sdl</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:61">window_width</name></name></expr></argument>, <argument pos:start="155:64" pos:end="155:81"><expr pos:start="155:64" pos:end="155:81"><name pos:start="155:64" pos:end="155:81"><name pos:start="155:64" pos:end="155:66">sdl</name><operator pos:start="155:67" pos:end="155:68">-&gt;</operator><name pos:start="155:69" pos:end="155:81">window_height</name></name></expr></argument>, <argument pos:start="155:84" pos:end="155:85"><expr pos:start="155:84" pos:end="155:85"><literal type="number" pos:start="155:84" pos:end="155:85">24</literal></expr></argument>, <argument pos:start="155:88" pos:end="155:101"><expr pos:start="155:88" pos:end="155:101"><name pos:start="155:88" pos:end="155:101">SDL_BASE_FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="157:13" pos:end="167:13"><if pos:start="157:13" pos:end="163:13">if <condition pos:start="157:16" pos:end="157:30">(<expr pos:start="157:17" pos:end="157:29"><operator pos:start="157:17" pos:end="157:17">!</operator><name pos:start="157:18" pos:end="157:29"><name pos:start="157:18" pos:end="157:20">sdl</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:29">surface</name></name></expr>)</condition> <block pos:start="157:32" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:30">

                <expr_stmt pos:start="159:17" pos:end="159:94"><expr pos:start="159:17" pos:end="159:93"><call pos:start="159:17" pos:end="159:93"><name pos:start="159:17" pos:end="159:22">av_log</name><argument_list pos:start="159:23" pos:end="159:93">(<argument pos:start="159:24" pos:end="159:24"><expr pos:start="159:24" pos:end="159:24"><name pos:start="159:24" pos:end="159:24">s</name></expr></argument>, <argument pos:start="159:27" pos:end="159:38"><expr pos:start="159:27" pos:end="159:38"><name pos:start="159:27" pos:end="159:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:41" pos:end="159:76"><expr pos:start="159:41" pos:end="159:76"><literal type="string" pos:start="159:41" pos:end="159:76">"Failed to set SDL video mode: %s\n"</literal></expr></argument>, <argument pos:start="159:79" pos:end="159:92"><expr pos:start="159:79" pos:end="159:92"><call pos:start="159:79" pos:end="159:92"><name pos:start="159:79" pos:end="159:90">SDL_GetError</name><argument_list pos:start="159:91" pos:end="159:92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:30"><expr pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:25"><name pos:start="161:17" pos:end="161:19">sdl</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:25">quit</name></name> <operator pos:start="161:27" pos:end="161:27">=</operator> <literal type="number" pos:start="161:29" pos:end="161:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="163:15" pos:end="167:13">else <block pos:start="163:20" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:40">

                <expr_stmt pos:start="165:17" pos:end="165:40"><expr pos:start="165:17" pos:end="165:39"><call pos:start="165:17" pos:end="165:39"><name pos:start="165:17" pos:end="165:36">compute_overlay_rect</name><argument_list pos:start="165:37" pos:end="165:39">(<argument pos:start="165:38" pos:end="165:38"><expr pos:start="165:38" pos:end="165:38"><name pos:start="165:38" pos:end="165:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:40"><expr pos:start="169:13" pos:end="169:39"><call pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:27">SDL_UnlockMutex</name><argument_list pos:start="169:28" pos:end="169:39">(<argument pos:start="169:29" pos:end="169:38"><expr pos:start="169:29" pos:end="169:38"><name pos:start="169:29" pos:end="169:38"><name pos:start="169:29" pos:end="169:31">sdl</name><operator pos:start="169:32" pos:end="169:33">-&gt;</operator><name pos:start="169:34" pos:end="169:38">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>



        <default pos:start="175:9" pos:end="175:16">default:</default>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
