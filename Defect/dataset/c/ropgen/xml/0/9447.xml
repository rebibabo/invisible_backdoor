<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9447.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_nvdec_frame_params</name><parameter_list pos:start="1:26" pos:end="5:39">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:52"><decl pos:start="3:27" pos:end="3:52"><type pos:start="3:27" pos:end="3:52"><name pos:start="3:27" pos:end="3:37">AVBufferRef</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:52">hw_frames_ctx</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:38"><decl pos:start="5:27" pos:end="5:38"><type pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:29">int</name></type> <name pos:start="5:31" pos:end="5:38">dpb_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:13">

    <decl_stmt pos:start="9:5" pos:end="9:76"><decl pos:start="9:5" pos:end="9:75"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVHWFramesContext</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:33">frames_ctx</name> <init pos:start="9:35" pos:end="9:75">= <expr pos:start="9:37" pos:end="9:75"><operator pos:start="9:37" pos:end="9:37">(</operator><name pos:start="9:38" pos:end="9:54">AVHWFramesContext</name><operator pos:start="9:55" pos:end="9:55">*</operator><operator pos:start="9:56" pos:end="9:56">)</operator><name pos:start="9:57" pos:end="9:75"><name pos:start="9:57" pos:end="9:69">hw_frames_ctx</name><operator pos:start="9:70" pos:end="9:71">-&gt;</operator><name pos:start="9:72" pos:end="9:75">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:28">AVPixFmtDescriptor</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:37">sw_desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:24">cuvid_codec_type</name></decl>, <decl pos:start="13:27" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:45">cuvid_chroma_format</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:11">sw_desc</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:52"><name pos:start="17:15" pos:end="17:33">av_pix_fmt_desc_get</name><argument_list pos:start="17:34" pos:end="17:52">(<argument pos:start="17:35" pos:end="17:51"><expr pos:start="17:35" pos:end="17:51"><name pos:start="17:35" pos:end="17:51"><name pos:start="17:35" pos:end="17:39">avctx</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:51">sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:27"><if pos:start="19:5" pos:end="21:27">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:16">sw_desc</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:27"><block_content pos:start="21:9" pos:end="21:27">

        <return pos:start="21:9" pos:end="21:27">return <expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><name pos:start="25:5" pos:end="25:20">cuvid_codec_type</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:54"><name pos:start="25:24" pos:end="25:37">map_avcodec_id</name><argument_list pos:start="25:38" pos:end="25:54">(<argument pos:start="25:39" pos:end="25:53"><expr pos:start="25:39" pos:end="25:53"><name pos:start="25:39" pos:end="25:53"><name pos:start="25:39" pos:end="25:43">avctx</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:53">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:24">cuvid_codec_type</name> <operator pos:start="27:26" pos:end="27:26">&lt;</operator> <literal type="number" pos:start="27:28" pos:end="27:28">0</literal></expr>)</condition> <block pos:start="27:31" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:27">

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><call pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:61">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:60"><expr pos:start="29:37" pos:end="29:60"><literal type="string" pos:start="29:37" pos:end="29:60">"Unsupported codec ID\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:27">return <expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:26">AVERROR_BUG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:63"><expr pos:start="37:5" pos:end="37:62"><name pos:start="37:5" pos:end="37:23">cuvid_chroma_format</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:62"><name pos:start="37:27" pos:end="37:43">map_chroma_format</name><argument_list pos:start="37:44" pos:end="37:62">(<argument pos:start="37:45" pos:end="37:61"><expr pos:start="37:45" pos:end="37:61"><name pos:start="37:45" pos:end="37:61"><name pos:start="37:45" pos:end="37:49">avctx</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:61">sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:32">(<expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:27">cuvid_chroma_format</name> <operator pos:start="39:29" pos:end="39:29">&lt;</operator> <literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr>)</condition> <block pos:start="39:34" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:31">

        <expr_stmt pos:start="41:9" pos:end="41:69"><expr pos:start="41:9" pos:end="41:68"><call pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:68">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:36"><expr pos:start="41:23" pos:end="41:36"><name pos:start="41:23" pos:end="41:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="41:39" pos:end="41:67"><expr pos:start="41:39" pos:end="41:67"><literal type="string" pos:start="41:39" pos:end="41:67">"Unsupported chroma format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:40"><if pos:start="49:5" pos:end="51:40">if <condition pos:start="49:8" pos:end="49:45">(<expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:26">thread_type</name></name> <operator pos:start="49:28" pos:end="49:28">&amp;</operator> <name pos:start="49:30" pos:end="49:44">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:40"><block_content pos:start="51:9" pos:end="51:40">

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:16">dpb_size</name> <operator pos:start="51:18" pos:end="51:19">+=</operator> <name pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:25">avctx</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:39">thread_count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:14">frames_ctx</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:22">format</name></name>            <operator pos:start="55:35" pos:end="55:35">=</operator> <name pos:start="55:37" pos:end="55:51">AV_PIX_FMT_CUDA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:55"><expr pos:start="57:5" pos:end="57:54"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:14">frames_ctx</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:21">width</name></name>             <operator pos:start="57:35" pos:end="57:35">=</operator> <name pos:start="57:37" pos:end="57:54"><name pos:start="57:37" pos:end="57:41">avctx</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:54">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:14">frames_ctx</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">height</name></name>            <operator pos:start="59:35" pos:end="59:35">=</operator> <name pos:start="59:37" pos:end="59:55"><name pos:start="59:37" pos:end="59:41">avctx</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:55">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:70"><expr pos:start="61:5" pos:end="63:69"><name pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:14">frames_ctx</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:25">sw_format</name></name>         <operator pos:start="61:35" pos:end="61:35">=</operator> <ternary pos:start="61:37" pos:end="63:69"><condition pos:start="61:37" pos:end="61:64"><expr pos:start="61:37" pos:end="61:62"><name pos:start="61:37" pos:end="61:52"><name pos:start="61:37" pos:end="61:43">sw_desc</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:49">comp</name><index pos:start="61:50" pos:end="61:52">[<expr pos:start="61:51" pos:end="61:51"><literal type="number" pos:start="61:51" pos:end="61:51">0</literal></expr>]</index></name><operator pos:start="61:53" pos:end="61:53">.</operator><name pos:start="61:54" pos:end="61:58">depth</name> <operator pos:start="61:60" pos:end="61:60">&gt;</operator> <literal type="number" pos:start="61:62" pos:end="61:62">8</literal></expr> ?</condition><then pos:start="63:37" pos:end="63:51">

                                    <expr pos:start="63:37" pos:end="63:51"><name pos:start="63:37" pos:end="63:51">AV_PIX_FMT_P010</name></expr> </then><else pos:start="63:53" pos:end="63:69">: <expr pos:start="63:55" pos:end="63:69"><name pos:start="63:55" pos:end="63:69">AV_PIX_FMT_NV12</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:14">frames_ctx</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:33">initial_pool_size</name></name> <operator pos:start="65:35" pos:end="65:35">=</operator> <name pos:start="65:37" pos:end="65:44">dpb_size</name></expr>;</expr_stmt>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
