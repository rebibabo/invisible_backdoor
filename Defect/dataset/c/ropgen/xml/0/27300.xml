<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27300.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:31">blk_co_pwritev</name><parameter_list pos:start="1:32" pos:end="5:55">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">BlockBackend</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">blk</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:58">int64_t</name></type> <name pos:start="1:60" pos:end="1:65">offset</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:40">unsigned</name> <name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:50">bytes</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:70"><decl pos:start="3:53" pos:end="3:70"><type pos:start="3:53" pos:end="3:70"><name pos:start="3:53" pos:end="3:64">QEMUIOVector</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">qiov</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:54"><decl pos:start="5:33" pos:end="5:54"><type pos:start="5:33" pos:end="5:54"><name pos:start="5:33" pos:end="5:48">BdrvRequestFlags</name></type> <name pos:start="5:50" pos:end="5:54">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="47:1">{<block_content pos:start="9:5" pos:end="45:68">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:65"><expr pos:start="13:5" pos:end="13:64"><call pos:start="13:5" pos:end="13:64"><name pos:start="13:5" pos:end="13:24">trace_blk_co_pwritev</name><argument_list pos:start="13:25" pos:end="13:64">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">blk</name></expr></argument>, <argument pos:start="13:31" pos:end="13:41"><expr pos:start="13:31" pos:end="13:41"><call pos:start="13:31" pos:end="13:41"><name pos:start="13:31" pos:end="13:36">blk_bs</name><argument_list pos:start="13:37" pos:end="13:41">(<argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:40">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:44" pos:end="13:49"><expr pos:start="13:44" pos:end="13:49"><name pos:start="13:44" pos:end="13:49">offset</name></expr></argument>, <argument pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:56">bytes</name></expr></argument>, <argument pos:start="13:59" pos:end="13:63"><expr pos:start="13:59" pos:end="13:63"><name pos:start="13:59" pos:end="13:63">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:52"><name pos:start="17:11" pos:end="17:32">blk_check_byte_request</name><argument_list pos:start="17:33" pos:end="17:52">(<argument pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:36">blk</name></expr></argument>, <argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:44">offset</name></expr></argument>, <argument pos:start="17:47" pos:end="17:51"><expr pos:start="17:47" pos:end="17:51"><name pos:start="17:47" pos:end="17:51">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:29">/* throttling disk I/O */</comment>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:35">(<expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:11">blk</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:19">public</name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:34">throttle_state</name></name></expr>)</condition> <block pos:start="29:37" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:64">

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><call pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:45">throttle_group_co_io_limits_intercept</name><argument_list pos:start="31:46" pos:end="31:63">(<argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><name pos:start="31:47" pos:end="31:49">blk</name></expr></argument>, <argument pos:start="31:52" pos:end="31:56"><expr pos:start="31:52" pos:end="31:56"><name pos:start="31:52" pos:end="31:56">bytes</name></expr></argument>, <argument pos:start="31:59" pos:end="31:62"><expr pos:start="31:59" pos:end="31:62"><name pos:start="31:59" pos:end="31:62">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:33">(<expr pos:start="37:9" pos:end="37:32"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:32"><name pos:start="37:10" pos:end="37:12">blk</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:32">enable_write_cache</name></name></expr>)</condition> <block pos:start="37:35" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:30">

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:13">flags</name> <operator pos:start="39:15" pos:end="39:16">|=</operator> <name pos:start="39:18" pos:end="39:29">BDRV_REQ_FUA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:68">return <expr pos:start="45:12" pos:end="45:67"><call pos:start="45:12" pos:end="45:67"><name pos:start="45:12" pos:end="45:26">bdrv_co_pwritev</name><argument_list pos:start="45:27" pos:end="45:67">(<argument pos:start="45:28" pos:end="45:38"><expr pos:start="45:28" pos:end="45:38"><call pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:33">blk_bs</name><argument_list pos:start="45:34" pos:end="45:38">(<argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><name pos:start="45:35" pos:end="45:37">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:41" pos:end="45:46"><expr pos:start="45:41" pos:end="45:46"><name pos:start="45:41" pos:end="45:46">offset</name></expr></argument>, <argument pos:start="45:49" pos:end="45:53"><expr pos:start="45:49" pos:end="45:53"><name pos:start="45:49" pos:end="45:53">bytes</name></expr></argument>, <argument pos:start="45:56" pos:end="45:59"><expr pos:start="45:56" pos:end="45:59"><name pos:start="45:56" pos:end="45:59">qiov</name></expr></argument>, <argument pos:start="45:62" pos:end="45:66"><expr pos:start="45:62" pos:end="45:66"><name pos:start="45:62" pos:end="45:66">flags</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
