<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8992.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">asf_build_simple_index</name><parameter_list pos:start="1:35" pos:end="1:72">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:71">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:44">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">ff_asf_guid</name></type> <name pos:start="5:17" pos:end="5:17">g</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ASFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">asf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:23">current_pos</name><init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><call pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:34">avio_tell</name><argument_list pos:start="9:35" pos:end="9:41">(<argument pos:start="9:36" pos:end="9:40"><expr pos:start="9:36" pos:end="9:40"><name pos:start="9:36" pos:end="9:40"><name pos:start="9:36" pos:end="9:36">s</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:40">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:80"><expr pos:start="15:5" pos:end="15:79"><call pos:start="15:5" pos:end="15:79"><name pos:start="15:5" pos:end="15:13">avio_seek</name><argument_list pos:start="15:14" pos:end="15:79">(<argument pos:start="15:15" pos:end="15:19"><expr pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:19">pb</name></name></expr></argument>, <argument pos:start="15:22" pos:end="15:68"><expr pos:start="15:22" pos:end="15:68"><name pos:start="15:22" pos:end="15:44"><name pos:start="15:22" pos:end="15:24">asf</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:44">data_object_offset</name></name> <operator pos:start="15:46" pos:end="15:46">+</operator> <name pos:start="15:48" pos:end="15:68"><name pos:start="15:48" pos:end="15:50">asf</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:68">data_object_size</name></name></expr></argument>, <argument pos:start="15:71" pos:end="15:78"><expr pos:start="15:71" pos:end="15:78"><name pos:start="15:71" pos:end="15:78">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:15">ff_get_guid</name><argument_list pos:start="17:16" pos:end="17:26">(<argument pos:start="17:17" pos:end="17:21"><expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:21">pb</name></name></expr></argument>, <argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:25">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="23:60">/* the data object can be followed by other top-level objects,

       skip them until the simple index object is reached */</comment>

    <while pos:start="25:5" pos:end="41:5">while <condition pos:start="25:11" pos:end="25:39">(<expr pos:start="25:12" pos:end="25:38"><call pos:start="25:12" pos:end="25:38"><name pos:start="25:12" pos:end="25:21">ff_guidcmp</name><argument_list pos:start="25:22" pos:end="25:38">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:24">g</name></expr></argument>, <argument pos:start="25:27" pos:end="25:37"><expr pos:start="25:27" pos:end="25:37"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:37">index_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:41" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:31">

        <decl_stmt pos:start="27:9" pos:end="27:40"><decl pos:start="27:9" pos:end="27:39"><type pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">int64_t</name></type> <name pos:start="27:17" pos:end="27:21">gsize</name><init pos:start="27:22" pos:end="27:39">= <expr pos:start="27:24" pos:end="27:39"><call pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:32">avio_rl64</name><argument_list pos:start="27:33" pos:end="27:39">(<argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:42">(<expr pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:17">gsize</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <literal type="number" pos:start="29:21" pos:end="29:22">24</literal> <operator pos:start="29:24" pos:end="29:25">||</operator> <call pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:34">url_feof</name><argument_list pos:start="29:35" pos:end="29:41">(<argument pos:start="29:36" pos:end="29:40"><expr pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:40">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:44" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:19">

            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><call pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:21">avio_seek</name><argument_list pos:start="31:22" pos:end="31:51">(<argument pos:start="31:23" pos:end="31:27"><expr pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:27">pb</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:40"><expr pos:start="31:30" pos:end="31:40"><name pos:start="31:30" pos:end="31:40">current_pos</name></expr></argument>, <argument pos:start="31:43" pos:end="31:50"><expr pos:start="31:43" pos:end="31:50"><name pos:start="31:43" pos:end="31:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:17">avio_skip</name><argument_list pos:start="37:18" pos:end="37:34">(<argument pos:start="37:19" pos:end="37:23"><expr pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:23">pb</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:33"><expr pos:start="37:26" pos:end="37:33"><name pos:start="37:26" pos:end="37:30">gsize</name><operator pos:start="37:31" pos:end="37:31">-</operator><literal type="number" pos:start="37:32" pos:end="37:33">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><call pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:19">ff_get_guid</name><argument_list pos:start="39:20" pos:end="39:30">(<argument pos:start="39:21" pos:end="39:25"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:25">pb</name></name></expr></argument>, <argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><operator pos:start="39:28" pos:end="39:28">&amp;</operator><name pos:start="39:29" pos:end="39:29">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <block pos:start="45:5" pos:end="91:5">{<block_content pos:start="47:9" pos:end="89:27">

        <decl_stmt pos:start="47:9" pos:end="47:35"><decl pos:start="47:9" pos:end="47:21"><type pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:15">int64_t</name></type> <name pos:start="47:17" pos:end="47:21">itime</name></decl>, <decl pos:start="47:24" pos:end="47:34"><type ref="prev" pos:start="47:9" pos:end="47:15"/><name pos:start="47:24" pos:end="47:31">last_pos</name><init pos:start="47:32" pos:end="47:34">=<expr pos:start="47:33" pos:end="47:34"><operator pos:start="47:33" pos:end="47:33">-</operator><literal type="number" pos:start="47:34" pos:end="47:34">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:21"><decl pos:start="49:9" pos:end="49:15"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:15">pct</name></decl>, <decl pos:start="49:18" pos:end="49:20"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:18" pos:end="49:20">ict</name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:50"><decl pos:start="51:9" pos:end="51:49"><type pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:15">int64_t</name> <name pos:start="51:17" pos:end="51:25">av_unused</name></type> <name pos:start="51:27" pos:end="51:31">gsize</name><init pos:start="51:32" pos:end="51:49">= <expr pos:start="51:34" pos:end="51:49"><call pos:start="51:34" pos:end="51:49"><name pos:start="51:34" pos:end="51:42">avio_rl64</name><argument_list pos:start="51:43" pos:end="51:49">(<argument pos:start="51:44" pos:end="51:48"><expr pos:start="51:44" pos:end="51:48"><name pos:start="51:44" pos:end="51:48"><name pos:start="51:44" pos:end="51:44">s</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:48">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:19">ff_get_guid</name><argument_list pos:start="53:20" pos:end="53:30">(<argument pos:start="53:21" pos:end="53:25"><expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:25">pb</name></name></expr></argument>, <argument pos:start="53:28" pos:end="53:29"><expr pos:start="53:28" pos:end="53:29"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:29">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:13">itime</name><operator pos:start="55:14" pos:end="55:14">=</operator><call pos:start="55:15" pos:end="55:30"><name pos:start="55:15" pos:end="55:23">avio_rl64</name><argument_list pos:start="55:24" pos:end="55:30">(<argument pos:start="55:25" pos:end="55:29"><expr pos:start="55:25" pos:end="55:29"><name pos:start="55:25" pos:end="55:29"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:11">pct</name><operator pos:start="57:12" pos:end="57:12">=</operator><call pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:21">avio_rl32</name><argument_list pos:start="57:22" pos:end="57:28">(<argument pos:start="57:23" pos:end="57:27"><expr pos:start="57:23" pos:end="57:27"><name pos:start="57:23" pos:end="57:27"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:11">ict</name><operator pos:start="59:12" pos:end="59:12">=</operator><call pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:21">avio_rl32</name><argument_list pos:start="59:22" pos:end="59:28">(<argument pos:start="59:23" pos:end="59:27"><expr pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:85"><expr pos:start="61:9" pos:end="61:84"><call pos:start="61:9" pos:end="61:84"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:84">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">s</name></expr></argument>, <argument pos:start="61:19" pos:end="61:30"><expr pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:33" pos:end="61:69"><expr pos:start="61:33" pos:end="61:69"><literal type="string" pos:start="61:33" pos:end="61:43">"itime:0x%"</literal><name pos:start="61:44" pos:end="61:49">PRIx64</name><literal type="string" pos:start="61:50" pos:end="61:69">", pct:%d, ict:%d\n"</literal></expr></argument>,<argument pos:start="61:71" pos:end="61:75"><expr pos:start="61:71" pos:end="61:75"><name pos:start="61:71" pos:end="61:75">itime</name></expr></argument>,<argument pos:start="61:77" pos:end="61:79"><expr pos:start="61:77" pos:end="61:79"><name pos:start="61:77" pos:end="61:79">pct</name></expr></argument>,<argument pos:start="61:81" pos:end="61:83"><expr pos:start="61:81" pos:end="61:83"><name pos:start="61:81" pos:end="61:83">ict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="65:9" pos:end="87:9">for <control pos:start="65:13" pos:end="65:27">(<init pos:start="65:14" pos:end="65:17"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:15">=</operator><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</init><condition pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name><operator pos:start="65:19" pos:end="65:19">&lt;</operator><name pos:start="65:20" pos:end="65:22">ict</name></expr>;</condition><incr pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:24">i</name><operator pos:start="65:25" pos:end="65:26">++</operator></expr></incr>)</control><block pos:start="65:28" pos:end="87:9">{<block_content pos:start="67:13" pos:end="85:13">

            <decl_stmt pos:start="67:13" pos:end="67:40"><decl pos:start="67:13" pos:end="67:39"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:22">pktnum</name><init pos:start="67:23" pos:end="67:39">=<expr pos:start="67:24" pos:end="67:39"><call pos:start="67:24" pos:end="67:39"><name pos:start="67:24" pos:end="67:32">avio_rl32</name><argument_list pos:start="67:33" pos:end="67:39">(<argument pos:start="67:34" pos:end="67:38"><expr pos:start="67:34" pos:end="67:38"><name pos:start="67:34" pos:end="67:38"><name pos:start="67:34" pos:end="67:34">s</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:40"><decl pos:start="69:13" pos:end="69:39"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:21">pktct</name> <init pos:start="69:23" pos:end="69:39">=<expr pos:start="69:24" pos:end="69:39"><call pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:32">avio_rl16</name><argument_list pos:start="69:33" pos:end="69:39">(<argument pos:start="69:34" pos:end="69:38"><expr pos:start="69:34" pos:end="69:38"><name pos:start="69:34" pos:end="69:38"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:38">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:79"><decl pos:start="71:13" pos:end="71:78"><type pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:19">int64_t</name></type> <name pos:start="71:21" pos:end="71:23">pos</name>      <init pos:start="71:30" pos:end="71:78">= <expr pos:start="71:32" pos:end="71:78"><name pos:start="71:32" pos:end="71:45"><name pos:start="71:32" pos:end="71:32">s</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:45">data_offset</name></name> <operator pos:start="71:47" pos:end="71:47">+</operator> <name pos:start="71:49" pos:end="71:62"><name pos:start="71:49" pos:end="71:49">s</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:62">packet_size</name></name><operator pos:start="71:63" pos:end="71:63">*</operator><operator pos:start="71:64" pos:end="71:64">(</operator><name pos:start="71:65" pos:end="71:71">int64_t</name><operator pos:start="71:72" pos:end="71:72">)</operator><name pos:start="71:73" pos:end="71:78">pktnum</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:88"><decl pos:start="73:13" pos:end="73:87"><type pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:19">int64_t</name></type> <name pos:start="73:21" pos:end="73:29">index_pts</name><init pos:start="73:30" pos:end="73:87">= <expr pos:start="73:32" pos:end="73:87"><call pos:start="73:32" pos:end="73:87"><name pos:start="73:32" pos:end="73:36">FFMAX</name><argument_list pos:start="73:37" pos:end="73:87">(<argument pos:start="73:38" pos:end="73:83"><expr pos:start="73:38" pos:end="73:83"><call pos:start="73:38" pos:end="73:64"><name pos:start="73:38" pos:end="73:47">av_rescale</name><argument_list pos:start="73:48" pos:end="73:64">(<argument pos:start="73:49" pos:end="73:53"><expr pos:start="73:49" pos:end="73:53"><name pos:start="73:49" pos:end="73:53">itime</name></expr></argument>, <argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><name pos:start="73:56" pos:end="73:56">i</name></expr></argument>, <argument pos:start="73:59" pos:end="73:63"><expr pos:start="73:59" pos:end="73:63"><literal type="number" pos:start="73:59" pos:end="73:63">10000</literal></expr></argument>)</argument_list></call> <operator pos:start="73:66" pos:end="73:66">-</operator> <name pos:start="73:68" pos:end="73:83"><name pos:start="73:68" pos:end="73:70">asf</name><operator pos:start="73:71" pos:end="73:72">-&gt;</operator><name pos:start="73:73" pos:end="73:75">hdr</name><operator pos:start="73:76" pos:end="73:76">.</operator><name pos:start="73:77" pos:end="73:83">preroll</name></name></expr></argument>, <argument pos:start="73:86" pos:end="73:86"><expr pos:start="73:86" pos:end="73:86"><literal type="number" pos:start="73:86" pos:end="73:86">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="77:13" pos:end="85:13"><if pos:start="77:13" pos:end="85:13">if<condition pos:start="77:15" pos:end="77:31">(<expr pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:18">pos</name> <operator pos:start="77:20" pos:end="77:21">!=</operator> <name pos:start="77:23" pos:end="77:30">last_pos</name></expr>)</condition><block pos:start="77:32" pos:end="85:13">{<block_content pos:start="79:13" pos:end="83:25">

            <expr_stmt pos:start="79:13" pos:end="79:103"><expr pos:start="79:13" pos:end="79:102"><call pos:start="79:13" pos:end="79:102"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="79:102">(<argument pos:start="79:20" pos:end="79:20"><expr pos:start="79:20" pos:end="79:20"><name pos:start="79:20" pos:end="79:20">s</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:37" pos:end="79:75"><expr pos:start="79:37" pos:end="79:75"><literal type="string" pos:start="79:37" pos:end="79:65">"pktnum:%d, pktct:%d  pts: %"</literal><name pos:start="79:66" pos:end="79:71">PRId64</name><literal type="string" pos:start="79:72" pos:end="79:75">"\n"</literal></expr></argument>, <argument pos:start="79:78" pos:end="79:83"><expr pos:start="79:78" pos:end="79:83"><name pos:start="79:78" pos:end="79:83">pktnum</name></expr></argument>, <argument pos:start="79:86" pos:end="79:90"><expr pos:start="79:86" pos:end="79:90"><name pos:start="79:86" pos:end="79:90">pktct</name></expr></argument>, <argument pos:start="79:93" pos:end="79:101"><expr pos:start="79:93" pos:end="79:101"><name pos:start="79:93" pos:end="79:101">index_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:110"><expr pos:start="81:13" pos:end="81:109"><call pos:start="81:13" pos:end="81:109"><name pos:start="81:13" pos:end="81:30">av_add_index_entry</name><argument_list pos:start="81:31" pos:end="81:109">(<argument pos:start="81:32" pos:end="81:55"><expr pos:start="81:32" pos:end="81:55"><name pos:start="81:32" pos:end="81:55"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:41">streams</name><index pos:start="81:42" pos:end="81:55">[<expr pos:start="81:43" pos:end="81:54"><name pos:start="81:43" pos:end="81:54">stream_index</name></expr>]</index></name></expr></argument>, <argument pos:start="81:58" pos:end="81:60"><expr pos:start="81:58" pos:end="81:60"><name pos:start="81:58" pos:end="81:60">pos</name></expr></argument>, <argument pos:start="81:63" pos:end="81:71"><expr pos:start="81:63" pos:end="81:71"><name pos:start="81:63" pos:end="81:71">index_pts</name></expr></argument>, <argument pos:start="81:74" pos:end="81:87"><expr pos:start="81:74" pos:end="81:87"><name pos:start="81:74" pos:end="81:87"><name pos:start="81:74" pos:end="81:74">s</name><operator pos:start="81:75" pos:end="81:76">-&gt;</operator><name pos:start="81:77" pos:end="81:87">packet_size</name></name></expr></argument>, <argument pos:start="81:90" pos:end="81:90"><expr pos:start="81:90" pos:end="81:90"><literal type="number" pos:start="81:90" pos:end="81:90">0</literal></expr></argument>, <argument pos:start="81:93" pos:end="81:108"><expr pos:start="81:93" pos:end="81:108"><name pos:start="81:93" pos:end="81:108">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:25"><expr pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:20">last_pos</name><operator pos:start="83:21" pos:end="83:21">=</operator><name pos:start="83:22" pos:end="83:24">pos</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:11">asf</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:23">index_read</name></name><operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><call pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:13">avio_seek</name><argument_list pos:start="93:14" pos:end="93:43">(<argument pos:start="93:15" pos:end="93:19"><expr pos:start="93:15" pos:end="93:19"><name pos:start="93:15" pos:end="93:19"><name pos:start="93:15" pos:end="93:15">s</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:19">pb</name></name></expr></argument>, <argument pos:start="93:22" pos:end="93:32"><expr pos:start="93:22" pos:end="93:32"><name pos:start="93:22" pos:end="93:32">current_pos</name></expr></argument>, <argument pos:start="93:35" pos:end="93:42"><expr pos:start="93:35" pos:end="93:42"><name pos:start="93:35" pos:end="93:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
