<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8486.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mxf_read_partition_pack</name><parameter_list pos:start="1:35" pos:end="1:110">(<parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">arg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:57">AVIOContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">pb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">tag</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:80"><decl pos:start="1:73" pos:end="1:80"><type pos:start="1:73" pos:end="1:80"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:80">size</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:89"><decl pos:start="1:83" pos:end="1:89"><type pos:start="1:83" pos:end="1:89"><name pos:start="1:83" pos:end="1:85">UID</name></type> <name pos:start="1:87" pos:end="1:89">uid</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:109"><decl pos:start="1:92" pos:end="1:109"><type pos:start="1:92" pos:end="1:109"><name pos:start="1:92" pos:end="1:98">int64_t</name></type> <name pos:start="1:100" pos:end="1:109">klv_offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="275:1">{<block_content pos:start="5:5" pos:end="273:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><name pos:start="5:23" pos:end="5:25">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MXFPartition</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:27">partition</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">UID</name></type> <name pos:start="9:9" pos:end="9:10">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:29">footer_partition</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:34">nb_essence_containers</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:71">(<expr pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:11">mxf</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:29">partitions_count</name></name><operator pos:start="19:30" pos:end="19:30">+</operator><literal type="number" pos:start="19:31" pos:end="19:31">1</literal> <operator pos:start="19:33" pos:end="19:34">&gt;=</operator> <name pos:start="19:36" pos:end="19:43">UINT_MAX</name> <operator pos:start="19:45" pos:end="19:45">/</operator> <sizeof pos:start="19:47" pos:end="19:70">sizeof<argument_list pos:start="19:53" pos:end="19:70">(<argument pos:start="19:54" pos:end="19:69"><expr pos:start="19:54" pos:end="19:69"><operator pos:start="19:54" pos:end="19:54">*</operator><name pos:start="19:55" pos:end="19:69"><name pos:start="19:55" pos:end="19:57">mxf</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:69">partitions</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="27:64">(<expr pos:start="25:9" pos:end="27:63"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">err</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="27:58"><name pos:start="25:16" pos:end="25:32">av_reallocp_array</name><argument_list pos:start="25:33" pos:end="27:58">(<argument pos:start="25:34" pos:end="25:49"><expr pos:start="25:34" pos:end="25:49"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:49"><name pos:start="25:35" pos:end="25:37">mxf</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:49">partitions</name></name></expr></argument>, <argument pos:start="25:52" pos:end="25:76"><expr pos:start="25:52" pos:end="25:76"><name pos:start="25:52" pos:end="25:72"><name pos:start="25:52" pos:end="25:54">mxf</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:72">partitions_count</name></name> <operator pos:start="25:74" pos:end="25:74">+</operator> <literal type="number" pos:start="25:76" pos:end="25:76">1</literal></expr></argument>,

                                 <argument pos:start="27:34" pos:end="27:57"><expr pos:start="27:34" pos:end="27:57"><sizeof pos:start="27:34" pos:end="27:57">sizeof<argument_list pos:start="27:40" pos:end="27:57">(<argument pos:start="27:41" pos:end="27:56"><expr pos:start="27:41" pos:end="27:56"><operator pos:start="27:41" pos:end="27:41">*</operator><name pos:start="27:42" pos:end="27:56"><name pos:start="27:42" pos:end="27:44">mxf</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:56">partitions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="27:59" pos:end="27:59">)</operator> <operator pos:start="27:61" pos:end="27:61">&lt;</operator> <literal type="number" pos:start="27:63" pos:end="27:63">0</literal></expr>)</condition> <block pos:start="27:66" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:19">

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">mxf</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:29">partitions_count</name></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="57:5"><if pos:start="37:5" pos:end="51:5">if <condition pos:start="37:8" pos:end="37:30">(<expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:11">mxf</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:29">parsing_backward</name></name></expr>)</condition> <block pos:start="37:32" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:91">

        <comment type="block" pos:start="39:9" pos:end="41:72">/* insert the new partition pack in the middle

         * this makes the entries in mxf-&gt;partitions sorted by offset */</comment>

        <expr_stmt pos:start="43:9" pos:end="47:96"><expr pos:start="43:9" pos:end="47:95"><call pos:start="43:9" pos:end="47:95"><name pos:start="43:9" pos:end="43:15">memmove</name><argument_list pos:start="43:16" pos:end="47:95">(<argument pos:start="43:17" pos:end="43:63"><expr pos:start="43:17" pos:end="43:63"><operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:63"><name pos:start="43:18" pos:end="43:20">mxf</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:32">partitions</name><index pos:start="43:33" pos:end="43:63">[<expr pos:start="43:34" pos:end="43:62"><name pos:start="43:34" pos:end="43:60"><name pos:start="43:34" pos:end="43:36">mxf</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:60">last_forward_partition</name></name><operator pos:start="43:61" pos:end="43:61">+</operator><literal type="number" pos:start="43:62" pos:end="43:62">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="45:17" pos:end="45:61"><expr pos:start="45:17" pos:end="45:61"><operator pos:start="45:17" pos:end="45:17">&amp;</operator><name pos:start="45:18" pos:end="45:61"><name pos:start="45:18" pos:end="45:20">mxf</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:32">partitions</name><index pos:start="45:33" pos:end="45:61">[<expr pos:start="45:34" pos:end="45:60"><name pos:start="45:34" pos:end="45:60"><name pos:start="45:34" pos:end="45:36">mxf</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:60">last_forward_partition</name></name></expr>]</index></name></expr></argument>,

                <argument pos:start="47:17" pos:end="47:94"><expr pos:start="47:17" pos:end="47:94"><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:38"><name pos:start="47:18" pos:end="47:20">mxf</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:38">partitions_count</name></name> <operator pos:start="47:40" pos:end="47:40">-</operator> <name pos:start="47:42" pos:end="47:68"><name pos:start="47:42" pos:end="47:44">mxf</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:68">last_forward_partition</name></name><operator pos:start="47:69" pos:end="47:69">)</operator><operator pos:start="47:70" pos:end="47:70">*</operator><sizeof pos:start="47:71" pos:end="47:94">sizeof<argument_list pos:start="47:77" pos:end="47:94">(<argument pos:start="47:78" pos:end="47:93"><expr pos:start="47:78" pos:end="47:93"><operator pos:start="47:78" pos:end="47:78">*</operator><name pos:start="47:79" pos:end="47:93"><name pos:start="47:79" pos:end="47:81">mxf</name><operator pos:start="47:82" pos:end="47:83">-&gt;</operator><name pos:start="47:84" pos:end="47:93">partitions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:91"><expr pos:start="49:9" pos:end="49:90"><name pos:start="49:9" pos:end="49:17">partition</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:42"><name pos:start="49:21" pos:end="49:23">mxf</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:42">current_partition</name></name> <operator pos:start="49:44" pos:end="49:44">=</operator> <operator pos:start="49:46" pos:end="49:46">&amp;</operator><name pos:start="49:47" pos:end="49:90"><name pos:start="49:47" pos:end="49:49">mxf</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:61">partitions</name><index pos:start="49:62" pos:end="49:90">[<expr pos:start="49:63" pos:end="49:89"><name pos:start="49:63" pos:end="49:89"><name pos:start="49:63" pos:end="49:65">mxf</name><operator pos:start="49:66" pos:end="49:67">-&gt;</operator><name pos:start="49:68" pos:end="49:89">last_forward_partition</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="57:5">else <block pos:start="51:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:85">

        <expr_stmt pos:start="53:9" pos:end="53:38"><expr pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:11">mxf</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:35">last_forward_partition</name></name><operator pos:start="53:36" pos:end="53:37">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:85"><expr pos:start="55:9" pos:end="55:84"><name pos:start="55:9" pos:end="55:17">partition</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:42"><name pos:start="55:21" pos:end="55:23">mxf</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:42">current_partition</name></name> <operator pos:start="55:44" pos:end="55:44">=</operator> <operator pos:start="55:46" pos:end="55:46">&amp;</operator><name pos:start="55:47" pos:end="55:84"><name pos:start="55:47" pos:end="55:49">mxf</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:61">partitions</name><index pos:start="55:62" pos:end="55:84">[<expr pos:start="55:63" pos:end="55:83"><name pos:start="55:63" pos:end="55:83"><name pos:start="55:63" pos:end="55:65">mxf</name><operator pos:start="55:66" pos:end="55:67">-&gt;</operator><name pos:start="55:68" pos:end="55:83">partitions_count</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:45"><expr pos:start="61:5" pos:end="61:44"><call pos:start="61:5" pos:end="61:44"><name pos:start="61:5" pos:end="61:10">memset</name><argument_list pos:start="61:11" pos:end="61:44">(<argument pos:start="61:12" pos:end="61:20"><expr pos:start="61:12" pos:end="61:20"><name pos:start="61:12" pos:end="61:20">partition</name></expr></argument>, <argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr></argument>, <argument pos:start="61:26" pos:end="61:43"><expr pos:start="61:26" pos:end="61:43"><sizeof pos:start="61:26" pos:end="61:43">sizeof<argument_list pos:start="61:32" pos:end="61:43">(<argument pos:start="61:33" pos:end="61:42"><expr pos:start="61:33" pos:end="61:42"><operator pos:start="61:33" pos:end="61:33">*</operator><name pos:start="61:34" pos:end="61:42">partition</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:7">mxf</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:25">partitions_count</name></name><operator pos:start="63:26" pos:end="63:27">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:63"><expr pos:start="65:5" pos:end="65:62"><name pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:13">partition</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:26">pack_length</name></name> <operator pos:start="65:28" pos:end="65:28">=</operator> <call pos:start="65:30" pos:end="65:42"><name pos:start="65:30" pos:end="65:38">avio_tell</name><argument_list pos:start="65:39" pos:end="65:42">(<argument pos:start="65:40" pos:end="65:41"><expr pos:start="65:40" pos:end="65:41"><name pos:start="65:40" pos:end="65:41">pb</name></expr></argument>)</argument_list></call> <operator pos:start="65:44" pos:end="65:44">-</operator> <name pos:start="65:46" pos:end="65:55">klv_offset</name> <operator pos:start="65:57" pos:end="65:57">+</operator> <name pos:start="65:59" pos:end="65:62">size</name></expr>;</expr_stmt>



    <switch pos:start="69:5" pos:end="95:5">switch<condition pos:start="69:11" pos:end="69:19">(<expr pos:start="69:12" pos:end="69:18"><name pos:start="69:12" pos:end="69:18"><name pos:start="69:12" pos:end="69:14">uid</name><index pos:start="69:15" pos:end="69:18">[<expr pos:start="69:16" pos:end="69:17"><literal type="number" pos:start="69:16" pos:end="69:17">13</literal></expr>]</index></name></expr>)</condition> <block pos:start="69:21" pos:end="95:5">{<block_content pos:start="71:5" pos:end="93:35">

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">2</literal></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:17">partition</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:23">type</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:32">Header</name></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">3</literal></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:17">partition</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:23">type</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:39">BodyPartition</name></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:11">case <expr pos:start="83:10" pos:end="83:10"><literal type="number" pos:start="83:10" pos:end="83:10">4</literal></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:33"><expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:17">partition</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:23">type</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:32">Footer</name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <default pos:start="89:5" pos:end="89:12">default:</default>

        <expr_stmt pos:start="91:9" pos:end="91:78"><expr pos:start="91:9" pos:end="91:77"><call pos:start="91:9" pos:end="91:77"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:77">(<argument pos:start="91:16" pos:end="91:22"><expr pos:start="91:16" pos:end="91:22"><name pos:start="91:16" pos:end="91:22"><name pos:start="91:16" pos:end="91:18">mxf</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:22">fc</name></name></expr></argument>, <argument pos:start="91:25" pos:end="91:36"><expr pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:39" pos:end="91:67"><expr pos:start="91:39" pos:end="91:67"><literal type="string" pos:start="91:39" pos:end="91:67">"unknown partition type %i\n"</literal></expr></argument>, <argument pos:start="91:70" pos:end="91:76"><expr pos:start="91:70" pos:end="91:76"><name pos:start="91:70" pos:end="91:76"><name pos:start="91:70" pos:end="91:72">uid</name><index pos:start="91:73" pos:end="91:76">[<expr pos:start="91:74" pos:end="91:75"><literal type="number" pos:start="91:74" pos:end="91:75">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:35">return <expr pos:start="93:16" pos:end="93:34"><name pos:start="93:16" pos:end="93:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="99:5" pos:end="99:86">/* consider both footers to be closed (there is only Footer and CompleteFooter) */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:68"><expr pos:start="101:5" pos:end="101:67"><name pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:13">partition</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:21">closed</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <name pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:33">partition</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:39">type</name></name> <operator pos:start="101:41" pos:end="101:42">==</operator> <name pos:start="101:44" pos:end="101:49">Footer</name> <operator pos:start="101:51" pos:end="101:52">||</operator> <operator pos:start="101:54" pos:end="101:54">!</operator><operator pos:start="101:55" pos:end="101:55">(</operator><name pos:start="101:56" pos:end="101:62"><name pos:start="101:56" pos:end="101:58">uid</name><index pos:start="101:59" pos:end="101:62">[<expr pos:start="101:60" pos:end="101:61"><literal type="number" pos:start="101:60" pos:end="101:61">14</literal></expr>]</index></name> <operator pos:start="101:64" pos:end="101:64">&amp;</operator> <literal type="number" pos:start="101:66" pos:end="101:66">1</literal><operator pos:start="101:67" pos:end="101:67">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:38"><expr pos:start="103:5" pos:end="103:37"><name pos:start="103:5" pos:end="103:23"><name pos:start="103:5" pos:end="103:13">partition</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:23">complete</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:33"><name pos:start="103:27" pos:end="103:29">uid</name><index pos:start="103:30" pos:end="103:33">[<expr pos:start="103:31" pos:end="103:32"><literal type="number" pos:start="103:31" pos:end="103:32">14</literal></expr>]</index></name> <operator pos:start="103:35" pos:end="103:35">&gt;</operator> <literal type="number" pos:start="103:37" pos:end="103:37">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><call pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:13">avio_skip</name><argument_list pos:start="105:14" pos:end="105:20">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:40"><expr pos:start="107:5" pos:end="107:39"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:13">partition</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:23">kag_size</name></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <call pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:35">avio_rb32</name><argument_list pos:start="107:36" pos:end="107:39">(<argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><name pos:start="107:37" pos:end="107:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:13">partition</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:29">this_partition</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <call pos:start="109:33" pos:end="109:45"><name pos:start="109:33" pos:end="109:41">avio_rb64</name><argument_list pos:start="109:42" pos:end="109:45">(<argument pos:start="109:43" pos:end="109:44"><expr pos:start="109:43" pos:end="109:44"><name pos:start="109:43" pos:end="109:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:50"><expr pos:start="111:5" pos:end="111:49"><name pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:13">partition</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:33">previous_partition</name></name> <operator pos:start="111:35" pos:end="111:35">=</operator> <call pos:start="111:37" pos:end="111:49"><name pos:start="111:37" pos:end="111:45">avio_rb64</name><argument_list pos:start="111:46" pos:end="111:49">(<argument pos:start="111:47" pos:end="111:48"><expr pos:start="111:47" pos:end="111:48"><name pos:start="111:47" pos:end="111:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:37"><expr pos:start="113:5" pos:end="113:36"><name pos:start="113:5" pos:end="113:20">footer_partition</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:32">avio_rb64</name><argument_list pos:start="113:33" pos:end="113:36">(<argument pos:start="113:34" pos:end="113:35"><expr pos:start="113:34" pos:end="113:35"><name pos:start="113:34" pos:end="113:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:49"><expr pos:start="115:5" pos:end="115:48"><name pos:start="115:5" pos:end="115:32"><name pos:start="115:5" pos:end="115:13">partition</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:32">header_byte_count</name></name> <operator pos:start="115:34" pos:end="115:34">=</operator> <call pos:start="115:36" pos:end="115:48"><name pos:start="115:36" pos:end="115:44">avio_rb64</name><argument_list pos:start="115:45" pos:end="115:48">(<argument pos:start="115:46" pos:end="115:47"><expr pos:start="115:46" pos:end="115:47"><name pos:start="115:46" pos:end="115:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:48"><expr pos:start="117:5" pos:end="117:47"><name pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:13">partition</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:31">index_byte_count</name></name> <operator pos:start="117:33" pos:end="117:33">=</operator> <call pos:start="117:35" pos:end="117:47"><name pos:start="117:35" pos:end="117:43">avio_rb64</name><argument_list pos:start="117:44" pos:end="117:47">(<argument pos:start="117:45" pos:end="117:46"><expr pos:start="117:45" pos:end="117:46"><name pos:start="117:45" pos:end="117:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:41"><expr pos:start="119:5" pos:end="119:40"><name pos:start="119:5" pos:end="119:24"><name pos:start="119:5" pos:end="119:13">partition</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:24">index_sid</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <call pos:start="119:28" pos:end="119:40"><name pos:start="119:28" pos:end="119:36">avio_rb32</name><argument_list pos:start="119:37" pos:end="119:40">(<argument pos:start="119:38" pos:end="119:39"><expr pos:start="119:38" pos:end="119:39"><name pos:start="119:38" pos:end="119:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:21"><expr pos:start="121:5" pos:end="121:20"><call pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:13">avio_skip</name><argument_list pos:start="121:14" pos:end="121:20">(<argument pos:start="121:15" pos:end="121:16"><expr pos:start="121:15" pos:end="121:16"><name pos:start="121:15" pos:end="121:16">pb</name></expr></argument>, <argument pos:start="121:19" pos:end="121:19"><expr pos:start="121:19" pos:end="121:19"><literal type="number" pos:start="121:19" pos:end="121:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:40"><expr pos:start="123:5" pos:end="123:39"><name pos:start="123:5" pos:end="123:23"><name pos:start="123:5" pos:end="123:13">partition</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:23">body_sid</name></name> <operator pos:start="123:25" pos:end="123:25">=</operator> <call pos:start="123:27" pos:end="123:39"><name pos:start="123:27" pos:end="123:35">avio_rb32</name><argument_list pos:start="123:36" pos:end="123:39">(<argument pos:start="123:37" pos:end="123:38"><expr pos:start="123:37" pos:end="123:38"><name pos:start="123:37" pos:end="123:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:35"><expr pos:start="125:5" pos:end="125:34"><call pos:start="125:5" pos:end="125:34"><name pos:start="125:5" pos:end="125:13">avio_read</name><argument_list pos:start="125:14" pos:end="125:34">(<argument pos:start="125:15" pos:end="125:16"><expr pos:start="125:15" pos:end="125:16"><name pos:start="125:15" pos:end="125:16">pb</name></expr></argument>, <argument pos:start="125:19" pos:end="125:20"><expr pos:start="125:19" pos:end="125:20"><name pos:start="125:19" pos:end="125:20">op</name></expr></argument>, <argument pos:start="125:23" pos:end="125:33"><expr pos:start="125:23" pos:end="125:33"><sizeof pos:start="125:23" pos:end="125:33">sizeof<argument_list pos:start="125:29" pos:end="125:33">(<argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:25">nb_essence_containers</name> <operator pos:start="127:27" pos:end="127:27">=</operator> <call pos:start="127:29" pos:end="127:41"><name pos:start="127:29" pos:end="127:37">avio_rb32</name><argument_list pos:start="127:38" pos:end="127:41">(<argument pos:start="127:39" pos:end="127:40"><expr pos:start="127:39" pos:end="127:40"><name pos:start="127:39" pos:end="127:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:69">/* some files don'thave FooterPartition set in every partition */</comment>

    <if_stmt pos:start="133:5" pos:end="149:5"><if pos:start="133:5" pos:end="149:5">if <condition pos:start="133:8" pos:end="133:25">(<expr pos:start="133:9" pos:end="133:24"><name pos:start="133:9" pos:end="133:24">footer_partition</name></expr>)</condition> <block pos:start="133:27" pos:end="149:5">{<block_content pos:start="135:9" pos:end="147:9">

        <if_stmt pos:start="135:9" pos:end="147:9"><if pos:start="135:9" pos:end="143:9">if <condition pos:start="135:12" pos:end="135:79">(<expr pos:start="135:13" pos:end="135:78"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:15">mxf</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:33">footer_partition</name></name> <operator pos:start="135:35" pos:end="135:36">&amp;&amp;</operator> <name pos:start="135:38" pos:end="135:58"><name pos:start="135:38" pos:end="135:40">mxf</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:58">footer_partition</name></name> <operator pos:start="135:60" pos:end="135:61">!=</operator> <name pos:start="135:63" pos:end="135:78">footer_partition</name></expr>)</condition> <block pos:start="135:81" pos:end="143:9">{<block_content pos:start="137:13" pos:end="141:60">

            <expr_stmt pos:start="137:13" pos:end="141:60"><expr pos:start="137:13" pos:end="141:59"><call pos:start="137:13" pos:end="141:59"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="141:59">(<argument pos:start="137:20" pos:end="137:26"><expr pos:start="137:20" pos:end="137:26"><name pos:start="137:20" pos:end="137:26"><name pos:start="137:20" pos:end="137:22">mxf</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:26">fc</name></name></expr></argument>, <argument pos:start="137:29" pos:end="137:40"><expr pos:start="137:29" pos:end="137:40"><name pos:start="137:29" pos:end="137:40">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="139:20" pos:end="139:81"><expr pos:start="139:20" pos:end="139:81"><literal type="string" pos:start="139:20" pos:end="139:58">"inconsistent FooterPartition value: %"</literal><name pos:start="139:59" pos:end="139:64">PRIu64</name><literal type="string" pos:start="139:65" pos:end="139:71">" != %"</literal><name pos:start="139:72" pos:end="139:77">PRIu64</name><literal type="string" pos:start="139:78" pos:end="139:81">"\n"</literal></expr></argument>,

                   <argument pos:start="141:20" pos:end="141:40"><expr pos:start="141:20" pos:end="141:40"><name pos:start="141:20" pos:end="141:40"><name pos:start="141:20" pos:end="141:22">mxf</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:40">footer_partition</name></name></expr></argument>, <argument pos:start="141:43" pos:end="141:58"><expr pos:start="141:43" pos:end="141:58"><name pos:start="141:43" pos:end="141:58">footer_partition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="143:11" pos:end="147:9">else <block pos:start="143:16" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:53">

            <expr_stmt pos:start="145:13" pos:end="145:53"><expr pos:start="145:13" pos:end="145:52"><name pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:15">mxf</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:33">footer_partition</name></name> <operator pos:start="145:35" pos:end="145:35">=</operator> <name pos:start="145:37" pos:end="145:52">footer_partition</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="165:55"><expr pos:start="153:5" pos:end="165:54"><call pos:start="153:5" pos:end="165:54"><name pos:start="153:5" pos:end="153:11">av_dlog</name><argument_list pos:start="153:12" pos:end="165:54">(<argument pos:start="153:13" pos:end="153:19"><expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:15">mxf</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:19">fc</name></name></expr></argument>,

            <argument pos:start="155:13" pos:end="159:74"><expr pos:start="155:13" pos:end="159:74"><literal type="string" pos:start="155:13" pos:end="155:48">"PartitionPack: ThisPartition = 0x%"</literal><name pos:start="155:49" pos:end="155:54">PRIX64</name>

            <literal type="string" pos:start="157:13" pos:end="157:39">", PreviousPartition = 0x%"</literal><name pos:start="157:40" pos:end="157:45">PRIX64</name><literal type="string" pos:start="157:46" pos:end="157:49">", "</literal>

            <literal type="string" pos:start="159:13" pos:end="159:35">"FooterPartition = 0x%"</literal><name pos:start="159:36" pos:end="159:41">PRIX64</name><literal type="string" pos:start="159:42" pos:end="159:74">", IndexSID = %i, BodySID = %i\n"</literal></expr></argument>,

            <argument pos:start="161:13" pos:end="161:37"><expr pos:start="161:13" pos:end="161:37"><name pos:start="161:13" pos:end="161:37"><name pos:start="161:13" pos:end="161:21">partition</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:37">this_partition</name></name></expr></argument>,

            <argument pos:start="163:13" pos:end="163:41"><expr pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:21">partition</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:41">previous_partition</name></name></expr></argument>, <argument pos:start="163:44" pos:end="163:59"><expr pos:start="163:44" pos:end="163:59"><name pos:start="163:44" pos:end="163:59">footer_partition</name></expr></argument>,

            <argument pos:start="165:13" pos:end="165:32"><expr pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:21">partition</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:32">index_sid</name></name></expr></argument>, <argument pos:start="165:35" pos:end="165:53"><expr pos:start="165:35" pos:end="165:53"><name pos:start="165:35" pos:end="165:53"><name pos:start="165:35" pos:end="165:43">partition</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:53">body_sid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="169:5" pos:end="169:47">/* sanity check PreviousPartition if set */</comment>

    <if_stmt pos:start="171:5" pos:end="181:5"><if pos:start="171:5" pos:end="181:5">if <condition pos:start="171:8" pos:end="173:66">(<expr pos:start="171:9" pos:end="173:65"><name pos:start="171:9" pos:end="171:37"><name pos:start="171:9" pos:end="171:17">partition</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:37">previous_partition</name></name> <operator pos:start="171:39" pos:end="171:40">&amp;&amp;</operator>

        <name pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:11">mxf</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:19">run_in</name></name> <operator pos:start="173:21" pos:end="173:21">+</operator> <name pos:start="173:23" pos:end="173:51"><name pos:start="173:23" pos:end="173:31">partition</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:51">previous_partition</name></name> <operator pos:start="173:53" pos:end="173:54">&gt;=</operator> <name pos:start="173:56" pos:end="173:65">klv_offset</name></expr>)</condition> <block pos:start="173:68" pos:end="181:5">{<block_content pos:start="175:9" pos:end="179:35">

        <expr_stmt pos:start="175:9" pos:end="177:74"><expr pos:start="175:9" pos:end="177:73"><call pos:start="175:9" pos:end="177:73"><name pos:start="175:9" pos:end="175:14">av_log</name><argument_list pos:start="175:15" pos:end="177:73">(<argument pos:start="175:16" pos:end="175:22"><expr pos:start="175:16" pos:end="175:22"><name pos:start="175:16" pos:end="175:22"><name pos:start="175:16" pos:end="175:18">mxf</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:22">fc</name></name></expr></argument>, <argument pos:start="175:25" pos:end="175:36"><expr pos:start="175:25" pos:end="175:36"><name pos:start="175:25" pos:end="175:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="177:16" pos:end="177:72"><expr pos:start="177:16" pos:end="177:72"><literal type="string" pos:start="177:16" pos:end="177:72">"PreviousPartition points to this partition or forward\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="179:9" pos:end="179:35">return <expr pos:start="179:16" pos:end="179:34"><name pos:start="179:16" pos:end="179:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="247:5"><if pos:start="185:5" pos:end="185:56">if      <condition pos:start="185:13" pos:end="185:40">(<expr pos:start="185:14" pos:end="185:39"><name pos:start="185:14" pos:end="185:19"><name pos:start="185:14" pos:end="185:15">op</name><index pos:start="185:16" pos:end="185:19">[<expr pos:start="185:17" pos:end="185:18"><literal type="number" pos:start="185:17" pos:end="185:18">12</literal></expr>]</index></name> <operator pos:start="185:21" pos:end="185:22">==</operator> <literal type="number" pos:start="185:24" pos:end="185:24">1</literal> <operator pos:start="185:26" pos:end="185:27">&amp;&amp;</operator> <name pos:start="185:29" pos:end="185:34"><name pos:start="185:29" pos:end="185:30">op</name><index pos:start="185:31" pos:end="185:34">[<expr pos:start="185:32" pos:end="185:33"><literal type="number" pos:start="185:32" pos:end="185:33">13</literal></expr>]</index></name> <operator pos:start="185:36" pos:end="185:37">==</operator> <literal type="number" pos:start="185:39" pos:end="185:39">1</literal></expr>)</condition><block type="pseudo" pos:start="185:42" pos:end="185:56"><block_content pos:start="185:42" pos:end="185:56"> <expr_stmt pos:start="185:42" pos:end="185:56"><expr pos:start="185:42" pos:end="185:55"><name pos:start="185:42" pos:end="185:48"><name pos:start="185:42" pos:end="185:44">mxf</name><operator pos:start="185:45" pos:end="185:46">-&gt;</operator><name pos:start="185:47" pos:end="185:48">op</name></name> <operator pos:start="185:50" pos:end="185:50">=</operator> <name pos:start="185:52" pos:end="185:55">OP1a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="187:5" pos:end="187:56">else if <condition pos:start="187:13" pos:end="187:40">(<expr pos:start="187:14" pos:end="187:39"><name pos:start="187:14" pos:end="187:19"><name pos:start="187:14" pos:end="187:15">op</name><index pos:start="187:16" pos:end="187:19">[<expr pos:start="187:17" pos:end="187:18"><literal type="number" pos:start="187:17" pos:end="187:18">12</literal></expr>]</index></name> <operator pos:start="187:21" pos:end="187:22">==</operator> <literal type="number" pos:start="187:24" pos:end="187:24">1</literal> <operator pos:start="187:26" pos:end="187:27">&amp;&amp;</operator> <name pos:start="187:29" pos:end="187:34"><name pos:start="187:29" pos:end="187:30">op</name><index pos:start="187:31" pos:end="187:34">[<expr pos:start="187:32" pos:end="187:33"><literal type="number" pos:start="187:32" pos:end="187:33">13</literal></expr>]</index></name> <operator pos:start="187:36" pos:end="187:37">==</operator> <literal type="number" pos:start="187:39" pos:end="187:39">2</literal></expr>)</condition><block type="pseudo" pos:start="187:42" pos:end="187:56"><block_content pos:start="187:42" pos:end="187:56"> <expr_stmt pos:start="187:42" pos:end="187:56"><expr pos:start="187:42" pos:end="187:55"><name pos:start="187:42" pos:end="187:48"><name pos:start="187:42" pos:end="187:44">mxf</name><operator pos:start="187:45" pos:end="187:46">-&gt;</operator><name pos:start="187:47" pos:end="187:48">op</name></name> <operator pos:start="187:50" pos:end="187:50">=</operator> <name pos:start="187:52" pos:end="187:55">OP1b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="189:5" pos:end="189:56">else if <condition pos:start="189:13" pos:end="189:40">(<expr pos:start="189:14" pos:end="189:39"><name pos:start="189:14" pos:end="189:19"><name pos:start="189:14" pos:end="189:15">op</name><index pos:start="189:16" pos:end="189:19">[<expr pos:start="189:17" pos:end="189:18"><literal type="number" pos:start="189:17" pos:end="189:18">12</literal></expr>]</index></name> <operator pos:start="189:21" pos:end="189:22">==</operator> <literal type="number" pos:start="189:24" pos:end="189:24">1</literal> <operator pos:start="189:26" pos:end="189:27">&amp;&amp;</operator> <name pos:start="189:29" pos:end="189:34"><name pos:start="189:29" pos:end="189:30">op</name><index pos:start="189:31" pos:end="189:34">[<expr pos:start="189:32" pos:end="189:33"><literal type="number" pos:start="189:32" pos:end="189:33">13</literal></expr>]</index></name> <operator pos:start="189:36" pos:end="189:37">==</operator> <literal type="number" pos:start="189:39" pos:end="189:39">3</literal></expr>)</condition><block type="pseudo" pos:start="189:42" pos:end="189:56"><block_content pos:start="189:42" pos:end="189:56"> <expr_stmt pos:start="189:42" pos:end="189:56"><expr pos:start="189:42" pos:end="189:55"><name pos:start="189:42" pos:end="189:48"><name pos:start="189:42" pos:end="189:44">mxf</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:48">op</name></name> <operator pos:start="189:50" pos:end="189:50">=</operator> <name pos:start="189:52" pos:end="189:55">OP1c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="191:5" pos:end="191:56">else if <condition pos:start="191:13" pos:end="191:40">(<expr pos:start="191:14" pos:end="191:39"><name pos:start="191:14" pos:end="191:19"><name pos:start="191:14" pos:end="191:15">op</name><index pos:start="191:16" pos:end="191:19">[<expr pos:start="191:17" pos:end="191:18"><literal type="number" pos:start="191:17" pos:end="191:18">12</literal></expr>]</index></name> <operator pos:start="191:21" pos:end="191:22">==</operator> <literal type="number" pos:start="191:24" pos:end="191:24">2</literal> <operator pos:start="191:26" pos:end="191:27">&amp;&amp;</operator> <name pos:start="191:29" pos:end="191:34"><name pos:start="191:29" pos:end="191:30">op</name><index pos:start="191:31" pos:end="191:34">[<expr pos:start="191:32" pos:end="191:33"><literal type="number" pos:start="191:32" pos:end="191:33">13</literal></expr>]</index></name> <operator pos:start="191:36" pos:end="191:37">==</operator> <literal type="number" pos:start="191:39" pos:end="191:39">1</literal></expr>)</condition><block type="pseudo" pos:start="191:42" pos:end="191:56"><block_content pos:start="191:42" pos:end="191:56"> <expr_stmt pos:start="191:42" pos:end="191:56"><expr pos:start="191:42" pos:end="191:55"><name pos:start="191:42" pos:end="191:48"><name pos:start="191:42" pos:end="191:44">mxf</name><operator pos:start="191:45" pos:end="191:46">-&gt;</operator><name pos:start="191:47" pos:end="191:48">op</name></name> <operator pos:start="191:50" pos:end="191:50">=</operator> <name pos:start="191:52" pos:end="191:55">OP2a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="193:5" pos:end="193:56">else if <condition pos:start="193:13" pos:end="193:40">(<expr pos:start="193:14" pos:end="193:39"><name pos:start="193:14" pos:end="193:19"><name pos:start="193:14" pos:end="193:15">op</name><index pos:start="193:16" pos:end="193:19">[<expr pos:start="193:17" pos:end="193:18"><literal type="number" pos:start="193:17" pos:end="193:18">12</literal></expr>]</index></name> <operator pos:start="193:21" pos:end="193:22">==</operator> <literal type="number" pos:start="193:24" pos:end="193:24">2</literal> <operator pos:start="193:26" pos:end="193:27">&amp;&amp;</operator> <name pos:start="193:29" pos:end="193:34"><name pos:start="193:29" pos:end="193:30">op</name><index pos:start="193:31" pos:end="193:34">[<expr pos:start="193:32" pos:end="193:33"><literal type="number" pos:start="193:32" pos:end="193:33">13</literal></expr>]</index></name> <operator pos:start="193:36" pos:end="193:37">==</operator> <literal type="number" pos:start="193:39" pos:end="193:39">2</literal></expr>)</condition><block type="pseudo" pos:start="193:42" pos:end="193:56"><block_content pos:start="193:42" pos:end="193:56"> <expr_stmt pos:start="193:42" pos:end="193:56"><expr pos:start="193:42" pos:end="193:55"><name pos:start="193:42" pos:end="193:48"><name pos:start="193:42" pos:end="193:44">mxf</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:48">op</name></name> <operator pos:start="193:50" pos:end="193:50">=</operator> <name pos:start="193:52" pos:end="193:55">OP2b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="195:5" pos:end="195:56">else if <condition pos:start="195:13" pos:end="195:40">(<expr pos:start="195:14" pos:end="195:39"><name pos:start="195:14" pos:end="195:19"><name pos:start="195:14" pos:end="195:15">op</name><index pos:start="195:16" pos:end="195:19">[<expr pos:start="195:17" pos:end="195:18"><literal type="number" pos:start="195:17" pos:end="195:18">12</literal></expr>]</index></name> <operator pos:start="195:21" pos:end="195:22">==</operator> <literal type="number" pos:start="195:24" pos:end="195:24">2</literal> <operator pos:start="195:26" pos:end="195:27">&amp;&amp;</operator> <name pos:start="195:29" pos:end="195:34"><name pos:start="195:29" pos:end="195:30">op</name><index pos:start="195:31" pos:end="195:34">[<expr pos:start="195:32" pos:end="195:33"><literal type="number" pos:start="195:32" pos:end="195:33">13</literal></expr>]</index></name> <operator pos:start="195:36" pos:end="195:37">==</operator> <literal type="number" pos:start="195:39" pos:end="195:39">3</literal></expr>)</condition><block type="pseudo" pos:start="195:42" pos:end="195:56"><block_content pos:start="195:42" pos:end="195:56"> <expr_stmt pos:start="195:42" pos:end="195:56"><expr pos:start="195:42" pos:end="195:55"><name pos:start="195:42" pos:end="195:48"><name pos:start="195:42" pos:end="195:44">mxf</name><operator pos:start="195:45" pos:end="195:46">-&gt;</operator><name pos:start="195:47" pos:end="195:48">op</name></name> <operator pos:start="195:50" pos:end="195:50">=</operator> <name pos:start="195:52" pos:end="195:55">OP2c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="197:5" pos:end="197:56">else if <condition pos:start="197:13" pos:end="197:40">(<expr pos:start="197:14" pos:end="197:39"><name pos:start="197:14" pos:end="197:19"><name pos:start="197:14" pos:end="197:15">op</name><index pos:start="197:16" pos:end="197:19">[<expr pos:start="197:17" pos:end="197:18"><literal type="number" pos:start="197:17" pos:end="197:18">12</literal></expr>]</index></name> <operator pos:start="197:21" pos:end="197:22">==</operator> <literal type="number" pos:start="197:24" pos:end="197:24">3</literal> <operator pos:start="197:26" pos:end="197:27">&amp;&amp;</operator> <name pos:start="197:29" pos:end="197:34"><name pos:start="197:29" pos:end="197:30">op</name><index pos:start="197:31" pos:end="197:34">[<expr pos:start="197:32" pos:end="197:33"><literal type="number" pos:start="197:32" pos:end="197:33">13</literal></expr>]</index></name> <operator pos:start="197:36" pos:end="197:37">==</operator> <literal type="number" pos:start="197:39" pos:end="197:39">1</literal></expr>)</condition><block type="pseudo" pos:start="197:42" pos:end="197:56"><block_content pos:start="197:42" pos:end="197:56"> <expr_stmt pos:start="197:42" pos:end="197:56"><expr pos:start="197:42" pos:end="197:55"><name pos:start="197:42" pos:end="197:48"><name pos:start="197:42" pos:end="197:44">mxf</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:48">op</name></name> <operator pos:start="197:50" pos:end="197:50">=</operator> <name pos:start="197:52" pos:end="197:55">OP3a</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="199:5" pos:end="199:56">else if <condition pos:start="199:13" pos:end="199:40">(<expr pos:start="199:14" pos:end="199:39"><name pos:start="199:14" pos:end="199:19"><name pos:start="199:14" pos:end="199:15">op</name><index pos:start="199:16" pos:end="199:19">[<expr pos:start="199:17" pos:end="199:18"><literal type="number" pos:start="199:17" pos:end="199:18">12</literal></expr>]</index></name> <operator pos:start="199:21" pos:end="199:22">==</operator> <literal type="number" pos:start="199:24" pos:end="199:24">3</literal> <operator pos:start="199:26" pos:end="199:27">&amp;&amp;</operator> <name pos:start="199:29" pos:end="199:34"><name pos:start="199:29" pos:end="199:30">op</name><index pos:start="199:31" pos:end="199:34">[<expr pos:start="199:32" pos:end="199:33"><literal type="number" pos:start="199:32" pos:end="199:33">13</literal></expr>]</index></name> <operator pos:start="199:36" pos:end="199:37">==</operator> <literal type="number" pos:start="199:39" pos:end="199:39">2</literal></expr>)</condition><block type="pseudo" pos:start="199:42" pos:end="199:56"><block_content pos:start="199:42" pos:end="199:56"> <expr_stmt pos:start="199:42" pos:end="199:56"><expr pos:start="199:42" pos:end="199:55"><name pos:start="199:42" pos:end="199:48"><name pos:start="199:42" pos:end="199:44">mxf</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:48">op</name></name> <operator pos:start="199:50" pos:end="199:50">=</operator> <name pos:start="199:52" pos:end="199:55">OP3b</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="201:5" pos:end="201:56">else if <condition pos:start="201:13" pos:end="201:40">(<expr pos:start="201:14" pos:end="201:39"><name pos:start="201:14" pos:end="201:19"><name pos:start="201:14" pos:end="201:15">op</name><index pos:start="201:16" pos:end="201:19">[<expr pos:start="201:17" pos:end="201:18"><literal type="number" pos:start="201:17" pos:end="201:18">12</literal></expr>]</index></name> <operator pos:start="201:21" pos:end="201:22">==</operator> <literal type="number" pos:start="201:24" pos:end="201:24">3</literal> <operator pos:start="201:26" pos:end="201:27">&amp;&amp;</operator> <name pos:start="201:29" pos:end="201:34"><name pos:start="201:29" pos:end="201:30">op</name><index pos:start="201:31" pos:end="201:34">[<expr pos:start="201:32" pos:end="201:33"><literal type="number" pos:start="201:32" pos:end="201:33">13</literal></expr>]</index></name> <operator pos:start="201:36" pos:end="201:37">==</operator> <literal type="number" pos:start="201:39" pos:end="201:39">3</literal></expr>)</condition><block type="pseudo" pos:start="201:42" pos:end="201:56"><block_content pos:start="201:42" pos:end="201:56"> <expr_stmt pos:start="201:42" pos:end="201:56"><expr pos:start="201:42" pos:end="201:55"><name pos:start="201:42" pos:end="201:48"><name pos:start="201:42" pos:end="201:44">mxf</name><operator pos:start="201:45" pos:end="201:46">-&gt;</operator><name pos:start="201:47" pos:end="201:48">op</name></name> <operator pos:start="201:50" pos:end="201:50">=</operator> <name pos:start="201:52" pos:end="201:55">OP3c</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="203:5" pos:end="203:61">else if <condition pos:start="203:13" pos:end="203:40">(<expr pos:start="203:14" pos:end="203:39"><name pos:start="203:14" pos:end="203:19"><name pos:start="203:14" pos:end="203:15">op</name><index pos:start="203:16" pos:end="203:19">[<expr pos:start="203:17" pos:end="203:18"><literal type="number" pos:start="203:17" pos:end="203:18">12</literal></expr>]</index></name> <operator pos:start="203:21" pos:end="203:22">==</operator> <literal type="number" pos:start="203:24" pos:end="203:25">64</literal><operator pos:start="203:26" pos:end="203:27">&amp;&amp;</operator> <name pos:start="203:29" pos:end="203:34"><name pos:start="203:29" pos:end="203:30">op</name><index pos:start="203:31" pos:end="203:34">[<expr pos:start="203:32" pos:end="203:33"><literal type="number" pos:start="203:32" pos:end="203:33">13</literal></expr>]</index></name> <operator pos:start="203:36" pos:end="203:37">==</operator> <literal type="number" pos:start="203:39" pos:end="203:39">1</literal></expr>)</condition><block type="pseudo" pos:start="203:42" pos:end="203:61"><block_content pos:start="203:42" pos:end="203:61"> <expr_stmt pos:start="203:42" pos:end="203:61"><expr pos:start="203:42" pos:end="203:60"><name pos:start="203:42" pos:end="203:48"><name pos:start="203:42" pos:end="203:44">mxf</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:48">op</name></name> <operator pos:start="203:50" pos:end="203:50">=</operator> <name pos:start="203:52" pos:end="203:60">OPSonyOpt</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="205:5" pos:end="241:5">else if <condition pos:start="205:13" pos:end="205:28">(<expr pos:start="205:14" pos:end="205:27"><name pos:start="205:14" pos:end="205:19"><name pos:start="205:14" pos:end="205:15">op</name><index pos:start="205:16" pos:end="205:19">[<expr pos:start="205:17" pos:end="205:18"><literal type="number" pos:start="205:17" pos:end="205:18">12</literal></expr>]</index></name> <operator pos:start="205:21" pos:end="205:22">==</operator> <literal type="number" pos:start="205:24" pos:end="205:27">0x10</literal></expr>)</condition> <block pos:start="205:30" pos:end="241:5">{<block_content pos:start="215:9" pos:end="239:29">

        <comment type="block" pos:start="207:9" pos:end="213:82">/* SMPTE 390m: "There shall be exactly one essence container"

         * The following block deals with files that violate this, namely:

         * 2011_DCPTEST_24FPS.V.mxf - two ECs, OP1a

         * abcdefghiv016f56415e.mxf - zero ECs, OPAtom, output by Avid AirSpeed */</comment>

        <if_stmt pos:start="215:9" pos:end="239:29"><if pos:start="215:9" pos:end="237:9">if <condition pos:start="215:12" pos:end="215:39">(<expr pos:start="215:13" pos:end="215:38"><name pos:start="215:13" pos:end="215:33">nb_essence_containers</name> <operator pos:start="215:35" pos:end="215:36">!=</operator> <literal type="number" pos:start="215:38" pos:end="215:38">1</literal></expr>)</condition> <block pos:start="215:41" pos:end="237:9">{<block_content pos:start="217:13" pos:end="235:25">

            <decl_stmt pos:start="217:13" pos:end="217:61"><decl pos:start="217:13" pos:end="217:60"><type pos:start="217:13" pos:end="217:17"><name pos:start="217:13" pos:end="217:17">MXFOP</name></type> <name pos:start="217:19" pos:end="217:20">op</name> <init pos:start="217:22" pos:end="217:60">= <expr pos:start="217:24" pos:end="217:60"><ternary pos:start="217:24" pos:end="217:60"><condition pos:start="217:24" pos:end="217:46"><expr pos:start="217:24" pos:end="217:44"><name pos:start="217:24" pos:end="217:44">nb_essence_containers</name></expr> ?</condition><then pos:start="217:48" pos:end="217:51"> <expr pos:start="217:48" pos:end="217:51"><name pos:start="217:48" pos:end="217:51">OP1a</name></expr> </then><else pos:start="217:53" pos:end="217:60">: <expr pos:start="217:55" pos:end="217:60"><name pos:start="217:55" pos:end="217:60">OPAtom</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="221:13" pos:end="221:31">/* only nag once */</comment>

            <if_stmt pos:start="223:13" pos:end="231:55"><if pos:start="223:13" pos:end="231:55">if <condition pos:start="223:16" pos:end="223:25">(<expr pos:start="223:17" pos:end="223:24"><operator pos:start="223:17" pos:end="223:17">!</operator><name pos:start="223:18" pos:end="223:24"><name pos:start="223:18" pos:end="223:20">mxf</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:24">op</name></name></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="231:55"><block_content pos:start="225:17" pos:end="231:55">

                <expr_stmt pos:start="225:17" pos:end="231:55"><expr pos:start="225:17" pos:end="231:54"><call pos:start="225:17" pos:end="231:54"><name pos:start="225:17" pos:end="225:22">av_log</name><argument_list pos:start="225:23" pos:end="231:54">(<argument pos:start="225:24" pos:end="225:30"><expr pos:start="225:24" pos:end="225:30"><name pos:start="225:24" pos:end="225:30"><name pos:start="225:24" pos:end="225:26">mxf</name><operator pos:start="225:27" pos:end="225:28">-&gt;</operator><name pos:start="225:29" pos:end="225:30">fc</name></name></expr></argument>, <argument pos:start="225:33" pos:end="225:46"><expr pos:start="225:33" pos:end="225:46"><name pos:start="225:33" pos:end="225:46">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="227:24" pos:end="227:63"><expr pos:start="227:24" pos:end="227:63"><literal type="string" pos:start="227:24" pos:end="227:63">"\"OPAtom\" with %u ECs - assuming %s\n"</literal></expr></argument>,

                       <argument pos:start="229:24" pos:end="229:44"><expr pos:start="229:24" pos:end="229:44"><name pos:start="229:24" pos:end="229:44">nb_essence_containers</name></expr></argument>,

                       <argument pos:start="231:24" pos:end="231:53"><expr pos:start="231:24" pos:end="231:53"><ternary pos:start="231:24" pos:end="231:53"><condition pos:start="231:24" pos:end="231:35"><expr pos:start="231:24" pos:end="231:33"><name pos:start="231:24" pos:end="231:25">op</name> <operator pos:start="231:27" pos:end="231:28">==</operator> <name pos:start="231:30" pos:end="231:33">OP1a</name></expr> ?</condition><then pos:start="231:37" pos:end="231:42"> <expr pos:start="231:37" pos:end="231:42"><literal type="string" pos:start="231:37" pos:end="231:42">"OP1a"</literal></expr> </then><else pos:start="231:44" pos:end="231:53">: <expr pos:start="231:46" pos:end="231:53"><literal type="string" pos:start="231:46" pos:end="231:53">"OPAtom"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:25"><expr pos:start="235:13" pos:end="235:24"><name pos:start="235:13" pos:end="235:19"><name pos:start="235:13" pos:end="235:15">mxf</name><operator pos:start="235:16" pos:end="235:17">-&gt;</operator><name pos:start="235:18" pos:end="235:19">op</name></name> <operator pos:start="235:21" pos:end="235:21">=</operator> <name pos:start="235:23" pos:end="235:24">op</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="237:11" pos:end="239:29">else<block type="pseudo" pos:start="239:13" pos:end="239:29"><block_content pos:start="239:13" pos:end="239:29">

            <expr_stmt pos:start="239:13" pos:end="239:29"><expr pos:start="239:13" pos:end="239:28"><name pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">mxf</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:19">op</name></name> <operator pos:start="239:21" pos:end="239:21">=</operator> <name pos:start="239:23" pos:end="239:28">OPAtom</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="241:7" pos:end="247:5">else <block pos:start="241:12" pos:end="247:5">{<block_content pos:start="243:9" pos:end="245:23">

        <expr_stmt pos:start="243:9" pos:end="243:116"><expr pos:start="243:9" pos:end="243:115"><call pos:start="243:9" pos:end="243:115"><name pos:start="243:9" pos:end="243:14">av_log</name><argument_list pos:start="243:15" pos:end="243:115">(<argument pos:start="243:16" pos:end="243:22"><expr pos:start="243:16" pos:end="243:22"><name pos:start="243:16" pos:end="243:22"><name pos:start="243:16" pos:end="243:18">mxf</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:22">fc</name></name></expr></argument>, <argument pos:start="243:25" pos:end="243:36"><expr pos:start="243:25" pos:end="243:36"><name pos:start="243:25" pos:end="243:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="243:39" pos:end="243:98"><expr pos:start="243:39" pos:end="243:98"><literal type="string" pos:start="243:39" pos:end="243:98">"unknown operational pattern: %02xh %02xh - guessing OP1a\n"</literal></expr></argument>, <argument pos:start="243:101" pos:end="243:106"><expr pos:start="243:101" pos:end="243:106"><name pos:start="243:101" pos:end="243:106"><name pos:start="243:101" pos:end="243:102">op</name><index pos:start="243:103" pos:end="243:106">[<expr pos:start="243:104" pos:end="243:105"><literal type="number" pos:start="243:104" pos:end="243:105">12</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:109" pos:end="243:114"><expr pos:start="243:109" pos:end="243:114"><name pos:start="243:109" pos:end="243:114"><name pos:start="243:109" pos:end="243:110">op</name><index pos:start="243:111" pos:end="243:114">[<expr pos:start="243:112" pos:end="243:113"><literal type="number" pos:start="243:112" pos:end="243:113">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:23"><expr pos:start="245:9" pos:end="245:22"><name pos:start="245:9" pos:end="245:15"><name pos:start="245:9" pos:end="245:11">mxf</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:15">op</name></name> <operator pos:start="245:17" pos:end="245:17">=</operator> <name pos:start="245:19" pos:end="245:22">OP1a</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="251:5" pos:end="269:5"><if pos:start="251:5" pos:end="269:5">if <condition pos:start="251:8" pos:end="251:68">(<expr pos:start="251:9" pos:end="251:67"><name pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:17">partition</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:27">kag_size</name></name> <operator pos:start="251:29" pos:end="251:30">&lt;=</operator> <literal type="number" pos:start="251:32" pos:end="251:32">0</literal> <operator pos:start="251:34" pos:end="251:35">||</operator> <name pos:start="251:37" pos:end="251:55"><name pos:start="251:37" pos:end="251:45">partition</name><operator pos:start="251:46" pos:end="251:47">-&gt;</operator><name pos:start="251:48" pos:end="251:55">kag_size</name></name> <operator pos:start="251:57" pos:end="251:57">&gt;</operator> <operator pos:start="251:59" pos:end="251:59">(</operator><literal type="number" pos:start="251:60" pos:end="251:60">1</literal> <operator pos:start="251:62" pos:end="251:63">&lt;&lt;</operator> <literal type="number" pos:start="251:65" pos:end="251:66">20</literal><operator pos:start="251:67" pos:end="251:67">)</operator></expr>)</condition> <block pos:start="251:70" pos:end="269:5">{<block_content pos:start="253:9" pos:end="267:69">

        <expr_stmt pos:start="253:9" pos:end="253:95"><expr pos:start="253:9" pos:end="253:94"><call pos:start="253:9" pos:end="253:94"><name pos:start="253:9" pos:end="253:14">av_log</name><argument_list pos:start="253:15" pos:end="253:94">(<argument pos:start="253:16" pos:end="253:22"><expr pos:start="253:16" pos:end="253:22"><name pos:start="253:16" pos:end="253:22"><name pos:start="253:16" pos:end="253:18">mxf</name><operator pos:start="253:19" pos:end="253:20">-&gt;</operator><name pos:start="253:21" pos:end="253:22">fc</name></name></expr></argument>, <argument pos:start="253:25" pos:end="253:38"><expr pos:start="253:25" pos:end="253:38"><name pos:start="253:25" pos:end="253:38">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="253:41" pos:end="253:72"><expr pos:start="253:41" pos:end="253:72"><literal type="string" pos:start="253:41" pos:end="253:72">"invalid KAGSize %i - guessing "</literal></expr></argument>, <argument pos:start="253:75" pos:end="253:93"><expr pos:start="253:75" pos:end="253:93"><name pos:start="253:75" pos:end="253:93"><name pos:start="253:75" pos:end="253:83">partition</name><operator pos:start="253:84" pos:end="253:85">-&gt;</operator><name pos:start="253:86" pos:end="253:93">kag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="257:9" pos:end="263:36"><if pos:start="257:9" pos:end="259:38">if <condition pos:start="257:12" pos:end="257:33">(<expr pos:start="257:13" pos:end="257:32"><name pos:start="257:13" pos:end="257:19"><name pos:start="257:13" pos:end="257:15">mxf</name><operator pos:start="257:16" pos:end="257:17">-&gt;</operator><name pos:start="257:18" pos:end="257:19">op</name></name> <operator pos:start="257:21" pos:end="257:22">==</operator> <name pos:start="257:24" pos:end="257:32">OPSonyOpt</name></expr>)</condition><block type="pseudo" pos:start="259:13" pos:end="259:38"><block_content pos:start="259:13" pos:end="259:38">

            <expr_stmt pos:start="259:13" pos:end="259:38"><expr pos:start="259:13" pos:end="259:37"><name pos:start="259:13" pos:end="259:31"><name pos:start="259:13" pos:end="259:21">partition</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:31">kag_size</name></name> <operator pos:start="259:33" pos:end="259:33">=</operator> <literal type="number" pos:start="259:35" pos:end="259:37">512</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="261:9" pos:end="263:36">else<block type="pseudo" pos:start="263:13" pos:end="263:36"><block_content pos:start="263:13" pos:end="263:36">

            <expr_stmt pos:start="263:13" pos:end="263:36"><expr pos:start="263:13" pos:end="263:35"><name pos:start="263:13" pos:end="263:31"><name pos:start="263:13" pos:end="263:21">partition</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:31">kag_size</name></name> <operator pos:start="263:33" pos:end="263:33">=</operator> <literal type="number" pos:start="263:35" pos:end="263:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="267:9" pos:end="267:69"><expr pos:start="267:9" pos:end="267:68"><call pos:start="267:9" pos:end="267:68"><name pos:start="267:9" pos:end="267:14">av_log</name><argument_list pos:start="267:15" pos:end="267:68">(<argument pos:start="267:16" pos:end="267:22"><expr pos:start="267:16" pos:end="267:22"><name pos:start="267:16" pos:end="267:22"><name pos:start="267:16" pos:end="267:18">mxf</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:22">fc</name></name></expr></argument>, <argument pos:start="267:25" pos:end="267:38"><expr pos:start="267:25" pos:end="267:38"><name pos:start="267:25" pos:end="267:38">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="267:41" pos:end="267:46"><expr pos:start="267:41" pos:end="267:46"><literal type="string" pos:start="267:41" pos:end="267:46">"%i\n"</literal></expr></argument>, <argument pos:start="267:49" pos:end="267:67"><expr pos:start="267:49" pos:end="267:67"><name pos:start="267:49" pos:end="267:67"><name pos:start="267:49" pos:end="267:57">partition</name><operator pos:start="267:58" pos:end="267:59">-&gt;</operator><name pos:start="267:60" pos:end="267:67">kag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="273:5" pos:end="273:13">return <expr pos:start="273:12" pos:end="273:12"><literal type="number" pos:start="273:12" pos:end="273:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
