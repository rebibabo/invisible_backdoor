<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15677.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">ra144_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:46">(<parameter pos:start="1:31" pos:end="1:52"><decl pos:start="1:31" pos:end="1:52"><type pos:start="1:31" pos:end="1:52"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>,

            <parameter pos:start="3:13" pos:end="3:23"><decl pos:start="3:13" pos:end="3:23"><type pos:start="3:13" pos:end="3:23"><name pos:start="3:13" pos:end="3:16">void</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:23">vdata</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:28">int</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:39">data_size</name></decl></parameter>,

            <parameter pos:start="5:13" pos:end="5:31"><decl pos:start="5:13" pos:end="5:31"><type pos:start="5:13" pos:end="5:31"><specifier pos:start="5:13" pos:end="5:17">const</specifier> <name pos:start="5:19" pos:end="5:25">uint8_t</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type> <name pos:start="5:29" pos:end="5:31">buf</name></decl></parameter>, <parameter pos:start="5:34" pos:end="5:45"><decl pos:start="5:34" pos:end="5:45"><type pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:36">int</name></type> <name pos:start="5:38" pos:end="5:45">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="139:1">{<block_content pos:start="9:5" pos:end="137:14">

    <decl_stmt pos:start="9:5" pos:end="9:68"><decl pos:start="9:5" pos:end="9:67"><type pos:start="9:5" pos:end="9:24"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:24">uint8_t</name></type> <name pos:start="9:26" pos:end="9:34"><name pos:start="9:26" pos:end="9:30">sizes</name><index pos:start="9:31" pos:end="9:34">[<expr pos:start="9:32" pos:end="9:33"><literal type="number" pos:start="9:32" pos:end="9:33">10</literal></expr>]</index></name> <init pos:start="9:36" pos:end="9:67">= <expr pos:start="9:38" pos:end="9:67"><block pos:start="9:38" pos:end="9:67">{<expr pos:start="9:39" pos:end="9:39"><literal type="number" pos:start="9:39" pos:end="9:39">6</literal></expr>, <expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">5</literal></expr>, <expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">5</literal></expr>, <expr pos:start="9:48" pos:end="9:48"><literal type="number" pos:start="9:48" pos:end="9:48">4</literal></expr>, <expr pos:start="9:51" pos:end="9:51"><literal type="number" pos:start="9:51" pos:end="9:51">4</literal></expr>, <expr pos:start="9:54" pos:end="9:54"><literal type="number" pos:start="9:54" pos:end="9:54">3</literal></expr>, <expr pos:start="9:57" pos:end="9:57"><literal type="number" pos:start="9:57" pos:end="9:57">3</literal></expr>, <expr pos:start="9:60" pos:end="9:60"><literal type="number" pos:start="9:60" pos:end="9:60">3</literal></expr>, <expr pos:start="9:63" pos:end="9:63"><literal type="number" pos:start="9:63" pos:end="9:63">3</literal></expr>, <expr pos:start="9:66" pos:end="9:66"><literal type="number" pos:start="9:66" pos:end="9:66">2</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">a</name></decl>, <decl pos:start="11:21" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:21" pos:end="11:21">b</name></decl>, <decl pos:start="11:24" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:24" pos:end="11:24">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:10">signed</name> <name pos:start="15:12" pos:end="15:16">short</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:23">shptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">data</name> <init pos:start="17:19" pos:end="17:25">= <expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:25">vdata</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:20">val</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:46"><decl pos:start="23:5" pos:end="23:45"><type pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:20">Real144_internal</name> <modifier pos:start="23:22" pos:end="23:22">*</modifier></type><name pos:start="23:23" pos:end="23:26">glob</name> <init pos:start="23:28" pos:end="23:45">= <expr pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:34">avctx</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:17">GetBitContext</name></type> <name pos:start="25:19" pos:end="25:20">gb</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if<condition pos:start="29:7" pos:end="29:21">(<expr pos:start="29:8" pos:end="29:20"><name pos:start="29:8" pos:end="29:15">buf_size</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><call pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:17">init_get_bits</name><argument_list pos:start="35:18" pos:end="35:35">(<argument pos:start="35:19" pos:end="35:21"><expr pos:start="35:19" pos:end="35:21"><operator pos:start="35:19" pos:end="35:19">&amp;</operator><name pos:start="35:20" pos:end="35:21">gb</name></expr></argument>, <argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">buf</name></expr></argument>, <argument pos:start="35:29" pos:end="35:34"><expr pos:start="35:29" pos:end="35:34"><literal type="number" pos:start="35:29" pos:end="35:30">20</literal> <operator pos:start="35:32" pos:end="35:32">*</operator> <literal type="number" pos:start="35:34" pos:end="35:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="43:73">for <control pos:start="39:9" pos:end="39:24">(<init pos:start="39:10" pos:end="39:13"><expr pos:start="39:10" pos:end="39:12"><name pos:start="39:10" pos:end="39:10">i</name><operator pos:start="39:11" pos:end="39:11">=</operator><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</init> <condition pos:start="39:15" pos:end="39:19"><expr pos:start="39:15" pos:end="39:18"><name pos:start="39:15" pos:end="39:15">i</name><operator pos:start="39:16" pos:end="39:16">&lt;</operator><literal type="number" pos:start="39:17" pos:end="39:18">10</literal></expr>;</condition> <incr pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:21">i</name><operator pos:start="39:22" pos:end="39:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="43:73"><block_content pos:start="43:9" pos:end="43:73">

        <comment type="line" pos:start="41:9" pos:end="41:79">// "&lt;&lt; 1"? Doesn't this make one value out of two of the table useless?</comment>

        <expr_stmt pos:start="43:9" pos:end="43:73"><expr pos:start="43:9" pos:end="43:72"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:12">glob</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:22">swapbuf1</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">i</name></expr>]</index></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:72"><name pos:start="43:29" pos:end="43:39">decodetable</name><index pos:start="43:40" pos:end="43:42">[<expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">i</name></expr>]</index><index pos:start="43:43" pos:end="43:72">[<expr pos:start="43:44" pos:end="43:71"><call pos:start="43:44" pos:end="43:66"><name pos:start="43:44" pos:end="43:51">get_bits</name><argument_list pos:start="43:52" pos:end="43:66">(<argument pos:start="43:53" pos:end="43:55"><expr pos:start="43:53" pos:end="43:55"><operator pos:start="43:53" pos:end="43:53">&amp;</operator><name pos:start="43:54" pos:end="43:55">gb</name></expr></argument>, <argument pos:start="43:58" pos:end="43:65"><expr pos:start="43:58" pos:end="43:65"><name pos:start="43:58" pos:end="43:65"><name pos:start="43:58" pos:end="43:62">sizes</name><index pos:start="43:63" pos:end="43:65">[<expr pos:start="43:64" pos:end="43:64"><name pos:start="43:64" pos:end="43:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="43:68" pos:end="43:69">&lt;&lt;</operator> <literal type="number" pos:start="43:71" pos:end="43:71">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><call pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:12">do_voice</name><argument_list pos:start="47:13" pos:end="47:44">(<argument pos:start="47:14" pos:end="47:27"><expr pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:17">glob</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:27">swapbuf1</name></name></expr></argument>, <argument pos:start="47:30" pos:end="47:43"><expr pos:start="47:30" pos:end="47:43"><name pos:start="47:30" pos:end="47:43"><name pos:start="47:30" pos:end="47:33">glob</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:43">swapbuf2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:7">val</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <name pos:start="51:11" pos:end="51:42"><name pos:start="51:11" pos:end="51:19">decodeval</name><index pos:start="51:20" pos:end="51:42">[<expr pos:start="51:21" pos:end="51:41"><call pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:28">get_bits</name><argument_list pos:start="51:29" pos:end="51:36">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:32">gb</name></expr></argument>, <argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">5</literal></expr></argument>)</argument_list></call> <operator pos:start="51:38" pos:end="51:39">&lt;&lt;</operator> <literal type="number" pos:start="51:41" pos:end="51:41">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="51:45" pos:end="51:69">// Useless table entries?</comment>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:5">a</name> <operator pos:start="53:7" pos:end="53:7">=</operator> <call pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:14">t_sqrt</name><argument_list pos:start="53:15" pos:end="53:32">(<argument pos:start="53:16" pos:end="53:31"><expr pos:start="53:16" pos:end="53:31"><name pos:start="53:16" pos:end="53:18">val</name><operator pos:start="53:19" pos:end="53:19">*</operator><name pos:start="53:20" pos:end="53:31"><name pos:start="53:20" pos:end="53:23">glob</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:31">oldval</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:34" pos:end="53:35">&gt;&gt;</operator> <literal type="number" pos:start="53:37" pos:end="53:38">12</literal></expr>;</expr_stmt>



    <for pos:start="57:5" pos:end="93:5">for <control pos:start="57:9" pos:end="57:31">(<init pos:start="57:10" pos:end="57:13"><expr pos:start="57:10" pos:end="57:12"><name pos:start="57:10" pos:end="57:10">c</name><operator pos:start="57:11" pos:end="57:11">=</operator><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</init> <condition pos:start="57:15" pos:end="57:26"><expr pos:start="57:15" pos:end="57:25"><name pos:start="57:15" pos:end="57:15">c</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <name pos:start="57:19" pos:end="57:25">NBLOCKS</name></expr>;</condition> <incr pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:28">c</name><operator pos:start="57:29" pos:end="57:30">++</operator></expr></incr>)</control> <block pos:start="57:33" pos:end="93:5">{<block_content pos:start="59:9" pos:end="91:9">

        <if_stmt pos:start="59:9" pos:end="91:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:31">(<expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:13">c</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:25">NBLOCKS</name> <operator pos:start="59:27" pos:end="59:27">-</operator> <literal type="number" pos:start="59:29" pos:end="59:29">1</literal><operator pos:start="59:30" pos:end="59:30">)</operator></expr>)</condition> <block pos:start="59:33" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:63">

            <expr_stmt pos:start="61:13" pos:end="61:63"><expr pos:start="61:13" pos:end="61:62"><call pos:start="61:13" pos:end="61:62"><name pos:start="61:13" pos:end="61:16">dec1</name><argument_list pos:start="61:17" pos:end="61:62">(<argument pos:start="61:18" pos:end="61:21"><expr pos:start="61:18" pos:end="61:21"><name pos:start="61:18" pos:end="61:21">glob</name></expr></argument>, <argument pos:start="61:24" pos:end="61:37"><expr pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:27">glob</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:37">swapbuf1</name></name></expr></argument>, <argument pos:start="61:40" pos:end="61:53"><expr pos:start="61:40" pos:end="61:53"><name pos:start="61:40" pos:end="61:53"><name pos:start="61:40" pos:end="61:43">glob</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:53">swapbuf2</name></name></expr></argument>, <argument pos:start="61:56" pos:end="61:56"><expr pos:start="61:56" pos:end="61:56"><literal type="number" pos:start="61:56" pos:end="61:56">3</literal></expr></argument>, <argument pos:start="61:59" pos:end="61:61"><expr pos:start="61:59" pos:end="61:61"><name pos:start="61:59" pos:end="61:61">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="91:9">else <block pos:start="63:16" pos:end="91:9">{<block_content pos:start="65:13" pos:end="89:13">

            <if_stmt pos:start="65:13" pos:end="89:13"><if pos:start="65:13" pos:end="77:13">if <condition pos:start="65:16" pos:end="65:39">(<expr pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:17">c</name> <operator pos:start="65:19" pos:end="65:19">*</operator> <literal type="number" pos:start="65:21" pos:end="65:21">2</literal> <operator pos:start="65:23" pos:end="65:24">==</operator> <operator pos:start="65:26" pos:end="65:26">(</operator><name pos:start="65:27" pos:end="65:33">NBLOCKS</name> <operator pos:start="65:35" pos:end="65:35">-</operator> <literal type="number" pos:start="65:37" pos:end="65:37">2</literal><operator pos:start="65:38" pos:end="65:38">)</operator></expr>)</condition> <block pos:start="65:41" pos:end="77:13">{<block_content pos:start="67:17" pos:end="75:17">

                <if_stmt pos:start="67:17" pos:end="75:17"><if pos:start="67:17" pos:end="71:17">if <condition pos:start="67:20" pos:end="67:39">(<expr pos:start="67:21" pos:end="67:38"><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:24">glob</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:32">oldval</name></name> <operator pos:start="67:34" pos:end="67:34">&lt;</operator> <name pos:start="67:36" pos:end="67:38">val</name></expr>)</condition> <block pos:start="67:41" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:91">

                    <expr_stmt pos:start="69:21" pos:end="69:91"><expr pos:start="69:21" pos:end="69:90"><call pos:start="69:21" pos:end="69:90"><name pos:start="69:21" pos:end="69:24">dec2</name><argument_list pos:start="69:25" pos:end="69:90">(<argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><name pos:start="69:26" pos:end="69:29">glob</name></expr></argument>, <argument pos:start="69:32" pos:end="69:45"><expr pos:start="69:32" pos:end="69:45"><name pos:start="69:32" pos:end="69:45"><name pos:start="69:32" pos:end="69:35">glob</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:45">swapbuf1</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:61"><expr pos:start="69:48" pos:end="69:61"><name pos:start="69:48" pos:end="69:61"><name pos:start="69:48" pos:end="69:51">glob</name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:61">swapbuf2</name></name></expr></argument>, <argument pos:start="69:64" pos:end="69:64"><expr pos:start="69:64" pos:end="69:64"><literal type="number" pos:start="69:64" pos:end="69:64">3</literal></expr></argument>, <argument pos:start="69:67" pos:end="69:67"><expr pos:start="69:67" pos:end="69:67"><name pos:start="69:67" pos:end="69:67">a</name></expr></argument>, <argument pos:start="69:70" pos:end="69:86"><expr pos:start="69:70" pos:end="69:86"><name pos:start="69:70" pos:end="69:86"><name pos:start="69:70" pos:end="69:73">glob</name><operator pos:start="69:74" pos:end="69:75">-&gt;</operator><name pos:start="69:76" pos:end="69:86">swapbuf2alt</name></name></expr></argument>, <argument pos:start="69:89" pos:end="69:89"><expr pos:start="69:89" pos:end="69:89"><name pos:start="69:89" pos:end="69:89">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="75:17">else <block pos:start="71:24" pos:end="75:17">{<block_content pos:start="73:21" pos:end="73:94">

                    <expr_stmt pos:start="73:21" pos:end="73:94"><expr pos:start="73:21" pos:end="73:93"><call pos:start="73:21" pos:end="73:93"><name pos:start="73:21" pos:end="73:24">dec2</name><argument_list pos:start="73:25" pos:end="73:93">(<argument pos:start="73:26" pos:end="73:29"><expr pos:start="73:26" pos:end="73:29"><name pos:start="73:26" pos:end="73:29">glob</name></expr></argument>, <argument pos:start="73:32" pos:end="73:48"><expr pos:start="73:32" pos:end="73:48"><name pos:start="73:32" pos:end="73:48"><name pos:start="73:32" pos:end="73:35">glob</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:48">swapbuf1alt</name></name></expr></argument>, <argument pos:start="73:51" pos:end="73:67"><expr pos:start="73:51" pos:end="73:67"><name pos:start="73:51" pos:end="73:67"><name pos:start="73:51" pos:end="73:54">glob</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:67">swapbuf2alt</name></name></expr></argument>, <argument pos:start="73:70" pos:end="73:70"><expr pos:start="73:70" pos:end="73:70"><literal type="number" pos:start="73:70" pos:end="73:70">3</literal></expr></argument>, <argument pos:start="73:73" pos:end="73:73"><expr pos:start="73:73" pos:end="73:73"><name pos:start="73:73" pos:end="73:73">a</name></expr></argument>, <argument pos:start="73:76" pos:end="73:89"><expr pos:start="73:76" pos:end="73:89"><name pos:start="73:76" pos:end="73:89"><name pos:start="73:76" pos:end="73:79">glob</name><operator pos:start="73:80" pos:end="73:81">-&gt;</operator><name pos:start="73:82" pos:end="73:89">swapbuf2</name></name></expr></argument>, <argument pos:start="73:92" pos:end="73:92"><expr pos:start="73:92" pos:end="73:92"><name pos:start="73:92" pos:end="73:92">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="77:15" pos:end="89:13">else <block pos:start="77:20" pos:end="89:13">{<block_content pos:start="79:17" pos:end="87:17">

                <if_stmt pos:start="79:17" pos:end="87:17"><if pos:start="79:17" pos:end="83:17">if <condition pos:start="79:20" pos:end="79:42">(<expr pos:start="79:21" pos:end="79:41"><name pos:start="79:21" pos:end="79:21">c</name> <operator pos:start="79:23" pos:end="79:23">*</operator> <literal type="number" pos:start="79:25" pos:end="79:25">2</literal> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:36">NBLOCKS</name> <operator pos:start="79:38" pos:end="79:38">-</operator> <literal type="number" pos:start="79:40" pos:end="79:40">2</literal><operator pos:start="79:41" pos:end="79:41">)</operator></expr>)</condition> <block pos:start="79:44" pos:end="83:17">{<block_content pos:start="81:21" pos:end="81:105">

                    <expr_stmt pos:start="81:21" pos:end="81:105"><expr pos:start="81:21" pos:end="81:104"><call pos:start="81:21" pos:end="81:104"><name pos:start="81:21" pos:end="81:24">dec2</name><argument_list pos:start="81:25" pos:end="81:104">(<argument pos:start="81:26" pos:end="81:29"><expr pos:start="81:26" pos:end="81:29"><name pos:start="81:26" pos:end="81:29">glob</name></expr></argument>, <argument pos:start="81:32" pos:end="81:48"><expr pos:start="81:32" pos:end="81:48"><name pos:start="81:32" pos:end="81:48"><name pos:start="81:32" pos:end="81:35">glob</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:48">swapbuf1alt</name></name></expr></argument>, <argument pos:start="81:51" pos:end="81:67"><expr pos:start="81:51" pos:end="81:67"><name pos:start="81:51" pos:end="81:67"><name pos:start="81:51" pos:end="81:54">glob</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:67">swapbuf2alt</name></name></expr></argument>, <argument pos:start="81:70" pos:end="81:70"><expr pos:start="81:70" pos:end="81:70"><literal type="number" pos:start="81:70" pos:end="81:70">3</literal></expr></argument>, <argument pos:start="81:73" pos:end="81:84"><expr pos:start="81:73" pos:end="81:84"><name pos:start="81:73" pos:end="81:84"><name pos:start="81:73" pos:end="81:76">glob</name><operator pos:start="81:77" pos:end="81:78">-&gt;</operator><name pos:start="81:79" pos:end="81:84">oldval</name></name></expr></argument>, <argument pos:start="81:87" pos:end="81:100"><expr pos:start="81:87" pos:end="81:100"><name pos:start="81:87" pos:end="81:100"><name pos:start="81:87" pos:end="81:90">glob</name><operator pos:start="81:91" pos:end="81:92">-&gt;</operator><name pos:start="81:93" pos:end="81:100">swapbuf2</name></name></expr></argument>, <argument pos:start="81:103" pos:end="81:103"><expr pos:start="81:103" pos:end="81:103"><name pos:start="81:103" pos:end="81:103">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="83:19" pos:end="87:17">else <block pos:start="83:24" pos:end="87:17">{<block_content pos:start="85:21" pos:end="85:93">

                    <expr_stmt pos:start="85:21" pos:end="85:93"><expr pos:start="85:21" pos:end="85:92"><call pos:start="85:21" pos:end="85:92"><name pos:start="85:21" pos:end="85:24">dec2</name><argument_list pos:start="85:25" pos:end="85:92">(<argument pos:start="85:26" pos:end="85:29"><expr pos:start="85:26" pos:end="85:29"><name pos:start="85:26" pos:end="85:29">glob</name></expr></argument>, <argument pos:start="85:32" pos:end="85:45"><expr pos:start="85:32" pos:end="85:45"><name pos:start="85:32" pos:end="85:45"><name pos:start="85:32" pos:end="85:35">glob</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:45">swapbuf1</name></name></expr></argument>, <argument pos:start="85:48" pos:end="85:61"><expr pos:start="85:48" pos:end="85:61"><name pos:start="85:48" pos:end="85:61"><name pos:start="85:48" pos:end="85:51">glob</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:61">swapbuf2</name></name></expr></argument>, <argument pos:start="85:64" pos:end="85:64"><expr pos:start="85:64" pos:end="85:64"><literal type="number" pos:start="85:64" pos:end="85:64">3</literal></expr></argument>, <argument pos:start="85:67" pos:end="85:69"><expr pos:start="85:67" pos:end="85:69"><name pos:start="85:67" pos:end="85:69">val</name></expr></argument>, <argument pos:start="85:72" pos:end="85:88"><expr pos:start="85:72" pos:end="85:88"><name pos:start="85:72" pos:end="85:88"><name pos:start="85:72" pos:end="85:75">glob</name><operator pos:start="85:76" pos:end="85:77">-&gt;</operator><name pos:start="85:78" pos:end="85:88">swapbuf2alt</name></name></expr></argument>, <argument pos:start="85:91" pos:end="85:91"><expr pos:start="85:91" pos:end="85:91"><name pos:start="85:91" pos:end="85:91">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="97:5" pos:end="97:19">/* do output */</comment>

    <for pos:start="99:5" pos:end="121:5">for <control pos:start="99:9" pos:end="99:28">(<init pos:start="99:10" pos:end="99:18"><expr pos:start="99:10" pos:end="99:12"><name pos:start="99:10" pos:end="99:10">b</name><operator pos:start="99:11" pos:end="99:11">=</operator><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr><operator pos:start="99:13" pos:end="99:13">,</operator> <expr pos:start="99:15" pos:end="99:17"><name pos:start="99:15" pos:end="99:15">c</name><operator pos:start="99:16" pos:end="99:16">=</operator><literal type="number" pos:start="99:17" pos:end="99:17">0</literal></expr>;</init> <condition pos:start="99:20" pos:end="99:23"><expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:20">c</name><operator pos:start="99:21" pos:end="99:21">&lt;</operator><literal type="number" pos:start="99:22" pos:end="99:22">4</literal></expr>;</condition> <incr pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:25">c</name><operator pos:start="99:26" pos:end="99:27">++</operator></expr></incr>)</control> <block pos:start="99:30" pos:end="121:5">{<block_content pos:start="101:9" pos:end="119:16">

        <decl_stmt pos:start="101:9" pos:end="101:47"><decl pos:start="101:9" pos:end="101:46"><type pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:16">unsigned</name> <name pos:start="101:18" pos:end="101:20">int</name></type> <name pos:start="101:22" pos:end="101:25">gval</name> <init pos:start="101:27" pos:end="101:46">= <expr pos:start="101:29" pos:end="101:46"><name pos:start="101:29" pos:end="101:46"><name pos:start="101:29" pos:end="101:32">glob</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:39">gbuf1</name><index pos:start="101:40" pos:end="101:46">[<expr pos:start="101:41" pos:end="101:45"><name pos:start="101:41" pos:end="101:41">c</name> <operator pos:start="101:43" pos:end="101:43">*</operator> <literal type="number" pos:start="101:45" pos:end="101:45">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:46"><decl pos:start="103:9" pos:end="103:45"><type pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:16">unsigned</name> <name pos:start="103:18" pos:end="103:22">short</name> <modifier pos:start="103:24" pos:end="103:24">*</modifier></type><name pos:start="103:25" pos:end="103:27">gsp</name> <init pos:start="103:29" pos:end="103:45">= <expr pos:start="103:31" pos:end="103:45"><name pos:start="103:31" pos:end="103:41"><name pos:start="103:31" pos:end="103:34">glob</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:41">gbuf2</name></name> <operator pos:start="103:43" pos:end="103:43">+</operator> <name pos:start="103:45" pos:end="103:45">b</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:39"><decl pos:start="105:9" pos:end="105:38"><type pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:14">signed</name> <name pos:start="105:16" pos:end="105:20">short</name></type> <name pos:start="105:22" pos:end="105:38"><name pos:start="105:22" pos:end="105:34">output_buffer</name><index pos:start="105:35" pos:end="105:38">[<expr pos:start="105:36" pos:end="105:37"><literal type="number" pos:start="105:36" pos:end="105:37">40</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:64"><expr pos:start="109:9" pos:end="109:63"><call pos:start="109:9" pos:end="109:63"><name pos:start="109:9" pos:end="109:26">do_output_subblock</name><argument_list pos:start="109:27" pos:end="109:63">(<argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:31">glob</name></expr></argument>, <argument pos:start="109:34" pos:end="109:36"><expr pos:start="109:34" pos:end="109:36"><name pos:start="109:34" pos:end="109:36">gsp</name></expr></argument>, <argument pos:start="109:39" pos:end="109:42"><expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:42">gval</name></expr></argument>, <argument pos:start="109:45" pos:end="109:57"><expr pos:start="109:45" pos:end="109:57"><name pos:start="109:45" pos:end="109:57">output_buffer</name></expr></argument>, <argument pos:start="109:60" pos:end="109:62"><expr pos:start="109:60" pos:end="109:62"><operator pos:start="109:60" pos:end="109:60">&amp;</operator><name pos:start="109:61" pos:end="109:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:30"><expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:13">shptr</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <name pos:start="113:17" pos:end="113:29">output_buffer</name></expr>;</expr_stmt>

        <while pos:start="115:9" pos:end="117:53">while <condition pos:start="115:15" pos:end="115:49">(<expr pos:start="115:16" pos:end="115:48"><name pos:start="115:16" pos:end="115:20">shptr</name> <operator pos:start="115:22" pos:end="115:22">&lt;</operator> <name pos:start="115:24" pos:end="115:36">output_buffer</name> <operator pos:start="115:38" pos:end="115:38">+</operator> <name pos:start="115:40" pos:end="115:48">BLOCKSIZE</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:53"><block_content pos:start="117:13" pos:end="117:53">

            <expr_stmt pos:start="117:13" pos:end="117:53"><expr pos:start="117:13" pos:end="117:52"><operator pos:start="117:13" pos:end="117:13">*</operator><name pos:start="117:14" pos:end="117:17">data</name><operator pos:start="117:18" pos:end="117:19">++</operator> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="117:52"><name pos:start="117:23" pos:end="117:35">av_clip_int16</name><argument_list pos:start="117:36" pos:end="117:52">(<argument pos:start="117:37" pos:end="117:51"><expr pos:start="117:37" pos:end="117:51"><operator pos:start="117:37" pos:end="117:37">*</operator><operator pos:start="117:38" pos:end="117:38">(</operator><name pos:start="117:39" pos:end="117:43">shptr</name><operator pos:start="117:44" pos:end="117:45">++</operator><operator pos:start="117:46" pos:end="117:46">)</operator> <operator pos:start="117:48" pos:end="117:49">&lt;&lt;</operator> <literal type="number" pos:start="117:51" pos:end="117:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        <expr_stmt pos:start="119:9" pos:end="119:16"><expr pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:9">b</name> <operator pos:start="119:11" pos:end="119:12">+=</operator> <literal type="number" pos:start="119:14" pos:end="119:15">30</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="125:5" pos:end="125:23"><expr pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:16"><name pos:start="125:5" pos:end="125:8">glob</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:16">oldval</name></name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:22">val</name></expr>;</expr_stmt>



    <macro pos:start="129:5" pos:end="129:61"><name pos:start="129:5" pos:end="129:10">FFSWAP</name><argument_list pos:start="129:11" pos:end="129:61">(<argument pos:start="129:12" pos:end="129:25">unsigned int *</argument>, <argument pos:start="129:28" pos:end="129:44">glob-&gt;swapbuf1alt</argument>, <argument pos:start="129:47" pos:end="129:60">glob-&gt;swapbuf1</argument>)</argument_list></macro><empty_stmt pos:start="129:62" pos:end="129:62">;</empty_stmt>

    <macro pos:start="131:5" pos:end="131:61"><name pos:start="131:5" pos:end="131:10">FFSWAP</name><argument_list pos:start="131:11" pos:end="131:61">(<argument pos:start="131:12" pos:end="131:25">unsigned int *</argument>, <argument pos:start="131:28" pos:end="131:44">glob-&gt;swapbuf2alt</argument>, <argument pos:start="131:47" pos:end="131:60">glob-&gt;swapbuf2</argument>)</argument_list></macro><empty_stmt pos:start="131:62" pos:end="131:62">;</empty_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:23"><expr pos:start="135:5" pos:end="135:22"><operator pos:start="135:5" pos:end="135:5">*</operator><name pos:start="135:6" pos:end="135:14">data_size</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">2</literal><operator pos:start="135:19" pos:end="135:19">*</operator><literal type="number" pos:start="135:20" pos:end="135:22">160</literal></expr>;</expr_stmt>

    <return pos:start="137:5" pos:end="137:14">return <expr pos:start="137:12" pos:end="137:13"><literal type="number" pos:start="137:12" pos:end="137:13">20</literal></expr>;</return>

</block_content>}</block></function>
</unit>
