<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8300.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">qmp_input_check_struct</name><parameter_list pos:start="1:35" pos:end="1:60">(<parameter pos:start="1:36" pos:end="1:45"><decl pos:start="1:36" pos:end="1:45"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:42">Visitor</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">v</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">QmpInputVisitor</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">qiv</name> <init pos:start="5:26" pos:end="5:36">= <expr pos:start="5:28" pos:end="5:36"><call pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:33">to_qiv</name><argument_list pos:start="5:34" pos:end="5:36">(<argument pos:start="5:35" pos:end="5:35"><expr pos:start="5:35" pos:end="5:35"><name pos:start="5:35" pos:end="5:35">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">StackObject</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">tos</name> <init pos:start="7:22" pos:end="7:53">= <expr pos:start="7:24" pos:end="7:53"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:53"><name pos:start="7:25" pos:end="7:27">qiv</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:34">stack</name><index pos:start="7:35" pos:end="7:53">[<expr pos:start="7:36" pos:end="7:52"><name pos:start="7:36" pos:end="7:48"><name pos:start="7:36" pos:end="7:38">qiv</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:48">nb_stack</name></name> <operator pos:start="7:50" pos:end="7:50">-</operator> <literal type="number" pos:start="7:52" pos:end="7:52">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:29">(<argument pos:start="11:12" pos:end="11:28"><expr pos:start="11:12" pos:end="11:28"><name pos:start="11:12" pos:end="11:24"><name pos:start="11:12" pos:end="11:14">qiv</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:24">nb_stack</name></name> <operator pos:start="11:26" pos:end="11:26">&gt;</operator> <literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="37:5"><if pos:start="15:5" pos:end="37:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">qiv</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">strict</name></name></expr>)</condition> <block pos:start="15:22" pos:end="37:5">{<block_content pos:start="17:9" pos:end="35:9">

        <decl_stmt pos:start="17:9" pos:end="17:42"><decl pos:start="17:9" pos:end="17:41"><type pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:18">GHashTable</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier><specifier pos:start="17:21" pos:end="17:25">const</specifier></type> <name pos:start="17:27" pos:end="17:32">top_ht</name> <init pos:start="17:34" pos:end="17:41">= <expr pos:start="17:36" pos:end="17:41"><name pos:start="17:36" pos:end="17:41"><name pos:start="17:36" pos:end="17:38">tos</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:41">h</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="35:9"><if pos:start="19:9" pos:end="35:9">if <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:18">top_ht</name></expr>)</condition> <block pos:start="19:21" pos:end="35:9">{<block_content pos:start="21:13" pos:end="33:13">

            <decl_stmt pos:start="21:13" pos:end="21:32"><decl pos:start="21:13" pos:end="21:31"><type pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:26">GHashTableIter</name></type> <name pos:start="21:28" pos:end="21:31">iter</name></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:28"><decl pos:start="23:13" pos:end="23:27"><type pos:start="23:13" pos:end="23:24"><specifier pos:start="23:13" pos:end="23:17">const</specifier> <name pos:start="23:19" pos:end="23:22">char</name> <modifier pos:start="23:24" pos:end="23:24">*</modifier></type><name pos:start="23:25" pos:end="23:27">key</name></decl>;</decl_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:50"><expr pos:start="27:13" pos:end="27:49"><call pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:34">g_hash_table_iter_init</name><argument_list pos:start="27:35" pos:end="27:49">(<argument pos:start="27:36" pos:end="27:40"><expr pos:start="27:36" pos:end="27:40"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:40">iter</name></expr></argument>, <argument pos:start="27:43" pos:end="27:48"><expr pos:start="27:43" pos:end="27:48"><name pos:start="27:43" pos:end="27:48">top_ht</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:67">(<expr pos:start="29:17" pos:end="29:66"><call pos:start="29:17" pos:end="29:66"><name pos:start="29:17" pos:end="29:38">g_hash_table_iter_next</name><argument_list pos:start="29:39" pos:end="29:66">(<argument pos:start="29:40" pos:end="29:44"><expr pos:start="29:40" pos:end="29:44"><operator pos:start="29:40" pos:end="29:40">&amp;</operator><name pos:start="29:41" pos:end="29:44">iter</name></expr></argument>, <argument pos:start="29:47" pos:end="29:59"><expr pos:start="29:47" pos:end="29:59"><operator pos:start="29:47" pos:end="29:47">(</operator><name pos:start="29:48" pos:end="29:51">void</name> <operator pos:start="29:53" pos:end="29:53">*</operator><operator pos:start="29:54" pos:end="29:54">*</operator><operator pos:start="29:55" pos:end="29:55">)</operator><operator pos:start="29:56" pos:end="29:56">&amp;</operator><name pos:start="29:57" pos:end="29:59">key</name></expr></argument>, <argument pos:start="29:62" pos:end="29:65"><expr pos:start="29:62" pos:end="29:65"><name pos:start="29:62" pos:end="29:65">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:69" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:61">

                <expr_stmt pos:start="31:17" pos:end="31:61"><expr pos:start="31:17" pos:end="31:60"><call pos:start="31:17" pos:end="31:60"><name pos:start="31:17" pos:end="31:26">error_setg</name><argument_list pos:start="31:27" pos:end="31:60">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">errp</name></expr></argument>, <argument pos:start="31:34" pos:end="31:54"><expr pos:start="31:34" pos:end="31:54"><name pos:start="31:34" pos:end="31:54">QERR_QMP_EXTRA_MEMBER</name></expr></argument>, <argument pos:start="31:57" pos:end="31:59"><expr pos:start="31:57" pos:end="31:59"><name pos:start="31:57" pos:end="31:59">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
