<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15656.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">register_types</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="54:0">

    <expr_stmt pos:start="5:5" pos:end="5:71"><expr pos:start="5:5" pos:end="5:70"><call pos:start="5:5" pos:end="5:70"><name pos:start="5:5" pos:end="5:29">register_char_driver_qapi</name><argument_list pos:start="5:30" pos:end="5:70">(<argument pos:start="5:31" pos:end="5:36"><expr pos:start="5:31" pos:end="5:36"><literal type="string" pos:start="5:31" pos:end="5:36">"null"</literal></expr></argument>, <argument pos:start="5:39" pos:end="5:63"><expr pos:start="5:39" pos:end="5:63"><name pos:start="5:39" pos:end="5:63">CHARDEV_BACKEND_KIND_NULL</name></expr></argument>, <argument pos:start="5:66" pos:end="5:69"><expr pos:start="5:66" pos:end="5:69"><name pos:start="5:66" pos:end="5:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:57"><expr pos:start="7:5" pos:end="7:56"><call pos:start="7:5" pos:end="7:56"><name pos:start="7:5" pos:end="7:24">register_char_driver</name><argument_list pos:start="7:25" pos:end="7:56">(<argument pos:start="7:26" pos:end="7:33"><expr pos:start="7:26" pos:end="7:33"><literal type="string" pos:start="7:26" pos:end="7:33">"socket"</literal></expr></argument>, <argument pos:start="7:36" pos:end="7:55"><expr pos:start="7:36" pos:end="7:55"><name pos:start="7:36" pos:end="7:55">qemu_chr_open_socket</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:51"><expr pos:start="9:5" pos:end="9:50"><call pos:start="9:5" pos:end="9:50"><name pos:start="9:5" pos:end="9:24">register_char_driver</name><argument_list pos:start="9:25" pos:end="9:50">(<argument pos:start="9:26" pos:end="9:30"><expr pos:start="9:26" pos:end="9:30"><literal type="string" pos:start="9:26" pos:end="9:30">"udp"</literal></expr></argument>, <argument pos:start="9:33" pos:end="9:49"><expr pos:start="9:33" pos:end="9:49"><name pos:start="9:33" pos:end="9:49">qemu_chr_open_udp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:58"><expr pos:start="11:5" pos:end="11:57"><call pos:start="11:5" pos:end="11:57"><name pos:start="11:5" pos:end="11:24">register_char_driver</name><argument_list pos:start="11:25" pos:end="11:57">(<argument pos:start="11:26" pos:end="11:33"><expr pos:start="11:26" pos:end="11:33"><literal type="string" pos:start="11:26" pos:end="11:33">"memory"</literal></expr></argument>, <argument pos:start="11:36" pos:end="11:56"><expr pos:start="11:36" pos:end="11:56"><name pos:start="11:36" pos:end="11:56">qemu_chr_open_ringbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:55"><expr pos:start="13:5" pos:end="15:54"><call pos:start="13:5" pos:end="15:54"><name pos:start="13:5" pos:end="13:29">register_char_driver_qapi</name><argument_list pos:start="13:30" pos:end="15:54">(<argument pos:start="13:31" pos:end="13:36"><expr pos:start="13:31" pos:end="13:36"><literal type="string" pos:start="13:31" pos:end="13:36">"file"</literal></expr></argument>, <argument pos:start="13:39" pos:end="13:63"><expr pos:start="13:39" pos:end="13:63"><name pos:start="13:39" pos:end="13:63">CHARDEV_BACKEND_KIND_FILE</name></expr></argument>,

                              <argument pos:start="15:31" pos:end="15:53"><expr pos:start="15:31" pos:end="15:53"><name pos:start="15:31" pos:end="15:53">qemu_chr_parse_file_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:52"><expr pos:start="17:5" pos:end="19:51"><call pos:start="17:5" pos:end="19:51"><name pos:start="17:5" pos:end="17:29">register_char_driver_qapi</name><argument_list pos:start="17:30" pos:end="19:51">(<argument pos:start="17:31" pos:end="17:37"><expr pos:start="17:31" pos:end="17:37"><literal type="string" pos:start="17:31" pos:end="17:37">"stdio"</literal></expr></argument>, <argument pos:start="17:40" pos:end="17:65"><expr pos:start="17:40" pos:end="17:65"><name pos:start="17:40" pos:end="17:65">CHARDEV_BACKEND_KIND_STDIO</name></expr></argument>,

                              <argument pos:start="19:31" pos:end="19:50"><expr pos:start="19:31" pos:end="19:50"><name pos:start="19:31" pos:end="19:50">qemu_chr_parse_stdio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:53"><expr pos:start="21:5" pos:end="23:52"><call pos:start="21:5" pos:end="23:52"><name pos:start="21:5" pos:end="21:29">register_char_driver_qapi</name><argument_list pos:start="21:30" pos:end="23:52">(<argument pos:start="21:31" pos:end="21:38"><expr pos:start="21:31" pos:end="21:38"><literal type="string" pos:start="21:31" pos:end="21:38">"serial"</literal></expr></argument>, <argument pos:start="21:41" pos:end="21:67"><expr pos:start="21:41" pos:end="21:67"><name pos:start="21:41" pos:end="21:67">CHARDEV_BACKEND_KIND_SERIAL</name></expr></argument>,

                              <argument pos:start="23:31" pos:end="23:51"><expr pos:start="23:31" pos:end="23:51"><name pos:start="23:31" pos:end="23:51">qemu_chr_parse_serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:53"><expr pos:start="25:5" pos:end="27:52"><call pos:start="25:5" pos:end="27:52"><name pos:start="25:5" pos:end="25:29">register_char_driver_qapi</name><argument_list pos:start="25:30" pos:end="27:52">(<argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><literal type="string" pos:start="25:31" pos:end="25:35">"tty"</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:64"><expr pos:start="25:38" pos:end="25:64"><name pos:start="25:38" pos:end="25:64">CHARDEV_BACKEND_KIND_SERIAL</name></expr></argument>,

                              <argument pos:start="27:31" pos:end="27:51"><expr pos:start="27:31" pos:end="27:51"><name pos:start="27:31" pos:end="27:51">qemu_chr_parse_serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:55"><expr pos:start="29:5" pos:end="31:54"><call pos:start="29:5" pos:end="31:54"><name pos:start="29:5" pos:end="29:29">register_char_driver_qapi</name><argument_list pos:start="29:30" pos:end="31:54">(<argument pos:start="29:31" pos:end="29:40"><expr pos:start="29:31" pos:end="29:40"><literal type="string" pos:start="29:31" pos:end="29:40">"parallel"</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:71"><expr pos:start="29:43" pos:end="29:71"><name pos:start="29:43" pos:end="29:71">CHARDEV_BACKEND_KIND_PARALLEL</name></expr></argument>,

                              <argument pos:start="31:31" pos:end="31:53"><expr pos:start="31:31" pos:end="31:53"><name pos:start="31:31" pos:end="31:53">qemu_chr_parse_parallel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="38:0"><expr pos:start="33:5" pos:end="35:54"><call pos:start="33:5" pos:end="35:54"><name pos:start="33:5" pos:end="33:29">register_char_driver_qapi</name><argument_list pos:start="33:30" pos:end="35:54">(<argument pos:start="33:31" pos:end="33:39"><expr pos:start="33:31" pos:end="33:39"><literal type="string" pos:start="33:31" pos:end="33:39">"parport"</literal></expr></argument>, <argument pos:start="33:42" pos:end="33:70"><expr pos:start="33:42" pos:end="33:70"><name pos:start="33:42" pos:end="33:70">CHARDEV_BACKEND_KIND_PARALLEL</name></expr></argument>,

                              <argument pos:start="35:31" pos:end="35:53"><expr pos:start="35:31" pos:end="35:53"><name pos:start="35:31" pos:end="35:53">qemu_chr_parse_parallel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="37:1" pos:end="37:13">#<cpp:directive pos:start="37:2" pos:end="37:6">ifdef</cpp:directive> <name pos:start="37:8" pos:end="37:13">_WIN32</name></cpp:ifdef>

    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><call pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:24">register_char_driver</name><argument_list pos:start="39:25" pos:end="39:56">(<argument pos:start="39:26" pos:end="39:31"><expr pos:start="39:26" pos:end="39:31"><literal type="string" pos:start="39:26" pos:end="39:31">"pipe"</literal></expr></argument>, <argument pos:start="39:34" pos:end="39:55"><expr pos:start="39:34" pos:end="39:55"><name pos:start="39:34" pos:end="39:55">qemu_chr_open_win_pipe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="44:0"><expr pos:start="41:5" pos:end="41:58"><call pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:24">register_char_driver</name><argument_list pos:start="41:25" pos:end="41:58">(<argument pos:start="41:26" pos:end="41:34"><expr pos:start="41:26" pos:end="41:34"><literal type="string" pos:start="41:26" pos:end="41:34">"console"</literal></expr></argument>, <argument pos:start="41:37" pos:end="41:57"><expr pos:start="41:37" pos:end="41:57"><name pos:start="41:37" pos:end="41:57">qemu_chr_open_win_con</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="45:5" pos:end="50:0"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:24">register_char_driver</name><argument_list pos:start="45:25" pos:end="45:52">(<argument pos:start="45:26" pos:end="45:31"><expr pos:start="45:26" pos:end="45:31"><literal type="string" pos:start="45:26" pos:end="45:31">"pipe"</literal></expr></argument>, <argument pos:start="45:34" pos:end="45:51"><expr pos:start="45:34" pos:end="45:51"><name pos:start="45:34" pos:end="45:51">qemu_chr_open_pipe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="49:1" pos:end="49:23">#<cpp:directive pos:start="49:2" pos:end="49:6">ifdef</cpp:directive> <name pos:start="49:8" pos:end="49:23">HAVE_CHARDEV_TTY</name></cpp:ifdef>

    <expr_stmt pos:start="51:5" pos:end="54:0"><expr pos:start="51:5" pos:end="51:50"><call pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:24">register_char_driver</name><argument_list pos:start="51:25" pos:end="51:50">(<argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><literal type="string" pos:start="51:26" pos:end="51:30">"pty"</literal></expr></argument>, <argument pos:start="51:33" pos:end="51:49"><expr pos:start="51:33" pos:end="51:49"><name pos:start="51:33" pos:end="51:49">qemu_chr_open_pty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
