<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7698.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_scale_eval_dimensions</name><parameter_list pos:start="1:29" pos:end="7:27">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:42">log_ctx</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:22"><type pos:start="3:5" pos:end="3:22"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:14">char</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:22">w_expr</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:42"><decl pos:start="3:25" pos:end="3:42"><type pos:start="3:25" pos:end="3:42"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:42">h_expr</name></decl></parameter>,

    <parameter pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:16">AVFilterLink</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:24">inlink</name></decl></parameter>, <parameter pos:start="5:27" pos:end="5:47"><decl pos:start="5:27" pos:end="5:47"><type pos:start="5:27" pos:end="5:47"><name pos:start="5:27" pos:end="5:38">AVFilterLink</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:47">outlink</name></decl></parameter>,

    <parameter pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:7">int</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:14">ret_w</name></decl></parameter>, <parameter pos:start="7:17" pos:end="7:26"><decl pos:start="7:17" pos:end="7:26"><type pos:start="7:17" pos:end="7:26"><name pos:start="7:17" pos:end="7:19">int</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:26">ret_h</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="221:1">{<block_content pos:start="11:5" pos:end="219:15">

    <decl_stmt pos:start="11:5" pos:end="11:73"><decl pos:start="11:5" pos:end="11:72"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:28">AVPixFmtDescriptor</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:34">desc</name> <init pos:start="11:36" pos:end="11:72">= <expr pos:start="11:38" pos:end="11:72"><call pos:start="11:38" pos:end="11:72"><name pos:start="11:38" pos:end="11:56">av_pix_fmt_desc_get</name><argument_list pos:start="11:57" pos:end="11:72">(<argument pos:start="11:58" pos:end="11:71"><expr pos:start="11:58" pos:end="11:71"><name pos:start="11:58" pos:end="11:71"><name pos:start="11:58" pos:end="11:63">inlink</name><operator pos:start="11:64" pos:end="11:65">-&gt;</operator><name pos:start="11:66" pos:end="11:71">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:78"><decl pos:start="13:5" pos:end="13:77"><type pos:start="13:5" pos:end="13:30"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:28">AVPixFmtDescriptor</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:38">out_desc</name> <init pos:start="13:40" pos:end="13:77">= <expr pos:start="13:42" pos:end="13:77"><call pos:start="13:42" pos:end="13:77"><name pos:start="13:42" pos:end="13:60">av_pix_fmt_desc_get</name><argument_list pos:start="13:61" pos:end="13:77">(<argument pos:start="13:62" pos:end="13:76"><expr pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:68">outlink</name><operator pos:start="13:69" pos:end="13:70">-&gt;</operator><name pos:start="13:71" pos:end="13:76">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">expr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">w</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">factor_w</name></decl>, <decl pos:start="19:19" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:26">factor_h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">eval_w</name></decl>, <decl pos:start="21:17" pos:end="21:22"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:17" pos:end="21:22">eval_h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:93"><decl pos:start="25:5" pos:end="25:92"><type pos:start="25:5" pos:end="25:14"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:14">char</name></type> <name pos:start="25:16" pos:end="25:24">scale2ref</name> <init pos:start="25:26" pos:end="25:92">= <expr pos:start="25:28" pos:end="25:92"><name pos:start="25:28" pos:end="25:50"><name pos:start="25:28" pos:end="25:34">outlink</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:39">src</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:50">nb_inputs</name></name> <operator pos:start="25:52" pos:end="25:53">==</operator> <literal type="number" pos:start="25:55" pos:end="25:55">2</literal> <operator pos:start="25:57" pos:end="25:58">&amp;&amp;</operator> <name pos:start="25:60" pos:end="25:82"><name pos:start="25:60" pos:end="25:66">outlink</name><operator pos:start="25:67" pos:end="25:68">-&gt;</operator><name pos:start="25:69" pos:end="25:71">src</name><operator pos:start="25:72" pos:end="25:73">-&gt;</operator><name pos:start="25:74" pos:end="25:79">inputs</name><index pos:start="25:80" pos:end="25:82">[<expr pos:start="25:81" pos:end="25:81"><literal type="number" pos:start="25:81" pos:end="25:81">1</literal></expr>]</index></name> <operator pos:start="25:84" pos:end="25:85">==</operator> <name pos:start="25:87" pos:end="25:92">inlink</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:50"><decl pos:start="27:5" pos:end="27:44"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:10">double</name></type> <name pos:start="27:12" pos:end="27:44"><name pos:start="27:12" pos:end="27:21">var_values</name><index pos:start="27:22" pos:end="27:44">[<expr pos:start="27:23" pos:end="27:43"><name pos:start="27:23" pos:end="27:29">VARS_NB</name> <operator pos:start="27:31" pos:end="27:31">+</operator> <name pos:start="27:33" pos:end="27:43">VARS_S2R_NB</name></expr>]</index></name></decl>, <decl pos:start="27:47" pos:end="27:49"><type ref="prev" pos:start="27:5" pos:end="27:10"/><name pos:start="27:47" pos:end="27:49">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:40"><decl pos:start="29:5" pos:end="29:39"><type pos:start="29:5" pos:end="29:30"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:28">AVPixFmtDescriptor</name> <modifier pos:start="29:30" pos:end="29:30">*</modifier></type><name pos:start="29:31" pos:end="29:39">main_desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:34"><decl pos:start="31:5" pos:end="31:33"><type pos:start="31:5" pos:end="31:24"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:22">AVFilterLink</name> <modifier pos:start="31:24" pos:end="31:24">*</modifier></type><name pos:start="31:25" pos:end="31:33">main_link</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:75"><decl pos:start="33:5" pos:end="33:74"><type pos:start="33:5" pos:end="33:23"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:14">char</name> <modifier pos:start="33:16" pos:end="33:16">*</modifier><specifier pos:start="33:17" pos:end="33:21">const</specifier> <modifier pos:start="33:23" pos:end="33:23">*</modifier></type><name pos:start="33:24" pos:end="33:28">names</name> <init pos:start="33:30" pos:end="33:74">= <expr pos:start="33:32" pos:end="33:74"><ternary pos:start="33:32" pos:end="33:74"><condition pos:start="33:32" pos:end="33:42"><expr pos:start="33:32" pos:end="33:40"><name pos:start="33:32" pos:end="33:40">scale2ref</name></expr> ?</condition><then pos:start="33:44" pos:end="33:62"> <expr pos:start="33:44" pos:end="33:62"><name pos:start="33:44" pos:end="33:62">var_names_scale2ref</name></expr> </then><else pos:start="33:64" pos:end="33:74">: <expr pos:start="33:66" pos:end="33:74"><name pos:start="33:66" pos:end="33:74">var_names</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:17">scale2ref</name></expr>)</condition> <block pos:start="37:20" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:59">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:17">main_link</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:27">outlink</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:32">src</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:40">inputs</name><index pos:start="39:41" pos:end="39:43">[<expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:17">main_desc</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:58"><name pos:start="41:21" pos:end="41:39">av_pix_fmt_desc_get</name><argument_list pos:start="41:40" pos:end="41:58">(<argument pos:start="41:41" pos:end="41:57"><expr pos:start="41:41" pos:end="41:57"><name pos:start="41:41" pos:end="41:57"><name pos:start="41:41" pos:end="41:49">main_link</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:57">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:14">var_values</name><index pos:start="47:15" pos:end="47:22">[<expr pos:start="47:16" pos:end="47:21"><name pos:start="47:16" pos:end="47:21">VAR_PI</name></expr>]</index></name>    <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:32">M_PI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:14">var_values</name><index pos:start="49:15" pos:end="49:23">[<expr pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:22">VAR_PHI</name></expr>]</index></name>   <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:33">M_PHI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:14">var_values</name><index pos:start="51:15" pos:end="51:21">[<expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">VAR_E</name></expr>]</index></name>     <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:31">M_E</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:14">var_values</name><index pos:start="53:15" pos:end="53:24">[<expr pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:23">VAR_IN_W</name></expr>]</index></name>  <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:46"><name pos:start="53:29" pos:end="53:38">var_values</name><index pos:start="53:39" pos:end="53:46">[<expr pos:start="53:40" pos:end="53:45"><name pos:start="53:40" pos:end="53:45">VAR_IW</name></expr>]</index></name> <operator pos:start="53:48" pos:end="53:48">=</operator> <name pos:start="53:50" pos:end="53:58"><name pos:start="53:50" pos:end="53:55">inlink</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:58">w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:59"><expr pos:start="55:5" pos:end="55:58"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:14">var_values</name><index pos:start="55:15" pos:end="55:24">[<expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:23">VAR_IN_H</name></expr>]</index></name>  <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:46"><name pos:start="55:29" pos:end="55:38">var_values</name><index pos:start="55:39" pos:end="55:46">[<expr pos:start="55:40" pos:end="55:45"><name pos:start="55:40" pos:end="55:45">VAR_IH</name></expr>]</index></name> <operator pos:start="55:48" pos:end="55:48">=</operator> <name pos:start="55:50" pos:end="55:58"><name pos:start="55:50" pos:end="55:55">inlink</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:58">h</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:53"><expr pos:start="57:5" pos:end="57:52"><name pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:14">var_values</name><index pos:start="57:15" pos:end="57:25">[<expr pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:24">VAR_OUT_W</name></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:46"><name pos:start="57:29" pos:end="57:38">var_values</name><index pos:start="57:39" pos:end="57:46">[<expr pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:45">VAR_OW</name></expr>]</index></name> <operator pos:start="57:48" pos:end="57:48">=</operator> <name pos:start="57:50" pos:end="57:52">NAN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:14">var_values</name><index pos:start="59:15" pos:end="59:25">[<expr pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:24">VAR_OUT_H</name></expr>]</index></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:46"><name pos:start="59:29" pos:end="59:38">var_values</name><index pos:start="59:39" pos:end="59:46">[<expr pos:start="59:40" pos:end="59:45"><name pos:start="59:40" pos:end="59:45">VAR_OH</name></expr>]</index></name> <operator pos:start="59:48" pos:end="59:48">=</operator> <name pos:start="59:50" pos:end="59:52">NAN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:14">var_values</name><index pos:start="61:15" pos:end="61:21">[<expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">VAR_A</name></expr>]</index></name>     <operator pos:start="61:27" pos:end="61:27">=</operator> <operator pos:start="61:29" pos:end="61:29">(</operator><name pos:start="61:30" pos:end="61:35">double</name><operator pos:start="61:36" pos:end="61:36">)</operator> <name pos:start="61:38" pos:end="61:46"><name pos:start="61:38" pos:end="61:43">inlink</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:46">w</name></name> <operator pos:start="61:48" pos:end="61:48">/</operator> <name pos:start="61:50" pos:end="61:58"><name pos:start="61:50" pos:end="61:55">inlink</name><operator pos:start="61:56" pos:end="61:57">-&gt;</operator><name pos:start="61:58" pos:end="61:58">h</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:87"><expr pos:start="63:5" pos:end="65:86"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:14">var_values</name><index pos:start="63:15" pos:end="63:23">[<expr pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:22">VAR_SAR</name></expr>]</index></name>   <operator pos:start="63:27" pos:end="63:27">=</operator> <ternary pos:start="63:29" pos:end="65:86"><condition pos:start="63:29" pos:end="63:61"><expr pos:start="63:29" pos:end="63:59"><name pos:start="63:29" pos:end="63:59"><name pos:start="63:29" pos:end="63:34">inlink</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:55">sample_aspect_ratio</name><operator pos:start="63:56" pos:end="63:56">.</operator><name pos:start="63:57" pos:end="63:59">num</name></name></expr> ?</condition><then pos:start="65:9" pos:end="65:82">

        <expr pos:start="65:9" pos:end="65:82"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:15">double</name><operator pos:start="65:16" pos:end="65:16">)</operator> <name pos:start="65:18" pos:end="65:48"><name pos:start="65:18" pos:end="65:23">inlink</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:44">sample_aspect_ratio</name><operator pos:start="65:45" pos:end="65:45">.</operator><name pos:start="65:46" pos:end="65:48">num</name></name> <operator pos:start="65:50" pos:end="65:50">/</operator> <name pos:start="65:52" pos:end="65:82"><name pos:start="65:52" pos:end="65:57">inlink</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:78">sample_aspect_ratio</name><operator pos:start="65:79" pos:end="65:79">.</operator><name pos:start="65:80" pos:end="65:82">den</name></name></expr> </then><else pos:start="65:84" pos:end="65:86">: <expr pos:start="65:86" pos:end="65:86"><literal type="number" pos:start="65:86" pos:end="65:86">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:68"><expr pos:start="67:5" pos:end="67:67"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:14">var_values</name><index pos:start="67:15" pos:end="67:23">[<expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:22">VAR_DAR</name></expr>]</index></name>   <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:45"><name pos:start="67:29" pos:end="67:38">var_values</name><index pos:start="67:39" pos:end="67:45">[<expr pos:start="67:40" pos:end="67:44"><name pos:start="67:40" pos:end="67:44">VAR_A</name></expr>]</index></name> <operator pos:start="67:47" pos:end="67:47">*</operator> <name pos:start="67:49" pos:end="67:67"><name pos:start="67:49" pos:end="67:58">var_values</name><index pos:start="67:59" pos:end="67:67">[<expr pos:start="67:60" pos:end="67:66"><name pos:start="67:60" pos:end="67:66">VAR_SAR</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:53"><expr pos:start="69:5" pos:end="69:52"><name pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:14">var_values</name><index pos:start="69:15" pos:end="69:24">[<expr pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:23">VAR_HSUB</name></expr>]</index></name>  <operator pos:start="69:27" pos:end="69:27">=</operator> <literal type="number" pos:start="69:29" pos:end="69:29">1</literal> <operator pos:start="69:31" pos:end="69:32">&lt;&lt;</operator> <name pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:37">desc</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:52">log2_chroma_w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:53"><expr pos:start="71:5" pos:end="71:52"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:14">var_values</name><index pos:start="71:15" pos:end="71:24">[<expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23">VAR_VSUB</name></expr>]</index></name>  <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:29">1</literal> <operator pos:start="71:31" pos:end="71:32">&lt;&lt;</operator> <name pos:start="71:34" pos:end="71:52"><name pos:start="71:34" pos:end="71:37">desc</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:52">log2_chroma_h</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:57"><expr pos:start="73:5" pos:end="73:56"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:14">var_values</name><index pos:start="73:15" pos:end="73:25">[<expr pos:start="73:16" pos:end="73:24"><name pos:start="73:16" pos:end="73:24">VAR_OHSUB</name></expr>]</index></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:29">1</literal> <operator pos:start="73:31" pos:end="73:32">&lt;&lt;</operator> <name pos:start="73:34" pos:end="73:56"><name pos:start="73:34" pos:end="73:41">out_desc</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:56">log2_chroma_w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:57"><expr pos:start="75:5" pos:end="75:56"><name pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:14">var_values</name><index pos:start="75:15" pos:end="75:25">[<expr pos:start="75:16" pos:end="75:24"><name pos:start="75:16" pos:end="75:24">VAR_OVSUB</name></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <literal type="number" pos:start="75:29" pos:end="75:29">1</literal> <operator pos:start="75:31" pos:end="75:32">&lt;&lt;</operator> <name pos:start="75:34" pos:end="75:56"><name pos:start="75:34" pos:end="75:41">out_desc</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:56">log2_chroma_h</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="99:5"><if pos:start="79:5" pos:end="99:5">if <condition pos:start="79:8" pos:end="79:18">(<expr pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:17">scale2ref</name></expr>)</condition> <block pos:start="79:20" pos:end="99:5">{<block_content pos:start="81:9" pos:end="97:80">

        <expr_stmt pos:start="81:9" pos:end="81:60"><expr pos:start="81:9" pos:end="81:59"><name pos:start="81:9" pos:end="81:44"><name pos:start="81:9" pos:end="81:18">var_values</name><index pos:start="81:19" pos:end="81:44">[<expr pos:start="81:20" pos:end="81:43"><name pos:start="81:20" pos:end="81:26">VARS_NB</name> <operator pos:start="81:28" pos:end="81:28">+</operator> <name pos:start="81:30" pos:end="81:43">VAR_S2R_MAIN_W</name></expr>]</index></name> <operator pos:start="81:46" pos:end="81:46">=</operator> <name pos:start="81:48" pos:end="81:59"><name pos:start="81:48" pos:end="81:56">main_link</name><operator pos:start="81:57" pos:end="81:58">-&gt;</operator><name pos:start="81:59" pos:end="81:59">w</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:60"><expr pos:start="83:9" pos:end="83:59"><name pos:start="83:9" pos:end="83:44"><name pos:start="83:9" pos:end="83:18">var_values</name><index pos:start="83:19" pos:end="83:44">[<expr pos:start="83:20" pos:end="83:43"><name pos:start="83:20" pos:end="83:26">VARS_NB</name> <operator pos:start="83:28" pos:end="83:28">+</operator> <name pos:start="83:30" pos:end="83:43">VAR_S2R_MAIN_H</name></expr>]</index></name> <operator pos:start="83:46" pos:end="83:46">=</operator> <name pos:start="83:48" pos:end="83:59"><name pos:start="83:48" pos:end="83:56">main_link</name><operator pos:start="83:57" pos:end="83:58">-&gt;</operator><name pos:start="83:59" pos:end="83:59">h</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:84"><expr pos:start="85:9" pos:end="85:83"><name pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:18">var_values</name><index pos:start="85:19" pos:end="85:44">[<expr pos:start="85:20" pos:end="85:43"><name pos:start="85:20" pos:end="85:26">VARS_NB</name> <operator pos:start="85:28" pos:end="85:28">+</operator> <name pos:start="85:30" pos:end="85:43">VAR_S2R_MAIN_A</name></expr>]</index></name> <operator pos:start="85:46" pos:end="85:46">=</operator> <operator pos:start="85:48" pos:end="85:48">(</operator><name pos:start="85:49" pos:end="85:54">double</name><operator pos:start="85:55" pos:end="85:55">)</operator> <name pos:start="85:57" pos:end="85:68"><name pos:start="85:57" pos:end="85:65">main_link</name><operator pos:start="85:66" pos:end="85:67">-&gt;</operator><name pos:start="85:68" pos:end="85:68">w</name></name> <operator pos:start="85:70" pos:end="85:70">/</operator> <name pos:start="85:72" pos:end="85:83"><name pos:start="85:72" pos:end="85:80">main_link</name><operator pos:start="85:81" pos:end="85:82">-&gt;</operator><name pos:start="85:83" pos:end="85:83">h</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="89:97"><expr pos:start="87:9" pos:end="89:96"><name pos:start="87:9" pos:end="87:46"><name pos:start="87:9" pos:end="87:18">var_values</name><index pos:start="87:19" pos:end="87:46">[<expr pos:start="87:20" pos:end="87:45"><name pos:start="87:20" pos:end="87:26">VARS_NB</name> <operator pos:start="87:28" pos:end="87:28">+</operator> <name pos:start="87:30" pos:end="87:45">VAR_S2R_MAIN_SAR</name></expr>]</index></name> <operator pos:start="87:48" pos:end="87:48">=</operator> <ternary pos:start="87:50" pos:end="89:96"><condition pos:start="87:50" pos:end="87:85"><expr pos:start="87:50" pos:end="87:83"><name pos:start="87:50" pos:end="87:83"><name pos:start="87:50" pos:end="87:58">main_link</name><operator pos:start="87:59" pos:end="87:60">-&gt;</operator><name pos:start="87:61" pos:end="87:79">sample_aspect_ratio</name><operator pos:start="87:80" pos:end="87:80">.</operator><name pos:start="87:81" pos:end="87:83">num</name></name></expr> ?</condition><then pos:start="89:13" pos:end="89:92">

            <expr pos:start="89:13" pos:end="89:92"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:19">double</name><operator pos:start="89:20" pos:end="89:20">)</operator> <name pos:start="89:22" pos:end="89:55"><name pos:start="89:22" pos:end="89:30">main_link</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:51">sample_aspect_ratio</name><operator pos:start="89:52" pos:end="89:52">.</operator><name pos:start="89:53" pos:end="89:55">num</name></name> <operator pos:start="89:57" pos:end="89:57">/</operator> <name pos:start="89:59" pos:end="89:92"><name pos:start="89:59" pos:end="89:67">main_link</name><operator pos:start="89:68" pos:end="89:69">-&gt;</operator><name pos:start="89:70" pos:end="89:88">sample_aspect_ratio</name><operator pos:start="89:89" pos:end="89:89">.</operator><name pos:start="89:90" pos:end="89:92">den</name></name></expr> </then><else pos:start="89:94" pos:end="89:96">: <expr pos:start="89:96" pos:end="89:96"><literal type="number" pos:start="89:96" pos:end="89:96">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="93:90"><expr pos:start="91:9" pos:end="93:89"><name pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:18">var_values</name><index pos:start="91:19" pos:end="91:46">[<expr pos:start="91:20" pos:end="91:45"><name pos:start="91:20" pos:end="91:26">VARS_NB</name> <operator pos:start="91:28" pos:end="91:28">+</operator> <name pos:start="91:30" pos:end="91:45">VAR_S2R_MAIN_DAR</name></expr>]</index></name> <operator pos:start="91:48" pos:end="91:48">=</operator> <name pos:start="91:50" pos:end="91:83"><name pos:start="91:50" pos:end="91:59">var_values</name><index pos:start="91:60" pos:end="91:83">[<expr pos:start="91:61" pos:end="91:82"><name pos:start="91:61" pos:end="91:67">VARS_NB</name> <operator pos:start="91:69" pos:end="91:69">+</operator> <name pos:start="91:71" pos:end="91:82">VAR_S2R_MDAR</name></expr>]</index></name> <operator pos:start="91:85" pos:end="91:85">=</operator>

            <name pos:start="93:13" pos:end="93:48"><name pos:start="93:13" pos:end="93:22">var_values</name><index pos:start="93:23" pos:end="93:48">[<expr pos:start="93:24" pos:end="93:47"><name pos:start="93:24" pos:end="93:30">VARS_NB</name> <operator pos:start="93:32" pos:end="93:32">+</operator> <name pos:start="93:34" pos:end="93:47">VAR_S2R_MAIN_A</name></expr>]</index></name> <operator pos:start="93:50" pos:end="93:50">*</operator> <name pos:start="93:52" pos:end="93:89"><name pos:start="93:52" pos:end="93:61">var_values</name><index pos:start="93:62" pos:end="93:89">[<expr pos:start="93:63" pos:end="93:88"><name pos:start="93:63" pos:end="93:69">VARS_NB</name> <operator pos:start="93:71" pos:end="93:71">+</operator> <name pos:start="93:73" pos:end="93:88">VAR_S2R_MAIN_SAR</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:80"><expr pos:start="95:9" pos:end="95:79"><name pos:start="95:9" pos:end="95:47"><name pos:start="95:9" pos:end="95:18">var_values</name><index pos:start="95:19" pos:end="95:47">[<expr pos:start="95:20" pos:end="95:46"><name pos:start="95:20" pos:end="95:26">VARS_NB</name> <operator pos:start="95:28" pos:end="95:28">+</operator> <name pos:start="95:30" pos:end="95:46">VAR_S2R_MAIN_HSUB</name></expr>]</index></name> <operator pos:start="95:49" pos:end="95:49">=</operator> <literal type="number" pos:start="95:51" pos:end="95:51">1</literal> <operator pos:start="95:53" pos:end="95:54">&lt;&lt;</operator> <name pos:start="95:56" pos:end="95:79"><name pos:start="95:56" pos:end="95:64">main_desc</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:79">log2_chroma_w</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:80"><expr pos:start="97:9" pos:end="97:79"><name pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:18">var_values</name><index pos:start="97:19" pos:end="97:47">[<expr pos:start="97:20" pos:end="97:46"><name pos:start="97:20" pos:end="97:26">VARS_NB</name> <operator pos:start="97:28" pos:end="97:28">+</operator> <name pos:start="97:30" pos:end="97:46">VAR_S2R_MAIN_VSUB</name></expr>]</index></name> <operator pos:start="97:49" pos:end="97:49">=</operator> <literal type="number" pos:start="97:51" pos:end="97:51">1</literal> <operator pos:start="97:53" pos:end="97:54">&lt;&lt;</operator> <name pos:start="97:56" pos:end="97:79"><name pos:start="97:56" pos:end="97:64">main_desc</name><operator pos:start="97:65" pos:end="97:66">-&gt;</operator><name pos:start="97:67" pos:end="97:79">log2_chroma_h</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:35">/* evaluate width and height */</comment>

    <expr_stmt pos:start="105:5" pos:end="109:69"><expr pos:start="105:5" pos:end="109:68"><call pos:start="105:5" pos:end="109:68"><name pos:start="105:5" pos:end="105:26">av_expr_parse_and_eval</name><argument_list pos:start="105:27" pos:end="109:68">(<argument pos:start="105:28" pos:end="105:31"><expr pos:start="105:28" pos:end="105:31"><operator pos:start="105:28" pos:end="105:28">&amp;</operator><name pos:start="105:29" pos:end="105:31">res</name></expr></argument>, <argument pos:start="105:34" pos:end="105:48"><expr pos:start="105:34" pos:end="105:48"><operator pos:start="105:34" pos:end="105:34">(</operator><name pos:start="105:35" pos:end="105:38">expr</name> <operator pos:start="105:40" pos:end="105:40">=</operator> <name pos:start="105:42" pos:end="105:47">w_expr</name><operator pos:start="105:48" pos:end="105:48">)</operator></expr></argument>,

                           <argument pos:start="107:28" pos:end="107:32"><expr pos:start="107:28" pos:end="107:32"><name pos:start="107:28" pos:end="107:32">names</name></expr></argument>, <argument pos:start="107:35" pos:end="107:44"><expr pos:start="107:35" pos:end="107:44"><name pos:start="107:35" pos:end="107:44">var_values</name></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:31">NULL</name></expr></argument>, <argument pos:start="109:34" pos:end="109:37"><expr pos:start="109:34" pos:end="109:37"><name pos:start="109:34" pos:end="109:37">NULL</name></expr></argument>, <argument pos:start="109:40" pos:end="109:43"><expr pos:start="109:40" pos:end="109:43"><name pos:start="109:40" pos:end="109:43">NULL</name></expr></argument>, <argument pos:start="109:46" pos:end="109:49"><expr pos:start="109:46" pos:end="109:49"><name pos:start="109:46" pos:end="109:49">NULL</name></expr></argument>, <argument pos:start="109:52" pos:end="109:55"><expr pos:start="109:52" pos:end="109:55"><name pos:start="109:52" pos:end="109:55">NULL</name></expr></argument>, <argument pos:start="109:58" pos:end="109:58"><expr pos:start="109:58" pos:end="109:58"><literal type="number" pos:start="109:58" pos:end="109:58">0</literal></expr></argument>, <argument pos:start="109:61" pos:end="109:67"><expr pos:start="109:61" pos:end="109:67"><name pos:start="109:61" pos:end="109:67">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:62"><expr pos:start="111:5" pos:end="111:61"><name pos:start="111:5" pos:end="111:10">eval_w</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:34"><name pos:start="111:14" pos:end="111:23">var_values</name><index pos:start="111:24" pos:end="111:34">[<expr pos:start="111:25" pos:end="111:33"><name pos:start="111:25" pos:end="111:33">VAR_OUT_W</name></expr>]</index></name> <operator pos:start="111:36" pos:end="111:36">=</operator> <name pos:start="111:38" pos:end="111:55"><name pos:start="111:38" pos:end="111:47">var_values</name><index pos:start="111:48" pos:end="111:55">[<expr pos:start="111:49" pos:end="111:54"><name pos:start="111:49" pos:end="111:54">VAR_OW</name></expr>]</index></name> <operator pos:start="111:57" pos:end="111:57">=</operator> <name pos:start="111:59" pos:end="111:61">res</name></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="121:18"><if pos:start="115:5" pos:end="121:18">if <condition pos:start="115:8" pos:end="119:85">(<expr pos:start="115:9" pos:end="119:84"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:12">ret</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="119:79"><name pos:start="115:16" pos:end="115:37">av_expr_parse_and_eval</name><argument_list pos:start="115:38" pos:end="119:79">(<argument pos:start="115:39" pos:end="115:42"><expr pos:start="115:39" pos:end="115:42"><operator pos:start="115:39" pos:end="115:39">&amp;</operator><name pos:start="115:40" pos:end="115:42">res</name></expr></argument>, <argument pos:start="115:45" pos:end="115:59"><expr pos:start="115:45" pos:end="115:59"><operator pos:start="115:45" pos:end="115:45">(</operator><name pos:start="115:46" pos:end="115:49">expr</name> <operator pos:start="115:51" pos:end="115:51">=</operator> <name pos:start="115:53" pos:end="115:58">h_expr</name><operator pos:start="115:59" pos:end="115:59">)</operator></expr></argument>,

                                      <argument pos:start="117:39" pos:end="117:43"><expr pos:start="117:39" pos:end="117:43"><name pos:start="117:39" pos:end="117:43">names</name></expr></argument>, <argument pos:start="117:46" pos:end="117:55"><expr pos:start="117:46" pos:end="117:55"><name pos:start="117:46" pos:end="117:55">var_values</name></expr></argument>,

                                      <argument pos:start="119:39" pos:end="119:42"><expr pos:start="119:39" pos:end="119:42"><name pos:start="119:39" pos:end="119:42">NULL</name></expr></argument>, <argument pos:start="119:45" pos:end="119:48"><expr pos:start="119:45" pos:end="119:48"><name pos:start="119:45" pos:end="119:48">NULL</name></expr></argument>, <argument pos:start="119:51" pos:end="119:54"><expr pos:start="119:51" pos:end="119:54"><name pos:start="119:51" pos:end="119:54">NULL</name></expr></argument>, <argument pos:start="119:57" pos:end="119:60"><expr pos:start="119:57" pos:end="119:60"><name pos:start="119:57" pos:end="119:60">NULL</name></expr></argument>, <argument pos:start="119:63" pos:end="119:66"><expr pos:start="119:63" pos:end="119:66"><name pos:start="119:63" pos:end="119:66">NULL</name></expr></argument>, <argument pos:start="119:69" pos:end="119:69"><expr pos:start="119:69" pos:end="119:69"><literal type="number" pos:start="119:69" pos:end="119:69">0</literal></expr></argument>, <argument pos:start="119:72" pos:end="119:78"><expr pos:start="119:72" pos:end="119:78"><name pos:start="119:72" pos:end="119:78">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="119:80" pos:end="119:80">)</operator> <operator pos:start="119:82" pos:end="119:82">&lt;</operator> <literal type="number" pos:start="119:84" pos:end="119:84">0</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:62"><expr pos:start="123:5" pos:end="123:61"><name pos:start="123:5" pos:end="123:10">eval_h</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <name pos:start="123:14" pos:end="123:34"><name pos:start="123:14" pos:end="123:23">var_values</name><index pos:start="123:24" pos:end="123:34">[<expr pos:start="123:25" pos:end="123:33"><name pos:start="123:25" pos:end="123:33">VAR_OUT_H</name></expr>]</index></name> <operator pos:start="123:36" pos:end="123:36">=</operator> <name pos:start="123:38" pos:end="123:55"><name pos:start="123:38" pos:end="123:47">var_values</name><index pos:start="123:48" pos:end="123:55">[<expr pos:start="123:49" pos:end="123:54"><name pos:start="123:49" pos:end="123:54">VAR_OH</name></expr>]</index></name> <operator pos:start="123:57" pos:end="123:57">=</operator> <name pos:start="123:59" pos:end="123:61">res</name></expr>;</expr_stmt>

    <comment type="block" pos:start="125:5" pos:end="125:73">/* evaluate again the width, as it may depend on the output height */</comment>

    <if_stmt pos:start="127:5" pos:end="133:18"><if pos:start="127:5" pos:end="133:18">if <condition pos:start="127:8" pos:end="131:85">(<expr pos:start="127:9" pos:end="131:84"><operator pos:start="127:9" pos:end="127:9">(</operator><name pos:start="127:10" pos:end="127:12">ret</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <call pos:start="127:16" pos:end="131:79"><name pos:start="127:16" pos:end="127:37">av_expr_parse_and_eval</name><argument_list pos:start="127:38" pos:end="131:79">(<argument pos:start="127:39" pos:end="127:42"><expr pos:start="127:39" pos:end="127:42"><operator pos:start="127:39" pos:end="127:39">&amp;</operator><name pos:start="127:40" pos:end="127:42">res</name></expr></argument>, <argument pos:start="127:45" pos:end="127:59"><expr pos:start="127:45" pos:end="127:59"><operator pos:start="127:45" pos:end="127:45">(</operator><name pos:start="127:46" pos:end="127:49">expr</name> <operator pos:start="127:51" pos:end="127:51">=</operator> <name pos:start="127:53" pos:end="127:58">w_expr</name><operator pos:start="127:59" pos:end="127:59">)</operator></expr></argument>,

                                      <argument pos:start="129:39" pos:end="129:43"><expr pos:start="129:39" pos:end="129:43"><name pos:start="129:39" pos:end="129:43">names</name></expr></argument>, <argument pos:start="129:46" pos:end="129:55"><expr pos:start="129:46" pos:end="129:55"><name pos:start="129:46" pos:end="129:55">var_values</name></expr></argument>,

                                      <argument pos:start="131:39" pos:end="131:42"><expr pos:start="131:39" pos:end="131:42"><name pos:start="131:39" pos:end="131:42">NULL</name></expr></argument>, <argument pos:start="131:45" pos:end="131:48"><expr pos:start="131:45" pos:end="131:48"><name pos:start="131:45" pos:end="131:48">NULL</name></expr></argument>, <argument pos:start="131:51" pos:end="131:54"><expr pos:start="131:51" pos:end="131:54"><name pos:start="131:51" pos:end="131:54">NULL</name></expr></argument>, <argument pos:start="131:57" pos:end="131:60"><expr pos:start="131:57" pos:end="131:60"><name pos:start="131:57" pos:end="131:60">NULL</name></expr></argument>, <argument pos:start="131:63" pos:end="131:66"><expr pos:start="131:63" pos:end="131:66"><name pos:start="131:63" pos:end="131:66">NULL</name></expr></argument>, <argument pos:start="131:69" pos:end="131:69"><expr pos:start="131:69" pos:end="131:69"><literal type="number" pos:start="131:69" pos:end="131:69">0</literal></expr></argument>, <argument pos:start="131:72" pos:end="131:78"><expr pos:start="131:72" pos:end="131:78"><name pos:start="131:72" pos:end="131:78">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="131:80" pos:end="131:80">)</operator> <operator pos:start="131:82" pos:end="131:82">&lt;</operator> <literal type="number" pos:start="131:84" pos:end="131:84">0</literal></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:18"><block_content pos:start="133:9" pos:end="133:18">

        <goto pos:start="133:9" pos:end="133:18">goto <name pos:start="133:14" pos:end="133:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:17"><expr pos:start="135:5" pos:end="135:16"><name pos:start="135:5" pos:end="135:10">eval_w</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <name pos:start="135:14" pos:end="135:16">res</name></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:15"><expr pos:start="139:5" pos:end="139:14"><name pos:start="139:5" pos:end="139:5">w</name> <operator pos:start="139:7" pos:end="139:7">=</operator> <name pos:start="139:9" pos:end="139:14">eval_w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:15"><expr pos:start="141:5" pos:end="141:14"><name pos:start="141:5" pos:end="141:5">h</name> <operator pos:start="141:7" pos:end="141:7">=</operator> <name pos:start="141:9" pos:end="141:14">eval_h</name></expr>;</expr_stmt>



    <comment type="block" pos:start="145:5" pos:end="147:55">/* Check if it is requested that the result has to be divisible by a some

     * factor (w or h = -n with n being the factor). */</comment>

    <expr_stmt pos:start="149:5" pos:end="149:17"><expr pos:start="149:5" pos:end="149:16"><name pos:start="149:5" pos:end="149:12">factor_w</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <literal type="number" pos:start="149:16" pos:end="149:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:17"><expr pos:start="151:5" pos:end="151:16"><name pos:start="151:5" pos:end="151:12">factor_h</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <literal type="number" pos:start="151:16" pos:end="151:16">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:15">(<expr pos:start="153:9" pos:end="153:14"><name pos:start="153:9" pos:end="153:9">w</name> <operator pos:start="153:11" pos:end="153:11">&lt;</operator> <operator pos:start="153:13" pos:end="153:13">-</operator><literal type="number" pos:start="153:14" pos:end="153:14">1</literal></expr>)</condition> <block pos:start="153:17" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:22">

        <expr_stmt pos:start="155:9" pos:end="155:22"><expr pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:16">factor_w</name> <operator pos:start="155:18" pos:end="155:18">=</operator> <operator pos:start="155:20" pos:end="155:20">-</operator><name pos:start="155:21" pos:end="155:21">w</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="163:5"><if pos:start="159:5" pos:end="163:5">if <condition pos:start="159:8" pos:end="159:15">(<expr pos:start="159:9" pos:end="159:14"><name pos:start="159:9" pos:end="159:9">h</name> <operator pos:start="159:11" pos:end="159:11">&lt;</operator> <operator pos:start="159:13" pos:end="159:13">-</operator><literal type="number" pos:start="159:14" pos:end="159:14">1</literal></expr>)</condition> <block pos:start="159:17" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:22">

        <expr_stmt pos:start="161:9" pos:end="161:22"><expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:16">factor_h</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <operator pos:start="161:20" pos:end="161:20">-</operator><name pos:start="161:21" pos:end="161:21">h</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="169:28"><if pos:start="167:5" pos:end="169:28">if <condition pos:start="167:8" pos:end="167:23">(<expr pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:9">w</name> <operator pos:start="167:11" pos:end="167:11">&lt;</operator> <literal type="number" pos:start="167:13" pos:end="167:13">0</literal> <operator pos:start="167:15" pos:end="167:16">&amp;&amp;</operator> <name pos:start="167:18" pos:end="167:18">h</name> <operator pos:start="167:20" pos:end="167:20">&lt;</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:28"><block_content pos:start="169:9" pos:end="169:28">

        <expr_stmt pos:start="169:9" pos:end="169:28"><expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:14">eval_w</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <name pos:start="169:18" pos:end="169:23">eval_h</name> <operator pos:start="169:25" pos:end="169:25">=</operator> <literal type="number" pos:start="169:27" pos:end="169:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="175:22"><if pos:start="173:5" pos:end="175:22">if <condition pos:start="173:8" pos:end="173:22">(<expr pos:start="173:9" pos:end="173:21"><operator pos:start="173:9" pos:end="173:9">!</operator><operator pos:start="173:10" pos:end="173:10">(</operator><name pos:start="173:11" pos:end="173:11">w</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <name pos:start="173:15" pos:end="173:20">eval_w</name><operator pos:start="173:21" pos:end="173:21">)</operator></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:22"><block_content pos:start="175:9" pos:end="175:22">

        <expr_stmt pos:start="175:9" pos:end="175:22"><expr pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:9">w</name> <operator pos:start="175:11" pos:end="175:11">=</operator> <name pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:18">inlink</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:21">w</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="179:22"><if pos:start="177:5" pos:end="179:22">if <condition pos:start="177:8" pos:end="177:22">(<expr pos:start="177:9" pos:end="177:21"><operator pos:start="177:9" pos:end="177:9">!</operator><operator pos:start="177:10" pos:end="177:10">(</operator><name pos:start="177:11" pos:end="177:11">h</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <name pos:start="177:15" pos:end="177:20">eval_h</name><operator pos:start="177:21" pos:end="177:21">)</operator></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:22"><block_content pos:start="179:9" pos:end="179:22">

        <expr_stmt pos:start="179:9" pos:end="179:22"><expr pos:start="179:9" pos:end="179:21"><name pos:start="179:9" pos:end="179:9">h</name> <operator pos:start="179:11" pos:end="179:11">=</operator> <name pos:start="179:13" pos:end="179:21"><name pos:start="179:13" pos:end="179:18">inlink</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:21">h</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="183:5" pos:end="187:21">/* Make sure that the result is divisible by the factor we determined

     * earlier. If no factor was set, it is nothing will happen as the default

     * factor is 1 */</comment>

    <if_stmt pos:start="189:5" pos:end="191:70"><if pos:start="189:5" pos:end="191:70">if <condition pos:start="189:8" pos:end="189:14">(<expr pos:start="189:9" pos:end="189:13"><name pos:start="189:9" pos:end="189:9">w</name> <operator pos:start="189:11" pos:end="189:11">&lt;</operator> <literal type="number" pos:start="189:13" pos:end="189:13">0</literal></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:70"><block_content pos:start="191:9" pos:end="191:70">

        <expr_stmt pos:start="191:9" pos:end="191:70"><expr pos:start="191:9" pos:end="191:69"><name pos:start="191:9" pos:end="191:9">w</name> <operator pos:start="191:11" pos:end="191:11">=</operator> <call pos:start="191:13" pos:end="191:58"><name pos:start="191:13" pos:end="191:22">av_rescale</name><argument_list pos:start="191:23" pos:end="191:58">(<argument pos:start="191:24" pos:end="191:24"><expr pos:start="191:24" pos:end="191:24"><name pos:start="191:24" pos:end="191:24">h</name></expr></argument>, <argument pos:start="191:27" pos:end="191:35"><expr pos:start="191:27" pos:end="191:35"><name pos:start="191:27" pos:end="191:35"><name pos:start="191:27" pos:end="191:32">inlink</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:35">w</name></name></expr></argument>, <argument pos:start="191:38" pos:end="191:57"><expr pos:start="191:38" pos:end="191:57"><name pos:start="191:38" pos:end="191:46"><name pos:start="191:38" pos:end="191:43">inlink</name><operator pos:start="191:44" pos:end="191:45">-&gt;</operator><name pos:start="191:46" pos:end="191:46">h</name></name> <operator pos:start="191:48" pos:end="191:48">*</operator> <name pos:start="191:50" pos:end="191:57">factor_w</name></expr></argument>)</argument_list></call> <operator pos:start="191:60" pos:end="191:60">*</operator> <name pos:start="191:62" pos:end="191:69">factor_w</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="195:70"><if pos:start="193:5" pos:end="195:70">if <condition pos:start="193:8" pos:end="193:14">(<expr pos:start="193:9" pos:end="193:13"><name pos:start="193:9" pos:end="193:9">h</name> <operator pos:start="193:11" pos:end="193:11">&lt;</operator> <literal type="number" pos:start="193:13" pos:end="193:13">0</literal></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:70"><block_content pos:start="195:9" pos:end="195:70">

        <expr_stmt pos:start="195:9" pos:end="195:70"><expr pos:start="195:9" pos:end="195:69"><name pos:start="195:9" pos:end="195:9">h</name> <operator pos:start="195:11" pos:end="195:11">=</operator> <call pos:start="195:13" pos:end="195:58"><name pos:start="195:13" pos:end="195:22">av_rescale</name><argument_list pos:start="195:23" pos:end="195:58">(<argument pos:start="195:24" pos:end="195:24"><expr pos:start="195:24" pos:end="195:24"><name pos:start="195:24" pos:end="195:24">w</name></expr></argument>, <argument pos:start="195:27" pos:end="195:35"><expr pos:start="195:27" pos:end="195:35"><name pos:start="195:27" pos:end="195:35"><name pos:start="195:27" pos:end="195:32">inlink</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:35">h</name></name></expr></argument>, <argument pos:start="195:38" pos:end="195:57"><expr pos:start="195:38" pos:end="195:57"><name pos:start="195:38" pos:end="195:46"><name pos:start="195:38" pos:end="195:43">inlink</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:46">w</name></name> <operator pos:start="195:48" pos:end="195:48">*</operator> <name pos:start="195:50" pos:end="195:57">factor_h</name></expr></argument>)</argument_list></call> <operator pos:start="195:60" pos:end="195:60">*</operator> <name pos:start="195:62" pos:end="195:69">factor_h</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:15"><expr pos:start="199:5" pos:end="199:14"><operator pos:start="199:5" pos:end="199:5">*</operator><name pos:start="199:6" pos:end="199:10">ret_w</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <name pos:start="199:14" pos:end="199:14">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:15"><expr pos:start="201:5" pos:end="201:14"><operator pos:start="201:5" pos:end="201:5">*</operator><name pos:start="201:6" pos:end="201:10">ret_h</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <name pos:start="201:14" pos:end="201:14">h</name></expr>;</expr_stmt>



    <return pos:start="205:5" pos:end="205:13">return <expr pos:start="205:12" pos:end="205:12"><literal type="number" pos:start="205:12" pos:end="205:12">0</literal></expr>;</return>



<label pos:start="209:1" pos:end="209:5"><name pos:start="209:1" pos:end="209:4">fail</name>:</label>

    <expr_stmt pos:start="211:5" pos:end="217:33"><expr pos:start="211:5" pos:end="217:32"><call pos:start="211:5" pos:end="217:32"><name pos:start="211:5" pos:end="211:10">av_log</name><argument_list pos:start="211:11" pos:end="217:32">(<argument pos:start="211:12" pos:end="211:18"><expr pos:start="211:12" pos:end="211:18"><name pos:start="211:12" pos:end="211:18">log_ctx</name></expr></argument>, <argument pos:start="211:21" pos:end="211:32"><expr pos:start="211:21" pos:end="211:32"><name pos:start="211:21" pos:end="211:32">AV_LOG_ERROR</name></expr></argument>,

           <argument pos:start="213:12" pos:end="215:89"><expr pos:start="213:12" pos:end="215:89"><literal type="string" pos:start="213:12" pos:end="213:57">"Error when evaluating the expression '%s'.\n"</literal>

           <literal type="string" pos:start="215:12" pos:end="215:89">"Maybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n"</literal></expr></argument>,

           <argument pos:start="217:12" pos:end="217:15"><expr pos:start="217:12" pos:end="217:15"><name pos:start="217:12" pos:end="217:15">expr</name></expr></argument>, <argument pos:start="217:18" pos:end="217:23"><expr pos:start="217:18" pos:end="217:23"><name pos:start="217:18" pos:end="217:23">w_expr</name></expr></argument>, <argument pos:start="217:26" pos:end="217:31"><expr pos:start="217:26" pos:end="217:31"><name pos:start="217:26" pos:end="217:31">h_expr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="219:5" pos:end="219:15">return <expr pos:start="219:12" pos:end="219:14"><name pos:start="219:12" pos:end="219:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
