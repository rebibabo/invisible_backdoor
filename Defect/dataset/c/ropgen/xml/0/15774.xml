<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15774.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:31">ff_vc1dsp_init_x86</name><parameter_list pos:start="1:32" pos:end="1:51">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:45">VC1DSPContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dsp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="96:0">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:32"><if pos:start="9:5" pos:end="11:32">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:18">INLINE_MMX</name><argument_list pos:start="9:19" pos:end="9:29">(<argument pos:start="9:20" pos:end="9:28"><expr pos:start="9:20" pos:end="9:28"><name pos:start="9:20" pos:end="9:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:32"><block_content pos:start="11:9" pos:end="11:32">

        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><call pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:26">ff_vc1dsp_init_mmx</name><argument_list pos:start="11:27" pos:end="11:31">(<argument pos:start="11:28" pos:end="11:30"><expr pos:start="11:28" pos:end="11:30"><name pos:start="11:28" pos:end="11:30">dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="38:0"><if pos:start="15:5" pos:end="38:0">if <condition pos:start="15:8" pos:end="15:33">(<expr pos:start="15:9" pos:end="15:32"><call pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:21">INLINE_MMXEXT</name><argument_list pos:start="15:22" pos:end="15:32">(<argument pos:start="15:23" pos:end="15:31"><expr pos:start="15:23" pos:end="15:31"><name pos:start="15:23" pos:end="15:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="38:0"><block_content pos:start="17:9" pos:end="38:0">

        <expr_stmt pos:start="17:9" pos:end="38:0"><expr pos:start="17:9" pos:end="17:34"><call pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:29">ff_vc1dsp_init_mmxext</name><argument_list pos:start="17:30" pos:end="17:34">(<argument pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:define pos:start="21:1" pos:end="33:62">#<cpp:directive pos:start="21:2" pos:end="21:7">define</cpp:directive> <cpp:macro pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:17">ASSIGN_LF</name><parameter_list pos:start="21:18" pos:end="21:22">(<parameter pos:start="21:19" pos:end="21:21"><type pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:21">EXT</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="23:9" pos:end="33:62">dsp-&gt;vc1_v_loop_filter4  = ff_vc1_v_loop_filter4_ ## EXT; \

        dsp-&gt;vc1_h_loop_filter4  = ff_vc1_h_loop_filter4_ ## EXT; \

        dsp-&gt;vc1_v_loop_filter8  = ff_vc1_v_loop_filter8_ ## EXT; \

        dsp-&gt;vc1_h_loop_filter8  = ff_vc1_h_loop_filter8_ ## EXT; \

        dsp-&gt;vc1_v_loop_filter16 = vc1_v_loop_filter16_ ## EXT; \

        dsp-&gt;vc1_h_loop_filter16 = vc1_h_loop_filter16_ ## EXT</cpp:value></cpp:define>



<cpp:if pos:start="37:1" pos:end="37:13">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:13">HAVE_YASM</name></expr></cpp:if>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:17">cpu_flags</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <name pos:start="39:21" pos:end="39:35">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="39:38" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:83">

        <expr_stmt pos:start="41:9" pos:end="41:83"><expr pos:start="41:9" pos:end="41:82"><name pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:11">dsp</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:45">put_no_rnd_vc1_chroma_pixels_tab</name><index pos:start="41:46" pos:end="41:48">[<expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr>]</index></name> <operator pos:start="41:50" pos:end="41:50">=</operator> <name pos:start="41:52" pos:end="41:82">ff_put_vc1_chroma_mc8_nornd_mmx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="61:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:39">(<expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:17">cpu_flags</name> <operator pos:start="47:19" pos:end="47:19">&amp;</operator> <name pos:start="47:21" pos:end="47:38">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="47:41" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:77">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><call pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:17">ASSIGN_LF</name><argument_list pos:start="49:18" pos:end="49:25">(<argument pos:start="49:19" pos:end="49:24"><expr pos:start="49:19" pos:end="49:24"><name pos:start="49:19" pos:end="49:24">mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:86"><expr pos:start="51:9" pos:end="51:85"><name pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:11">dsp</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:45">avg_no_rnd_vc1_chroma_pixels_tab</name><index pos:start="51:46" pos:end="51:48">[<expr pos:start="51:47" pos:end="51:47"><literal type="number" pos:start="51:47" pos:end="51:47">0</literal></expr>]</index></name> <operator pos:start="51:50" pos:end="51:50">=</operator> <name pos:start="51:52" pos:end="51:85">ff_avg_vc1_chroma_mc8_nornd_mmxext</name></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:77"><expr pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:11">dsp</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:37">avg_vc1_mspel_pixels_tab</name><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><literal type="number" pos:start="55:39" pos:end="55:39">0</literal></expr>]</index></name>         <operator pos:start="55:50" pos:end="55:50">=</operator> <name pos:start="55:52" pos:end="55:76">avg_vc1_mspel_mc00_mmxext</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="61:5">else if <condition pos:start="57:15" pos:end="57:45">(<expr pos:start="57:16" pos:end="57:44"><name pos:start="57:16" pos:end="57:24">cpu_flags</name> <operator pos:start="57:26" pos:end="57:26">&amp;</operator> <name pos:start="57:28" pos:end="57:44">AV_CPU_FLAG_3DNOW</name></expr>)</condition> <block pos:start="57:47" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:85">

        <expr_stmt pos:start="59:9" pos:end="59:85"><expr pos:start="59:9" pos:end="59:84"><name pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:11">dsp</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:45">avg_no_rnd_vc1_chroma_pixels_tab</name><index pos:start="59:46" pos:end="59:48">[<expr pos:start="59:47" pos:end="59:47"><literal type="number" pos:start="59:47" pos:end="59:47">0</literal></expr>]</index></name> <operator pos:start="59:50" pos:end="59:50">=</operator> <name pos:start="59:52" pos:end="59:84">ff_avg_vc1_chroma_mc8_nornd_3dnow</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:37">(<expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:17">cpu_flags</name> <operator pos:start="65:19" pos:end="65:19">&amp;</operator> <name pos:start="65:21" pos:end="65:36">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="65:39" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:60">

        <expr_stmt pos:start="67:9" pos:end="67:62"><expr pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:11">dsp</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:31">vc1_v_loop_filter8</name></name>  <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:61">ff_vc1_v_loop_filter8_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:62"><expr pos:start="69:9" pos:end="69:61"><name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:11">dsp</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:31">vc1_h_loop_filter8</name></name>  <operator pos:start="69:34" pos:end="69:34">=</operator> <name pos:start="69:36" pos:end="69:61">ff_vc1_h_loop_filter8_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:60"><expr pos:start="71:9" pos:end="71:59"><name pos:start="71:9" pos:end="71:32"><name pos:start="71:9" pos:end="71:11">dsp</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:32">vc1_v_loop_filter16</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:59">vc1_v_loop_filter16_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:60"><expr pos:start="73:9" pos:end="73:59"><name pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:11">dsp</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:32">vc1_h_loop_filter16</name></name> <operator pos:start="73:34" pos:end="73:34">=</operator> <name pos:start="73:36" pos:end="73:59">vc1_h_loop_filter16_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:38">(<expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:17">cpu_flags</name> <operator pos:start="77:19" pos:end="77:19">&amp;</operator> <name pos:start="77:21" pos:end="77:37">AV_CPU_FLAG_SSSE3</name></expr>)</condition> <block pos:start="77:40" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:85">

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><call pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:17">ASSIGN_LF</name><argument_list pos:start="79:18" pos:end="79:24">(<argument pos:start="79:19" pos:end="79:23"><expr pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:23">ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:85"><expr pos:start="81:9" pos:end="81:84"><name pos:start="81:9" pos:end="81:48"><name pos:start="81:9" pos:end="81:11">dsp</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:45">put_no_rnd_vc1_chroma_pixels_tab</name><index pos:start="81:46" pos:end="81:48">[<expr pos:start="81:47" pos:end="81:47"><literal type="number" pos:start="81:47" pos:end="81:47">0</literal></expr>]</index></name> <operator pos:start="81:50" pos:end="81:50">=</operator> <name pos:start="81:52" pos:end="81:84">ff_put_vc1_chroma_mc8_nornd_ssse3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:85"><expr pos:start="83:9" pos:end="83:84"><name pos:start="83:9" pos:end="83:48"><name pos:start="83:9" pos:end="83:11">dsp</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:45">avg_no_rnd_vc1_chroma_pixels_tab</name><index pos:start="83:46" pos:end="83:48">[<expr pos:start="83:47" pos:end="83:47"><literal type="number" pos:start="83:47" pos:end="83:47">0</literal></expr>]</index></name> <operator pos:start="83:50" pos:end="83:50">=</operator> <name pos:start="83:52" pos:end="83:84">ff_avg_vc1_chroma_mc8_nornd_ssse3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="96:0"><if pos:start="87:5" pos:end="96:0">if <condition pos:start="87:8" pos:end="87:37">(<expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:17">cpu_flags</name> <operator pos:start="87:19" pos:end="87:19">&amp;</operator> <name pos:start="87:21" pos:end="87:36">AV_CPU_FLAG_SSE4</name></expr>)</condition> <block pos:start="87:39" pos:end="96:0">{<block_content pos:start="89:9" pos:end="91:60">

        <expr_stmt pos:start="89:9" pos:end="89:62"><expr pos:start="89:9" pos:end="89:61"><name pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:11">dsp</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:31">vc1_h_loop_filter8</name></name>  <operator pos:start="89:34" pos:end="89:34">=</operator> <name pos:start="89:36" pos:end="89:61">ff_vc1_h_loop_filter8_sse4</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:60"><expr pos:start="91:9" pos:end="91:59"><name pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:11">dsp</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:32">vc1_h_loop_filter16</name></name> <operator pos:start="91:34" pos:end="91:34">=</operator> <name pos:start="91:36" pos:end="91:59">vc1_h_loop_filter16_sse4</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="95:8" pos:end="95:22">/* HAVE_YASM */</comment>

</block_content>}</block></function>
</unit>
