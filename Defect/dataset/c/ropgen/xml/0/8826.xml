<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8826.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">read_extra_header</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">FFV1Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="217:1">{<block_content pos:start="5:5" pos:end="215:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:14">RangeCoder</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier><specifier pos:start="5:17" pos:end="5:21">const</specifier></type> <name pos:start="5:23" pos:end="5:23">c</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:28">f</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:31">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:31"><name pos:start="7:13" pos:end="7:17">state</name><index pos:start="7:18" pos:end="7:31">[<expr pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:36"><name pos:start="11:13" pos:end="11:18">state2</name><index pos:start="11:19" pos:end="11:22">[<expr pos:start="11:20" pos:end="11:21"><literal type="number" pos:start="11:20" pos:end="11:21">32</literal></expr>]</index><index pos:start="11:23" pos:end="11:36">[<expr pos:start="11:24" pos:end="11:35"><name pos:start="11:24" pos:end="11:35">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><call pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:39">(<argument pos:start="15:12" pos:end="15:17"><expr pos:start="15:12" pos:end="15:17"><name pos:start="15:12" pos:end="15:17">state2</name></expr></argument>, <argument pos:start="15:20" pos:end="15:22"><expr pos:start="15:20" pos:end="15:22"><literal type="number" pos:start="15:20" pos:end="15:22">128</literal></expr></argument>, <argument pos:start="15:25" pos:end="15:38"><expr pos:start="15:25" pos:end="15:38"><sizeof pos:start="15:25" pos:end="15:38">sizeof<argument_list pos:start="15:31" pos:end="15:38">(<argument pos:start="15:32" pos:end="15:37"><expr pos:start="15:32" pos:end="15:37"><name pos:start="15:32" pos:end="15:37">state2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><call pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:37">(<argument pos:start="17:12" pos:end="17:16"><expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:16">state</name></expr></argument>, <argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><literal type="number" pos:start="17:19" pos:end="17:21">128</literal></expr></argument>, <argument pos:start="17:24" pos:end="17:36"><expr pos:start="17:24" pos:end="17:36"><sizeof pos:start="17:24" pos:end="17:36">sizeof<argument_list pos:start="17:30" pos:end="17:36">(<argument pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:35"><name pos:start="17:31" pos:end="17:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:76"><expr pos:start="21:5" pos:end="21:75"><call pos:start="21:5" pos:end="21:75"><name pos:start="21:5" pos:end="21:25">ff_init_range_decoder</name><argument_list pos:start="21:26" pos:end="21:75">(<argument pos:start="21:27" pos:end="21:27"><expr pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">c</name></expr></argument>, <argument pos:start="21:30" pos:end="21:48"><expr pos:start="21:30" pos:end="21:48"><name pos:start="21:30" pos:end="21:48"><name pos:start="21:30" pos:end="21:30">f</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">avctx</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:48">extradata</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:74"><expr pos:start="21:51" pos:end="21:74"><name pos:start="21:51" pos:end="21:74"><name pos:start="21:51" pos:end="21:51">f</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:58">avctx</name><operator pos:start="21:59" pos:end="21:60">-&gt;</operator><name pos:start="21:61" pos:end="21:74">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:56"><expr pos:start="23:5" pos:end="23:55"><call pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:23">ff_build_rac_states</name><argument_list pos:start="23:24" pos:end="23:55">(<argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">c</name></expr></argument>, <argument pos:start="23:28" pos:end="23:45"><expr pos:start="23:28" pos:end="23:45"><literal type="number" pos:start="23:28" pos:end="23:31">0.05</literal> <operator pos:start="23:33" pos:end="23:33">*</operator> <operator pos:start="23:35" pos:end="23:35">(</operator><literal type="number" pos:start="23:36" pos:end="23:38">1LL</literal> <operator pos:start="23:40" pos:end="23:41">&lt;&lt;</operator> <literal type="number" pos:start="23:43" pos:end="23:44">32</literal><operator pos:start="23:45" pos:end="23:45">)</operator></expr></argument>, <argument pos:start="23:48" pos:end="23:54"><expr pos:start="23:48" pos:end="23:54"><literal type="number" pos:start="23:48" pos:end="23:52">256</literal> <operator pos:start="23:52" pos:end="23:52">-</operator> <literal type="number" pos:start="23:54" pos:end="23:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:5">f</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:14">version</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:40"><name pos:start="27:18" pos:end="27:27">get_symbol</name><argument_list pos:start="27:28" pos:end="27:40">(<argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">c</name></expr></argument>, <argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:36">state</name></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:9">f</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">version</name></name> <operator pos:start="29:20" pos:end="29:20">&lt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">2</literal></expr>)</condition> <block pos:start="29:25" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:35">

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:76">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">f</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:40" pos:end="31:75"><expr pos:start="31:40" pos:end="31:75"><literal type="string" pos:start="31:40" pos:end="31:75">"Invalid version in global header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">f</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">version</name></name> <operator pos:start="37:20" pos:end="37:20">&gt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr>)</condition> <block pos:start="37:25" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:39">

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:25">bytestream_end</name></name> <operator pos:start="39:27" pos:end="39:28">-=</operator> <literal type="number" pos:start="39:30" pos:end="39:30">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">f</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">micro_version</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:50"><name pos:start="41:28" pos:end="41:37">get_symbol</name><argument_list pos:start="41:38" pos:end="41:50">(<argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">c</name></expr></argument>, <argument pos:start="41:42" pos:end="41:46"><expr pos:start="41:42" pos:end="41:46"><name pos:start="41:42" pos:end="41:46">state</name></expr></argument>, <argument pos:start="41:49" pos:end="41:49"><expr pos:start="41:49" pos:end="41:49"><literal type="number" pos:start="41:49" pos:end="41:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:39"><if pos:start="43:9" pos:end="45:39">if <condition pos:start="43:12" pos:end="43:33">(<expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:13">f</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:28">micro_version</name></name> <operator pos:start="43:30" pos:end="43:30">&lt;</operator> <literal type="number" pos:start="43:32" pos:end="43:32">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:39"><block_content pos:start="45:13" pos:end="45:39">

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:9"><name pos:start="49:5" pos:end="49:5">f</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:9">ac</name></name> <operator pos:start="49:11" pos:end="49:11">=</operator> <name pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:13">f</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:20">avctx</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:32">coder_type</name></name> <operator pos:start="49:34" pos:end="49:34">=</operator> <call pos:start="49:36" pos:end="49:58"><name pos:start="49:36" pos:end="49:45">get_symbol</name><argument_list pos:start="49:46" pos:end="49:58">(<argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><name pos:start="49:47" pos:end="49:47">c</name></expr></argument>, <argument pos:start="49:50" pos:end="49:54"><expr pos:start="49:50" pos:end="49:54"><name pos:start="49:50" pos:end="49:54">state</name></expr></argument>, <argument pos:start="49:57" pos:end="49:57"><expr pos:start="49:57" pos:end="49:57"><literal type="number" pos:start="49:57" pos:end="49:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">f</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:13">ac</name></name> <operator pos:start="51:15" pos:end="51:15">&gt;</operator> <literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>)</condition> <block pos:start="51:20" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:79">

        <for pos:start="53:9" pos:end="55:79">for <control pos:start="53:13" pos:end="53:33">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:28"><expr pos:start="53:21" pos:end="53:27"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:27">256</literal></expr>;</condition> <incr pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:30">i</name><operator pos:start="53:31" pos:end="53:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:13" pos:end="55:79"><block_content pos:start="55:13" pos:end="55:79">

            <expr_stmt pos:start="55:13" pos:end="55:79"><expr pos:start="55:13" pos:end="55:78"><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:13">f</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:31">state_transition</name><index pos:start="55:32" pos:end="55:34">[<expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">i</name></expr>]</index></name> <operator pos:start="55:36" pos:end="55:36">=</operator> <call pos:start="55:38" pos:end="55:60"><name pos:start="55:38" pos:end="55:47">get_symbol</name><argument_list pos:start="55:48" pos:end="55:60">(<argument pos:start="55:49" pos:end="55:49"><expr pos:start="55:49" pos:end="55:49"><name pos:start="55:49" pos:end="55:49">c</name></expr></argument>, <argument pos:start="55:52" pos:end="55:56"><expr pos:start="55:52" pos:end="55:56"><name pos:start="55:52" pos:end="55:56">state</name></expr></argument>, <argument pos:start="55:59" pos:end="55:59"><expr pos:start="55:59" pos:end="55:59"><literal type="number" pos:start="55:59" pos:end="55:59">1</literal></expr></argument>)</argument_list></call> <operator pos:start="55:62" pos:end="55:62">+</operator> <name pos:start="55:64" pos:end="55:78"><name pos:start="55:64" pos:end="55:64">c</name><operator pos:start="55:65" pos:end="55:66">-&gt;</operator><name pos:start="55:67" pos:end="55:75">one_state</name><index pos:start="55:76" pos:end="55:78">[<expr pos:start="55:77" pos:end="55:77"><name pos:start="55:77" pos:end="55:77">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:60"><expr pos:start="61:5" pos:end="61:59"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:5">f</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">colorspace</name></name>                 <operator pos:start="61:35" pos:end="61:35">=</operator> <call pos:start="61:37" pos:end="61:59"><name pos:start="61:37" pos:end="61:46">get_symbol</name><argument_list pos:start="61:47" pos:end="61:59">(<argument pos:start="61:48" pos:end="61:48"><expr pos:start="61:48" pos:end="61:48"><name pos:start="61:48" pos:end="61:48">c</name></expr></argument>, <argument pos:start="61:51" pos:end="61:55"><expr pos:start="61:51" pos:end="61:55"><name pos:start="61:51" pos:end="61:55">state</name></expr></argument>, <argument pos:start="61:58" pos:end="61:58"><expr pos:start="61:58" pos:end="61:58"><literal type="number" pos:start="61:58" pos:end="61:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:62" pos:end="61:74">//YUV cs type</comment>

    <expr_stmt pos:start="63:5" pos:end="63:60"><expr pos:start="63:5" pos:end="63:59"><name pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:5">f</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:12">avctx</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:33">bits_per_raw_sample</name></name> <operator pos:start="63:35" pos:end="63:35">=</operator> <call pos:start="63:37" pos:end="63:59"><name pos:start="63:37" pos:end="63:46">get_symbol</name><argument_list pos:start="63:47" pos:end="63:59">(<argument pos:start="63:48" pos:end="63:48"><expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">c</name></expr></argument>, <argument pos:start="63:51" pos:end="63:55"><expr pos:start="63:51" pos:end="63:55"><name pos:start="63:51" pos:end="63:55">state</name></expr></argument>, <argument pos:start="63:58" pos:end="63:58"><expr pos:start="63:58" pos:end="63:58"><literal type="number" pos:start="63:58" pos:end="63:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:54"><expr pos:start="65:5" pos:end="65:53"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">f</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:20">chroma_planes</name></name>              <operator pos:start="65:35" pos:end="65:35">=</operator> <call pos:start="65:37" pos:end="65:53"><name pos:start="65:37" pos:end="65:43">get_rac</name><argument_list pos:start="65:44" pos:end="65:53">(<argument pos:start="65:45" pos:end="65:45"><expr pos:start="65:45" pos:end="65:45"><name pos:start="65:45" pos:end="65:45">c</name></expr></argument>, <argument pos:start="65:48" pos:end="65:52"><expr pos:start="65:48" pos:end="65:52"><name pos:start="65:48" pos:end="65:52">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:60"><expr pos:start="67:5" pos:end="67:59"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:5">f</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:21">chroma_h_shift</name></name>             <operator pos:start="67:35" pos:end="67:35">=</operator> <call pos:start="67:37" pos:end="67:59"><name pos:start="67:37" pos:end="67:46">get_symbol</name><argument_list pos:start="67:47" pos:end="67:59">(<argument pos:start="67:48" pos:end="67:48"><expr pos:start="67:48" pos:end="67:48"><name pos:start="67:48" pos:end="67:48">c</name></expr></argument>, <argument pos:start="67:51" pos:end="67:55"><expr pos:start="67:51" pos:end="67:55"><name pos:start="67:51" pos:end="67:55">state</name></expr></argument>, <argument pos:start="67:58" pos:end="67:58"><expr pos:start="67:58" pos:end="67:58"><literal type="number" pos:start="67:58" pos:end="67:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:60"><expr pos:start="69:5" pos:end="69:59"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:5">f</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:21">chroma_v_shift</name></name>             <operator pos:start="69:35" pos:end="69:35">=</operator> <call pos:start="69:37" pos:end="69:59"><name pos:start="69:37" pos:end="69:46">get_symbol</name><argument_list pos:start="69:47" pos:end="69:59">(<argument pos:start="69:48" pos:end="69:48"><expr pos:start="69:48" pos:end="69:48"><name pos:start="69:48" pos:end="69:48">c</name></expr></argument>, <argument pos:start="69:51" pos:end="69:55"><expr pos:start="69:51" pos:end="69:55"><name pos:start="69:51" pos:end="69:55">state</name></expr></argument>, <argument pos:start="69:58" pos:end="69:58"><expr pos:start="69:58" pos:end="69:58"><literal type="number" pos:start="69:58" pos:end="69:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:5">f</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:19">transparency</name></name>               <operator pos:start="71:35" pos:end="71:35">=</operator> <call pos:start="71:37" pos:end="71:53"><name pos:start="71:37" pos:end="71:43">get_rac</name><argument_list pos:start="71:44" pos:end="71:53">(<argument pos:start="71:45" pos:end="71:45"><expr pos:start="71:45" pos:end="71:45"><name pos:start="71:45" pos:end="71:45">c</name></expr></argument>, <argument pos:start="71:48" pos:end="71:52"><expr pos:start="71:48" pos:end="71:52"><name pos:start="71:48" pos:end="71:52">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:93"><expr pos:start="73:5" pos:end="73:92"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:5">f</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:18">plane_count</name></name>                <operator pos:start="73:35" pos:end="73:35">=</operator> <literal type="number" pos:start="73:37" pos:end="73:39">1</literal> <operator pos:start="73:39" pos:end="73:39">+</operator> <operator pos:start="73:41" pos:end="73:41">(</operator><name pos:start="73:42" pos:end="73:57"><name pos:start="73:42" pos:end="73:42">f</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:57">chroma_planes</name></name> <operator pos:start="73:59" pos:end="73:60">||</operator> <name pos:start="73:62" pos:end="73:71"><name pos:start="73:62" pos:end="73:62">f</name><operator pos:start="73:63" pos:end="73:64">-&gt;</operator><name pos:start="73:65" pos:end="73:71">version</name></name><operator pos:start="73:72" pos:end="73:72">&lt;</operator><literal type="number" pos:start="73:73" pos:end="73:73">4</literal><operator pos:start="73:74" pos:end="73:74">)</operator> <operator pos:start="73:76" pos:end="73:76">+</operator> <name pos:start="73:78" pos:end="73:92"><name pos:start="73:78" pos:end="73:78">f</name><operator pos:start="73:79" pos:end="73:80">-&gt;</operator><name pos:start="73:81" pos:end="73:92">transparency</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:64"><expr pos:start="75:5" pos:end="75:63"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:5">f</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:19">num_h_slices</name></name>               <operator pos:start="75:35" pos:end="75:35">=</operator> <literal type="number" pos:start="75:37" pos:end="75:39">1</literal> <operator pos:start="75:39" pos:end="75:39">+</operator> <call pos:start="75:41" pos:end="75:63"><name pos:start="75:41" pos:end="75:50">get_symbol</name><argument_list pos:start="75:51" pos:end="75:63">(<argument pos:start="75:52" pos:end="75:52"><expr pos:start="75:52" pos:end="75:52"><name pos:start="75:52" pos:end="75:52">c</name></expr></argument>, <argument pos:start="75:55" pos:end="75:59"><expr pos:start="75:55" pos:end="75:59"><name pos:start="75:55" pos:end="75:59">state</name></expr></argument>, <argument pos:start="75:62" pos:end="75:62"><expr pos:start="75:62" pos:end="75:62"><literal type="number" pos:start="75:62" pos:end="75:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:5">f</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:19">num_v_slices</name></name>               <operator pos:start="77:35" pos:end="77:35">=</operator> <literal type="number" pos:start="77:37" pos:end="77:39">1</literal> <operator pos:start="77:39" pos:end="77:39">+</operator> <call pos:start="77:41" pos:end="77:63"><name pos:start="77:41" pos:end="77:50">get_symbol</name><argument_list pos:start="77:51" pos:end="77:63">(<argument pos:start="77:52" pos:end="77:52"><expr pos:start="77:52" pos:end="77:52"><name pos:start="77:52" pos:end="77:52">c</name></expr></argument>, <argument pos:start="77:55" pos:end="77:59"><expr pos:start="77:55" pos:end="77:59"><name pos:start="77:55" pos:end="77:59">state</name></expr></argument>, <argument pos:start="77:62" pos:end="77:62"><expr pos:start="77:62" pos:end="77:62"><literal type="number" pos:start="77:62" pos:end="77:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:57">(<expr pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:9">f</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:25">chroma_h_shift</name></name> <operator pos:start="81:27" pos:end="81:27">&gt;</operator> <literal type="number" pos:start="81:29" pos:end="81:30">4U</literal> <operator pos:start="81:32" pos:end="81:33">||</operator> <name pos:start="81:35" pos:end="81:51"><name pos:start="81:35" pos:end="81:35">f</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:51">chroma_v_shift</name></name> <operator pos:start="81:53" pos:end="81:53">&gt;</operator> <literal type="number" pos:start="81:55" pos:end="81:56">4U</literal></expr>)</condition> <block pos:start="81:59" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:35">

        <expr_stmt pos:start="83:9" pos:end="85:53"><expr pos:start="83:9" pos:end="85:52"><call pos:start="83:9" pos:end="85:52"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="85:52">(<argument pos:start="83:16" pos:end="83:23"><expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:16">f</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:23">avctx</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:37"><expr pos:start="83:26" pos:end="83:37"><name pos:start="83:26" pos:end="83:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:40" pos:end="83:84"><expr pos:start="83:40" pos:end="83:84"><literal type="string" pos:start="83:40" pos:end="83:84">"chroma shift parameters %d %d are invalid\n"</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:32"><expr pos:start="85:16" pos:end="85:32"><name pos:start="85:16" pos:end="85:32"><name pos:start="85:16" pos:end="85:16">f</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:32">chroma_h_shift</name></name></expr></argument>, <argument pos:start="85:35" pos:end="85:51"><expr pos:start="85:35" pos:end="85:51"><name pos:start="85:35" pos:end="85:51"><name pos:start="85:35" pos:end="85:35">f</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:51">chroma_v_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:35">return <expr pos:start="87:16" pos:end="87:34"><name pos:start="87:16" pos:end="87:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="103:5">if <condition pos:start="93:8" pos:end="97:8">(<expr pos:start="93:9" pos:end="95:65"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:9">f</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:23">num_h_slices</name></name> <operator pos:start="93:25" pos:end="93:25">&gt;</operator> <operator pos:start="93:27" pos:end="93:27">(</operator><name pos:start="93:28" pos:end="93:35">unsigned</name><operator pos:start="93:36" pos:end="93:36">)</operator><name pos:start="93:37" pos:end="93:44"><name pos:start="93:37" pos:end="93:37">f</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:44">width</name></name>  <operator pos:start="93:47" pos:end="93:48">||</operator> <operator pos:start="93:50" pos:end="93:50">!</operator><name pos:start="93:51" pos:end="93:65"><name pos:start="93:51" pos:end="93:51">f</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:65">num_h_slices</name></name> <operator pos:start="93:67" pos:end="93:68">||</operator>

        <name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:9">f</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:23">num_v_slices</name></name> <operator pos:start="95:25" pos:end="95:25">&gt;</operator> <operator pos:start="95:27" pos:end="95:27">(</operator><name pos:start="95:28" pos:end="95:35">unsigned</name><operator pos:start="95:36" pos:end="95:36">)</operator><name pos:start="95:37" pos:end="95:45"><name pos:start="95:37" pos:end="95:37">f</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:45">height</name></name> <operator pos:start="95:47" pos:end="95:48">||</operator> <operator pos:start="95:50" pos:end="95:50">!</operator><name pos:start="95:51" pos:end="95:65"><name pos:start="95:51" pos:end="95:51">f</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:65">num_v_slices</name></name></expr>

       )</condition> <block pos:start="97:10" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:35">

        <expr_stmt pos:start="99:9" pos:end="99:64"><expr pos:start="99:9" pos:end="99:63"><call pos:start="99:9" pos:end="99:63"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:63">(<argument pos:start="99:16" pos:end="99:23"><expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:16">f</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">avctx</name></name></expr></argument>, <argument pos:start="99:26" pos:end="99:37"><expr pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:40" pos:end="99:62"><expr pos:start="99:40" pos:end="99:62"><literal type="string" pos:start="99:40" pos:end="99:62">"slice count invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:35">return <expr pos:start="101:16" pos:end="101:34"><name pos:start="101:16" pos:end="101:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:51"><expr pos:start="107:5" pos:end="107:50"><name pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:5">f</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:24">quant_table_count</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <call pos:start="107:28" pos:end="107:50"><name pos:start="107:28" pos:end="107:37">get_symbol</name><argument_list pos:start="107:38" pos:end="107:50">(<argument pos:start="107:39" pos:end="107:39"><expr pos:start="107:39" pos:end="107:39"><name pos:start="107:39" pos:end="107:39">c</name></expr></argument>, <argument pos:start="107:42" pos:end="107:46"><expr pos:start="107:42" pos:end="107:46"><name pos:start="107:42" pos:end="107:46">state</name></expr></argument>, <argument pos:start="107:49" pos:end="107:49"><expr pos:start="107:49" pos:end="107:49"><literal type="number" pos:start="107:49" pos:end="107:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="111:35"><if pos:start="109:5" pos:end="111:35">if <condition pos:start="109:8" pos:end="109:58">(<expr pos:start="109:9" pos:end="109:57"><name pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:9">f</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:28">quant_table_count</name></name> <operator pos:start="109:30" pos:end="109:30">&gt;</operator> <operator pos:start="109:32" pos:end="109:32">(</operator><name pos:start="109:33" pos:end="109:40">unsigned</name><operator pos:start="109:41" pos:end="109:41">)</operator><name pos:start="109:42" pos:end="109:57">MAX_QUANT_TABLES</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:35"><block_content pos:start="111:9" pos:end="111:35">

        <return pos:start="111:9" pos:end="111:35">return <expr pos:start="111:16" pos:end="111:34"><name pos:start="111:16" pos:end="111:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="115:5" pos:end="127:5">for <control pos:start="115:9" pos:end="115:46">(<init pos:start="115:10" pos:end="115:15"><expr pos:start="115:10" pos:end="115:14"><name pos:start="115:10" pos:end="115:10">i</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>;</init> <condition pos:start="115:17" pos:end="115:41"><expr pos:start="115:17" pos:end="115:40"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <name pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:21">f</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:40">quant_table_count</name></name></expr>;</condition> <incr pos:start="115:43" pos:end="115:45"><expr pos:start="115:43" pos:end="115:45"><name pos:start="115:43" pos:end="115:43">i</name><operator pos:start="115:44" pos:end="115:45">++</operator></expr></incr>)</control> <block pos:start="115:48" pos:end="127:5">{<block_content pos:start="117:9" pos:end="125:9">

        <expr_stmt pos:start="117:9" pos:end="117:71"><expr pos:start="117:9" pos:end="117:70"><name pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:9">f</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:24">context_count</name><index pos:start="117:25" pos:end="117:27">[<expr pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">i</name></expr>]</index></name> <operator pos:start="117:29" pos:end="117:29">=</operator> <call pos:start="117:31" pos:end="117:70"><name pos:start="117:31" pos:end="117:47">read_quant_tables</name><argument_list pos:start="117:48" pos:end="117:70">(<argument pos:start="117:49" pos:end="117:49"><expr pos:start="117:49" pos:end="117:49"><name pos:start="117:49" pos:end="117:49">c</name></expr></argument>, <argument pos:start="117:52" pos:end="117:69"><expr pos:start="117:52" pos:end="117:69"><name pos:start="117:52" pos:end="117:69"><name pos:start="117:52" pos:end="117:52">f</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:66">quant_tables</name><index pos:start="117:67" pos:end="117:69">[<expr pos:start="117:68" pos:end="117:68"><name pos:start="117:68" pos:end="117:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:36">(<expr pos:start="119:13" pos:end="119:35"><name pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:13">f</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:28">context_count</name><index pos:start="119:29" pos:end="119:31">[<expr pos:start="119:30" pos:end="119:30"><name pos:start="119:30" pos:end="119:30">i</name></expr>]</index></name> <operator pos:start="119:33" pos:end="119:33">&lt;</operator> <literal type="number" pos:start="119:35" pos:end="119:35">0</literal></expr>)</condition> <block pos:start="119:38" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:39">

            <expr_stmt pos:start="121:13" pos:end="121:71"><expr pos:start="121:13" pos:end="121:70"><call pos:start="121:13" pos:end="121:70"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="121:70">(<argument pos:start="121:20" pos:end="121:27"><expr pos:start="121:20" pos:end="121:27"><name pos:start="121:20" pos:end="121:27"><name pos:start="121:20" pos:end="121:20">f</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:27">avctx</name></name></expr></argument>, <argument pos:start="121:30" pos:end="121:41"><expr pos:start="121:30" pos:end="121:41"><name pos:start="121:30" pos:end="121:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:44" pos:end="121:69"><expr pos:start="121:44" pos:end="121:69"><literal type="string" pos:start="121:44" pos:end="121:69">"read_quant_table error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:39">return <expr pos:start="123:20" pos:end="123:38"><name pos:start="123:20" pos:end="123:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="129:5" pos:end="131:19"><if pos:start="129:5" pos:end="131:19">if <condition pos:start="129:8" pos:end="129:55">(<expr pos:start="129:9" pos:end="129:54"><operator pos:start="129:9" pos:end="129:9">(</operator><name pos:start="129:10" pos:end="129:12">ret</name> <operator pos:start="129:14" pos:end="129:14">=</operator> <call pos:start="129:16" pos:end="129:49"><name pos:start="129:16" pos:end="129:46">ff_ffv1_allocate_initial_states</name><argument_list pos:start="129:47" pos:end="129:49">(<argument pos:start="129:48" pos:end="129:48"><expr pos:start="129:48" pos:end="129:48"><name pos:start="129:48" pos:end="129:48">f</name></expr></argument>)</argument_list></call><operator pos:start="129:50" pos:end="129:50">)</operator> <operator pos:start="129:52" pos:end="129:52">&lt;</operator> <literal type="number" pos:start="129:54" pos:end="129:54">0</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:19"><block_content pos:start="131:9" pos:end="131:19">

        <return pos:start="131:9" pos:end="131:19">return <expr pos:start="131:16" pos:end="131:18"><name pos:start="131:16" pos:end="131:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="135:5" pos:end="151:9">for <control pos:start="135:9" pos:end="135:46">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">i</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:41"><expr pos:start="135:17" pos:end="135:40"><name pos:start="135:17" pos:end="135:17">i</name> <operator pos:start="135:19" pos:end="135:19">&lt;</operator> <name pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:21">f</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:40">quant_table_count</name></name></expr>;</condition> <incr pos:start="135:43" pos:end="135:45"><expr pos:start="135:43" pos:end="135:45"><name pos:start="135:43" pos:end="135:43">i</name><operator pos:start="135:44" pos:end="135:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:9" pos:end="151:9"><block_content pos:start="137:9" pos:end="151:9">

        <if_stmt pos:start="137:9" pos:end="151:9"><if pos:start="137:9" pos:end="151:9">if <condition pos:start="137:12" pos:end="137:30">(<expr pos:start="137:13" pos:end="137:29"><call pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:19">get_rac</name><argument_list pos:start="137:20" pos:end="137:29">(<argument pos:start="137:21" pos:end="137:21"><expr pos:start="137:21" pos:end="137:21"><name pos:start="137:21" pos:end="137:21">c</name></expr></argument>, <argument pos:start="137:24" pos:end="137:28"><expr pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:28">state</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:32" pos:end="151:9">{<block_content pos:start="139:13" pos:end="149:17">

            <for pos:start="139:13" pos:end="149:17">for <control pos:start="139:17" pos:end="139:53">(<init pos:start="139:18" pos:end="139:23"><expr pos:start="139:18" pos:end="139:22"><name pos:start="139:18" pos:end="139:18">j</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <literal type="number" pos:start="139:22" pos:end="139:22">0</literal></expr>;</init> <condition pos:start="139:25" pos:end="139:48"><expr pos:start="139:25" pos:end="139:47"><name pos:start="139:25" pos:end="139:25">j</name> <operator pos:start="139:27" pos:end="139:27">&lt;</operator> <name pos:start="139:29" pos:end="139:47"><name pos:start="139:29" pos:end="139:29">f</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:44">context_count</name><index pos:start="139:45" pos:end="139:47">[<expr pos:start="139:46" pos:end="139:46"><name pos:start="139:46" pos:end="139:46">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="139:50" pos:end="139:52"><expr pos:start="139:50" pos:end="139:52"><name pos:start="139:50" pos:end="139:50">j</name><operator pos:start="139:51" pos:end="139:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:17" pos:end="149:17"><block_content pos:start="141:17" pos:end="149:17">

                <for pos:start="141:17" pos:end="149:17">for <control pos:start="141:21" pos:end="141:50">(<init pos:start="141:22" pos:end="141:27"><expr pos:start="141:22" pos:end="141:26"><name pos:start="141:22" pos:end="141:22">k</name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:26">0</literal></expr>;</init> <condition pos:start="141:29" pos:end="141:45"><expr pos:start="141:29" pos:end="141:44"><name pos:start="141:29" pos:end="141:29">k</name> <operator pos:start="141:31" pos:end="141:31">&lt;</operator> <name pos:start="141:33" pos:end="141:44">CONTEXT_SIZE</name></expr>;</condition> <incr pos:start="141:47" pos:end="141:49"><expr pos:start="141:47" pos:end="141:49"><name pos:start="141:47" pos:end="141:47">k</name><operator pos:start="141:48" pos:end="141:49">++</operator></expr></incr>)</control> <block pos:start="141:52" pos:end="149:17">{<block_content pos:start="143:21" pos:end="147:68">

                    <decl_stmt pos:start="143:21" pos:end="143:72"><decl pos:start="143:21" pos:end="143:71"><type pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">int</name></type> <name pos:start="143:25" pos:end="143:28">pred</name> <init pos:start="143:30" pos:end="143:71">= <expr pos:start="143:32" pos:end="143:71"><ternary pos:start="143:32" pos:end="143:71"><condition pos:start="143:32" pos:end="143:34"><expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">j</name></expr> ?</condition><then pos:start="143:36" pos:end="143:65"> <expr pos:start="143:36" pos:end="143:65"><name pos:start="143:36" pos:end="143:65"><name pos:start="143:36" pos:end="143:36">f</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:52">initial_states</name><index pos:start="143:53" pos:end="143:55">[<expr pos:start="143:54" pos:end="143:54"><name pos:start="143:54" pos:end="143:54">i</name></expr>]</index><index pos:start="143:56" pos:end="143:62">[<expr pos:start="143:57" pos:end="143:61"><name pos:start="143:57" pos:end="143:57">j</name> <operator pos:start="143:59" pos:end="143:59">-</operator> <literal type="number" pos:start="143:61" pos:end="143:61">1</literal></expr>]</index><index pos:start="143:63" pos:end="143:65">[<expr pos:start="143:64" pos:end="143:64"><name pos:start="143:64" pos:end="143:64">k</name></expr>]</index></name></expr> </then><else pos:start="143:67" pos:end="143:71">: <expr pos:start="143:69" pos:end="143:71"><literal type="number" pos:start="143:69" pos:end="143:71">128</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="145:21" pos:end="147:68"><expr pos:start="145:21" pos:end="147:67"><name pos:start="145:21" pos:end="145:46"><name pos:start="145:21" pos:end="145:21">f</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:37">initial_states</name><index pos:start="145:38" pos:end="145:40">[<expr pos:start="145:39" pos:end="145:39"><name pos:start="145:39" pos:end="145:39">i</name></expr>]</index><index pos:start="145:41" pos:end="145:43">[<expr pos:start="145:42" pos:end="145:42"><name pos:start="145:42" pos:end="145:42">j</name></expr>]</index><index pos:start="145:44" pos:end="145:46">[<expr pos:start="145:45" pos:end="145:45"><name pos:start="145:45" pos:end="145:45">k</name></expr>]</index></name> <operator pos:start="145:48" pos:end="145:48">=</operator>

                        <operator pos:start="147:25" pos:end="147:25">(</operator><name pos:start="147:26" pos:end="147:29">pred</name> <operator pos:start="147:31" pos:end="147:31">+</operator> <call pos:start="147:33" pos:end="147:59"><name pos:start="147:33" pos:end="147:42">get_symbol</name><argument_list pos:start="147:43" pos:end="147:59">(<argument pos:start="147:44" pos:end="147:44"><expr pos:start="147:44" pos:end="147:44"><name pos:start="147:44" pos:end="147:44">c</name></expr></argument>, <argument pos:start="147:47" pos:end="147:55"><expr pos:start="147:47" pos:end="147:55"><name pos:start="147:47" pos:end="147:55"><name pos:start="147:47" pos:end="147:52">state2</name><index pos:start="147:53" pos:end="147:55">[<expr pos:start="147:54" pos:end="147:54"><name pos:start="147:54" pos:end="147:54">k</name></expr>]</index></name></expr></argument>, <argument pos:start="147:58" pos:end="147:58"><expr pos:start="147:58" pos:end="147:58"><literal type="number" pos:start="147:58" pos:end="147:58">1</literal></expr></argument>)</argument_list></call><operator pos:start="147:60" pos:end="147:60">)</operator> <operator pos:start="147:62" pos:end="147:62">&amp;</operator> <literal type="number" pos:start="147:64" pos:end="147:67">0xFF</literal></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></for>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="155:5" pos:end="163:5"><if pos:start="155:5" pos:end="163:5">if <condition pos:start="155:8" pos:end="155:23">(<expr pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:9">f</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:18">version</name></name> <operator pos:start="155:20" pos:end="155:20">&gt;</operator> <literal type="number" pos:start="155:22" pos:end="155:22">2</literal></expr>)</condition> <block pos:start="155:25" pos:end="163:5">{<block_content pos:start="157:9" pos:end="161:47">

        <expr_stmt pos:start="157:9" pos:end="157:40"><expr pos:start="157:9" pos:end="157:39"><name pos:start="157:9" pos:end="157:13"><name pos:start="157:9" pos:end="157:9">f</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:13">ec</name></name> <operator pos:start="157:15" pos:end="157:15">=</operator> <call pos:start="157:17" pos:end="157:39"><name pos:start="157:17" pos:end="157:26">get_symbol</name><argument_list pos:start="157:27" pos:end="157:39">(<argument pos:start="157:28" pos:end="157:28"><expr pos:start="157:28" pos:end="157:28"><name pos:start="157:28" pos:end="157:28">c</name></expr></argument>, <argument pos:start="157:31" pos:end="157:35"><expr pos:start="157:31" pos:end="157:35"><name pos:start="157:31" pos:end="157:35">state</name></expr></argument>, <argument pos:start="157:38" pos:end="157:38"><expr pos:start="157:38" pos:end="157:38"><literal type="number" pos:start="157:38" pos:end="157:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:47"><if pos:start="159:9" pos:end="161:47">if <condition pos:start="159:12" pos:end="159:33">(<expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:13">f</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:28">micro_version</name></name> <operator pos:start="159:30" pos:end="159:30">&gt;</operator> <literal type="number" pos:start="159:32" pos:end="159:32">2</literal></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:47"><block_content pos:start="161:13" pos:end="161:47">

            <expr_stmt pos:start="161:13" pos:end="161:47"><expr pos:start="161:13" pos:end="161:46"><name pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:13">f</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:20">intra</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <call pos:start="161:24" pos:end="161:46"><name pos:start="161:24" pos:end="161:33">get_symbol</name><argument_list pos:start="161:34" pos:end="161:46">(<argument pos:start="161:35" pos:end="161:35"><expr pos:start="161:35" pos:end="161:35"><name pos:start="161:35" pos:end="161:35">c</name></expr></argument>, <argument pos:start="161:38" pos:end="161:42"><expr pos:start="161:38" pos:end="161:42"><name pos:start="161:38" pos:end="161:42">state</name></expr></argument>, <argument pos:start="161:45" pos:end="161:45"><expr pos:start="161:45" pos:end="161:45"><literal type="number" pos:start="161:45" pos:end="161:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="183:5"><if pos:start="167:5" pos:end="183:5">if <condition pos:start="167:8" pos:end="167:23">(<expr pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:18"><name pos:start="167:9" pos:end="167:9">f</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:18">version</name></name> <operator pos:start="167:20" pos:end="167:20">&gt;</operator> <literal type="number" pos:start="167:22" pos:end="167:22">2</literal></expr>)</condition> <block pos:start="167:25" pos:end="183:5">{<block_content pos:start="169:9" pos:end="181:9">

        <decl_stmt pos:start="169:9" pos:end="169:19"><decl pos:start="169:9" pos:end="169:18"><type pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:16">unsigned</name></type> <name pos:start="169:18" pos:end="169:18">v</name></decl>;</decl_stmt>

        <expr_stmt pos:start="171:9" pos:end="173:66"><expr pos:start="171:9" pos:end="173:65"><name pos:start="171:9" pos:end="171:9">v</name> <operator pos:start="171:11" pos:end="171:11">=</operator> <call pos:start="171:13" pos:end="173:65"><name pos:start="171:13" pos:end="171:18">av_crc</name><argument_list pos:start="171:19" pos:end="173:65">(<argument pos:start="171:20" pos:end="171:51"><expr pos:start="171:20" pos:end="171:51"><call pos:start="171:20" pos:end="171:51"><name pos:start="171:20" pos:end="171:35">av_crc_get_table</name><argument_list pos:start="171:36" pos:end="171:51">(<argument pos:start="171:37" pos:end="171:50"><expr pos:start="171:37" pos:end="171:50"><name pos:start="171:37" pos:end="171:50">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="171:54" pos:end="171:54"><expr pos:start="171:54" pos:end="171:54"><literal type="number" pos:start="171:54" pos:end="171:54">0</literal></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:38"><expr pos:start="173:20" pos:end="173:38"><name pos:start="173:20" pos:end="173:38"><name pos:start="173:20" pos:end="173:20">f</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:27">avctx</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:38">extradata</name></name></expr></argument>, <argument pos:start="173:41" pos:end="173:64"><expr pos:start="173:41" pos:end="173:64"><name pos:start="173:41" pos:end="173:64"><name pos:start="173:41" pos:end="173:41">f</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:48">avctx</name><operator pos:start="173:49" pos:end="173:50">-&gt;</operator><name pos:start="173:51" pos:end="173:64">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="181:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="175:14">(<expr pos:start="175:13" pos:end="175:13"><name pos:start="175:13" pos:end="175:13">v</name></expr>)</condition> <block pos:start="175:16" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:39">

            <expr_stmt pos:start="177:13" pos:end="177:68"><expr pos:start="177:13" pos:end="177:67"><call pos:start="177:13" pos:end="177:67"><name pos:start="177:13" pos:end="177:18">av_log</name><argument_list pos:start="177:19" pos:end="177:67">(<argument pos:start="177:20" pos:end="177:27"><expr pos:start="177:20" pos:end="177:27"><name pos:start="177:20" pos:end="177:27"><name pos:start="177:20" pos:end="177:20">f</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:27">avctx</name></name></expr></argument>, <argument pos:start="177:30" pos:end="177:41"><expr pos:start="177:30" pos:end="177:41"><name pos:start="177:30" pos:end="177:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:44" pos:end="177:63"><expr pos:start="177:44" pos:end="177:63"><literal type="string" pos:start="177:44" pos:end="177:63">"CRC mismatch %X!\n"</literal></expr></argument>, <argument pos:start="177:66" pos:end="177:66"><expr pos:start="177:66" pos:end="177:66"><name pos:start="177:66" pos:end="177:66">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="179:13" pos:end="179:39">return <expr pos:start="179:20" pos:end="179:38"><name pos:start="179:20" pos:end="179:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="213:16"><if pos:start="187:5" pos:end="213:16">if <condition pos:start="187:8" pos:end="187:45">(<expr pos:start="187:9" pos:end="187:44"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:9">f</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:16">avctx</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:23">debug</name></name> <operator pos:start="187:25" pos:end="187:25">&amp;</operator> <name pos:start="187:27" pos:end="187:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="213:16"><block_content pos:start="189:9" pos:end="213:16">

        <expr_stmt pos:start="189:9" pos:end="213:16"><expr pos:start="189:9" pos:end="213:15"><call pos:start="189:9" pos:end="213:15"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="213:15">(<argument pos:start="189:16" pos:end="189:23"><expr pos:start="189:16" pos:end="189:23"><name pos:start="189:16" pos:end="189:23"><name pos:start="189:16" pos:end="189:16">f</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:23">avctx</name></name></expr></argument>, <argument pos:start="189:26" pos:end="189:37"><expr pos:start="189:26" pos:end="189:37"><name pos:start="189:26" pos:end="189:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="191:16" pos:end="191:133"><expr pos:start="191:16" pos:end="191:133"><literal type="string" pos:start="191:16" pos:end="191:133">"global: ver:%d.%d, coder:%d, colorspace: %d bpr:%d chroma:%d(%d:%d), alpha:%d slices:%dx%d qtabs:%d ec:%d intra:%d\n"</literal></expr></argument>,

               <argument pos:start="193:16" pos:end="193:25"><expr pos:start="193:16" pos:end="193:25"><name pos:start="193:16" pos:end="193:25"><name pos:start="193:16" pos:end="193:16">f</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:25">version</name></name></expr></argument>, <argument pos:start="193:28" pos:end="193:43"><expr pos:start="193:28" pos:end="193:43"><name pos:start="193:28" pos:end="193:43"><name pos:start="193:28" pos:end="193:28">f</name><operator pos:start="193:29" pos:end="193:30">-&gt;</operator><name pos:start="193:31" pos:end="193:43">micro_version</name></name></expr></argument>,

               <argument pos:start="195:16" pos:end="195:20"><expr pos:start="195:16" pos:end="195:20"><name pos:start="195:16" pos:end="195:20"><name pos:start="195:16" pos:end="195:16">f</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:20">ac</name></name></expr></argument>,

               <argument pos:start="197:16" pos:end="197:28"><expr pos:start="197:16" pos:end="197:28"><name pos:start="197:16" pos:end="197:28"><name pos:start="197:16" pos:end="197:16">f</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:28">colorspace</name></name></expr></argument>,

               <argument pos:start="199:16" pos:end="199:44"><expr pos:start="199:16" pos:end="199:44"><name pos:start="199:16" pos:end="199:44"><name pos:start="199:16" pos:end="199:16">f</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:23">avctx</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:44">bits_per_raw_sample</name></name></expr></argument>,

               <argument pos:start="201:16" pos:end="201:31"><expr pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:16">f</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:31">chroma_planes</name></name></expr></argument>, <argument pos:start="201:34" pos:end="201:50"><expr pos:start="201:34" pos:end="201:50"><name pos:start="201:34" pos:end="201:50"><name pos:start="201:34" pos:end="201:34">f</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:50">chroma_h_shift</name></name></expr></argument>, <argument pos:start="201:53" pos:end="201:69"><expr pos:start="201:53" pos:end="201:69"><name pos:start="201:53" pos:end="201:69"><name pos:start="201:53" pos:end="201:53">f</name><operator pos:start="201:54" pos:end="201:55">-&gt;</operator><name pos:start="201:56" pos:end="201:69">chroma_v_shift</name></name></expr></argument>,

               <argument pos:start="203:16" pos:end="203:30"><expr pos:start="203:16" pos:end="203:30"><name pos:start="203:16" pos:end="203:30"><name pos:start="203:16" pos:end="203:16">f</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:30">transparency</name></name></expr></argument>,

               <argument pos:start="205:16" pos:end="205:30"><expr pos:start="205:16" pos:end="205:30"><name pos:start="205:16" pos:end="205:30"><name pos:start="205:16" pos:end="205:16">f</name><operator pos:start="205:17" pos:end="205:18">-&gt;</operator><name pos:start="205:19" pos:end="205:30">num_h_slices</name></name></expr></argument>, <argument pos:start="205:33" pos:end="205:47"><expr pos:start="205:33" pos:end="205:47"><name pos:start="205:33" pos:end="205:47"><name pos:start="205:33" pos:end="205:33">f</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:47">num_v_slices</name></name></expr></argument>,

               <argument pos:start="207:16" pos:end="207:35"><expr pos:start="207:16" pos:end="207:35"><name pos:start="207:16" pos:end="207:35"><name pos:start="207:16" pos:end="207:16">f</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:35">quant_table_count</name></name></expr></argument>,

               <argument pos:start="209:16" pos:end="209:20"><expr pos:start="209:16" pos:end="209:20"><name pos:start="209:16" pos:end="209:20"><name pos:start="209:16" pos:end="209:16">f</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:20">ec</name></name></expr></argument>,

               <argument pos:start="211:16" pos:end="211:23"><expr pos:start="211:16" pos:end="211:23"><name pos:start="211:16" pos:end="211:23"><name pos:start="211:16" pos:end="211:16">f</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:23">intra</name></name></expr></argument>

              )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
