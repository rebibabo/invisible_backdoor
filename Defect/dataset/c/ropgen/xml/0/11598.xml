<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11598.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:24">cmd_identify</name><parameter_list pos:start="1:25" pos:end="1:50">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:33">IDEState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:45">uint8_t</name></type> <name pos:start="1:47" pos:end="1:49">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:16">

    <if_stmt pos:start="5:5" pos:end="35:5"><if pos:start="5:5" pos:end="25:5">if <condition pos:start="5:8" pos:end="5:41">(<expr pos:start="5:9" pos:end="5:40"><name pos:start="5:9" pos:end="5:13"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:13">bs</name></name> <operator pos:start="5:15" pos:end="5:16">&amp;&amp;</operator> <name pos:start="5:18" pos:end="5:30"><name pos:start="5:18" pos:end="5:18">s</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:30">drive_kind</name></name> <operator pos:start="5:32" pos:end="5:33">!=</operator> <name pos:start="5:35" pos:end="5:40">IDE_CD</name></expr>)</condition> <block pos:start="5:43" pos:end="25:5">{<block_content pos:start="7:9" pos:end="23:21">

        <if_stmt pos:start="7:9" pos:end="15:9"><if pos:start="7:9" pos:end="11:9">if <condition pos:start="7:12" pos:end="7:39">(<expr pos:start="7:13" pos:end="7:38"><name pos:start="7:13" pos:end="7:25"><name pos:start="7:13" pos:end="7:13">s</name><operator pos:start="7:14" pos:end="7:15">-&gt;</operator><name pos:start="7:16" pos:end="7:25">drive_kind</name></name> <operator pos:start="7:27" pos:end="7:28">!=</operator> <name pos:start="7:30" pos:end="7:38">IDE_CFATA</name></expr>)</condition> <block pos:start="7:41" pos:end="11:9">{<block_content pos:start="9:13" pos:end="9:28">

            <expr_stmt pos:start="9:13" pos:end="9:28"><expr pos:start="9:13" pos:end="9:27"><call pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:24">ide_identify</name><argument_list pos:start="9:25" pos:end="9:27">(<argument pos:start="9:26" pos:end="9:26"><expr pos:start="9:26" pos:end="9:26"><name pos:start="9:26" pos:end="9:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="11:11" pos:end="15:9">else <block pos:start="11:16" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:34">

            <expr_stmt pos:start="13:13" pos:end="13:34"><expr pos:start="13:13" pos:end="13:33"><call pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:30">ide_cfata_identify</name><argument_list pos:start="13:31" pos:end="13:33">(<argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><name pos:start="13:32" pos:end="13:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:17">status</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:30">READY_STAT</name> <operator pos:start="17:32" pos:end="17:32">|</operator> <name pos:start="17:34" pos:end="17:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:68"><expr pos:start="19:9" pos:end="19:67"><call pos:start="19:9" pos:end="19:67"><name pos:start="19:9" pos:end="19:26">ide_transfer_start</name><argument_list pos:start="19:27" pos:end="19:67">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">s</name></expr></argument>, <argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:42">io_buffer</name></name></expr></argument>, <argument pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><literal type="number" pos:start="19:45" pos:end="19:47">512</literal></expr></argument>, <argument pos:start="19:50" pos:end="19:66"><expr pos:start="19:50" pos:end="19:66"><name pos:start="19:50" pos:end="19:66">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:19">ide_set_irq</name><argument_list pos:start="21:20" pos:end="21:27">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">false</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="35:5">else <block pos:start="25:12" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:29">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:36">(<expr pos:start="27:13" pos:end="27:35"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">drive_kind</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <name pos:start="27:30" pos:end="27:35">IDE_CD</name></expr>)</condition> <block pos:start="27:38" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:33">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:29">ide_set_signature</name><argument_list pos:start="29:30" pos:end="29:32">(<argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><call pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:25">ide_abort_command</name><argument_list pos:start="33:26" pos:end="33:28">(<argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="39:5" pos:end="39:16">return <expr pos:start="39:12" pos:end="39:15"><name pos:start="39:12" pos:end="39:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
