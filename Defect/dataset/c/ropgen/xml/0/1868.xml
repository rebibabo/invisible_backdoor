<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1868.c" pos:tabs="8"><function pos:start="1:1" pos:end="339:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">evrc_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:65">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:47">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:57">AVPacket</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:64">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="339:1">{<block_content pos:start="7:5" pos:end="337:23">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">frame</name>     <init pos:start="9:24" pos:end="9:29">= <expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">EVRCContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">e</name>     <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name>       <init pos:start="13:24" pos:end="13:36">= <expr pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:30">avpkt</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:72"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:29"><name pos:start="15:11" pos:end="15:15">ilspf</name><index pos:start="15:16" pos:end="15:29">[<expr pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:28">FILTER_ORDER</name></expr>]</index></name></decl>, <decl pos:start="15:32" pos:end="15:49"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:32" pos:end="15:49"><name pos:start="15:32" pos:end="15:35">ilpc</name><index pos:start="15:36" pos:end="15:49">[<expr pos:start="15:37" pos:end="15:48"><name pos:start="15:37" pos:end="15:48">FILTER_ORDER</name></expr>]</index></name></decl>, <decl pos:start="15:52" pos:end="15:71"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:52" pos:end="15:71"><name pos:start="15:52" pos:end="15:57">idelay</name><index pos:start="15:58" pos:end="15:71">[<expr pos:start="15:59" pos:end="15:70"><name pos:start="15:59" pos:end="15:70">NB_SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">float</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type>   <name pos:start="19:11" pos:end="19:11">i</name></decl>, <decl pos:start="19:14" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:14">j</name></decl>, <decl pos:start="19:17" pos:end="19:19"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:19">ret</name></decl>, <decl pos:start="19:22" pos:end="19:35"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:22" pos:end="19:31">error_flag</name> <init pos:start="19:33" pos:end="19:35">= <expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:9">frame</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">nb_samples</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:27">160</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:51">(<expr pos:start="25:9" pos:end="25:50"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:45"><name pos:start="25:16" pos:end="25:28">ff_get_buffer</name><argument_list pos:start="25:29" pos:end="25:45">(<argument pos:start="25:30" pos:end="25:34"><expr pos:start="25:30" pos:end="25:34"><name pos:start="25:30" pos:end="25:34">avctx</name></expr></argument>, <argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">frame</name></expr></argument>, <argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="25:46" pos:end="25:46">)</operator> <operator pos:start="25:48" pos:end="25:48">&lt;</operator> <literal type="number" pos:start="25:50" pos:end="25:50">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:11">samples</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">(</operator><name pos:start="29:16" pos:end="29:20">float</name> <operator pos:start="29:22" pos:end="29:22">*</operator><operator pos:start="29:23" pos:end="29:23">)</operator><name pos:start="29:24" pos:end="29:37"><name pos:start="29:24" pos:end="29:28">frame</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">data</name><index pos:start="29:35" pos:end="29:37">[<expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:78">(<expr pos:start="33:9" pos:end="33:77"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:19"><name pos:start="33:10" pos:end="33:10">e</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:19">bitrate</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:63"><name pos:start="33:23" pos:end="33:39">determine_bitrate</name><argument_list pos:start="33:40" pos:end="33:63">(<argument pos:start="33:41" pos:end="33:45"><expr pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:45">avctx</name></expr></argument>, <argument pos:start="33:48" pos:end="33:56"><expr pos:start="33:48" pos:end="33:56"><operator pos:start="33:48" pos:end="33:48">&amp;</operator><name pos:start="33:49" pos:end="33:56">buf_size</name></expr></argument>, <argument pos:start="33:59" pos:end="33:62"><expr pos:start="33:59" pos:end="33:62"><operator pos:start="33:59" pos:end="33:59">&amp;</operator><name pos:start="33:60" pos:end="33:62">buf</name></expr></argument>)</argument_list></call><operator pos:start="33:64" pos:end="33:64">)</operator> <operator pos:start="33:66" pos:end="33:67">==</operator> <name pos:start="33:69" pos:end="33:77">RATE_ERRS</name></expr>)</condition> <block pos:start="33:80" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:21">

        <expr_stmt pos:start="35:9" pos:end="35:80"><expr pos:start="35:9" pos:end="35:79"><call pos:start="35:9" pos:end="35:79"><name pos:start="35:9" pos:end="35:39">warn_insufficient_frame_quality</name><argument_list pos:start="35:40" pos:end="35:79">(<argument pos:start="35:41" pos:end="35:45"><expr pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:45">avctx</name></expr></argument>, <argument pos:start="35:48" pos:end="35:78"><expr pos:start="35:48" pos:end="35:78"><literal type="string" pos:start="35:48" pos:end="35:78">"bitrate cannot be determined."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:21">goto <name pos:start="37:14" pos:end="37:20">erasure</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:21"><if pos:start="41:5" pos:end="43:21">if <condition pos:start="41:8" pos:end="41:60">(<expr pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:9">e</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:18">bitrate</name></name> <operator pos:start="41:20" pos:end="41:21">&lt;=</operator> <name pos:start="41:23" pos:end="41:29">SILENCE</name> <operator pos:start="41:31" pos:end="41:32">||</operator> <name pos:start="41:34" pos:end="41:43"><name pos:start="41:34" pos:end="41:34">e</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:43">bitrate</name></name> <operator pos:start="41:45" pos:end="41:46">==</operator> <name pos:start="41:48" pos:end="41:59">RATE_QUARTER</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:21"><block_content pos:start="43:9" pos:end="43:21">

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">erasure</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="49:21"><if pos:start="45:5" pos:end="49:21">if <condition pos:start="45:8" pos:end="47:56">(<expr pos:start="45:9" pos:end="47:55"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:9">e</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">bitrate</name></name> <operator pos:start="45:20" pos:end="45:21">==</operator> <name pos:start="45:23" pos:end="45:32">RATE_QUANT</name> <operator pos:start="45:34" pos:end="45:35">&amp;&amp;</operator> <name pos:start="45:37" pos:end="45:57"><name pos:start="45:37" pos:end="45:37">e</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:57">last_valid_bitrate</name></name> <operator pos:start="45:59" pos:end="45:60">==</operator> <name pos:start="45:62" pos:end="45:70">RATE_FULL</name>

                                 <operator pos:start="47:34" pos:end="47:35">&amp;&amp;</operator> <operator pos:start="47:37" pos:end="47:37">!</operator><name pos:start="47:38" pos:end="47:55"><name pos:start="47:38" pos:end="47:38">e</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:55">prev_error_flag</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:21"><block_content pos:start="49:9" pos:end="49:21">

        <goto pos:start="49:9" pos:end="49:21">goto <name pos:start="49:14" pos:end="49:20">erasure</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:17">init_get_bits</name><argument_list pos:start="53:18" pos:end="53:44">(<argument pos:start="53:19" pos:end="53:24"><expr pos:start="53:19" pos:end="53:24"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:20">e</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:24">gb</name></name></expr></argument>, <argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">buf</name></expr></argument>, <argument pos:start="53:32" pos:end="53:43"><expr pos:start="53:32" pos:end="53:43"><literal type="number" pos:start="53:32" pos:end="53:32">8</literal> <operator pos:start="53:34" pos:end="53:34">*</operator> <name pos:start="53:36" pos:end="53:43">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:10">memset</name><argument_list pos:start="55:11" pos:end="55:44">(<argument pos:start="55:12" pos:end="55:20"><expr pos:start="55:12" pos:end="55:20"><operator pos:start="55:12" pos:end="55:12">&amp;</operator><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:13">e</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">frame</name></name></expr></argument>, <argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr></argument>, <argument pos:start="55:26" pos:end="55:43"><expr pos:start="55:26" pos:end="55:43"><sizeof pos:start="55:26" pos:end="55:43">sizeof<argument_list pos:start="55:32" pos:end="55:43">(<argument pos:start="55:33" pos:end="55:42"><expr pos:start="55:33" pos:end="55:42"><name pos:start="55:33" pos:end="55:42">EVRCAFrame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><call pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:16">unpack_frame</name><argument_list pos:start="59:17" pos:end="59:19">(<argument pos:start="59:18" pos:end="59:18"><expr pos:start="59:18" pos:end="59:18"><name pos:start="59:18" pos:end="59:18">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="87:5"><if pos:start="63:5" pos:end="79:5">if <condition pos:start="63:8" pos:end="63:33">(<expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:9">e</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">bitrate</name></name> <operator pos:start="63:20" pos:end="63:21">!=</operator> <name pos:start="63:23" pos:end="63:32">RATE_QUANT</name></expr>)</condition> <block pos:start="63:35" pos:end="79:5">{<block_content pos:start="65:9" pos:end="77:25">

        <decl_stmt pos:start="65:9" pos:end="65:43"><decl pos:start="65:9" pos:end="65:42"><type pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:15">uint8_t</name> <modifier pos:start="65:17" pos:end="65:17">*</modifier></type><name pos:start="65:18" pos:end="65:18">p</name> <init pos:start="65:20" pos:end="65:42">= <expr pos:start="65:22" pos:end="65:42"><operator pos:start="65:22" pos:end="65:22">(</operator><name pos:start="65:23" pos:end="65:29">uint8_t</name> <operator pos:start="65:31" pos:end="65:31">*</operator><operator pos:start="65:32" pos:end="65:32">)</operator> <operator pos:start="65:34" pos:end="65:34">&amp;</operator><name pos:start="65:35" pos:end="65:42"><name pos:start="65:35" pos:end="65:35">e</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:42">frame</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="67:9" pos:end="73:9">for <control pos:start="67:13" pos:end="67:48">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:43"><expr pos:start="67:21" pos:end="67:42"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <sizeof pos:start="67:25" pos:end="67:42">sizeof<argument_list pos:start="67:31" pos:end="67:42">(<argument pos:start="67:32" pos:end="67:41"><expr pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:41">EVRCAFrame</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="67:45" pos:end="67:47"><expr pos:start="67:45" pos:end="67:47"><name pos:start="67:45" pos:end="67:45">i</name><operator pos:start="67:46" pos:end="67:47">++</operator></expr></incr>)</control> <block pos:start="67:50" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:22">

            <if_stmt pos:start="69:13" pos:end="71:22"><if pos:start="69:13" pos:end="71:22">if <condition pos:start="69:16" pos:end="69:21">(<expr pos:start="69:17" pos:end="69:20"><name pos:start="69:17" pos:end="69:20"><name pos:start="69:17" pos:end="69:17">p</name><index pos:start="69:18" pos:end="69:20">[<expr pos:start="69:19" pos:end="69:19"><name pos:start="69:19" pos:end="69:19">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:22"><block_content pos:start="71:17" pos:end="71:22">

                <break pos:start="71:17" pos:end="71:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="75:9" pos:end="77:25"><if pos:start="75:9" pos:end="77:25">if <condition pos:start="75:12" pos:end="75:36">(<expr pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:13">i</name> <operator pos:start="75:15" pos:end="75:16">==</operator> <sizeof pos:start="75:18" pos:end="75:35">sizeof<argument_list pos:start="75:24" pos:end="75:35">(<argument pos:start="75:25" pos:end="75:34"><expr pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:34">EVRCAFrame</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:25"><block_content pos:start="77:13" pos:end="77:25">

            <goto pos:start="77:13" pos:end="77:25">goto <name pos:start="77:18" pos:end="77:24">erasure</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="87:5">else if <condition pos:start="79:15" pos:end="83:44">(<expr pos:start="79:16" pos:end="83:43"><name pos:start="79:16" pos:end="79:30"><name pos:start="79:16" pos:end="79:16">e</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:23">frame</name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:27">lsp</name><index pos:start="79:28" pos:end="79:30">[<expr pos:start="79:29" pos:end="79:29"><literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>]</index></name> <operator pos:start="79:32" pos:end="79:33">==</operator> <literal type="number" pos:start="79:35" pos:end="79:37">0xf</literal> <operator pos:start="79:39" pos:end="79:40">&amp;&amp;</operator>

               <name pos:start="81:16" pos:end="81:30"><name pos:start="81:16" pos:end="81:16">e</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:23">frame</name><operator pos:start="81:24" pos:end="81:24">.</operator><name pos:start="81:25" pos:end="81:27">lsp</name><index pos:start="81:28" pos:end="81:30">[<expr pos:start="81:29" pos:end="81:29"><literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr>]</index></name> <operator pos:start="81:32" pos:end="81:33">==</operator> <literal type="number" pos:start="81:35" pos:end="81:37">0xf</literal> <operator pos:start="81:39" pos:end="81:40">&amp;&amp;</operator>

               <name pos:start="83:16" pos:end="83:35"><name pos:start="83:16" pos:end="83:16">e</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:23">frame</name><operator pos:start="83:24" pos:end="83:24">.</operator><name pos:start="83:25" pos:end="83:35">energy_gain</name></name> <operator pos:start="83:37" pos:end="83:38">==</operator> <literal type="number" pos:start="83:40" pos:end="83:43">0xff</literal></expr>)</condition> <block pos:start="83:46" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:21">

        <goto pos:start="85:9" pos:end="85:21">goto <name pos:start="85:14" pos:end="85:20">erasure</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="93:21"><if pos:start="91:5" pos:end="93:21">if <condition pos:start="91:8" pos:end="91:27">(<expr pos:start="91:9" pos:end="91:26"><call pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:19">decode_lspf</name><argument_list pos:start="91:20" pos:end="91:22">(<argument pos:start="91:21" pos:end="91:21"><expr pos:start="91:21" pos:end="91:21"><name pos:start="91:21" pos:end="91:21">e</name></expr></argument>)</argument_list></call> <operator pos:start="91:24" pos:end="91:24">&lt;</operator> <literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:21"><block_content pos:start="93:9" pos:end="93:21">

        <goto pos:start="93:9" pos:end="93:21">goto <name pos:start="93:14" pos:end="93:20">erasure</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="193:5"><if pos:start="97:5" pos:end="179:5">if <condition pos:start="97:8" pos:end="97:59">(<expr pos:start="97:9" pos:end="97:58"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:9">e</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:18">bitrate</name></name> <operator pos:start="97:20" pos:end="97:21">==</operator> <name pos:start="97:23" pos:end="97:31">RATE_FULL</name> <operator pos:start="97:33" pos:end="97:34">||</operator> <name pos:start="97:36" pos:end="97:45"><name pos:start="97:36" pos:end="97:36">e</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:45">bitrate</name></name> <operator pos:start="97:47" pos:end="97:48">==</operator> <name pos:start="97:50" pos:end="97:58">RATE_HALF</name></expr>)</condition> <block pos:start="97:61" pos:end="179:5">{<block_content pos:start="101:9" pos:end="177:48">

        <comment type="block" pos:start="99:9" pos:end="99:70">/* Pitch delay parameter checking as per TIA/IS-127 5.1.5.1 */</comment>

        <if_stmt pos:start="101:9" pos:end="103:25"><if pos:start="101:9" pos:end="103:25">if <condition pos:start="101:12" pos:end="101:57">(<expr pos:start="101:13" pos:end="101:56"><name pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:13">e</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:20">frame</name><operator pos:start="101:21" pos:end="101:21">.</operator><name pos:start="101:22" pos:end="101:32">pitch_delay</name></name> <operator pos:start="101:34" pos:end="101:34">&gt;</operator> <name pos:start="101:36" pos:end="101:44">MAX_DELAY</name> <operator pos:start="101:46" pos:end="101:46">-</operator> <name pos:start="101:48" pos:end="101:56">MIN_DELAY</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:25"><block_content pos:start="103:13" pos:end="103:25">

            <goto pos:start="103:13" pos:end="103:25">goto <name pos:start="103:18" pos:end="103:24">erasure</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:58"><expr pos:start="107:9" pos:end="107:57"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:9">e</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:22">pitch_delay</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:45"><name pos:start="107:26" pos:end="107:26">e</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">frame</name><operator pos:start="107:34" pos:end="107:34">.</operator><name pos:start="107:35" pos:end="107:45">pitch_delay</name></name> <operator pos:start="107:47" pos:end="107:47">+</operator> <name pos:start="107:49" pos:end="107:57">MIN_DELAY</name></expr>;</expr_stmt>



        <comment type="block" pos:start="111:9" pos:end="111:69">/* Delay diff parameter checking as per TIA/IS-127 5.1.5.2 */</comment>

        <if_stmt pos:start="113:9" pos:end="121:9"><if pos:start="113:9" pos:end="121:9">if <condition pos:start="113:12" pos:end="113:32">(<expr pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:13">e</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:20">frame</name><operator pos:start="113:21" pos:end="113:21">.</operator><name pos:start="113:22" pos:end="113:31">delay_diff</name></name></expr>)</condition> <block pos:start="113:34" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:29">

            <decl_stmt pos:start="115:13" pos:end="115:62"><decl pos:start="115:13" pos:end="115:61"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:17">p</name> <init pos:start="115:19" pos:end="115:61">= <expr pos:start="115:21" pos:end="115:61"><name pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:21">e</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:34">pitch_delay</name></name> <operator pos:start="115:36" pos:end="115:36">-</operator> <name pos:start="115:38" pos:end="115:56"><name pos:start="115:38" pos:end="115:38">e</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:45">frame</name><operator pos:start="115:46" pos:end="115:46">.</operator><name pos:start="115:47" pos:end="115:56">delay_diff</name></name> <operator pos:start="115:58" pos:end="115:58">+</operator> <literal type="number" pos:start="115:60" pos:end="115:61">16</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="117:13" pos:end="119:29"><if pos:start="117:13" pos:end="119:29">if <condition pos:start="117:16" pos:end="117:47">(<expr pos:start="117:17" pos:end="117:46"><name pos:start="117:17" pos:end="117:36"><name pos:start="117:17" pos:end="117:17">p</name> <argument_list type="generic" pos:start="117:19" pos:end="117:36">&lt; <argument pos:start="117:21" pos:end="117:34"><expr pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:29">MIN_DELAY</name> <operator pos:start="117:31" pos:end="117:32">||</operator> <name pos:start="117:34" pos:end="117:34">p</name></expr></argument> &gt;</argument_list></name> <name pos:start="117:38" pos:end="117:46">MAX_DELAY</name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:29"><block_content pos:start="119:17" pos:end="119:29">

                <goto pos:start="119:17" pos:end="119:29">goto <name pos:start="119:22" pos:end="119:28">erasure</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="125:9" pos:end="125:68">/* Delay contour reconstruction as per TIA/IS-127 5.2.2.2 */</comment>

        <if_stmt pos:start="127:9" pos:end="165:9"><if pos:start="127:9" pos:end="165:9">if <condition pos:start="127:12" pos:end="129:58">(<expr pos:start="127:13" pos:end="129:57"><name pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:13">e</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:20">frame</name><operator pos:start="127:21" pos:end="127:21">.</operator><name pos:start="127:22" pos:end="127:31">delay_diff</name></name> <operator pos:start="127:33" pos:end="127:34">&amp;&amp;</operator>

            <name pos:start="129:13" pos:end="129:22"><name pos:start="129:13" pos:end="129:13">e</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:22">bitrate</name></name> <operator pos:start="129:24" pos:end="129:25">==</operator> <name pos:start="129:27" pos:end="129:35">RATE_FULL</name> <operator pos:start="129:37" pos:end="129:38">&amp;&amp;</operator> <name pos:start="129:40" pos:end="129:57"><name pos:start="129:40" pos:end="129:40">e</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:57">prev_error_flag</name></name></expr>)</condition> <block pos:start="129:60" pos:end="165:9">{<block_content pos:start="131:13" pos:end="163:13">

            <decl_stmt pos:start="131:13" pos:end="131:24"><decl pos:start="131:13" pos:end="131:23"><type pos:start="131:13" pos:end="131:17"><name pos:start="131:13" pos:end="131:17">float</name></type> <name pos:start="131:19" pos:end="131:23">delay</name></decl>;</decl_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:70"><expr pos:start="135:13" pos:end="135:69"><call pos:start="135:13" pos:end="135:69"><name pos:start="135:13" pos:end="135:18">memcpy</name><argument_list pos:start="135:19" pos:end="135:69">(<argument pos:start="135:20" pos:end="135:27"><expr pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:20">e</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:27">pitch</name></name></expr></argument>, <argument pos:start="135:30" pos:end="135:42"><expr pos:start="135:30" pos:end="135:42"><name pos:start="135:30" pos:end="135:42"><name pos:start="135:30" pos:end="135:30">e</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:42">pitch_back</name></name></expr></argument>, <argument pos:start="135:45" pos:end="135:68"><expr pos:start="135:45" pos:end="135:68"><name pos:start="135:45" pos:end="135:52">ACB_SIZE</name> <operator pos:start="135:54" pos:end="135:54">*</operator> <sizeof pos:start="135:56" pos:end="135:68">sizeof<argument_list pos:start="135:62" pos:end="135:68">(<argument pos:start="135:63" pos:end="135:67"><expr pos:start="135:63" pos:end="135:67"><name pos:start="135:63" pos:end="135:67">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:40"><expr pos:start="139:13" pos:end="139:39"><name pos:start="139:13" pos:end="139:17">delay</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <name pos:start="139:21" pos:end="139:39"><name pos:start="139:21" pos:end="139:21">e</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:39">prev_pitch_delay</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:69"><expr pos:start="141:13" pos:end="141:68"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:13">e</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:31">prev_pitch_delay</name></name> <operator pos:start="141:33" pos:end="141:33">=</operator> <name pos:start="141:35" pos:end="141:39">delay</name> <operator pos:start="141:41" pos:end="141:41">-</operator> <name pos:start="141:43" pos:end="141:61"><name pos:start="141:43" pos:end="141:43">e</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:50">frame</name><operator pos:start="141:51" pos:end="141:51">.</operator><name pos:start="141:52" pos:end="141:61">delay_diff</name></name> <operator pos:start="141:63" pos:end="141:63">+</operator> <literal type="number" pos:start="141:65" pos:end="141:68">16.0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="145:13" pos:end="147:39"><if pos:start="145:13" pos:end="147:39">if <condition pos:start="145:16" pos:end="145:50">(<expr pos:start="145:17" pos:end="145:49"><call pos:start="145:17" pos:end="145:44"><name pos:start="145:17" pos:end="145:20">fabs</name><argument_list pos:start="145:21" pos:end="145:44">(<argument pos:start="145:22" pos:end="145:43"><expr pos:start="145:22" pos:end="145:43"><name pos:start="145:22" pos:end="145:35"><name pos:start="145:22" pos:end="145:22">e</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:35">pitch_delay</name></name> <operator pos:start="145:37" pos:end="145:37">-</operator> <name pos:start="145:39" pos:end="145:43">delay</name></expr></argument>)</argument_list></call> <operator pos:start="145:46" pos:end="145:46">&gt;</operator> <literal type="number" pos:start="145:48" pos:end="145:49">15</literal></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:39"><block_content pos:start="147:17" pos:end="147:39">

                <expr_stmt pos:start="147:17" pos:end="147:39"><expr pos:start="147:17" pos:end="147:38"><name pos:start="147:17" pos:end="147:21">delay</name> <operator pos:start="147:23" pos:end="147:23">=</operator> <name pos:start="147:25" pos:end="147:38"><name pos:start="147:25" pos:end="147:25">e</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:38">pitch_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <for pos:start="151:13" pos:end="163:13">for <control pos:start="151:17" pos:end="151:46">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">i</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:41"><expr pos:start="151:25" pos:end="151:40"><name pos:start="151:25" pos:end="151:25">i</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <name pos:start="151:29" pos:end="151:40">NB_SUBFRAMES</name></expr>;</condition> <incr pos:start="151:43" pos:end="151:45"><expr pos:start="151:43" pos:end="151:45"><name pos:start="151:43" pos:end="151:43">i</name><operator pos:start="151:44" pos:end="151:45">++</operator></expr></incr>)</control> <block pos:start="151:48" pos:end="163:13">{<block_content pos:start="153:17" pos:end="161:85">

                <decl_stmt pos:start="153:17" pos:end="153:54"><decl pos:start="153:17" pos:end="153:53"><type pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">int</name></type> <name pos:start="153:21" pos:end="153:33">subframe_size</name> <init pos:start="153:35" pos:end="153:53">= <expr pos:start="153:37" pos:end="153:53"><name pos:start="153:37" pos:end="153:53"><name pos:start="153:37" pos:end="153:50">subframe_sizes</name><index pos:start="153:51" pos:end="153:53">[<expr pos:start="153:52" pos:end="153:52"><name pos:start="153:52" pos:end="153:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="157:17" pos:end="157:73"><expr pos:start="157:17" pos:end="157:72"><call pos:start="157:17" pos:end="157:72"><name pos:start="157:17" pos:end="157:33">interpolate_delay</name><argument_list pos:start="157:34" pos:end="157:72">(<argument pos:start="157:35" pos:end="157:40"><expr pos:start="157:35" pos:end="157:40"><name pos:start="157:35" pos:end="157:40">idelay</name></expr></argument>, <argument pos:start="157:43" pos:end="157:47"><expr pos:start="157:43" pos:end="157:47"><name pos:start="157:43" pos:end="157:47">delay</name></expr></argument>, <argument pos:start="157:50" pos:end="157:68"><expr pos:start="157:50" pos:end="157:68"><name pos:start="157:50" pos:end="157:68"><name pos:start="157:50" pos:end="157:50">e</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:68">prev_pitch_delay</name></name></expr></argument>, <argument pos:start="157:71" pos:end="157:71"><expr pos:start="157:71" pos:end="157:71"><name pos:start="157:71" pos:end="157:71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:95"><expr pos:start="159:17" pos:end="159:94"><call pos:start="159:17" pos:end="159:94"><name pos:start="159:17" pos:end="159:30">acb_excitation</name><argument_list pos:start="159:31" pos:end="159:94">(<argument pos:start="159:32" pos:end="159:32"><expr pos:start="159:32" pos:end="159:32"><name pos:start="159:32" pos:end="159:32">e</name></expr></argument>, <argument pos:start="159:35" pos:end="159:53"><expr pos:start="159:35" pos:end="159:53"><name pos:start="159:35" pos:end="159:42"><name pos:start="159:35" pos:end="159:35">e</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:42">pitch</name></name> <operator pos:start="159:44" pos:end="159:44">+</operator> <name pos:start="159:46" pos:end="159:53">ACB_SIZE</name></expr></argument>, <argument pos:start="159:56" pos:end="159:70"><expr pos:start="159:56" pos:end="159:70"><name pos:start="159:56" pos:end="159:70"><name pos:start="159:56" pos:end="159:56">e</name><operator pos:start="159:57" pos:end="159:58">-&gt;</operator><name pos:start="159:59" pos:end="159:70">avg_acb_gain</name></name></expr></argument>, <argument pos:start="159:73" pos:end="159:78"><expr pos:start="159:73" pos:end="159:78"><name pos:start="159:73" pos:end="159:78">idelay</name></expr></argument>, <argument pos:start="159:81" pos:end="159:93"><expr pos:start="159:81" pos:end="159:93"><name pos:start="159:81" pos:end="159:93">subframe_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:85"><expr pos:start="161:17" pos:end="161:84"><call pos:start="161:17" pos:end="161:84"><name pos:start="161:17" pos:end="161:22">memcpy</name><argument_list pos:start="161:23" pos:end="161:84">(<argument pos:start="161:24" pos:end="161:31"><expr pos:start="161:24" pos:end="161:31"><name pos:start="161:24" pos:end="161:31"><name pos:start="161:24" pos:end="161:24">e</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:31">pitch</name></name></expr></argument>, <argument pos:start="161:34" pos:end="161:57"><expr pos:start="161:34" pos:end="161:57"><name pos:start="161:34" pos:end="161:41"><name pos:start="161:34" pos:end="161:34">e</name><operator pos:start="161:35" pos:end="161:36">-&gt;</operator><name pos:start="161:37" pos:end="161:41">pitch</name></name> <operator pos:start="161:43" pos:end="161:43">+</operator> <name pos:start="161:45" pos:end="161:57">subframe_size</name></expr></argument>, <argument pos:start="161:60" pos:end="161:83"><expr pos:start="161:60" pos:end="161:83"><name pos:start="161:60" pos:end="161:67">ACB_SIZE</name> <operator pos:start="161:69" pos:end="161:69">*</operator> <sizeof pos:start="161:71" pos:end="161:83">sizeof<argument_list pos:start="161:77" pos:end="161:83">(<argument pos:start="161:78" pos:end="161:82"><expr pos:start="161:78" pos:end="161:82"><name pos:start="161:78" pos:end="161:82">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="169:9" pos:end="169:70">/* Smoothing of the decoded delay as per TIA/IS-127 5.2.2.5 */</comment>

        <if_stmt pos:start="171:9" pos:end="173:49"><if pos:start="171:9" pos:end="173:49">if <condition pos:start="171:12" pos:end="171:60">(<expr pos:start="171:13" pos:end="171:59"><call pos:start="171:13" pos:end="171:54"><name pos:start="171:13" pos:end="171:16">fabs</name><argument_list pos:start="171:17" pos:end="171:54">(<argument pos:start="171:18" pos:end="171:53"><expr pos:start="171:18" pos:end="171:53"><name pos:start="171:18" pos:end="171:31"><name pos:start="171:18" pos:end="171:18">e</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:31">pitch_delay</name></name> <operator pos:start="171:33" pos:end="171:33">-</operator> <name pos:start="171:35" pos:end="171:53"><name pos:start="171:35" pos:end="171:35">e</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:53">prev_pitch_delay</name></name></expr></argument>)</argument_list></call> <operator pos:start="171:56" pos:end="171:56">&gt;</operator> <literal type="number" pos:start="171:58" pos:end="171:59">15</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:49"><block_content pos:start="173:13" pos:end="173:49">

            <expr_stmt pos:start="173:13" pos:end="173:49"><expr pos:start="173:13" pos:end="173:48"><name pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:13">e</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:31">prev_pitch_delay</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <name pos:start="173:35" pos:end="173:48"><name pos:start="173:35" pos:end="173:35">e</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:48">pitch_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:48"><expr pos:start="177:9" pos:end="177:47"><name pos:start="177:9" pos:end="177:23"><name pos:start="177:9" pos:end="177:9">e</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:23">avg_acb_gain</name></name> <operator pos:start="177:25" pos:end="177:25">=</operator> <name pos:start="177:27" pos:end="177:41"><name pos:start="177:27" pos:end="177:27">e</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:41">avg_fcb_gain</name></name> <operator pos:start="177:43" pos:end="177:43">=</operator> <literal type="number" pos:start="177:45" pos:end="177:47">0.0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="179:7" pos:end="193:5">else <block pos:start="179:12" pos:end="193:5">{<block_content pos:start="181:9" pos:end="191:51">

        <expr_stmt pos:start="181:9" pos:end="181:54"><expr pos:start="181:9" pos:end="181:53"><name pos:start="181:9" pos:end="181:17"><name pos:start="181:9" pos:end="181:14">idelay</name><index pos:start="181:15" pos:end="181:17">[<expr pos:start="181:16" pos:end="181:16"><literal type="number" pos:start="181:16" pos:end="181:16">0</literal></expr>]</index></name> <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:29"><name pos:start="181:21" pos:end="181:26">idelay</name><index pos:start="181:27" pos:end="181:29">[<expr pos:start="181:28" pos:end="181:28"><literal type="number" pos:start="181:28" pos:end="181:28">1</literal></expr>]</index></name> <operator pos:start="181:31" pos:end="181:31">=</operator> <name pos:start="181:33" pos:end="181:41"><name pos:start="181:33" pos:end="181:38">idelay</name><index pos:start="181:39" pos:end="181:41">[<expr pos:start="181:40" pos:end="181:40"><literal type="number" pos:start="181:40" pos:end="181:40">2</literal></expr>]</index></name> <operator pos:start="181:43" pos:end="181:43">=</operator> <name pos:start="181:45" pos:end="181:53">MIN_DELAY</name></expr>;</expr_stmt>



        <comment type="block" pos:start="185:9" pos:end="185:65">/* Decode frame energy vectors as per TIA/IS-127 5.7.2 */</comment>

        <for pos:start="187:9" pos:end="189:86">for <control pos:start="187:13" pos:end="187:42">(<init pos:start="187:14" pos:end="187:19"><expr pos:start="187:14" pos:end="187:18"><name pos:start="187:14" pos:end="187:14">i</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <literal type="number" pos:start="187:18" pos:end="187:18">0</literal></expr>;</init> <condition pos:start="187:21" pos:end="187:37"><expr pos:start="187:21" pos:end="187:36"><name pos:start="187:21" pos:end="187:21">i</name> <operator pos:start="187:23" pos:end="187:23">&lt;</operator> <name pos:start="187:25" pos:end="187:36">NB_SUBFRAMES</name></expr>;</condition> <incr pos:start="187:39" pos:end="187:41"><expr pos:start="187:39" pos:end="187:41"><name pos:start="187:39" pos:end="187:39">i</name><operator pos:start="187:40" pos:end="187:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="189:13" pos:end="189:86"><block_content pos:start="189:13" pos:end="189:86">

            <expr_stmt pos:start="189:13" pos:end="189:86"><expr pos:start="189:13" pos:end="189:85"><name pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:13">e</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:28">energy_vector</name><index pos:start="189:29" pos:end="189:31">[<expr pos:start="189:30" pos:end="189:30"><name pos:start="189:30" pos:end="189:30">i</name></expr>]</index></name> <operator pos:start="189:33" pos:end="189:33">=</operator> <call pos:start="189:35" pos:end="189:85"><name pos:start="189:35" pos:end="189:37">pow</name><argument_list pos:start="189:38" pos:end="189:85">(<argument pos:start="189:39" pos:end="189:40"><expr pos:start="189:39" pos:end="189:40"><literal type="number" pos:start="189:39" pos:end="189:40">10</literal></expr></argument>, <argument pos:start="189:43" pos:end="189:84"><expr pos:start="189:43" pos:end="189:84"><name pos:start="189:43" pos:end="189:84"><name pos:start="189:43" pos:end="189:59">evrc_energy_quant</name><index pos:start="189:60" pos:end="189:81">[<expr pos:start="189:61" pos:end="189:80"><name pos:start="189:61" pos:end="189:80"><name pos:start="189:61" pos:end="189:61">e</name><operator pos:start="189:62" pos:end="189:63">-&gt;</operator><name pos:start="189:64" pos:end="189:68">frame</name><operator pos:start="189:69" pos:end="189:69">.</operator><name pos:start="189:70" pos:end="189:80">energy_gain</name></name></expr>]</index><index pos:start="189:82" pos:end="189:84">[<expr pos:start="189:83" pos:end="189:83"><name pos:start="189:83" pos:end="189:83">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="191:9" pos:end="191:51"><expr pos:start="191:9" pos:end="191:50"><name pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:9">e</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:27">prev_energy_gain</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <name pos:start="191:31" pos:end="191:50"><name pos:start="191:31" pos:end="191:31">e</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:38">frame</name><operator pos:start="191:39" pos:end="191:39">.</operator><name pos:start="191:40" pos:end="191:50">energy_gain</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="197:5" pos:end="293:5">for <control pos:start="197:9" pos:end="197:38">(<init pos:start="197:10" pos:end="197:15"><expr pos:start="197:10" pos:end="197:14"><name pos:start="197:10" pos:end="197:10">i</name> <operator pos:start="197:12" pos:end="197:12">=</operator> <literal type="number" pos:start="197:14" pos:end="197:14">0</literal></expr>;</init> <condition pos:start="197:17" pos:end="197:33"><expr pos:start="197:17" pos:end="197:32"><name pos:start="197:17" pos:end="197:17">i</name> <operator pos:start="197:19" pos:end="197:19">&lt;</operator> <name pos:start="197:21" pos:end="197:32">NB_SUBFRAMES</name></expr>;</condition> <incr pos:start="197:35" pos:end="197:37"><expr pos:start="197:35" pos:end="197:37"><name pos:start="197:35" pos:end="197:35">i</name><operator pos:start="197:36" pos:end="197:37">++</operator></expr></incr>)</control> <block pos:start="197:40" pos:end="293:5">{<block_content pos:start="199:9" pos:end="291:33">

        <decl_stmt pos:start="199:9" pos:end="199:45"><decl pos:start="199:9" pos:end="199:44"><type pos:start="199:9" pos:end="199:13"><name pos:start="199:9" pos:end="199:13">float</name></type> <name pos:start="199:15" pos:end="199:36"><name pos:start="199:15" pos:end="199:17">tmp</name><index pos:start="199:18" pos:end="199:36">[<expr pos:start="199:19" pos:end="199:35"><name pos:start="199:19" pos:end="199:31">SUBFRAME_SIZE</name> <operator pos:start="199:33" pos:end="199:33">+</operator> <literal type="number" pos:start="199:35" pos:end="199:35">6</literal></expr>]</index></name> <init pos:start="199:38" pos:end="199:44">= <expr pos:start="199:40" pos:end="199:44"><block pos:start="199:40" pos:end="199:44">{ <expr pos:start="199:42" pos:end="199:42"><literal type="number" pos:start="199:42" pos:end="199:42">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="201:9" pos:end="201:46"><decl pos:start="201:9" pos:end="201:45"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:25">subframe_size</name> <init pos:start="201:27" pos:end="201:45">= <expr pos:start="201:29" pos:end="201:45"><name pos:start="201:29" pos:end="201:45"><name pos:start="201:29" pos:end="201:42">subframe_sizes</name><index pos:start="201:43" pos:end="201:45">[<expr pos:start="201:44" pos:end="201:44"><name pos:start="201:44" pos:end="201:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="203:9" pos:end="203:22"><decl pos:start="203:9" pos:end="203:21"><type pos:start="203:9" pos:end="203:11"><name pos:start="203:9" pos:end="203:11">int</name></type> <name pos:start="203:13" pos:end="203:21">pitch_lag</name></decl>;</decl_stmt>



        <expr_stmt pos:start="207:9" pos:end="207:57"><expr pos:start="207:9" pos:end="207:56"><call pos:start="207:9" pos:end="207:56"><name pos:start="207:9" pos:end="207:23">interpolate_lsp</name><argument_list pos:start="207:24" pos:end="207:56">(<argument pos:start="207:25" pos:end="207:29"><expr pos:start="207:25" pos:end="207:29"><name pos:start="207:25" pos:end="207:29">ilspf</name></expr></argument>, <argument pos:start="207:32" pos:end="207:38"><expr pos:start="207:32" pos:end="207:38"><name pos:start="207:32" pos:end="207:38"><name pos:start="207:32" pos:end="207:32">e</name><operator pos:start="207:33" pos:end="207:34">-&gt;</operator><name pos:start="207:35" pos:end="207:38">lspf</name></name></expr></argument>, <argument pos:start="207:41" pos:end="207:52"><expr pos:start="207:41" pos:end="207:52"><name pos:start="207:41" pos:end="207:52"><name pos:start="207:41" pos:end="207:41">e</name><operator pos:start="207:42" pos:end="207:43">-&gt;</operator><name pos:start="207:44" pos:end="207:52">prev_lspf</name></name></expr></argument>, <argument pos:start="207:55" pos:end="207:55"><expr pos:start="207:55" pos:end="207:55"><name pos:start="207:55" pos:end="207:55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="211:9" pos:end="213:78"><if pos:start="211:9" pos:end="213:78">if <condition pos:start="211:12" pos:end="211:37">(<expr pos:start="211:13" pos:end="211:36"><name pos:start="211:13" pos:end="211:22"><name pos:start="211:13" pos:end="211:13">e</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:22">bitrate</name></name> <operator pos:start="211:24" pos:end="211:25">!=</operator> <name pos:start="211:27" pos:end="211:36">RATE_QUANT</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:78"><block_content pos:start="213:13" pos:end="213:78">

            <expr_stmt pos:start="213:13" pos:end="213:78"><expr pos:start="213:13" pos:end="213:77"><call pos:start="213:13" pos:end="213:77"><name pos:start="213:13" pos:end="213:29">interpolate_delay</name><argument_list pos:start="213:30" pos:end="213:77">(<argument pos:start="213:31" pos:end="213:36"><expr pos:start="213:31" pos:end="213:36"><name pos:start="213:31" pos:end="213:36">idelay</name></expr></argument>, <argument pos:start="213:39" pos:end="213:52"><expr pos:start="213:39" pos:end="213:52"><name pos:start="213:39" pos:end="213:52"><name pos:start="213:39" pos:end="213:39">e</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:52">pitch_delay</name></name></expr></argument>, <argument pos:start="213:55" pos:end="213:73"><expr pos:start="213:55" pos:end="213:73"><name pos:start="213:55" pos:end="213:73"><name pos:start="213:55" pos:end="213:55">e</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:73">prev_pitch_delay</name></name></expr></argument>, <argument pos:start="213:76" pos:end="213:76"><expr pos:start="213:76" pos:end="213:76"><name pos:start="213:76" pos:end="213:76">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="217:9" pos:end="217:58"><expr pos:start="217:9" pos:end="217:57"><name pos:start="217:9" pos:end="217:17">pitch_lag</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <call pos:start="217:21" pos:end="217:57"><name pos:start="217:21" pos:end="217:26">lrintf</name><argument_list pos:start="217:27" pos:end="217:57">(<argument pos:start="217:28" pos:end="217:56"><expr pos:start="217:28" pos:end="217:56"><operator pos:start="217:28" pos:end="217:28">(</operator><name pos:start="217:29" pos:end="217:37"><name pos:start="217:29" pos:end="217:34">idelay</name><index pos:start="217:35" pos:end="217:37">[<expr pos:start="217:36" pos:end="217:36"><literal type="number" pos:start="217:36" pos:end="217:36">1</literal></expr>]</index></name> <operator pos:start="217:39" pos:end="217:39">+</operator> <name pos:start="217:41" pos:end="217:49"><name pos:start="217:41" pos:end="217:46">idelay</name><index pos:start="217:47" pos:end="217:49">[<expr pos:start="217:48" pos:end="217:48"><literal type="number" pos:start="217:48" pos:end="217:48">0</literal></expr>]</index></name><operator pos:start="217:50" pos:end="217:50">)</operator> <operator pos:start="217:52" pos:end="217:52">/</operator> <literal type="number" pos:start="217:54" pos:end="217:56">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:45"><expr pos:start="219:9" pos:end="219:44"><call pos:start="219:9" pos:end="219:44"><name pos:start="219:9" pos:end="219:31">decode_predictor_coeffs</name><argument_list pos:start="219:32" pos:end="219:44">(<argument pos:start="219:33" pos:end="219:37"><expr pos:start="219:33" pos:end="219:37"><name pos:start="219:33" pos:end="219:37">ilspf</name></expr></argument>, <argument pos:start="219:40" pos:end="219:43"><expr pos:start="219:40" pos:end="219:43"><name pos:start="219:40" pos:end="219:43">ilpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="223:9" pos:end="223:59">/* Bandwidth expansion as per TIA/IS-127 5.2.3.3 */</comment>

        <if_stmt pos:start="225:9" pos:end="227:50"><if pos:start="225:9" pos:end="227:50">if <condition pos:start="225:12" pos:end="225:52">(<expr pos:start="225:13" pos:end="225:51"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:13">e</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:20">frame</name><operator pos:start="225:21" pos:end="225:21">.</operator><name pos:start="225:22" pos:end="225:29">lpc_flag</name></name> <operator pos:start="225:31" pos:end="225:32">&amp;&amp;</operator> <name pos:start="225:34" pos:end="225:51"><name pos:start="225:34" pos:end="225:34">e</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:51">prev_error_flag</name></name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:50"><block_content pos:start="227:13" pos:end="227:50">

            <expr_stmt pos:start="227:13" pos:end="227:50"><expr pos:start="227:13" pos:end="227:49"><call pos:start="227:13" pos:end="227:49"><name pos:start="227:13" pos:end="227:31">bandwidth_expansion</name><argument_list pos:start="227:32" pos:end="227:49">(<argument pos:start="227:33" pos:end="227:36"><expr pos:start="227:33" pos:end="227:36"><name pos:start="227:33" pos:end="227:36">ilpc</name></expr></argument>, <argument pos:start="227:39" pos:end="227:42"><expr pos:start="227:39" pos:end="227:42"><name pos:start="227:39" pos:end="227:42">ilpc</name></expr></argument>, <argument pos:start="227:45" pos:end="227:48"><expr pos:start="227:45" pos:end="227:48"><literal type="number" pos:start="227:45" pos:end="227:48">0.75</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="231:9" pos:end="273:9"><if pos:start="231:9" pos:end="267:9">if <condition pos:start="231:12" pos:end="231:37">(<expr pos:start="231:13" pos:end="231:36"><name pos:start="231:13" pos:end="231:22"><name pos:start="231:13" pos:end="231:13">e</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:22">bitrate</name></name> <operator pos:start="231:24" pos:end="231:25">!=</operator> <name pos:start="231:27" pos:end="231:36">RATE_QUANT</name></expr>)</condition> <block pos:start="231:39" pos:end="267:9">{<block_content pos:start="233:13" pos:end="265:60">

            <decl_stmt pos:start="233:13" pos:end="233:29"><decl pos:start="233:13" pos:end="233:25"><type pos:start="233:13" pos:end="233:17"><name pos:start="233:13" pos:end="233:17">float</name></type> <name pos:start="233:19" pos:end="233:25">acb_sum</name></decl>, <decl pos:start="233:28" pos:end="233:28"><type ref="prev" pos:start="233:13" pos:end="233:17"/><name pos:start="233:28" pos:end="233:28">f</name></decl>;</decl_stmt>



            <expr_stmt pos:start="237:13" pos:end="239:55"><expr pos:start="237:13" pos:end="239:54"><name pos:start="237:13" pos:end="237:13">f</name> <operator pos:start="237:15" pos:end="237:15">=</operator> <call pos:start="237:17" pos:end="239:54"><name pos:start="237:17" pos:end="237:19">exp</name><argument_list pos:start="237:20" pos:end="239:54">(<argument pos:start="237:21" pos:end="239:53"><expr pos:start="237:21" pos:end="239:53"><operator pos:start="237:21" pos:end="237:21">(</operator><ternary pos:start="237:22" pos:end="237:57"><condition pos:start="237:22" pos:end="237:46"><expr pos:start="237:22" pos:end="237:44"><name pos:start="237:22" pos:end="237:31"><name pos:start="237:22" pos:end="237:22">e</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:31">bitrate</name></name> <operator pos:start="237:33" pos:end="237:34">==</operator> <name pos:start="237:36" pos:end="237:44">RATE_HALF</name></expr> ?</condition><then pos:start="237:48" pos:end="237:50"> <expr pos:start="237:48" pos:end="237:50"><literal type="number" pos:start="237:48" pos:end="237:50">0.5</literal></expr> </then><else pos:start="237:52" pos:end="237:57">: <expr pos:start="237:54" pos:end="237:57"><literal type="number" pos:start="237:54" pos:end="237:57">0.25</literal></expr></else></ternary><operator pos:start="237:58" pos:end="237:58">)</operator>

                         <operator pos:start="239:26" pos:end="239:26">*</operator> <operator pos:start="239:28" pos:end="239:28">(</operator><name pos:start="239:29" pos:end="239:48"><name pos:start="239:29" pos:end="239:29">e</name><operator pos:start="239:30" pos:end="239:31">-&gt;</operator><name pos:start="239:32" pos:end="239:36">frame</name><operator pos:start="239:37" pos:end="239:37">.</operator><name pos:start="239:38" pos:end="239:45">fcb_gain</name><index pos:start="239:46" pos:end="239:48">[<expr pos:start="239:47" pos:end="239:47"><name pos:start="239:47" pos:end="239:47">i</name></expr>]</index></name> <operator pos:start="239:50" pos:end="239:50">+</operator> <literal type="number" pos:start="239:52" pos:end="239:52">1</literal><operator pos:start="239:53" pos:end="239:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:58"><expr pos:start="241:13" pos:end="241:57"><name pos:start="241:13" pos:end="241:19">acb_sum</name> <operator pos:start="241:21" pos:end="241:21">=</operator> <name pos:start="241:23" pos:end="241:57"><name pos:start="241:23" pos:end="241:35">pitch_gain_vq</name><index pos:start="241:36" pos:end="241:57">[<expr pos:start="241:37" pos:end="241:56"><name pos:start="241:37" pos:end="241:56"><name pos:start="241:37" pos:end="241:37">e</name><operator pos:start="241:38" pos:end="241:39">-&gt;</operator><name pos:start="241:40" pos:end="241:44">frame</name><operator pos:start="241:45" pos:end="241:45">.</operator><name pos:start="241:46" pos:end="241:53">acb_gain</name><index pos:start="241:54" pos:end="241:56">[<expr pos:start="241:55" pos:end="241:55"><name pos:start="241:55" pos:end="241:55">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:54"><expr pos:start="243:13" pos:end="243:53"><name pos:start="243:13" pos:end="243:27"><name pos:start="243:13" pos:end="243:13">e</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:27">avg_acb_gain</name></name> <operator pos:start="243:29" pos:end="243:30">+=</operator> <name pos:start="243:32" pos:end="243:38">acb_sum</name> <operator pos:start="243:40" pos:end="243:40">/</operator> <name pos:start="243:42" pos:end="243:53">NB_SUBFRAMES</name></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:48"><expr pos:start="245:13" pos:end="245:47"><name pos:start="245:13" pos:end="245:27"><name pos:start="245:13" pos:end="245:13">e</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:27">avg_fcb_gain</name></name> <operator pos:start="245:29" pos:end="245:30">+=</operator> <name pos:start="245:32" pos:end="245:32">f</name> <operator pos:start="245:34" pos:end="245:34">/</operator> <name pos:start="245:36" pos:end="245:47">NB_SUBFRAMES</name></expr>;</expr_stmt>



            <expr_stmt pos:start="249:13" pos:end="251:59"><expr pos:start="249:13" pos:end="251:58"><call pos:start="249:13" pos:end="251:58"><name pos:start="249:13" pos:end="249:26">acb_excitation</name><argument_list pos:start="249:27" pos:end="251:58">(<argument pos:start="249:28" pos:end="249:28"><expr pos:start="249:28" pos:end="249:28"><name pos:start="249:28" pos:end="249:28">e</name></expr></argument>, <argument pos:start="249:31" pos:end="249:49"><expr pos:start="249:31" pos:end="249:49"><name pos:start="249:31" pos:end="249:38"><name pos:start="249:31" pos:end="249:31">e</name><operator pos:start="249:32" pos:end="249:33">-&gt;</operator><name pos:start="249:34" pos:end="249:38">pitch</name></name> <operator pos:start="249:40" pos:end="249:40">+</operator> <name pos:start="249:42" pos:end="249:49">ACB_SIZE</name></expr></argument>,

                           <argument pos:start="251:28" pos:end="251:34"><expr pos:start="251:28" pos:end="251:34"><name pos:start="251:28" pos:end="251:34">acb_sum</name></expr></argument>, <argument pos:start="251:37" pos:end="251:42"><expr pos:start="251:37" pos:end="251:42"><name pos:start="251:37" pos:end="251:42">idelay</name></expr></argument>, <argument pos:start="251:45" pos:end="251:57"><expr pos:start="251:45" pos:end="251:57"><name pos:start="251:45" pos:end="251:57">subframe_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="255:62"><expr pos:start="253:13" pos:end="255:61"><call pos:start="253:13" pos:end="255:61"><name pos:start="253:13" pos:end="253:26">fcb_excitation</name><argument_list pos:start="253:27" pos:end="255:61">(<argument pos:start="253:28" pos:end="253:28"><expr pos:start="253:28" pos:end="253:28"><name pos:start="253:28" pos:end="253:28">e</name></expr></argument>, <argument pos:start="253:31" pos:end="253:51"><expr pos:start="253:31" pos:end="253:51"><name pos:start="253:31" pos:end="253:51"><name pos:start="253:31" pos:end="253:31">e</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:38">frame</name><operator pos:start="253:39" pos:end="253:39">.</operator><name pos:start="253:40" pos:end="253:48">fcb_shape</name><index pos:start="253:49" pos:end="253:51">[<expr pos:start="253:50" pos:end="253:50"><name pos:start="253:50" pos:end="253:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="253:54" pos:end="253:56"><expr pos:start="253:54" pos:end="253:56"><name pos:start="253:54" pos:end="253:56">tmp</name></expr></argument>,

                           <argument pos:start="255:28" pos:end="255:34"><expr pos:start="255:28" pos:end="255:34"><name pos:start="255:28" pos:end="255:34">acb_sum</name></expr></argument>, <argument pos:start="255:37" pos:end="255:45"><expr pos:start="255:37" pos:end="255:45"><name pos:start="255:37" pos:end="255:45">pitch_lag</name></expr></argument>, <argument pos:start="255:48" pos:end="255:60"><expr pos:start="255:48" pos:end="255:60"><name pos:start="255:48" pos:end="255:60">subframe_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="259:13" pos:end="259:71">/* Total excitation generation as per TIA/IS-127 5.2.3.9 */</comment>

            <for pos:start="261:13" pos:end="263:53">for <control pos:start="261:17" pos:end="261:47">(<init pos:start="261:18" pos:end="261:23"><expr pos:start="261:18" pos:end="261:22"><name pos:start="261:18" pos:end="261:18">j</name> <operator pos:start="261:20" pos:end="261:20">=</operator> <literal type="number" pos:start="261:22" pos:end="261:22">0</literal></expr>;</init> <condition pos:start="261:25" pos:end="261:42"><expr pos:start="261:25" pos:end="261:41"><name pos:start="261:25" pos:end="261:25">j</name> <operator pos:start="261:27" pos:end="261:27">&lt;</operator> <name pos:start="261:29" pos:end="261:41">subframe_size</name></expr>;</condition> <incr pos:start="261:44" pos:end="261:46"><expr pos:start="261:44" pos:end="261:46"><name pos:start="261:44" pos:end="261:44">j</name><operator pos:start="261:45" pos:end="261:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="263:17" pos:end="263:53"><block_content pos:start="263:17" pos:end="263:53">

                <expr_stmt pos:start="263:17" pos:end="263:53"><expr pos:start="263:17" pos:end="263:52"><name pos:start="263:17" pos:end="263:38"><name pos:start="263:17" pos:end="263:17">e</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:24">pitch</name><index pos:start="263:25" pos:end="263:38">[<expr pos:start="263:26" pos:end="263:37"><name pos:start="263:26" pos:end="263:33">ACB_SIZE</name> <operator pos:start="263:35" pos:end="263:35">+</operator> <name pos:start="263:37" pos:end="263:37">j</name></expr>]</index></name> <operator pos:start="263:40" pos:end="263:41">+=</operator> <name pos:start="263:43" pos:end="263:43">f</name> <operator pos:start="263:45" pos:end="263:45">*</operator> <name pos:start="263:47" pos:end="263:52"><name pos:start="263:47" pos:end="263:49">tmp</name><index pos:start="263:50" pos:end="263:52">[<expr pos:start="263:51" pos:end="263:51"><name pos:start="263:51" pos:end="263:51">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="265:13" pos:end="265:60"><expr pos:start="265:13" pos:end="265:59"><name pos:start="265:13" pos:end="265:25"><name pos:start="265:13" pos:end="265:13">e</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:25">fade_scale</name></name> <operator pos:start="265:27" pos:end="265:27">=</operator> <call pos:start="265:29" pos:end="265:59"><name pos:start="265:29" pos:end="265:33">FFMIN</name><argument_list pos:start="265:34" pos:end="265:59">(<argument pos:start="265:35" pos:end="265:53"><expr pos:start="265:35" pos:end="265:53"><name pos:start="265:35" pos:end="265:47"><name pos:start="265:35" pos:end="265:35">e</name><operator pos:start="265:36" pos:end="265:37">-&gt;</operator><name pos:start="265:38" pos:end="265:47">fade_scale</name></name> <operator pos:start="265:49" pos:end="265:49">+</operator> <literal type="number" pos:start="265:51" pos:end="265:53">0.2</literal></expr></argument>, <argument pos:start="265:56" pos:end="265:58"><expr pos:start="265:56" pos:end="265:58"><literal type="number" pos:start="265:56" pos:end="265:58">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="267:11" pos:end="273:9">else <block pos:start="267:16" pos:end="273:9">{<block_content pos:start="269:13" pos:end="271:61">

            <for pos:start="269:13" pos:end="271:61">for <control pos:start="269:17" pos:end="269:47">(<init pos:start="269:18" pos:end="269:23"><expr pos:start="269:18" pos:end="269:22"><name pos:start="269:18" pos:end="269:18">j</name> <operator pos:start="269:20" pos:end="269:20">=</operator> <literal type="number" pos:start="269:22" pos:end="269:22">0</literal></expr>;</init> <condition pos:start="269:25" pos:end="269:42"><expr pos:start="269:25" pos:end="269:41"><name pos:start="269:25" pos:end="269:25">j</name> <operator pos:start="269:27" pos:end="269:27">&lt;</operator> <name pos:start="269:29" pos:end="269:41">subframe_size</name></expr>;</condition> <incr pos:start="269:44" pos:end="269:46"><expr pos:start="269:44" pos:end="269:46"><name pos:start="269:44" pos:end="269:44">j</name><operator pos:start="269:45" pos:end="269:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="271:17" pos:end="271:61"><block_content pos:start="271:17" pos:end="271:61">

                <expr_stmt pos:start="271:17" pos:end="271:61"><expr pos:start="271:17" pos:end="271:60"><name pos:start="271:17" pos:end="271:38"><name pos:start="271:17" pos:end="271:17">e</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:24">pitch</name><index pos:start="271:25" pos:end="271:38">[<expr pos:start="271:26" pos:end="271:37"><name pos:start="271:26" pos:end="271:33">ACB_SIZE</name> <operator pos:start="271:35" pos:end="271:35">+</operator> <name pos:start="271:37" pos:end="271:37">j</name></expr>]</index></name> <operator pos:start="271:40" pos:end="271:40">=</operator> <name pos:start="271:42" pos:end="271:60"><name pos:start="271:42" pos:end="271:42">e</name><operator pos:start="271:43" pos:end="271:44">-&gt;</operator><name pos:start="271:45" pos:end="271:57">energy_vector</name><index pos:start="271:58" pos:end="271:60">[<expr pos:start="271:59" pos:end="271:59"><name pos:start="271:59" pos:end="271:59">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="277:9" pos:end="277:77"><expr pos:start="277:9" pos:end="277:76"><call pos:start="277:9" pos:end="277:76"><name pos:start="277:9" pos:end="277:14">memcpy</name><argument_list pos:start="277:15" pos:end="277:76">(<argument pos:start="277:16" pos:end="277:23"><expr pos:start="277:16" pos:end="277:23"><name pos:start="277:16" pos:end="277:23"><name pos:start="277:16" pos:end="277:16">e</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:23">pitch</name></name></expr></argument>, <argument pos:start="277:26" pos:end="277:49"><expr pos:start="277:26" pos:end="277:49"><name pos:start="277:26" pos:end="277:33"><name pos:start="277:26" pos:end="277:26">e</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:33">pitch</name></name> <operator pos:start="277:35" pos:end="277:35">+</operator> <name pos:start="277:37" pos:end="277:49">subframe_size</name></expr></argument>, <argument pos:start="277:52" pos:end="277:75"><expr pos:start="277:52" pos:end="277:75"><name pos:start="277:52" pos:end="277:59">ACB_SIZE</name> <operator pos:start="277:61" pos:end="277:61">*</operator> <sizeof pos:start="277:63" pos:end="277:75">sizeof<argument_list pos:start="277:69" pos:end="277:75">(<argument pos:start="277:70" pos:end="277:74"><expr pos:start="277:70" pos:end="277:74"><name pos:start="277:70" pos:end="277:74">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="281:9" pos:end="283:59"><expr pos:start="281:9" pos:end="283:58"><call pos:start="281:9" pos:end="283:58"><name pos:start="281:9" pos:end="281:24">synthesis_filter</name><argument_list pos:start="281:25" pos:end="283:58">(<argument pos:start="281:26" pos:end="281:44"><expr pos:start="281:26" pos:end="281:44"><name pos:start="281:26" pos:end="281:33"><name pos:start="281:26" pos:end="281:26">e</name><operator pos:start="281:27" pos:end="281:28">-&gt;</operator><name pos:start="281:29" pos:end="281:33">pitch</name></name> <operator pos:start="281:35" pos:end="281:35">+</operator> <name pos:start="281:37" pos:end="281:44">ACB_SIZE</name></expr></argument>, <argument pos:start="281:47" pos:end="281:50"><expr pos:start="281:47" pos:end="281:50"><name pos:start="281:47" pos:end="281:50">ilpc</name></expr></argument>,

                         <argument pos:start="283:26" pos:end="283:37"><expr pos:start="283:26" pos:end="283:37"><name pos:start="283:26" pos:end="283:37"><name pos:start="283:26" pos:end="283:26">e</name><operator pos:start="283:27" pos:end="283:28">-&gt;</operator><name pos:start="283:29" pos:end="283:37">synthesis</name></name></expr></argument>, <argument pos:start="283:40" pos:end="283:52"><expr pos:start="283:40" pos:end="283:52"><name pos:start="283:40" pos:end="283:52">subframe_size</name></expr></argument>, <argument pos:start="283:55" pos:end="283:57"><expr pos:start="283:55" pos:end="283:57"><name pos:start="283:55" pos:end="283:57">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="287:66"><expr pos:start="285:9" pos:end="287:65"><call pos:start="285:9" pos:end="287:65"><name pos:start="285:9" pos:end="285:18">postfilter</name><argument_list pos:start="285:19" pos:end="287:65">(<argument pos:start="285:20" pos:end="285:20"><expr pos:start="285:20" pos:end="285:20"><name pos:start="285:20" pos:end="285:20">e</name></expr></argument>, <argument pos:start="285:23" pos:end="285:25"><expr pos:start="285:23" pos:end="285:25"><name pos:start="285:23" pos:end="285:25">tmp</name></expr></argument>, <argument pos:start="285:28" pos:end="285:31"><expr pos:start="285:28" pos:end="285:31"><name pos:start="285:28" pos:end="285:31">ilpc</name></expr></argument>, <argument pos:start="285:34" pos:end="285:40"><expr pos:start="285:34" pos:end="285:40"><name pos:start="285:34" pos:end="285:40">samples</name></expr></argument>, <argument pos:start="285:43" pos:end="285:51"><expr pos:start="285:43" pos:end="285:51"><name pos:start="285:43" pos:end="285:51">pitch_lag</name></expr></argument>,

                   <argument pos:start="287:20" pos:end="287:49"><expr pos:start="287:20" pos:end="287:49"><operator pos:start="287:20" pos:end="287:20">&amp;</operator><name pos:start="287:21" pos:end="287:49"><name pos:start="287:21" pos:end="287:37">postfilter_coeffs</name><index pos:start="287:38" pos:end="287:49">[<expr pos:start="287:39" pos:end="287:48"><name pos:start="287:39" pos:end="287:48"><name pos:start="287:39" pos:end="287:39">e</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:48">bitrate</name></name></expr>]</index></name></expr></argument>, <argument pos:start="287:52" pos:end="287:64"><expr pos:start="287:52" pos:end="287:64"><name pos:start="287:52" pos:end="287:64">subframe_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="291:9" pos:end="291:33"><expr pos:start="291:9" pos:end="291:32"><name pos:start="291:9" pos:end="291:15">samples</name> <operator pos:start="291:17" pos:end="291:18">+=</operator> <name pos:start="291:20" pos:end="291:32">subframe_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="297:5" pos:end="307:5"><if pos:start="297:5" pos:end="307:5">if <condition pos:start="297:8" pos:end="297:19">(<expr pos:start="297:9" pos:end="297:18"><name pos:start="297:9" pos:end="297:18">error_flag</name></expr>)</condition> <block pos:start="297:21" pos:end="307:5">{<block_content pos:start="299:1" pos:end="305:34">

<label pos:start="299:1" pos:end="299:8"><name pos:start="299:1" pos:end="299:7">erasure</name>:</label>

        <expr_stmt pos:start="301:9" pos:end="301:23"><expr pos:start="301:9" pos:end="301:22"><name pos:start="301:9" pos:end="301:18">error_flag</name> <operator pos:start="301:20" pos:end="301:20">=</operator> <literal type="number" pos:start="301:22" pos:end="301:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:57"><expr pos:start="303:9" pos:end="303:56"><call pos:start="303:9" pos:end="303:56"><name pos:start="303:9" pos:end="303:14">av_log</name><argument_list pos:start="303:15" pos:end="303:56">(<argument pos:start="303:16" pos:end="303:20"><expr pos:start="303:16" pos:end="303:20"><name pos:start="303:16" pos:end="303:20">avctx</name></expr></argument>, <argument pos:start="303:23" pos:end="303:36"><expr pos:start="303:23" pos:end="303:36"><name pos:start="303:23" pos:end="303:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="303:39" pos:end="303:55"><expr pos:start="303:39" pos:end="303:55"><literal type="string" pos:start="303:39" pos:end="303:55">"frame erasure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:34"><expr pos:start="305:9" pos:end="305:33"><call pos:start="305:9" pos:end="305:33"><name pos:start="305:9" pos:end="305:21">frame_erasure</name><argument_list pos:start="305:22" pos:end="305:33">(<argument pos:start="305:23" pos:end="305:23"><expr pos:start="305:23" pos:end="305:23"><name pos:start="305:23" pos:end="305:23">e</name></expr></argument>, <argument pos:start="305:26" pos:end="305:32"><expr pos:start="305:26" pos:end="305:32"><name pos:start="305:26" pos:end="305:32">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="311:5" pos:end="311:56"><expr pos:start="311:5" pos:end="311:55"><call pos:start="311:5" pos:end="311:55"><name pos:start="311:5" pos:end="311:10">memcpy</name><argument_list pos:start="311:11" pos:end="311:55">(<argument pos:start="311:12" pos:end="311:23"><expr pos:start="311:12" pos:end="311:23"><name pos:start="311:12" pos:end="311:23"><name pos:start="311:12" pos:end="311:12">e</name><operator pos:start="311:13" pos:end="311:14">-&gt;</operator><name pos:start="311:15" pos:end="311:23">prev_lspf</name></name></expr></argument>, <argument pos:start="311:26" pos:end="311:32"><expr pos:start="311:26" pos:end="311:32"><name pos:start="311:26" pos:end="311:32"><name pos:start="311:26" pos:end="311:26">e</name><operator pos:start="311:27" pos:end="311:28">-&gt;</operator><name pos:start="311:29" pos:end="311:32">lspf</name></name></expr></argument>, <argument pos:start="311:35" pos:end="311:54"><expr pos:start="311:35" pos:end="311:54"><sizeof pos:start="311:35" pos:end="311:54">sizeof<argument_list pos:start="311:41" pos:end="311:54">(<argument pos:start="311:42" pos:end="311:53"><expr pos:start="311:42" pos:end="311:53"><name pos:start="311:42" pos:end="311:53"><name pos:start="311:42" pos:end="311:42">e</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:53">prev_lspf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:39"><expr pos:start="313:5" pos:end="313:38"><name pos:start="313:5" pos:end="313:22"><name pos:start="313:5" pos:end="313:5">e</name><operator pos:start="313:6" pos:end="313:7">-&gt;</operator><name pos:start="313:8" pos:end="313:22">prev_error_flag</name></name>    <operator pos:start="313:27" pos:end="313:27">=</operator> <name pos:start="313:29" pos:end="313:38">error_flag</name></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:39"><expr pos:start="315:5" pos:end="315:38"><name pos:start="315:5" pos:end="315:25"><name pos:start="315:5" pos:end="315:5">e</name><operator pos:start="315:6" pos:end="315:7">-&gt;</operator><name pos:start="315:8" pos:end="315:25">last_valid_bitrate</name></name> <operator pos:start="315:27" pos:end="315:27">=</operator> <name pos:start="315:29" pos:end="315:38"><name pos:start="315:29" pos:end="315:29">e</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:38">bitrate</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="319:5" pos:end="321:45"><if pos:start="319:5" pos:end="321:45">if <condition pos:start="319:8" pos:end="319:33">(<expr pos:start="319:9" pos:end="319:32"><name pos:start="319:9" pos:end="319:18"><name pos:start="319:9" pos:end="319:9">e</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:18">bitrate</name></name> <operator pos:start="319:20" pos:end="319:21">!=</operator> <name pos:start="319:23" pos:end="319:32">RATE_QUANT</name></expr>)</condition><block type="pseudo" pos:start="321:9" pos:end="321:45"><block_content pos:start="321:9" pos:end="321:45">

        <expr_stmt pos:start="321:9" pos:end="321:45"><expr pos:start="321:9" pos:end="321:44"><name pos:start="321:9" pos:end="321:27"><name pos:start="321:9" pos:end="321:9">e</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:27">prev_pitch_delay</name></name> <operator pos:start="321:29" pos:end="321:29">=</operator> <name pos:start="321:31" pos:end="321:44"><name pos:start="321:31" pos:end="321:31">e</name><operator pos:start="321:32" pos:end="321:33">-&gt;</operator><name pos:start="321:34" pos:end="321:44">pitch_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="325:5" pos:end="325:38"><expr pos:start="325:5" pos:end="325:37"><name pos:start="325:5" pos:end="325:11">samples</name> <operator pos:start="325:13" pos:end="325:13">=</operator> <operator pos:start="325:15" pos:end="325:15">(</operator><name pos:start="325:16" pos:end="325:20">float</name> <operator pos:start="325:22" pos:end="325:22">*</operator><operator pos:start="325:23" pos:end="325:23">)</operator><name pos:start="325:24" pos:end="325:37"><name pos:start="325:24" pos:end="325:28">frame</name><operator pos:start="325:29" pos:end="325:30">-&gt;</operator><name pos:start="325:31" pos:end="325:34">data</name><index pos:start="325:35" pos:end="325:37">[<expr pos:start="325:36" pos:end="325:36"><literal type="number" pos:start="325:36" pos:end="325:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="327:5" pos:end="329:28">for <control pos:start="327:9" pos:end="327:29">(<init pos:start="327:10" pos:end="327:15"><expr pos:start="327:10" pos:end="327:14"><name pos:start="327:10" pos:end="327:10">i</name> <operator pos:start="327:12" pos:end="327:12">=</operator> <literal type="number" pos:start="327:14" pos:end="327:14">0</literal></expr>;</init> <condition pos:start="327:17" pos:end="327:24"><expr pos:start="327:17" pos:end="327:23"><name pos:start="327:17" pos:end="327:17">i</name> <operator pos:start="327:19" pos:end="327:19">&lt;</operator> <literal type="number" pos:start="327:21" pos:end="327:23">160</literal></expr>;</condition> <incr pos:start="327:26" pos:end="327:28"><expr pos:start="327:26" pos:end="327:28"><name pos:start="327:26" pos:end="327:26">i</name><operator pos:start="327:27" pos:end="327:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="329:9" pos:end="329:28"><block_content pos:start="329:9" pos:end="329:28">

        <expr_stmt pos:start="329:9" pos:end="329:28"><expr pos:start="329:9" pos:end="329:27"><name pos:start="329:9" pos:end="329:18"><name pos:start="329:9" pos:end="329:15">samples</name><index pos:start="329:16" pos:end="329:18">[<expr pos:start="329:17" pos:end="329:17"><name pos:start="329:17" pos:end="329:17">i</name></expr>]</index></name> <operator pos:start="329:20" pos:end="329:21">/=</operator> <literal type="number" pos:start="329:23" pos:end="329:27">32768</literal></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="333:5" pos:end="333:25"><expr pos:start="333:5" pos:end="333:24"><operator pos:start="333:5" pos:end="333:5">*</operator><name pos:start="333:6" pos:end="333:18">got_frame_ptr</name>   <operator pos:start="333:22" pos:end="333:22">=</operator> <literal type="number" pos:start="333:24" pos:end="333:24">1</literal></expr>;</expr_stmt>



    <return pos:start="337:5" pos:end="337:23">return <expr pos:start="337:12" pos:end="337:22"><name pos:start="337:12" pos:end="337:22"><name pos:start="337:12" pos:end="337:16">avpkt</name><operator pos:start="337:17" pos:end="337:18">-&gt;</operator><name pos:start="337:19" pos:end="337:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
