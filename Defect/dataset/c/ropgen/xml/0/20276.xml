<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20276.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">exynos4210_fimd_reset</name><parameter_list pos:start="1:34" pos:end="1:49">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:30">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">Exynos4210fimdState</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:47">= <expr pos:start="5:30" pos:end="5:47"><call pos:start="5:30" pos:end="5:47"><name pos:start="5:30" pos:end="5:44">EXYNOS4210_FIMD</name><argument_list pos:start="5:45" pos:end="5:47">(<argument pos:start="5:46" pos:end="5:46"><expr pos:start="5:46" pos:end="5:46"><name pos:start="5:46" pos:end="5:46">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:14">w</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:47"><expr pos:start="11:5" pos:end="11:46"><call pos:start="11:5" pos:end="11:46"><name pos:start="11:5" pos:end="11:16">DPRINT_TRACE</name><argument_list pos:start="11:17" pos:end="11:46">(<argument pos:start="11:18" pos:end="11:45"><expr pos:start="11:18" pos:end="11:45"><literal type="string" pos:start="11:18" pos:end="11:45">"Display controller reset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:51">/* Set all display controller registers to 0 */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:73"><expr pos:start="15:5" pos:end="15:72"><call pos:start="15:5" pos:end="15:72"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:72">(<argument pos:start="15:12" pos:end="15:21"><expr pos:start="15:12" pos:end="15:21"><operator pos:start="15:12" pos:end="15:12">&amp;</operator><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:21">vidcon</name></name></expr></argument>, <argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr></argument>, <argument pos:start="15:27" pos:end="15:71"><expr pos:start="15:27" pos:end="15:71"><operator pos:start="15:27" pos:end="15:27">(</operator><name pos:start="15:28" pos:end="15:34">uint8_t</name> <operator pos:start="15:36" pos:end="15:36">*</operator><operator pos:start="15:37" pos:end="15:37">)</operator><operator pos:start="15:38" pos:end="15:38">&amp;</operator><name pos:start="15:39" pos:end="15:47"><name pos:start="15:39" pos:end="15:39">s</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:47">window</name></name> <operator pos:start="15:49" pos:end="15:49">-</operator> <operator pos:start="15:51" pos:end="15:51">(</operator><name pos:start="15:52" pos:end="15:58">uint8_t</name> <operator pos:start="15:60" pos:end="15:60">*</operator><operator pos:start="15:61" pos:end="15:61">)</operator><operator pos:start="15:62" pos:end="15:62">&amp;</operator><name pos:start="15:63" pos:end="15:71"><name pos:start="15:63" pos:end="15:63">s</name><operator pos:start="15:64" pos:end="15:65">-&gt;</operator><name pos:start="15:66" pos:end="15:71">vidcon</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="29:5">for <control pos:start="17:9" pos:end="17:40">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">w</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:35"><expr pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:17">w</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:34">NUM_OF_WINDOWS</name></expr>;</condition> <incr pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:37">w</name><operator pos:start="17:38" pos:end="17:39">++</operator></expr></incr>)</control> <block pos:start="17:42" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:36">

        <expr_stmt pos:start="19:9" pos:end="19:63"><expr pos:start="19:9" pos:end="19:62"><call pos:start="19:9" pos:end="19:62"><name pos:start="19:9" pos:end="19:14">memset</name><argument_list pos:start="19:15" pos:end="19:62">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><operator pos:start="19:16" pos:end="19:16">&amp;</operator><name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:25">window</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">w</name></expr>]</index></name></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></argument>, <argument pos:start="19:34" pos:end="19:61"><expr pos:start="19:34" pos:end="19:61"><sizeof pos:start="19:34" pos:end="19:61">sizeof<argument_list pos:start="19:40" pos:end="19:61">(<argument pos:start="19:41" pos:end="19:60"><expr pos:start="19:41" pos:end="19:60"><name pos:start="19:41" pos:end="19:60">Exynos4210fimdWindow</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:36"><expr pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:17">window</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">w</name></expr>]</index></name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:28">blendeq</name> <operator pos:start="21:30" pos:end="21:30">=</operator> <literal type="number" pos:start="21:32" pos:end="21:35">0xC2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><call pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:42">exynos4210_fimd_update_win_bppmode</name><argument_list pos:start="23:43" pos:end="23:48">(<argument pos:start="23:44" pos:end="23:44"><expr pos:start="23:44" pos:end="23:44"><name pos:start="23:44" pos:end="23:44">s</name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><name pos:start="23:47" pos:end="23:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:37">exynos4210_fimd_trace_bppmode</name><argument_list pos:start="25:38" pos:end="25:55">(<argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><name pos:start="25:39" pos:end="25:39">s</name></expr></argument>, <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><name pos:start="25:42" pos:end="25:42">w</name></expr></argument>, <argument pos:start="25:45" pos:end="25:54"><expr pos:start="25:45" pos:end="25:54"><literal type="number" pos:start="25:45" pos:end="25:54">0xFFFFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:29">fimd_update_get_alpha</name><argument_list pos:start="27:30" pos:end="27:35">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">ifb</name></name> <operator pos:start="33:16" pos:end="33:17">!=</operator> <name pos:start="33:19" pos:end="33:22">NULL</name></expr>)</condition> <block pos:start="33:25" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><call pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:14">g_free</name><argument_list pos:start="35:15" pos:end="35:22">(<argument pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">ifb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">ifb</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:17">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><call pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:30">exynos4210_fimd_invalidate</name><argument_list pos:start="43:31" pos:end="43:33">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><call pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:26">exynos4210_fimd_enable</name><argument_list pos:start="45:27" pos:end="45:36">(<argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">s</name></expr></argument>, <argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:53">/* Some registers have non-zero initial values */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:15">winchmap</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:28">0x7D517D51</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:19">colorgaincon</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:32">0x10040100</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:53"><expr pos:start="53:5" pos:end="53:52"><name pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:17">huecoef_cr</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>]</index></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:36">huecoef_cr</name><index pos:start="53:37" pos:end="53:39">[<expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">3</literal></expr>]</index></name> <operator pos:start="53:41" pos:end="53:41">=</operator> <literal type="number" pos:start="53:43" pos:end="53:52">0x01000100</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:17">huecoef_cb</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>]</index></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:39"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:36">huecoef_cb</name><index pos:start="55:37" pos:end="55:39">[<expr pos:start="55:38" pos:end="55:38"><literal type="number" pos:start="55:38" pos:end="55:38">3</literal></expr>]</index></name> <operator pos:start="55:41" pos:end="55:41">=</operator> <literal type="number" pos:start="55:43" pos:end="55:52">0x01000100</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:16">hueoffset</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <literal type="number" pos:start="57:20" pos:end="57:29">0x01800080</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
