<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7534.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mov_write_audio_tag</name><parameter_list pos:start="1:31" pos:end="1:66">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:44">ByteIOContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">pb</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">MOVTrack</name><modifier pos:start="1:59" pos:end="1:59">*</modifier></type> <name pos:start="1:61" pos:end="1:65">track</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:32">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">pos</name> <init pos:start="5:13" pos:end="5:27">= <expr pos:start="5:15" pos:end="5:27"><call pos:start="5:15" pos:end="5:27"><name pos:start="5:15" pos:end="5:23">url_ftell</name><argument_list pos:start="5:24" pos:end="5:27">(<argument pos:start="5:25" pos:end="5:26"><expr pos:start="5:25" pos:end="5:26"><name pos:start="5:25" pos:end="5:26">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><call pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">put_be32</name><argument_list pos:start="7:13" pos:end="7:19">(<argument pos:start="7:14" pos:end="7:15"><expr pos:start="7:14" pos:end="7:15"><name pos:start="7:14" pos:end="7:15">pb</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="7:22" pos:end="7:31">/* size */</comment>



    <if_stmt pos:start="11:5" pos:end="41:26"><if pos:start="11:5" pos:end="13:26">if<condition pos:start="11:7" pos:end="11:50">(<expr pos:start="11:8" pos:end="11:49"><name pos:start="11:8" pos:end="11:27"><name pos:start="11:8" pos:end="11:12">track</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">enc</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:27">codec_id</name></name> <operator pos:start="11:29" pos:end="11:30">==</operator> <name pos:start="11:32" pos:end="11:49">CODEC_ID_PCM_MULAW</name></expr>)</condition><block type="pseudo" pos:start="13:7" pos:end="13:26"><block_content pos:start="13:7" pos:end="13:26">

      <expr_stmt pos:start="13:7" pos:end="13:26"><expr pos:start="13:7" pos:end="13:25"><call pos:start="13:7" pos:end="13:25"><name pos:start="13:7" pos:end="13:13">put_tag</name><argument_list pos:start="13:14" pos:end="13:25">(<argument pos:start="13:15" pos:end="13:16"><expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">pb</name></expr></argument>, <argument pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:24"><literal type="string" pos:start="13:19" pos:end="13:24">"ulaw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="15:5" pos:end="17:26">else if<condition pos:start="15:12" pos:end="15:54">(<expr pos:start="15:13" pos:end="15:53"><name pos:start="15:13" pos:end="15:32"><name pos:start="15:13" pos:end="15:17">track</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:22">enc</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:32">codec_id</name></name> <operator pos:start="15:34" pos:end="15:35">==</operator> <name pos:start="15:37" pos:end="15:53">CODEC_ID_PCM_ALAW</name></expr>)</condition><block type="pseudo" pos:start="17:7" pos:end="17:26"><block_content pos:start="17:7" pos:end="17:26">

      <expr_stmt pos:start="17:7" pos:end="17:26"><expr pos:start="17:7" pos:end="17:25"><call pos:start="17:7" pos:end="17:25"><name pos:start="17:7" pos:end="17:13">put_tag</name><argument_list pos:start="17:14" pos:end="17:25">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>, <argument pos:start="17:19" pos:end="17:24"><expr pos:start="17:19" pos:end="17:24"><literal type="string" pos:start="17:19" pos:end="17:24">"alaw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="19:5" pos:end="21:26">else if<condition pos:start="19:12" pos:end="19:58">(<expr pos:start="19:13" pos:end="19:57"><name pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:17">track</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">enc</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:32">codec_id</name></name> <operator pos:start="19:34" pos:end="19:35">==</operator> <name pos:start="19:37" pos:end="19:57">CODEC_ID_ADPCM_IMA_QT</name></expr>)</condition><block type="pseudo" pos:start="21:7" pos:end="21:26"><block_content pos:start="21:7" pos:end="21:26">

      <expr_stmt pos:start="21:7" pos:end="21:26"><expr pos:start="21:7" pos:end="21:25"><call pos:start="21:7" pos:end="21:25"><name pos:start="21:7" pos:end="21:13">put_tag</name><argument_list pos:start="21:14" pos:end="21:25">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">pb</name></expr></argument>, <argument pos:start="21:19" pos:end="21:24"><expr pos:start="21:19" pos:end="21:24"><literal type="string" pos:start="21:19" pos:end="21:24">"ima4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="23:5" pos:end="25:26">else if<condition pos:start="23:12" pos:end="23:51">(<expr pos:start="23:13" pos:end="23:50"><name pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:17">track</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">enc</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:32">codec_id</name></name> <operator pos:start="23:34" pos:end="23:35">==</operator> <name pos:start="23:37" pos:end="23:50">CODEC_ID_MACE3</name></expr>)</condition><block type="pseudo" pos:start="25:7" pos:end="25:26"><block_content pos:start="25:7" pos:end="25:26">

      <expr_stmt pos:start="25:7" pos:end="25:26"><expr pos:start="25:7" pos:end="25:25"><call pos:start="25:7" pos:end="25:25"><name pos:start="25:7" pos:end="25:13">put_tag</name><argument_list pos:start="25:14" pos:end="25:25">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><literal type="string" pos:start="25:19" pos:end="25:24">"MAC3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="27:5" pos:end="29:26">else if<condition pos:start="27:12" pos:end="27:51">(<expr pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:17">track</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:22">enc</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:32">codec_id</name></name> <operator pos:start="27:34" pos:end="27:35">==</operator> <name pos:start="27:37" pos:end="27:50">CODEC_ID_MACE6</name></expr>)</condition><block type="pseudo" pos:start="29:7" pos:end="29:26"><block_content pos:start="29:7" pos:end="29:26">

      <expr_stmt pos:start="29:7" pos:end="29:26"><expr pos:start="29:7" pos:end="29:25"><call pos:start="29:7" pos:end="29:25"><name pos:start="29:7" pos:end="29:13">put_tag</name><argument_list pos:start="29:14" pos:end="29:25">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>, <argument pos:start="29:19" pos:end="29:24"><expr pos:start="29:19" pos:end="29:24"><literal type="string" pos:start="29:19" pos:end="29:24">"MAC6"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="31:5" pos:end="33:26">else if<condition pos:start="31:12" pos:end="31:49">(<expr pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:17">track</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:22">enc</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:32">codec_id</name></name> <operator pos:start="31:34" pos:end="31:35">==</operator> <name pos:start="31:37" pos:end="31:48">CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="33:7" pos:end="33:26"><block_content pos:start="33:7" pos:end="33:26">

      <expr_stmt pos:start="33:7" pos:end="33:26"><expr pos:start="33:7" pos:end="33:25"><call pos:start="33:7" pos:end="33:25"><name pos:start="33:7" pos:end="33:13">put_tag</name><argument_list pos:start="33:14" pos:end="33:25">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:24"><expr pos:start="33:19" pos:end="33:24"><literal type="string" pos:start="33:19" pos:end="33:24">"mp4a"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="35:5" pos:end="37:26">else if<condition pos:start="35:12" pos:end="35:52">(<expr pos:start="35:13" pos:end="35:51"><name pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:17">track</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">enc</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:32">codec_id</name></name> <operator pos:start="35:34" pos:end="35:35">==</operator> <name pos:start="35:37" pos:end="35:51">CODEC_ID_AMR_NB</name></expr>)</condition><block type="pseudo" pos:start="37:7" pos:end="37:26"><block_content pos:start="37:7" pos:end="37:26">

      <expr_stmt pos:start="37:7" pos:end="37:26"><expr pos:start="37:7" pos:end="37:25"><call pos:start="37:7" pos:end="37:25"><name pos:start="37:7" pos:end="37:13">put_tag</name><argument_list pos:start="37:14" pos:end="37:25">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:24"><expr pos:start="37:19" pos:end="37:24"><literal type="string" pos:start="37:19" pos:end="37:24">"samr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:26">else<block type="pseudo" pos:start="41:7" pos:end="41:26"><block_content pos:start="41:7" pos:end="41:26">

      <expr_stmt pos:start="41:7" pos:end="41:26"><expr pos:start="41:7" pos:end="41:25"><call pos:start="41:7" pos:end="41:25"><name pos:start="41:7" pos:end="41:13">put_tag</name><argument_list pos:start="41:14" pos:end="41:25">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">pb</name></expr></argument>, <argument pos:start="41:19" pos:end="41:24"><expr pos:start="41:19" pos:end="41:24"><literal type="string" pos:start="41:19" pos:end="41:24">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><call pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:12">put_be32</name><argument_list pos:start="45:13" pos:end="45:19">(<argument pos:start="45:14" pos:end="45:15"><expr pos:start="45:14" pos:end="45:15"><name pos:start="45:14" pos:end="45:15">pb</name></expr></argument>, <argument pos:start="45:18" pos:end="45:18"><expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:22" pos:end="45:35">/* Reserved */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><call pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:12">put_be16</name><argument_list pos:start="47:13" pos:end="47:19">(<argument pos:start="47:14" pos:end="47:15"><expr pos:start="47:14" pos:end="47:15"><name pos:start="47:14" pos:end="47:15">pb</name></expr></argument>, <argument pos:start="47:18" pos:end="47:18"><expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:22" pos:end="47:35">/* Reserved */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><call pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:12">put_be16</name><argument_list pos:start="49:13" pos:end="49:19">(<argument pos:start="49:14" pos:end="49:15"><expr pos:start="49:14" pos:end="49:15"><name pos:start="49:14" pos:end="49:15">pb</name></expr></argument>, <argument pos:start="49:18" pos:end="49:18"><expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:22" pos:end="49:58">/* Data-reference index, XXX  == 1 */</comment>

    <comment type="block" pos:start="51:5" pos:end="51:26">/* SoundDescription */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:20"><expr pos:start="53:5" pos:end="53:19"><call pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:12">put_be16</name><argument_list pos:start="53:13" pos:end="53:19">(<argument pos:start="53:14" pos:end="53:15"><expr pos:start="53:14" pos:end="53:15"><name pos:start="53:14" pos:end="53:15">pb</name></expr></argument>, <argument pos:start="53:18" pos:end="53:18"><expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:22" pos:end="53:34">/* Version */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><call pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:12">put_be16</name><argument_list pos:start="55:13" pos:end="55:19">(<argument pos:start="55:14" pos:end="55:15"><expr pos:start="55:14" pos:end="55:15"><name pos:start="55:14" pos:end="55:15">pb</name></expr></argument>, <argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:22" pos:end="55:41">/* Revision level */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><call pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:12">put_be32</name><argument_list pos:start="57:13" pos:end="57:19">(<argument pos:start="57:14" pos:end="57:15"><expr pos:start="57:14" pos:end="57:15"><name pos:start="57:14" pos:end="57:15">pb</name></expr></argument>, <argument pos:start="57:18" pos:end="57:18"><expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:22" pos:end="57:35">/* Reserved */</comment>



    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:12">put_be16</name><argument_list pos:start="61:13" pos:end="61:38">(<argument pos:start="61:14" pos:end="61:15"><expr pos:start="61:14" pos:end="61:15"><name pos:start="61:14" pos:end="61:15">pb</name></expr></argument>, <argument pos:start="61:18" pos:end="61:37"><expr pos:start="61:18" pos:end="61:37"><name pos:start="61:18" pos:end="61:37"><name pos:start="61:18" pos:end="61:22">track</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:27">enc</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:37">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:41" pos:end="61:64">/* Number of channels */</comment>

    <comment type="block" pos:start="63:5" pos:end="65:67">/* TODO: Currently hard-coded to 16-bit, there doesn't seem

                 to be a good way to get number of bits of audio */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><call pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:12">put_be16</name><argument_list pos:start="67:13" pos:end="67:22">(<argument pos:start="67:14" pos:end="67:15"><expr pos:start="67:14" pos:end="67:15"><name pos:start="67:14" pos:end="67:15">pb</name></expr></argument>, <argument pos:start="67:18" pos:end="67:21"><expr pos:start="67:18" pos:end="67:21"><literal type="number" pos:start="67:18" pos:end="67:21">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:25" pos:end="67:38">/* Reserved */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><call pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:12">put_be16</name><argument_list pos:start="69:13" pos:end="69:19">(<argument pos:start="69:14" pos:end="69:15"><expr pos:start="69:14" pos:end="69:15"><name pos:start="69:14" pos:end="69:15">pb</name></expr></argument>, <argument pos:start="69:18" pos:end="69:18"><expr pos:start="69:18" pos:end="69:18"><literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:22" pos:end="69:47">/* compression ID (= 0) */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><call pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:12">put_be16</name><argument_list pos:start="71:13" pos:end="71:19">(<argument pos:start="71:14" pos:end="71:15"><expr pos:start="71:14" pos:end="71:15"><name pos:start="71:14" pos:end="71:15">pb</name></expr></argument>, <argument pos:start="71:18" pos:end="71:18"><expr pos:start="71:18" pos:end="71:18"><literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:22" pos:end="71:44">/* packet size (= 0) */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><call pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:12">put_be16</name><argument_list pos:start="73:13" pos:end="73:34">(<argument pos:start="73:14" pos:end="73:15"><expr pos:start="73:14" pos:end="73:15"><name pos:start="73:14" pos:end="73:15">pb</name></expr></argument>, <argument pos:start="73:18" pos:end="73:33"><expr pos:start="73:18" pos:end="73:33"><name pos:start="73:18" pos:end="73:33"><name pos:start="73:18" pos:end="73:22">track</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:33">timescale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:37" pos:end="73:52">/* Time scale */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:20"><expr pos:start="75:5" pos:end="75:19"><call pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:12">put_be16</name><argument_list pos:start="75:13" pos:end="75:19">(<argument pos:start="75:14" pos:end="75:15"><expr pos:start="75:14" pos:end="75:15"><name pos:start="75:14" pos:end="75:15">pb</name></expr></argument>, <argument pos:start="75:18" pos:end="75:18"><expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:22" pos:end="75:35">/* Reserved */</comment>



    <if_stmt pos:start="79:5" pos:end="81:38"><if pos:start="79:5" pos:end="81:38">if<condition pos:start="79:7" pos:end="79:44">(<expr pos:start="79:8" pos:end="79:43"><name pos:start="79:8" pos:end="79:27"><name pos:start="79:8" pos:end="79:12">track</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:17">enc</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:27">codec_id</name></name> <operator pos:start="79:29" pos:end="79:30">==</operator> <name pos:start="79:32" pos:end="79:43">CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:38"><block_content pos:start="81:9" pos:end="81:38">

        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><call pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:26">mov_write_esds_tag</name><argument_list pos:start="81:27" pos:end="81:37">(<argument pos:start="81:28" pos:end="81:29"><expr pos:start="81:28" pos:end="81:29"><name pos:start="81:28" pos:end="81:29">pb</name></expr></argument>, <argument pos:start="81:32" pos:end="81:36"><expr pos:start="81:32" pos:end="81:36"><name pos:start="81:32" pos:end="81:36">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="85:31"><if pos:start="83:5" pos:end="85:31">if<condition pos:start="83:7" pos:end="83:47">(<expr pos:start="83:8" pos:end="83:46"><name pos:start="83:8" pos:end="83:27"><name pos:start="83:8" pos:end="83:12">track</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:17">enc</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:27">codec_id</name></name> <operator pos:start="83:29" pos:end="83:30">==</operator> <name pos:start="83:32" pos:end="83:46">CODEC_ID_AMR_NB</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:31"><block_content pos:start="85:9" pos:end="85:31">

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><call pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:26">mov_write_damr_tag</name><argument_list pos:start="85:27" pos:end="85:30">(<argument pos:start="85:28" pos:end="85:29"><expr pos:start="85:28" pos:end="85:29"><name pos:start="85:28" pos:end="85:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="87:5" pos:end="87:32">return <expr pos:start="87:12" pos:end="87:31"><call pos:start="87:12" pos:end="87:31"><name pos:start="87:12" pos:end="87:21">updateSize</name> <argument_list pos:start="87:23" pos:end="87:31">(<argument pos:start="87:24" pos:end="87:25"><expr pos:start="87:24" pos:end="87:25"><name pos:start="87:24" pos:end="87:25">pb</name></expr></argument>, <argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">pos</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
