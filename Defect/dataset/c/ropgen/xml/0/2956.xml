<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2956.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">nuv_header</name><parameter_list pos:start="1:22" pos:end="1:41">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NUVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ctx</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:18">id_string</name><index pos:start="9:19" pos:end="9:22">[<expr pos:start="9:20" pos:end="9:21"><literal type="number" pos:start="9:20" pos:end="9:21">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:17">aspect</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:20" pos:end="11:22">fps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">is_mythtv</name></decl>, <decl pos:start="13:20" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:24">width</name></decl>, <decl pos:start="13:27" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:32">height</name></decl>, <decl pos:start="13:35" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:35" pos:end="13:41">v_packs</name></decl>, <decl pos:start="13:44" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:50">a_packs</name></decl>, <decl pos:start="13:53" pos:end="13:55"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:53" pos:end="13:55">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVStream</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">vst</name> <init pos:start="15:19" pos:end="15:24">= <expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">NULL</name></expr></init></decl>, <decl pos:start="15:27" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:14"><modifier pos:start="15:27" pos:end="15:27">*</modifier></type><name pos:start="15:28" pos:end="15:30">ast</name> <init pos:start="15:32" pos:end="15:37">= <expr pos:start="15:34" pos:end="15:37"><name pos:start="15:34" pos:end="15:37">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:13">avio_read</name><argument_list pos:start="19:14" pos:end="19:32">(<argument pos:start="19:15" pos:end="19:16"><expr pos:start="19:15" pos:end="19:16"><name pos:start="19:15" pos:end="19:16">pb</name></expr></argument>, <argument pos:start="19:19" pos:end="19:27"><expr pos:start="19:19" pos:end="19:27"><name pos:start="19:19" pos:end="19:27">id_string</name></expr></argument>, <argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><literal type="number" pos:start="19:30" pos:end="19:31">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:13">is_mythtv</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">!</operator><call pos:start="21:18" pos:end="21:53"><name pos:start="21:18" pos:end="21:23">memcmp</name><argument_list pos:start="21:24" pos:end="21:53">(<argument pos:start="21:25" pos:end="21:33"><expr pos:start="21:25" pos:end="21:33"><name pos:start="21:25" pos:end="21:33">id_string</name></expr></argument>, <argument pos:start="21:36" pos:end="21:48"><expr pos:start="21:36" pos:end="21:48"><literal type="string" pos:start="21:36" pos:end="21:48">"MythTVVideo"</literal></expr></argument>, <argument pos:start="21:51" pos:end="21:52"><expr pos:start="21:51" pos:end="21:52"><literal type="number" pos:start="21:51" pos:end="21:52">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:13">avio_skip</name><argument_list pos:start="23:14" pos:end="23:20">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">pb</name></expr></argument>, <argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="23:29" pos:end="23:45">// version string</comment>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><call pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:13">avio_skip</name><argument_list pos:start="25:14" pos:end="25:20">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="25:29" pos:end="25:38">// padding</comment>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:9">width</name>  <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:26"><name pos:start="27:14" pos:end="27:22">avio_rl32</name><argument_list pos:start="27:23" pos:end="27:26">(<argument pos:start="27:24" pos:end="27:25"><expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:10">height</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:22">avio_rl32</name><argument_list pos:start="29:23" pos:end="29:26">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><call pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:13">avio_rl32</name><argument_list pos:start="31:14" pos:end="31:17">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="31:29" pos:end="31:53">// unused, "desiredwidth"</comment>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13">avio_rl32</name><argument_list pos:start="33:14" pos:end="33:17">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="33:29" pos:end="33:54">// unused, "desiredheight"</comment>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><call pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:11">avio_r8</name><argument_list pos:start="35:12" pos:end="35:15">(<argument pos:start="35:13" pos:end="35:14"><expr pos:start="35:13" pos:end="35:14"><name pos:start="35:13" pos:end="35:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="line" pos:start="35:29" pos:end="35:68">// 'P' == progressive, 'I' == interlaced</comment>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><call pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:13">avio_skip</name><argument_list pos:start="37:14" pos:end="37:20">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="37:29" pos:end="37:38">// padding</comment>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:10">aspect</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:41"><name pos:start="39:14" pos:end="39:26">av_int2double</name><argument_list pos:start="39:27" pos:end="39:41">(<argument pos:start="39:28" pos:end="39:40"><expr pos:start="39:28" pos:end="39:40"><call pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:36">avio_rl64</name><argument_list pos:start="39:37" pos:end="39:40">(<argument pos:start="39:38" pos:end="39:39"><expr pos:start="39:38" pos:end="39:39"><name pos:start="39:38" pos:end="39:39">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:27"><if pos:start="41:5" pos:end="43:27">if <condition pos:start="41:8" pos:end="41:43">(<expr pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:14">aspect</name> <operator pos:start="41:16" pos:end="41:16">&gt;</operator> <literal type="number" pos:start="41:18" pos:end="41:23">0.9999</literal> <operator pos:start="41:25" pos:end="41:26">&amp;&amp;</operator> <name pos:start="41:28" pos:end="41:33">aspect</name> <operator pos:start="41:35" pos:end="41:35">&lt;</operator> <literal type="number" pos:start="41:37" pos:end="41:42">1.0001</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:27"><block_content pos:start="43:9" pos:end="43:27">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:14">aspect</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:20">4.0</literal> <operator pos:start="43:22" pos:end="43:22">/</operator> <literal type="number" pos:start="43:24" pos:end="43:26">3.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:7">fps</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:38"><name pos:start="45:11" pos:end="45:23">av_int2double</name><argument_list pos:start="45:24" pos:end="45:38">(<argument pos:start="45:25" pos:end="45:37"><expr pos:start="45:25" pos:end="45:37"><call pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:33">avio_rl64</name><argument_list pos:start="45:34" pos:end="45:37">(<argument pos:start="45:35" pos:end="45:36"><expr pos:start="45:35" pos:end="45:36"><name pos:start="45:35" pos:end="45:36">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="63:5"><if pos:start="47:5" pos:end="63:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">fps</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:18">0.0f</literal></expr>)</condition> <block pos:start="47:21" pos:end="63:5">{<block_content pos:start="49:9" pos:end="61:9">

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:32">error_recognition</name></name> <operator pos:start="49:34" pos:end="49:34">&amp;</operator> <name pos:start="49:36" pos:end="49:48">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="49:51" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:39">

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><call pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:67">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:61"><expr pos:start="51:37" pos:end="51:61"><literal type="string" pos:start="51:37" pos:end="51:61">"Invalid frame rate %f\n"</literal></expr></argument>, <argument pos:start="51:64" pos:end="51:66"><expr pos:start="51:64" pos:end="51:66"><name pos:start="51:64" pos:end="51:66">fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:39">return <expr pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="61:9">else <block pos:start="55:16" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:23">

            <expr_stmt pos:start="57:13" pos:end="57:85"><expr pos:start="57:13" pos:end="57:84"><call pos:start="57:13" pos:end="57:84"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:84">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:36"><expr pos:start="57:23" pos:end="57:36"><name pos:start="57:23" pos:end="57:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="57:39" pos:end="57:78"><expr pos:start="57:39" pos:end="57:78"><literal type="string" pos:start="57:39" pos:end="57:78">"Invalid frame rate %f, setting to 0.\n"</literal></expr></argument>, <argument pos:start="57:81" pos:end="57:83"><expr pos:start="57:81" pos:end="57:83"><name pos:start="57:81" pos:end="57:83">fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:23"><expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:15">fps</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:22">0.0f</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="67:5" pos:end="67:74">// number of packets per stream type, -1 means unknown, e.g. streaming</comment>

    <expr_stmt pos:start="69:5" pos:end="69:28"><expr pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:11">v_packs</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:27"><name pos:start="69:15" pos:end="69:23">avio_rl32</name><argument_list pos:start="69:24" pos:end="69:27">(<argument pos:start="69:25" pos:end="69:26"><expr pos:start="69:25" pos:end="69:26"><name pos:start="69:25" pos:end="69:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:11">a_packs</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:27"><name pos:start="71:15" pos:end="71:23">avio_rl32</name><argument_list pos:start="71:24" pos:end="71:27">(<argument pos:start="71:25" pos:end="71:26"><expr pos:start="71:25" pos:end="71:26"><name pos:start="71:25" pos:end="71:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:18"><expr pos:start="73:5" pos:end="73:17"><call pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:13">avio_rl32</name><argument_list pos:start="73:14" pos:end="73:17">(<argument pos:start="73:15" pos:end="73:16"><expr pos:start="73:15" pos:end="73:16"><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="73:20" pos:end="73:26">// text</comment>



    <expr_stmt pos:start="77:5" pos:end="77:18"><expr pos:start="77:5" pos:end="77:17"><call pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:13">avio_rl32</name><argument_list pos:start="77:14" pos:end="77:17">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="77:20" pos:end="77:43">// keyframe distance (?)</comment>



    <if_stmt pos:start="81:5" pos:end="127:23"><if pos:start="81:5" pos:end="125:5">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:15">v_packs</name></expr>)</condition> <block pos:start="81:18" pos:end="125:5">{<block_content pos:start="83:9" pos:end="123:46">

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:11">vst</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:42"><name pos:start="83:15" pos:end="83:33">avformat_new_stream</name><argument_list pos:start="83:34" pos:end="83:42">(<argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">s</name></expr></argument>, <argument pos:start="83:38" pos:end="83:41"><expr pos:start="83:38" pos:end="83:41"><name pos:start="83:38" pos:end="83:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:35"><if pos:start="85:9" pos:end="87:35">if <condition pos:start="85:12" pos:end="85:17">(<expr pos:start="85:13" pos:end="85:16"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:16">vst</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:35"><block_content pos:start="87:13" pos:end="87:35">

            <return pos:start="87:13" pos:end="87:35">return <expr pos:start="87:20" pos:end="87:34"><call pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:26">AVERROR</name><argument_list pos:start="87:27" pos:end="87:34">(<argument pos:start="87:28" pos:end="87:33"><expr pos:start="87:28" pos:end="87:33"><name pos:start="87:28" pos:end="87:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:31"><expr pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:11">ctx</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:17">v_id</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:23">vst</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:30">index</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:54"><name pos:start="93:15" pos:end="93:33">av_image_check_size</name><argument_list pos:start="93:34" pos:end="93:54">(<argument pos:start="93:35" pos:end="93:39"><expr pos:start="93:35" pos:end="93:39"><name pos:start="93:35" pos:end="93:39">width</name></expr></argument>, <argument pos:start="93:42" pos:end="93:47"><expr pos:start="93:42" pos:end="93:47"><name pos:start="93:42" pos:end="93:47">height</name></expr></argument>, <argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><literal type="number" pos:start="93:50" pos:end="93:50">0</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:53"><expr pos:start="93:53" pos:end="93:53"><name pos:start="93:53" pos:end="93:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:23"><if pos:start="95:9" pos:end="97:23">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:23"><block_content pos:start="97:13" pos:end="97:23">

            <return pos:start="97:13" pos:end="97:23">return <expr pos:start="97:20" pos:end="97:22"><name pos:start="97:20" pos:end="97:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:66"><expr pos:start="101:9" pos:end="101:65"><name pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:11">vst</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:21">codecpar</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:33">codec_type</name></name>            <operator pos:start="101:46" pos:end="101:46">=</operator> <name pos:start="101:48" pos:end="101:65">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:63"><expr pos:start="103:9" pos:end="103:62"><name pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:11">vst</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:21">codecpar</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:31">codec_id</name></name>              <operator pos:start="103:46" pos:end="103:46">=</operator> <name pos:start="103:48" pos:end="103:62">AV_CODEC_ID_NUV</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:53"><expr pos:start="105:9" pos:end="105:52"><name pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:11">vst</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:21">codecpar</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:28">width</name></name>                 <operator pos:start="105:46" pos:end="105:46">=</operator> <name pos:start="105:48" pos:end="105:52">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:54"><expr pos:start="107:9" pos:end="107:53"><name pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:11">vst</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:21">codecpar</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:29">height</name></name>                <operator pos:start="107:46" pos:end="107:46">=</operator> <name pos:start="107:48" pos:end="107:53">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:50"><expr pos:start="109:9" pos:end="109:49"><name pos:start="109:9" pos:end="109:44"><name pos:start="109:9" pos:end="109:11">vst</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:21">codecpar</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:44">bits_per_coded_sample</name></name> <operator pos:start="109:46" pos:end="109:46">=</operator> <literal type="number" pos:start="109:48" pos:end="109:49">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="116:0"><expr pos:start="111:9" pos:end="113:57"><name pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:11">vst</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:32">sample_aspect_ratio</name></name>          <operator pos:start="111:43" pos:end="111:43">=</operator> <call pos:start="111:45" pos:end="113:57"><name pos:start="111:45" pos:end="111:50">av_d2q</name><argument_list pos:start="111:51" pos:end="113:57">(<argument pos:start="111:52" pos:end="111:74"><expr pos:start="111:52" pos:end="111:74"><name pos:start="111:52" pos:end="111:57">aspect</name> <operator pos:start="111:59" pos:end="111:59">*</operator> <name pos:start="111:61" pos:end="111:66">height</name> <operator pos:start="111:68" pos:end="111:68">/</operator> <name pos:start="111:70" pos:end="111:74">width</name></expr></argument>,

                                                   <argument pos:start="113:52" pos:end="113:56"><expr pos:start="113:52" pos:end="113:56"><literal type="number" pos:start="113:52" pos:end="113:56">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="115:1" pos:end="115:23">#<cpp:directive pos:start="115:2" pos:end="115:3">if</cpp:directive> <expr pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:23">FF_API_R_FRAME_RATE</name></expr></cpp:if>

        <expr_stmt pos:start="117:9" pos:end="121:49"><expr pos:start="117:9" pos:end="121:48"><name pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:11">vst</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:25">r_frame_rate</name></name> <operator pos:start="117:27" pos:end="120:0">=</operator>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

        <name pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:11">vst</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:27">avg_frame_rate</name></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <call pos:start="121:31" pos:end="121:48"><name pos:start="121:31" pos:end="121:36">av_d2q</name><argument_list pos:start="121:37" pos:end="121:48">(<argument pos:start="121:38" pos:end="121:40"><expr pos:start="121:38" pos:end="121:40"><name pos:start="121:38" pos:end="121:40">fps</name></expr></argument>, <argument pos:start="121:43" pos:end="121:47"><expr pos:start="121:43" pos:end="121:47"><literal type="number" pos:start="121:43" pos:end="121:47">60000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:46"><expr pos:start="123:9" pos:end="123:45"><call pos:start="123:9" pos:end="123:45"><name pos:start="123:9" pos:end="123:27">avpriv_set_pts_info</name><argument_list pos:start="123:28" pos:end="123:45">(<argument pos:start="123:29" pos:end="123:31"><expr pos:start="123:29" pos:end="123:31"><name pos:start="123:29" pos:end="123:31">vst</name></expr></argument>, <argument pos:start="123:34" pos:end="123:35"><expr pos:start="123:34" pos:end="123:35"><literal type="number" pos:start="123:34" pos:end="123:35">32</literal></expr></argument>, <argument pos:start="123:38" pos:end="123:38"><expr pos:start="123:38" pos:end="123:38"><literal type="number" pos:start="123:38" pos:end="123:38">1</literal></expr></argument>, <argument pos:start="123:41" pos:end="123:44"><expr pos:start="123:41" pos:end="123:44"><literal type="number" pos:start="123:41" pos:end="123:44">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="127:23">else<block type="pseudo" pos:start="127:9" pos:end="127:23"><block_content pos:start="127:9" pos:end="127:23">

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:11">ctx</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:17">v_id</name></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <operator pos:start="127:21" pos:end="127:21">-</operator><literal type="number" pos:start="127:22" pos:end="127:22">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="131:5" pos:end="163:23"><if pos:start="131:5" pos:end="161:5">if <condition pos:start="131:8" pos:end="131:16">(<expr pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:15">a_packs</name></expr>)</condition> <block pos:start="131:18" pos:end="161:5">{<block_content pos:start="133:9" pos:end="159:46">

        <expr_stmt pos:start="133:9" pos:end="133:43"><expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:11">ast</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:42"><name pos:start="133:15" pos:end="133:33">avformat_new_stream</name><argument_list pos:start="133:34" pos:end="133:42">(<argument pos:start="133:35" pos:end="133:35"><expr pos:start="133:35" pos:end="133:35"><name pos:start="133:35" pos:end="133:35">s</name></expr></argument>, <argument pos:start="133:38" pos:end="133:41"><expr pos:start="133:38" pos:end="133:41"><name pos:start="133:38" pos:end="133:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="137:35"><if pos:start="135:9" pos:end="137:35">if <condition pos:start="135:12" pos:end="135:17">(<expr pos:start="135:13" pos:end="135:16"><operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:16">ast</name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:35"><block_content pos:start="137:13" pos:end="137:35">

            <return pos:start="137:13" pos:end="137:35">return <expr pos:start="137:20" pos:end="137:34"><call pos:start="137:20" pos:end="137:34"><name pos:start="137:20" pos:end="137:26">AVERROR</name><argument_list pos:start="137:27" pos:end="137:34">(<argument pos:start="137:28" pos:end="137:33"><expr pos:start="137:28" pos:end="137:33"><name pos:start="137:28" pos:end="137:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:31"><expr pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:17"><name pos:start="139:9" pos:end="139:11">ctx</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:17">a_id</name></name> <operator pos:start="139:19" pos:end="139:19">=</operator> <name pos:start="139:21" pos:end="139:30"><name pos:start="139:21" pos:end="139:23">ast</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:30">index</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:66"><expr pos:start="143:9" pos:end="143:65"><name pos:start="143:9" pos:end="143:33"><name pos:start="143:9" pos:end="143:11">ast</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:21">codecpar</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:33">codec_type</name></name>            <operator pos:start="143:46" pos:end="143:46">=</operator> <name pos:start="143:48" pos:end="143:65">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:69"><expr pos:start="145:9" pos:end="145:68"><name pos:start="145:9" pos:end="145:31"><name pos:start="145:9" pos:end="145:11">ast</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:21">codecpar</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:31">codec_id</name></name>              <operator pos:start="145:46" pos:end="145:46">=</operator> <name pos:start="145:48" pos:end="145:68">AV_CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:49"><expr pos:start="147:9" pos:end="147:48"><name pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:11">ast</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:21">codecpar</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:31">channels</name></name>              <operator pos:start="147:46" pos:end="147:46">=</operator> <literal type="number" pos:start="147:48" pos:end="147:48">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:67"><expr pos:start="149:9" pos:end="149:66"><name pos:start="149:9" pos:end="149:37"><name pos:start="149:9" pos:end="149:11">ast</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:21">codecpar</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:37">channel_layout</name></name>        <operator pos:start="149:46" pos:end="149:46">=</operator> <name pos:start="149:48" pos:end="149:66">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:53"><expr pos:start="151:9" pos:end="151:52"><name pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:11">ast</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:21">codecpar</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:34">sample_rate</name></name>           <operator pos:start="151:46" pos:end="151:46">=</operator> <literal type="number" pos:start="151:48" pos:end="151:52">44100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:65"><expr pos:start="153:9" pos:end="153:64"><name pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:11">ast</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:21">codecpar</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:31">bit_rate</name></name>              <operator pos:start="153:46" pos:end="153:46">=</operator> <literal type="number" pos:start="153:48" pos:end="153:48">2</literal> <operator pos:start="153:50" pos:end="153:50">*</operator> <literal type="number" pos:start="153:52" pos:end="153:52">2</literal> <operator pos:start="153:54" pos:end="153:54">*</operator> <literal type="number" pos:start="153:56" pos:end="153:60">44100</literal> <operator pos:start="153:62" pos:end="153:62">*</operator> <literal type="number" pos:start="153:64" pos:end="153:64">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:53"><expr pos:start="155:9" pos:end="155:52"><name pos:start="155:9" pos:end="155:34"><name pos:start="155:9" pos:end="155:11">ast</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:21">codecpar</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:34">block_align</name></name>           <operator pos:start="155:46" pos:end="155:46">=</operator> <literal type="number" pos:start="155:48" pos:end="155:48">2</literal> <operator pos:start="155:50" pos:end="155:50">*</operator> <literal type="number" pos:start="155:52" pos:end="155:52">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:50"><expr pos:start="157:9" pos:end="157:49"><name pos:start="157:9" pos:end="157:44"><name pos:start="157:9" pos:end="157:11">ast</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:21">codecpar</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:44">bits_per_coded_sample</name></name> <operator pos:start="157:46" pos:end="157:46">=</operator> <literal type="number" pos:start="157:48" pos:end="157:49">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:46"><expr pos:start="159:9" pos:end="159:45"><call pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:27">avpriv_set_pts_info</name><argument_list pos:start="159:28" pos:end="159:45">(<argument pos:start="159:29" pos:end="159:31"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">ast</name></expr></argument>, <argument pos:start="159:34" pos:end="159:35"><expr pos:start="159:34" pos:end="159:35"><literal type="number" pos:start="159:34" pos:end="159:35">32</literal></expr></argument>, <argument pos:start="159:38" pos:end="159:38"><expr pos:start="159:38" pos:end="159:38"><literal type="number" pos:start="159:38" pos:end="159:38">1</literal></expr></argument>, <argument pos:start="159:41" pos:end="159:44"><expr pos:start="159:41" pos:end="159:44"><literal type="number" pos:start="159:41" pos:end="159:44">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="163:23">else<block type="pseudo" pos:start="163:9" pos:end="163:23"><block_content pos:start="163:9" pos:end="163:23">

        <expr_stmt pos:start="163:9" pos:end="163:23"><expr pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:11">ctx</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:17">a_id</name></name> <operator pos:start="163:19" pos:end="163:19">=</operator> <operator pos:start="163:21" pos:end="163:21">-</operator><literal type="number" pos:start="163:22" pos:end="163:22">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="167:5" pos:end="169:19"><if pos:start="167:5" pos:end="169:19">if <condition pos:start="167:8" pos:end="167:60">(<expr pos:start="167:9" pos:end="167:59"><operator pos:start="167:9" pos:end="167:9">(</operator><name pos:start="167:10" pos:end="167:12">ret</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <call pos:start="167:16" pos:end="167:54"><name pos:start="167:16" pos:end="167:29">get_codec_data</name><argument_list pos:start="167:30" pos:end="167:54">(<argument pos:start="167:31" pos:end="167:32"><expr pos:start="167:31" pos:end="167:32"><name pos:start="167:31" pos:end="167:32">pb</name></expr></argument>, <argument pos:start="167:35" pos:end="167:37"><expr pos:start="167:35" pos:end="167:37"><name pos:start="167:35" pos:end="167:37">vst</name></expr></argument>, <argument pos:start="167:40" pos:end="167:42"><expr pos:start="167:40" pos:end="167:42"><name pos:start="167:40" pos:end="167:42">ast</name></expr></argument>, <argument pos:start="167:45" pos:end="167:53"><expr pos:start="167:45" pos:end="167:53"><name pos:start="167:45" pos:end="167:53">is_mythtv</name></expr></argument>)</argument_list></call><operator pos:start="167:55" pos:end="167:55">)</operator> <operator pos:start="167:57" pos:end="167:57">&lt;</operator> <literal type="number" pos:start="167:59" pos:end="167:59">0</literal></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:19"><block_content pos:start="169:9" pos:end="169:19">

        <return pos:start="169:9" pos:end="169:19">return <expr pos:start="169:16" pos:end="169:18"><name pos:start="169:16" pos:end="169:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:73"><expr pos:start="173:5" pos:end="173:72"><name pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:7">ctx</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:20">rtjpg_video</name></name> <operator pos:start="173:22" pos:end="173:22">=</operator> <name pos:start="173:24" pos:end="173:26">vst</name> <operator pos:start="173:28" pos:end="173:29">&amp;&amp;</operator> <name pos:start="173:31" pos:end="173:53"><name pos:start="173:31" pos:end="173:33">vst</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:43">codecpar</name><operator pos:start="173:44" pos:end="173:45">-&gt;</operator><name pos:start="173:46" pos:end="173:53">codec_id</name></name> <operator pos:start="173:55" pos:end="173:56">==</operator> <name pos:start="173:58" pos:end="173:72">AV_CODEC_ID_NUV</name></expr>;</expr_stmt>



    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
