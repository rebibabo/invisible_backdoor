<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16810.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">rtsp_close_streams</name><parameter_list pos:start="1:31" pos:end="1:45">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:40">RTSPState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">rt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:28">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">RTSPStream</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">rtsp_st</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="39:5">for<control pos:start="11:8" pos:end="11:38">(<init pos:start="11:9" pos:end="11:12"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">i</name><operator pos:start="11:10" pos:end="11:10">=</operator><literal type="number" pos:start="11:11" pos:end="11:11">0</literal></expr>;</init><condition pos:start="11:13" pos:end="11:34"><expr pos:start="11:13" pos:end="11:33"><name pos:start="11:13" pos:end="11:13">i</name><operator pos:start="11:14" pos:end="11:14">&lt;</operator><name pos:start="11:15" pos:end="11:33"><name pos:start="11:15" pos:end="11:16">rt</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:33">nb_rtsp_streams</name></name></expr>;</condition><incr pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:35">i</name><operator pos:start="11:36" pos:end="11:37">++</operator></expr></incr>)</control> <block pos:start="11:40" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:15">rtsp_st</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:37"><name pos:start="13:19" pos:end="13:20">rt</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:34">rtsp_streams</name><index pos:start="13:35" pos:end="13:37">[<expr pos:start="13:36" pos:end="13:36"><name pos:start="13:36" pos:end="13:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="37:9"><if pos:start="15:9" pos:end="37:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:19">rtsp_st</name></expr>)</condition> <block pos:start="15:22" pos:end="37:9">{<block_content pos:start="17:13" pos:end="35:83">

            <if_stmt pos:start="17:13" pos:end="27:13"><if pos:start="17:13" pos:end="27:13">if <condition pos:start="17:16" pos:end="17:40">(<expr pos:start="17:17" pos:end="17:39"><name pos:start="17:17" pos:end="17:39"><name pos:start="17:17" pos:end="17:23">rtsp_st</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:39">transport_priv</name></name></expr>)</condition> <block pos:start="17:42" pos:end="27:13">{<block_content pos:start="19:17" pos:end="25:61">

                <if_stmt pos:start="19:17" pos:end="25:61"><if pos:start="19:17" pos:end="21:64">if <condition pos:start="19:20" pos:end="19:56">(<expr pos:start="19:21" pos:end="19:55"><name pos:start="19:21" pos:end="19:33"><name pos:start="19:21" pos:end="19:22">rt</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:33">transport</name></name> <operator pos:start="19:35" pos:end="19:36">==</operator> <name pos:start="19:38" pos:end="19:55">RTSP_TRANSPORT_RDT</name></expr>)</condition><block type="pseudo" pos:start="21:21" pos:end="21:64"><block_content pos:start="21:21" pos:end="21:64">

                    <expr_stmt pos:start="21:21" pos:end="21:64"><expr pos:start="21:21" pos:end="21:63"><call pos:start="21:21" pos:end="21:63"><name pos:start="21:21" pos:end="21:38">ff_rdt_parse_close</name><argument_list pos:start="21:39" pos:end="21:63">(<argument pos:start="21:40" pos:end="21:62"><expr pos:start="21:40" pos:end="21:62"><name pos:start="21:40" pos:end="21:62"><name pos:start="21:40" pos:end="21:46">rtsp_st</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:62">transport_priv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="23:17" pos:end="25:61">else<block type="pseudo" pos:start="25:21" pos:end="25:61"><block_content pos:start="25:21" pos:end="25:61">

                    <expr_stmt pos:start="25:21" pos:end="25:61"><expr pos:start="25:21" pos:end="25:60"><call pos:start="25:21" pos:end="25:60"><name pos:start="25:21" pos:end="25:35">rtp_parse_close</name><argument_list pos:start="25:36" pos:end="25:60">(<argument pos:start="25:37" pos:end="25:59"><expr pos:start="25:37" pos:end="25:59"><name pos:start="25:37" pos:end="25:59"><name pos:start="25:37" pos:end="25:43">rtsp_st</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:59">transport_priv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="29:13" pos:end="31:47"><if pos:start="29:13" pos:end="31:47">if <condition pos:start="29:16" pos:end="29:36">(<expr pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:23">rtsp_st</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:35">rtp_handle</name></name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:47"><block_content pos:start="31:17" pos:end="31:47">

                <expr_stmt pos:start="31:17" pos:end="31:47"><expr pos:start="31:17" pos:end="31:46"><call pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:25">url_close</name><argument_list pos:start="31:26" pos:end="31:46">(<argument pos:start="31:27" pos:end="31:45"><expr pos:start="31:27" pos:end="31:45"><name pos:start="31:27" pos:end="31:45"><name pos:start="31:27" pos:end="31:33">rtsp_st</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:45">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="33:13" pos:end="35:83"><if pos:start="33:13" pos:end="35:83">if <condition pos:start="33:16" pos:end="33:78">(<expr pos:start="33:17" pos:end="33:77"><name pos:start="33:17" pos:end="33:40"><name pos:start="33:17" pos:end="33:23">rtsp_st</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:40">dynamic_handler</name></name> <operator pos:start="33:42" pos:end="33:43">&amp;&amp;</operator> <name pos:start="33:45" pos:end="33:77"><name pos:start="33:45" pos:end="33:51">rtsp_st</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:77">dynamic_protocol_context</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:83"><block_content pos:start="35:17" pos:end="35:83">

                <expr_stmt pos:start="35:17" pos:end="35:83"><expr pos:start="35:17" pos:end="35:82"><call pos:start="35:17" pos:end="35:82"><name pos:start="35:17" pos:end="35:47"><name pos:start="35:17" pos:end="35:23">rtsp_st</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:40">dynamic_handler</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:47">close</name></name><argument_list pos:start="35:48" pos:end="35:82">(<argument pos:start="35:49" pos:end="35:81"><expr pos:start="35:49" pos:end="35:81"><name pos:start="35:49" pos:end="35:81"><name pos:start="35:49" pos:end="35:55">rtsp_st</name><operator pos:start="35:56" pos:end="35:57">-&gt;</operator><name pos:start="35:58" pos:end="35:81">dynamic_protocol_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><call pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:11">av_free</name><argument_list pos:start="41:12" pos:end="41:29">(<argument pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:14">rt</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:28">rtsp_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:20">(<expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:10">rt</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:19">asf_ctx</name></name></expr>)</condition> <block pos:start="43:22" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:27">

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><call pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:29">av_close_input_stream</name> <argument_list pos:start="45:31" pos:end="45:43">(<argument pos:start="45:32" pos:end="45:42"><expr pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:33">rt</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:42">asf_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:10">rt</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:19">asf_ctx</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:26">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><call pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:12">av_freep</name><argument_list pos:start="51:13" pos:end="51:27">(<argument pos:start="51:14" pos:end="51:26"><expr pos:start="51:14" pos:end="51:26"><operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:26"><name pos:start="51:15" pos:end="51:16">rt</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:26">auth_b64</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
