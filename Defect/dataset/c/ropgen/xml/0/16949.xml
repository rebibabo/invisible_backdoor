<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16949.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">decode_profile_tier_level</name><parameter_list pos:start="1:37" pos:end="1:76">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:48">HEVCContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>,  <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><name pos:start="1:55" pos:end="1:70">ProfileTierLevel</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:75">ptl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:31">= <expr pos:start="9:25" pos:end="9:31"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:31"><name pos:start="9:26" pos:end="9:27">lc</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:31">gb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:7">ptl</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:22">profile_space</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <call pos:start="13:26" pos:end="13:40"><name pos:start="13:26" pos:end="13:33">get_bits</name><argument_list pos:start="13:34" pos:end="13:40">(<argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">gb</name></expr></argument>, <argument pos:start="13:39" pos:end="13:39"><expr pos:start="13:39" pos:end="13:39"><literal type="number" pos:start="13:39" pos:end="13:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:7">ptl</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:18">tier_flag</name></name>     <operator pos:start="15:24" pos:end="15:24">=</operator> <call pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:34">get_bits1</name><argument_list pos:start="15:35" pos:end="15:38">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">ptl</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:20">profile_idc</name></name>   <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:40"><name pos:start="17:26" pos:end="17:33">get_bits</name><argument_list pos:start="17:34" pos:end="17:40">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">gb</name></expr></argument>, <argument pos:start="17:39" pos:end="17:39"><expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="29:92"><if pos:start="19:5" pos:end="21:67">if <condition pos:start="19:8" pos:end="19:30">(<expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:11">ptl</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:24">profile_idc</name></name> <operator pos:start="19:26" pos:end="19:27">==</operator> <literal type="number" pos:start="19:29" pos:end="19:29">1</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:67"><block_content pos:start="21:9" pos:end="21:67">

        <expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><call pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:66">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="21:40" pos:end="21:65"><expr pos:start="21:40" pos:end="21:65"><literal type="string" pos:start="21:40" pos:end="21:65">"Main profile bitstream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="23:5" pos:end="25:69">else if <condition pos:start="23:13" pos:end="23:35">(<expr pos:start="23:14" pos:end="23:34"><name pos:start="23:14" pos:end="23:29"><name pos:start="23:14" pos:end="23:16">ptl</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:29">profile_idc</name></name> <operator pos:start="23:31" pos:end="23:32">==</operator> <literal type="number" pos:start="23:34" pos:end="23:34">2</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:69"><block_content pos:start="25:9" pos:end="25:69">

        <expr_stmt pos:start="25:9" pos:end="25:69"><expr pos:start="25:9" pos:end="25:68"><call pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:68">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:40" pos:end="25:67"><expr pos:start="25:40" pos:end="25:67"><literal type="string" pos:start="25:40" pos:end="25:67">"Main10 profile bitstream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="27:5" pos:end="29:92">else<block type="pseudo" pos:start="29:9" pos:end="29:92"><block_content pos:start="29:9" pos:end="29:92">

        <expr_stmt pos:start="29:9" pos:end="29:92"><expr pos:start="29:9" pos:end="29:91"><call pos:start="29:9" pos:end="29:91"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:91">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:39"><expr pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="29:42" pos:end="29:72"><expr pos:start="29:42" pos:end="29:72"><literal type="string" pos:start="29:42" pos:end="29:72">"No profile indication! (%d)\n"</literal></expr></argument>, <argument pos:start="29:75" pos:end="29:90"><expr pos:start="29:75" pos:end="29:90"><name pos:start="29:75" pos:end="29:90"><name pos:start="29:75" pos:end="29:77">ptl</name><operator pos:start="29:78" pos:end="29:79">-&gt;</operator><name pos:start="29:80" pos:end="29:90">profile_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="33:5" pos:end="35:59">for <control pos:start="33:9" pos:end="33:28">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:23"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:22">32</literal></expr>;</condition> <incr pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:25">i</name><operator pos:start="33:26" pos:end="33:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:59"><block_content pos:start="35:9" pos:end="35:59">

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:11">ptl</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:39">profile_compatibility_flag</name><index pos:start="35:40" pos:end="35:42">[<expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">i</name></expr>]</index></name> <operator pos:start="35:44" pos:end="35:44">=</operator> <call pos:start="35:46" pos:end="35:58"><name pos:start="35:46" pos:end="35:54">get_bits1</name><argument_list pos:start="35:55" pos:end="35:58">(<argument pos:start="35:56" pos:end="35:57"><expr pos:start="35:56" pos:end="35:57"><name pos:start="35:56" pos:end="35:57">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:7">ptl</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:32">progressive_source_flag</name></name>    <operator pos:start="37:37" pos:end="37:37">=</operator> <call pos:start="37:39" pos:end="37:51"><name pos:start="37:39" pos:end="37:47">get_bits1</name><argument_list pos:start="37:48" pos:end="37:51">(<argument pos:start="37:49" pos:end="37:50"><expr pos:start="37:49" pos:end="37:50"><name pos:start="37:49" pos:end="37:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:7">ptl</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:31">interlaced_source_flag</name></name>     <operator pos:start="39:37" pos:end="39:37">=</operator> <call pos:start="39:39" pos:end="39:51"><name pos:start="39:39" pos:end="39:47">get_bits1</name><argument_list pos:start="39:48" pos:end="39:51">(<argument pos:start="39:49" pos:end="39:50"><expr pos:start="39:49" pos:end="39:50"><name pos:start="39:49" pos:end="39:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:52"><expr pos:start="41:5" pos:end="41:51"><name pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:7">ptl</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:35">non_packed_constraint_flag</name></name> <operator pos:start="41:37" pos:end="41:37">=</operator> <call pos:start="41:39" pos:end="41:51"><name pos:start="41:39" pos:end="41:47">get_bits1</name><argument_list pos:start="41:48" pos:end="41:51">(<argument pos:start="41:49" pos:end="41:50"><expr pos:start="41:49" pos:end="41:50"><name pos:start="41:49" pos:end="41:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:52"><expr pos:start="43:5" pos:end="43:51"><name pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:7">ptl</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:35">frame_only_constraint_flag</name></name> <operator pos:start="43:37" pos:end="43:37">=</operator> <call pos:start="43:39" pos:end="43:51"><name pos:start="43:39" pos:end="43:47">get_bits1</name><argument_list pos:start="43:48" pos:end="43:51">(<argument pos:start="43:49" pos:end="43:50"><expr pos:start="43:49" pos:end="43:50"><name pos:start="43:49" pos:end="43:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:18"><if pos:start="45:5" pos:end="47:18">if <condition pos:start="45:8" pos:end="45:30">(<expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:16">get_bits</name><argument_list pos:start="45:17" pos:end="45:24">(<argument pos:start="45:18" pos:end="45:19"><expr pos:start="45:18" pos:end="45:19"><name pos:start="45:18" pos:end="45:19">gb</name></expr></argument>, <argument pos:start="45:22" pos:end="45:23"><expr pos:start="45:22" pos:end="45:23"><literal type="number" pos:start="45:22" pos:end="45:23">16</literal></expr></argument>)</argument_list></call> <operator pos:start="45:26" pos:end="45:27">!=</operator> <literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:18"><block_content pos:start="47:9" pos:end="47:18"> <comment type="line" pos:start="45:32" pos:end="45:65">// XXX_reserved_zero_44bits[0..15]</comment>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:30">(<expr pos:start="49:9" pos:end="49:29"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:16">get_bits</name><argument_list pos:start="49:17" pos:end="49:24">(<argument pos:start="49:18" pos:end="49:19"><expr pos:start="49:18" pos:end="49:19"><name pos:start="49:18" pos:end="49:19">gb</name></expr></argument>, <argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><literal type="number" pos:start="49:22" pos:end="49:23">16</literal></expr></argument>)</argument_list></call> <operator pos:start="49:26" pos:end="49:27">!=</operator> <literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18"> <comment type="line" pos:start="49:32" pos:end="49:66">// XXX_reserved_zero_44bits[16..31]</comment>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:16">get_bits</name><argument_list pos:start="53:17" pos:end="53:24">(<argument pos:start="53:18" pos:end="53:19"><expr pos:start="53:18" pos:end="53:19"><name pos:start="53:18" pos:end="53:19">gb</name></expr></argument>, <argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><literal type="number" pos:start="53:22" pos:end="53:23">12</literal></expr></argument>)</argument_list></call> <operator pos:start="53:26" pos:end="53:27">!=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18"> <comment type="line" pos:start="53:32" pos:end="53:66">// XXX_reserved_zero_44bits[32..43]</comment>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
