<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11307.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">usb_wacom_handle_control</name><parameter_list pos:start="1:36" pos:end="3:73">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:45">USBDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:63">request</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">value</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">index</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:57"><decl pos:start="3:48" pos:end="3:57"><type pos:start="3:48" pos:end="3:57"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:57">length</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:72"><decl pos:start="3:60" pos:end="3:72"><type pos:start="3:60" pos:end="3:72"><name pos:start="3:60" pos:end="3:66">uint8_t</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:72">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="167:1">{<block_content pos:start="7:5" pos:end="165:15">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">USBWacomState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:44">= <expr pos:start="7:24" pos:end="7:44"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">USBWacomState</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator> <name pos:start="7:42" pos:end="7:44">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:75"><name pos:start="13:11" pos:end="13:33">usb_desc_handle_control</name><argument_list pos:start="13:34" pos:end="13:75">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">dev</name></expr></argument>, <argument pos:start="13:40" pos:end="13:46"><expr pos:start="13:40" pos:end="13:46"><name pos:start="13:40" pos:end="13:46">request</name></expr></argument>, <argument pos:start="13:49" pos:end="13:53"><expr pos:start="13:49" pos:end="13:53"><name pos:start="13:49" pos:end="13:53">value</name></expr></argument>, <argument pos:start="13:56" pos:end="13:60"><expr pos:start="13:56" pos:end="13:60"><name pos:start="13:56" pos:end="13:60">index</name></expr></argument>, <argument pos:start="13:63" pos:end="13:68"><expr pos:start="13:63" pos:end="13:68"><name pos:start="13:63" pos:end="13:68">length</name></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><name pos:start="13:71" pos:end="13:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:12"><expr pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="163:5">switch <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">request</name></expr>)</condition> <block pos:start="25:22" pos:end="163:5">{<block_content pos:start="27:5" pos:end="161:14">

    <case pos:start="27:5" pos:end="27:44">case <expr pos:start="27:10" pos:end="27:43"><name pos:start="27:10" pos:end="27:22">DeviceRequest</name> <operator pos:start="27:24" pos:end="27:24">|</operator> <name pos:start="27:26" pos:end="27:43">USB_REQ_GET_STATUS</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="31:61"><expr pos:start="29:9" pos:end="31:60"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">data</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>]</index></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">(</operator><literal type="number" pos:start="29:20" pos:end="29:20">1</literal> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <name pos:start="29:25" pos:end="29:47">USB_DEVICE_SELF_POWERED</name><operator pos:start="29:48" pos:end="29:48">)</operator> <operator pos:start="29:50" pos:end="29:50">|</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:16">dev</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:31">remote_wakeup</name></name> <operator pos:start="31:33" pos:end="31:34">&lt;&lt;</operator> <name pos:start="31:36" pos:end="31:59">USB_DEVICE_REMOTE_WAKEUP</name><operator pos:start="31:60" pos:end="31:60">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">data</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">1</literal></expr>]</index></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:15">2</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:50">case <expr pos:start="39:10" pos:end="39:49"><name pos:start="39:10" pos:end="39:25">DeviceOutRequest</name> <operator pos:start="39:27" pos:end="39:27">|</operator> <name pos:start="39:29" pos:end="39:49">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:46">(<expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:17">value</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <name pos:start="41:22" pos:end="41:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="41:48" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:35">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:15">dev</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:30">remote_wakeup</name></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="49:9">else <block pos:start="45:16" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:22">

            <goto pos:start="47:13" pos:end="47:22">goto <name pos:start="47:18" pos:end="47:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:48">case <expr pos:start="55:10" pos:end="55:47"><name pos:start="55:10" pos:end="55:25">DeviceOutRequest</name> <operator pos:start="55:27" pos:end="55:27">|</operator> <name pos:start="55:29" pos:end="55:47">USB_REQ_SET_FEATURE</name></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:46">(<expr pos:start="57:13" pos:end="57:45"><name pos:start="57:13" pos:end="57:17">value</name> <operator pos:start="57:19" pos:end="57:20">==</operator> <name pos:start="57:22" pos:end="57:45">USB_DEVICE_REMOTE_WAKEUP</name></expr>)</condition> <block pos:start="57:48" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:35">

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:15">dev</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:30">remote_wakeup</name></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:22">

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:16"><expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:51">case <expr pos:start="71:10" pos:end="71:50"><name pos:start="71:10" pos:end="71:22">DeviceRequest</name> <operator pos:start="71:24" pos:end="71:24">|</operator> <name pos:start="71:26" pos:end="71:50">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:20"><expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:12">data</name><index pos:start="73:13" pos:end="73:15">[<expr pos:start="73:14" pos:end="73:14"><literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>]</index></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <literal type="number" pos:start="75:15" pos:end="75:15">1</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:54">case <expr pos:start="79:10" pos:end="79:53"><name pos:start="79:10" pos:end="79:25">DeviceOutRequest</name> <operator pos:start="79:27" pos:end="79:27">|</operator> <name pos:start="79:29" pos:end="79:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:16"><expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:47">case <expr pos:start="85:10" pos:end="85:46"><name pos:start="85:10" pos:end="85:22">DeviceRequest</name> <operator pos:start="85:24" pos:end="85:24">|</operator> <name pos:start="85:26" pos:end="85:46">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:12">data</name><index pos:start="87:13" pos:end="87:15">[<expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>]</index></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <literal type="number" pos:start="89:15" pos:end="89:15">1</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:50">case <expr pos:start="93:10" pos:end="93:49"><name pos:start="93:10" pos:end="93:25">DeviceOutRequest</name> <operator pos:start="93:27" pos:end="93:27">|</operator> <name pos:start="93:29" pos:end="93:49">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:16"><expr pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <literal type="number" pos:start="95:15" pos:end="95:15">0</literal></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:26">case <expr pos:start="99:10" pos:end="99:25"><name pos:start="99:10" pos:end="99:25">WACOM_SET_REPORT</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:29">(<expr pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:28">mouse_grabbed</name></name></expr>)</condition> <block pos:start="101:31" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:33">

            <expr_stmt pos:start="103:13" pos:end="103:57"><expr pos:start="103:13" pos:end="103:56"><call pos:start="103:13" pos:end="103:56"><name pos:start="103:13" pos:end="103:43">qemu_remove_mouse_event_handler</name><argument_list pos:start="103:44" pos:end="103:56">(<argument pos:start="103:45" pos:end="103:55"><expr pos:start="103:45" pos:end="103:55"><name pos:start="103:45" pos:end="103:55"><name pos:start="103:45" pos:end="103:45">s</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:55">eh_entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:33"><expr pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:28">mouse_grabbed</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <literal type="number" pos:start="105:32" pos:end="105:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:26"><expr pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:15">mode</name></name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:22">data</name><index pos:start="109:23" pos:end="109:25">[<expr pos:start="109:24" pos:end="109:24"><literal type="number" pos:start="109:24" pos:end="109:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:16"><expr pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:26">case <expr pos:start="115:10" pos:end="115:25"><name pos:start="115:10" pos:end="115:25">WACOM_GET_REPORT</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:20"><expr pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:12">data</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>]</index></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:26"><expr pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:12">data</name><index pos:start="119:13" pos:end="119:15">[<expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">1</literal></expr>]</index></name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:25"><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:25">mode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:16"><expr pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <literal type="number" pos:start="121:15" pos:end="121:15">2</literal></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <comment type="block" pos:start="125:5" pos:end="125:26">/* USB HID requests */</comment>

    <case pos:start="127:5" pos:end="127:24">case <expr pos:start="127:10" pos:end="127:23"><name pos:start="127:10" pos:end="127:23">HID_GET_REPORT</name></expr>:</case>

        <if_stmt pos:start="129:9" pos:end="135:50"><if pos:start="129:9" pos:end="131:50">if <condition pos:start="129:12" pos:end="129:38">(<expr pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:19">mode</name></name> <operator pos:start="129:21" pos:end="129:22">==</operator> <name pos:start="129:24" pos:end="129:37">WACOM_MODE_HID</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:50"><block_content pos:start="131:13" pos:end="131:50">

            <expr_stmt pos:start="131:13" pos:end="131:50"><expr pos:start="131:13" pos:end="131:49"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:49"><name pos:start="131:19" pos:end="131:32">usb_mouse_poll</name><argument_list pos:start="131:33" pos:end="131:49">(<argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">s</name></expr></argument>, <argument pos:start="131:37" pos:end="131:40"><expr pos:start="131:37" pos:end="131:40"><name pos:start="131:37" pos:end="131:40">data</name></expr></argument>, <argument pos:start="131:43" pos:end="131:48"><expr pos:start="131:43" pos:end="131:48"><name pos:start="131:43" pos:end="131:48">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="133:9" pos:end="135:50">else if <condition pos:start="133:17" pos:end="133:45">(<expr pos:start="133:18" pos:end="133:44"><name pos:start="133:18" pos:end="133:24"><name pos:start="133:18" pos:end="133:18">s</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:24">mode</name></name> <operator pos:start="133:26" pos:end="133:27">==</operator> <name pos:start="133:29" pos:end="133:44">WACOM_MODE_WACOM</name></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:50"><block_content pos:start="135:13" pos:end="135:50">

            <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <call pos:start="135:19" pos:end="135:49"><name pos:start="135:19" pos:end="135:32">usb_wacom_poll</name><argument_list pos:start="135:33" pos:end="135:49">(<argument pos:start="135:34" pos:end="135:34"><expr pos:start="135:34" pos:end="135:34"><name pos:start="135:34" pos:end="135:34">s</name></expr></argument>, <argument pos:start="135:37" pos:end="135:40"><expr pos:start="135:37" pos:end="135:40"><name pos:start="135:37" pos:end="135:40">data</name></expr></argument>, <argument pos:start="135:43" pos:end="135:48"><expr pos:start="135:43" pos:end="135:48"><name pos:start="135:43" pos:end="135:48">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:22">case <expr pos:start="139:10" pos:end="139:21"><name pos:start="139:10" pos:end="139:21">HID_GET_IDLE</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:16"><expr pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <literal type="number" pos:start="141:15" pos:end="141:15">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:26"><expr pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:12">data</name><index pos:start="143:13" pos:end="143:15">[<expr pos:start="143:14" pos:end="143:14"><literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>]</index></name> <operator pos:start="143:17" pos:end="143:17">=</operator> <name pos:start="143:19" pos:end="143:25"><name pos:start="143:19" pos:end="143:19">s</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:25">idle</name></name></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    <case pos:start="147:5" pos:end="147:22">case <expr pos:start="147:10" pos:end="147:21"><name pos:start="147:10" pos:end="147:21">HID_SET_IDLE</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:41"><expr pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">idle</name></name> <operator pos:start="149:17" pos:end="149:17">=</operator> <operator pos:start="149:19" pos:end="149:19">(</operator><name pos:start="149:20" pos:end="149:26">uint8_t</name><operator pos:start="149:27" pos:end="149:27">)</operator> <operator pos:start="149:29" pos:end="149:29">(</operator><name pos:start="149:30" pos:end="149:34">value</name> <operator pos:start="149:36" pos:end="149:37">&gt;&gt;</operator> <literal type="number" pos:start="149:39" pos:end="149:39">8</literal><operator pos:start="149:40" pos:end="149:40">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:16"><expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <default pos:start="155:5" pos:end="155:12">default:</default>

    <label pos:start="157:5" pos:end="157:9"><name pos:start="157:5" pos:end="157:8">fail</name>:</label>

        <expr_stmt pos:start="159:9" pos:end="159:28"><expr pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="165:5" pos:end="165:15">return <expr pos:start="165:12" pos:end="165:14"><name pos:start="165:12" pos:end="165:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
