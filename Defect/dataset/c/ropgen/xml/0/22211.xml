<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22211.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">sch_handle_start_func</name><parameter_list pos:start="1:34" pos:end="1:58">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:42">SubchDev</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">sch</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">ORB</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">orb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="7:5" pos:end="197:29">



    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">PMCW</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name> <init pos:start="7:13" pos:end="7:36">= <expr pos:start="7:15" pos:end="7:36"><operator pos:start="7:15" pos:end="7:15">&amp;</operator><name pos:start="7:16" pos:end="7:36"><name pos:start="7:16" pos:end="7:18">sch</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:31">curr_status</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:36">pmcw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">SCSW</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">s</name> <init pos:start="9:13" pos:end="9:36">= <expr pos:start="9:15" pos:end="9:36"><operator pos:start="9:15" pos:end="9:15">&amp;</operator><name pos:start="9:16" pos:end="9:36"><name pos:start="9:16" pos:end="9:18">sch</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:31">curr_status</name><operator pos:start="9:32" pos:end="9:32">.</operator><name pos:start="9:33" pos:end="9:36">scsw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:24">suspend_allowed</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:77">/* Path management: In our simple css, we always choose the only path. */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:8">path</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <literal type="number" pos:start="21:12" pos:end="21:15">0x80</literal></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="73:5"><if pos:start="25:5" pos:end="61:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:17"><name pos:start="25:11" pos:end="25:11">s</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">ctrl</name></name> <operator pos:start="25:19" pos:end="25:19">&amp;</operator> <name pos:start="25:21" pos:end="25:34">SCSW_ACTL_SUSP</name><operator pos:start="25:35" pos:end="25:35">)</operator></expr>)</condition> <block pos:start="25:38" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:63">

        <comment type="block" pos:start="27:9" pos:end="27:68">/* Start Function triggered via ssch, i.e. we have an ORB */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">cstat</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">dstat</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="33:9" pos:end="33:69">/* Look at the orb and try to execute the channel program. */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><call pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:14">assert</name><argument_list pos:start="35:15" pos:end="35:27">(<argument pos:start="35:16" pos:end="35:26"><expr pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:18">orb</name> <operator pos:start="35:20" pos:end="35:21">!=</operator> <name pos:start="35:23" pos:end="35:26">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:30" pos:end="35:62">/* resume does not pass an orb */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">p</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">intparm</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:33"><name pos:start="37:22" pos:end="37:24">orb</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:33">intparm</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="51:9"><if pos:start="39:9" pos:end="51:9">if <condition pos:start="39:12" pos:end="39:31">(<expr pos:start="39:13" pos:end="39:30"><operator pos:start="39:13" pos:end="39:13">!</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:22"><name pos:start="39:15" pos:end="39:17">orb</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:22">lpm</name></name> <operator pos:start="39:24" pos:end="39:24">&amp;</operator> <name pos:start="39:26" pos:end="39:29">path</name><operator pos:start="39:30" pos:end="39:30">)</operator></expr>)</condition> <block pos:start="39:33" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:19">

            <comment type="block" pos:start="41:13" pos:end="41:53">/* Generate a deferred cc 3 condition. */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">flags</name></name> <operator pos:start="43:22" pos:end="43:23">|=</operator> <name pos:start="43:25" pos:end="43:42">SCSW_FLAGS_MASK_CC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:45"><expr pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:19">ctrl</name></name> <operator pos:start="45:21" pos:end="45:22">&amp;=</operator> <operator pos:start="45:24" pos:end="45:24">~</operator><name pos:start="45:25" pos:end="45:44">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:67"><expr pos:start="47:13" pos:end="47:66"><name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:19">ctrl</name></name> <operator pos:start="47:21" pos:end="47:22">|=</operator> <operator pos:start="47:24" pos:end="47:24">(</operator><name pos:start="47:25" pos:end="47:40">SCSW_STCTL_ALERT</name> <operator pos:start="47:42" pos:end="47:42">|</operator> <name pos:start="47:44" pos:end="47:65">SCSW_STCTL_STATUS_PEND</name><operator pos:start="47:66" pos:end="47:66">)</operator></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:11">sch</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:22">ccw_fmt_1</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <operator pos:start="53:26" pos:end="53:26">!</operator><operator pos:start="53:27" pos:end="53:27">!</operator><operator pos:start="53:28" pos:end="53:28">(</operator><name pos:start="53:29" pos:end="53:38"><name pos:start="53:29" pos:end="53:31">orb</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:38">ctrl0</name></name> <operator pos:start="53:40" pos:end="53:40">&amp;</operator> <name pos:start="53:42" pos:end="53:59">ORB_CTRL0_MASK_FMT</name><operator pos:start="53:60" pos:end="53:60">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">flags</name></name> <operator pos:start="55:18" pos:end="55:19">|=</operator> <ternary pos:start="55:21" pos:end="55:62"><condition pos:start="55:21" pos:end="55:38"><expr pos:start="55:21" pos:end="55:36"><operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:35"><name pos:start="55:22" pos:end="55:24">sch</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:35">ccw_fmt_1</name></name><operator pos:start="55:36" pos:end="55:36">)</operator></expr> ?</condition><then pos:start="55:40" pos:end="55:58"> <expr pos:start="55:40" pos:end="55:58"><name pos:start="55:40" pos:end="55:58">SCSW_FLAGS_MASK_FMT</name></expr> </then><else pos:start="55:60" pos:end="55:62">: <expr pos:start="55:62" pos:end="55:62"><literal type="number" pos:start="55:62" pos:end="55:62">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:11">sch</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:28">ccw_no_data_cnt</name></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <literal type="number" pos:start="57:32" pos:end="57:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:63"><expr pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:23">suspend_allowed</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <operator pos:start="59:27" pos:end="59:27">!</operator><operator pos:start="59:28" pos:end="59:28">!</operator><operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:32">orb</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:39">ctrl0</name></name> <operator pos:start="59:41" pos:end="59:41">&amp;</operator> <name pos:start="59:43" pos:end="59:61">ORB_CTRL0_MASK_SPND</name><operator pos:start="59:62" pos:end="59:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="73:5">else <block pos:start="61:12" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:31">

        <comment type="block" pos:start="63:9" pos:end="65:17">/* Start Function resumed via rsch, i.e. we don't have an

         * ORB */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:61"><expr pos:start="67:9" pos:end="67:60"><name pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:15">ctrl</name></name> <operator pos:start="67:17" pos:end="67:18">&amp;=</operator> <operator pos:start="67:20" pos:end="67:20">~</operator><operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:35">SCSW_ACTL_SUSP</name> <operator pos:start="67:37" pos:end="67:37">|</operator> <name pos:start="67:39" pos:end="67:59">SCSW_ACTL_RESUME_PEND</name><operator pos:start="67:60" pos:end="67:60">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:60">/* The channel program had been suspended before. */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:23">suspend_allowed</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:30">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:7">sch</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:23">last_cmd_valid</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:31">false</name></expr>;</expr_stmt>

    <do pos:start="77:5" pos:end="197:29">do <block pos:start="77:8" pos:end="197:5">{<block_content pos:start="79:9" pos:end="195:9">

        <expr_stmt pos:start="79:9" pos:end="79:73"><expr pos:start="79:9" pos:end="79:72"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:72"><name pos:start="79:15" pos:end="79:31">css_interpret_ccw</name><argument_list pos:start="79:32" pos:end="79:72">(<argument pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:35">sch</name></expr></argument>, <argument pos:start="79:38" pos:end="79:54"><expr pos:start="79:38" pos:end="79:54"><name pos:start="79:38" pos:end="79:54"><name pos:start="79:38" pos:end="79:40">sch</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:54">channel_prog</name></name></expr></argument>, <argument pos:start="79:57" pos:end="79:71"><expr pos:start="79:57" pos:end="79:71"><name pos:start="79:57" pos:end="79:71">suspend_allowed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="81:9" pos:end="195:9">switch <condition pos:start="81:16" pos:end="81:20">(<expr pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">ret</name></expr>)</condition> <block pos:start="81:22" pos:end="195:9">{<block_content pos:start="83:9" pos:end="193:18">

        <case pos:start="83:9" pos:end="83:21">case <expr pos:start="83:14" pos:end="83:20"><operator pos:start="83:14" pos:end="83:14">-</operator><name pos:start="83:15" pos:end="83:20">EAGAIN</name></expr>:</case>

            <comment type="block" pos:start="85:13" pos:end="85:48">/* ccw chain, continue processing */</comment>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:15">case <expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>:</case>

            <comment type="block" pos:start="91:13" pos:end="91:25">/* success */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:45"><expr pos:start="93:13" pos:end="93:44"><name pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:19">ctrl</name></name> <operator pos:start="93:21" pos:end="93:22">&amp;=</operator> <operator pos:start="93:24" pos:end="93:24">~</operator><name pos:start="93:25" pos:end="93:44">SCSW_ACTL_START_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:45"><expr pos:start="95:13" pos:end="95:44"><name pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:19">ctrl</name></name> <operator pos:start="95:21" pos:end="95:22">&amp;=</operator> <operator pos:start="95:24" pos:end="95:24">~</operator><name pos:start="95:25" pos:end="95:44">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="99:43"><expr pos:start="97:13" pos:end="99:42"><name pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:19">ctrl</name></name> <operator pos:start="97:21" pos:end="97:22">|=</operator> <name pos:start="97:24" pos:end="97:41">SCSW_STCTL_PRIMARY</name> <operator pos:start="97:43" pos:end="97:43">|</operator> <name pos:start="97:45" pos:end="97:64">SCSW_STCTL_SECONDARY</name> <operator pos:start="97:66" pos:end="97:66">|</operator>

                    <name pos:start="99:21" pos:end="99:42">SCSW_STCTL_STATUS_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:70"><expr pos:start="101:13" pos:end="101:69"><name pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:20">dstat</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:45">SCSW_DSTAT_CHANNEL_END</name> <operator pos:start="101:47" pos:end="101:47">|</operator> <name pos:start="101:49" pos:end="101:69">SCSW_DSTAT_DEVICE_END</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:43"><expr pos:start="103:13" pos:end="103:42"><name pos:start="103:13" pos:end="103:18"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:18">cpa</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:38"><name pos:start="103:22" pos:end="103:24">sch</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:38">channel_prog</name></name> <operator pos:start="103:40" pos:end="103:40">+</operator> <literal type="number" pos:start="103:42" pos:end="103:42">8</literal></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:18">case <expr pos:start="107:14" pos:end="107:17"><operator pos:start="107:14" pos:end="107:14">-</operator><name pos:start="107:15" pos:end="107:17">EIO</name></expr>:</case>

            <comment type="block" pos:start="109:13" pos:end="109:64">/* I/O errors, status depends on specific devices */</comment>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:21">case <expr pos:start="113:14" pos:end="113:20"><operator pos:start="113:14" pos:end="113:14">-</operator><name pos:start="113:15" pos:end="113:20">ENOSYS</name></expr>:</case>

            <comment type="block" pos:start="115:13" pos:end="115:75">/* unsupported command, generate unit check (command reject) */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:45"><expr pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:19">ctrl</name></name> <operator pos:start="117:21" pos:end="117:22">&amp;=</operator> <operator pos:start="117:24" pos:end="117:24">~</operator><name pos:start="117:25" pos:end="117:44">SCSW_ACTL_START_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:45"><expr pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:20">dstat</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:44">SCSW_DSTAT_UNIT_CHECK</name></expr>;</expr_stmt>

            <comment type="block" pos:start="121:13" pos:end="121:42">/* Set sense bit 0 in ecw0. */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:38"><expr pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:15">sch</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:27">sense_data</name><index pos:start="123:28" pos:end="123:30">[<expr pos:start="123:29" pos:end="123:29"><literal type="number" pos:start="123:29" pos:end="123:29">0</literal></expr>]</index></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <literal type="number" pos:start="123:34" pos:end="123:37">0x80</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:45"><expr pos:start="125:13" pos:end="125:44"><name pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:19">ctrl</name></name> <operator pos:start="125:21" pos:end="125:22">&amp;=</operator> <operator pos:start="125:24" pos:end="125:24">~</operator><name pos:start="125:25" pos:end="125:44">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="129:62"><expr pos:start="127:13" pos:end="129:61"><name pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:19">ctrl</name></name> <operator pos:start="127:21" pos:end="127:22">|=</operator> <name pos:start="127:24" pos:end="127:41">SCSW_STCTL_PRIMARY</name> <operator pos:start="127:43" pos:end="127:43">|</operator> <name pos:start="127:45" pos:end="127:64">SCSW_STCTL_SECONDARY</name> <operator pos:start="127:66" pos:end="127:66">|</operator>

                    <name pos:start="129:21" pos:end="129:36">SCSW_STCTL_ALERT</name> <operator pos:start="129:38" pos:end="129:38">|</operator> <name pos:start="129:40" pos:end="129:61">SCSW_STCTL_STATUS_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:43"><expr pos:start="131:13" pos:end="131:42"><name pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:18">cpa</name></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:38"><name pos:start="131:22" pos:end="131:24">sch</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:38">channel_prog</name></name> <operator pos:start="131:40" pos:end="131:40">+</operator> <literal type="number" pos:start="131:42" pos:end="131:42">8</literal></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:21">case <expr pos:start="135:14" pos:end="135:20"><operator pos:start="135:14" pos:end="135:14">-</operator><name pos:start="135:15" pos:end="135:20">EFAULT</name></expr>:</case>

            <comment type="block" pos:start="137:13" pos:end="137:61">/* memory problem, generate channel data check */</comment>

            <expr_stmt pos:start="139:13" pos:end="139:45"><expr pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:19">ctrl</name></name> <operator pos:start="139:21" pos:end="139:22">&amp;=</operator> <operator pos:start="139:24" pos:end="139:24">~</operator><name pos:start="139:25" pos:end="139:44">SCSW_ACTL_START_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:45"><expr pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:20"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:20">cstat</name></name> <operator pos:start="141:22" pos:end="141:22">=</operator> <name pos:start="141:24" pos:end="141:44">SCSW_CSTAT_DATA_CHECK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:45"><expr pos:start="143:13" pos:end="143:44"><name pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:19">ctrl</name></name> <operator pos:start="143:21" pos:end="143:22">&amp;=</operator> <operator pos:start="143:24" pos:end="143:24">~</operator><name pos:start="143:25" pos:end="143:44">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="147:62"><expr pos:start="145:13" pos:end="147:61"><name pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:19">ctrl</name></name> <operator pos:start="145:21" pos:end="145:22">|=</operator> <name pos:start="145:24" pos:end="145:41">SCSW_STCTL_PRIMARY</name> <operator pos:start="145:43" pos:end="145:43">|</operator> <name pos:start="145:45" pos:end="145:64">SCSW_STCTL_SECONDARY</name> <operator pos:start="145:66" pos:end="145:66">|</operator>

                    <name pos:start="147:21" pos:end="147:36">SCSW_STCTL_ALERT</name> <operator pos:start="147:38" pos:end="147:38">|</operator> <name pos:start="147:40" pos:end="147:61">SCSW_STCTL_STATUS_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:43"><expr pos:start="149:13" pos:end="149:42"><name pos:start="149:13" pos:end="149:18"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:18">cpa</name></name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:38"><name pos:start="149:22" pos:end="149:24">sch</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:38">channel_prog</name></name> <operator pos:start="149:40" pos:end="149:40">+</operator> <literal type="number" pos:start="149:42" pos:end="149:42">8</literal></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:20">case <expr pos:start="153:14" pos:end="153:19"><operator pos:start="153:14" pos:end="153:14">-</operator><name pos:start="153:15" pos:end="153:19">EBUSY</name></expr>:</case>

            <comment type="block" pos:start="155:13" pos:end="155:57">/* subchannel busy, generate deferred cc 1 */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:44"><expr pos:start="157:13" pos:end="157:43"><name pos:start="157:13" pos:end="157:20"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:20">flags</name></name> <operator pos:start="157:22" pos:end="157:23">&amp;=</operator> <operator pos:start="157:25" pos:end="157:25">~</operator><name pos:start="157:26" pos:end="157:43">SCSW_FLAGS_MASK_CC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:20">flags</name></name> <operator pos:start="159:22" pos:end="159:23">|=</operator> <operator pos:start="159:25" pos:end="159:25">(</operator><literal type="number" pos:start="159:26" pos:end="159:26">1</literal> <operator pos:start="159:28" pos:end="159:29">&lt;&lt;</operator> <literal type="number" pos:start="159:31" pos:end="159:31">8</literal><operator pos:start="159:32" pos:end="159:32">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:45"><expr pos:start="161:13" pos:end="161:44"><name pos:start="161:13" pos:end="161:19"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:19">ctrl</name></name> <operator pos:start="161:21" pos:end="161:22">&amp;=</operator> <operator pos:start="161:24" pos:end="161:24">~</operator><name pos:start="161:25" pos:end="161:44">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:65"><expr pos:start="163:13" pos:end="163:64"><name pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:19">ctrl</name></name> <operator pos:start="163:21" pos:end="163:22">|=</operator> <name pos:start="163:24" pos:end="163:39">SCSW_STCTL_ALERT</name> <operator pos:start="163:41" pos:end="163:41">|</operator> <name pos:start="163:43" pos:end="163:64">SCSW_STCTL_STATUS_PEND</name></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:26">case <expr pos:start="167:14" pos:end="167:25"><operator pos:start="167:14" pos:end="167:14">-</operator><name pos:start="167:15" pos:end="167:25">EINPROGRESS</name></expr>:</case>

            <comment type="block" pos:start="169:13" pos:end="169:52">/* channel program has been suspended */</comment>

            <expr_stmt pos:start="171:13" pos:end="171:45"><expr pos:start="171:13" pos:end="171:44"><name pos:start="171:13" pos:end="171:19"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:19">ctrl</name></name> <operator pos:start="171:21" pos:end="171:22">&amp;=</operator> <operator pos:start="171:24" pos:end="171:24">~</operator><name pos:start="171:25" pos:end="171:44">SCSW_ACTL_START_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:38"><expr pos:start="173:13" pos:end="173:37"><name pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:19">ctrl</name></name> <operator pos:start="173:21" pos:end="173:22">|=</operator> <name pos:start="173:24" pos:end="173:37">SCSW_ACTL_SUSP</name></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <default pos:start="177:9" pos:end="177:16">default:</default>

            <comment type="block" pos:start="179:13" pos:end="179:55">/* error, generate channel program check */</comment>

            <expr_stmt pos:start="181:13" pos:end="181:45"><expr pos:start="181:13" pos:end="181:44"><name pos:start="181:13" pos:end="181:19"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:19">ctrl</name></name> <operator pos:start="181:21" pos:end="181:22">&amp;=</operator> <operator pos:start="181:24" pos:end="181:24">~</operator><name pos:start="181:25" pos:end="181:44">SCSW_ACTL_START_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:45"><expr pos:start="183:13" pos:end="183:44"><name pos:start="183:13" pos:end="183:20"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:20">cstat</name></name> <operator pos:start="183:22" pos:end="183:22">=</operator> <name pos:start="183:24" pos:end="183:44">SCSW_CSTAT_PROG_CHECK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:45"><expr pos:start="185:13" pos:end="185:44"><name pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:19">ctrl</name></name> <operator pos:start="185:21" pos:end="185:22">&amp;=</operator> <operator pos:start="185:24" pos:end="185:24">~</operator><name pos:start="185:25" pos:end="185:44">SCSW_CTRL_MASK_STCTL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="189:62"><expr pos:start="187:13" pos:end="189:61"><name pos:start="187:13" pos:end="187:19"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:19">ctrl</name></name> <operator pos:start="187:21" pos:end="187:22">|=</operator> <name pos:start="187:24" pos:end="187:41">SCSW_STCTL_PRIMARY</name> <operator pos:start="187:43" pos:end="187:43">|</operator> <name pos:start="187:45" pos:end="187:64">SCSW_STCTL_SECONDARY</name> <operator pos:start="187:66" pos:end="187:66">|</operator>

                    <name pos:start="189:21" pos:end="189:36">SCSW_STCTL_ALERT</name> <operator pos:start="189:38" pos:end="189:38">|</operator> <name pos:start="189:40" pos:end="189:61">SCSW_STCTL_STATUS_PEND</name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:43"><expr pos:start="191:13" pos:end="191:42"><name pos:start="191:13" pos:end="191:18"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:18">cpa</name></name> <operator pos:start="191:20" pos:end="191:20">=</operator> <name pos:start="191:22" pos:end="191:38"><name pos:start="191:22" pos:end="191:24">sch</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:38">channel_prog</name></name> <operator pos:start="191:40" pos:end="191:40">+</operator> <literal type="number" pos:start="191:42" pos:end="191:42">8</literal></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block> while <condition pos:start="197:13" pos:end="197:28">(<expr pos:start="197:14" pos:end="197:27"><name pos:start="197:14" pos:end="197:16">ret</name> <operator pos:start="197:18" pos:end="197:19">==</operator> <operator pos:start="197:21" pos:end="197:21">-</operator><name pos:start="197:22" pos:end="197:27">EAGAIN</name></expr>)</condition>;</do>



</block_content>}</block></function>
</unit>
