<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1087.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tgv_decode_inter</name><parameter_list pos:start="1:28" pos:end="3:71">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">TgvContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">AVFrame</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">uint8_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">buf</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:70"><decl pos:start="3:49" pos:end="3:70"><type pos:start="3:49" pos:end="3:70"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:61">uint8_t</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:70">buf_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="213:1">{<block_content pos:start="7:5" pos:end="211:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">num_mvs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">num_blocks_raw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:25">num_blocks_packed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">vector_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>,<decl pos:start="15:11" pos:end="15:11"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:11" pos:end="15:11">j</name></decl>,<decl pos:start="15:13" pos:end="15:13"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:13">x</name></decl>,<decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">GetBitContext</name></type> <name pos:start="17:19" pos:end="17:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">mvbits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:29">blocks_raw</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if<condition pos:start="25:7" pos:end="25:26">(<expr pos:start="25:8" pos:end="25:25"><name pos:start="25:8" pos:end="25:14">buf_end</name> <operator pos:start="25:16" pos:end="25:16">-</operator> <name pos:start="25:18" pos:end="25:20">buf</name> <operator pos:start="25:22" pos:end="25:22">&lt;</operator> <literal type="number" pos:start="25:24" pos:end="25:25">12</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:11">num_mvs</name>           <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:31">AV_RL16</name><argument_list pos:start="31:32" pos:end="31:40">(<argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:36">buf</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:18">num_blocks_raw</name>    <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:40"><name pos:start="33:25" pos:end="33:31">AV_RL16</name><argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:36">buf</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:21">num_blocks_packed</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:31">AV_RL16</name><argument_list pos:start="35:32" pos:end="35:40">(<argument pos:start="35:33" pos:end="35:39"><expr pos:start="35:33" pos:end="35:39"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:36">buf</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:15">vector_bits</name>       <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:40"><name pos:start="37:25" pos:end="37:31">AV_RL16</name><argument_list pos:start="37:32" pos:end="37:40">(<argument pos:start="37:33" pos:end="37:39"><expr pos:start="37:33" pos:end="37:39"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:36">buf</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:7">buf</name> <operator pos:start="39:9" pos:end="39:10">+=</operator> <literal type="number" pos:start="39:12" pos:end="39:13">12</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:53">(<expr pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:19">vector_bits</name> <operator pos:start="43:21" pos:end="43:21">&gt;</operator> <name pos:start="43:23" pos:end="43:36">MIN_CACHE_BITS</name> <operator pos:start="43:38" pos:end="43:39">||</operator> <operator pos:start="43:41" pos:end="43:41">!</operator><name pos:start="43:42" pos:end="43:52">vector_bits</name></expr>)</condition> <block pos:start="43:55" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:35">

        <expr_stmt pos:start="45:9" pos:end="47:74"><expr pos:start="45:9" pos:end="47:73"><call pos:start="45:9" pos:end="47:73"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="47:73">(<argument pos:start="45:16" pos:end="45:23"><expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:23">avctx</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="47:16" pos:end="47:59"><expr pos:start="47:16" pos:end="47:59"><literal type="string" pos:start="47:16" pos:end="47:59">"Invalid value for motion vector bits: %d\n"</literal></expr></argument>, <argument pos:start="47:62" pos:end="47:72"><expr pos:start="47:62" pos:end="47:72"><name pos:start="47:62" pos:end="47:72">vector_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:48">/* allocate codebook buffers as necessary */</comment>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:29">(<expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:15">num_mvs</name> <operator pos:start="57:17" pos:end="57:17">&gt;</operator> <name pos:start="57:19" pos:end="57:28"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:28">num_mvs</name></name></expr>)</condition> <block pos:start="57:31" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:29">

        <expr_stmt pos:start="59:9" pos:end="59:75"><expr pos:start="59:9" pos:end="59:74"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:22">mv_codebook</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:74"><name pos:start="59:26" pos:end="59:35">av_realloc</name><argument_list pos:start="59:36" pos:end="59:74">(<argument pos:start="59:37" pos:end="59:50"><expr pos:start="59:37" pos:end="59:50"><name pos:start="59:37" pos:end="59:50"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:50">mv_codebook</name></name></expr></argument>, <argument pos:start="59:53" pos:end="59:73"><expr pos:start="59:53" pos:end="59:73"><name pos:start="59:53" pos:end="59:59">num_mvs</name><operator pos:start="59:60" pos:end="59:60">*</operator><literal type="number" pos:start="59:61" pos:end="59:61">2</literal><operator pos:start="59:62" pos:end="59:62">*</operator><sizeof pos:start="59:63" pos:end="59:73">sizeof<argument_list pos:start="59:69" pos:end="59:73">(<argument pos:start="59:70" pos:end="59:72"><expr pos:start="59:70" pos:end="59:72"><name pos:start="59:70" pos:end="59:72">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">num_mvs</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:28">num_mvs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:49">(<expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:25">num_blocks_packed</name> <operator pos:start="67:27" pos:end="67:27">&gt;</operator> <name pos:start="67:29" pos:end="67:48"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:48">num_blocks_packed</name></name></expr>)</condition> <block pos:start="67:51" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:49">

        <expr_stmt pos:start="69:9" pos:end="69:80"><expr pos:start="69:9" pos:end="69:79"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:25">block_codebook</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <call pos:start="69:29" pos:end="69:79"><name pos:start="69:29" pos:end="69:38">av_realloc</name><argument_list pos:start="69:39" pos:end="69:79">(<argument pos:start="69:40" pos:end="69:56"><expr pos:start="69:40" pos:end="69:56"><name pos:start="69:40" pos:end="69:56"><name pos:start="69:40" pos:end="69:40">s</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:56">block_codebook</name></name></expr></argument>, <argument pos:start="69:59" pos:end="69:78"><expr pos:start="69:59" pos:end="69:78"><name pos:start="69:59" pos:end="69:75">num_blocks_packed</name><operator pos:start="69:76" pos:end="69:76">*</operator><literal type="number" pos:start="69:77" pos:end="69:78">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:49"><expr pos:start="71:9" pos:end="71:48"><name pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:28">num_blocks_packed</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:48">num_blocks_packed</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:29">/* read motion vectors */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:43"><expr pos:start="79:5" pos:end="79:42"><name pos:start="79:5" pos:end="79:10">mvbits</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:21">num_mvs</name> <operator pos:start="79:23" pos:end="79:23">*</operator> <literal type="number" pos:start="79:25" pos:end="79:25">2</literal> <operator pos:start="79:27" pos:end="79:27">*</operator> <literal type="number" pos:start="79:29" pos:end="79:32">10</literal> <operator pos:start="79:32" pos:end="79:32">+</operator> <literal type="number" pos:start="79:34" pos:end="79:35">31</literal><operator pos:start="79:36" pos:end="79:36">)</operator> <operator pos:start="79:38" pos:end="79:38">&amp;</operator> <operator pos:start="79:40" pos:end="79:40">~</operator><literal type="number" pos:start="79:41" pos:end="79:42">31</literal></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="85:35"><if pos:start="83:5" pos:end="85:35">if <condition pos:start="83:8" pos:end="83:78">(<expr pos:start="83:9" pos:end="83:77"><name pos:start="83:9" pos:end="83:15">buf_end</name> <operator pos:start="83:17" pos:end="83:17">-</operator> <name pos:start="83:19" pos:end="83:21">buf</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <operator pos:start="83:25" pos:end="83:25">(</operator><name pos:start="83:26" pos:end="83:31">mvbits</name><operator pos:start="83:32" pos:end="83:33">&gt;&gt;</operator><literal type="number" pos:start="83:34" pos:end="83:34">3</literal><operator pos:start="83:35" pos:end="83:35">)</operator> <operator pos:start="83:37" pos:end="83:37">+</operator> <literal type="number" pos:start="83:39" pos:end="83:40">16</literal><operator pos:start="83:41" pos:end="83:41">*</operator><name pos:start="83:42" pos:end="83:55">num_blocks_raw</name> <operator pos:start="83:57" pos:end="83:57">+</operator> <literal type="number" pos:start="83:59" pos:end="83:59">8</literal><operator pos:start="83:60" pos:end="83:60">*</operator><name pos:start="83:61" pos:end="83:77">num_blocks_packed</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:35"><block_content pos:start="85:9" pos:end="85:35">

        <return pos:start="85:9" pos:end="85:35">return <expr pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:36"><expr pos:start="89:5" pos:end="89:35"><call pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:17">init_get_bits</name><argument_list pos:start="89:18" pos:end="89:35">(<argument pos:start="89:19" pos:end="89:21"><expr pos:start="89:19" pos:end="89:21"><operator pos:start="89:19" pos:end="89:19">&amp;</operator><name pos:start="89:20" pos:end="89:21">gb</name></expr></argument>, <argument pos:start="89:24" pos:end="89:26"><expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:26">buf</name></expr></argument>, <argument pos:start="89:29" pos:end="89:34"><expr pos:start="89:29" pos:end="89:34"><name pos:start="89:29" pos:end="89:34">mvbits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="97:5">for <control pos:start="91:9" pos:end="91:33">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:28"><expr pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <name pos:start="91:21" pos:end="91:27">num_mvs</name></expr>;</condition> <incr pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><name pos:start="91:30" pos:end="91:30">i</name><operator pos:start="91:31" pos:end="91:32">++</operator></expr></incr>)</control> <block pos:start="91:35" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:50">

        <expr_stmt pos:start="93:9" pos:end="93:50"><expr pos:start="93:9" pos:end="93:49"><name pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:22">mv_codebook</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">i</name></expr>]</index><index pos:start="93:26" pos:end="93:28">[<expr pos:start="93:27" pos:end="93:27"><literal type="number" pos:start="93:27" pos:end="93:27">0</literal></expr>]</index></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <call pos:start="93:32" pos:end="93:49"><name pos:start="93:32" pos:end="93:40">get_sbits</name><argument_list pos:start="93:41" pos:end="93:49">(<argument pos:start="93:42" pos:end="93:44"><expr pos:start="93:42" pos:end="93:44"><operator pos:start="93:42" pos:end="93:42">&amp;</operator><name pos:start="93:43" pos:end="93:44">gb</name></expr></argument>, <argument pos:start="93:47" pos:end="93:48"><expr pos:start="93:47" pos:end="93:48"><literal type="number" pos:start="93:47" pos:end="93:48">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:50"><expr pos:start="95:9" pos:end="95:49"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:22">mv_codebook</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">i</name></expr>]</index><index pos:start="95:26" pos:end="95:28">[<expr pos:start="95:27" pos:end="95:27"><literal type="number" pos:start="95:27" pos:end="95:27">1</literal></expr>]</index></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <call pos:start="95:32" pos:end="95:49"><name pos:start="95:32" pos:end="95:40">get_sbits</name><argument_list pos:start="95:41" pos:end="95:49">(<argument pos:start="95:42" pos:end="95:44"><expr pos:start="95:42" pos:end="95:44"><operator pos:start="95:42" pos:end="95:42">&amp;</operator><name pos:start="95:43" pos:end="95:44">gb</name></expr></argument>, <argument pos:start="95:47" pos:end="95:48"><expr pos:start="95:47" pos:end="95:48"><literal type="number" pos:start="95:47" pos:end="95:48">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:7">buf</name> <operator pos:start="99:9" pos:end="99:10">+=</operator> <name pos:start="99:12" pos:end="99:17">mvbits</name> <operator pos:start="99:19" pos:end="99:20">&gt;&gt;</operator> <literal type="number" pos:start="99:22" pos:end="99:22">3</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:41">/* note ptr to uncompressed blocks */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:14">blocks_raw</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:20">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:37"><expr pos:start="107:5" pos:end="107:36"><name pos:start="107:5" pos:end="107:7">buf</name>       <operator pos:start="107:15" pos:end="107:16">+=</operator> <name pos:start="107:18" pos:end="107:31">num_blocks_raw</name> <operator pos:start="107:33" pos:end="107:33">*</operator> <literal type="number" pos:start="107:35" pos:end="107:36">16</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:32">/* read compressed blocks */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:50"><expr pos:start="113:5" pos:end="113:49"><call pos:start="113:5" pos:end="113:49"><name pos:start="113:5" pos:end="113:17">init_get_bits</name><argument_list pos:start="113:18" pos:end="113:49">(<argument pos:start="113:19" pos:end="113:21"><expr pos:start="113:19" pos:end="113:21"><operator pos:start="113:19" pos:end="113:19">&amp;</operator><name pos:start="113:20" pos:end="113:21">gb</name></expr></argument>, <argument pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:26">buf</name></expr></argument>, <argument pos:start="113:29" pos:end="113:48"><expr pos:start="113:29" pos:end="113:48"><operator pos:start="113:29" pos:end="113:29">(</operator><name pos:start="113:30" pos:end="113:36">buf_end</name> <operator pos:start="113:38" pos:end="113:38">-</operator> <name pos:start="113:40" pos:end="113:42">buf</name><operator pos:start="113:43" pos:end="113:43">)</operator> <operator pos:start="113:45" pos:end="113:46">&lt;&lt;</operator> <literal type="number" pos:start="113:48" pos:end="113:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="115:5" pos:end="127:5">for <control pos:start="115:9" pos:end="115:43">(<init pos:start="115:10" pos:end="115:15"><expr pos:start="115:10" pos:end="115:14"><name pos:start="115:10" pos:end="115:10">i</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>;</init> <condition pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <name pos:start="115:21" pos:end="115:37">num_blocks_packed</name></expr>;</condition> <incr pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:40">i</name><operator pos:start="115:41" pos:end="115:42">++</operator></expr></incr>)</control> <block pos:start="115:45" pos:end="127:5">{<block_content pos:start="117:9" pos:end="125:63">

        <decl_stmt pos:start="117:9" pos:end="117:19"><decl pos:start="117:9" pos:end="117:18"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:18"><name pos:start="117:13" pos:end="117:15">tmp</name><index pos:start="117:16" pos:end="117:18">[<expr pos:start="117:17" pos:end="117:17"><literal type="number" pos:start="117:17" pos:end="117:17">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <for pos:start="119:9" pos:end="121:38">for <control pos:start="119:13" pos:end="119:31">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">j</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:26"><expr pos:start="119:21" pos:end="119:25"><name pos:start="119:21" pos:end="119:21">j</name> <operator pos:start="119:23" pos:end="119:23">&lt;</operator> <literal type="number" pos:start="119:25" pos:end="119:25">4</literal></expr>;</condition> <incr pos:start="119:28" pos:end="119:30"><expr pos:start="119:28" pos:end="119:30"><name pos:start="119:28" pos:end="119:28">j</name><operator pos:start="119:29" pos:end="119:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:13" pos:end="121:38"><block_content pos:start="121:13" pos:end="121:38">

            <expr_stmt pos:start="121:13" pos:end="121:38"><expr pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:18"><name pos:start="121:13" pos:end="121:15">tmp</name><index pos:start="121:16" pos:end="121:18">[<expr pos:start="121:17" pos:end="121:17"><name pos:start="121:17" pos:end="121:17">j</name></expr>]</index></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:37"><name pos:start="121:22" pos:end="121:29">get_bits</name><argument_list pos:start="121:30" pos:end="121:37">(<argument pos:start="121:31" pos:end="121:33"><expr pos:start="121:31" pos:end="121:33"><operator pos:start="121:31" pos:end="121:31">&amp;</operator><name pos:start="121:32" pos:end="121:33">gb</name></expr></argument>, <argument pos:start="121:36" pos:end="121:36"><expr pos:start="121:36" pos:end="121:36"><literal type="number" pos:start="121:36" pos:end="121:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="123:9" pos:end="125:63">for <control pos:start="123:13" pos:end="123:32">(<init pos:start="123:14" pos:end="123:19"><expr pos:start="123:14" pos:end="123:18"><name pos:start="123:14" pos:end="123:14">j</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>;</init> <condition pos:start="123:21" pos:end="123:27"><expr pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:21">j</name> <operator pos:start="123:23" pos:end="123:23">&lt;</operator> <literal type="number" pos:start="123:25" pos:end="123:26">16</literal></expr>;</condition> <incr pos:start="123:29" pos:end="123:31"><expr pos:start="123:29" pos:end="123:31"><name pos:start="123:29" pos:end="123:29">j</name><operator pos:start="123:30" pos:end="123:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="125:13" pos:end="125:63"><block_content pos:start="125:13" pos:end="125:63">

            <expr_stmt pos:start="125:13" pos:end="125:63"><expr pos:start="125:13" pos:end="125:62"><name pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:29">block_codebook</name><index pos:start="125:30" pos:end="125:32">[<expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">i</name></expr>]</index><index pos:start="125:33" pos:end="125:38">[<expr pos:start="125:34" pos:end="125:37"><literal type="number" pos:start="125:34" pos:end="125:35">15</literal><operator pos:start="125:36" pos:end="125:36">-</operator><name pos:start="125:37" pos:end="125:37">j</name></expr>]</index></name> <operator pos:start="125:40" pos:end="125:40">=</operator> <name pos:start="125:42" pos:end="125:62"><name pos:start="125:42" pos:end="125:44">tmp</name><index pos:start="125:45" pos:end="125:62">[<expr pos:start="125:46" pos:end="125:61"><call pos:start="125:46" pos:end="125:61"><name pos:start="125:46" pos:end="125:53">get_bits</name><argument_list pos:start="125:54" pos:end="125:61">(<argument pos:start="125:55" pos:end="125:57"><expr pos:start="125:55" pos:end="125:57"><operator pos:start="125:55" pos:end="125:55">&amp;</operator><name pos:start="125:56" pos:end="125:57">gb</name></expr></argument>, <argument pos:start="125:60" pos:end="125:60"><expr pos:start="125:60" pos:end="125:60"><literal type="number" pos:start="125:60" pos:end="125:60">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="131:5" pos:end="135:35"><if pos:start="131:5" pos:end="135:35">if <condition pos:start="131:8" pos:end="133:55">(<expr pos:start="131:9" pos:end="133:54"><call pos:start="131:9" pos:end="131:26"><name pos:start="131:9" pos:end="131:21">get_bits_left</name><argument_list pos:start="131:22" pos:end="131:26">(<argument pos:start="131:23" pos:end="131:25"><expr pos:start="131:23" pos:end="131:25"><operator pos:start="131:23" pos:end="131:23">&amp;</operator><name pos:start="131:24" pos:end="131:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="131:28" pos:end="131:28">&lt;</operator> <name pos:start="131:30" pos:end="131:40">vector_bits</name> <operator pos:start="131:42" pos:end="131:42">*</operator>

        <operator pos:start="133:9" pos:end="133:9">(</operator><name pos:start="133:10" pos:end="133:25"><name pos:start="133:10" pos:end="133:10">s</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:17">avctx</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:25">height</name></name> <operator pos:start="133:27" pos:end="133:27">/</operator> <literal type="number" pos:start="133:29" pos:end="133:29">4</literal><operator pos:start="133:30" pos:end="133:30">)</operator> <operator pos:start="133:32" pos:end="133:32">*</operator> <operator pos:start="133:34" pos:end="133:34">(</operator><name pos:start="133:35" pos:end="133:49"><name pos:start="133:35" pos:end="133:35">s</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:42">avctx</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:49">width</name></name> <operator pos:start="133:51" pos:end="133:51">/</operator> <literal type="number" pos:start="133:53" pos:end="133:53">4</literal><operator pos:start="133:54" pos:end="133:54">)</operator></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:35"><block_content pos:start="135:9" pos:end="135:35">

        <return pos:start="135:9" pos:end="135:35">return <expr pos:start="135:16" pos:end="135:34"><name pos:start="135:16" pos:end="135:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:38">/* read vectors and build frame */</comment>

    <for pos:start="141:5" pos:end="207:5">for <control pos:start="141:9" pos:end="141:46">(<init pos:start="141:10" pos:end="141:15"><expr pos:start="141:10" pos:end="141:14"><name pos:start="141:10" pos:end="141:10">y</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:41"><expr pos:start="141:17" pos:end="141:40"><name pos:start="141:17" pos:end="141:17">y</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <name pos:start="141:21" pos:end="141:36"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:28">avctx</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:36">height</name></name> <operator pos:start="141:38" pos:end="141:38">/</operator> <literal type="number" pos:start="141:40" pos:end="141:40">4</literal></expr>;</condition> <incr pos:start="141:43" pos:end="141:45"><expr pos:start="141:43" pos:end="141:45"><name pos:start="141:43" pos:end="141:43">y</name><operator pos:start="141:44" pos:end="141:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="143:9" pos:end="207:5"><block_content pos:start="143:9" pos:end="207:5">

        <for pos:start="143:9" pos:end="207:5">for <control pos:start="143:13" pos:end="143:49">(<init pos:start="143:14" pos:end="143:19"><expr pos:start="143:14" pos:end="143:18"><name pos:start="143:14" pos:end="143:14">x</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <literal type="number" pos:start="143:18" pos:end="143:18">0</literal></expr>;</init> <condition pos:start="143:21" pos:end="143:44"><expr pos:start="143:21" pos:end="143:43"><name pos:start="143:21" pos:end="143:21">x</name> <operator pos:start="143:23" pos:end="143:23">&lt;</operator> <name pos:start="143:25" pos:end="143:39"><name pos:start="143:25" pos:end="143:25">s</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:32">avctx</name><operator pos:start="143:33" pos:end="143:34">-&gt;</operator><name pos:start="143:35" pos:end="143:39">width</name></name> <operator pos:start="143:41" pos:end="143:41">/</operator> <literal type="number" pos:start="143:43" pos:end="143:43">4</literal></expr>;</condition> <incr pos:start="143:46" pos:end="143:48"><expr pos:start="143:46" pos:end="143:48"><name pos:start="143:46" pos:end="143:46">x</name><operator pos:start="143:47" pos:end="143:48">++</operator></expr></incr>)</control> <block pos:start="143:51" pos:end="207:5">{<block_content pos:start="145:13" pos:end="205:48">

            <decl_stmt pos:start="145:13" pos:end="145:61"><decl pos:start="145:13" pos:end="145:60"><type pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:20">unsigned</name> <name pos:start="145:22" pos:end="145:24">int</name></type> <name pos:start="145:26" pos:end="145:31">vector</name> <init pos:start="145:33" pos:end="145:60">= <expr pos:start="145:35" pos:end="145:60"><call pos:start="145:35" pos:end="145:60"><name pos:start="145:35" pos:end="145:42">get_bits</name><argument_list pos:start="145:43" pos:end="145:60">(<argument pos:start="145:44" pos:end="145:46"><expr pos:start="145:44" pos:end="145:46"><operator pos:start="145:44" pos:end="145:44">&amp;</operator><name pos:start="145:45" pos:end="145:46">gb</name></expr></argument>, <argument pos:start="145:49" pos:end="145:59"><expr pos:start="145:49" pos:end="145:59"><name pos:start="145:49" pos:end="145:59">vector_bits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="147:13" pos:end="147:31"><decl pos:start="147:13" pos:end="147:30"><type pos:start="147:13" pos:end="147:27"><specifier pos:start="147:13" pos:end="147:17">const</specifier> <name pos:start="147:19" pos:end="147:25">uint8_t</name> <modifier pos:start="147:27" pos:end="147:27">*</modifier></type><name pos:start="147:28" pos:end="147:30">src</name></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:27"><decl pos:start="149:13" pos:end="149:26"><type pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:15">int</name></type> <name pos:start="149:17" pos:end="149:26">src_stride</name></decl>;</decl_stmt>



            <if_stmt pos:start="153:13" pos:end="195:13"><if pos:start="153:13" pos:end="177:13">if <condition pos:start="153:16" pos:end="153:33">(<expr pos:start="153:17" pos:end="153:32"><name pos:start="153:17" pos:end="153:22">vector</name> <operator pos:start="153:24" pos:end="153:24">&lt;</operator> <name pos:start="153:26" pos:end="153:32">num_mvs</name></expr>)</condition> <block pos:start="153:35" pos:end="177:13">{<block_content pos:start="155:17" pos:end="175:55">

                <decl_stmt pos:start="155:17" pos:end="155:59"><decl pos:start="155:17" pos:end="155:58"><type pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">int</name></type> <name pos:start="155:21" pos:end="155:22">mx</name> <init pos:start="155:24" pos:end="155:58">= <expr pos:start="155:26" pos:end="155:58"><name pos:start="155:26" pos:end="155:26">x</name> <operator pos:start="155:28" pos:end="155:28">*</operator> <literal type="number" pos:start="155:30" pos:end="155:32">4</literal> <operator pos:start="155:32" pos:end="155:32">+</operator> <name pos:start="155:34" pos:end="155:58"><name pos:start="155:34" pos:end="155:34">s</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:47">mv_codebook</name><index pos:start="155:48" pos:end="155:55">[<expr pos:start="155:49" pos:end="155:54"><name pos:start="155:49" pos:end="155:54">vector</name></expr>]</index><index pos:start="155:56" pos:end="155:58">[<expr pos:start="155:57" pos:end="155:57"><literal type="number" pos:start="155:57" pos:end="155:57">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="157:17" pos:end="157:59"><decl pos:start="157:17" pos:end="157:58"><type pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">int</name></type> <name pos:start="157:21" pos:end="157:22">my</name> <init pos:start="157:24" pos:end="157:58">= <expr pos:start="157:26" pos:end="157:58"><name pos:start="157:26" pos:end="157:26">y</name> <operator pos:start="157:28" pos:end="157:28">*</operator> <literal type="number" pos:start="157:30" pos:end="157:32">4</literal> <operator pos:start="157:32" pos:end="157:32">+</operator> <name pos:start="157:34" pos:end="157:58"><name pos:start="157:34" pos:end="157:34">s</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:47">mv_codebook</name><index pos:start="157:48" pos:end="157:55">[<expr pos:start="157:49" pos:end="157:54"><name pos:start="157:49" pos:end="157:54">vector</name></expr>]</index><index pos:start="157:56" pos:end="157:58">[<expr pos:start="157:57" pos:end="157:57"><literal type="number" pos:start="157:57" pos:end="157:57">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="161:17" pos:end="169:17"><if pos:start="161:17" pos:end="169:17">if <condition pos:start="161:20" pos:end="163:56">(<expr pos:start="161:21" pos:end="163:55"><name pos:start="161:21" pos:end="161:38"><name pos:start="161:21" pos:end="161:22">mx</name> <argument_list type="generic" pos:start="161:24" pos:end="161:38">&lt; <argument pos:start="161:26" pos:end="161:36"><expr pos:start="161:26" pos:end="161:36"><literal type="number" pos:start="161:26" pos:end="161:26">0</literal> <operator pos:start="161:28" pos:end="161:29">||</operator> <name pos:start="161:31" pos:end="161:32">mx</name> <operator pos:start="161:34" pos:end="161:34">+</operator> <literal type="number" pos:start="161:36" pos:end="161:36">4</literal></expr></argument> &gt;</argument_list></name> <name pos:start="161:40" pos:end="161:54"><name pos:start="161:40" pos:end="161:40">s</name><operator pos:start="161:41" pos:end="161:42">-&gt;</operator><name pos:start="161:43" pos:end="161:47">avctx</name><operator pos:start="161:48" pos:end="161:49">-&gt;</operator><name pos:start="161:50" pos:end="161:54">width</name></name> <operator pos:start="161:56" pos:end="161:57">||</operator>

                    <name pos:start="163:21" pos:end="163:38"><name pos:start="163:21" pos:end="163:22">my</name> <argument_list type="generic" pos:start="163:24" pos:end="163:38">&lt; <argument pos:start="163:26" pos:end="163:36"><expr pos:start="163:26" pos:end="163:36"><literal type="number" pos:start="163:26" pos:end="163:26">0</literal> <operator pos:start="163:28" pos:end="163:29">||</operator> <name pos:start="163:31" pos:end="163:32">my</name> <operator pos:start="163:34" pos:end="163:34">+</operator> <literal type="number" pos:start="163:36" pos:end="163:36">4</literal></expr></argument> &gt;</argument_list></name> <name pos:start="163:40" pos:end="163:55"><name pos:start="163:40" pos:end="163:40">s</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:47">avctx</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:55">height</name></name></expr>)</condition> <block pos:start="163:58" pos:end="169:17">{<block_content pos:start="165:21" pos:end="167:29">

                    <expr_stmt pos:start="165:21" pos:end="165:88"><expr pos:start="165:21" pos:end="165:87"><call pos:start="165:21" pos:end="165:87"><name pos:start="165:21" pos:end="165:26">av_log</name><argument_list pos:start="165:27" pos:end="165:87">(<argument pos:start="165:28" pos:end="165:35"><expr pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:28">s</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:35">avctx</name></name></expr></argument>, <argument pos:start="165:38" pos:end="165:49"><expr pos:start="165:38" pos:end="165:49"><name pos:start="165:38" pos:end="165:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:52" pos:end="165:78"><expr pos:start="165:52" pos:end="165:78"><literal type="string" pos:start="165:52" pos:end="165:78">"MV %d %d out of picture\n"</literal></expr></argument>, <argument pos:start="165:81" pos:end="165:82"><expr pos:start="165:81" pos:end="165:82"><name pos:start="165:81" pos:end="165:82">mx</name></expr></argument>, <argument pos:start="165:85" pos:end="165:86"><expr pos:start="165:85" pos:end="165:86"><name pos:start="165:85" pos:end="165:86">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="167:21" pos:end="167:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="173:17" pos:end="173:82"><expr pos:start="173:17" pos:end="173:81"><name pos:start="173:17" pos:end="173:19">src</name> <operator pos:start="173:21" pos:end="173:21">=</operator> <name pos:start="173:23" pos:end="173:43"><name pos:start="173:23" pos:end="173:23">s</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:35">last_frame</name><operator pos:start="173:36" pos:end="173:36">.</operator><name pos:start="173:37" pos:end="173:40">data</name><index pos:start="173:41" pos:end="173:43">[<expr pos:start="173:42" pos:end="173:42"><literal type="number" pos:start="173:42" pos:end="173:42">0</literal></expr>]</index></name> <operator pos:start="173:45" pos:end="173:45">+</operator> <name pos:start="173:47" pos:end="173:48">mx</name> <operator pos:start="173:50" pos:end="173:50">+</operator> <name pos:start="173:52" pos:end="173:53">my</name> <operator pos:start="173:55" pos:end="173:55">*</operator> <name pos:start="173:57" pos:end="173:81"><name pos:start="173:57" pos:end="173:57">s</name><operator pos:start="173:58" pos:end="173:59">-&gt;</operator><name pos:start="173:60" pos:end="173:69">last_frame</name><operator pos:start="173:70" pos:end="173:70">.</operator><name pos:start="173:71" pos:end="173:78">linesize</name><index pos:start="173:79" pos:end="173:81">[<expr pos:start="173:80" pos:end="173:80"><literal type="number" pos:start="173:80" pos:end="173:80">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:55"><expr pos:start="175:17" pos:end="175:54"><name pos:start="175:17" pos:end="175:26">src_stride</name> <operator pos:start="175:28" pos:end="175:28">=</operator> <name pos:start="175:30" pos:end="175:54"><name pos:start="175:30" pos:end="175:30">s</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:42">last_frame</name><operator pos:start="175:43" pos:end="175:43">.</operator><name pos:start="175:44" pos:end="175:51">linesize</name><index pos:start="175:52" pos:end="175:54">[<expr pos:start="175:53" pos:end="175:53"><literal type="number" pos:start="175:53" pos:end="175:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="177:15" pos:end="195:13">else <block pos:start="177:20" pos:end="195:13">{<block_content pos:start="179:17" pos:end="193:31">

                <decl_stmt pos:start="179:17" pos:end="179:46"><decl pos:start="179:17" pos:end="179:45"><type pos:start="179:17" pos:end="179:19"><name pos:start="179:17" pos:end="179:19">int</name></type> <name pos:start="179:21" pos:end="179:26">offset</name> <init pos:start="179:28" pos:end="179:45">= <expr pos:start="179:30" pos:end="179:45"><name pos:start="179:30" pos:end="179:35">vector</name> <operator pos:start="179:37" pos:end="179:37">-</operator> <name pos:start="179:39" pos:end="179:45">num_mvs</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="181:17" pos:end="191:29"><if pos:start="181:17" pos:end="183:49">if <condition pos:start="181:20" pos:end="181:44">(<expr pos:start="181:21" pos:end="181:43"><name pos:start="181:21" pos:end="181:26">offset</name> <operator pos:start="181:28" pos:end="181:28">&lt;</operator> <name pos:start="181:30" pos:end="181:43">num_blocks_raw</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:49"><block_content pos:start="183:21" pos:end="183:49">

                    <expr_stmt pos:start="183:21" pos:end="183:49"><expr pos:start="183:21" pos:end="183:48"><name pos:start="183:21" pos:end="183:23">src</name> <operator pos:start="183:25" pos:end="183:25">=</operator> <name pos:start="183:27" pos:end="183:36">blocks_raw</name> <operator pos:start="183:38" pos:end="183:38">+</operator> <literal type="number" pos:start="183:40" pos:end="183:41">16</literal><operator pos:start="183:42" pos:end="183:42">*</operator><name pos:start="183:43" pos:end="183:48">offset</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="185:17" pos:end="187:69">else if <condition pos:start="185:25" pos:end="185:69">(<expr pos:start="185:26" pos:end="185:68"><name pos:start="185:26" pos:end="185:31">offset</name> <operator pos:start="185:33" pos:end="185:33">-</operator> <name pos:start="185:35" pos:end="185:48">num_blocks_raw</name> <operator pos:start="185:50" pos:end="185:50">&lt;</operator> <name pos:start="185:52" pos:end="185:68">num_blocks_packed</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:69"><block_content pos:start="187:21" pos:end="187:69">

                    <expr_stmt pos:start="187:21" pos:end="187:69"><expr pos:start="187:21" pos:end="187:68"><name pos:start="187:21" pos:end="187:23">src</name> <operator pos:start="187:25" pos:end="187:25">=</operator> <name pos:start="187:27" pos:end="187:68"><name pos:start="187:27" pos:end="187:27">s</name><operator pos:start="187:28" pos:end="187:29">-&gt;</operator><name pos:start="187:30" pos:end="187:43">block_codebook</name><index pos:start="187:44" pos:end="187:68">[<expr pos:start="187:45" pos:end="187:67"><name pos:start="187:45" pos:end="187:50">offset</name> <operator pos:start="187:52" pos:end="187:52">-</operator> <name pos:start="187:54" pos:end="187:67">num_blocks_raw</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="189:17" pos:end="191:29">else<block type="pseudo" pos:start="191:21" pos:end="191:29"><block_content pos:start="191:21" pos:end="191:29">

                    <continue pos:start="191:21" pos:end="191:29">continue;</continue></block_content></block></else></if_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:31"><expr pos:start="193:17" pos:end="193:30"><name pos:start="193:17" pos:end="193:26">src_stride</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <literal type="number" pos:start="193:30" pos:end="193:30">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="199:13" pos:end="205:48">for <control pos:start="199:17" pos:end="199:35">(<init pos:start="199:18" pos:end="199:23"><expr pos:start="199:18" pos:end="199:22"><name pos:start="199:18" pos:end="199:18">j</name> <operator pos:start="199:20" pos:end="199:20">=</operator> <literal type="number" pos:start="199:22" pos:end="199:22">0</literal></expr>;</init> <condition pos:start="199:25" pos:end="199:30"><expr pos:start="199:25" pos:end="199:29"><name pos:start="199:25" pos:end="199:25">j</name> <operator pos:start="199:27" pos:end="199:27">&lt;</operator> <literal type="number" pos:start="199:29" pos:end="199:29">4</literal></expr>;</condition> <incr pos:start="199:32" pos:end="199:34"><expr pos:start="199:32" pos:end="199:34"><name pos:start="199:32" pos:end="199:32">j</name><operator pos:start="199:33" pos:end="199:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:17" pos:end="205:48"><block_content pos:start="201:17" pos:end="205:48">

                <for pos:start="201:17" pos:end="205:48">for <control pos:start="201:21" pos:end="201:39">(<init pos:start="201:22" pos:end="201:27"><expr pos:start="201:22" pos:end="201:26"><name pos:start="201:22" pos:end="201:22">i</name> <operator pos:start="201:24" pos:end="201:24">=</operator> <literal type="number" pos:start="201:26" pos:end="201:26">0</literal></expr>;</init> <condition pos:start="201:29" pos:end="201:34"><expr pos:start="201:29" pos:end="201:33"><name pos:start="201:29" pos:end="201:29">i</name> <operator pos:start="201:31" pos:end="201:31">&lt;</operator> <literal type="number" pos:start="201:33" pos:end="201:33">4</literal></expr>;</condition> <incr pos:start="201:36" pos:end="201:38"><expr pos:start="201:36" pos:end="201:38"><name pos:start="201:36" pos:end="201:36">i</name><operator pos:start="201:37" pos:end="201:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:21" pos:end="205:48"><block_content pos:start="203:21" pos:end="205:48">

                    <expr_stmt pos:start="203:21" pos:end="205:48"><expr pos:start="203:21" pos:end="205:47"><name pos:start="203:21" pos:end="203:82"><name pos:start="203:21" pos:end="203:25">frame</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:31">data</name><index pos:start="203:32" pos:end="203:34">[<expr pos:start="203:33" pos:end="203:33"><literal type="number" pos:start="203:33" pos:end="203:33">0</literal></expr>]</index><index pos:start="203:35" pos:end="203:82">[<expr pos:start="203:36" pos:end="203:81"><operator pos:start="203:36" pos:end="203:36">(</operator><name pos:start="203:37" pos:end="203:37">y</name> <operator pos:start="203:39" pos:end="203:39">*</operator> <literal type="number" pos:start="203:41" pos:end="203:43">4</literal> <operator pos:start="203:43" pos:end="203:43">+</operator> <name pos:start="203:45" pos:end="203:45">j</name><operator pos:start="203:46" pos:end="203:46">)</operator> <operator pos:start="203:48" pos:end="203:48">*</operator> <name pos:start="203:50" pos:end="203:67"><name pos:start="203:50" pos:end="203:54">frame</name><operator pos:start="203:55" pos:end="203:56">-&gt;</operator><name pos:start="203:57" pos:end="203:64">linesize</name><index pos:start="203:65" pos:end="203:67">[<expr pos:start="203:66" pos:end="203:66"><literal type="number" pos:start="203:66" pos:end="203:66">0</literal></expr>]</index></name> <operator pos:start="203:69" pos:end="203:69">+</operator> <operator pos:start="203:71" pos:end="203:71">(</operator><name pos:start="203:72" pos:end="203:72">x</name> <operator pos:start="203:74" pos:end="203:74">*</operator> <literal type="number" pos:start="203:76" pos:end="203:78">4</literal> <operator pos:start="203:78" pos:end="203:78">+</operator> <name pos:start="203:80" pos:end="203:80">i</name><operator pos:start="203:81" pos:end="203:81">)</operator></expr>]</index></name> <operator pos:start="203:84" pos:end="203:84">=</operator>

                        <name pos:start="205:25" pos:end="205:47"><name pos:start="205:25" pos:end="205:27">src</name><index pos:start="205:28" pos:end="205:47">[<expr pos:start="205:29" pos:end="205:46"><name pos:start="205:29" pos:end="205:29">j</name> <operator pos:start="205:31" pos:end="205:31">*</operator> <name pos:start="205:33" pos:end="205:42">src_stride</name> <operator pos:start="205:44" pos:end="205:44">+</operator> <name pos:start="205:46" pos:end="205:46">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></for></block_content></block></for>



    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><literal type="number" pos:start="211:12" pos:end="211:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
