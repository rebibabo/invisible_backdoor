<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27241.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:70"><name pos:start="1:1" pos:end="1:15">mst_fpga_writeb</name><argument_list pos:start="1:16" pos:end="1:70">(<argument pos:start="1:17" pos:end="1:28">void *opaque</argument>, <argument pos:start="1:31" pos:end="1:53">target_phys_addr_t addr</argument>, <argument pos:start="1:56" pos:end="1:69">uint32_t value</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:9" pos:end="97:9">

	<decl_stmt pos:start="5:9" pos:end="5:52"><decl pos:start="5:9" pos:end="5:51"><type pos:start="5:9" pos:end="5:23"><name pos:start="5:9" pos:end="5:21">mst_irq_state</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:51">= <expr pos:start="5:28" pos:end="5:51"><operator pos:start="5:28" pos:end="5:28">(</operator><name pos:start="5:29" pos:end="5:41">mst_irq_state</name> <operator pos:start="5:43" pos:end="5:43">*</operator><operator pos:start="5:44" pos:end="5:44">)</operator> <name pos:start="5:46" pos:end="5:51">opaque</name></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="7:9" pos:end="7:28"><expr pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:13">value</name> <operator pos:start="7:15" pos:end="7:16">&amp;=</operator> <literal type="number" pos:start="7:18" pos:end="7:27">0xffffffff</literal></expr>;</expr_stmt>



	<switch pos:start="11:9" pos:end="97:9">switch <condition pos:start="11:16" pos:end="11:21">(<expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:20">addr</name></expr>)</condition> <block pos:start="11:23" pos:end="97:9">{<block_content pos:start="13:9" pos:end="95:57">

	<case pos:start="13:9" pos:end="13:25">case <expr pos:start="13:14" pos:end="13:24"><name pos:start="13:14" pos:end="13:24">MST_LEDDAT1</name></expr>:</case>

		<expr_stmt pos:start="15:17" pos:end="15:35"><expr pos:start="15:17" pos:end="15:34"><name pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:26">leddat1</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:34">value</name></expr>;</expr_stmt>

		<break pos:start="17:17" pos:end="17:22">break;</break>

	<case pos:start="19:9" pos:end="19:25">case <expr pos:start="19:14" pos:end="19:24"><name pos:start="19:14" pos:end="19:24">MST_LEDDAT2</name></expr>:</case>

		<expr_stmt pos:start="21:17" pos:end="21:35"><expr pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">leddat2</name></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <name pos:start="21:30" pos:end="21:34">value</name></expr>;</expr_stmt>

		<break pos:start="23:17" pos:end="23:22">break;</break>

	<case pos:start="25:9" pos:end="25:25">case <expr pos:start="25:14" pos:end="25:24"><name pos:start="25:14" pos:end="25:24">MST_LEDCTRL</name></expr>:</case>

		<expr_stmt pos:start="27:17" pos:end="27:35"><expr pos:start="27:17" pos:end="27:34"><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">ledctrl</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:34">value</name></expr>;</expr_stmt>

		<break pos:start="29:17" pos:end="29:22">break;</break>

	<case pos:start="31:9" pos:end="31:23">case <expr pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:22">MST_GPSWR</name></expr>:</case>

		<expr_stmt pos:start="33:17" pos:end="33:33"><expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">gpswr</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:32">value</name></expr>;</expr_stmt>

		<break pos:start="35:17" pos:end="35:22">break;</break>

	<case pos:start="37:9" pos:end="37:24">case <expr pos:start="37:14" pos:end="37:23"><name pos:start="37:14" pos:end="37:23">MST_MSCWR1</name></expr>:</case>

		<expr_stmt pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:25">mscwr1</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:33">value</name></expr>;</expr_stmt>

		<break pos:start="41:17" pos:end="41:22">break;</break>

	<case pos:start="43:9" pos:end="43:24">case <expr pos:start="43:14" pos:end="43:23"><name pos:start="43:14" pos:end="43:23">MST_MSCWR2</name></expr>:</case>

		<expr_stmt pos:start="45:17" pos:end="45:34"><expr pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:25">mscwr2</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:33">value</name></expr>;</expr_stmt>

		<break pos:start="47:17" pos:end="47:22">break;</break>

	<case pos:start="49:9" pos:end="49:24">case <expr pos:start="49:14" pos:end="49:23"><name pos:start="49:14" pos:end="49:23">MST_MSCWR3</name></expr>:</case>

		<expr_stmt pos:start="51:17" pos:end="51:34"><expr pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:25">mscwr3</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:33">value</name></expr>;</expr_stmt>

		<break pos:start="53:17" pos:end="53:22">break;</break>

	<case pos:start="55:9" pos:end="55:23">case <expr pos:start="55:14" pos:end="55:22"><name pos:start="55:14" pos:end="55:22">MST_MSCRD</name></expr>:</case>

		<expr_stmt pos:start="57:17" pos:end="57:34"><expr pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:24">mscrd</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator>  <name pos:start="57:29" pos:end="57:33">value</name></expr>;</expr_stmt>

		<break pos:start="59:17" pos:end="59:22">break;</break>

	<case pos:start="61:9" pos:end="61:27">case <expr pos:start="61:14" pos:end="61:26"><name pos:start="61:14" pos:end="61:26">MST_INTMSKENA</name></expr>:</case>	<comment type="block" pos:start="61:33" pos:end="61:52">/* Mask interrupt */</comment>

		<expr_stmt pos:start="63:17" pos:end="63:49"><expr pos:start="63:17" pos:end="63:48"><name pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:28">intmskena</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <operator pos:start="63:32" pos:end="63:32">(</operator><name pos:start="63:33" pos:end="63:37">value</name> <operator pos:start="63:39" pos:end="63:39">&amp;</operator> <literal type="number" pos:start="63:41" pos:end="63:47">0xFEEFF</literal><operator pos:start="63:48" pos:end="63:48">)</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="65:17" pos:end="65:69"><expr pos:start="65:17" pos:end="65:68"><call pos:start="65:17" pos:end="65:68"><name pos:start="65:17" pos:end="65:28">qemu_set_irq</name><argument_list pos:start="65:29" pos:end="65:68">(<argument pos:start="65:30" pos:end="65:38"><expr pos:start="65:30" pos:end="65:38"><name pos:start="65:30" pos:end="65:38"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:38">parent</name></name></expr></argument>, <argument pos:start="65:41" pos:end="65:67"><expr pos:start="65:41" pos:end="65:67"><name pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:41">s</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:52">intsetclr</name></name> <operator pos:start="65:54" pos:end="65:54">&amp;</operator> <name pos:start="65:56" pos:end="65:67"><name pos:start="65:56" pos:end="65:56">s</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:67">intmskena</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="67:17" pos:end="67:22">break;</break>

	<case pos:start="69:9" pos:end="69:27">case <expr pos:start="69:14" pos:end="69:26"><name pos:start="69:14" pos:end="69:26">MST_INTSETCLR</name></expr>:</case>	<comment type="block" pos:start="69:33" pos:end="69:60">/* clear or set interrupt */</comment>

		<expr_stmt pos:start="71:17" pos:end="71:49"><expr pos:start="71:17" pos:end="71:48"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:28">intsetclr</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <operator pos:start="71:32" pos:end="71:32">(</operator><name pos:start="71:33" pos:end="71:37">value</name> <operator pos:start="71:39" pos:end="71:39">&amp;</operator> <literal type="number" pos:start="71:41" pos:end="71:47">0xFEEFF</literal><operator pos:start="71:48" pos:end="71:48">)</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="73:17" pos:end="73:69"><expr pos:start="73:17" pos:end="73:68"><call pos:start="73:17" pos:end="73:68"><name pos:start="73:17" pos:end="73:28">qemu_set_irq</name><argument_list pos:start="73:29" pos:end="73:68">(<argument pos:start="73:30" pos:end="73:38"><expr pos:start="73:30" pos:end="73:38"><name pos:start="73:30" pos:end="73:38"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:38">parent</name></name></expr></argument>, <argument pos:start="73:41" pos:end="73:67"><expr pos:start="73:41" pos:end="73:67"><name pos:start="73:41" pos:end="73:52"><name pos:start="73:41" pos:end="73:41">s</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:52">intsetclr</name></name> <operator pos:start="73:54" pos:end="73:54">&amp;</operator> <name pos:start="73:56" pos:end="73:67"><name pos:start="73:56" pos:end="73:56">s</name><operator pos:start="73:57" pos:end="73:58">-&gt;</operator><name pos:start="73:59" pos:end="73:67">intmskena</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<break pos:start="75:17" pos:end="75:22">break;</break>

		<comment type="block" pos:start="77:17" pos:end="77:74">/* For PCMCIAx allow the to change only power and reset */</comment>

	<case pos:start="79:9" pos:end="79:25">case <expr pos:start="79:14" pos:end="79:24"><name pos:start="79:14" pos:end="79:24">MST_PCMCIA0</name></expr>:</case>

		<expr_stmt pos:start="81:17" pos:end="81:67"><expr pos:start="81:17" pos:end="81:66"><name pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:26">pcmcia0</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:35">value</name> <operator pos:start="81:37" pos:end="81:37">&amp;</operator> <literal type="number" pos:start="81:39" pos:end="81:42">0x1f</literal><operator pos:start="81:43" pos:end="81:43">)</operator> <operator pos:start="81:45" pos:end="81:45">|</operator> <operator pos:start="81:47" pos:end="81:47">(</operator><name pos:start="81:48" pos:end="81:57"><name pos:start="81:48" pos:end="81:48">s</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:57">pcmcia0</name></name> <operator pos:start="81:59" pos:end="81:59">&amp;</operator> <operator pos:start="81:61" pos:end="81:61">~</operator><literal type="number" pos:start="81:62" pos:end="81:65">0x1f</literal><operator pos:start="81:66" pos:end="81:66">)</operator></expr>;</expr_stmt>

		<break pos:start="83:17" pos:end="83:22">break;</break>

	<case pos:start="85:9" pos:end="85:25">case <expr pos:start="85:14" pos:end="85:24"><name pos:start="85:14" pos:end="85:24">MST_PCMCIA1</name></expr>:</case>

		<expr_stmt pos:start="87:17" pos:end="87:67"><expr pos:start="87:17" pos:end="87:66"><name pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:26">pcmcia1</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <operator pos:start="87:30" pos:end="87:30">(</operator><name pos:start="87:31" pos:end="87:35">value</name> <operator pos:start="87:37" pos:end="87:37">&amp;</operator> <literal type="number" pos:start="87:39" pos:end="87:42">0x1f</literal><operator pos:start="87:43" pos:end="87:43">)</operator> <operator pos:start="87:45" pos:end="87:45">|</operator> <operator pos:start="87:47" pos:end="87:47">(</operator><name pos:start="87:48" pos:end="87:57"><name pos:start="87:48" pos:end="87:48">s</name><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:57">pcmcia1</name></name> <operator pos:start="87:59" pos:end="87:59">&amp;</operator> <operator pos:start="87:61" pos:end="87:61">~</operator><literal type="number" pos:start="87:62" pos:end="87:65">0x1f</literal><operator pos:start="87:66" pos:end="87:66">)</operator></expr>;</expr_stmt>

		<break pos:start="89:17" pos:end="89:22">break;</break>

	<default pos:start="91:9" pos:end="91:16">default:</default>

		<expr_stmt pos:start="93:17" pos:end="95:57"><expr pos:start="93:17" pos:end="95:56"><call pos:start="93:17" pos:end="95:56"><name pos:start="93:17" pos:end="93:22">printf</name><argument_list pos:start="93:23" pos:end="95:56">(<argument pos:start="93:24" pos:end="95:49"><expr pos:start="93:24" pos:end="95:49"><literal type="string" pos:start="93:24" pos:end="93:74">"Mainstone - mst_fpga_writeb: Bad register offset "</literal>

			<literal type="string" pos:start="95:25" pos:end="95:28">"0x"</literal> <name pos:start="95:30" pos:end="95:43">TARGET_FMT_plx</name> <literal type="string" pos:start="95:45" pos:end="95:49">" \n"</literal></expr></argument>, <argument pos:start="95:52" pos:end="95:55"><expr pos:start="95:52" pos:end="95:55"><name pos:start="95:52" pos:end="95:55">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></switch>

</block_content>}</block>
</unit>
