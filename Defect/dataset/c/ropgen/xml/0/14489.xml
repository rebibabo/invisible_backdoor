<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14489.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">scsi_bus_legacy_handle_cmdline</name><parameter_list pos:start="1:36" pos:end="1:63">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">SCSIBus</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">bus</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:18">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">Location</name></type> <name pos:start="5:14" pos:end="5:16">loc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">DriveInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">unit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:17">loc_push_none</name><argument_list pos:start="15:18" pos:end="15:23">(<argument pos:start="15:19" pos:end="15:22"><expr pos:start="15:19" pos:end="15:22"><operator pos:start="15:19" pos:end="15:19">&amp;</operator><name pos:start="15:20" pos:end="15:22">loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="43:5">for <control pos:start="17:9" pos:end="17:57">(<init pos:start="17:10" pos:end="17:18"><expr pos:start="17:10" pos:end="17:17"><name pos:start="17:10" pos:end="17:13">unit</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>;</init> <condition pos:start="17:20" pos:end="17:49"><expr pos:start="17:20" pos:end="17:48"><name pos:start="17:20" pos:end="17:23">unit</name> <operator pos:start="17:25" pos:end="17:26">&lt;=</operator> <name pos:start="17:28" pos:end="17:48"><name pos:start="17:28" pos:end="17:30">bus</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:36">info</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:48">max_target</name></name></expr>;</condition> <incr pos:start="17:51" pos:end="17:56"><expr pos:start="17:51" pos:end="17:56"><name pos:start="17:51" pos:end="17:54">unit</name><operator pos:start="17:55" pos:end="17:56">++</operator></expr></incr>)</control> <block pos:start="17:59" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:9">

        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:13">dinfo</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:52"><name pos:start="19:17" pos:end="19:25">drive_get</name><argument_list pos:start="19:26" pos:end="19:52">(<argument pos:start="19:27" pos:end="19:33"><expr pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:33">IF_SCSI</name></expr></argument>, <argument pos:start="19:36" pos:end="19:45"><expr pos:start="19:36" pos:end="19:45"><name pos:start="19:36" pos:end="19:45"><name pos:start="19:36" pos:end="19:38">bus</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:45">busnr</name></name></expr></argument>, <argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><name pos:start="19:48" pos:end="19:51">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:26">(<expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:17">dinfo</name> <operator pos:start="21:19" pos:end="21:20">==</operator> <name pos:start="21:22" pos:end="21:25">NULL</name></expr>)</condition> <block pos:start="21:28" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><call pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:29">qemu_opts_loc_restore</name><argument_list pos:start="27:30" pos:end="27:42">(<argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:35">dinfo</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:41">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:63"><expr pos:start="29:9" pos:end="31:62"><call pos:start="29:9" pos:end="31:62"><name pos:start="29:9" pos:end="29:33">scsi_bus_legacy_add_drive</name><argument_list pos:start="29:34" pos:end="31:62">(<argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">bus</name></expr></argument>, <argument pos:start="29:40" pos:end="29:73"><expr pos:start="29:40" pos:end="29:73"><call pos:start="29:40" pos:end="29:73"><name pos:start="29:40" pos:end="29:45">blk_bs</name><argument_list pos:start="29:46" pos:end="29:73">(<argument pos:start="29:47" pos:end="29:72"><expr pos:start="29:47" pos:end="29:72"><call pos:start="29:47" pos:end="29:72"><name pos:start="29:47" pos:end="29:65">blk_by_legacy_dinfo</name><argument_list pos:start="29:66" pos:end="29:72">(<argument pos:start="29:67" pos:end="29:71"><expr pos:start="29:67" pos:end="29:71"><name pos:start="29:67" pos:end="29:71">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="31:35" pos:end="31:38"><expr pos:start="31:35" pos:end="31:38"><name pos:start="31:35" pos:end="31:38">unit</name></expr></argument>, <argument pos:start="31:41" pos:end="31:45"><expr pos:start="31:41" pos:end="31:45"><name pos:start="31:41" pos:end="31:45">false</name></expr></argument>, <argument pos:start="31:48" pos:end="31:49"><expr pos:start="31:48" pos:end="31:49"><operator pos:start="31:48" pos:end="31:48">-</operator><literal type="number" pos:start="31:49" pos:end="31:49">1</literal></expr></argument>, <argument pos:start="31:52" pos:end="31:55"><expr pos:start="31:52" pos:end="31:55"><name pos:start="31:52" pos:end="31:55">NULL</name></expr></argument>, <argument pos:start="31:58" pos:end="31:61"><expr pos:start="31:58" pos:end="31:61"><operator pos:start="31:58" pos:end="31:58">&amp;</operator><name pos:start="31:59" pos:end="31:61">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:15">err</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <name pos:start="33:20" pos:end="33:23">NULL</name></expr>)</condition> <block pos:start="33:26" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:18">

            <expr_stmt pos:start="35:13" pos:end="35:54"><expr pos:start="35:13" pos:end="35:53"><call pos:start="35:13" pos:end="35:53"><name pos:start="35:13" pos:end="35:24">error_report</name><argument_list pos:start="35:25" pos:end="35:53">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><literal type="string" pos:start="35:26" pos:end="35:29">"%s"</literal></expr></argument>, <argument pos:start="35:32" pos:end="35:52"><expr pos:start="35:32" pos:end="35:52"><call pos:start="35:32" pos:end="35:52"><name pos:start="35:32" pos:end="35:47">error_get_pretty</name><argument_list pos:start="35:48" pos:end="35:52">(<argument pos:start="35:49" pos:end="35:51"><expr pos:start="35:49" pos:end="35:51"><name pos:start="35:49" pos:end="35:51">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><call pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:27">error_propagate</name><argument_list pos:start="37:28" pos:end="37:38">(<argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">errp</name></expr></argument>, <argument pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><name pos:start="37:35" pos:end="37:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><call pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:11">loc_pop</name><argument_list pos:start="45:12" pos:end="45:17">(<argument pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:16"><operator pos:start="45:13" pos:end="45:13">&amp;</operator><name pos:start="45:14" pos:end="45:16">loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
