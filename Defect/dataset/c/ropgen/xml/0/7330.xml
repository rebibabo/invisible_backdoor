<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7330.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:35">get_cabac_cbf_ctx</name><parameter_list pos:start="1:36" pos:end="1:71">( <parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:48">H264Context</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">h</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:60"><decl pos:start="1:54" pos:end="1:60"><type pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:60">cat</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:69"><decl pos:start="1:63" pos:end="1:69"><type pos:start="1:63" pos:end="1:69"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:69">idx</name></decl></parameter> )</parameter_list> <block pos:start="1:73" pos:end="53:1">{<block_content pos:start="3:5" pos:end="51:25">

    <decl_stmt pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:11"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:11">nza</name></decl>, <decl pos:start="3:14" pos:end="3:16"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:14" pos:end="3:16">nzb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ctx</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="35:5"><if pos:start="9:5" pos:end="15:5">if<condition pos:start="9:7" pos:end="9:18">( <expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">cat</name> <operator pos:start="9:13" pos:end="9:14">==</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr> )</condition> <block pos:start="9:20" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:32">

        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:11">nza</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:25"><name pos:start="11:15" pos:end="11:15">h</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:25">left_cbp</name></name><operator pos:start="11:26" pos:end="11:26">&amp;</operator><literal type="number" pos:start="11:27" pos:end="11:31">0x100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:11">nzb</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:15">h</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator> <name pos:start="13:19" pos:end="13:25">top_cbp</name></name><operator pos:start="13:26" pos:end="13:26">&amp;</operator><literal type="number" pos:start="13:27" pos:end="13:31">0x100</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="21:5">else if<condition pos:start="15:14" pos:end="15:37">( <expr pos:start="15:16" pos:end="15:35"><name pos:start="15:16" pos:end="15:18">cat</name> <operator pos:start="15:20" pos:end="15:21">==</operator> <literal type="number" pos:start="15:23" pos:end="15:23">1</literal> <operator pos:start="15:25" pos:end="15:26">||</operator> <name pos:start="15:28" pos:end="15:30">cat</name> <operator pos:start="15:32" pos:end="15:33">==</operator> <literal type="number" pos:start="15:35" pos:end="15:35">2</literal></expr> )</condition> <block pos:start="15:39" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:54">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:11">nza</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:53"><name pos:start="17:15" pos:end="17:15">h</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:37">non_zero_count_cache</name><index pos:start="17:38" pos:end="17:53">[<expr pos:start="17:39" pos:end="17:52"><name pos:start="17:39" pos:end="17:48"><name pos:start="17:39" pos:end="17:43">scan8</name><index pos:start="17:44" pos:end="17:48">[<expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:47">idx</name></expr>]</index></name> <operator pos:start="17:50" pos:end="17:50">-</operator> <literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:54"><expr pos:start="19:9" pos:end="19:53"><name pos:start="19:9" pos:end="19:11">nzb</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:53"><name pos:start="19:15" pos:end="19:15">h</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:37">non_zero_count_cache</name><index pos:start="19:38" pos:end="19:53">[<expr pos:start="19:39" pos:end="19:52"><name pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:43">scan8</name><index pos:start="19:44" pos:end="19:48">[<expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:47">idx</name></expr>]</index></name> <operator pos:start="19:50" pos:end="19:50">-</operator> <literal type="number" pos:start="19:52" pos:end="19:52">8</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="27:5">else if<condition pos:start="21:14" pos:end="21:25">( <expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:18">cat</name> <operator pos:start="21:20" pos:end="21:21">==</operator> <literal type="number" pos:start="21:23" pos:end="21:23">3</literal></expr> )</condition> <block pos:start="21:27" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:42">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:11">nza</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">(</operator><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:16">h</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:26">left_cbp</name></name><operator pos:start="23:27" pos:end="23:28">&gt;&gt;</operator><operator pos:start="23:29" pos:end="23:29">(</operator><literal type="number" pos:start="23:30" pos:end="23:31">6</literal><operator pos:start="23:31" pos:end="23:31">+</operator><name pos:start="23:32" pos:end="23:34">idx</name><operator pos:start="23:35" pos:end="23:35">)</operator><operator pos:start="23:36" pos:end="23:36">)</operator><operator pos:start="23:37" pos:end="23:37">&amp;</operator><literal type="number" pos:start="23:38" pos:end="23:41">0x01</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:11">nzb</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">(</operator><name pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:16">h</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator> <name pos:start="25:20" pos:end="25:26">top_cbp</name></name><operator pos:start="25:27" pos:end="25:28">&gt;&gt;</operator><operator pos:start="25:29" pos:end="25:29">(</operator><literal type="number" pos:start="25:30" pos:end="25:31">6</literal><operator pos:start="25:31" pos:end="25:31">+</operator><name pos:start="25:32" pos:end="25:34">idx</name><operator pos:start="25:35" pos:end="25:35">)</operator><operator pos:start="25:36" pos:end="25:36">)</operator><operator pos:start="25:37" pos:end="25:37">&amp;</operator><literal type="number" pos:start="25:38" pos:end="25:41">0x01</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else <block pos:start="27:12" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:57">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><call pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:14">assert</name><argument_list pos:start="29:15" pos:end="29:24">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:18">cat</name> <operator pos:start="29:20" pos:end="29:21">==</operator> <literal type="number" pos:start="29:23" pos:end="29:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:11">nza</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:56"><name pos:start="31:15" pos:end="31:15">h</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:37">non_zero_count_cache</name><index pos:start="31:38" pos:end="31:56">[<expr pos:start="31:39" pos:end="31:55"><name pos:start="31:39" pos:end="31:51"><name pos:start="31:39" pos:end="31:43">scan8</name><index pos:start="31:44" pos:end="31:51">[<expr pos:start="31:45" pos:end="31:50"><literal type="number" pos:start="31:45" pos:end="31:47">16</literal><operator pos:start="31:47" pos:end="31:47">+</operator><name pos:start="31:48" pos:end="31:50">idx</name></expr>]</index></name> <operator pos:start="31:53" pos:end="31:53">-</operator> <literal type="number" pos:start="31:55" pos:end="31:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:57"><expr pos:start="33:9" pos:end="33:56"><name pos:start="33:9" pos:end="33:11">nzb</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:56"><name pos:start="33:15" pos:end="33:15">h</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:37">non_zero_count_cache</name><index pos:start="33:38" pos:end="33:56">[<expr pos:start="33:39" pos:end="33:55"><name pos:start="33:39" pos:end="33:51"><name pos:start="33:39" pos:end="33:43">scan8</name><index pos:start="33:44" pos:end="33:51">[<expr pos:start="33:45" pos:end="33:50"><literal type="number" pos:start="33:45" pos:end="33:47">16</literal><operator pos:start="33:47" pos:end="33:47">+</operator><name pos:start="33:48" pos:end="33:50">idx</name></expr>]</index></name> <operator pos:start="33:53" pos:end="33:53">-</operator> <literal type="number" pos:start="33:55" pos:end="33:55">8</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:14"><if pos:start="39:5" pos:end="41:14">if<condition pos:start="39:7" pos:end="39:17">( <expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">nza</name> <operator pos:start="39:13" pos:end="39:13">&gt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr> )</condition><block type="pseudo" pos:start="41:9" pos:end="41:14"><block_content pos:start="41:9" pos:end="41:14">

        <expr_stmt pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:11">ctx</name><operator pos:start="41:12" pos:end="41:13">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:17"><if pos:start="45:5" pos:end="47:17">if<condition pos:start="45:7" pos:end="45:17">( <expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">nzb</name> <operator pos:start="45:13" pos:end="45:13">&gt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr> )</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">ctx</name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:25">return <expr pos:start="51:12" pos:end="51:24"><name pos:start="51:12" pos:end="51:14">ctx</name> <operator pos:start="51:16" pos:end="51:16">+</operator> <literal type="number" pos:start="51:18" pos:end="51:18">4</literal> <operator pos:start="51:20" pos:end="51:20">*</operator> <name pos:start="51:22" pos:end="51:24">cat</name></expr>;</return>

</block_content>}</block></function>
</unit>
