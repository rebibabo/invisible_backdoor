<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4964.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_header</name><parameter_list pos:start="1:23" pos:end="1:66">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:65"><decl pos:start="1:44" pos:end="1:65"><type pos:start="1:44" pos:end="1:65"><name pos:start="1:44" pos:end="1:61">AVFormatParameters</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BinkDemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">bink</name> <init pos:start="5:28" pos:end="5:41">= <expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">fps_num</name></decl>, <decl pos:start="9:23" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:23" pos:end="9:29">fps_den</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">vst</name></decl>, <decl pos:start="11:20" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">ast</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">pos</name></decl>, <decl pos:start="15:19" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:19" pos:end="15:26">next_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint16_t</name></type> <name pos:start="17:14" pos:end="17:18">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">keyframe</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:7">vst</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:29"><name pos:start="23:11" pos:end="23:23">av_new_stream</name><argument_list pos:start="23:24" pos:end="23:29">(<argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">s</name></expr></argument>, <argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">vst</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">vst</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:14">codec</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:25">codec_tag</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <call pos:start="31:29" pos:end="31:41"><name pos:start="31:29" pos:end="31:37">avio_rl32</name><argument_list pos:start="31:38" pos:end="31:41">(<argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:8">bink</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:19">file_size</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:31">avio_rl32</name><argument_list pos:start="35:32" pos:end="35:35">(<argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><name pos:start="35:33" pos:end="35:34">pb</name></expr></argument>)</argument_list></call> <operator pos:start="35:37" pos:end="35:37">+</operator> <literal type="number" pos:start="35:39" pos:end="35:39">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:7">vst</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:17">duration</name></name>   <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:35"><name pos:start="37:23" pos:end="37:31">avio_rl32</name><argument_list pos:start="37:32" pos:end="37:35">(<argument pos:start="37:33" pos:end="37:34"><expr pos:start="37:33" pos:end="37:34"><name pos:start="37:33" pos:end="37:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:32">(<expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">vst</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:21">duration</name></name> <operator pos:start="41:23" pos:end="41:23">&gt;</operator> <literal type="number" pos:start="41:25" pos:end="41:31">1000000</literal></expr>)</condition> <block pos:start="41:34" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:28">

        <expr_stmt pos:start="43:9" pos:end="43:78"><expr pos:start="43:9" pos:end="43:77"><call pos:start="43:9" pos:end="43:77"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:77">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:76"><expr pos:start="43:33" pos:end="43:76"><literal type="string" pos:start="43:33" pos:end="43:76">"invalid header: more than 1000000 frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:28">return <expr pos:start="45:16" pos:end="45:27"><call pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:40">(<expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:17">avio_rl32</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>)</argument_list></call> <operator pos:start="51:23" pos:end="51:23">&gt;</operator> <name pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:28">bink</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:39">file_size</name></name></expr>)</condition> <block pos:start="51:42" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:28">

        <expr_stmt pos:start="53:9" pos:end="55:78"><expr pos:start="53:9" pos:end="55:77"><call pos:start="53:9" pos:end="55:77"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:77">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:76"><expr pos:start="55:16" pos:end="55:76"><literal type="string" pos:start="55:16" pos:end="55:76">"invalid header: largest frame size greater than file size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:28">return <expr pos:start="57:16" pos:end="57:27"><call pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:27">(<argument pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><call pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:13">avio_skip</name><argument_list pos:start="63:14" pos:end="63:20">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:7">vst</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">codec</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:21">width</name></name>  <operator pos:start="67:24" pos:end="67:24">=</operator> <call pos:start="67:26" pos:end="67:38"><name pos:start="67:26" pos:end="67:34">avio_rl32</name><argument_list pos:start="67:35" pos:end="67:38">(<argument pos:start="67:36" pos:end="67:37"><expr pos:start="67:36" pos:end="67:37"><name pos:start="67:36" pos:end="67:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:7">vst</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">codec</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:22">height</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:34">avio_rl32</name><argument_list pos:start="69:35" pos:end="69:38">(<argument pos:start="69:36" pos:end="69:37"><expr pos:start="69:36" pos:end="69:37"><name pos:start="69:36" pos:end="69:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:11">fps_num</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:27"><name pos:start="73:15" pos:end="73:23">avio_rl32</name><argument_list pos:start="73:24" pos:end="73:27">(<argument pos:start="73:25" pos:end="73:26"><expr pos:start="73:25" pos:end="73:26"><name pos:start="73:25" pos:end="73:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:28"><expr pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:11">fps_den</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:27"><name pos:start="75:15" pos:end="75:23">avio_rl32</name><argument_list pos:start="75:24" pos:end="75:27">(<argument pos:start="75:25" pos:end="75:26"><expr pos:start="75:25" pos:end="75:26"><name pos:start="75:25" pos:end="75:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:37">(<expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:15">fps_num</name> <operator pos:start="77:17" pos:end="77:18">==</operator> <literal type="number" pos:start="77:20" pos:end="77:20">0</literal> <operator pos:start="77:22" pos:end="77:23">||</operator> <name pos:start="77:25" pos:end="77:31">fps_den</name> <operator pos:start="77:33" pos:end="77:34">==</operator> <literal type="number" pos:start="77:36" pos:end="77:36">0</literal></expr>)</condition> <block pos:start="77:39" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:28">

        <expr_stmt pos:start="79:9" pos:end="79:91"><expr pos:start="79:9" pos:end="79:90"><call pos:start="79:9" pos:end="79:90"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:90">(<argument pos:start="79:16" pos:end="79:16"><expr pos:start="79:16" pos:end="79:16"><name pos:start="79:16" pos:end="79:16">s</name></expr></argument>, <argument pos:start="79:19" pos:end="79:30"><expr pos:start="79:19" pos:end="79:30"><name pos:start="79:19" pos:end="79:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:33" pos:end="79:71"><expr pos:start="79:33" pos:end="79:71"><literal type="string" pos:start="79:33" pos:end="79:71">"invalid header: invalid fps (%d/%d)\n"</literal></expr></argument>, <argument pos:start="79:74" pos:end="79:80"><expr pos:start="79:74" pos:end="79:80"><name pos:start="79:74" pos:end="79:80">fps_num</name></expr></argument>, <argument pos:start="79:83" pos:end="79:89"><expr pos:start="79:83" pos:end="79:89"><name pos:start="79:83" pos:end="79:89">fps_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:28">return <expr pos:start="81:16" pos:end="81:27"><call pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:22">AVERROR</name><argument_list pos:start="81:23" pos:end="81:27">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:47"><expr pos:start="85:5" pos:end="85:46"><call pos:start="85:5" pos:end="85:46"><name pos:start="85:5" pos:end="85:19">av_set_pts_info</name><argument_list pos:start="85:20" pos:end="85:46">(<argument pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">vst</name></expr></argument>, <argument pos:start="85:26" pos:end="85:27"><expr pos:start="85:26" pos:end="85:27"><literal type="number" pos:start="85:26" pos:end="85:27">64</literal></expr></argument>, <argument pos:start="85:30" pos:end="85:36"><expr pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:36">fps_den</name></expr></argument>, <argument pos:start="85:39" pos:end="85:45"><expr pos:start="85:39" pos:end="85:45"><name pos:start="85:39" pos:end="85:45">fps_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:48"><expr pos:start="89:5" pos:end="89:47"><name pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:7">vst</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:14">codec</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">codec_type</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:47">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:48"><expr pos:start="91:5" pos:end="91:47"><name pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:7">vst</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:14">codec</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:24">codec_id</name></name>   <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:47">CODEC_ID_BINKVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:74"><expr pos:start="93:5" pos:end="93:73"><name pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:7">vst</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:14">codec</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">extradata</name></name>  <operator pos:start="93:28" pos:end="93:28">=</operator> <call pos:start="93:30" pos:end="93:73"><name pos:start="93:30" pos:end="93:39">av_mallocz</name><argument_list pos:start="93:40" pos:end="93:73">(<argument pos:start="93:41" pos:end="93:72"><expr pos:start="93:41" pos:end="93:72"><literal type="number" pos:start="93:41" pos:end="93:43">4</literal> <operator pos:start="93:43" pos:end="93:43">+</operator> <name pos:start="93:45" pos:end="93:72">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:7">vst</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:14">codec</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:30">extradata_size</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <literal type="number" pos:start="95:34" pos:end="95:34">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:44"><expr pos:start="97:5" pos:end="97:43"><call pos:start="97:5" pos:end="97:43"><name pos:start="97:5" pos:end="97:13">avio_read</name><argument_list pos:start="97:14" pos:end="97:43">(<argument pos:start="97:15" pos:end="97:16"><expr pos:start="97:15" pos:end="97:16"><name pos:start="97:15" pos:end="97:16">pb</name></expr></argument>, <argument pos:start="97:19" pos:end="97:39"><expr pos:start="97:19" pos:end="97:39"><name pos:start="97:19" pos:end="97:39"><name pos:start="97:19" pos:end="97:21">vst</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:28">codec</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:39">extradata</name></name></expr></argument>, <argument pos:start="97:42" pos:end="97:42"><expr pos:start="97:42" pos:end="97:42"><literal type="number" pos:start="97:42" pos:end="97:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:43"><expr pos:start="101:5" pos:end="101:42"><name pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:8">bink</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:26">num_audio_tracks</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="101:42"><name pos:start="101:30" pos:end="101:38">avio_rl32</name><argument_list pos:start="101:39" pos:end="101:42">(<argument pos:start="101:40" pos:end="101:41"><expr pos:start="101:40" pos:end="101:41"><name pos:start="101:40" pos:end="101:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="115:5"><if pos:start="105:5" pos:end="115:5">if <condition pos:start="105:8" pos:end="105:55">(<expr pos:start="105:9" pos:end="105:54"><name pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:12">bink</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:30">num_audio_tracks</name></name> <operator pos:start="105:32" pos:end="105:32">&gt;</operator> <name pos:start="105:34" pos:end="105:54">BINK_MAX_AUDIO_TRACKS</name></expr>)</condition> <block pos:start="105:57" pos:end="115:5">{<block_content pos:start="107:9" pos:end="113:28">

        <expr_stmt pos:start="107:9" pos:end="111:39"><expr pos:start="107:9" pos:end="111:38"><call pos:start="107:9" pos:end="111:38"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="111:38">(<argument pos:start="107:16" pos:end="107:16"><expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">s</name></expr></argument>, <argument pos:start="107:19" pos:end="107:30"><expr pos:start="107:19" pos:end="107:30"><name pos:start="107:19" pos:end="107:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="109:16" pos:end="109:100"><expr pos:start="109:16" pos:end="109:100"><literal type="string" pos:start="109:16" pos:end="109:43">"invalid header: more than "</literal><call pos:start="109:44" pos:end="109:78"><name pos:start="109:44" pos:end="109:55">AV_STRINGIFY</name><argument_list pos:start="109:56" pos:end="109:78">(<argument pos:start="109:57" pos:end="109:77"><expr pos:start="109:57" pos:end="109:77"><name pos:start="109:57" pos:end="109:77">BINK_MAX_AUDIO_TRACKS</name></expr></argument>)</argument_list></call><literal type="string" pos:start="109:79" pos:end="109:100">" audio tracks (%d)\n"</literal></expr></argument>,

               <argument pos:start="111:16" pos:end="111:37"><expr pos:start="111:16" pos:end="111:37"><name pos:start="111:16" pos:end="111:37"><name pos:start="111:16" pos:end="111:19">bink</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:37">num_audio_tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:28">return <expr pos:start="113:16" pos:end="113:27"><call pos:start="113:16" pos:end="113:27"><name pos:start="113:16" pos:end="113:22">AVERROR</name><argument_list pos:start="113:23" pos:end="113:27">(<argument pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="157:5"><if pos:start="119:5" pos:end="157:5">if <condition pos:start="119:8" pos:end="119:31">(<expr pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:12">bink</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:30">num_audio_tracks</name></name></expr>)</condition> <block pos:start="119:33" pos:end="157:5">{<block_content pos:start="121:9" pos:end="155:50">

        <expr_stmt pos:start="121:9" pos:end="121:50"><expr pos:start="121:9" pos:end="121:49"><call pos:start="121:9" pos:end="121:49"><name pos:start="121:9" pos:end="121:17">avio_skip</name><argument_list pos:start="121:18" pos:end="121:49">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">pb</name></expr></argument>, <argument pos:start="121:23" pos:end="121:48"><expr pos:start="121:23" pos:end="121:48"><literal type="number" pos:start="121:23" pos:end="121:23">4</literal> <operator pos:start="121:25" pos:end="121:25">*</operator> <name pos:start="121:27" pos:end="121:48"><name pos:start="121:27" pos:end="121:30">bink</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:48">num_audio_tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="125:9" pos:end="149:9">for <control pos:start="125:13" pos:end="125:52">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:47"><expr pos:start="125:21" pos:end="125:46"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <name pos:start="125:25" pos:end="125:46"><name pos:start="125:25" pos:end="125:28">bink</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:46">num_audio_tracks</name></name></expr>;</condition> <incr pos:start="125:49" pos:end="125:51"><expr pos:start="125:49" pos:end="125:51"><name pos:start="125:49" pos:end="125:49">i</name><operator pos:start="125:50" pos:end="125:51">++</operator></expr></incr>)</control> <block pos:start="125:54" pos:end="149:9">{<block_content pos:start="127:13" pos:end="147:67">

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:15">ast</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <call pos:start="127:19" pos:end="127:37"><name pos:start="127:19" pos:end="127:31">av_new_stream</name><argument_list pos:start="127:32" pos:end="127:37">(<argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><name pos:start="127:33" pos:end="127:33">s</name></expr></argument>, <argument pos:start="127:36" pos:end="127:36"><expr pos:start="127:36" pos:end="127:36"><literal type="number" pos:start="127:36" pos:end="127:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="131:39"><if pos:start="129:13" pos:end="131:39">if <condition pos:start="129:16" pos:end="129:21">(<expr pos:start="129:17" pos:end="129:20"><operator pos:start="129:17" pos:end="129:17">!</operator><name pos:start="129:18" pos:end="129:20">ast</name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:39"><block_content pos:start="131:17" pos:end="131:39">

                <return pos:start="131:17" pos:end="131:39">return <expr pos:start="131:24" pos:end="131:38"><call pos:start="131:24" pos:end="131:38"><name pos:start="131:24" pos:end="131:30">AVERROR</name><argument_list pos:start="131:31" pos:end="131:38">(<argument pos:start="131:32" pos:end="131:37"><expr pos:start="131:32" pos:end="131:37"><name pos:start="131:32" pos:end="131:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:57"><expr pos:start="133:13" pos:end="133:56"><name pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:15">ast</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:22">codec</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:34">codec_type</name></name>  <operator pos:start="133:37" pos:end="133:37">=</operator> <name pos:start="133:39" pos:end="133:56">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:60"><expr pos:start="135:13" pos:end="135:59"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:15">ast</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:22">codec</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:33">codec_tag</name></name>   <operator pos:start="135:37" pos:end="135:37">=</operator> <name pos:start="135:39" pos:end="135:59"><name pos:start="135:39" pos:end="135:41">vst</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:48">codec</name><operator pos:start="135:49" pos:end="135:50">-&gt;</operator><name pos:start="135:51" pos:end="135:59">codec_tag</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:52"><expr pos:start="137:13" pos:end="137:51"><name pos:start="137:13" pos:end="137:35"><name pos:start="137:13" pos:end="137:15">ast</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:22">codec</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:35">sample_rate</name></name> <operator pos:start="137:37" pos:end="137:37">=</operator> <call pos:start="137:39" pos:end="137:51"><name pos:start="137:39" pos:end="137:47">avio_rl16</name><argument_list pos:start="137:48" pos:end="137:51">(<argument pos:start="137:49" pos:end="137:50"><expr pos:start="137:49" pos:end="137:50"><name pos:start="137:49" pos:end="137:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:65"><expr pos:start="139:13" pos:end="139:64"><call pos:start="139:13" pos:end="139:64"><name pos:start="139:13" pos:end="139:27">av_set_pts_info</name><argument_list pos:start="139:28" pos:end="139:64">(<argument pos:start="139:29" pos:end="139:31"><expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">ast</name></expr></argument>, <argument pos:start="139:34" pos:end="139:35"><expr pos:start="139:34" pos:end="139:35"><literal type="number" pos:start="139:34" pos:end="139:35">64</literal></expr></argument>, <argument pos:start="139:38" pos:end="139:38"><expr pos:start="139:38" pos:end="139:38"><literal type="number" pos:start="139:38" pos:end="139:38">1</literal></expr></argument>, <argument pos:start="139:41" pos:end="139:63"><expr pos:start="139:41" pos:end="139:63"><name pos:start="139:41" pos:end="139:63"><name pos:start="139:41" pos:end="139:43">ast</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:50">codec</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:63">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:17">flags</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <call pos:start="141:21" pos:end="141:33"><name pos:start="141:21" pos:end="141:29">avio_rl16</name><argument_list pos:start="141:30" pos:end="141:33">(<argument pos:start="141:31" pos:end="141:32"><expr pos:start="141:31" pos:end="141:32"><name pos:start="141:31" pos:end="141:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="145:84"><expr pos:start="143:13" pos:end="145:83"><name pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:15">ast</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:22">codec</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:32">codec_id</name></name> <operator pos:start="143:34" pos:end="143:34">=</operator> <ternary pos:start="143:36" pos:end="145:83"><condition pos:start="143:36" pos:end="143:60"><expr pos:start="143:36" pos:end="143:58"><name pos:start="143:36" pos:end="143:40">flags</name> <operator pos:start="143:42" pos:end="143:42">&amp;</operator> <name pos:start="143:44" pos:end="143:58">BINK_AUD_USEDCT</name></expr> ?</condition><then pos:start="145:36" pos:end="145:57">

                                   <expr pos:start="145:36" pos:end="145:57"><name pos:start="145:36" pos:end="145:57">CODEC_ID_BINKAUDIO_DCT</name></expr> </then><else pos:start="145:59" pos:end="145:83">: <expr pos:start="145:61" pos:end="145:83"><name pos:start="145:61" pos:end="145:83">CODEC_ID_BINKAUDIO_RDFT</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:67"><expr pos:start="147:13" pos:end="147:66"><name pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:15">ast</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:22">codec</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:32">channels</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <ternary pos:start="147:36" pos:end="147:66"><condition pos:start="147:36" pos:end="147:60"><expr pos:start="147:36" pos:end="147:58"><name pos:start="147:36" pos:end="147:40">flags</name> <operator pos:start="147:42" pos:end="147:42">&amp;</operator> <name pos:start="147:44" pos:end="147:58">BINK_AUD_STEREO</name></expr> ?</condition><then pos:start="147:62" pos:end="147:62"> <expr pos:start="147:62" pos:end="147:62"><literal type="number" pos:start="147:62" pos:end="147:62">2</literal></expr> </then><else pos:start="147:64" pos:end="147:66">: <expr pos:start="147:66" pos:end="147:66"><literal type="number" pos:start="147:66" pos:end="147:66">1</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="153:9" pos:end="155:50">for <control pos:start="153:13" pos:end="153:52">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:47"><expr pos:start="153:21" pos:end="153:46"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:46"><name pos:start="153:25" pos:end="153:28">bink</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:46">num_audio_tracks</name></name></expr>;</condition> <incr pos:start="153:49" pos:end="153:51"><expr pos:start="153:49" pos:end="153:51"><name pos:start="153:49" pos:end="153:49">i</name><operator pos:start="153:50" pos:end="153:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:13" pos:end="155:50"><block_content pos:start="155:13" pos:end="155:50">

            <expr_stmt pos:start="155:13" pos:end="155:50"><expr pos:start="155:13" pos:end="155:49"><name pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:22">streams</name><index pos:start="155:23" pos:end="155:29">[<expr pos:start="155:24" pos:end="155:28"><name pos:start="155:24" pos:end="155:24">i</name> <operator pos:start="155:26" pos:end="155:26">+</operator> <literal type="number" pos:start="155:28" pos:end="155:28">1</literal></expr>]</index></name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:33">id</name> <operator pos:start="155:35" pos:end="155:35">=</operator> <call pos:start="155:37" pos:end="155:49"><name pos:start="155:37" pos:end="155:45">avio_rl32</name><argument_list pos:start="155:46" pos:end="155:49">(<argument pos:start="155:47" pos:end="155:48"><expr pos:start="155:47" pos:end="155:48"><name pos:start="155:47" pos:end="155:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:27">/* frame index table */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:29"><expr pos:start="163:5" pos:end="163:28"><name pos:start="163:5" pos:end="163:12">next_pos</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <call pos:start="163:16" pos:end="163:28"><name pos:start="163:16" pos:end="163:24">avio_rl32</name><argument_list pos:start="163:25" pos:end="163:28">(<argument pos:start="163:26" pos:end="163:27"><expr pos:start="163:26" pos:end="163:27"><name pos:start="163:26" pos:end="163:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="165:5" pos:end="201:5">for <control pos:start="165:9" pos:end="165:39">(<init pos:start="165:10" pos:end="165:15"><expr pos:start="165:10" pos:end="165:14"><name pos:start="165:10" pos:end="165:10">i</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>;</init> <condition pos:start="165:17" pos:end="165:34"><expr pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:17">i</name> <operator pos:start="165:19" pos:end="165:19">&lt;</operator> <name pos:start="165:21" pos:end="165:33"><name pos:start="165:21" pos:end="165:23">vst</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:33">duration</name></name></expr>;</condition> <incr pos:start="165:36" pos:end="165:38"><expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:36">i</name><operator pos:start="165:37" pos:end="165:38">++</operator></expr></incr>)</control> <block pos:start="165:41" pos:end="201:5">{<block_content pos:start="167:9" pos:end="199:60">

        <expr_stmt pos:start="167:9" pos:end="167:23"><expr pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:11">pos</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <name pos:start="167:15" pos:end="167:22">next_pos</name></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="181:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:35">(<expr pos:start="169:13" pos:end="169:34"><name pos:start="169:13" pos:end="169:13">i</name> <operator pos:start="169:15" pos:end="169:16">==</operator> <name pos:start="169:18" pos:end="169:30"><name pos:start="169:18" pos:end="169:20">vst</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:30">duration</name></name> <operator pos:start="169:32" pos:end="169:32">-</operator> <literal type="number" pos:start="169:34" pos:end="169:34">1</literal></expr>)</condition> <block pos:start="169:37" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:25">

            <expr_stmt pos:start="171:13" pos:end="171:39"><expr pos:start="171:13" pos:end="171:38"><name pos:start="171:13" pos:end="171:20">next_pos</name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:38"><name pos:start="171:24" pos:end="171:27">bink</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:38">file_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:25"><expr pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:20">keyframe</name> <operator pos:start="173:22" pos:end="173:22">=</operator> <literal type="number" pos:start="173:24" pos:end="173:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="175:11" pos:end="181:9">else <block pos:start="175:16" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:31">

            <expr_stmt pos:start="177:13" pos:end="177:37"><expr pos:start="177:13" pos:end="177:36"><name pos:start="177:13" pos:end="177:20">next_pos</name> <operator pos:start="177:22" pos:end="177:22">=</operator> <call pos:start="177:24" pos:end="177:36"><name pos:start="177:24" pos:end="177:32">avio_rl32</name><argument_list pos:start="177:33" pos:end="177:36">(<argument pos:start="177:34" pos:end="177:35"><expr pos:start="177:34" pos:end="177:35"><name pos:start="177:34" pos:end="177:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:31"><expr pos:start="179:13" pos:end="179:30"><name pos:start="179:13" pos:end="179:20">keyframe</name> <operator pos:start="179:22" pos:end="179:22">=</operator> <name pos:start="179:24" pos:end="179:26">pos</name> <operator pos:start="179:28" pos:end="179:28">&amp;</operator> <literal type="number" pos:start="179:30" pos:end="179:30">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:18"><expr pos:start="183:9" pos:end="183:17"><name pos:start="183:9" pos:end="183:11">pos</name> <operator pos:start="183:13" pos:end="183:14">&amp;=</operator> <operator pos:start="183:16" pos:end="183:16">~</operator><literal type="number" pos:start="183:17" pos:end="183:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:23"><expr pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:16">next_pos</name> <operator pos:start="185:18" pos:end="185:19">&amp;=</operator> <operator pos:start="185:21" pos:end="185:21">~</operator><literal type="number" pos:start="185:22" pos:end="185:22">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="189:9" pos:end="195:9"><if pos:start="189:9" pos:end="195:9">if <condition pos:start="189:12" pos:end="189:28">(<expr pos:start="189:13" pos:end="189:27"><name pos:start="189:13" pos:end="189:20">next_pos</name> <operator pos:start="189:22" pos:end="189:23">&lt;=</operator> <name pos:start="189:25" pos:end="189:27">pos</name></expr>)</condition> <block pos:start="189:30" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:32">

            <expr_stmt pos:start="191:13" pos:end="191:67"><expr pos:start="191:13" pos:end="191:66"><call pos:start="191:13" pos:end="191:66"><name pos:start="191:13" pos:end="191:18">av_log</name><argument_list pos:start="191:19" pos:end="191:66">(<argument pos:start="191:20" pos:end="191:20"><expr pos:start="191:20" pos:end="191:20"><name pos:start="191:20" pos:end="191:20">s</name></expr></argument>, <argument pos:start="191:23" pos:end="191:34"><expr pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:37" pos:end="191:65"><expr pos:start="191:37" pos:end="191:65"><literal type="string" pos:start="191:37" pos:end="191:65">"invalid frame index table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="193:13" pos:end="193:32">return <expr pos:start="193:20" pos:end="193:31"><call pos:start="193:20" pos:end="193:31"><name pos:start="193:20" pos:end="193:26">AVERROR</name><argument_list pos:start="193:27" pos:end="193:31">(<argument pos:start="193:28" pos:end="193:30"><expr pos:start="193:28" pos:end="193:30"><name pos:start="193:28" pos:end="193:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="199:60"><expr pos:start="197:9" pos:end="199:59"><call pos:start="197:9" pos:end="199:59"><name pos:start="197:9" pos:end="197:26">av_add_index_entry</name><argument_list pos:start="197:27" pos:end="199:59">(<argument pos:start="197:28" pos:end="197:30"><expr pos:start="197:28" pos:end="197:30"><name pos:start="197:28" pos:end="197:30">vst</name></expr></argument>, <argument pos:start="197:33" pos:end="197:35"><expr pos:start="197:33" pos:end="197:35"><name pos:start="197:33" pos:end="197:35">pos</name></expr></argument>, <argument pos:start="197:38" pos:end="197:38"><expr pos:start="197:38" pos:end="197:38"><name pos:start="197:38" pos:end="197:38">i</name></expr></argument>, <argument pos:start="197:41" pos:end="197:54"><expr pos:start="197:41" pos:end="197:54"><name pos:start="197:41" pos:end="197:48">next_pos</name> <operator pos:start="197:50" pos:end="197:50">-</operator> <name pos:start="197:52" pos:end="197:54">pos</name></expr></argument>, <argument pos:start="197:57" pos:end="197:57"><expr pos:start="197:57" pos:end="197:57"><literal type="number" pos:start="197:57" pos:end="197:57">0</literal></expr></argument>,

                           <argument pos:start="199:28" pos:end="199:58"><expr pos:start="199:28" pos:end="199:58"><ternary pos:start="199:28" pos:end="199:58"><condition pos:start="199:28" pos:end="199:37"><expr pos:start="199:28" pos:end="199:35"><name pos:start="199:28" pos:end="199:35">keyframe</name></expr> ?</condition><then pos:start="199:39" pos:end="199:54"> <expr pos:start="199:39" pos:end="199:54"><name pos:start="199:39" pos:end="199:54">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="199:56" pos:end="199:58">: <expr pos:start="199:58" pos:end="199:58"><literal type="number" pos:start="199:58" pos:end="199:58">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="205:5" pos:end="205:21"><expr pos:start="205:5" pos:end="205:20"><call pos:start="205:5" pos:end="205:20"><name pos:start="205:5" pos:end="205:13">avio_skip</name><argument_list pos:start="205:14" pos:end="205:20">(<argument pos:start="205:15" pos:end="205:16"><expr pos:start="205:15" pos:end="205:16"><name pos:start="205:15" pos:end="205:16">pb</name></expr></argument>, <argument pos:start="205:19" pos:end="205:19"><expr pos:start="205:19" pos:end="205:19"><literal type="number" pos:start="205:19" pos:end="205:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:29"><expr pos:start="209:5" pos:end="209:28"><name pos:start="209:5" pos:end="209:23"><name pos:start="209:5" pos:end="209:8">bink</name><operator pos:start="209:9" pos:end="209:10">-&gt;</operator><name pos:start="209:11" pos:end="209:23">current_track</name></name> <operator pos:start="209:25" pos:end="209:25">=</operator> <operator pos:start="209:27" pos:end="209:27">-</operator><literal type="number" pos:start="209:28" pos:end="209:28">1</literal></expr>;</expr_stmt>

    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><literal type="number" pos:start="211:12" pos:end="211:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
