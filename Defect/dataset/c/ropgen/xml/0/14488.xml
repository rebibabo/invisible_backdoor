<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14488.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">rle_unpack</name><parameter_list pos:start="1:22" pos:end="1:71">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:30">unsigned</name> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">src</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:61"><decl pos:start="1:43" pos:end="1:61"><type pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:50">unsigned</name> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">dest</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:22">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">char</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">l</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:6">ps</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:12">src</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:6">pd</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:13">dest</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:22"><if pos:start="17:5" pos:end="19:22">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">&amp;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:22"><block_content pos:start="19:9" pos:end="19:22">

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:11">pd</name><operator pos:start="19:12" pos:end="19:13">++</operator> <operator pos:start="19:15" pos:end="19:15">=</operator> <operator pos:start="19:17" pos:end="19:17">*</operator><name pos:start="19:18" pos:end="19:19">ps</name><operator pos:start="19:20" pos:end="19:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:7">len</name> <operator pos:start="23:9" pos:end="23:11">&gt;&gt;=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:10"><expr pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:5">i</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <literal type="number" pos:start="25:9" pos:end="25:9">0</literal></expr>;</expr_stmt>

    <do pos:start="27:5" pos:end="57:22">do <block pos:start="27:8" pos:end="57:5">{<block_content pos:start="29:9" pos:end="55:15">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:9">l</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:15">ps</name><operator pos:start="29:16" pos:end="29:17">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="53:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">l</name> <operator pos:start="31:15" pos:end="31:15">&amp;</operator> <literal type="number" pos:start="31:17" pos:end="31:20">0x80</literal></expr>)</condition> <block pos:start="31:23" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:20">

            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:13">l</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:18">l</name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <literal type="number" pos:start="33:22" pos:end="33:25">0x7F</literal><operator pos:start="33:26" pos:end="33:26">)</operator> <operator pos:start="33:28" pos:end="33:28">*</operator> <literal type="number" pos:start="33:30" pos:end="33:30">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><call pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:18">memcpy</name><argument_list pos:start="35:19" pos:end="35:29">(<argument pos:start="35:20" pos:end="35:21"><expr pos:start="35:20" pos:end="35:21"><name pos:start="35:20" pos:end="35:21">pd</name></expr></argument>, <argument pos:start="35:24" pos:end="35:25"><expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">ps</name></expr></argument>, <argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:14">ps</name> <operator pos:start="37:16" pos:end="37:17">+=</operator> <name pos:start="37:19" pos:end="37:19">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:14">pd</name> <operator pos:start="39:16" pos:end="39:17">+=</operator> <name pos:start="39:19" pos:end="39:19">l</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="53:9">else <block pos:start="41:16" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:20">

            <for pos:start="43:13" pos:end="49:13">for <control pos:start="43:17" pos:end="43:35">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:29"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <name pos:start="43:29" pos:end="43:29">l</name></expr>;</condition> <incr pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:32">i</name><operator pos:start="43:33" pos:end="43:34">++</operator></expr></incr>)</control> <block pos:start="43:37" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:30">

                <expr_stmt pos:start="45:17" pos:end="45:30"><expr pos:start="45:17" pos:end="45:29"><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:19">pd</name><operator pos:start="45:20" pos:end="45:21">++</operator> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:29"><name pos:start="45:25" pos:end="45:26">ps</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:29"><operator pos:start="47:17" pos:end="47:17">*</operator><name pos:start="47:18" pos:end="47:19">pd</name><operator pos:start="47:20" pos:end="47:21">++</operator> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:29"><name pos:start="47:25" pos:end="47:26">ps</name><index pos:start="47:27" pos:end="47:29">[<expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="51:13" pos:end="51:20"><expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:14">ps</name> <operator pos:start="51:16" pos:end="51:17">+=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:15"><expr pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">i</name> <operator pos:start="55:11" pos:end="55:12">+=</operator> <name pos:start="55:14" pos:end="55:14">l</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="57:13" pos:end="57:21">(<expr pos:start="57:14" pos:end="57:20"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">&lt;</operator> <name pos:start="57:18" pos:end="57:20">len</name></expr>)</condition>;</do>



    <return pos:start="61:5" pos:end="61:22">return <expr pos:start="61:12" pos:end="61:21"><operator pos:start="61:12" pos:end="61:12">(</operator><name pos:start="61:13" pos:end="61:14">ps</name> <operator pos:start="61:16" pos:end="61:16">-</operator> <name pos:start="61:18" pos:end="61:20">src</name><operator pos:start="61:21" pos:end="61:21">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
