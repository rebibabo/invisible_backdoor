<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8638.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">blk_mig_cleanup</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:21">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BlkMigDevState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">bmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlkMigBlock</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">blk</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><call pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">bdrv_drain_all</name><argument_list pos:start="11:19" pos:end="11:20">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:24">unset_dirty_tracking</name><argument_list pos:start="15:25" pos:end="15:26">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">blk_mig_lock</name><argument_list pos:start="19:17" pos:end="19:18">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="33:5">while <condition pos:start="21:11" pos:end="21:71">(<expr pos:start="21:12" pos:end="21:70"><operator pos:start="21:12" pos:end="21:12">(</operator><name pos:start="21:13" pos:end="21:16">bmds</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:61"><name pos:start="21:20" pos:end="21:33">QSIMPLEQ_FIRST</name><argument_list pos:start="21:34" pos:end="21:61">(<argument pos:start="21:35" pos:end="21:60"><expr pos:start="21:35" pos:end="21:60"><operator pos:start="21:35" pos:end="21:35">&amp;</operator><name pos:start="21:36" pos:end="21:60"><name pos:start="21:36" pos:end="21:50">block_mig_state</name><operator pos:start="21:51" pos:end="21:51">.</operator><name pos:start="21:52" pos:end="21:60">bmds_list</name></name></expr></argument>)</argument_list></call><operator pos:start="21:62" pos:end="21:62">)</operator> <operator pos:start="21:64" pos:end="21:65">!=</operator> <name pos:start="21:67" pos:end="21:70">NULL</name></expr>)</condition> <block pos:start="21:73" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:21">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><call pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:28">QSIMPLEQ_REMOVE_HEAD</name><argument_list pos:start="23:29" pos:end="23:63">(<argument pos:start="23:30" pos:end="23:55"><expr pos:start="23:30" pos:end="23:55"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:55"><name pos:start="23:31" pos:end="23:45">block_mig_state</name><operator pos:start="23:46" pos:end="23:46">.</operator><name pos:start="23:47" pos:end="23:55">bmds_list</name></name></expr></argument>, <argument pos:start="23:58" pos:end="23:62"><expr pos:start="23:58" pos:end="23:62"><name pos:start="23:58" pos:end="23:62">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><call pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:23">bdrv_set_in_use</name><argument_list pos:start="25:24" pos:end="25:36">(<argument pos:start="25:25" pos:end="25:32"><expr pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:28">bmds</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:32">bs</name></name></expr></argument>, <argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:18">bdrv_unref</name><argument_list pos:start="27:19" pos:end="27:28">(<argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:23">bmds</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:27">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:14">g_free</name><argument_list pos:start="29:15" pos:end="29:32">(<argument pos:start="29:16" pos:end="29:31"><expr pos:start="29:16" pos:end="29:31"><name pos:start="29:16" pos:end="29:31"><name pos:start="29:16" pos:end="29:19">bmds</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:31">aio_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><call pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:14">g_free</name><argument_list pos:start="31:15" pos:end="31:20">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">bmds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <while pos:start="37:5" pos:end="45:5">while <condition pos:start="37:11" pos:end="37:69">(<expr pos:start="37:12" pos:end="37:68"><operator pos:start="37:12" pos:end="37:12">(</operator><name pos:start="37:13" pos:end="37:15">blk</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:59"><name pos:start="37:19" pos:end="37:32">QSIMPLEQ_FIRST</name><argument_list pos:start="37:33" pos:end="37:59">(<argument pos:start="37:34" pos:end="37:58"><expr pos:start="37:34" pos:end="37:58"><operator pos:start="37:34" pos:end="37:34">&amp;</operator><name pos:start="37:35" pos:end="37:58"><name pos:start="37:35" pos:end="37:49">block_mig_state</name><operator pos:start="37:50" pos:end="37:50">.</operator><name pos:start="37:51" pos:end="37:58">blk_list</name></name></expr></argument>)</argument_list></call><operator pos:start="37:60" pos:end="37:60">)</operator> <operator pos:start="37:62" pos:end="37:63">!=</operator> <name pos:start="37:65" pos:end="37:68">NULL</name></expr>)</condition> <block pos:start="37:71" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:20">

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><call pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:28">QSIMPLEQ_REMOVE_HEAD</name><argument_list pos:start="39:29" pos:end="39:62">(<argument pos:start="39:30" pos:end="39:54"><expr pos:start="39:30" pos:end="39:54"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:54"><name pos:start="39:31" pos:end="39:45">block_mig_state</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:54">blk_list</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:61"><expr pos:start="39:57" pos:end="39:61"><name pos:start="39:57" pos:end="39:61">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:14">g_free</name><argument_list pos:start="41:15" pos:end="41:24">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:18">blk</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:23">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><call pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:19">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><call pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:18">blk_mig_unlock</name><argument_list pos:start="47:19" pos:end="47:20">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
