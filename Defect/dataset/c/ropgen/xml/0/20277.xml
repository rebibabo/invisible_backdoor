<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20277.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">helper_slbie</name><parameter_list pos:start="1:18" pos:end="1:54">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:29">CPUPPCState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:48">target_ulong</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PowerPCCPU</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cpu</name> <init pos:start="5:21" pos:end="5:42">= <expr pos:start="5:23" pos:end="5:42"><call pos:start="5:23" pos:end="5:42"><name pos:start="5:23" pos:end="5:37">ppc_env_get_cpu</name><argument_list pos:start="5:38" pos:end="5:42">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ppc_slb_t</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">slb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:7">slb</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:31"><name pos:start="11:11" pos:end="11:20">slb_lookup</name><argument_list pos:start="11:21" pos:end="11:31">(<argument pos:start="11:22" pos:end="11:24"><expr pos:start="11:22" pos:end="11:24"><name pos:start="11:22" pos:end="11:24">cpu</name></expr></argument>, <argument pos:start="11:27" pos:end="11:30"><expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">slb</name></expr>)</condition> <block pos:start="13:15" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">slb</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">esid</name></name> <operator pos:start="21:19" pos:end="21:19">&amp;</operator> <name pos:start="21:21" pos:end="21:30">SLB_ESID_V</name></expr>)</condition> <block pos:start="21:33" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:52">

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">slb</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">esid</name></name> <operator pos:start="23:19" pos:end="23:20">&amp;=</operator> <operator pos:start="23:22" pos:end="23:22">~</operator><name pos:start="23:23" pos:end="23:32">SLB_ESID_V</name></expr>;</expr_stmt>



        <comment type="block" pos:start="27:9" pos:end="33:11">/* XXX: given the fact that segment size is 256 MB or 1TB,

         *      and we still don't have a tlb_flush_mask(env, n, mask)

         *      in QEMU, we just invalidate all TLBs

         */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:11">env</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:27">tlb_need_flush</name></name> <operator pos:start="35:29" pos:end="35:30">|=</operator> <name pos:start="35:32" pos:end="35:51">TLB_NEED_LOCAL_FLUSH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
