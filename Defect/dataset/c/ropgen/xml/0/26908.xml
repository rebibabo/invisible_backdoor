<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26908.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">bdrv_read</name><parameter_list pos:start="1:14" pos:end="3:43">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><name pos:start="1:15" pos:end="1:30">BlockDriverState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">bs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:43">int64_t</name></type> <name pos:start="1:45" pos:end="1:54">sector_num</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:26"><decl pos:start="3:15" pos:end="3:26"><type pos:start="3:15" pos:end="3:26"><name pos:start="3:15" pos:end="3:21">uint8_t</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:26">buf</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:5">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlockDriver</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">drv</name> <init pos:start="7:22" pos:end="7:30">= <expr pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">drv</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:26"><if pos:start="11:5" pos:end="13:26">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">drv</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:26"><block_content pos:start="13:9" pos:end="13:26">

        <return pos:start="13:9" pos:end="13:26">return <expr pos:start="13:16" pos:end="13:25"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:25">ENOMEDIUM</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:69">(<expr pos:start="17:9" pos:end="17:68"><name pos:start="17:9" pos:end="17:18">sector_num</name> <operator pos:start="17:20" pos:end="17:21">==</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal> <operator pos:start="17:25" pos:end="17:26">&amp;&amp;</operator> <name pos:start="17:28" pos:end="17:50"><name pos:start="17:28" pos:end="17:29">bs</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:50">boot_sector_enabled</name></name> <operator pos:start="17:52" pos:end="17:53">&amp;&amp;</operator> <name pos:start="17:55" pos:end="17:64">nb_sectors</name> <operator pos:start="17:66" pos:end="17:66">&gt;</operator> <literal type="number" pos:start="17:68" pos:end="17:68">0</literal></expr>)</condition> <block pos:start="17:71" pos:end="31:5">{<block_content pos:start="19:13" pos:end="29:21">

            <expr_stmt pos:start="19:13" pos:end="19:51"><expr pos:start="19:13" pos:end="19:50"><call pos:start="19:13" pos:end="19:50"><name pos:start="19:13" pos:end="19:18">memcpy</name><argument_list pos:start="19:19" pos:end="19:50">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">buf</name></expr></argument>, <argument pos:start="19:25" pos:end="19:44"><expr pos:start="19:25" pos:end="19:44"><name pos:start="19:25" pos:end="19:44"><name pos:start="19:25" pos:end="19:26">bs</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:44">boot_sector_data</name></name></expr></argument>, <argument pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><literal type="number" pos:start="19:47" pos:end="19:49">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:18">sector_num</name><operator pos:start="21:19" pos:end="21:20">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:21"><expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:18">nb_sectors</name><operator pos:start="23:19" pos:end="23:20">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:11">buf</name> <operator pos:start="25:13" pos:end="25:14">+=</operator> <literal type="number" pos:start="25:16" pos:end="25:18">512</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:22">nb_sectors</name> <operator pos:start="27:24" pos:end="27:25">==</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="63:5"><if pos:start="33:5" pos:end="59:5">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:11">drv</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:23">bdrv_pread</name></name></expr>)</condition> <block pos:start="33:26" pos:end="59:5">{<block_content pos:start="35:9" pos:end="57:9">

        <decl_stmt pos:start="35:9" pos:end="35:21"><decl pos:start="35:9" pos:end="35:15"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:15">ret</name></decl>, <decl pos:start="35:18" pos:end="35:20"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:18" pos:end="35:20">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:24">nb_sectors</name> <operator pos:start="37:26" pos:end="37:26">*</operator> <literal type="number" pos:start="37:28" pos:end="37:30">512</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:62"><expr pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:61"><name pos:start="39:15" pos:end="39:29"><name pos:start="39:15" pos:end="39:17">drv</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:29">bdrv_pread</name></name><argument_list pos:start="39:30" pos:end="39:61">(<argument pos:start="39:31" pos:end="39:32"><expr pos:start="39:31" pos:end="39:32"><name pos:start="39:31" pos:end="39:32">bs</name></expr></argument>, <argument pos:start="39:35" pos:end="39:50"><expr pos:start="39:35" pos:end="39:50"><name pos:start="39:35" pos:end="39:44">sector_num</name> <operator pos:start="39:46" pos:end="39:46">*</operator> <literal type="number" pos:start="39:48" pos:end="39:50">512</literal></expr></argument>, <argument pos:start="39:53" pos:end="39:55"><expr pos:start="39:53" pos:end="39:55"><name pos:start="39:53" pos:end="39:55">buf</name></expr></argument>, <argument pos:start="39:58" pos:end="39:60"><expr pos:start="39:58" pos:end="39:60"><name pos:start="39:58" pos:end="39:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="57:9"><if pos:start="41:9" pos:end="43:23">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:23"><block_content pos:start="43:13" pos:end="43:23">

            <return pos:start="43:13" pos:end="43:23">return <expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">ret</name></expr>;</return></block_content></block></if>

        <if type="elseif" pos:start="45:9" pos:end="47:27">else if <condition pos:start="45:17" pos:end="45:28">(<expr pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:20">ret</name> <operator pos:start="45:22" pos:end="45:23">!=</operator> <name pos:start="45:25" pos:end="45:27">len</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:27"><block_content pos:start="47:13" pos:end="47:27">

            <return pos:start="47:13" pos:end="47:27">return <expr pos:start="47:20" pos:end="47:26"><operator pos:start="47:20" pos:end="47:20">-</operator><name pos:start="47:21" pos:end="47:26">EINVAL</name></expr>;</return></block_content></block></if>

        <else pos:start="49:9" pos:end="57:9">else <block pos:start="49:14" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:21">

	    <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:14">bs</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:24">rd_bytes</name></name> <operator pos:start="51:26" pos:end="51:27">+=</operator> <operator pos:start="51:29" pos:end="51:29">(</operator><name pos:start="51:30" pos:end="51:37">unsigned</name><operator pos:start="51:38" pos:end="51:38">)</operator> <name pos:start="51:40" pos:end="51:42">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="53:13" pos:end="53:26"><expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:14">bs</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">rd_ops</name></name> <operator pos:start="53:24" pos:end="53:25">++</operator></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:21">return <expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr>;</return>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:63">

        <return pos:start="61:9" pos:end="61:63">return <expr pos:start="61:16" pos:end="61:62"><call pos:start="61:16" pos:end="61:62"><name pos:start="61:16" pos:end="61:29"><name pos:start="61:16" pos:end="61:18">drv</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:29">bdrv_read</name></name><argument_list pos:start="61:30" pos:end="61:62">(<argument pos:start="61:31" pos:end="61:32"><expr pos:start="61:31" pos:end="61:32"><name pos:start="61:31" pos:end="61:32">bs</name></expr></argument>, <argument pos:start="61:35" pos:end="61:44"><expr pos:start="61:35" pos:end="61:44"><name pos:start="61:35" pos:end="61:44">sector_num</name></expr></argument>, <argument pos:start="61:47" pos:end="61:49"><expr pos:start="61:47" pos:end="61:49"><name pos:start="61:47" pos:end="61:49">buf</name></expr></argument>, <argument pos:start="61:52" pos:end="61:61"><expr pos:start="61:52" pos:end="61:61"><name pos:start="61:52" pos:end="61:61">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
