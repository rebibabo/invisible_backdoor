<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7412.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">l2_allocate</name><parameter_list pos:start="1:23" pos:end="1:76">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:57">l1_index</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><name pos:start="1:60" pos:end="1:67">uint64_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:75">table</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:26">old_l2_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint64_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:22">l2_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:21">l2_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:17">old_l2_offset</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:41"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:31">l1_table</name><index pos:start="17:32" pos:end="17:41">[<expr pos:start="17:33" pos:end="17:40"><name pos:start="17:33" pos:end="17:40">l1_index</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:27">trace_qcow2_l2_allocate</name><argument_list pos:start="21:28" pos:end="21:41">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><name pos:start="21:29" pos:end="21:30">bs</name></expr></argument>, <argument pos:start="21:33" pos:end="21:40"><expr pos:start="21:33" pos:end="21:40"><name pos:start="21:33" pos:end="21:40">l1_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:33">/* allocate a new l2 entry */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:72"><expr pos:start="29:5" pos:end="29:71"><name pos:start="29:5" pos:end="29:13">l2_offset</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:71"><name pos:start="29:17" pos:end="29:36">qcow2_alloc_clusters</name><argument_list pos:start="29:37" pos:end="29:71">(<argument pos:start="29:38" pos:end="29:39"><expr pos:start="29:38" pos:end="29:39"><name pos:start="29:38" pos:end="29:39">bs</name></expr></argument>, <argument pos:start="29:42" pos:end="29:70"><expr pos:start="29:42" pos:end="29:70"><name pos:start="29:42" pos:end="29:51"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:51">l2_size</name></name> <operator pos:start="29:53" pos:end="29:53">*</operator> <sizeof pos:start="29:55" pos:end="29:70">sizeof<argument_list pos:start="29:61" pos:end="29:70">(<argument pos:start="29:62" pos:end="29:69"><expr pos:start="29:62" pos:end="29:69"><name pos:start="29:62" pos:end="29:69">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:17">l2_offset</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>)</condition> <block pos:start="31:24" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:25">

        <return pos:start="33:9" pos:end="33:25">return <expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:24">l2_offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:56"><name pos:start="39:11" pos:end="39:27">qcow2_cache_flush</name><argument_list pos:start="39:28" pos:end="39:56">(<argument pos:start="39:29" pos:end="39:30"><expr pos:start="39:29" pos:end="39:30"><name pos:start="39:29" pos:end="39:30">bs</name></expr></argument>, <argument pos:start="39:33" pos:end="39:55"><expr pos:start="39:33" pos:end="39:55"><name pos:start="39:33" pos:end="39:55"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:55">refcount_block_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition> <block pos:start="41:18" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:18">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:46">/* allocate a new entry in the l2 cache */</comment>



    <expr_stmt pos:start="53:5" pos:end="53:52"><expr pos:start="53:5" pos:end="53:51"><call pos:start="53:5" pos:end="53:51"><name pos:start="53:5" pos:end="53:37">trace_qcow2_l2_allocate_get_empty</name><argument_list pos:start="53:38" pos:end="53:51">(<argument pos:start="53:39" pos:end="53:40"><expr pos:start="53:39" pos:end="53:40"><name pos:start="53:39" pos:end="53:40">bs</name></expr></argument>, <argument pos:start="53:43" pos:end="53:50"><expr pos:start="53:43" pos:end="53:50"><name pos:start="53:43" pos:end="53:50">l1_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:82"><expr pos:start="55:5" pos:end="55:81"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:81"><name pos:start="55:11" pos:end="55:31">qcow2_cache_get_empty</name><argument_list pos:start="55:32" pos:end="55:81">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">bs</name></expr></argument>, <argument pos:start="55:37" pos:end="55:53"><expr pos:start="55:37" pos:end="55:53"><name pos:start="55:37" pos:end="55:53"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:53">l2_table_cache</name></name></expr></argument>, <argument pos:start="55:56" pos:end="55:64"><expr pos:start="55:56" pos:end="55:64"><name pos:start="55:56" pos:end="55:64">l2_offset</name></expr></argument>, <argument pos:start="55:67" pos:end="55:80"><expr pos:start="55:67" pos:end="55:80"><operator pos:start="55:67" pos:end="55:67">(</operator><name pos:start="55:68" pos:end="55:71">void</name><operator pos:start="55:72" pos:end="55:72">*</operator><operator pos:start="55:73" pos:end="55:73">*</operator><operator pos:start="55:74" pos:end="55:74">)</operator> <name pos:start="55:76" pos:end="55:80">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">&lt;</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>)</condition> <block pos:start="57:18" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:19">

        <return pos:start="59:9" pos:end="59:19">return <expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:12">l2_table</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <operator pos:start="65:16" pos:end="65:16">*</operator><name pos:start="65:17" pos:end="65:21">table</name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="111:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:47">(<expr pos:start="69:9" pos:end="69:46"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:22">old_l2_offset</name> <operator pos:start="69:24" pos:end="69:24">&amp;</operator> <name pos:start="69:26" pos:end="69:40">L1E_OFFSET_MASK</name><operator pos:start="69:41" pos:end="69:41">)</operator> <operator pos:start="69:43" pos:end="69:44">==</operator> <literal type="number" pos:start="69:46" pos:end="69:46">0</literal></expr>)</condition> <block pos:start="69:49" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:59">

        <comment type="block" pos:start="71:9" pos:end="71:63">/* if there was no old l2 table, clear the new table */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:59"><expr pos:start="73:9" pos:end="73:58"><call pos:start="73:9" pos:end="73:58"><name pos:start="73:9" pos:end="73:14">memset</name><argument_list pos:start="73:15" pos:end="73:58">(<argument pos:start="73:16" pos:end="73:23"><expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23">l2_table</name></expr></argument>, <argument pos:start="73:26" pos:end="73:26"><expr pos:start="73:26" pos:end="73:26"><literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr></argument>, <argument pos:start="73:29" pos:end="73:57"><expr pos:start="73:29" pos:end="73:57"><name pos:start="73:29" pos:end="73:38"><name pos:start="73:29" pos:end="73:29">s</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:38">l2_size</name></name> <operator pos:start="73:40" pos:end="73:40">*</operator> <sizeof pos:start="73:42" pos:end="73:57">sizeof<argument_list pos:start="73:48" pos:end="73:57">(<argument pos:start="73:49" pos:end="73:56"><expr pos:start="73:49" pos:end="73:56"><name pos:start="73:49" pos:end="73:56">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="111:5">else <block pos:start="75:12" pos:end="111:5">{<block_content pos:start="77:9" pos:end="109:9">

        <decl_stmt pos:start="77:9" pos:end="77:28"><decl pos:start="77:9" pos:end="77:27"><type pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:16">uint64_t</name><modifier pos:start="77:17" pos:end="77:17">*</modifier></type> <name pos:start="77:19" pos:end="77:27">old_table</name></decl>;</decl_stmt>



        <comment type="block" pos:start="81:9" pos:end="81:65">/* if there was an old l2 table, read it from the disk */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:57"><expr pos:start="83:9" pos:end="83:56"><call pos:start="83:9" pos:end="83:56"><name pos:start="83:9" pos:end="83:20">BLKDBG_EVENT</name><argument_list pos:start="83:21" pos:end="83:56">(<argument pos:start="83:22" pos:end="83:29"><expr pos:start="83:22" pos:end="83:29"><name pos:start="83:22" pos:end="83:29"><name pos:start="83:22" pos:end="83:23">bs</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:29">file</name></name></expr></argument>, <argument pos:start="83:32" pos:end="83:55"><expr pos:start="83:32" pos:end="83:55"><name pos:start="83:32" pos:end="83:55">BLKDBG_L2_ALLOC_COW_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="89:33"><expr pos:start="85:9" pos:end="89:32"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="89:32"><name pos:start="85:15" pos:end="85:29">qcow2_cache_get</name><argument_list pos:start="85:30" pos:end="89:32">(<argument pos:start="85:31" pos:end="85:32"><expr pos:start="85:31" pos:end="85:32"><name pos:start="85:31" pos:end="85:32">bs</name></expr></argument>, <argument pos:start="85:35" pos:end="85:51"><expr pos:start="85:35" pos:end="85:51"><name pos:start="85:35" pos:end="85:51"><name pos:start="85:35" pos:end="85:35">s</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:51">l2_table_cache</name></name></expr></argument>,

            <argument pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:25">old_l2_offset</name> <operator pos:start="87:27" pos:end="87:27">&amp;</operator> <name pos:start="87:29" pos:end="87:43">L1E_OFFSET_MASK</name></expr></argument>,

            <argument pos:start="89:13" pos:end="89:31"><expr pos:start="89:13" pos:end="89:31"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:17">void</name><operator pos:start="89:18" pos:end="89:18">*</operator><operator pos:start="89:19" pos:end="89:19">*</operator><operator pos:start="89:20" pos:end="89:20">)</operator> <operator pos:start="89:22" pos:end="89:22">&amp;</operator><name pos:start="89:23" pos:end="89:31">old_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition> <block pos:start="91:22" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:22">

            <goto pos:start="93:13" pos:end="93:22">goto <name pos:start="93:18" pos:end="93:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:53"><expr pos:start="99:9" pos:end="99:52"><call pos:start="99:9" pos:end="99:52"><name pos:start="99:9" pos:end="99:14">memcpy</name><argument_list pos:start="99:15" pos:end="99:52">(<argument pos:start="99:16" pos:end="99:23"><expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23">l2_table</name></expr></argument>, <argument pos:start="99:26" pos:end="99:34"><expr pos:start="99:26" pos:end="99:34"><name pos:start="99:26" pos:end="99:34">old_table</name></expr></argument>, <argument pos:start="99:37" pos:end="99:51"><expr pos:start="99:37" pos:end="99:51"><name pos:start="99:37" pos:end="99:51"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:51">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:74"><expr pos:start="103:9" pos:end="103:73"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:73"><name pos:start="103:15" pos:end="103:29">qcow2_cache_put</name><argument_list pos:start="103:30" pos:end="103:73">(<argument pos:start="103:31" pos:end="103:32"><expr pos:start="103:31" pos:end="103:32"><name pos:start="103:31" pos:end="103:32">bs</name></expr></argument>, <argument pos:start="103:35" pos:end="103:51"><expr pos:start="103:35" pos:end="103:51"><name pos:start="103:35" pos:end="103:51"><name pos:start="103:35" pos:end="103:35">s</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:51">l2_table_cache</name></name></expr></argument>, <argument pos:start="103:54" pos:end="103:72"><expr pos:start="103:54" pos:end="103:72"><operator pos:start="103:54" pos:end="103:54">(</operator><name pos:start="103:55" pos:end="103:58">void</name><operator pos:start="103:59" pos:end="103:59">*</operator><operator pos:start="103:60" pos:end="103:60">*</operator><operator pos:start="103:61" pos:end="103:61">)</operator> <operator pos:start="103:63" pos:end="103:63">&amp;</operator><name pos:start="103:64" pos:end="103:72">old_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:20">(<expr pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>)</condition> <block pos:start="105:22" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:22">

            <goto pos:start="107:13" pos:end="107:22">goto <name pos:start="107:18" pos:end="107:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:40">/* write the l2 table to the file */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:50"><expr pos:start="117:5" pos:end="117:49"><call pos:start="117:5" pos:end="117:49"><name pos:start="117:5" pos:end="117:16">BLKDBG_EVENT</name><argument_list pos:start="117:17" pos:end="117:49">(<argument pos:start="117:18" pos:end="117:25"><expr pos:start="117:18" pos:end="117:25"><name pos:start="117:18" pos:end="117:25"><name pos:start="117:18" pos:end="117:19">bs</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:25">file</name></name></expr></argument>, <argument pos:start="117:28" pos:end="117:48"><expr pos:start="117:28" pos:end="117:48"><name pos:start="117:28" pos:end="117:48">BLKDBG_L2_ALLOC_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:51"><expr pos:start="121:5" pos:end="121:50"><call pos:start="121:5" pos:end="121:50"><name pos:start="121:5" pos:end="121:36">trace_qcow2_l2_allocate_write_l2</name><argument_list pos:start="121:37" pos:end="121:50">(<argument pos:start="121:38" pos:end="121:39"><expr pos:start="121:38" pos:end="121:39"><name pos:start="121:38" pos:end="121:39">bs</name></expr></argument>, <argument pos:start="121:42" pos:end="121:49"><expr pos:start="121:42" pos:end="121:49"><name pos:start="121:42" pos:end="121:49">l1_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:62"><expr pos:start="123:5" pos:end="123:61"><call pos:start="123:5" pos:end="123:61"><name pos:start="123:5" pos:end="123:32">qcow2_cache_entry_mark_dirty</name><argument_list pos:start="123:33" pos:end="123:61">(<argument pos:start="123:34" pos:end="123:50"><expr pos:start="123:34" pos:end="123:50"><name pos:start="123:34" pos:end="123:50"><name pos:start="123:34" pos:end="123:34">s</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:50">l2_table_cache</name></name></expr></argument>, <argument pos:start="123:53" pos:end="123:60"><expr pos:start="123:53" pos:end="123:60"><name pos:start="123:53" pos:end="123:60">l2_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:51"><expr pos:start="125:5" pos:end="125:50"><name pos:start="125:5" pos:end="125:7">ret</name> <operator pos:start="125:9" pos:end="125:9">=</operator> <call pos:start="125:11" pos:end="125:50"><name pos:start="125:11" pos:end="125:27">qcow2_cache_flush</name><argument_list pos:start="125:28" pos:end="125:50">(<argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><name pos:start="125:29" pos:end="125:30">bs</name></expr></argument>, <argument pos:start="125:33" pos:end="125:49"><expr pos:start="125:33" pos:end="125:49"><name pos:start="125:33" pos:end="125:49"><name pos:start="125:33" pos:end="125:33">s</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:49">l2_table_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:16">(<expr pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">&lt;</operator> <literal type="number" pos:start="127:15" pos:end="127:15">0</literal></expr>)</condition> <block pos:start="127:18" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:18">

        <goto pos:start="129:9" pos:end="129:18">goto <name pos:start="129:14" pos:end="129:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:29">/* update the L1 entry */</comment>

    <expr_stmt pos:start="137:5" pos:end="137:51"><expr pos:start="137:5" pos:end="137:50"><call pos:start="137:5" pos:end="137:50"><name pos:start="137:5" pos:end="137:36">trace_qcow2_l2_allocate_write_l1</name><argument_list pos:start="137:37" pos:end="137:50">(<argument pos:start="137:38" pos:end="137:39"><expr pos:start="137:38" pos:end="137:39"><name pos:start="137:38" pos:end="137:39">bs</name></expr></argument>, <argument pos:start="137:42" pos:end="137:49"><expr pos:start="137:42" pos:end="137:49"><name pos:start="137:42" pos:end="137:49">l1_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:58"><expr pos:start="139:5" pos:end="139:57"><name pos:start="139:5" pos:end="139:25"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:15">l1_table</name><index pos:start="139:16" pos:end="139:25">[<expr pos:start="139:17" pos:end="139:24"><name pos:start="139:17" pos:end="139:24">l1_index</name></expr>]</index></name> <operator pos:start="139:27" pos:end="139:27">=</operator> <name pos:start="139:29" pos:end="139:37">l2_offset</name> <operator pos:start="139:39" pos:end="139:39">|</operator> <name pos:start="139:41" pos:end="139:57">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:39"><expr pos:start="141:5" pos:end="141:38"><name pos:start="141:5" pos:end="141:7">ret</name> <operator pos:start="141:9" pos:end="141:9">=</operator> <call pos:start="141:11" pos:end="141:38"><name pos:start="141:11" pos:end="141:24">write_l1_entry</name><argument_list pos:start="141:25" pos:end="141:38">(<argument pos:start="141:26" pos:end="141:27"><expr pos:start="141:26" pos:end="141:27"><name pos:start="141:26" pos:end="141:27">bs</name></expr></argument>, <argument pos:start="141:30" pos:end="141:37"><expr pos:start="141:30" pos:end="141:37"><name pos:start="141:30" pos:end="141:37">l1_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:16">(<expr pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:11">ret</name> <operator pos:start="143:13" pos:end="143:13">&lt;</operator> <literal type="number" pos:start="143:15" pos:end="143:15">0</literal></expr>)</condition> <block pos:start="143:18" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:18">

        <goto pos:start="145:9" pos:end="145:18">goto <name pos:start="145:14" pos:end="145:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:22"><expr pos:start="151:5" pos:end="151:21"><operator pos:start="151:5" pos:end="151:5">*</operator><name pos:start="151:6" pos:end="151:10">table</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <name pos:start="151:14" pos:end="151:21">l2_table</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:50"><expr pos:start="153:5" pos:end="153:49"><call pos:start="153:5" pos:end="153:49"><name pos:start="153:5" pos:end="153:32">trace_qcow2_l2_allocate_done</name><argument_list pos:start="153:33" pos:end="153:49">(<argument pos:start="153:34" pos:end="153:35"><expr pos:start="153:34" pos:end="153:35"><name pos:start="153:34" pos:end="153:35">bs</name></expr></argument>, <argument pos:start="153:38" pos:end="153:45"><expr pos:start="153:38" pos:end="153:45"><name pos:start="153:38" pos:end="153:45">l1_index</name></expr></argument>, <argument pos:start="153:48" pos:end="153:48"><expr pos:start="153:48" pos:end="153:48"><literal type="number" pos:start="153:48" pos:end="153:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>



<label pos:start="159:1" pos:end="159:5"><name pos:start="159:1" pos:end="159:4">fail</name>:</label>

    <expr_stmt pos:start="161:5" pos:end="161:52"><expr pos:start="161:5" pos:end="161:51"><call pos:start="161:5" pos:end="161:51"><name pos:start="161:5" pos:end="161:32">trace_qcow2_l2_allocate_done</name><argument_list pos:start="161:33" pos:end="161:51">(<argument pos:start="161:34" pos:end="161:35"><expr pos:start="161:34" pos:end="161:35"><name pos:start="161:34" pos:end="161:35">bs</name></expr></argument>, <argument pos:start="161:38" pos:end="161:45"><expr pos:start="161:38" pos:end="161:45"><name pos:start="161:38" pos:end="161:45">l1_index</name></expr></argument>, <argument pos:start="161:48" pos:end="161:50"><expr pos:start="161:48" pos:end="161:50"><name pos:start="161:48" pos:end="161:50">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:59"><expr pos:start="163:5" pos:end="163:58"><call pos:start="163:5" pos:end="163:58"><name pos:start="163:5" pos:end="163:19">qcow2_cache_put</name><argument_list pos:start="163:20" pos:end="163:58">(<argument pos:start="163:21" pos:end="163:22"><expr pos:start="163:21" pos:end="163:22"><name pos:start="163:21" pos:end="163:22">bs</name></expr></argument>, <argument pos:start="163:25" pos:end="163:41"><expr pos:start="163:25" pos:end="163:41"><name pos:start="163:25" pos:end="163:41"><name pos:start="163:25" pos:end="163:25">s</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:41">l2_table_cache</name></name></expr></argument>, <argument pos:start="163:44" pos:end="163:57"><expr pos:start="163:44" pos:end="163:57"><operator pos:start="163:44" pos:end="163:44">(</operator><name pos:start="163:45" pos:end="163:48">void</name><operator pos:start="163:49" pos:end="163:49">*</operator><operator pos:start="163:50" pos:end="163:50">*</operator><operator pos:start="163:51" pos:end="163:51">)</operator> <name pos:start="163:53" pos:end="163:57">table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:42"><expr pos:start="165:5" pos:end="165:41"><name pos:start="165:5" pos:end="165:25"><name pos:start="165:5" pos:end="165:5">s</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:15">l1_table</name><index pos:start="165:16" pos:end="165:25">[<expr pos:start="165:17" pos:end="165:24"><name pos:start="165:17" pos:end="165:24">l1_index</name></expr>]</index></name> <operator pos:start="165:27" pos:end="165:27">=</operator> <name pos:start="165:29" pos:end="165:41">old_l2_offset</name></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:15">return <expr pos:start="167:12" pos:end="167:14"><name pos:start="167:12" pos:end="167:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
