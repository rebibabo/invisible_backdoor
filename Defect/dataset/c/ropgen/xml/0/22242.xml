<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22242.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_nvdec_decode_init</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:15">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NVDECContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:58">= <expr pos:start="5:25" pos:end="5:58"><name pos:start="5:25" pos:end="5:58"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:39">internal</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:58">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:18">NVDECFramePool</name>      <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:29">pool</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:21">AVHWFramesContext</name>   <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:35">frames_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:30"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:28">AVPixFmtDescriptor</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:37">sw_desc</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:40"><type pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:25">CUVIDDECODECREATEINFO</name></type> <name pos:start="17:27" pos:end="17:32">params</name> <init pos:start="17:34" pos:end="17:40">= <expr pos:start="17:36" pos:end="17:40"><block pos:start="17:36" pos:end="17:40">{ <expr pos:start="17:38" pos:end="17:38"><literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:46"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:24">cuvid_codec_type</name></decl>, <decl pos:start="21:27" pos:end="21:45"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:27" pos:end="21:45">cuvid_chroma_format</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:11">sw_desc</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:52"><name pos:start="27:15" pos:end="27:33">av_pix_fmt_desc_get</name><argument_list pos:start="27:34" pos:end="27:52">(<argument pos:start="27:35" pos:end="27:51"><expr pos:start="27:35" pos:end="27:51"><name pos:start="27:35" pos:end="27:51"><name pos:start="27:35" pos:end="27:39">avctx</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:51">sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:27"><if pos:start="29:5" pos:end="31:27">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:16">sw_desc</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:27"><block_content pos:start="31:9" pos:end="31:27">

        <return pos:start="31:9" pos:end="31:27">return <expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:26">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:54"><name pos:start="35:5" pos:end="35:20">cuvid_codec_type</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:54"><name pos:start="35:24" pos:end="35:37">map_avcodec_id</name><argument_list pos:start="35:38" pos:end="35:54">(<argument pos:start="35:39" pos:end="35:53"><expr pos:start="35:39" pos:end="35:53"><name pos:start="35:39" pos:end="35:53"><name pos:start="35:39" pos:end="35:43">avctx</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:53">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:24">cuvid_codec_type</name> <operator pos:start="37:26" pos:end="37:26">&lt;</operator> <literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>)</condition> <block pos:start="37:31" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:27">

        <expr_stmt pos:start="39:9" pos:end="39:62"><expr pos:start="39:9" pos:end="39:61"><call pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:61">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:60"><expr pos:start="39:37" pos:end="39:60"><literal type="string" pos:start="39:37" pos:end="39:60">"Unsupported codec ID\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:27">return <expr pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:26">AVERROR_BUG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:63"><expr pos:start="47:5" pos:end="47:62"><name pos:start="47:5" pos:end="47:23">cuvid_chroma_format</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:62"><name pos:start="47:27" pos:end="47:43">map_chroma_format</name><argument_list pos:start="47:44" pos:end="47:62">(<argument pos:start="47:45" pos:end="47:61"><expr pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:61"><name pos:start="47:45" pos:end="47:49">avctx</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:61">sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:32">(<expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:27">cuvid_chroma_format</name> <operator pos:start="49:29" pos:end="49:29">&lt;</operator> <literal type="number" pos:start="49:31" pos:end="49:31">0</literal></expr>)</condition> <block pos:start="49:34" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:31">

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><call pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:66">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:65"><expr pos:start="51:37" pos:end="51:65"><literal type="string" pos:start="51:37" pos:end="51:65">"Unsupported chroma format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:30">(<expr pos:start="59:9" pos:end="59:29"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:29"><name pos:start="59:10" pos:end="59:14">avctx</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:29">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="59:32" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:23">

        <expr_stmt pos:start="61:9" pos:end="61:72"><expr pos:start="61:9" pos:end="61:71"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:71"><name pos:start="61:15" pos:end="61:41">ff_decode_get_hw_frames_ctx</name><argument_list pos:start="61:42" pos:end="61:71">(<argument pos:start="61:43" pos:end="61:47"><expr pos:start="61:43" pos:end="61:47"><name pos:start="61:43" pos:end="61:47">avctx</name></expr></argument>, <argument pos:start="61:50" pos:end="61:70"><expr pos:start="61:50" pos:end="61:70"><name pos:start="61:50" pos:end="61:70">AV_HWDEVICE_TYPE_CUDA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:23"><if pos:start="63:9" pos:end="65:23">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:23"><block_content pos:start="65:13" pos:end="65:23">

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:64"><expr pos:start="71:5" pos:end="71:63"><name pos:start="71:5" pos:end="71:14">frames_ctx</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:35">AVHWFramesContext</name><operator pos:start="71:36" pos:end="71:36">*</operator><operator pos:start="71:37" pos:end="71:37">)</operator><name pos:start="71:38" pos:end="71:63"><name pos:start="71:38" pos:end="71:42">avctx</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:57">hw_frames_ctx</name><operator pos:start="71:58" pos:end="71:59">-&gt;</operator><name pos:start="71:60" pos:end="71:63">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:10">params</name><operator pos:start="75:11" pos:end="75:11">.</operator><name pos:start="75:12" pos:end="75:18">ulWidth</name></name>             <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:51"><name pos:start="75:34" pos:end="75:38">avctx</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:51">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:10">params</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:19">ulHeight</name></name>            <operator pos:start="77:32" pos:end="77:32">=</operator> <name pos:start="77:34" pos:end="77:52"><name pos:start="77:34" pos:end="77:38">avctx</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:52">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:52"><expr pos:start="79:5" pos:end="79:51"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:10">params</name><operator pos:start="79:11" pos:end="79:11">.</operator><name pos:start="79:12" pos:end="79:24">ulTargetWidth</name></name>       <operator pos:start="79:32" pos:end="79:32">=</operator> <name pos:start="79:34" pos:end="79:51"><name pos:start="79:34" pos:end="79:38">avctx</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:51">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:10">params</name><operator pos:start="81:11" pos:end="81:11">.</operator><name pos:start="81:12" pos:end="81:25">ulTargetHeight</name></name>      <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:52"><name pos:start="81:34" pos:end="81:38">avctx</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:52">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:60"><expr pos:start="83:5" pos:end="83:59"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:10">params</name><operator pos:start="83:11" pos:end="83:11">.</operator><name pos:start="83:12" pos:end="83:25">bitDepthMinus8</name></name>      <operator pos:start="83:32" pos:end="83:32">=</operator> <name pos:start="83:34" pos:end="83:49"><name pos:start="83:34" pos:end="83:40">sw_desc</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:46">comp</name><index pos:start="83:47" pos:end="83:49">[<expr pos:start="83:48" pos:end="83:48"><literal type="number" pos:start="83:48" pos:end="83:48">0</literal></expr>]</index></name><operator pos:start="83:50" pos:end="83:50">.</operator><name pos:start="83:51" pos:end="83:55">depth</name> <operator pos:start="83:57" pos:end="83:57">-</operator> <literal type="number" pos:start="83:59" pos:end="83:59">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:91"><expr pos:start="85:5" pos:end="87:90"><name pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:10">params</name><operator pos:start="85:11" pos:end="85:11">.</operator><name pos:start="85:12" pos:end="85:23">OutputFormat</name></name>        <operator pos:start="85:32" pos:end="85:32">=</operator> <ternary pos:start="85:34" pos:end="87:90"><condition pos:start="85:34" pos:end="85:56"><expr pos:start="85:34" pos:end="85:54"><name pos:start="85:34" pos:end="85:54"><name pos:start="85:34" pos:end="85:39">params</name><operator pos:start="85:40" pos:end="85:40">.</operator><name pos:start="85:41" pos:end="85:54">bitDepthMinus8</name></name></expr> ?</condition><then pos:start="87:34" pos:end="87:60">

                                 <expr pos:start="87:34" pos:end="87:60"><name pos:start="87:34" pos:end="87:60">cudaVideoSurfaceFormat_P016</name></expr> </then><else pos:start="87:62" pos:end="87:90">: <expr pos:start="87:64" pos:end="87:90"><name pos:start="87:64" pos:end="87:90">cudaVideoSurfaceFormat_NV12</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:50"><expr pos:start="89:5" pos:end="89:49"><name pos:start="89:5" pos:end="89:20"><name pos:start="89:5" pos:end="89:10">params</name><operator pos:start="89:11" pos:end="89:11">.</operator><name pos:start="89:12" pos:end="89:20">CodecType</name></name>           <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:49">cuvid_codec_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:53"><expr pos:start="91:5" pos:end="91:52"><name pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:10">params</name><operator pos:start="91:11" pos:end="91:11">.</operator><name pos:start="91:12" pos:end="91:23">ChromaFormat</name></name>        <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:52">cuvid_chroma_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:63"><expr pos:start="93:5" pos:end="93:62"><name pos:start="93:5" pos:end="93:30"><name pos:start="93:5" pos:end="93:10">params</name><operator pos:start="93:11" pos:end="93:11">.</operator><name pos:start="93:12" pos:end="93:30">ulNumDecodeSurfaces</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:62"><name pos:start="93:34" pos:end="93:43">frames_ctx</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:62">initial_pool_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:10">params</name><operator pos:start="95:11" pos:end="95:11">.</operator><name pos:start="95:12" pos:end="95:30">ulNumOutputSurfaces</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <literal type="number" pos:start="95:34" pos:end="95:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:90"><expr pos:start="99:5" pos:end="99:89"><name pos:start="99:5" pos:end="99:7">ret</name> <operator pos:start="99:9" pos:end="99:9">=</operator> <call pos:start="99:11" pos:end="99:89"><name pos:start="99:11" pos:end="99:30">nvdec_decoder_create</name><argument_list pos:start="99:31" pos:end="99:89">(<argument pos:start="99:32" pos:end="99:48"><expr pos:start="99:32" pos:end="99:48"><operator pos:start="99:32" pos:end="99:32">&amp;</operator><name pos:start="99:33" pos:end="99:48"><name pos:start="99:33" pos:end="99:35">ctx</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:48">decoder_ref</name></name></expr></argument>, <argument pos:start="99:51" pos:end="99:72"><expr pos:start="99:51" pos:end="99:72"><name pos:start="99:51" pos:end="99:72"><name pos:start="99:51" pos:end="99:60">frames_ctx</name><operator pos:start="99:61" pos:end="99:62">-&gt;</operator><name pos:start="99:63" pos:end="99:72">device_ref</name></name></expr></argument>, <argument pos:start="99:75" pos:end="99:81"><expr pos:start="99:75" pos:end="99:81"><operator pos:start="99:75" pos:end="99:75">&amp;</operator><name pos:start="99:76" pos:end="99:81">params</name></expr></argument>, <argument pos:start="99:84" pos:end="99:88"><expr pos:start="99:84" pos:end="99:88"><name pos:start="99:84" pos:end="99:88">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="103:19"><if pos:start="101:5" pos:end="103:19">if <condition pos:start="101:8" pos:end="101:16">(<expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">&lt;</operator> <literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:19"><block_content pos:start="103:9" pos:end="103:19">

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:37"><expr pos:start="107:5" pos:end="107:36"><name pos:start="107:5" pos:end="107:8">pool</name> <operator pos:start="107:10" pos:end="107:10">=</operator> <call pos:start="107:12" pos:end="107:36"><name pos:start="107:12" pos:end="107:21">av_mallocz</name><argument_list pos:start="107:22" pos:end="107:36">(<argument pos:start="107:23" pos:end="107:35"><expr pos:start="107:23" pos:end="107:35"><sizeof pos:start="107:23" pos:end="107:35">sizeof<argument_list pos:start="107:29" pos:end="107:35">(<argument pos:start="107:30" pos:end="107:34"><expr pos:start="107:30" pos:end="107:34"><operator pos:start="107:30" pos:end="107:30">*</operator><name pos:start="107:31" pos:end="107:34">pool</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:14">(<expr pos:start="109:9" pos:end="109:13"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:13">pool</name></expr>)</condition> <block pos:start="109:16" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:18">

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:29"><name pos:start="111:15" pos:end="111:21">AVERROR</name><argument_list pos:start="111:22" pos:end="111:29">(<argument pos:start="111:23" pos:end="111:28"><expr pos:start="111:23" pos:end="111:28"><name pos:start="111:23" pos:end="111:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="113:9" pos:end="113:18">goto <name pos:start="113:14" pos:end="113:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:51"><expr pos:start="117:5" pos:end="117:50"><name pos:start="117:5" pos:end="117:18"><name pos:start="117:5" pos:end="117:8">pool</name><operator pos:start="117:9" pos:end="117:10">-&gt;</operator><name pos:start="117:11" pos:end="117:18">dpb_size</name></name> <operator pos:start="117:20" pos:end="117:20">=</operator> <name pos:start="117:22" pos:end="117:50"><name pos:start="117:22" pos:end="117:31">frames_ctx</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:50">initial_pool_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="123:81"><expr pos:start="121:5" pos:end="123:80"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:7">ctx</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:21">decoder_pool</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <call pos:start="121:25" pos:end="123:80"><name pos:start="121:25" pos:end="121:44">av_buffer_pool_init2</name><argument_list pos:start="121:45" pos:end="123:80">(<argument pos:start="121:46" pos:end="121:56"><expr pos:start="121:46" pos:end="121:56"><sizeof pos:start="121:46" pos:end="121:56">sizeof<argument_list pos:start="121:52" pos:end="121:56">(<argument pos:start="121:53" pos:end="121:55"><expr pos:start="121:53" pos:end="121:55"><name pos:start="121:53" pos:end="121:55">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="121:59" pos:end="121:62"><expr pos:start="121:59" pos:end="121:62"><name pos:start="121:59" pos:end="121:62">pool</name></expr></argument>,

                                             <argument pos:start="123:46" pos:end="123:70"><expr pos:start="123:46" pos:end="123:70"><name pos:start="123:46" pos:end="123:70">nvdec_decoder_frame_alloc</name></expr></argument>, <argument pos:start="123:73" pos:end="123:79"><expr pos:start="123:73" pos:end="123:79"><name pos:start="123:73" pos:end="123:79">av_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:27">(<expr pos:start="125:9" pos:end="125:26"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:26"><name pos:start="125:10" pos:end="125:12">ctx</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:26">decoder_pool</name></name></expr>)</condition> <block pos:start="125:29" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:18">

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:29"><name pos:start="127:15" pos:end="127:21">AVERROR</name><argument_list pos:start="127:22" pos:end="127:29">(<argument pos:start="127:23" pos:end="127:28"><expr pos:start="127:23" pos:end="127:28"><name pos:start="127:23" pos:end="127:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="129:9" pos:end="129:18">goto <name pos:start="129:14" pos:end="129:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

<label pos:start="137:1" pos:end="137:5"><name pos:start="137:1" pos:end="137:4">fail</name>:</label>

    <expr_stmt pos:start="139:5" pos:end="139:34"><expr pos:start="139:5" pos:end="139:33"><call pos:start="139:5" pos:end="139:33"><name pos:start="139:5" pos:end="139:26">ff_nvdec_decode_uninit</name><argument_list pos:start="139:27" pos:end="139:33">(<argument pos:start="139:28" pos:end="139:32"><expr pos:start="139:28" pos:end="139:32"><name pos:start="139:28" pos:end="139:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="141:5" pos:end="141:15">return <expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
