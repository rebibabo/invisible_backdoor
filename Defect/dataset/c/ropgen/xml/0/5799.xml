<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5799.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">char</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:43">ff_AMediaCodecList_getCodecNameByType</name><parameter_list pos:start="1:44" pos:end="1:99">(<parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">mime</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:71">width</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:83"><decl pos:start="1:74" pos:end="1:83"><type pos:start="1:74" pos:end="1:83"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:83">height</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:98"><decl pos:start="1:86" pos:end="1:98"><type pos:start="1:86" pos:end="1:98"><name pos:start="1:86" pos:end="1:89">void</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type><name pos:start="1:92" pos:end="1:98">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="337:1">{<block_content pos:start="5:5" pos:end="335:16">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">name</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:24">supported_type</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">attached</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:10">JNIEnv</name> <modifier pos:start="15:12" pos:end="15:12">*</modifier></type><name pos:start="15:13" pos:end="15:15">env</name> <init pos:start="15:17" pos:end="15:22">= <expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:35">JNIAMediaCodecListFields</name></name></type> <name pos:start="17:37" pos:end="17:43">jfields</name> <init pos:start="17:45" pos:end="17:51">= <expr pos:start="17:47" pos:end="17:51"><block pos:start="17:47" pos:end="17:51">{ <expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">jobject</name></type> <name pos:start="21:13" pos:end="21:18">format</name> <init pos:start="21:20" pos:end="21:25">= <expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">jobject</name></type> <name pos:start="23:13" pos:end="23:17">codec</name> <init pos:start="23:19" pos:end="23:24">= <expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">jstring</name></type> <name pos:start="25:13" pos:end="25:15">tmp</name> <init pos:start="25:17" pos:end="25:22">= <expr pos:start="25:19" pos:end="25:22"><name pos:start="25:19" pos:end="25:22">NULL</name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">jobject</name></type> <name pos:start="29:13" pos:end="29:16">info</name> <init pos:start="29:18" pos:end="29:23">= <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:24"><decl pos:start="31:5" pos:end="31:23"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">jobject</name></type> <name pos:start="31:13" pos:end="31:16">type</name> <init pos:start="31:18" pos:end="31:23">= <expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:30"><decl pos:start="33:5" pos:end="33:29"><type pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:16">jobjectArray</name></type> <name pos:start="33:18" pos:end="33:22">types</name> <init pos:start="33:24" pos:end="33:29">= <expr pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><call pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:28">JNI_ATTACH_ENV_OR_RETURN</name><argument_list pos:start="37:29" pos:end="37:59">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">env</name></expr></argument>, <argument pos:start="37:35" pos:end="37:43"><expr pos:start="37:35" pos:end="37:43"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:43">attached</name></expr></argument>, <argument pos:start="37:46" pos:end="37:52"><expr pos:start="37:46" pos:end="37:52"><name pos:start="37:46" pos:end="37:52">log_ctx</name></expr></argument>, <argument pos:start="37:55" pos:end="37:58"><expr pos:start="37:55" pos:end="37:58"><name pos:start="37:55" pos:end="37:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:96">(<expr pos:start="41:9" pos:end="41:95"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:12">ret</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:90"><name pos:start="41:16" pos:end="41:34">ff_jni_init_jfields</name><argument_list pos:start="41:35" pos:end="41:90">(<argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">env</name></expr></argument>, <argument pos:start="41:41" pos:end="41:48"><expr pos:start="41:41" pos:end="41:48"><operator pos:start="41:41" pos:end="41:41">&amp;</operator><name pos:start="41:42" pos:end="41:48">jfields</name></expr></argument>, <argument pos:start="41:51" pos:end="41:77"><expr pos:start="41:51" pos:end="41:77"><name pos:start="41:51" pos:end="41:77">jni_amediacodeclist_mapping</name></expr></argument>, <argument pos:start="41:80" pos:end="41:80"><expr pos:start="41:80" pos:end="41:80"><literal type="number" pos:start="41:80" pos:end="41:80">0</literal></expr></argument>, <argument pos:start="41:83" pos:end="41:89"><expr pos:start="41:83" pos:end="41:89"><name pos:start="41:83" pos:end="41:89">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="41:91" pos:end="41:91">)</operator> <operator pos:start="41:93" pos:end="41:93">&lt;</operator> <literal type="number" pos:start="41:95" pos:end="41:95">0</literal></expr>)</condition> <block pos:start="41:98" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:18">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="269:5"><if pos:start="49:5" pos:end="115:5">if <condition pos:start="49:8" pos:end="49:62">(<expr pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:15">jfields</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:23">init_id</name></name> <operator pos:start="49:25" pos:end="49:26">&amp;&amp;</operator> <name pos:start="49:28" pos:end="49:61"><name pos:start="49:28" pos:end="49:34">jfields</name><operator pos:start="49:35" pos:end="49:35">.</operator><name pos:start="49:36" pos:end="49:61">find_decoder_for_format_id</name></name></expr>)</condition> <block pos:start="49:64" pos:end="115:5">{<block_content pos:start="51:9" pos:end="111:9">

        <expr_stmt pos:start="51:9" pos:end="51:62"><expr pos:start="51:9" pos:end="51:61"><name pos:start="51:9" pos:end="51:11">tmp</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:61"><name pos:start="51:15" pos:end="51:41">ff_jni_utf_chars_to_jstring</name><argument_list pos:start="51:42" pos:end="51:61">(<argument pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><name pos:start="51:43" pos:end="51:45">env</name></expr></argument>, <argument pos:start="51:48" pos:end="51:51"><expr pos:start="51:48" pos:end="51:51"><name pos:start="51:48" pos:end="51:51">mime</name></expr></argument>, <argument pos:start="51:54" pos:end="51:60"><expr pos:start="51:54" pos:end="51:60"><name pos:start="51:54" pos:end="51:60">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:17">(<expr pos:start="53:13" pos:end="53:16"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:16">tmp</name></expr>)</condition> <block pos:start="53:19" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:22">

            <goto pos:start="55:13" pos:end="55:22">goto <name pos:start="55:18" pos:end="55:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:132"><expr pos:start="61:9" pos:end="61:131"><name pos:start="61:9" pos:end="61:14">format</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:131"><name pos:start="61:18" pos:end="61:47"><operator pos:start="61:18" pos:end="61:18">(</operator><operator pos:start="61:19" pos:end="61:19">*</operator><name pos:start="61:20" pos:end="61:22">env</name><operator pos:start="61:23" pos:end="61:23">)</operator><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:47">CallStaticObjectMethod</name></name><argument_list pos:start="61:48" pos:end="61:131">(<argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:51">env</name></expr></argument>, <argument pos:start="61:54" pos:end="61:78"><expr pos:start="61:54" pos:end="61:78"><name pos:start="61:54" pos:end="61:78"><name pos:start="61:54" pos:end="61:60">jfields</name><operator pos:start="61:61" pos:end="61:61">.</operator><name pos:start="61:62" pos:end="61:78">mediaformat_class</name></name></expr></argument>, <argument pos:start="61:81" pos:end="61:110"><expr pos:start="61:81" pos:end="61:110"><name pos:start="61:81" pos:end="61:110"><name pos:start="61:81" pos:end="61:87">jfields</name><operator pos:start="61:88" pos:end="61:88">.</operator><name pos:start="61:89" pos:end="61:110">create_video_format_id</name></name></expr></argument>, <argument pos:start="61:113" pos:end="61:115"><expr pos:start="61:113" pos:end="61:115"><name pos:start="61:113" pos:end="61:115">tmp</name></expr></argument>, <argument pos:start="61:118" pos:end="61:122"><expr pos:start="61:118" pos:end="61:122"><name pos:start="61:118" pos:end="61:122">width</name></expr></argument>, <argument pos:start="61:125" pos:end="61:130"><expr pos:start="61:125" pos:end="61:130"><name pos:start="61:125" pos:end="61:130">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:56">(<expr pos:start="63:13" pos:end="63:55"><call pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:34">ff_jni_exception_check</name><argument_list pos:start="63:35" pos:end="63:51">(<argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">env</name></expr></argument>, <argument pos:start="63:41" pos:end="63:41"><expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">1</literal></expr></argument>, <argument pos:start="63:44" pos:end="63:50"><expr pos:start="63:44" pos:end="63:50"><name pos:start="63:44" pos:end="63:50">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="63:53" pos:end="63:53">&lt;</operator> <literal type="number" pos:start="63:55" pos:end="63:55">0</literal></expr>)</condition> <block pos:start="63:58" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:22">

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><call pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:30"><operator pos:start="69:9" pos:end="69:9">(</operator><operator pos:start="69:10" pos:end="69:10">*</operator><name pos:start="69:11" pos:end="69:13">env</name><operator pos:start="69:14" pos:end="69:14">)</operator><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:30">DeleteLocalRef</name></name><argument_list pos:start="69:31" pos:end="69:40">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">env</name></expr></argument>, <argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:19"><expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:11">tmp</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:18">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:90"><expr pos:start="75:9" pos:end="75:89"><name pos:start="75:9" pos:end="75:13">codec</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:89"><name pos:start="75:17" pos:end="75:33"><operator pos:start="75:17" pos:end="75:17">(</operator><operator pos:start="75:18" pos:end="75:18">*</operator><name pos:start="75:19" pos:end="75:21">env</name><operator pos:start="75:22" pos:end="75:22">)</operator><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:33">NewObject</name></name><argument_list pos:start="75:34" pos:end="75:89">(<argument pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><name pos:start="75:35" pos:end="75:37">env</name></expr></argument>, <argument pos:start="75:40" pos:end="75:68"><expr pos:start="75:40" pos:end="75:68"><name pos:start="75:40" pos:end="75:68"><name pos:start="75:40" pos:end="75:46">jfields</name><operator pos:start="75:47" pos:end="75:47">.</operator><name pos:start="75:48" pos:end="75:68">mediacodec_list_class</name></name></expr></argument>, <argument pos:start="75:71" pos:end="75:85"><expr pos:start="75:71" pos:end="75:85"><name pos:start="75:71" pos:end="75:85"><name pos:start="75:71" pos:end="75:77">jfields</name><operator pos:start="75:78" pos:end="75:78">.</operator><name pos:start="75:79" pos:end="75:85">init_id</name></name></expr></argument>, <argument pos:start="75:88" pos:end="75:88"><expr pos:start="75:88" pos:end="75:88"><literal type="number" pos:start="75:88" pos:end="75:88">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:56">(<expr pos:start="77:13" pos:end="77:55"><call pos:start="77:13" pos:end="77:51"><name pos:start="77:13" pos:end="77:34">ff_jni_exception_check</name><argument_list pos:start="77:35" pos:end="77:51">(<argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">env</name></expr></argument>, <argument pos:start="77:41" pos:end="77:41"><expr pos:start="77:41" pos:end="77:41"><literal type="number" pos:start="77:41" pos:end="77:41">1</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:50"><expr pos:start="77:44" pos:end="77:50"><name pos:start="77:44" pos:end="77:50">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="77:53" pos:end="77:53">&lt;</operator> <literal type="number" pos:start="77:55" pos:end="77:55">0</literal></expr>)</condition> <block pos:start="77:58" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:22">

            <goto pos:start="79:13" pos:end="79:22">goto <name pos:start="79:18" pos:end="79:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:95"><expr pos:start="85:9" pos:end="85:94"><name pos:start="85:9" pos:end="85:11">tmp</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:94"><name pos:start="85:15" pos:end="85:38"><operator pos:start="85:15" pos:end="85:15">(</operator><operator pos:start="85:16" pos:end="85:16">*</operator><name pos:start="85:17" pos:end="85:19">env</name><operator pos:start="85:20" pos:end="85:20">)</operator><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:38">CallObjectMethod</name></name><argument_list pos:start="85:39" pos:end="85:94">(<argument pos:start="85:40" pos:end="85:42"><expr pos:start="85:40" pos:end="85:42"><name pos:start="85:40" pos:end="85:42">env</name></expr></argument>, <argument pos:start="85:45" pos:end="85:49"><expr pos:start="85:45" pos:end="85:49"><name pos:start="85:45" pos:end="85:49">codec</name></expr></argument>, <argument pos:start="85:52" pos:end="85:85"><expr pos:start="85:52" pos:end="85:85"><name pos:start="85:52" pos:end="85:85"><name pos:start="85:52" pos:end="85:58">jfields</name><operator pos:start="85:59" pos:end="85:59">.</operator><name pos:start="85:60" pos:end="85:85">find_decoder_for_format_id</name></name></expr></argument>, <argument pos:start="85:88" pos:end="85:93"><expr pos:start="85:88" pos:end="85:93"><name pos:start="85:88" pos:end="85:93">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:56">(<expr pos:start="87:13" pos:end="87:55"><call pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:34">ff_jni_exception_check</name><argument_list pos:start="87:35" pos:end="87:51">(<argument pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:38">env</name></expr></argument>, <argument pos:start="87:41" pos:end="87:41"><expr pos:start="87:41" pos:end="87:41"><literal type="number" pos:start="87:41" pos:end="87:41">1</literal></expr></argument>, <argument pos:start="87:44" pos:end="87:50"><expr pos:start="87:44" pos:end="87:50"><name pos:start="87:44" pos:end="87:50">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="87:53" pos:end="87:53">&lt;</operator> <literal type="number" pos:start="87:55" pos:end="87:55">0</literal></expr>)</condition> <block pos:start="87:58" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:22">

            <goto pos:start="89:13" pos:end="89:22">goto <name pos:start="89:18" pos:end="89:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:17">(<expr pos:start="93:13" pos:end="93:16"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:16">tmp</name></expr>)</condition> <block pos:start="93:19" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:22">

            <expr_stmt pos:start="95:13" pos:end="97:107"><expr pos:start="95:13" pos:end="97:106"><call pos:start="95:13" pos:end="97:106"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="97:106">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">NULL</name></expr></argument>, <argument pos:start="95:26" pos:end="95:37"><expr pos:start="95:26" pos:end="95:37"><name pos:start="95:26" pos:end="95:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:40" pos:end="97:84"><expr pos:start="95:40" pos:end="97:84"><literal type="string" pos:start="95:40" pos:end="95:84">"Could not find decoder in media codec list "</literal>

                                       <literal type="string" pos:start="97:40" pos:end="97:84">"for format { mime=%s width=%d height=%d }\n"</literal></expr></argument>, <argument pos:start="97:87" pos:end="97:90"><expr pos:start="97:87" pos:end="97:90"><name pos:start="97:87" pos:end="97:90">mime</name></expr></argument>, <argument pos:start="97:93" pos:end="97:97"><expr pos:start="97:93" pos:end="97:97"><name pos:start="97:93" pos:end="97:97">width</name></expr></argument>, <argument pos:start="97:100" pos:end="97:105"><expr pos:start="97:100" pos:end="97:105"><name pos:start="97:100" pos:end="97:105">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:62"><expr pos:start="105:9" pos:end="105:61"><name pos:start="105:9" pos:end="105:12">name</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:61"><name pos:start="105:16" pos:end="105:42">ff_jni_jstring_to_utf_chars</name><argument_list pos:start="105:43" pos:end="105:61">(<argument pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><name pos:start="105:44" pos:end="105:46">env</name></expr></argument>, <argument pos:start="105:49" pos:end="105:51"><expr pos:start="105:49" pos:end="105:51"><name pos:start="105:49" pos:end="105:51">tmp</name></expr></argument>, <argument pos:start="105:54" pos:end="105:60"><expr pos:start="105:54" pos:end="105:60"><name pos:start="105:54" pos:end="105:60">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:18">(<expr pos:start="107:13" pos:end="107:17"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:17">name</name></expr>)</condition> <block pos:start="107:20" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:22">

            <goto pos:start="109:13" pos:end="109:22">goto <name pos:start="109:18" pos:end="109:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if> <else pos:start="115:7" pos:end="269:5">else <block pos:start="115:12" pos:end="269:5">{<block_content pos:start="117:9" pos:end="267:9">

        <decl_stmt pos:start="117:9" pos:end="117:14"><decl pos:start="117:9" pos:end="117:13"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:24"><decl pos:start="119:9" pos:end="119:23"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:23">codec_count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:114"><expr pos:start="123:9" pos:end="123:113"><name pos:start="123:9" pos:end="123:19">codec_count</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:113"><name pos:start="123:23" pos:end="123:49"><operator pos:start="123:23" pos:end="123:23">(</operator><operator pos:start="123:24" pos:end="123:24">*</operator><name pos:start="123:25" pos:end="123:27">env</name><operator pos:start="123:28" pos:end="123:28">)</operator><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:49">CallStaticIntMethod</name></name><argument_list pos:start="123:50" pos:end="123:113">(<argument pos:start="123:51" pos:end="123:53"><expr pos:start="123:51" pos:end="123:53"><name pos:start="123:51" pos:end="123:53">env</name></expr></argument>, <argument pos:start="123:56" pos:end="123:84"><expr pos:start="123:56" pos:end="123:84"><name pos:start="123:56" pos:end="123:84"><name pos:start="123:56" pos:end="123:62">jfields</name><operator pos:start="123:63" pos:end="123:63">.</operator><name pos:start="123:64" pos:end="123:84">mediacodec_list_class</name></name></expr></argument>, <argument pos:start="123:87" pos:end="123:112"><expr pos:start="123:87" pos:end="123:112"><name pos:start="123:87" pos:end="123:112"><name pos:start="123:87" pos:end="123:93">jfields</name><operator pos:start="123:94" pos:end="123:94">.</operator><name pos:start="123:95" pos:end="123:112">get_codec_count_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="129:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:56">(<expr pos:start="125:13" pos:end="125:55"><call pos:start="125:13" pos:end="125:51"><name pos:start="125:13" pos:end="125:34">ff_jni_exception_check</name><argument_list pos:start="125:35" pos:end="125:51">(<argument pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:38">env</name></expr></argument>, <argument pos:start="125:41" pos:end="125:41"><expr pos:start="125:41" pos:end="125:41"><literal type="number" pos:start="125:41" pos:end="125:41">1</literal></expr></argument>, <argument pos:start="125:44" pos:end="125:50"><expr pos:start="125:44" pos:end="125:50"><name pos:start="125:44" pos:end="125:50">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="125:53" pos:end="125:53">&lt;</operator> <literal type="number" pos:start="125:55" pos:end="125:55">0</literal></expr>)</condition> <block pos:start="125:58" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:22">

            <goto pos:start="127:13" pos:end="127:22">goto <name pos:start="127:18" pos:end="127:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="133:9" pos:end="267:9">for<control pos:start="133:12" pos:end="133:40">(<init pos:start="133:13" pos:end="133:18"><expr pos:start="133:13" pos:end="133:17"><name pos:start="133:13" pos:end="133:13">i</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <literal type="number" pos:start="133:17" pos:end="133:17">0</literal></expr>;</init> <condition pos:start="133:20" pos:end="133:35"><expr pos:start="133:20" pos:end="133:34"><name pos:start="133:20" pos:end="133:20">i</name> <operator pos:start="133:22" pos:end="133:22">&lt;</operator> <name pos:start="133:24" pos:end="133:34">codec_count</name></expr>;</condition> <incr pos:start="133:37" pos:end="133:39"><expr pos:start="133:37" pos:end="133:39"><name pos:start="133:37" pos:end="133:37">i</name><operator pos:start="133:38" pos:end="133:39">++</operator></expr></incr>)</control> <block pos:start="133:42" pos:end="267:9">{<block_content pos:start="135:13" pos:end="265:22">

            <decl_stmt pos:start="135:13" pos:end="135:18"><decl pos:start="135:13" pos:end="135:17"><type pos:start="135:13" pos:end="135:15"><name pos:start="135:13" pos:end="135:15">int</name></type> <name pos:start="135:17" pos:end="135:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="137:13" pos:end="137:27"><decl pos:start="137:13" pos:end="137:26"><type pos:start="137:13" pos:end="137:15"><name pos:start="137:13" pos:end="137:15">int</name></type> <name pos:start="137:17" pos:end="137:26">type_count</name></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:27"><decl pos:start="139:13" pos:end="139:26"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:26">is_encoder</name></decl>;</decl_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:119"><expr pos:start="143:13" pos:end="143:118"><name pos:start="143:13" pos:end="143:16">info</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <call pos:start="143:20" pos:end="143:118"><name pos:start="143:20" pos:end="143:49"><operator pos:start="143:20" pos:end="143:20">(</operator><operator pos:start="143:21" pos:end="143:21">*</operator><name pos:start="143:22" pos:end="143:24">env</name><operator pos:start="143:25" pos:end="143:25">)</operator><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:49">CallStaticObjectMethod</name></name><argument_list pos:start="143:50" pos:end="143:118">(<argument pos:start="143:51" pos:end="143:53"><expr pos:start="143:51" pos:end="143:53"><name pos:start="143:51" pos:end="143:53">env</name></expr></argument>, <argument pos:start="143:56" pos:end="143:84"><expr pos:start="143:56" pos:end="143:84"><name pos:start="143:56" pos:end="143:84"><name pos:start="143:56" pos:end="143:62">jfields</name><operator pos:start="143:63" pos:end="143:63">.</operator><name pos:start="143:64" pos:end="143:84">mediacodec_list_class</name></name></expr></argument>, <argument pos:start="143:87" pos:end="143:114"><expr pos:start="143:87" pos:end="143:114"><name pos:start="143:87" pos:end="143:114"><name pos:start="143:87" pos:end="143:93">jfields</name><operator pos:start="143:94" pos:end="143:94">.</operator><name pos:start="143:95" pos:end="143:114">get_codec_info_at_id</name></name></expr></argument>, <argument pos:start="143:117" pos:end="143:117"><expr pos:start="143:117" pos:end="143:117"><name pos:start="143:117" pos:end="143:117">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="149:13"><if pos:start="145:13" pos:end="149:13">if <condition pos:start="145:16" pos:end="145:60">(<expr pos:start="145:17" pos:end="145:59"><call pos:start="145:17" pos:end="145:55"><name pos:start="145:17" pos:end="145:38">ff_jni_exception_check</name><argument_list pos:start="145:39" pos:end="145:55">(<argument pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:42">env</name></expr></argument>, <argument pos:start="145:45" pos:end="145:45"><expr pos:start="145:45" pos:end="145:45"><literal type="number" pos:start="145:45" pos:end="145:45">1</literal></expr></argument>, <argument pos:start="145:48" pos:end="145:54"><expr pos:start="145:48" pos:end="145:54"><name pos:start="145:48" pos:end="145:54">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="145:57" pos:end="145:57">&lt;</operator> <literal type="number" pos:start="145:59" pos:end="145:59">0</literal></expr>)</condition> <block pos:start="145:62" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:26">

                <goto pos:start="147:17" pos:end="147:26">goto <name pos:start="147:22" pos:end="147:25">done</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:88"><expr pos:start="153:13" pos:end="153:87"><name pos:start="153:13" pos:end="153:17">types</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <call pos:start="153:21" pos:end="153:87"><name pos:start="153:21" pos:end="153:44"><operator pos:start="153:21" pos:end="153:21">(</operator><operator pos:start="153:22" pos:end="153:22">*</operator><name pos:start="153:23" pos:end="153:25">env</name><operator pos:start="153:26" pos:end="153:26">)</operator><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:44">CallObjectMethod</name></name><argument_list pos:start="153:45" pos:end="153:87">(<argument pos:start="153:46" pos:end="153:48"><expr pos:start="153:46" pos:end="153:48"><name pos:start="153:46" pos:end="153:48">env</name></expr></argument>, <argument pos:start="153:51" pos:end="153:54"><expr pos:start="153:51" pos:end="153:54"><name pos:start="153:51" pos:end="153:54">info</name></expr></argument>, <argument pos:start="153:57" pos:end="153:86"><expr pos:start="153:57" pos:end="153:86"><name pos:start="153:57" pos:end="153:86"><name pos:start="153:57" pos:end="153:63">jfields</name><operator pos:start="153:64" pos:end="153:64">.</operator><name pos:start="153:65" pos:end="153:86">get_supported_types_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="159:13"><if pos:start="155:13" pos:end="159:13">if <condition pos:start="155:16" pos:end="155:60">(<expr pos:start="155:17" pos:end="155:59"><call pos:start="155:17" pos:end="155:55"><name pos:start="155:17" pos:end="155:38">ff_jni_exception_check</name><argument_list pos:start="155:39" pos:end="155:55">(<argument pos:start="155:40" pos:end="155:42"><expr pos:start="155:40" pos:end="155:42"><name pos:start="155:40" pos:end="155:42">env</name></expr></argument>, <argument pos:start="155:45" pos:end="155:45"><expr pos:start="155:45" pos:end="155:45"><literal type="number" pos:start="155:45" pos:end="155:45">1</literal></expr></argument>, <argument pos:start="155:48" pos:end="155:54"><expr pos:start="155:48" pos:end="155:54"><name pos:start="155:48" pos:end="155:54">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="155:57" pos:end="155:57">&lt;</operator> <literal type="number" pos:start="155:59" pos:end="155:59">0</literal></expr>)</condition> <block pos:start="155:62" pos:end="159:13">{<block_content pos:start="157:17" pos:end="157:26">

                <goto pos:start="157:17" pos:end="157:26">goto <name pos:start="157:22" pos:end="157:25">done</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="163:13" pos:end="163:85"><expr pos:start="163:13" pos:end="163:84"><name pos:start="163:13" pos:end="163:22">is_encoder</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <call pos:start="163:26" pos:end="163:84"><name pos:start="163:26" pos:end="163:50"><operator pos:start="163:26" pos:end="163:26">(</operator><operator pos:start="163:27" pos:end="163:27">*</operator><name pos:start="163:28" pos:end="163:30">env</name><operator pos:start="163:31" pos:end="163:31">)</operator><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:50">CallBooleanMethod</name></name><argument_list pos:start="163:51" pos:end="163:84">(<argument pos:start="163:52" pos:end="163:54"><expr pos:start="163:52" pos:end="163:54"><name pos:start="163:52" pos:end="163:54">env</name></expr></argument>, <argument pos:start="163:57" pos:end="163:60"><expr pos:start="163:57" pos:end="163:60"><name pos:start="163:57" pos:end="163:60">info</name></expr></argument>, <argument pos:start="163:63" pos:end="163:83"><expr pos:start="163:63" pos:end="163:83"><name pos:start="163:63" pos:end="163:83"><name pos:start="163:63" pos:end="163:69">jfields</name><operator pos:start="163:70" pos:end="163:70">.</operator><name pos:start="163:71" pos:end="163:83">is_encoder_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="169:13"><if pos:start="165:13" pos:end="169:13">if <condition pos:start="165:16" pos:end="165:60">(<expr pos:start="165:17" pos:end="165:59"><call pos:start="165:17" pos:end="165:55"><name pos:start="165:17" pos:end="165:38">ff_jni_exception_check</name><argument_list pos:start="165:39" pos:end="165:55">(<argument pos:start="165:40" pos:end="165:42"><expr pos:start="165:40" pos:end="165:42"><name pos:start="165:40" pos:end="165:42">env</name></expr></argument>, <argument pos:start="165:45" pos:end="165:45"><expr pos:start="165:45" pos:end="165:45"><literal type="number" pos:start="165:45" pos:end="165:45">1</literal></expr></argument>, <argument pos:start="165:48" pos:end="165:54"><expr pos:start="165:48" pos:end="165:54"><name pos:start="165:48" pos:end="165:54">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="165:57" pos:end="165:57">&lt;</operator> <literal type="number" pos:start="165:59" pos:end="165:59">0</literal></expr>)</condition> <block pos:start="165:62" pos:end="169:13">{<block_content pos:start="167:17" pos:end="167:26">

                <goto pos:start="167:17" pos:end="167:26">goto <name pos:start="167:22" pos:end="167:25">done</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="173:13" pos:end="177:13"><if pos:start="173:13" pos:end="177:13">if <condition pos:start="173:16" pos:end="173:27">(<expr pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:26">is_encoder</name></expr>)</condition> <block pos:start="173:29" pos:end="177:13">{<block_content pos:start="175:17" pos:end="175:25">

                <continue pos:start="175:17" pos:end="175:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:60"><expr pos:start="181:13" pos:end="181:59"><name pos:start="181:13" pos:end="181:22">type_count</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <call pos:start="181:26" pos:end="181:59"><name pos:start="181:26" pos:end="181:47"><operator pos:start="181:26" pos:end="181:26">(</operator><operator pos:start="181:27" pos:end="181:27">*</operator><name pos:start="181:28" pos:end="181:30">env</name><operator pos:start="181:31" pos:end="181:31">)</operator><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:47">GetArrayLength</name></name><argument_list pos:start="181:48" pos:end="181:59">(<argument pos:start="181:49" pos:end="181:51"><expr pos:start="181:49" pos:end="181:51"><name pos:start="181:49" pos:end="181:51">env</name></expr></argument>, <argument pos:start="181:54" pos:end="181:58"><expr pos:start="181:54" pos:end="181:58"><name pos:start="181:54" pos:end="181:58">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="183:13" pos:end="247:13">for <control pos:start="183:17" pos:end="183:44">(<init pos:start="183:18" pos:end="183:23"><expr pos:start="183:18" pos:end="183:22"><name pos:start="183:18" pos:end="183:18">j</name> <operator pos:start="183:20" pos:end="183:20">=</operator> <literal type="number" pos:start="183:22" pos:end="183:22">0</literal></expr>;</init> <condition pos:start="183:25" pos:end="183:39"><expr pos:start="183:25" pos:end="183:38"><name pos:start="183:25" pos:end="183:25">j</name> <operator pos:start="183:27" pos:end="183:27">&lt;</operator> <name pos:start="183:29" pos:end="183:38">type_count</name></expr>;</condition> <incr pos:start="183:41" pos:end="183:43"><expr pos:start="183:41" pos:end="183:43"><name pos:start="183:41" pos:end="183:41">j</name><operator pos:start="183:42" pos:end="183:43">++</operator></expr></incr>)</control> <block pos:start="183:46" pos:end="247:13">{<block_content pos:start="187:17" pos:end="245:42">



                <expr_stmt pos:start="187:17" pos:end="187:68"><expr pos:start="187:17" pos:end="187:67"><name pos:start="187:17" pos:end="187:20">type</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <call pos:start="187:24" pos:end="187:67"><name pos:start="187:24" pos:end="187:52"><operator pos:start="187:24" pos:end="187:24">(</operator><operator pos:start="187:25" pos:end="187:25">*</operator><name pos:start="187:26" pos:end="187:28">env</name><operator pos:start="187:29" pos:end="187:29">)</operator><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:52">GetObjectArrayElement</name></name><argument_list pos:start="187:53" pos:end="187:67">(<argument pos:start="187:54" pos:end="187:56"><expr pos:start="187:54" pos:end="187:56"><name pos:start="187:54" pos:end="187:56">env</name></expr></argument>, <argument pos:start="187:59" pos:end="187:63"><expr pos:start="187:59" pos:end="187:63"><name pos:start="187:59" pos:end="187:63">types</name></expr></argument>, <argument pos:start="187:66" pos:end="187:66"><expr pos:start="187:66" pos:end="187:66"><name pos:start="187:66" pos:end="187:66">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="189:17" pos:end="193:17"><if pos:start="189:17" pos:end="193:17">if <condition pos:start="189:20" pos:end="189:64">(<expr pos:start="189:21" pos:end="189:63"><call pos:start="189:21" pos:end="189:59"><name pos:start="189:21" pos:end="189:42">ff_jni_exception_check</name><argument_list pos:start="189:43" pos:end="189:59">(<argument pos:start="189:44" pos:end="189:46"><expr pos:start="189:44" pos:end="189:46"><name pos:start="189:44" pos:end="189:46">env</name></expr></argument>, <argument pos:start="189:49" pos:end="189:49"><expr pos:start="189:49" pos:end="189:49"><literal type="number" pos:start="189:49" pos:end="189:49">1</literal></expr></argument>, <argument pos:start="189:52" pos:end="189:58"><expr pos:start="189:52" pos:end="189:58"><name pos:start="189:52" pos:end="189:58">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="189:61" pos:end="189:61">&lt;</operator> <literal type="number" pos:start="189:63" pos:end="189:63">0</literal></expr>)</condition> <block pos:start="189:66" pos:end="193:17">{<block_content pos:start="191:21" pos:end="191:30">

                    <goto pos:start="191:21" pos:end="191:30">goto <name pos:start="191:26" pos:end="191:29">done</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="197:17" pos:end="197:81"><expr pos:start="197:17" pos:end="197:80"><name pos:start="197:17" pos:end="197:30">supported_type</name> <operator pos:start="197:32" pos:end="197:32">=</operator> <call pos:start="197:34" pos:end="197:80"><name pos:start="197:34" pos:end="197:60">ff_jni_jstring_to_utf_chars</name><argument_list pos:start="197:61" pos:end="197:80">(<argument pos:start="197:62" pos:end="197:64"><expr pos:start="197:62" pos:end="197:64"><name pos:start="197:62" pos:end="197:64">env</name></expr></argument>, <argument pos:start="197:67" pos:end="197:70"><expr pos:start="197:67" pos:end="197:70"><name pos:start="197:67" pos:end="197:70">type</name></expr></argument>, <argument pos:start="197:73" pos:end="197:79"><expr pos:start="197:73" pos:end="197:79"><name pos:start="197:73" pos:end="197:79">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="199:17" pos:end="203:17"><if pos:start="199:17" pos:end="203:17">if <condition pos:start="199:20" pos:end="199:36">(<expr pos:start="199:21" pos:end="199:35"><operator pos:start="199:21" pos:end="199:21">!</operator><name pos:start="199:22" pos:end="199:35">supported_type</name></expr>)</condition> <block pos:start="199:38" pos:end="203:17">{<block_content pos:start="201:21" pos:end="201:30">

                    <goto pos:start="201:21" pos:end="201:30">goto <name pos:start="201:26" pos:end="201:29">done</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="207:17" pos:end="241:17"><if pos:start="207:17" pos:end="241:17">if <condition pos:start="207:20" pos:end="207:57">(<expr pos:start="207:21" pos:end="207:56"><operator pos:start="207:21" pos:end="207:21">!</operator><call pos:start="207:22" pos:end="207:56"><name pos:start="207:22" pos:end="207:34">av_strcasecmp</name><argument_list pos:start="207:35" pos:end="207:56">(<argument pos:start="207:36" pos:end="207:49"><expr pos:start="207:36" pos:end="207:49"><name pos:start="207:36" pos:end="207:49">supported_type</name></expr></argument>, <argument pos:start="207:52" pos:end="207:55"><expr pos:start="207:52" pos:end="207:55"><name pos:start="207:52" pos:end="207:55">mime</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:59" pos:end="241:17">{<block_content pos:start="209:21" pos:end="239:21">

                    <decl_stmt pos:start="209:21" pos:end="209:39"><decl pos:start="209:21" pos:end="209:38"><type pos:start="209:21" pos:end="209:27"><name pos:start="209:21" pos:end="209:27">jobject</name></type> <name pos:start="209:29" pos:end="209:38">codec_name</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="213:21" pos:end="213:90"><expr pos:start="213:21" pos:end="213:89"><name pos:start="213:21" pos:end="213:30">codec_name</name> <operator pos:start="213:32" pos:end="213:32">=</operator> <call pos:start="213:34" pos:end="213:89"><name pos:start="213:34" pos:end="213:57"><operator pos:start="213:34" pos:end="213:34">(</operator><operator pos:start="213:35" pos:end="213:35">*</operator><name pos:start="213:36" pos:end="213:38">env</name><operator pos:start="213:39" pos:end="213:39">)</operator><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:57">CallObjectMethod</name></name><argument_list pos:start="213:58" pos:end="213:89">(<argument pos:start="213:59" pos:end="213:61"><expr pos:start="213:59" pos:end="213:61"><name pos:start="213:59" pos:end="213:61">env</name></expr></argument>, <argument pos:start="213:64" pos:end="213:67"><expr pos:start="213:64" pos:end="213:67"><name pos:start="213:64" pos:end="213:67">info</name></expr></argument>, <argument pos:start="213:70" pos:end="213:88"><expr pos:start="213:70" pos:end="213:88"><name pos:start="213:70" pos:end="213:88"><name pos:start="213:70" pos:end="213:76">jfields</name><operator pos:start="213:77" pos:end="213:77">.</operator><name pos:start="213:78" pos:end="213:88">get_name_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="215:21" pos:end="219:21"><if pos:start="215:21" pos:end="219:21">if <condition pos:start="215:24" pos:end="215:68">(<expr pos:start="215:25" pos:end="215:67"><call pos:start="215:25" pos:end="215:63"><name pos:start="215:25" pos:end="215:46">ff_jni_exception_check</name><argument_list pos:start="215:47" pos:end="215:63">(<argument pos:start="215:48" pos:end="215:50"><expr pos:start="215:48" pos:end="215:50"><name pos:start="215:48" pos:end="215:50">env</name></expr></argument>, <argument pos:start="215:53" pos:end="215:53"><expr pos:start="215:53" pos:end="215:53"><literal type="number" pos:start="215:53" pos:end="215:53">1</literal></expr></argument>, <argument pos:start="215:56" pos:end="215:62"><expr pos:start="215:56" pos:end="215:62"><name pos:start="215:56" pos:end="215:62">log_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="215:65" pos:end="215:65">&lt;</operator> <literal type="number" pos:start="215:67" pos:end="215:67">0</literal></expr>)</condition> <block pos:start="215:70" pos:end="219:21">{<block_content pos:start="217:25" pos:end="217:34">

                        <goto pos:start="217:25" pos:end="217:34">goto <name pos:start="217:30" pos:end="217:33">done</name>;</goto>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="223:21" pos:end="223:81"><expr pos:start="223:21" pos:end="223:80"><name pos:start="223:21" pos:end="223:24">name</name> <operator pos:start="223:26" pos:end="223:26">=</operator> <call pos:start="223:28" pos:end="223:80"><name pos:start="223:28" pos:end="223:54">ff_jni_jstring_to_utf_chars</name><argument_list pos:start="223:55" pos:end="223:80">(<argument pos:start="223:56" pos:end="223:58"><expr pos:start="223:56" pos:end="223:58"><name pos:start="223:56" pos:end="223:58">env</name></expr></argument>, <argument pos:start="223:61" pos:end="223:70"><expr pos:start="223:61" pos:end="223:70"><name pos:start="223:61" pos:end="223:70">codec_name</name></expr></argument>, <argument pos:start="223:73" pos:end="223:79"><expr pos:start="223:73" pos:end="223:79"><name pos:start="223:73" pos:end="223:79">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="225:21" pos:end="229:21"><if pos:start="225:21" pos:end="229:21">if <condition pos:start="225:24" pos:end="225:30">(<expr pos:start="225:25" pos:end="225:29"><operator pos:start="225:25" pos:end="225:25">!</operator><name pos:start="225:26" pos:end="225:29">name</name></expr>)</condition> <block pos:start="225:32" pos:end="229:21">{<block_content pos:start="227:25" pos:end="227:34">

                        <goto pos:start="227:25" pos:end="227:34">goto <name pos:start="227:30" pos:end="227:33">done</name>;</goto>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="233:21" pos:end="239:21"><if pos:start="233:21" pos:end="239:21">if <condition pos:start="233:24" pos:end="233:51">(<expr pos:start="233:25" pos:end="233:50"><call pos:start="233:25" pos:end="233:50"><name pos:start="233:25" pos:end="233:30">strstr</name><argument_list pos:start="233:31" pos:end="233:50">(<argument pos:start="233:32" pos:end="233:35"><expr pos:start="233:32" pos:end="233:35"><name pos:start="233:32" pos:end="233:35">name</name></expr></argument>, <argument pos:start="233:38" pos:end="233:49"><expr pos:start="233:38" pos:end="233:49"><literal type="string" pos:start="233:38" pos:end="233:49">"OMX.google"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="233:53" pos:end="239:21">{<block_content pos:start="235:25" pos:end="237:33">

                        <expr_stmt pos:start="235:25" pos:end="235:40"><expr pos:start="235:25" pos:end="235:39"><call pos:start="235:25" pos:end="235:39"><name pos:start="235:25" pos:end="235:32">av_freep</name><argument_list pos:start="235:33" pos:end="235:39">(<argument pos:start="235:34" pos:end="235:38"><expr pos:start="235:34" pos:end="235:38"><operator pos:start="235:34" pos:end="235:34">&amp;</operator><name pos:start="235:35" pos:end="235:38">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <continue pos:start="237:25" pos:end="237:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="245:17" pos:end="245:42"><expr pos:start="245:17" pos:end="245:41"><call pos:start="245:17" pos:end="245:41"><name pos:start="245:17" pos:end="245:24">av_freep</name><argument_list pos:start="245:25" pos:end="245:41">(<argument pos:start="245:26" pos:end="245:40"><expr pos:start="245:26" pos:end="245:40"><operator pos:start="245:26" pos:end="245:26">&amp;</operator><name pos:start="245:27" pos:end="245:40">supported_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="251:13" pos:end="251:46"><expr pos:start="251:13" pos:end="251:45"><call pos:start="251:13" pos:end="251:45"><name pos:start="251:13" pos:end="251:34"><operator pos:start="251:13" pos:end="251:13">(</operator><operator pos:start="251:14" pos:end="251:14">*</operator><name pos:start="251:15" pos:end="251:17">env</name><operator pos:start="251:18" pos:end="251:18">)</operator><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:34">DeleteLocalRef</name></name><argument_list pos:start="251:35" pos:end="251:45">(<argument pos:start="251:36" pos:end="251:38"><expr pos:start="251:36" pos:end="251:38"><name pos:start="251:36" pos:end="251:38">env</name></expr></argument>, <argument pos:start="251:41" pos:end="251:44"><expr pos:start="251:41" pos:end="251:44"><name pos:start="251:41" pos:end="251:44">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:24"><expr pos:start="253:13" pos:end="253:23"><name pos:start="253:13" pos:end="253:16">info</name> <operator pos:start="253:18" pos:end="253:18">=</operator> <name pos:start="253:20" pos:end="253:23">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="257:13" pos:end="257:47"><expr pos:start="257:13" pos:end="257:46"><call pos:start="257:13" pos:end="257:46"><name pos:start="257:13" pos:end="257:34"><operator pos:start="257:13" pos:end="257:13">(</operator><operator pos:start="257:14" pos:end="257:14">*</operator><name pos:start="257:15" pos:end="257:17">env</name><operator pos:start="257:18" pos:end="257:18">)</operator><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:34">DeleteLocalRef</name></name><argument_list pos:start="257:35" pos:end="257:46">(<argument pos:start="257:36" pos:end="257:38"><expr pos:start="257:36" pos:end="257:38"><name pos:start="257:36" pos:end="257:38">env</name></expr></argument>, <argument pos:start="257:41" pos:end="257:45"><expr pos:start="257:41" pos:end="257:45"><name pos:start="257:41" pos:end="257:45">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:25"><expr pos:start="259:13" pos:end="259:24"><name pos:start="259:13" pos:end="259:17">types</name> <operator pos:start="259:19" pos:end="259:19">=</operator> <name pos:start="259:21" pos:end="259:24">NULL</name></expr>;</expr_stmt>



            <if_stmt pos:start="263:13" pos:end="265:22"><if pos:start="263:13" pos:end="265:22">if <condition pos:start="263:16" pos:end="263:21">(<expr pos:start="263:17" pos:end="263:20"><name pos:start="263:17" pos:end="263:20">name</name></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:22"><block_content pos:start="265:17" pos:end="265:22">

                <break pos:start="265:17" pos:end="265:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



<label pos:start="273:1" pos:end="273:5"><name pos:start="273:1" pos:end="273:4">done</name>:</label>

    <if_stmt pos:start="275:5" pos:end="279:5"><if pos:start="275:5" pos:end="279:5">if <condition pos:start="275:8" pos:end="275:15">(<expr pos:start="275:9" pos:end="275:14"><name pos:start="275:9" pos:end="275:14">format</name></expr>)</condition> <block pos:start="275:17" pos:end="279:5">{<block_content pos:start="277:9" pos:end="277:44">

        <expr_stmt pos:start="277:9" pos:end="277:44"><expr pos:start="277:9" pos:end="277:43"><call pos:start="277:9" pos:end="277:43"><name pos:start="277:9" pos:end="277:30"><operator pos:start="277:9" pos:end="277:9">(</operator><operator pos:start="277:10" pos:end="277:10">*</operator><name pos:start="277:11" pos:end="277:13">env</name><operator pos:start="277:14" pos:end="277:14">)</operator><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:30">DeleteLocalRef</name></name><argument_list pos:start="277:31" pos:end="277:43">(<argument pos:start="277:32" pos:end="277:34"><expr pos:start="277:32" pos:end="277:34"><name pos:start="277:32" pos:end="277:34">env</name></expr></argument>, <argument pos:start="277:37" pos:end="277:42"><expr pos:start="277:37" pos:end="277:42"><name pos:start="277:37" pos:end="277:42">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="283:5" pos:end="287:5"><if pos:start="283:5" pos:end="287:5">if <condition pos:start="283:8" pos:end="283:14">(<expr pos:start="283:9" pos:end="283:13"><name pos:start="283:9" pos:end="283:13">codec</name></expr>)</condition> <block pos:start="283:16" pos:end="287:5">{<block_content pos:start="285:9" pos:end="285:43">

        <expr_stmt pos:start="285:9" pos:end="285:43"><expr pos:start="285:9" pos:end="285:42"><call pos:start="285:9" pos:end="285:42"><name pos:start="285:9" pos:end="285:30"><operator pos:start="285:9" pos:end="285:9">(</operator><operator pos:start="285:10" pos:end="285:10">*</operator><name pos:start="285:11" pos:end="285:13">env</name><operator pos:start="285:14" pos:end="285:14">)</operator><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:30">DeleteLocalRef</name></name><argument_list pos:start="285:31" pos:end="285:42">(<argument pos:start="285:32" pos:end="285:34"><expr pos:start="285:32" pos:end="285:34"><name pos:start="285:32" pos:end="285:34">env</name></expr></argument>, <argument pos:start="285:37" pos:end="285:41"><expr pos:start="285:37" pos:end="285:41"><name pos:start="285:37" pos:end="285:41">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="291:5" pos:end="295:5"><if pos:start="291:5" pos:end="295:5">if <condition pos:start="291:8" pos:end="291:12">(<expr pos:start="291:9" pos:end="291:11"><name pos:start="291:9" pos:end="291:11">tmp</name></expr>)</condition> <block pos:start="291:14" pos:end="295:5">{<block_content pos:start="293:9" pos:end="293:41">

        <expr_stmt pos:start="293:9" pos:end="293:41"><expr pos:start="293:9" pos:end="293:40"><call pos:start="293:9" pos:end="293:40"><name pos:start="293:9" pos:end="293:30"><operator pos:start="293:9" pos:end="293:9">(</operator><operator pos:start="293:10" pos:end="293:10">*</operator><name pos:start="293:11" pos:end="293:13">env</name><operator pos:start="293:14" pos:end="293:14">)</operator><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:30">DeleteLocalRef</name></name><argument_list pos:start="293:31" pos:end="293:40">(<argument pos:start="293:32" pos:end="293:34"><expr pos:start="293:32" pos:end="293:34"><name pos:start="293:32" pos:end="293:34">env</name></expr></argument>, <argument pos:start="293:37" pos:end="293:39"><expr pos:start="293:37" pos:end="293:39"><name pos:start="293:37" pos:end="293:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="303:5"><if pos:start="299:5" pos:end="303:5">if <condition pos:start="299:8" pos:end="299:13">(<expr pos:start="299:9" pos:end="299:12"><name pos:start="299:9" pos:end="299:12">info</name></expr>)</condition> <block pos:start="299:15" pos:end="303:5">{<block_content pos:start="301:9" pos:end="301:42">

        <expr_stmt pos:start="301:9" pos:end="301:42"><expr pos:start="301:9" pos:end="301:41"><call pos:start="301:9" pos:end="301:41"><name pos:start="301:9" pos:end="301:30"><operator pos:start="301:9" pos:end="301:9">(</operator><operator pos:start="301:10" pos:end="301:10">*</operator><name pos:start="301:11" pos:end="301:13">env</name><operator pos:start="301:14" pos:end="301:14">)</operator><operator pos:start="301:15" pos:end="301:16">-&gt;</operator><name pos:start="301:17" pos:end="301:30">DeleteLocalRef</name></name><argument_list pos:start="301:31" pos:end="301:41">(<argument pos:start="301:32" pos:end="301:34"><expr pos:start="301:32" pos:end="301:34"><name pos:start="301:32" pos:end="301:34">env</name></expr></argument>, <argument pos:start="301:37" pos:end="301:40"><expr pos:start="301:37" pos:end="301:40"><name pos:start="301:37" pos:end="301:40">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="307:5" pos:end="311:5"><if pos:start="307:5" pos:end="311:5">if <condition pos:start="307:8" pos:end="307:13">(<expr pos:start="307:9" pos:end="307:12"><name pos:start="307:9" pos:end="307:12">type</name></expr>)</condition> <block pos:start="307:15" pos:end="311:5">{<block_content pos:start="309:9" pos:end="309:42">

        <expr_stmt pos:start="309:9" pos:end="309:42"><expr pos:start="309:9" pos:end="309:41"><call pos:start="309:9" pos:end="309:41"><name pos:start="309:9" pos:end="309:30"><operator pos:start="309:9" pos:end="309:9">(</operator><operator pos:start="309:10" pos:end="309:10">*</operator><name pos:start="309:11" pos:end="309:13">env</name><operator pos:start="309:14" pos:end="309:14">)</operator><operator pos:start="309:15" pos:end="309:16">-&gt;</operator><name pos:start="309:17" pos:end="309:30">DeleteLocalRef</name></name><argument_list pos:start="309:31" pos:end="309:41">(<argument pos:start="309:32" pos:end="309:34"><expr pos:start="309:32" pos:end="309:34"><name pos:start="309:32" pos:end="309:34">env</name></expr></argument>, <argument pos:start="309:37" pos:end="309:40"><expr pos:start="309:37" pos:end="309:40"><name pos:start="309:37" pos:end="309:40">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="315:5" pos:end="319:5"><if pos:start="315:5" pos:end="319:5">if <condition pos:start="315:8" pos:end="315:14">(<expr pos:start="315:9" pos:end="315:13"><name pos:start="315:9" pos:end="315:13">types</name></expr>)</condition> <block pos:start="315:16" pos:end="319:5">{<block_content pos:start="317:9" pos:end="317:43">

        <expr_stmt pos:start="317:9" pos:end="317:43"><expr pos:start="317:9" pos:end="317:42"><call pos:start="317:9" pos:end="317:42"><name pos:start="317:9" pos:end="317:30"><operator pos:start="317:9" pos:end="317:9">(</operator><operator pos:start="317:10" pos:end="317:10">*</operator><name pos:start="317:11" pos:end="317:13">env</name><operator pos:start="317:14" pos:end="317:14">)</operator><operator pos:start="317:15" pos:end="317:16">-&gt;</operator><name pos:start="317:17" pos:end="317:30">DeleteLocalRef</name></name><argument_list pos:start="317:31" pos:end="317:42">(<argument pos:start="317:32" pos:end="317:34"><expr pos:start="317:32" pos:end="317:34"><name pos:start="317:32" pos:end="317:34">env</name></expr></argument>, <argument pos:start="317:37" pos:end="317:41"><expr pos:start="317:37" pos:end="317:41"><name pos:start="317:37" pos:end="317:41">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="323:5" pos:end="323:30"><expr pos:start="323:5" pos:end="323:29"><call pos:start="323:5" pos:end="323:29"><name pos:start="323:5" pos:end="323:12">av_freep</name><argument_list pos:start="323:13" pos:end="323:29">(<argument pos:start="323:14" pos:end="323:28"><expr pos:start="323:14" pos:end="323:28"><operator pos:start="323:14" pos:end="323:14">&amp;</operator><name pos:start="323:15" pos:end="323:28">supported_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="327:5" pos:end="327:81"><expr pos:start="327:5" pos:end="327:80"><call pos:start="327:5" pos:end="327:80"><name pos:start="327:5" pos:end="327:24">ff_jni_reset_jfields</name><argument_list pos:start="327:25" pos:end="327:80">(<argument pos:start="327:26" pos:end="327:28"><expr pos:start="327:26" pos:end="327:28"><name pos:start="327:26" pos:end="327:28">env</name></expr></argument>, <argument pos:start="327:31" pos:end="327:38"><expr pos:start="327:31" pos:end="327:38"><operator pos:start="327:31" pos:end="327:31">&amp;</operator><name pos:start="327:32" pos:end="327:38">jfields</name></expr></argument>, <argument pos:start="327:41" pos:end="327:67"><expr pos:start="327:41" pos:end="327:67"><name pos:start="327:41" pos:end="327:67">jni_amediacodeclist_mapping</name></expr></argument>, <argument pos:start="327:70" pos:end="327:70"><expr pos:start="327:70" pos:end="327:70"><literal type="number" pos:start="327:70" pos:end="327:70">0</literal></expr></argument>, <argument pos:start="327:73" pos:end="327:79"><expr pos:start="327:73" pos:end="327:79"><name pos:start="327:73" pos:end="327:79">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="331:5" pos:end="331:38"><expr pos:start="331:5" pos:end="331:37"><call pos:start="331:5" pos:end="331:37"><name pos:start="331:5" pos:end="331:18">JNI_DETACH_ENV</name><argument_list pos:start="331:19" pos:end="331:37">(<argument pos:start="331:20" pos:end="331:27"><expr pos:start="331:20" pos:end="331:27"><name pos:start="331:20" pos:end="331:27">attached</name></expr></argument>, <argument pos:start="331:30" pos:end="331:36"><expr pos:start="331:30" pos:end="331:36"><name pos:start="331:30" pos:end="331:36">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="335:5" pos:end="335:16">return <expr pos:start="335:12" pos:end="335:15"><name pos:start="335:12" pos:end="335:15">name</name></expr>;</return>

</block_content>}</block></function>
</unit>
