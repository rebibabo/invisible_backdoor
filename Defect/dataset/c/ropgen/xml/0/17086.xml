<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17086.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockDriverState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:26">bdrv_new</name><parameter_list pos:start="1:27" pos:end="1:51">(<parameter pos:start="1:28" pos:end="1:50"><decl pos:start="1:28" pos:end="1:50"><type pos:start="1:28" pos:end="1:39"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:50">device_name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:14">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:45"><expr pos:start="9:5" pos:end="9:44"><name pos:start="9:5" pos:end="9:6">bs</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:44"><name pos:start="9:10" pos:end="9:18">g_malloc0</name><argument_list pos:start="9:19" pos:end="9:44">(<argument pos:start="9:20" pos:end="9:43"><expr pos:start="9:20" pos:end="9:43"><sizeof pos:start="9:20" pos:end="9:43">sizeof<argument_list pos:start="9:26" pos:end="9:43">(<argument pos:start="9:27" pos:end="9:42"><expr pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:42">BlockDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><call pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:14">QLIST_INIT</name><argument_list pos:start="11:15" pos:end="11:34">(<argument pos:start="11:16" pos:end="11:33"><expr pos:start="11:16" pos:end="11:33"><operator pos:start="11:16" pos:end="11:16">&amp;</operator><name pos:start="11:17" pos:end="11:33"><name pos:start="11:17" pos:end="11:18">bs</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:33">dirty_bitmaps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:67"><expr pos:start="13:5" pos:end="13:66"><call pos:start="13:5" pos:end="13:66"><name pos:start="13:5" pos:end="13:11">pstrcpy</name><argument_list pos:start="13:12" pos:end="13:66">(<argument pos:start="13:13" pos:end="13:27"><expr pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:14">bs</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:27">device_name</name></name></expr></argument>, <argument pos:start="13:30" pos:end="13:52"><expr pos:start="13:30" pos:end="13:52"><sizeof pos:start="13:30" pos:end="13:52">sizeof<argument_list pos:start="13:36" pos:end="13:52">(<argument pos:start="13:37" pos:end="13:51"><expr pos:start="13:37" pos:end="13:51"><name pos:start="13:37" pos:end="13:51"><name pos:start="13:37" pos:end="13:38">bs</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:51">device_name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="13:55" pos:end="13:65"><expr pos:start="13:55" pos:end="13:65"><name pos:start="13:55" pos:end="13:65">device_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:19">device_name</name><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>]</index></name> <operator pos:start="15:24" pos:end="15:25">!=</operator> <literal type="char" pos:start="15:27" pos:end="15:30">'\0'</literal></expr>)</condition> <block pos:start="15:33" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:58">

        <expr_stmt pos:start="17:9" pos:end="17:58"><expr pos:start="17:9" pos:end="17:57"><call pos:start="17:9" pos:end="17:57"><name pos:start="17:9" pos:end="17:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="17:27" pos:end="17:57">(<argument pos:start="17:28" pos:end="17:39"><expr pos:start="17:28" pos:end="17:39"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:39">bdrv_states</name></expr></argument>, <argument pos:start="17:42" pos:end="17:43"><expr pos:start="17:42" pos:end="17:43"><name pos:start="17:42" pos:end="17:43">bs</name></expr></argument>, <argument pos:start="17:46" pos:end="17:56"><expr pos:start="17:46" pos:end="17:56"><name pos:start="17:46" pos:end="17:56">device_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><call pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:25">bdrv_iostatus_disable</name><argument_list pos:start="21:26" pos:end="21:29">(<argument pos:start="21:27" pos:end="21:28"><expr pos:start="21:27" pos:end="21:28"><name pos:start="21:27" pos:end="21:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><call pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:22">notifier_list_init</name><argument_list pos:start="23:23" pos:end="23:44">(<argument pos:start="23:24" pos:end="23:43"><expr pos:start="23:24" pos:end="23:43"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:26">bs</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:43">close_notifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><call pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:34">notifier_with_return_list_init</name><argument_list pos:start="25:35" pos:end="25:63">(<argument pos:start="25:36" pos:end="25:62"><expr pos:start="25:36" pos:end="25:62"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:62"><name pos:start="25:37" pos:end="25:38">bs</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:62">before_write_notifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><call pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:22">qemu_co_queue_init</name><argument_list pos:start="27:23" pos:end="27:46">(<argument pos:start="27:24" pos:end="27:45"><expr pos:start="27:24" pos:end="27:45"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:45"><name pos:start="27:25" pos:end="27:26">bs</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:42">throttled_reqs</name><index pos:start="27:43" pos:end="27:45">[<expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><call pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:22">qemu_co_queue_init</name><argument_list pos:start="29:23" pos:end="29:46">(<argument pos:start="29:24" pos:end="29:45"><expr pos:start="29:24" pos:end="29:45"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:26">bs</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:42">throttled_reqs</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:6">bs</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:14">refcnt</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr>;</expr_stmt>



    <return pos:start="35:5" pos:end="35:14">return <expr pos:start="35:12" pos:end="35:13"><name pos:start="35:12" pos:end="35:13">bs</name></expr>;</return>

</block_content>}</block></function>
</unit>
