<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16304.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:29">tcg_out_st</name><parameter_list pos:start="1:30" pos:end="3:57">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">TCGContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">TCGType</name></type> <name pos:start="1:54" pos:end="1:57">type</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:65">TCGReg</name></type> <name pos:start="1:67" pos:end="1:69">arg</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:36">TCGReg</name></type> <name pos:start="3:38" pos:end="3:41">arg1</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">intptr_t</name></type> <name pos:start="3:53" pos:end="3:56">arg2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:51">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">opi</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">opx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:62"><expr pos:start="11:5" pos:end="11:61"><call pos:start="11:5" pos:end="11:61"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:61">(<argument pos:start="11:12" pos:end="11:60"><expr pos:start="11:12" pos:end="11:60"><name pos:start="11:12" pos:end="11:30">TCG_TARGET_REG_BITS</name> <operator pos:start="11:32" pos:end="11:33">==</operator> <literal type="number" pos:start="11:35" pos:end="11:36">64</literal> <operator pos:start="11:38" pos:end="11:39">||</operator> <name pos:start="11:41" pos:end="11:44">type</name> <operator pos:start="11:46" pos:end="11:47">==</operator> <name pos:start="11:49" pos:end="11:60">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:12">type</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:28">TCG_TYPE_I32</name></expr>)</condition> <block pos:start="13:31" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:30">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">opi</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:17">STW</name></expr><operator pos:start="15:18" pos:end="15:18">,</operator> <expr pos:start="15:20" pos:end="15:29"><name pos:start="15:20" pos:end="15:22">opx</name> <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:29">STWX</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:30">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:11">opi</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:17">STD</name></expr><operator pos:start="19:18" pos:end="19:18">,</operator> <expr pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:22">opx</name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:29">STDX</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><call pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:20">tcg_out_mem_long</name><argument_list pos:start="23:21" pos:end="23:50">(<argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">s</name></expr></argument>, <argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">opi</name></expr></argument>, <argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">opx</name></expr></argument>, <argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><name pos:start="23:35" pos:end="23:37">arg</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">arg1</name></expr></argument>, <argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><name pos:start="23:46" pos:end="23:49">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
