<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7022.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:29">escc_mem_read</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:67"><decl pos:start="1:45" pos:end="1:67"><type pos:start="1:45" pos:end="1:67"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">unsigned</name></type> <name pos:start="3:40" pos:end="3:43">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SerialState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:23">serial</name> <init pos:start="7:25" pos:end="7:32">= <expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ChannelState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">channel</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:9">saddr</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:17">addr</name> <operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator> <name pos:start="19:22" pos:end="19:37"><name pos:start="19:22" pos:end="19:27">serial</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:37">it_shift</name></name><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">&amp;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:11">channel</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">(</operator><name pos:start="21:16" pos:end="21:19">addr</name> <operator pos:start="21:21" pos:end="21:22">&gt;&gt;</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><name pos:start="21:25" pos:end="21:40"><name pos:start="21:25" pos:end="21:30">serial</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:40">it_shift</name></name> <operator pos:start="21:42" pos:end="21:42">+</operator> <literal type="number" pos:start="21:44" pos:end="21:44">1</literal><operator pos:start="21:45" pos:end="21:45">)</operator><operator pos:start="21:46" pos:end="21:46">)</operator> <operator pos:start="21:48" pos:end="21:48">&amp;</operator> <literal type="number" pos:start="21:50" pos:end="21:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:5">s</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <operator pos:start="23:9" pos:end="23:9">&amp;</operator><name pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:15">serial</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">chn</name><index pos:start="23:21" pos:end="23:29">[<expr pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:28">channel</name></expr>]</index></name></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="63:5">switch <condition pos:start="25:12" pos:end="25:18">(<expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">saddr</name></expr>)</condition> <block pos:start="25:20" pos:end="63:5">{<block_content pos:start="27:5" pos:end="61:14">

    <case pos:start="27:5" pos:end="27:21">case <expr pos:start="27:10" pos:end="27:20"><name pos:start="27:10" pos:end="27:20">SERIAL_CTRL</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:70"><expr pos:start="29:9" pos:end="29:69"><call pos:start="29:9" pos:end="29:69"><name pos:start="29:9" pos:end="29:33">trace_escc_mem_readb_ctrl</name><argument_list pos:start="29:34" pos:end="29:69">(<argument pos:start="29:35" pos:end="29:42"><expr pos:start="29:35" pos:end="29:42"><call pos:start="29:35" pos:end="29:42"><name pos:start="29:35" pos:end="29:39">CHN_C</name><argument_list pos:start="29:40" pos:end="29:42">(<argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:45" pos:end="29:50"><expr pos:start="29:45" pos:end="29:50"><name pos:start="29:45" pos:end="29:50"><name pos:start="29:45" pos:end="29:45">s</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:50">reg</name></name></expr></argument>, <argument pos:start="29:53" pos:end="29:68"><expr pos:start="29:53" pos:end="29:68"><name pos:start="29:53" pos:end="29:68"><name pos:start="29:53" pos:end="29:53">s</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:60">rregs</name><index pos:start="29:61" pos:end="29:68">[<expr pos:start="29:62" pos:end="29:67"><name pos:start="29:62" pos:end="29:67"><name pos:start="29:62" pos:end="29:62">s</name><operator pos:start="29:63" pos:end="29:64">-&gt;</operator><name pos:start="29:65" pos:end="29:67">reg</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:30"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:22">rregs</name><index pos:start="31:23" pos:end="31:30">[<expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:29">reg</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">reg</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return>

    <case pos:start="37:5" pos:end="37:21">case <expr pos:start="37:10" pos:end="37:20"><name pos:start="37:10" pos:end="37:20">SERIAL_DATA</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">rregs</name><index pos:start="39:17" pos:end="39:26">[<expr pos:start="39:18" pos:end="39:25"><name pos:start="39:18" pos:end="39:25">R_STATUS</name></expr>]</index></name> <operator pos:start="39:28" pos:end="39:29">&amp;=</operator> <operator pos:start="39:31" pos:end="39:31">~</operator><name pos:start="39:32" pos:end="39:42">STATUS_RXAV</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><call pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:17">clr_rxint</name><argument_list pos:start="41:18" pos:end="41:20">(<argument pos:start="41:19" pos:end="41:19"><expr pos:start="41:19" pos:end="41:19"><name pos:start="41:19" pos:end="41:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:24"><if pos:start="43:9" pos:end="45:31">if <condition pos:start="43:12" pos:end="43:47">(<expr pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:19">type</name></name> <operator pos:start="43:21" pos:end="43:22">==</operator> <name pos:start="43:24" pos:end="43:26">kbd</name> <operator pos:start="43:28" pos:end="43:29">||</operator> <name pos:start="43:31" pos:end="43:37"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:37">type</name></name> <operator pos:start="43:39" pos:end="43:40">==</operator> <name pos:start="43:42" pos:end="43:46">mouse</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:31"><block_content pos:start="45:13" pos:end="45:31">

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:30"><name pos:start="45:19" pos:end="45:27">get_queue</name><argument_list pos:start="45:28" pos:end="45:30">(<argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="47:9" pos:end="49:24">else<block type="pseudo" pos:start="49:13" pos:end="49:24"><block_content pos:start="49:13" pos:end="49:24">

            <expr_stmt pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:23"><name pos:start="49:19" pos:end="49:19">s</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:23">rx</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><call pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:33">trace_escc_mem_readb_data</name><argument_list pos:start="51:34" pos:end="51:48">(<argument pos:start="51:35" pos:end="51:42"><expr pos:start="51:35" pos:end="51:42"><call pos:start="51:35" pos:end="51:42"><name pos:start="51:35" pos:end="51:39">CHN_C</name><argument_list pos:start="51:40" pos:end="51:42">(<argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><name pos:start="51:45" pos:end="51:47">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:42"><if pos:start="53:9" pos:end="55:42">if <condition pos:start="53:12" pos:end="53:19">(<expr pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:18">chr</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:42"><block_content pos:start="55:13" pos:end="55:42">

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><call pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:33">qemu_chr_accept_input</name><argument_list pos:start="55:34" pos:end="55:41">(<argument pos:start="55:35" pos:end="55:40"><expr pos:start="55:35" pos:end="55:40"><name pos:start="55:35" pos:end="55:40"><name pos:start="55:35" pos:end="55:35">s</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">ret</name></expr>;</return>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
