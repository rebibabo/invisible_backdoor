<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22424.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mpegts_read_header</name><parameter_list pos:start="1:30" pos:end="3:53">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:52"><decl pos:start="3:31" pos:end="3:52"><type pos:start="3:31" pos:end="3:52"><name pos:start="3:31" pos:end="3:48">AVFormatParameters</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:52">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="205:1">{<block_content pos:start="7:5" pos:end="203:14">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MpegTSContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">ts</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:23">[<expr pos:start="11:17" pos:end="11:22"><literal type="number" pos:start="11:17" pos:end="11:17">5</literal><operator pos:start="11:18" pos:end="11:18">*</operator><literal type="number" pos:start="11:19" pos:end="11:22">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">pos</name></decl>;</decl_stmt>



<cpp:if pos:start="19:1" pos:end="19:28">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:28">FF_API_FORMAT_PARAMETERS</name></expr></cpp:if>

    <if_stmt pos:start="21:5" pos:end="38:0"><if pos:start="21:5" pos:end="38:0">if <condition pos:start="21:8" pos:end="21:11">(<expr pos:start="21:9" pos:end="21:10"><name pos:start="21:9" pos:end="21:10">ap</name></expr>)</condition> <block pos:start="21:13" pos:end="38:0">{<block_content pos:start="23:9" pos:end="33:9">

        <if_stmt pos:start="23:9" pos:end="25:62"><if pos:start="23:9" pos:end="25:62">if <condition pos:start="23:12" pos:end="23:36">(<expr pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:14">ap</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:35">mpeg2ts_compute_pcr</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:62"><block_content pos:start="25:13" pos:end="25:62">

            <expr_stmt pos:start="25:13" pos:end="25:62"><expr pos:start="25:13" pos:end="25:61"><name pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:14">ts</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:35">mpeg2ts_compute_pcr</name></name> <operator pos:start="25:37" pos:end="25:37">=</operator> <name pos:start="25:39" pos:end="25:61"><name pos:start="25:39" pos:end="25:40">ap</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:61">mpeg2ts_compute_pcr</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if<condition pos:start="27:11" pos:end="27:27">(<expr pos:start="27:12" pos:end="27:26"><name pos:start="27:12" pos:end="27:26"><name pos:start="27:12" pos:end="27:13">ap</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:26">mpeg2ts_raw</name></name></expr>)</condition><block pos:start="27:28" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:22">

            <expr_stmt pos:start="29:13" pos:end="29:64"><expr pos:start="29:13" pos:end="29:63"><call pos:start="29:13" pos:end="29:63"><name pos:start="29:13" pos:end="29:18">av_log</name><argument_list pos:start="29:19" pos:end="29:63">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">s</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:62"><expr pos:start="29:37" pos:end="29:62"><literal type="string" pos:start="29:37" pos:end="29:62">"use mpegtsraw_demuxer!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="41:5" pos:end="41:54">/* read the first 1024 bytes to get packet size */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:7">pos</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:23"><name pos:start="43:11" pos:end="43:19">avio_tell</name><argument_list pos:start="43:20" pos:end="43:23">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:7">len</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:41"><name pos:start="45:11" pos:end="45:19">avio_read</name><argument_list pos:start="45:20" pos:end="45:41">(<argument pos:start="45:21" pos:end="45:22"><expr pos:start="45:21" pos:end="45:22"><name pos:start="45:21" pos:end="45:22">pb</name></expr></argument>, <argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">buf</name></expr></argument>, <argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><sizeof pos:start="45:30" pos:end="45:40">sizeof<argument_list pos:start="45:36" pos:end="45:40">(<argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:18"><if pos:start="47:5" pos:end="49:18">if <condition pos:start="47:8" pos:end="47:27">(<expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:14">!=</operator> <sizeof pos:start="47:16" pos:end="47:26">sizeof<argument_list pos:start="47:22" pos:end="47:26">(<argument pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><name pos:start="47:23" pos:end="47:25">buf</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <goto pos:start="49:9" pos:end="49:18">goto <name pos:start="49:14" pos:end="49:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:6">ts</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:23">raw_packet_size</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <call pos:start="51:27" pos:end="51:59"><name pos:start="51:27" pos:end="51:41">get_packet_size</name><argument_list pos:start="51:42" pos:end="51:59">(<argument pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><name pos:start="51:43" pos:end="51:45">buf</name></expr></argument>, <argument pos:start="51:48" pos:end="51:58"><expr pos:start="51:48" pos:end="51:58"><sizeof pos:start="51:48" pos:end="51:58">sizeof<argument_list pos:start="51:54" pos:end="51:58">(<argument pos:start="51:55" pos:end="51:57"><expr pos:start="51:55" pos:end="51:57"><name pos:start="51:55" pos:end="51:57">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:33">(<expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:10">ts</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:27">raw_packet_size</name></name> <operator pos:start="53:29" pos:end="53:30">&lt;=</operator> <literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:6">ts</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:14">stream</name></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:18">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:6">ts</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:18">auto_guess</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="193:5"><if pos:start="63:5" pos:end="101:5">if <condition pos:start="63:8" pos:end="63:41">(<expr pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">iformat</name></name> <operator pos:start="63:20" pos:end="63:21">==</operator> <operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:40">ff_mpegts_demuxer</name></expr>)</condition> <block pos:start="63:43" pos:end="101:5">{<block_content pos:start="71:9" pos:end="99:42">

        <comment type="block" pos:start="65:9" pos:end="65:26">/* normal demux */</comment>



        <comment type="block" pos:start="69:9" pos:end="69:56">/* first do a scaning to get all the services */</comment>

        <if_stmt pos:start="71:9" pos:end="73:74"><if pos:start="71:9" pos:end="73:74">if <condition pos:start="71:12" pos:end="71:45">(<expr pos:start="71:13" pos:end="71:44"><call pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:21">avio_seek</name><argument_list pos:start="71:22" pos:end="71:40">(<argument pos:start="71:23" pos:end="71:24"><expr pos:start="71:23" pos:end="71:24"><name pos:start="71:23" pos:end="71:24">pb</name></expr></argument>, <argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">pos</name></expr></argument>, <argument pos:start="71:32" pos:end="71:39"><expr pos:start="71:32" pos:end="71:39"><name pos:start="71:32" pos:end="71:39">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="71:42" pos:end="71:42">&lt;</operator> <literal type="number" pos:start="71:44" pos:end="71:44">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:74"><block_content pos:start="73:13" pos:end="73:74">

            <expr_stmt pos:start="73:13" pos:end="73:74"><expr pos:start="73:13" pos:end="73:73"><call pos:start="73:13" pos:end="73:73"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:73">(<argument pos:start="73:20" pos:end="73:20"><expr pos:start="73:20" pos:end="73:20"><name pos:start="73:20" pos:end="73:20">s</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:72"><expr pos:start="73:37" pos:end="73:72"><literal type="string" pos:start="73:37" pos:end="73:72">"Unable to seek back to the start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:63"><expr pos:start="77:9" pos:end="77:62"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:34">mpegts_open_section_filter</name><argument_list pos:start="77:35" pos:end="77:62">(<argument pos:start="77:36" pos:end="77:37"><expr pos:start="77:36" pos:end="77:37"><name pos:start="77:36" pos:end="77:37">ts</name></expr></argument>, <argument pos:start="77:40" pos:end="77:46"><expr pos:start="77:40" pos:end="77:46"><name pos:start="77:40" pos:end="77:46">SDT_PID</name></expr></argument>, <argument pos:start="77:49" pos:end="77:54"><expr pos:start="77:49" pos:end="77:54"><name pos:start="77:49" pos:end="77:54">sdt_cb</name></expr></argument>, <argument pos:start="77:57" pos:end="77:58"><expr pos:start="77:57" pos:end="77:58"><name pos:start="77:57" pos:end="77:58">ts</name></expr></argument>, <argument pos:start="77:61" pos:end="77:61"><expr pos:start="77:61" pos:end="77:61"><literal type="number" pos:start="77:61" pos:end="77:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:63"><expr pos:start="81:9" pos:end="81:62"><call pos:start="81:9" pos:end="81:62"><name pos:start="81:9" pos:end="81:34">mpegts_open_section_filter</name><argument_list pos:start="81:35" pos:end="81:62">(<argument pos:start="81:36" pos:end="81:37"><expr pos:start="81:36" pos:end="81:37"><name pos:start="81:36" pos:end="81:37">ts</name></expr></argument>, <argument pos:start="81:40" pos:end="81:46"><expr pos:start="81:40" pos:end="81:46"><name pos:start="81:40" pos:end="81:46">PAT_PID</name></expr></argument>, <argument pos:start="81:49" pos:end="81:54"><expr pos:start="81:49" pos:end="81:54"><name pos:start="81:49" pos:end="81:54">pat_cb</name></expr></argument>, <argument pos:start="81:57" pos:end="81:58"><expr pos:start="81:57" pos:end="81:58"><name pos:start="81:57" pos:end="81:58">ts</name></expr></argument>, <argument pos:start="81:61" pos:end="81:61"><expr pos:start="81:61" pos:end="81:61"><literal type="number" pos:start="81:61" pos:end="81:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:63"><expr pos:start="85:9" pos:end="85:62"><call pos:start="85:9" pos:end="85:62"><name pos:start="85:9" pos:end="85:22">handle_packets</name><argument_list pos:start="85:23" pos:end="85:62">(<argument pos:start="85:24" pos:end="85:25"><expr pos:start="85:24" pos:end="85:25"><name pos:start="85:24" pos:end="85:25">ts</name></expr></argument>, <argument pos:start="85:28" pos:end="85:61"><expr pos:start="85:28" pos:end="85:61"><name pos:start="85:28" pos:end="85:39"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:39">probesize</name></name> <operator pos:start="85:41" pos:end="85:41">/</operator> <name pos:start="85:43" pos:end="85:61"><name pos:start="85:43" pos:end="85:44">ts</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:61">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="87:9" pos:end="87:58">/* if could not find service, enable auto_guess */</comment>



        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:10">ts</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:22">auto_guess</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <literal type="number" pos:start="91:26" pos:end="91:26">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><call pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:15">av_dlog</name><argument_list pos:start="95:16" pos:end="95:44">(<argument pos:start="95:17" pos:end="95:26"><expr pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:18">ts</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:26">stream</name></name></expr></argument>, <argument pos:start="95:29" pos:end="95:43"><expr pos:start="95:29" pos:end="95:43"><literal type="string" pos:start="95:29" pos:end="95:43">"tuning done\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:42"><expr pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:20">ctx_flags</name></name> <operator pos:start="99:22" pos:end="99:23">|=</operator> <name pos:start="99:25" pos:end="99:41">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="193:5">else <block pos:start="101:12" pos:end="193:5">{<block_content pos:start="103:9" pos:end="191:74">

        <decl_stmt pos:start="103:9" pos:end="103:21"><decl pos:start="103:9" pos:end="103:20"><type pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:16">AVStream</name> <modifier pos:start="103:18" pos:end="103:18">*</modifier></type><name pos:start="103:19" pos:end="103:20">st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:58"><decl pos:start="105:9" pos:end="105:19"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:19">pcr_pid</name></decl>, <decl pos:start="105:22" pos:end="105:24"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:22" pos:end="105:24">pid</name></decl>, <decl pos:start="105:27" pos:end="105:36"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:27" pos:end="105:36">nb_packets</name></decl>, <decl pos:start="105:39" pos:end="105:45"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:39" pos:end="105:45">nb_pcrs</name></decl>, <decl pos:start="105:48" pos:end="105:50"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:48" pos:end="105:50">ret</name></decl>, <decl pos:start="105:53" pos:end="105:57"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:53" pos:end="105:57">pcr_l</name></decl>;</decl_stmt>

        <decl_stmt pos:start="107:9" pos:end="107:31"><decl pos:start="107:9" pos:end="107:23"><type pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:15">int64_t</name></type> <name pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:20">pcrs</name><index pos:start="107:21" pos:end="107:23">[<expr pos:start="107:22" pos:end="107:22"><literal type="number" pos:start="107:22" pos:end="107:22">2</literal></expr>]</index></name></decl>, <decl pos:start="107:26" pos:end="107:30"><type ref="prev" pos:start="107:9" pos:end="107:15"/><name pos:start="107:26" pos:end="107:30">pcr_h</name></decl>;</decl_stmt>

        <decl_stmt pos:start="109:9" pos:end="109:28"><decl pos:start="109:9" pos:end="109:27"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:24">packet_count</name><index pos:start="109:25" pos:end="109:27">[<expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="111:9" pos:end="111:39"><decl pos:start="111:9" pos:end="111:38"><type pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:15">uint8_t</name></type> <name pos:start="111:17" pos:end="111:38"><name pos:start="111:17" pos:end="111:22">packet</name><index pos:start="111:23" pos:end="111:38">[<expr pos:start="111:24" pos:end="111:37"><name pos:start="111:24" pos:end="111:37">TS_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:31">/* only read packets */</comment>



        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:10">st</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <call pos:start="119:14" pos:end="119:32"><name pos:start="119:14" pos:end="119:26">av_new_stream</name><argument_list pos:start="119:27" pos:end="119:32">(<argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">s</name></expr></argument>, <argument pos:start="119:31" pos:end="119:31"><expr pos:start="119:31" pos:end="119:31"><literal type="number" pos:start="119:31" pos:end="119:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:22"><if pos:start="121:9" pos:end="123:22">if <condition pos:start="121:12" pos:end="121:16">(<expr pos:start="121:13" pos:end="121:15"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:15">st</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:22"><block_content pos:start="123:13" pos:end="123:22">

            <goto pos:start="123:13" pos:end="123:22">goto <name pos:start="123:18" pos:end="123:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:45"><expr pos:start="125:9" pos:end="125:44"><call pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:23">av_set_pts_info</name><argument_list pos:start="125:24" pos:end="125:44">(<argument pos:start="125:25" pos:end="125:26"><expr pos:start="125:25" pos:end="125:26"><name pos:start="125:25" pos:end="125:26">st</name></expr></argument>, <argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><literal type="number" pos:start="125:29" pos:end="125:30">60</literal></expr></argument>, <argument pos:start="125:33" pos:end="125:33"><expr pos:start="125:33" pos:end="125:33"><literal type="number" pos:start="125:33" pos:end="125:33">1</literal></expr></argument>, <argument pos:start="125:36" pos:end="125:43"><expr pos:start="125:36" pos:end="125:43"><literal type="number" pos:start="125:36" pos:end="125:43">27000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:50"><expr pos:start="127:9" pos:end="127:49"><name pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:10">st</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:17">codec</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:29">codec_type</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:49">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:47"><expr pos:start="129:9" pos:end="129:46"><name pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:10">st</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:27">codec_id</name></name> <operator pos:start="129:29" pos:end="129:29">=</operator> <name pos:start="129:31" pos:end="129:46">CODEC_ID_MPEG2TS</name></expr>;</expr_stmt>



        <comment type="block" pos:start="133:9" pos:end="133:71">/* we iterate until we find two PCRs to estimate the bitrate */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:21"><expr pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:15">pcr_pid</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <operator pos:start="135:19" pos:end="135:19">-</operator><literal type="number" pos:start="135:20" pos:end="135:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:20"><expr pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:15">nb_pcrs</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:23"><expr pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:18">nb_packets</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <literal type="number" pos:start="139:22" pos:end="139:22">0</literal></expr>;</expr_stmt>

        <for pos:start="141:9" pos:end="171:9">for<control pos:start="141:12" pos:end="141:15">(<init pos:start="141:13" pos:end="141:13">;</init><condition pos:start="141:14" pos:end="141:14">;</condition><incr/>)</control> <block pos:start="141:17" pos:end="171:9">{<block_content pos:start="143:13" pos:end="169:25">

            <expr_stmt pos:start="143:13" pos:end="143:62"><expr pos:start="143:13" pos:end="143:61"><name pos:start="143:13" pos:end="143:15">ret</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:61"><name pos:start="143:19" pos:end="143:29">read_packet</name><argument_list pos:start="143:30" pos:end="143:61">(<argument pos:start="143:31" pos:end="143:31"><expr pos:start="143:31" pos:end="143:31"><name pos:start="143:31" pos:end="143:31">s</name></expr></argument>, <argument pos:start="143:34" pos:end="143:39"><expr pos:start="143:34" pos:end="143:39"><name pos:start="143:34" pos:end="143:39">packet</name></expr></argument>, <argument pos:start="143:42" pos:end="143:60"><expr pos:start="143:42" pos:end="143:60"><name pos:start="143:42" pos:end="143:60"><name pos:start="143:42" pos:end="143:43">ts</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:60">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="147:26"><if pos:start="145:13" pos:end="147:26">if <condition pos:start="145:16" pos:end="145:24">(<expr pos:start="145:17" pos:end="145:23"><name pos:start="145:17" pos:end="145:19">ret</name> <operator pos:start="145:21" pos:end="145:21">&lt;</operator> <literal type="number" pos:start="145:23" pos:end="145:23">0</literal></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:26"><block_content pos:start="147:17" pos:end="147:26">

                <return pos:start="147:17" pos:end="147:26">return <expr pos:start="147:24" pos:end="147:25"><operator pos:start="147:24" pos:end="147:24">-</operator><literal type="number" pos:start="147:25" pos:end="147:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:47"><expr pos:start="149:13" pos:end="149:46"><name pos:start="149:13" pos:end="149:15">pid</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="149:37"><name pos:start="149:19" pos:end="149:25">AV_RB16</name><argument_list pos:start="149:26" pos:end="149:37">(<argument pos:start="149:27" pos:end="149:36"><expr pos:start="149:27" pos:end="149:36"><name pos:start="149:27" pos:end="149:32">packet</name> <operator pos:start="149:34" pos:end="149:34">+</operator> <literal type="number" pos:start="149:36" pos:end="149:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="149:39" pos:end="149:39">&amp;</operator> <literal type="number" pos:start="149:41" pos:end="149:46">0x1fff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="167:13"><if pos:start="151:13" pos:end="167:13">if <condition pos:start="151:16" pos:end="153:55">(<expr pos:start="151:17" pos:end="153:54"><operator pos:start="151:17" pos:end="151:17">(</operator><name pos:start="151:18" pos:end="151:24">pcr_pid</name> <operator pos:start="151:26" pos:end="151:27">==</operator> <operator pos:start="151:29" pos:end="151:29">-</operator><literal type="number" pos:start="151:30" pos:end="151:30">1</literal> <operator pos:start="151:32" pos:end="151:33">||</operator> <name pos:start="151:35" pos:end="151:41">pcr_pid</name> <operator pos:start="151:43" pos:end="151:44">==</operator> <name pos:start="151:46" pos:end="151:48">pid</name><operator pos:start="151:49" pos:end="151:49">)</operator> <operator pos:start="151:51" pos:end="151:52">&amp;&amp;</operator>

                <call pos:start="153:17" pos:end="153:49"><name pos:start="153:17" pos:end="153:25">parse_pcr</name><argument_list pos:start="153:26" pos:end="153:49">(<argument pos:start="153:27" pos:end="153:32"><expr pos:start="153:27" pos:end="153:32"><operator pos:start="153:27" pos:end="153:27">&amp;</operator><name pos:start="153:28" pos:end="153:32">pcr_h</name></expr></argument>, <argument pos:start="153:35" pos:end="153:40"><expr pos:start="153:35" pos:end="153:40"><operator pos:start="153:35" pos:end="153:35">&amp;</operator><name pos:start="153:36" pos:end="153:40">pcr_l</name></expr></argument>, <argument pos:start="153:43" pos:end="153:48"><expr pos:start="153:43" pos:end="153:48"><name pos:start="153:43" pos:end="153:48">packet</name></expr></argument>)</argument_list></call> <operator pos:start="153:51" pos:end="153:52">==</operator> <literal type="number" pos:start="153:54" pos:end="153:54">0</literal></expr>)</condition> <block pos:start="153:57" pos:end="167:13">{<block_content pos:start="155:17" pos:end="165:26">

                <expr_stmt pos:start="155:17" pos:end="155:30"><expr pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:23">pcr_pid</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:29">pid</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:51"><expr pos:start="157:17" pos:end="157:50"><name pos:start="157:17" pos:end="157:37"><name pos:start="157:17" pos:end="157:28">packet_count</name><index pos:start="157:29" pos:end="157:37">[<expr pos:start="157:30" pos:end="157:36"><name pos:start="157:30" pos:end="157:36">nb_pcrs</name></expr>]</index></name> <operator pos:start="157:39" pos:end="157:39">=</operator> <name pos:start="157:41" pos:end="157:50">nb_packets</name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:52"><expr pos:start="159:17" pos:end="159:51"><name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:20">pcrs</name><index pos:start="159:21" pos:end="159:29">[<expr pos:start="159:22" pos:end="159:28"><name pos:start="159:22" pos:end="159:28">nb_pcrs</name></expr>]</index></name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:37">pcr_h</name> <operator pos:start="159:39" pos:end="159:39">*</operator> <literal type="number" pos:start="159:41" pos:end="159:45">300</literal> <operator pos:start="159:45" pos:end="159:45">+</operator> <name pos:start="159:47" pos:end="159:51">pcr_l</name></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:26"><expr pos:start="161:17" pos:end="161:25"><name pos:start="161:17" pos:end="161:23">nb_pcrs</name><operator pos:start="161:24" pos:end="161:25">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="163:17" pos:end="165:26"><if pos:start="163:17" pos:end="165:26">if <condition pos:start="163:20" pos:end="163:33">(<expr pos:start="163:21" pos:end="163:32"><name pos:start="163:21" pos:end="163:27">nb_pcrs</name> <operator pos:start="163:29" pos:end="163:30">&gt;=</operator> <literal type="number" pos:start="163:32" pos:end="163:32">2</literal></expr>)</condition><block type="pseudo" pos:start="165:21" pos:end="165:26"><block_content pos:start="165:21" pos:end="165:26">

                    <break pos:start="165:21" pos:end="165:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:25"><expr pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:22">nb_packets</name><operator pos:start="169:23" pos:end="169:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="175:9" pos:end="175:60">/* NOTE1: the bitrate is computed without the FEC */</comment>

        <comment type="block" pos:start="177:9" pos:end="177:70">/* NOTE2: it is only the bitrate of the start of the stream */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:81"><expr pos:start="179:9" pos:end="179:80"><name pos:start="179:9" pos:end="179:20"><name pos:start="179:9" pos:end="179:10">ts</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:20">pcr_incr</name></name> <operator pos:start="179:22" pos:end="179:22">=</operator> <operator pos:start="179:24" pos:end="179:24">(</operator><name pos:start="179:25" pos:end="179:31"><name pos:start="179:25" pos:end="179:28">pcrs</name><index pos:start="179:29" pos:end="179:31">[<expr pos:start="179:30" pos:end="179:30"><literal type="number" pos:start="179:30" pos:end="179:30">1</literal></expr>]</index></name> <operator pos:start="179:33" pos:end="179:33">-</operator> <name pos:start="179:35" pos:end="179:41"><name pos:start="179:35" pos:end="179:38">pcrs</name><index pos:start="179:39" pos:end="179:41">[<expr pos:start="179:40" pos:end="179:40"><literal type="number" pos:start="179:40" pos:end="179:40">0</literal></expr>]</index></name><operator pos:start="179:42" pos:end="179:42">)</operator> <operator pos:start="179:44" pos:end="179:44">/</operator> <operator pos:start="179:46" pos:end="179:46">(</operator><name pos:start="179:47" pos:end="179:61"><name pos:start="179:47" pos:end="179:58">packet_count</name><index pos:start="179:59" pos:end="179:61">[<expr pos:start="179:60" pos:end="179:60"><literal type="number" pos:start="179:60" pos:end="179:60">1</literal></expr>]</index></name> <operator pos:start="179:63" pos:end="179:63">-</operator> <name pos:start="179:65" pos:end="179:79"><name pos:start="179:65" pos:end="179:76">packet_count</name><index pos:start="179:77" pos:end="179:79">[<expr pos:start="179:78" pos:end="179:78"><literal type="number" pos:start="179:78" pos:end="179:78">0</literal></expr>]</index></name><operator pos:start="179:80" pos:end="179:80">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:63"><expr pos:start="181:9" pos:end="181:62"><name pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:10">ts</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:19">cur_pcr</name></name> <operator pos:start="181:21" pos:end="181:21">=</operator> <name pos:start="181:23" pos:end="181:29"><name pos:start="181:23" pos:end="181:26">pcrs</name><index pos:start="181:27" pos:end="181:29">[<expr pos:start="181:28" pos:end="181:28"><literal type="number" pos:start="181:28" pos:end="181:28">0</literal></expr>]</index></name> <operator pos:start="181:31" pos:end="181:31">-</operator> <name pos:start="181:33" pos:end="181:44"><name pos:start="181:33" pos:end="181:34">ts</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:44">pcr_incr</name></name> <operator pos:start="181:46" pos:end="181:46">*</operator> <name pos:start="181:48" pos:end="181:62"><name pos:start="181:48" pos:end="181:59">packet_count</name><index pos:start="181:60" pos:end="181:62">[<expr pos:start="181:61" pos:end="181:61"><literal type="number" pos:start="181:61" pos:end="181:61">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:65"><expr pos:start="183:9" pos:end="183:64"><name pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:19">bit_rate</name></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <operator pos:start="183:23" pos:end="183:23">(</operator><name pos:start="183:24" pos:end="183:37">TS_PACKET_SIZE</name> <operator pos:start="183:39" pos:end="183:39">*</operator> <literal type="number" pos:start="183:41" pos:end="183:41">8</literal><operator pos:start="183:42" pos:end="183:42">)</operator> <operator pos:start="183:44" pos:end="183:44">*</operator> <literal type="number" pos:start="183:46" pos:end="183:49">27e6</literal> <operator pos:start="183:51" pos:end="183:51">/</operator> <name pos:start="183:53" pos:end="183:64"><name pos:start="183:53" pos:end="183:54">ts</name><operator pos:start="183:55" pos:end="183:56">-&gt;</operator><name pos:start="183:57" pos:end="183:64">pcr_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:42"><expr pos:start="185:9" pos:end="185:41"><name pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:10">st</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:17">codec</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:27">bit_rate</name></name> <operator pos:start="185:29" pos:end="185:29">=</operator> <name pos:start="185:31" pos:end="185:41"><name pos:start="185:31" pos:end="185:31">s</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:41">bit_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:37"><expr pos:start="187:9" pos:end="187:36"><name pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:10">st</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:22">start_time</name></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <name pos:start="187:26" pos:end="187:36"><name pos:start="187:26" pos:end="187:27">ts</name><operator pos:start="187:28" pos:end="187:29">-&gt;</operator><name pos:start="187:30" pos:end="187:36">cur_pcr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="191:74"><expr pos:start="189:9" pos:end="191:73"><call pos:start="189:9" pos:end="191:73"><name pos:start="189:9" pos:end="189:15">av_dlog</name><argument_list pos:start="189:16" pos:end="191:73">(<argument pos:start="189:17" pos:end="189:26"><expr pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:18">ts</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:26">stream</name></name></expr></argument>, <argument pos:start="189:29" pos:end="189:61"><expr pos:start="189:29" pos:end="189:61"><literal type="string" pos:start="189:29" pos:end="189:61">"start=%0.3f pcr=%0.3f incr=%d\n"</literal></expr></argument>,

                <argument pos:start="191:17" pos:end="191:42"><expr pos:start="191:17" pos:end="191:42"><name pos:start="191:17" pos:end="191:30"><name pos:start="191:17" pos:end="191:18">st</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:30">start_time</name></name> <operator pos:start="191:32" pos:end="191:32">/</operator> <literal type="number" pos:start="191:34" pos:end="191:42">1000000.0</literal></expr></argument>, <argument pos:start="191:45" pos:end="191:58"><expr pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:51"><name pos:start="191:45" pos:end="191:48">pcrs</name><index pos:start="191:49" pos:end="191:51">[<expr pos:start="191:50" pos:end="191:50"><literal type="number" pos:start="191:50" pos:end="191:50">0</literal></expr>]</index></name> <operator pos:start="191:53" pos:end="191:53">/</operator> <literal type="number" pos:start="191:55" pos:end="191:58">27e6</literal></expr></argument>, <argument pos:start="191:61" pos:end="191:72"><expr pos:start="191:61" pos:end="191:72"><name pos:start="191:61" pos:end="191:72"><name pos:start="191:61" pos:end="191:62">ts</name><operator pos:start="191:63" pos:end="191:64">-&gt;</operator><name pos:start="191:65" pos:end="191:72">pcr_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:33"><expr pos:start="197:5" pos:end="197:32"><call pos:start="197:5" pos:end="197:32"><name pos:start="197:5" pos:end="197:13">avio_seek</name><argument_list pos:start="197:14" pos:end="197:32">(<argument pos:start="197:15" pos:end="197:16"><expr pos:start="197:15" pos:end="197:16"><name pos:start="197:15" pos:end="197:16">pb</name></expr></argument>, <argument pos:start="197:19" pos:end="197:21"><expr pos:start="197:19" pos:end="197:21"><name pos:start="197:19" pos:end="197:21">pos</name></expr></argument>, <argument pos:start="197:24" pos:end="197:31"><expr pos:start="197:24" pos:end="197:31"><name pos:start="197:24" pos:end="197:31">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</return>

 <label pos:start="201:2" pos:end="201:6"><name pos:start="201:2" pos:end="201:5">fail</name>:</label>

    <return pos:start="203:5" pos:end="203:14">return <expr pos:start="203:12" pos:end="203:13"><operator pos:start="203:12" pos:end="203:12">-</operator><literal type="number" pos:start="203:13" pos:end="203:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
