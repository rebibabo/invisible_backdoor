<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13305.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ff_id3v2_parse</name><parameter_list pos:start="1:27" pos:end="1:87">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">len</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name></type> <name pos:start="1:65" pos:end="1:71">version</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:80">uint8_t</name></type> <name pos:start="1:82" pos:end="1:86">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:11">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">isv34</name></decl>, <decl pos:start="5:16" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:19">tlen</name></decl>, <decl pos:start="5:22" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:27">unsync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:15"><name pos:start="7:10" pos:end="7:12">tag</name><index pos:start="7:13" pos:end="7:15">[<expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">next</name></decl>, <decl pos:start="9:19" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:19" pos:end="9:21">end</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><call pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:33">avio_tell</name><argument_list pos:start="9:34" pos:end="9:40">(<argument pos:start="9:35" pos:end="9:39"><expr pos:start="9:35" pos:end="9:39"><name pos:start="9:35" pos:end="9:39"><name pos:start="9:35" pos:end="9:35">s</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:42" pos:end="9:42">+</operator> <name pos:start="9:44" pos:end="9:46">len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">taghdrlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">reason</name> <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">AVIOContext</name></type> <name pos:start="15:17" pos:end="15:18">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:25">buffer</name> <init pos:start="17:27" pos:end="17:32">= <expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">buffer_size</name> <init pos:start="19:21" pos:end="19:23">= <expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="23:5" pos:end="61:5">switch <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19">version</name></expr>)</condition> <block pos:start="23:22" pos:end="61:5">{<block_content pos:start="25:5" pos:end="59:19">

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">2</literal></expr>:</case>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:25">(<expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:17">flags</name> <operator pos:start="27:19" pos:end="27:19">&amp;</operator> <literal type="number" pos:start="27:21" pos:end="27:24">0x40</literal></expr>)</condition> <block pos:start="27:27" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:23">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:18">reason</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="string" pos:start="29:22" pos:end="29:34">"compression"</literal></expr>;</expr_stmt>

            <goto pos:start="31:13" pos:end="31:23">goto <name pos:start="31:18" pos:end="31:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:13">isv34</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:17">taghdrlen</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">6</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">3</literal></expr>:</case>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">4</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:18"><expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:13">isv34</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:17">taghdrlen</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <literal type="number" pos:start="49:21" pos:end="49:22">10</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>



    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:14">reason</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="string" pos:start="57:18" pos:end="57:26">"version"</literal></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:19">goto <name pos:start="59:14" pos:end="59:18">error</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="65:5" pos:end="65:26"><expr pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:10">unsync</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <name pos:start="65:14" pos:end="65:18">flags</name> <operator pos:start="65:20" pos:end="65:20">&amp;</operator> <literal type="number" pos:start="65:22" pos:end="65:25">0x80</literal></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="71:45"><if pos:start="69:5" pos:end="71:45">if <condition pos:start="69:8" pos:end="69:30">(<expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:13">isv34</name> <operator pos:start="69:15" pos:end="69:16">&amp;&amp;</operator> <name pos:start="69:18" pos:end="69:22">flags</name> <operator pos:start="69:24" pos:end="69:24">&amp;</operator> <literal type="number" pos:start="69:26" pos:end="69:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:45"><block_content pos:start="71:9" pos:end="71:45"> <comment type="block" pos:start="69:32" pos:end="69:79">/* Extended header present, just skip over it */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:17">avio_skip</name><argument_list pos:start="71:18" pos:end="71:44">(<argument pos:start="71:19" pos:end="71:23"><expr pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:23">pb</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:43"><expr pos:start="71:26" pos:end="71:43"><call pos:start="71:26" pos:end="71:43"><name pos:start="71:26" pos:end="71:33">get_size</name><argument_list pos:start="71:34" pos:end="71:43">(<argument pos:start="71:35" pos:end="71:39"><expr pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:35">s</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:39">pb</name></name></expr></argument>, <argument pos:start="71:42" pos:end="71:42"><expr pos:start="71:42" pos:end="71:42"><literal type="number" pos:start="71:42" pos:end="71:42">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="75:5" pos:end="191:5">while <condition pos:start="75:11" pos:end="75:28">(<expr pos:start="75:12" pos:end="75:27"><name pos:start="75:12" pos:end="75:14">len</name> <operator pos:start="75:16" pos:end="75:17">&gt;=</operator> <name pos:start="75:19" pos:end="75:27">taghdrlen</name></expr>)</condition> <block pos:start="75:30" pos:end="191:5">{<block_content pos:start="77:9" pos:end="189:41">

        <decl_stmt pos:start="77:9" pos:end="77:28"><decl pos:start="77:9" pos:end="77:27"><type pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:16">unsigned</name> <name pos:start="77:18" pos:end="77:20">int</name></type> <name pos:start="77:22" pos:end="77:27">tflags</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:24"><decl pos:start="79:9" pos:end="79:23"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:19">tunsync</name> <init pos:start="79:21" pos:end="79:23">= <expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="83:9" pos:end="109:9"><if pos:start="83:9" pos:end="101:9">if <condition pos:start="83:12" pos:end="83:18">(<expr pos:start="83:13" pos:end="83:17"><name pos:start="83:13" pos:end="83:17">isv34</name></expr>)</condition> <block pos:start="83:20" pos:end="101:9">{<block_content pos:start="85:13" pos:end="99:50">

            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><call pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:21">avio_read</name><argument_list pos:start="85:22" pos:end="85:36">(<argument pos:start="85:23" pos:end="85:27"><expr pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:23">s</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:27">pb</name></name></expr></argument>, <argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">tag</name></expr></argument>, <argument pos:start="85:35" pos:end="85:35"><expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:23"><expr pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:15">tag</name><index pos:start="87:16" pos:end="87:18">[<expr pos:start="87:17" pos:end="87:17"><literal type="number" pos:start="87:17" pos:end="87:17">4</literal></expr>]</index></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="95:42"><if pos:start="89:13" pos:end="93:13">if<condition pos:start="89:15" pos:end="89:26">(<expr pos:start="89:16" pos:end="89:25"><name pos:start="89:16" pos:end="89:22">version</name><operator pos:start="89:23" pos:end="89:24">==</operator><literal type="number" pos:start="89:25" pos:end="89:25">3</literal></expr>)</condition><block pos:start="89:27" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:40">

                <expr_stmt pos:start="91:17" pos:end="91:40"><expr pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:20">tlen</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:39"><name pos:start="91:24" pos:end="91:32">avio_rb32</name><argument_list pos:start="91:33" pos:end="91:39">(<argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:34">s</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="93:14" pos:end="95:42">else<block type="pseudo" pos:start="95:17" pos:end="95:42"><block_content pos:start="95:17" pos:end="95:42">

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:20">tlen</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <call pos:start="95:24" pos:end="95:41"><name pos:start="95:24" pos:end="95:31">get_size</name><argument_list pos:start="95:32" pos:end="95:41">(<argument pos:start="95:33" pos:end="95:37"><expr pos:start="95:33" pos:end="95:37"><name pos:start="95:33" pos:end="95:37"><name pos:start="95:33" pos:end="95:33">s</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:37">pb</name></name></expr></argument>, <argument pos:start="95:40" pos:end="95:40"><expr pos:start="95:40" pos:end="95:40"><literal type="number" pos:start="95:40" pos:end="95:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:38"><expr pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:18">tflags</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <call pos:start="97:22" pos:end="97:37"><name pos:start="97:22" pos:end="97:30">avio_rb16</name><argument_list pos:start="97:31" pos:end="97:37">(<argument pos:start="97:32" pos:end="97:36"><expr pos:start="97:32" pos:end="97:36"><name pos:start="97:32" pos:end="97:36"><name pos:start="97:32" pos:end="97:32">s</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:50"><expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:19">tunsync</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:28">tflags</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <name pos:start="99:32" pos:end="99:49">ID3v2_FLAG_UNSYNCH</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="109:9">else <block pos:start="101:16" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:36">

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><call pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:21">avio_read</name><argument_list pos:start="103:22" pos:end="103:36">(<argument pos:start="103:23" pos:end="103:27"><expr pos:start="103:23" pos:end="103:27"><name pos:start="103:23" pos:end="103:27"><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:27">pb</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><name pos:start="103:30" pos:end="103:32">tag</name></expr></argument>, <argument pos:start="103:35" pos:end="103:35"><expr pos:start="103:35" pos:end="103:35"><literal type="number" pos:start="103:35" pos:end="103:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:15">tag</name><index pos:start="105:16" pos:end="105:18">[<expr pos:start="105:17" pos:end="105:17"><literal type="number" pos:start="105:17" pos:end="105:17">3</literal></expr>]</index></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:36"><expr pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:16">tlen</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <call pos:start="107:20" pos:end="107:35"><name pos:start="107:20" pos:end="107:28">avio_rb24</name><argument_list pos:start="107:29" pos:end="107:35">(<argument pos:start="107:30" pos:end="107:34"><expr pos:start="107:30" pos:end="107:34"><name pos:start="107:30" pos:end="107:34"><name pos:start="107:30" pos:end="107:30">s</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:11">len</name> <operator pos:start="111:13" pos:end="111:14">-=</operator> <name pos:start="111:16" pos:end="111:24">taghdrlen</name> <operator pos:start="111:26" pos:end="111:26">+</operator> <name pos:start="111:28" pos:end="111:31">tlen</name></expr>;</expr_stmt>



        <if_stmt pos:start="115:9" pos:end="117:18"><if pos:start="115:9" pos:end="117:18">if <condition pos:start="115:12" pos:end="115:20">(<expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">len</name> <operator pos:start="115:17" pos:end="115:17">&lt;</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:18"><block_content pos:start="117:13" pos:end="117:18">

            <break pos:start="117:13" pos:end="117:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:12">next</name> <operator pos:start="121:14" pos:end="121:14">=</operator> <call pos:start="121:16" pos:end="121:31"><name pos:start="121:16" pos:end="121:24">avio_tell</name><argument_list pos:start="121:25" pos:end="121:31">(<argument pos:start="121:26" pos:end="121:30"><expr pos:start="121:26" pos:end="121:30"><name pos:start="121:26" pos:end="121:30"><name pos:start="121:26" pos:end="121:26">s</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="121:33" pos:end="121:33">+</operator> <name pos:start="121:35" pos:end="121:38">tlen</name></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:40">(<expr pos:start="125:13" pos:end="125:39"><name pos:start="125:13" pos:end="125:18">tflags</name> <operator pos:start="125:20" pos:end="125:20">&amp;</operator> <name pos:start="125:22" pos:end="125:39">ID3v2_FLAG_DATALEN</name></expr>)</condition> <block pos:start="125:42" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:22">

            <expr_stmt pos:start="127:13" pos:end="127:29"><expr pos:start="127:13" pos:end="127:28"><call pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:21">avio_rb32</name><argument_list pos:start="127:22" pos:end="127:28">(<argument pos:start="127:23" pos:end="127:27"><expr pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:22"><expr pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:16">tlen</name> <operator pos:start="129:18" pos:end="129:19">-=</operator> <literal type="number" pos:start="129:21" pos:end="129:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="135:9" pos:end="185:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:70">(<expr pos:start="135:13" pos:end="135:69"><name pos:start="135:13" pos:end="135:18">tflags</name> <operator pos:start="135:20" pos:end="135:20">&amp;</operator> <operator pos:start="135:22" pos:end="135:22">(</operator><name pos:start="135:23" pos:end="135:43">ID3v2_FLAG_ENCRYPTION</name> <operator pos:start="135:45" pos:end="135:45">|</operator> <name pos:start="135:47" pos:end="135:68">ID3v2_FLAG_COMPRESSION</name><operator pos:start="135:69" pos:end="135:69">)</operator></expr>)</condition> <block pos:start="135:72" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:35">

            <expr_stmt pos:start="137:13" pos:end="137:94"><expr pos:start="137:13" pos:end="137:93"><call pos:start="137:13" pos:end="137:93"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="137:93">(<argument pos:start="137:20" pos:end="137:20"><expr pos:start="137:20" pos:end="137:20"><name pos:start="137:20" pos:end="137:20">s</name></expr></argument>, <argument pos:start="137:23" pos:end="137:36"><expr pos:start="137:23" pos:end="137:36"><name pos:start="137:23" pos:end="137:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="137:39" pos:end="137:87"><expr pos:start="137:39" pos:end="137:87"><literal type="string" pos:start="137:39" pos:end="137:87">"Skipping encrypted/compressed ID3v2 frame %s.\n"</literal></expr></argument>, <argument pos:start="137:90" pos:end="137:92"><expr pos:start="137:90" pos:end="137:92"><name pos:start="137:90" pos:end="137:92">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><call pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:21">avio_skip</name><argument_list pos:start="139:22" pos:end="139:34">(<argument pos:start="139:23" pos:end="139:27"><expr pos:start="139:23" pos:end="139:27"><name pos:start="139:23" pos:end="139:27"><name pos:start="139:23" pos:end="139:23">s</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:27">pb</name></name></expr></argument>, <argument pos:start="139:30" pos:end="139:33"><expr pos:start="139:30" pos:end="139:33"><name pos:start="139:30" pos:end="139:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="141:11" pos:end="173:9">else if <condition pos:start="141:19" pos:end="141:33">(<expr pos:start="141:20" pos:end="141:32"><name pos:start="141:20" pos:end="141:25"><name pos:start="141:20" pos:end="141:22">tag</name><index pos:start="141:23" pos:end="141:25">[<expr pos:start="141:24" pos:end="141:24"><literal type="number" pos:start="141:24" pos:end="141:24">0</literal></expr>]</index></name> <operator pos:start="141:27" pos:end="141:28">==</operator> <literal type="char" pos:start="141:30" pos:end="141:32">'T'</literal></expr>)</condition> <block pos:start="141:35" pos:end="173:9">{<block_content pos:start="143:13" pos:end="171:13">

            <if_stmt pos:start="143:13" pos:end="171:13"><if pos:start="143:13" pos:end="167:13">if <condition pos:start="143:16" pos:end="143:34">(<expr pos:start="143:17" pos:end="143:33"><name pos:start="143:17" pos:end="143:22">unsync</name> <operator pos:start="143:24" pos:end="143:25">||</operator> <name pos:start="143:27" pos:end="143:33">tunsync</name></expr>)</condition> <block pos:start="143:36" pos:end="167:13">{<block_content pos:start="145:17" pos:end="165:42">

                <decl_stmt pos:start="145:17" pos:end="145:25"><decl pos:start="145:17" pos:end="145:21"><type pos:start="145:17" pos:end="145:19"><name pos:start="145:17" pos:end="145:19">int</name></type> <name pos:start="145:21" pos:end="145:21">i</name></decl>, <decl pos:start="145:24" pos:end="145:24"><type ref="prev" pos:start="145:17" pos:end="145:19"/><name pos:start="145:24" pos:end="145:24">j</name></decl>;</decl_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:60"><expr pos:start="147:17" pos:end="147:59"><call pos:start="147:17" pos:end="147:59"><name pos:start="147:17" pos:end="147:30">av_fast_malloc</name><argument_list pos:start="147:31" pos:end="147:59">(<argument pos:start="147:32" pos:end="147:38"><expr pos:start="147:32" pos:end="147:38"><operator pos:start="147:32" pos:end="147:32">&amp;</operator><name pos:start="147:33" pos:end="147:38">buffer</name></expr></argument>, <argument pos:start="147:41" pos:end="147:52"><expr pos:start="147:41" pos:end="147:52"><operator pos:start="147:41" pos:end="147:41">&amp;</operator><name pos:start="147:42" pos:end="147:52">buffer_size</name></expr></argument>, <argument pos:start="147:55" pos:end="147:58"><expr pos:start="147:55" pos:end="147:58"><name pos:start="147:55" pos:end="147:58">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="149:17" pos:end="161:17">for <control pos:start="149:21" pos:end="149:54">(<init pos:start="149:22" pos:end="149:34"><expr pos:start="149:22" pos:end="149:26"><name pos:start="149:22" pos:end="149:22">i</name> <operator pos:start="149:24" pos:end="149:24">=</operator> <literal type="number" pos:start="149:26" pos:end="149:26">0</literal></expr><operator pos:start="149:27" pos:end="149:27">,</operator> <expr pos:start="149:29" pos:end="149:33"><name pos:start="149:29" pos:end="149:29">j</name> <operator pos:start="149:31" pos:end="149:31">=</operator> <literal type="number" pos:start="149:33" pos:end="149:33">0</literal></expr>;</init> <condition pos:start="149:36" pos:end="149:44"><expr pos:start="149:36" pos:end="149:43"><name pos:start="149:36" pos:end="149:36">i</name> <operator pos:start="149:38" pos:end="149:38">&lt;</operator> <name pos:start="149:40" pos:end="149:43">tlen</name></expr>;</condition> <incr pos:start="149:46" pos:end="149:53"><expr pos:start="149:46" pos:end="149:48"><name pos:start="149:46" pos:end="149:46">i</name><operator pos:start="149:47" pos:end="149:48">++</operator></expr><operator pos:start="149:49" pos:end="149:49">,</operator> <expr pos:start="149:51" pos:end="149:53"><name pos:start="149:51" pos:end="149:51">j</name><operator pos:start="149:52" pos:end="149:53">++</operator></expr></incr>)</control> <block pos:start="149:56" pos:end="161:17">{<block_content pos:start="151:21" pos:end="159:21">

                    <expr_stmt pos:start="151:21" pos:end="151:47"><expr pos:start="151:21" pos:end="151:46"><name pos:start="151:21" pos:end="151:29"><name pos:start="151:21" pos:end="151:26">buffer</name><index pos:start="151:27" pos:end="151:29">[<expr pos:start="151:28" pos:end="151:28"><name pos:start="151:28" pos:end="151:28">j</name></expr>]</index></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <call pos:start="151:33" pos:end="151:46"><name pos:start="151:33" pos:end="151:39">avio_r8</name><argument_list pos:start="151:40" pos:end="151:46">(<argument pos:start="151:41" pos:end="151:45"><expr pos:start="151:41" pos:end="151:45"><name pos:start="151:41" pos:end="151:45"><name pos:start="151:41" pos:end="151:41">s</name><operator pos:start="151:42" pos:end="151:43">-&gt;</operator><name pos:start="151:44" pos:end="151:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="153:21" pos:end="159:21"><if pos:start="153:21" pos:end="159:21">if <condition pos:start="153:24" pos:end="153:69">(<expr pos:start="153:25" pos:end="153:68"><name pos:start="153:25" pos:end="153:25">j</name> <operator pos:start="153:27" pos:end="153:27">&gt;</operator> <literal type="number" pos:start="153:29" pos:end="153:29">0</literal> <operator pos:start="153:31" pos:end="153:32">&amp;&amp;</operator> <operator pos:start="153:34" pos:end="153:34">!</operator><name pos:start="153:35" pos:end="153:43"><name pos:start="153:35" pos:end="153:40">buffer</name><index pos:start="153:41" pos:end="153:43">[<expr pos:start="153:42" pos:end="153:42"><name pos:start="153:42" pos:end="153:42">j</name></expr>]</index></name> <operator pos:start="153:45" pos:end="153:46">&amp;&amp;</operator> <name pos:start="153:48" pos:end="153:60"><name pos:start="153:48" pos:end="153:53">buffer</name><index pos:start="153:54" pos:end="153:60">[<expr pos:start="153:55" pos:end="153:59"><name pos:start="153:55" pos:end="153:55">j</name> <operator pos:start="153:57" pos:end="153:57">-</operator> <literal type="number" pos:start="153:59" pos:end="153:59">1</literal></expr>]</index></name> <operator pos:start="153:62" pos:end="153:63">==</operator> <literal type="number" pos:start="153:65" pos:end="153:68">0xff</literal></expr>)</condition> <block pos:start="153:71" pos:end="159:21">{<block_content pos:start="157:25" pos:end="157:28">

                        <comment type="block" pos:start="155:25" pos:end="155:58">/* Unsynchronised byte, skip it */</comment>

                        <expr_stmt pos:start="157:25" pos:end="157:28"><expr pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:25">j</name><operator pos:start="157:26" pos:end="157:27">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="163:17" pos:end="163:77"><expr pos:start="163:17" pos:end="163:76"><call pos:start="163:17" pos:end="163:76"><name pos:start="163:17" pos:end="163:33">ffio_init_context</name><argument_list pos:start="163:34" pos:end="163:76">(<argument pos:start="163:35" pos:end="163:37"><expr pos:start="163:35" pos:end="163:37"><operator pos:start="163:35" pos:end="163:35">&amp;</operator><name pos:start="163:36" pos:end="163:37">pb</name></expr></argument>, <argument pos:start="163:40" pos:end="163:45"><expr pos:start="163:40" pos:end="163:45"><name pos:start="163:40" pos:end="163:45">buffer</name></expr></argument>, <argument pos:start="163:48" pos:end="163:48"><expr pos:start="163:48" pos:end="163:48"><name pos:start="163:48" pos:end="163:48">j</name></expr></argument>, <argument pos:start="163:51" pos:end="163:51"><expr pos:start="163:51" pos:end="163:51"><literal type="number" pos:start="163:51" pos:end="163:51">0</literal></expr></argument>, <argument pos:start="163:54" pos:end="163:57"><expr pos:start="163:54" pos:end="163:57"><name pos:start="163:54" pos:end="163:57">NULL</name></expr></argument>, <argument pos:start="163:60" pos:end="163:63"><expr pos:start="163:60" pos:end="163:63"><name pos:start="163:60" pos:end="163:63">NULL</name></expr></argument>, <argument pos:start="163:66" pos:end="163:69"><expr pos:start="163:66" pos:end="163:69"><name pos:start="163:66" pos:end="163:69">NULL</name></expr></argument>, <argument pos:start="163:72" pos:end="163:75"><expr pos:start="163:72" pos:end="163:75"><name pos:start="163:72" pos:end="163:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:42"><expr pos:start="165:17" pos:end="165:41"><call pos:start="165:17" pos:end="165:41"><name pos:start="165:17" pos:end="165:25">read_ttag</name><argument_list pos:start="165:26" pos:end="165:41">(<argument pos:start="165:27" pos:end="165:27"><expr pos:start="165:27" pos:end="165:27"><name pos:start="165:27" pos:end="165:27">s</name></expr></argument>, <argument pos:start="165:30" pos:end="165:32"><expr pos:start="165:30" pos:end="165:32"><operator pos:start="165:30" pos:end="165:30">&amp;</operator><name pos:start="165:31" pos:end="165:32">pb</name></expr></argument>, <argument pos:start="165:35" pos:end="165:35"><expr pos:start="165:35" pos:end="165:35"><name pos:start="165:35" pos:end="165:35">j</name></expr></argument>, <argument pos:start="165:38" pos:end="165:40"><expr pos:start="165:38" pos:end="165:40"><name pos:start="165:38" pos:end="165:40">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="167:15" pos:end="171:13">else <block pos:start="167:20" pos:end="171:13">{<block_content pos:start="169:17" pos:end="169:47">

                <expr_stmt pos:start="169:17" pos:end="169:47"><expr pos:start="169:17" pos:end="169:46"><call pos:start="169:17" pos:end="169:46"><name pos:start="169:17" pos:end="169:25">read_ttag</name><argument_list pos:start="169:26" pos:end="169:46">(<argument pos:start="169:27" pos:end="169:27"><expr pos:start="169:27" pos:end="169:27"><name pos:start="169:27" pos:end="169:27">s</name></expr></argument>, <argument pos:start="169:30" pos:end="169:34"><expr pos:start="169:30" pos:end="169:34"><name pos:start="169:30" pos:end="169:34"><name pos:start="169:30" pos:end="169:30">s</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:34">pb</name></name></expr></argument>, <argument pos:start="169:37" pos:end="169:40"><expr pos:start="169:37" pos:end="169:40"><name pos:start="169:37" pos:end="169:40">tlen</name></expr></argument>, <argument pos:start="169:43" pos:end="169:45"><expr pos:start="169:43" pos:end="169:45"><name pos:start="169:43" pos:end="169:45">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="175:9" pos:end="185:9">else if <condition pos:start="175:17" pos:end="175:25">(<expr pos:start="175:18" pos:end="175:24"><operator pos:start="175:18" pos:end="175:18">!</operator><name pos:start="175:19" pos:end="175:24"><name pos:start="175:19" pos:end="175:21">tag</name><index pos:start="175:22" pos:end="175:24">[<expr pos:start="175:23" pos:end="175:23"><literal type="number" pos:start="175:23" pos:end="175:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="175:27" pos:end="185:9">{<block_content pos:start="177:13" pos:end="183:18">

            <if_stmt pos:start="177:13" pos:end="179:80"><if pos:start="177:13" pos:end="179:80">if <condition pos:start="177:16" pos:end="177:23">(<expr pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:19">tag</name><index pos:start="177:20" pos:end="177:22">[<expr pos:start="177:21" pos:end="177:21"><literal type="number" pos:start="177:21" pos:end="177:21">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:80"><block_content pos:start="179:17" pos:end="179:80">

                <expr_stmt pos:start="179:17" pos:end="179:80"><expr pos:start="179:17" pos:end="179:79"><call pos:start="179:17" pos:end="179:79"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="179:79">(<argument pos:start="179:24" pos:end="179:24"><expr pos:start="179:24" pos:end="179:24"><name pos:start="179:24" pos:end="179:24">s</name></expr></argument>, <argument pos:start="179:27" pos:end="179:40"><expr pos:start="179:27" pos:end="179:40"><name pos:start="179:27" pos:end="179:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="179:43" pos:end="179:78"><expr pos:start="179:43" pos:end="179:78"><literal type="string" pos:start="179:43" pos:end="179:78">"invalid frame id, assuming padding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:35"><expr pos:start="181:13" pos:end="181:34"><call pos:start="181:13" pos:end="181:34"><name pos:start="181:13" pos:end="181:21">avio_skip</name><argument_list pos:start="181:22" pos:end="181:34">(<argument pos:start="181:23" pos:end="181:27"><expr pos:start="181:23" pos:end="181:27"><name pos:start="181:23" pos:end="181:27"><name pos:start="181:23" pos:end="181:23">s</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:27">pb</name></name></expr></argument>, <argument pos:start="181:30" pos:end="181:33"><expr pos:start="181:30" pos:end="181:33"><name pos:start="181:30" pos:end="181:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="187:9" pos:end="187:32">/* Skip to end of tag */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:41"><expr pos:start="189:9" pos:end="189:40"><call pos:start="189:9" pos:end="189:40"><name pos:start="189:9" pos:end="189:17">avio_seek</name><argument_list pos:start="189:18" pos:end="189:40">(<argument pos:start="189:19" pos:end="189:23"><expr pos:start="189:19" pos:end="189:23"><name pos:start="189:19" pos:end="189:23"><name pos:start="189:19" pos:end="189:19">s</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:23">pb</name></name></expr></argument>, <argument pos:start="189:26" pos:end="189:29"><expr pos:start="189:26" pos:end="189:29"><name pos:start="189:26" pos:end="189:29">next</name></expr></argument>, <argument pos:start="189:32" pos:end="189:39"><expr pos:start="189:32" pos:end="189:39"><name pos:start="189:32" pos:end="189:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="195:5" pos:end="197:18"><if pos:start="195:5" pos:end="197:18">if <condition pos:start="195:8" pos:end="195:37">(<expr pos:start="195:9" pos:end="195:36"><name pos:start="195:9" pos:end="195:15">version</name> <operator pos:start="195:17" pos:end="195:18">==</operator> <literal type="number" pos:start="195:20" pos:end="195:20">4</literal> <operator pos:start="195:22" pos:end="195:23">&amp;&amp;</operator> <name pos:start="195:25" pos:end="195:29">flags</name> <operator pos:start="195:31" pos:end="195:31">&amp;</operator> <literal type="number" pos:start="195:33" pos:end="195:36">0x10</literal></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:18"><block_content pos:start="197:9" pos:end="197:18"> <comment type="block" pos:start="195:39" pos:end="195:88">/* Footer preset, always 10 bytes, skip over it */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:18"><expr pos:start="197:9" pos:end="197:17"><name pos:start="197:9" pos:end="197:11">end</name> <operator pos:start="197:13" pos:end="197:14">+=</operator> <literal type="number" pos:start="197:16" pos:end="197:17">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



  <label pos:start="201:3" pos:end="201:8"><name pos:start="201:3" pos:end="201:7">error</name>:</label>

    <if_stmt pos:start="203:5" pos:end="205:92"><if pos:start="203:5" pos:end="205:92">if <condition pos:start="203:8" pos:end="203:15">(<expr pos:start="203:9" pos:end="203:14"><name pos:start="203:9" pos:end="203:14">reason</name></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:92"><block_content pos:start="205:9" pos:end="205:92">

        <expr_stmt pos:start="205:9" pos:end="205:92"><expr pos:start="205:9" pos:end="205:91"><call pos:start="205:9" pos:end="205:91"><name pos:start="205:9" pos:end="205:14">av_log</name><argument_list pos:start="205:15" pos:end="205:91">(<argument pos:start="205:16" pos:end="205:16"><expr pos:start="205:16" pos:end="205:16"><name pos:start="205:16" pos:end="205:16">s</name></expr></argument>, <argument pos:start="205:19" pos:end="205:29"><expr pos:start="205:19" pos:end="205:29"><name pos:start="205:19" pos:end="205:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="205:32" pos:end="205:73"><expr pos:start="205:32" pos:end="205:73"><literal type="string" pos:start="205:32" pos:end="205:73">"ID3v2.%d tag skipped, cannot handle %s\n"</literal></expr></argument>, <argument pos:start="205:76" pos:end="205:82"><expr pos:start="205:76" pos:end="205:82"><name pos:start="205:76" pos:end="205:82">version</name></expr></argument>, <argument pos:start="205:85" pos:end="205:90"><expr pos:start="205:85" pos:end="205:90"><name pos:start="205:85" pos:end="205:90">reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:36"><expr pos:start="207:5" pos:end="207:35"><call pos:start="207:5" pos:end="207:35"><name pos:start="207:5" pos:end="207:13">avio_seek</name><argument_list pos:start="207:14" pos:end="207:35">(<argument pos:start="207:15" pos:end="207:19"><expr pos:start="207:15" pos:end="207:19"><name pos:start="207:15" pos:end="207:19"><name pos:start="207:15" pos:end="207:15">s</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:19">pb</name></name></expr></argument>, <argument pos:start="207:22" pos:end="207:24"><expr pos:start="207:22" pos:end="207:24"><name pos:start="207:22" pos:end="207:24">end</name></expr></argument>, <argument pos:start="207:27" pos:end="207:34"><expr pos:start="207:27" pos:end="207:34"><name pos:start="207:27" pos:end="207:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:20"><expr pos:start="209:5" pos:end="209:19"><call pos:start="209:5" pos:end="209:19"><name pos:start="209:5" pos:end="209:11">av_free</name><argument_list pos:start="209:12" pos:end="209:19">(<argument pos:start="209:13" pos:end="209:18"><expr pos:start="209:13" pos:end="209:18"><name pos:start="209:13" pos:end="209:18">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="211:5" pos:end="211:11">return;</return>

</block_content>}</block></function>
</unit>
