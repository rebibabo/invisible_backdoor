<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8823.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">ff_float_dsp_init_x86</name><parameter_list pos:start="1:27" pos:end="1:51">(<parameter pos:start="1:28" pos:end="1:50"><decl pos:start="1:28" pos:end="1:50"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:44">AVFloatDSPContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">fdsp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="28:0">

<cpp:if pos:start="5:1" pos:end="5:13">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">HAVE_YASM</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">mm_flags</name> <init pos:start="7:18" pos:end="7:37">= <expr pos:start="7:20" pos:end="7:37"><call pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:35">av_get_cpu_flags</name><argument_list pos:start="7:36" pos:end="7:37">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:47">(<expr pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:16">mm_flags</name> <operator pos:start="11:18" pos:end="11:18">&amp;</operator> <name pos:start="11:20" pos:end="11:34">AV_CPU_FLAG_SSE</name> <operator pos:start="11:36" pos:end="11:37">&amp;&amp;</operator> <name pos:start="11:39" pos:end="11:46">HAVE_SSE</name></expr>)</condition> <block pos:start="11:49" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:61">

        <expr_stmt pos:start="13:9" pos:end="13:47"><expr pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:12">fdsp</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:25">vector_fmul</name></name> <operator pos:start="13:27" pos:end="13:27">=</operator> <name pos:start="13:29" pos:end="13:46">ff_vector_fmul_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:61"><expr pos:start="15:9" pos:end="15:60"><name pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:12">fdsp</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:32">vector_fmac_scalar</name></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <name pos:start="15:36" pos:end="15:60">ff_vector_fmac_scalar_sse</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="28:0"><if pos:start="19:5" pos:end="28:0">if <condition pos:start="19:8" pos:end="19:47">(<expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:16">mm_flags</name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <name pos:start="19:20" pos:end="19:34">AV_CPU_FLAG_AVX</name> <operator pos:start="19:36" pos:end="19:37">&amp;&amp;</operator> <name pos:start="19:39" pos:end="19:46">HAVE_AVX</name></expr>)</condition> <block pos:start="19:49" pos:end="28:0">{<block_content pos:start="21:9" pos:end="23:61">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:12">fdsp</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:25">vector_fmul</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:46">ff_vector_fmul_avx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:12">fdsp</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:32">vector_fmac_scalar</name></name> <operator pos:start="23:34" pos:end="23:34">=</operator> <name pos:start="23:36" pos:end="23:60">ff_vector_fmac_scalar_avx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
