<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8951.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:25"><name pos:start="1:1" pos:end="1:10">START_TEST</name><argument_list pos:start="1:11" pos:end="1:25">(<argument pos:start="1:12" pos:end="1:24">simple_number</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <struct pos:start="7:5" pos:end="27:6">struct <block pos:start="7:12" pos:end="13:5">{

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">encoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:24"><decl pos:start="11:9" pos:end="11:23"><type pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">int64_t</name></type> <name pos:start="11:17" pos:end="11:23">decoded</name></decl>;</decl_stmt>

    }</block> <decl pos:start="13:7" pos:end="27:5"><name pos:start="13:7" pos:end="13:18"><name pos:start="13:7" pos:end="13:16">test_cases</name><index pos:start="13:17" pos:end="13:18">[]</index></name> <init pos:start="13:20" pos:end="27:5">= <expr pos:start="13:22" pos:end="27:5"><block pos:start="13:22" pos:end="27:5">{

        <expr pos:start="15:9" pos:end="15:18"><block pos:start="15:9" pos:end="15:18">{ <expr pos:start="15:11" pos:end="15:13"><literal type="string" pos:start="15:11" pos:end="15:13">"0"</literal></expr>, <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr> }</block></expr>,

        <expr pos:start="17:9" pos:end="17:24"><block pos:start="17:9" pos:end="17:24">{ <expr pos:start="17:11" pos:end="17:16"><literal type="string" pos:start="17:11" pos:end="17:16">"1234"</literal></expr>, <expr pos:start="17:19" pos:end="17:22"><literal type="number" pos:start="17:19" pos:end="17:22">1234</literal></expr> }</block></expr>,

        <expr pos:start="19:9" pos:end="19:18"><block pos:start="19:9" pos:end="19:18">{ <expr pos:start="19:11" pos:end="19:13"><literal type="string" pos:start="19:11" pos:end="19:13">"1"</literal></expr>, <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr> }</block></expr>,

        <expr pos:start="21:9" pos:end="21:22"><block pos:start="21:9" pos:end="21:22">{ <expr pos:start="21:11" pos:end="21:15"><literal type="string" pos:start="21:11" pos:end="21:15">"-32"</literal></expr>, <expr pos:start="21:18" pos:end="21:20"><operator pos:start="21:18" pos:end="21:18">-</operator><literal type="number" pos:start="21:19" pos:end="21:20">32</literal></expr> }</block></expr>,

        <expr pos:start="23:9" pos:end="23:19"><block pos:start="23:9" pos:end="23:19">{ <expr pos:start="23:11" pos:end="23:14"><literal type="string" pos:start="23:11" pos:end="23:14">"-0"</literal></expr>, <expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr> }</block></expr>,

        <expr pos:start="25:9" pos:end="25:11"><block pos:start="25:9" pos:end="25:11">{ }</block></expr>,

    }</block></expr></init></decl>;</struct>



    <for pos:start="31:5" pos:end="55:5">for <control pos:start="31:9" pos:end="31:43">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:38"><expr pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:26">test_cases</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">i</name></expr>]</index></name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:37">encoded</name></expr>;</condition> <incr pos:start="31:40" pos:end="31:42"><expr pos:start="31:40" pos:end="31:42"><name pos:start="31:40" pos:end="31:40">i</name><operator pos:start="31:41" pos:end="31:42">++</operator></expr></incr>)</control> <block pos:start="31:45" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:22">

        <decl_stmt pos:start="33:9" pos:end="33:21"><decl pos:start="33:9" pos:end="33:20"><type pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">QObject</name> <modifier pos:start="33:17" pos:end="33:17">*</modifier></type><name pos:start="33:18" pos:end="33:20">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:19"><decl pos:start="35:9" pos:end="35:18"><type pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:12">QInt</name> <modifier pos:start="35:14" pos:end="35:14">*</modifier></type><name pos:start="35:15" pos:end="35:18">qint</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:11">obj</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:54"><name pos:start="39:15" pos:end="39:31">qobject_from_json</name><argument_list pos:start="39:32" pos:end="39:54">(<argument pos:start="39:33" pos:end="39:53"><expr pos:start="39:33" pos:end="39:53"><name pos:start="39:33" pos:end="39:45"><name pos:start="39:33" pos:end="39:42">test_cases</name><index pos:start="39:43" pos:end="39:45">[<expr pos:start="39:44" pos:end="39:44"><name pos:start="39:44" pos:end="39:44">i</name></expr>]</index></name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:53">encoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><call pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:19">fail_unless</name><argument_list pos:start="41:20" pos:end="41:32">(<argument pos:start="41:21" pos:end="41:31"><expr pos:start="41:21" pos:end="41:31"><name pos:start="41:21" pos:end="41:23">obj</name> <operator pos:start="41:25" pos:end="41:26">!=</operator> <name pos:start="41:28" pos:end="41:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:53"><expr pos:start="43:9" pos:end="43:52"><call pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:19">fail_unless</name><argument_list pos:start="43:20" pos:end="43:52">(<argument pos:start="43:21" pos:end="43:51"><expr pos:start="43:21" pos:end="43:51"><call pos:start="43:21" pos:end="43:37"><name pos:start="43:21" pos:end="43:32">qobject_type</name><argument_list pos:start="43:33" pos:end="43:37">(<argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="43:39" pos:end="43:40">==</operator> <name pos:start="43:42" pos:end="43:51">QTYPE_QINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:12">qint</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:35"><name pos:start="47:16" pos:end="47:30">qobject_to_qint</name><argument_list pos:start="47:31" pos:end="47:35">(<argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:65"><expr pos:start="49:9" pos:end="49:64"><call pos:start="49:9" pos:end="49:64"><name pos:start="49:9" pos:end="49:19">fail_unless</name><argument_list pos:start="49:20" pos:end="49:64">(<argument pos:start="49:21" pos:end="49:63"><expr pos:start="49:21" pos:end="49:63"><call pos:start="49:21" pos:end="49:38"><name pos:start="49:21" pos:end="49:32">qint_get_int</name><argument_list pos:start="49:33" pos:end="49:38">(<argument pos:start="49:34" pos:end="49:37"><expr pos:start="49:34" pos:end="49:37"><name pos:start="49:34" pos:end="49:37">qint</name></expr></argument>)</argument_list></call> <operator pos:start="49:40" pos:end="49:41">==</operator> <name pos:start="49:43" pos:end="49:55"><name pos:start="49:43" pos:end="49:52">test_cases</name><index pos:start="49:53" pos:end="49:55">[<expr pos:start="49:54" pos:end="49:54"><name pos:start="49:54" pos:end="49:54">i</name></expr>]</index></name><operator pos:start="49:56" pos:end="49:56">.</operator><name pos:start="49:57" pos:end="49:63">decoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:15">QDECREF</name><argument_list pos:start="53:16" pos:end="53:21">(<argument pos:start="53:17" pos:end="53:20"><expr pos:start="53:17" pos:end="53:20"><name pos:start="53:17" pos:end="53:20">qint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
