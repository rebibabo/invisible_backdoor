<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9550.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">omap_mcbsp_writew</name><parameter_list pos:start="1:30" pos:end="3:31">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:30"><decl pos:start="3:17" pos:end="3:30"><type pos:start="3:17" pos:end="3:30"><name pos:start="3:17" pos:end="3:24">uint32_t</name></type> <name pos:start="3:26" pos:end="3:30">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:47">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">omap_mcbsp_s</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:59">= <expr pos:start="7:30" pos:end="7:59"><operator pos:start="7:30" pos:end="7:30">(</operator>struct <name pos:start="7:38" pos:end="7:49">omap_mcbsp_s</name> <operator pos:start="7:51" pos:end="7:51">*</operator><operator pos:start="7:52" pos:end="7:52">)</operator> <name pos:start="7:54" pos:end="7:59">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:42">= <expr pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">OMAP_MPUI_REG_MASK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="53:5"><if pos:start="13:5" pos:end="53:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:17">==</operator> <literal type="number" pos:start="13:19" pos:end="13:22">0x04</literal></expr>)</condition> <block pos:start="13:25" pos:end="53:5">{<block_content pos:start="15:9" pos:end="51:15">				<comment type="block" pos:start="13:57" pos:end="13:65">/* DXR */</comment>

        <if_stmt pos:start="15:9" pos:end="17:19"><if pos:start="15:9" pos:end="17:19">if <condition pos:start="15:12" pos:end="15:39">(<expr pos:start="15:13" pos:end="15:38"><operator pos:start="15:13" pos:end="15:13">(</operator><operator pos:start="15:14" pos:end="15:14">(</operator><name pos:start="15:15" pos:end="15:23"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:20">xcr</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>]</index></name> <operator pos:start="15:25" pos:end="15:26">&gt;&gt;</operator> <literal type="number" pos:start="15:28" pos:end="15:28">5</literal><operator pos:start="15:29" pos:end="15:29">)</operator> <operator pos:start="15:31" pos:end="15:31">&amp;</operator> <literal type="number" pos:start="15:33" pos:end="15:33">7</literal><operator pos:start="15:34" pos:end="15:34">)</operator> <operator pos:start="15:36" pos:end="15:36">&lt;</operator> <literal type="number" pos:start="15:38" pos:end="15:38">3</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:19"><block_content pos:start="17:13" pos:end="17:19">			<comment type="block" pos:start="15:57" pos:end="15:69">/* XWDLEN1 */</comment>

            <return pos:start="17:13" pos:end="17:19">return;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="49:58"><if pos:start="19:9" pos:end="47:9">if <condition pos:start="19:12" pos:end="19:26">(<expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">tx_req</name></name> <operator pos:start="19:23" pos:end="19:23">&gt;</operator> <literal type="number" pos:start="19:25" pos:end="19:25">3</literal></expr>)</condition> <block pos:start="19:28" pos:end="47:9">{<block_content pos:start="21:13" pos:end="45:38">

            <expr_stmt pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">tx_req</name></name> <operator pos:start="21:23" pos:end="21:24">-=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="41:13"><if pos:start="23:13" pos:end="41:13">if <condition pos:start="23:16" pos:end="23:42">(<expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">codec</name></name> <operator pos:start="23:26" pos:end="23:27">&amp;&amp;</operator> <name pos:start="23:29" pos:end="23:41"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:36">codec</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:41">cts</name></name></expr>)</condition> <block pos:start="23:44" pos:end="41:13">{<block_content pos:start="25:17" pos:end="39:44">

                <expr_stmt pos:start="25:17" pos:end="27:45"><expr pos:start="25:17" pos:end="27:44"><name pos:start="25:17" pos:end="25:56"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">codec</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:29">out</name><operator pos:start="25:30" pos:end="25:30">.</operator><name pos:start="25:31" pos:end="25:34">fifo</name><index pos:start="25:35" pos:end="25:56">[<expr pos:start="25:36" pos:end="25:55"><name pos:start="25:36" pos:end="25:52"><name pos:start="25:36" pos:end="25:36">s</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:43">codec</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:48">out</name><operator pos:start="25:49" pos:end="25:49">.</operator><name pos:start="25:50" pos:end="25:52">len</name></name> <operator pos:start="25:54" pos:end="25:55">++</operator></expr>]</index></name> <operator pos:start="25:58" pos:end="25:58">=</operator>

                        <operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:30">value</name> <operator pos:start="27:32" pos:end="27:33">&gt;&gt;</operator> <literal type="number" pos:start="27:35" pos:end="27:36">24</literal><operator pos:start="27:37" pos:end="27:37">)</operator> <operator pos:start="27:39" pos:end="27:39">&amp;</operator> <literal type="number" pos:start="27:41" pos:end="27:44">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="31:45"><expr pos:start="29:17" pos:end="31:44"><name pos:start="29:17" pos:end="29:56"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:24">codec</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:29">out</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:34">fifo</name><index pos:start="29:35" pos:end="29:56">[<expr pos:start="29:36" pos:end="29:55"><name pos:start="29:36" pos:end="29:52"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:43">codec</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:48">out</name><operator pos:start="29:49" pos:end="29:49">.</operator><name pos:start="29:50" pos:end="29:52">len</name></name> <operator pos:start="29:54" pos:end="29:55">++</operator></expr>]</index></name> <operator pos:start="29:58" pos:end="29:58">=</operator>

                        <operator pos:start="31:25" pos:end="31:25">(</operator><name pos:start="31:26" pos:end="31:30">value</name> <operator pos:start="31:32" pos:end="31:33">&gt;&gt;</operator> <literal type="number" pos:start="31:35" pos:end="31:36">16</literal><operator pos:start="31:37" pos:end="31:37">)</operator> <operator pos:start="31:39" pos:end="31:39">&amp;</operator> <literal type="number" pos:start="31:41" pos:end="31:44">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="35:44"><expr pos:start="33:17" pos:end="35:43"><name pos:start="33:17" pos:end="33:56"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">codec</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:29">out</name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:34">fifo</name><index pos:start="33:35" pos:end="33:56">[<expr pos:start="33:36" pos:end="33:55"><name pos:start="33:36" pos:end="33:52"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:43">codec</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:48">out</name><operator pos:start="33:49" pos:end="33:49">.</operator><name pos:start="33:50" pos:end="33:52">len</name></name> <operator pos:start="33:54" pos:end="33:55">++</operator></expr>]</index></name> <operator pos:start="33:58" pos:end="33:58">=</operator>

                        <operator pos:start="35:25" pos:end="35:25">(</operator><name pos:start="35:26" pos:end="35:30">value</name> <operator pos:start="35:32" pos:end="35:33">&gt;&gt;</operator> <literal type="number" pos:start="35:35" pos:end="35:35">8</literal><operator pos:start="35:36" pos:end="35:36">)</operator> <operator pos:start="35:38" pos:end="35:38">&amp;</operator> <literal type="number" pos:start="35:40" pos:end="35:43">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="39:44"><expr pos:start="37:17" pos:end="39:43"><name pos:start="37:17" pos:end="37:56"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">codec</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:29">out</name><operator pos:start="37:30" pos:end="37:30">.</operator><name pos:start="37:31" pos:end="37:34">fifo</name><index pos:start="37:35" pos:end="37:56">[<expr pos:start="37:36" pos:end="37:55"><name pos:start="37:36" pos:end="37:52"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:43">codec</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:48">out</name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:52">len</name></name> <operator pos:start="37:54" pos:end="37:55">++</operator></expr>]</index></name> <operator pos:start="37:58" pos:end="37:58">=</operator>

                        <operator pos:start="39:25" pos:end="39:25">(</operator><name pos:start="39:26" pos:end="39:30">value</name> <operator pos:start="39:32" pos:end="39:33">&gt;&gt;</operator> <literal type="number" pos:start="39:35" pos:end="39:35">0</literal><operator pos:start="39:36" pos:end="39:36">)</operator> <operator pos:start="39:38" pos:end="39:38">&amp;</operator> <literal type="number" pos:start="39:40" pos:end="39:43">0xff</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="43:13" pos:end="45:38"><if pos:start="43:13" pos:end="45:38">if <condition pos:start="43:16" pos:end="43:30">(<expr pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:25">tx_req</name></name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:29">4</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:38"><block_content pos:start="45:17" pos:end="45:38">

                <expr_stmt pos:start="45:17" pos:end="45:38"><expr pos:start="45:17" pos:end="45:37"><call pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:34">omap_mcbsp_tx_done</name><argument_list pos:start="45:35" pos:end="45:37">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="49:58">else<block type="pseudo" pos:start="49:13" pos:end="49:58"><block_content pos:start="49:13" pos:end="49:58">

            <expr_stmt pos:start="49:13" pos:end="49:58"><expr pos:start="49:13" pos:end="49:57"><call pos:start="49:13" pos:end="49:57"><name pos:start="49:13" pos:end="49:18">printf</name><argument_list pos:start="49:19" pos:end="49:57">(<argument pos:start="49:20" pos:end="49:42"><expr pos:start="49:20" pos:end="49:42"><literal type="string" pos:start="49:20" pos:end="49:42">"%s: Tx FIFO overrun\n"</literal></expr></argument>, <argument pos:start="49:45" pos:end="49:56"><expr pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:56">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><call pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:25">omap_badwidth_write16</name><argument_list pos:start="57:26" pos:end="57:46">(<argument pos:start="57:27" pos:end="57:32"><expr pos:start="57:27" pos:end="57:32"><name pos:start="57:27" pos:end="57:32">opaque</name></expr></argument>, <argument pos:start="57:35" pos:end="57:38"><expr pos:start="57:35" pos:end="57:38"><name pos:start="57:35" pos:end="57:38">addr</name></expr></argument>, <argument pos:start="57:41" pos:end="57:45"><expr pos:start="57:41" pos:end="57:45"><name pos:start="57:41" pos:end="57:45">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
