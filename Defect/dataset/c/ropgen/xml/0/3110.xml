<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3110.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_type1</name><parameter_list pos:start="1:24" pos:end="1:63">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:38">GetByteContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">gb</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:58">PutByteContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:19">opcode</name></decl>, <decl pos:start="5:22" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:22" pos:end="5:24">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">high</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">pos</name></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="213:5">while <condition pos:start="13:11" pos:end="13:46">(<expr pos:start="13:12" pos:end="13:45"><call pos:start="13:12" pos:end="13:41"><name pos:start="13:12" pos:end="13:37">bytestream2_get_bytes_left</name><argument_list pos:start="13:38" pos:end="13:41">(<argument pos:start="13:39" pos:end="13:40"><expr pos:start="13:39" pos:end="13:40"><name pos:start="13:39" pos:end="13:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="13:43" pos:end="13:43">&gt;</operator> <literal type="number" pos:start="13:45" pos:end="13:45">0</literal></expr>)</condition> <block pos:start="13:48" pos:end="213:5">{<block_content pos:start="15:9" pos:end="211:9">

        <decl_stmt pos:start="15:9" pos:end="15:27"><decl pos:start="15:9" pos:end="15:26"><type pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:22">GetByteContext</name></type> <name pos:start="15:24" pos:end="15:26">gbc</name></decl>;</decl_stmt>



        <while pos:start="19:9" pos:end="149:9">while <condition pos:start="19:15" pos:end="19:50">(<expr pos:start="19:16" pos:end="19:49"><call pos:start="19:16" pos:end="19:45"><name pos:start="19:16" pos:end="19:41">bytestream2_get_bytes_left</name><argument_list pos:start="19:42" pos:end="19:45">(<argument pos:start="19:43" pos:end="19:44"><expr pos:start="19:43" pos:end="19:44"><name pos:start="19:43" pos:end="19:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="19:47" pos:end="19:47">&gt;</operator> <literal type="number" pos:start="19:49" pos:end="19:49">0</literal></expr>)</condition> <block pos:start="19:52" pos:end="149:9">{<block_content pos:start="21:13" pos:end="147:66">

            <while pos:start="21:13" pos:end="75:13">while <condition pos:start="21:19" pos:end="21:54">(<expr pos:start="21:20" pos:end="21:53"><call pos:start="21:20" pos:end="21:49"><name pos:start="21:20" pos:end="21:45">bytestream2_get_bytes_left</name><argument_list pos:start="21:46" pos:end="21:49">(<argument pos:start="21:47" pos:end="21:48"><expr pos:start="21:47" pos:end="21:48"><name pos:start="21:47" pos:end="21:48">gb</name></expr></argument>)</argument_list></call> <operator pos:start="21:51" pos:end="21:51">&gt;</operator> <literal type="number" pos:start="21:53" pos:end="21:53">0</literal></expr>)</condition> <block pos:start="21:56" pos:end="75:13">{<block_content pos:start="23:17" pos:end="73:68">

                <expr_stmt pos:start="23:17" pos:end="23:50"><expr pos:start="23:17" pos:end="23:49"><name pos:start="23:17" pos:end="23:22">opcode</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:49"><name pos:start="23:26" pos:end="23:45">bytestream2_get_byte</name><argument_list pos:start="23:46" pos:end="23:49">(<argument pos:start="23:47" pos:end="23:48"><expr pos:start="23:47" pos:end="23:48"><name pos:start="23:47" pos:end="23:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:20">high</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:29">opcode</name> <operator pos:start="25:31" pos:end="25:32">&gt;=</operator> <literal type="number" pos:start="25:34" pos:end="25:37">0x20</literal></expr>;</expr_stmt>

                <if_stmt pos:start="27:17" pos:end="29:26"><if pos:start="27:17" pos:end="29:26">if <condition pos:start="27:20" pos:end="27:25">(<expr pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:24">high</name></expr>)</condition><block type="pseudo" pos:start="29:21" pos:end="29:26"><block_content pos:start="29:21" pos:end="29:26">

                    <break pos:start="29:21" pos:end="29:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="31:17" pos:end="33:26"><if pos:start="31:17" pos:end="33:26">if <condition pos:start="31:20" pos:end="31:27">(<expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:26">opcode</name></expr>)</condition><block type="pseudo" pos:start="33:21" pos:end="33:26"><block_content pos:start="33:21" pos:end="33:26">

                    <break pos:start="33:21" pos:end="33:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:50"><expr pos:start="35:17" pos:end="35:49"><name pos:start="35:17" pos:end="35:22">opcode</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:49"><name pos:start="35:26" pos:end="35:45">bytestream2_get_byte</name><argument_list pos:start="35:46" pos:end="35:49">(<argument pos:start="35:47" pos:end="35:48"><expr pos:start="35:47" pos:end="35:48"><name pos:start="35:47" pos:end="35:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="43:17"><if pos:start="37:17" pos:end="43:17">if <condition pos:start="37:20" pos:end="37:34">(<expr pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:26">opcode</name> <operator pos:start="37:28" pos:end="37:28">&lt;</operator> <literal type="number" pos:start="37:30" pos:end="37:33">0xF8</literal></expr>)</condition> <block pos:start="37:36" pos:end="43:17">{<block_content pos:start="39:21" pos:end="41:26">

                    <expr_stmt pos:start="39:21" pos:end="39:41"><expr pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:26">opcode</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:35">opcode</name> <operator pos:start="39:37" pos:end="39:37">+</operator> <literal type="number" pos:start="39:39" pos:end="39:40">32</literal></expr>;</expr_stmt>

                    <break pos:start="41:21" pos:end="41:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:34"><expr pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:26">opcode</name> <operator pos:start="45:28" pos:end="45:28">-</operator> <literal type="number" pos:start="45:30" pos:end="45:33">0xF8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="63:17"><if pos:start="47:17" pos:end="59:17">if <condition pos:start="47:20" pos:end="47:22">(<expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">i</name></expr>)</condition> <block pos:start="47:24" pos:end="59:17">{<block_content pos:start="49:21" pos:end="57:32">

                    <expr_stmt pos:start="49:21" pos:end="49:30"><expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:23">len</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <literal type="number" pos:start="49:27" pos:end="49:29">256</literal></expr>;</expr_stmt>

                    <do pos:start="51:21" pos:end="57:32">do <block pos:start="51:24" pos:end="57:21">{<block_content pos:start="53:25" pos:end="55:28">

                        <expr_stmt pos:start="53:25" pos:end="53:33"><expr pos:start="53:25" pos:end="53:32"><name pos:start="53:25" pos:end="53:27">len</name> <operator pos:start="53:29" pos:end="53:30">*=</operator> <literal type="number" pos:start="53:32" pos:end="53:32">2</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:27"><operator pos:start="55:25" pos:end="55:26">--</operator><name pos:start="55:27" pos:end="55:27">i</name></expr>;</expr_stmt>

                    </block_content>}</block> while <condition pos:start="57:29" pos:end="57:31">(<expr pos:start="57:30" pos:end="57:30"><name pos:start="57:30" pos:end="57:30">i</name></expr>)</condition>;</do>

                </block_content>}</block></if> <else pos:start="59:19" pos:end="63:17">else <block pos:start="59:24" pos:end="63:17">{<block_content pos:start="61:21" pos:end="61:30">

                    <expr_stmt pos:start="61:21" pos:end="61:30"><expr pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:23">len</name> <operator pos:start="61:25" pos:end="61:25">=</operator> <literal type="number" pos:start="61:27" pos:end="61:29">280</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <do pos:start="65:17" pos:end="73:68">do <block pos:start="65:20" pos:end="73:17">{<block_content pos:start="67:21" pos:end="71:29">

                    <expr_stmt pos:start="67:21" pos:end="67:71"><expr pos:start="67:21" pos:end="67:70"><call pos:start="67:21" pos:end="67:70"><name pos:start="67:21" pos:end="67:40">bytestream2_put_le32</name><argument_list pos:start="67:41" pos:end="67:70">(<argument pos:start="67:42" pos:end="67:43"><expr pos:start="67:42" pos:end="67:43"><name pos:start="67:42" pos:end="67:43">pb</name></expr></argument>, <argument pos:start="67:46" pos:end="67:69"><expr pos:start="67:46" pos:end="67:69"><call pos:start="67:46" pos:end="67:69"><name pos:start="67:46" pos:end="67:65">bytestream2_get_le32</name><argument_list pos:start="67:66" pos:end="67:69">(<argument pos:start="67:67" pos:end="67:68"><expr pos:start="67:67" pos:end="67:68"><name pos:start="67:67" pos:end="67:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:71"><expr pos:start="69:21" pos:end="69:70"><call pos:start="69:21" pos:end="69:70"><name pos:start="69:21" pos:end="69:40">bytestream2_put_le32</name><argument_list pos:start="69:41" pos:end="69:70">(<argument pos:start="69:42" pos:end="69:43"><expr pos:start="69:42" pos:end="69:43"><name pos:start="69:42" pos:end="69:43">pb</name></expr></argument>, <argument pos:start="69:46" pos:end="69:69"><expr pos:start="69:46" pos:end="69:69"><call pos:start="69:46" pos:end="69:69"><name pos:start="69:46" pos:end="69:65">bytestream2_get_le32</name><argument_list pos:start="69:66" pos:end="69:69">(<argument pos:start="69:67" pos:end="69:68"><expr pos:start="69:67" pos:end="69:68"><name pos:start="69:67" pos:end="69:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:29"><expr pos:start="71:21" pos:end="71:28"><name pos:start="71:21" pos:end="71:23">len</name> <operator pos:start="71:25" pos:end="71:26">-=</operator> <literal type="number" pos:start="71:28" pos:end="71:28">8</literal></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="73:25" pos:end="73:67">(<expr pos:start="73:26" pos:end="73:66"><name pos:start="73:26" pos:end="73:28">len</name> <operator pos:start="73:30" pos:end="73:31">&amp;&amp;</operator> <call pos:start="73:33" pos:end="73:62"><name pos:start="73:33" pos:end="73:58">bytestream2_get_bytes_left</name><argument_list pos:start="73:59" pos:end="73:62">(<argument pos:start="73:60" pos:end="73:61"><expr pos:start="73:60" pos:end="73:61"><name pos:start="73:60" pos:end="73:61">gb</name></expr></argument>)</argument_list></call> <operator pos:start="73:64" pos:end="73:64">&gt;</operator> <literal type="number" pos:start="73:66" pos:end="73:66">0</literal></expr>)</condition>;</do>

            </block_content>}</block></while>



            <if_stmt pos:start="79:13" pos:end="121:13"><if pos:start="79:13" pos:end="121:13">if <condition pos:start="79:16" pos:end="79:22">(<expr pos:start="79:17" pos:end="79:21"><operator pos:start="79:17" pos:end="79:17">!</operator><name pos:start="79:18" pos:end="79:21">high</name></expr>)</condition> <block pos:start="79:24" pos:end="121:13">{<block_content pos:start="81:17" pos:end="119:17">

                <do pos:start="81:17" pos:end="87:71">do <block pos:start="81:20" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:29">

                    <expr_stmt pos:start="83:21" pos:end="83:71"><expr pos:start="83:21" pos:end="83:70"><call pos:start="83:21" pos:end="83:70"><name pos:start="83:21" pos:end="83:40">bytestream2_put_byte</name><argument_list pos:start="83:41" pos:end="83:70">(<argument pos:start="83:42" pos:end="83:43"><expr pos:start="83:42" pos:end="83:43"><name pos:start="83:42" pos:end="83:43">pb</name></expr></argument>, <argument pos:start="83:46" pos:end="83:69"><expr pos:start="83:46" pos:end="83:69"><call pos:start="83:46" pos:end="83:69"><name pos:start="83:46" pos:end="83:65">bytestream2_get_byte</name><argument_list pos:start="83:66" pos:end="83:69">(<argument pos:start="83:67" pos:end="83:68"><expr pos:start="83:67" pos:end="83:68"><name pos:start="83:67" pos:end="83:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:29"><expr pos:start="85:21" pos:end="85:28"><operator pos:start="85:21" pos:end="85:22">--</operator><name pos:start="85:23" pos:end="85:28">opcode</name></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="87:25" pos:end="87:70">(<expr pos:start="87:26" pos:end="87:69"><name pos:start="87:26" pos:end="87:31">opcode</name> <operator pos:start="87:33" pos:end="87:34">&amp;&amp;</operator> <call pos:start="87:36" pos:end="87:65"><name pos:start="87:36" pos:end="87:61">bytestream2_get_bytes_left</name><argument_list pos:start="87:62" pos:end="87:65">(<argument pos:start="87:63" pos:end="87:64"><expr pos:start="87:63" pos:end="87:64"><name pos:start="87:63" pos:end="87:64">gb</name></expr></argument>)</argument_list></call> <operator pos:start="87:67" pos:end="87:67">&gt;</operator> <literal type="number" pos:start="87:69" pos:end="87:69">0</literal></expr>)</condition>;</do>



                <while pos:start="91:17" pos:end="119:17">while <condition pos:start="91:23" pos:end="91:58">(<expr pos:start="91:24" pos:end="91:57"><call pos:start="91:24" pos:end="91:53"><name pos:start="91:24" pos:end="91:49">bytestream2_get_bytes_left</name><argument_list pos:start="91:50" pos:end="91:53">(<argument pos:start="91:51" pos:end="91:52"><expr pos:start="91:51" pos:end="91:52"><name pos:start="91:51" pos:end="91:52">gb</name></expr></argument>)</argument_list></call> <operator pos:start="91:55" pos:end="91:55">&gt;</operator> <literal type="number" pos:start="91:57" pos:end="91:57">0</literal></expr>)</condition> <block pos:start="91:60" pos:end="119:17">{<block_content pos:start="93:21" pos:end="117:71">

                    <decl_stmt pos:start="93:21" pos:end="93:39"><decl pos:start="93:21" pos:end="93:38"><type pos:start="93:21" pos:end="93:34"><name pos:start="93:21" pos:end="93:34">GetByteContext</name></type> <name pos:start="93:36" pos:end="93:38">gbc</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="97:21" pos:end="97:54"><expr pos:start="97:21" pos:end="97:53"><name pos:start="97:21" pos:end="97:26">opcode</name> <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:53"><name pos:start="97:30" pos:end="97:49">bytestream2_get_byte</name><argument_list pos:start="97:50" pos:end="97:53">(<argument pos:start="97:51" pos:end="97:52"><expr pos:start="97:51" pos:end="97:52"><name pos:start="97:51" pos:end="97:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="99:21" pos:end="101:30"><if pos:start="99:21" pos:end="101:30">if <condition pos:start="99:24" pos:end="99:39">(<expr pos:start="99:25" pos:end="99:38"><name pos:start="99:25" pos:end="99:30">opcode</name> <operator pos:start="99:32" pos:end="99:33">&gt;=</operator> <literal type="number" pos:start="99:35" pos:end="99:38">0x20</literal></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:30"><block_content pos:start="101:25" pos:end="101:30">

                        <break pos:start="101:25" pos:end="101:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:96"><expr pos:start="103:21" pos:end="103:95"><call pos:start="103:21" pos:end="103:95"><name pos:start="103:21" pos:end="103:36">bytestream2_init</name><argument_list pos:start="103:37" pos:end="103:95">(<argument pos:start="103:38" pos:end="103:41"><expr pos:start="103:38" pos:end="103:41"><operator pos:start="103:38" pos:end="103:38">&amp;</operator><name pos:start="103:39" pos:end="103:41">gbc</name></expr></argument>, <argument pos:start="103:44" pos:end="103:59"><expr pos:start="103:44" pos:end="103:59"><name pos:start="103:44" pos:end="103:59"><name pos:start="103:44" pos:end="103:45">pb</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:59">buffer_start</name></name></expr></argument>, <argument pos:start="103:62" pos:end="103:94"><expr pos:start="103:62" pos:end="103:94"><name pos:start="103:62" pos:end="103:75"><name pos:start="103:62" pos:end="103:63">pb</name><operator pos:start="103:64" pos:end="103:65">-&gt;</operator><name pos:start="103:66" pos:end="103:75">buffer_end</name></name> <operator pos:start="103:77" pos:end="103:77">-</operator> <name pos:start="103:79" pos:end="103:94"><name pos:start="103:79" pos:end="103:80">pb</name><operator pos:start="103:81" pos:end="103:82">-&gt;</operator><name pos:start="103:83" pos:end="103:94">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="107:21" pos:end="107:72"><expr pos:start="107:21" pos:end="107:71"><name pos:start="107:21" pos:end="107:23">pos</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <operator pos:start="107:27" pos:end="107:27">-</operator><operator pos:start="107:28" pos:end="107:28">(</operator><name pos:start="107:29" pos:end="107:34">opcode</name> <operator pos:start="107:36" pos:end="107:36">|</operator> <literal type="number" pos:start="107:38" pos:end="107:39">32</literal> <operator pos:start="107:41" pos:end="107:41">*</operator> <call pos:start="107:43" pos:end="107:66"><name pos:start="107:43" pos:end="107:62">bytestream2_get_byte</name><argument_list pos:start="107:63" pos:end="107:66">(<argument pos:start="107:64" pos:end="107:65"><expr pos:start="107:64" pos:end="107:65"><name pos:start="107:64" pos:end="107:65">gb</name></expr></argument>)</argument_list></call><operator pos:start="107:67" pos:end="107:67">)</operator> <operator pos:start="107:69" pos:end="107:69">-</operator> <literal type="number" pos:start="107:71" pos:end="107:71">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:83"><expr pos:start="109:21" pos:end="109:82"><call pos:start="109:21" pos:end="109:82"><name pos:start="109:21" pos:end="109:36">bytestream2_seek</name><argument_list pos:start="109:37" pos:end="109:82">(<argument pos:start="109:38" pos:end="109:41"><expr pos:start="109:38" pos:end="109:41"><operator pos:start="109:38" pos:end="109:38">&amp;</operator><name pos:start="109:39" pos:end="109:41">gbc</name></expr></argument>, <argument pos:start="109:44" pos:end="109:71"><expr pos:start="109:44" pos:end="109:71"><call pos:start="109:44" pos:end="109:65"><name pos:start="109:44" pos:end="109:61">bytestream2_tell_p</name><argument_list pos:start="109:62" pos:end="109:65">(<argument pos:start="109:63" pos:end="109:64"><expr pos:start="109:63" pos:end="109:64"><name pos:start="109:63" pos:end="109:64">pb</name></expr></argument>)</argument_list></call> <operator pos:start="109:67" pos:end="109:67">+</operator> <name pos:start="109:69" pos:end="109:71">pos</name></expr></argument>, <argument pos:start="109:74" pos:end="109:81"><expr pos:start="109:74" pos:end="109:81"><name pos:start="109:74" pos:end="109:81">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:73"><expr pos:start="111:21" pos:end="111:72"><call pos:start="111:21" pos:end="111:72"><name pos:start="111:21" pos:end="111:40">bytestream2_put_byte</name><argument_list pos:start="111:41" pos:end="111:72">(<argument pos:start="111:42" pos:end="111:43"><expr pos:start="111:42" pos:end="111:43"><name pos:start="111:42" pos:end="111:43">pb</name></expr></argument>, <argument pos:start="111:46" pos:end="111:71"><expr pos:start="111:46" pos:end="111:71"><call pos:start="111:46" pos:end="111:71"><name pos:start="111:46" pos:end="111:65">bytestream2_get_byte</name><argument_list pos:start="111:66" pos:end="111:71">(<argument pos:start="111:67" pos:end="111:70"><expr pos:start="111:67" pos:end="111:70"><operator pos:start="111:67" pos:end="111:67">&amp;</operator><name pos:start="111:68" pos:end="111:70">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:73"><expr pos:start="113:21" pos:end="113:72"><call pos:start="113:21" pos:end="113:72"><name pos:start="113:21" pos:end="113:40">bytestream2_put_byte</name><argument_list pos:start="113:41" pos:end="113:72">(<argument pos:start="113:42" pos:end="113:43"><expr pos:start="113:42" pos:end="113:43"><name pos:start="113:42" pos:end="113:43">pb</name></expr></argument>, <argument pos:start="113:46" pos:end="113:71"><expr pos:start="113:46" pos:end="113:71"><call pos:start="113:46" pos:end="113:71"><name pos:start="113:46" pos:end="113:65">bytestream2_get_byte</name><argument_list pos:start="113:66" pos:end="113:71">(<argument pos:start="113:67" pos:end="113:70"><expr pos:start="113:67" pos:end="113:70"><operator pos:start="113:67" pos:end="113:67">&amp;</operator><name pos:start="113:68" pos:end="113:70">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:73"><expr pos:start="115:21" pos:end="115:72"><call pos:start="115:21" pos:end="115:72"><name pos:start="115:21" pos:end="115:40">bytestream2_put_byte</name><argument_list pos:start="115:41" pos:end="115:72">(<argument pos:start="115:42" pos:end="115:43"><expr pos:start="115:42" pos:end="115:43"><name pos:start="115:42" pos:end="115:43">pb</name></expr></argument>, <argument pos:start="115:46" pos:end="115:71"><expr pos:start="115:46" pos:end="115:71"><call pos:start="115:46" pos:end="115:71"><name pos:start="115:46" pos:end="115:65">bytestream2_get_byte</name><argument_list pos:start="115:66" pos:end="115:71">(<argument pos:start="115:67" pos:end="115:70"><expr pos:start="115:67" pos:end="115:70"><operator pos:start="115:67" pos:end="115:67">&amp;</operator><name pos:start="115:68" pos:end="115:70">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:71"><expr pos:start="117:21" pos:end="117:70"><call pos:start="117:21" pos:end="117:70"><name pos:start="117:21" pos:end="117:40">bytestream2_put_byte</name><argument_list pos:start="117:41" pos:end="117:70">(<argument pos:start="117:42" pos:end="117:43"><expr pos:start="117:42" pos:end="117:43"><name pos:start="117:42" pos:end="117:43">pb</name></expr></argument>, <argument pos:start="117:46" pos:end="117:69"><expr pos:start="117:46" pos:end="117:69"><call pos:start="117:46" pos:end="117:69"><name pos:start="117:46" pos:end="117:65">bytestream2_get_byte</name><argument_list pos:start="117:66" pos:end="117:69">(<argument pos:start="117:67" pos:end="117:68"><expr pos:start="117:67" pos:end="117:68"><name pos:start="117:67" pos:end="117:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:21"><expr pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:16">high</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="127:22"><if pos:start="125:13" pos:end="127:22">if <condition pos:start="125:16" pos:end="125:30">(<expr pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:22">opcode</name> <operator pos:start="125:24" pos:end="125:24">&lt;</operator> <literal type="number" pos:start="125:26" pos:end="125:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:22"><block_content pos:start="127:17" pos:end="127:22">

                <break pos:start="127:17" pos:end="127:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:88"><expr pos:start="129:13" pos:end="129:87"><call pos:start="129:13" pos:end="129:87"><name pos:start="129:13" pos:end="129:28">bytestream2_init</name><argument_list pos:start="129:29" pos:end="129:87">(<argument pos:start="129:30" pos:end="129:33"><expr pos:start="129:30" pos:end="129:33"><operator pos:start="129:30" pos:end="129:30">&amp;</operator><name pos:start="129:31" pos:end="129:33">gbc</name></expr></argument>, <argument pos:start="129:36" pos:end="129:51"><expr pos:start="129:36" pos:end="129:51"><name pos:start="129:36" pos:end="129:51"><name pos:start="129:36" pos:end="129:37">pb</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:51">buffer_start</name></name></expr></argument>, <argument pos:start="129:54" pos:end="129:86"><expr pos:start="129:54" pos:end="129:86"><name pos:start="129:54" pos:end="129:67"><name pos:start="129:54" pos:end="129:55">pb</name><operator pos:start="129:56" pos:end="129:57">-&gt;</operator><name pos:start="129:58" pos:end="129:67">buffer_end</name></name> <operator pos:start="129:69" pos:end="129:69">-</operator> <name pos:start="129:71" pos:end="129:86"><name pos:start="129:71" pos:end="129:72">pb</name><operator pos:start="129:73" pos:end="129:74">-&gt;</operator><name pos:start="129:75" pos:end="129:86">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:75"><expr pos:start="131:13" pos:end="131:74"><name pos:start="131:13" pos:end="131:15">pos</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <operator pos:start="131:19" pos:end="131:19">(</operator><operator pos:start="131:20" pos:end="131:20">-</operator><operator pos:start="131:21" pos:end="131:21">(</operator><operator pos:start="131:22" pos:end="131:22">(</operator><name pos:start="131:23" pos:end="131:28">opcode</name> <operator pos:start="131:30" pos:end="131:30">&amp;</operator> <literal type="number" pos:start="131:32" pos:end="131:35">0x1F</literal><operator pos:start="131:36" pos:end="131:36">)</operator> <operator pos:start="131:38" pos:end="131:38">|</operator> <literal type="number" pos:start="131:40" pos:end="131:41">32</literal> <operator pos:start="131:43" pos:end="131:43">*</operator> <call pos:start="131:45" pos:end="131:68"><name pos:start="131:45" pos:end="131:64">bytestream2_get_byte</name><argument_list pos:start="131:65" pos:end="131:68">(<argument pos:start="131:66" pos:end="131:67"><expr pos:start="131:66" pos:end="131:67"><name pos:start="131:66" pos:end="131:67">gb</name></expr></argument>)</argument_list></call><operator pos:start="131:69" pos:end="131:69">)</operator> <operator pos:start="131:71" pos:end="131:71">-</operator> <literal type="number" pos:start="131:73" pos:end="131:73">1</literal><operator pos:start="131:74" pos:end="131:74">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:75"><expr pos:start="133:13" pos:end="133:74"><call pos:start="133:13" pos:end="133:74"><name pos:start="133:13" pos:end="133:28">bytestream2_seek</name><argument_list pos:start="133:29" pos:end="133:74">(<argument pos:start="133:30" pos:end="133:33"><expr pos:start="133:30" pos:end="133:33"><operator pos:start="133:30" pos:end="133:30">&amp;</operator><name pos:start="133:31" pos:end="133:33">gbc</name></expr></argument>, <argument pos:start="133:36" pos:end="133:63"><expr pos:start="133:36" pos:end="133:63"><call pos:start="133:36" pos:end="133:57"><name pos:start="133:36" pos:end="133:53">bytestream2_tell_p</name><argument_list pos:start="133:54" pos:end="133:57">(<argument pos:start="133:55" pos:end="133:56"><expr pos:start="133:55" pos:end="133:56"><name pos:start="133:55" pos:end="133:56">pb</name></expr></argument>)</argument_list></call> <operator pos:start="133:59" pos:end="133:59">+</operator> <name pos:start="133:61" pos:end="133:63">pos</name></expr></argument>, <argument pos:start="133:66" pos:end="133:73"><expr pos:start="133:66" pos:end="133:73"><name pos:start="133:66" pos:end="133:73">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:65"><expr pos:start="135:13" pos:end="135:64"><call pos:start="135:13" pos:end="135:64"><name pos:start="135:13" pos:end="135:32">bytestream2_put_byte</name><argument_list pos:start="135:33" pos:end="135:64">(<argument pos:start="135:34" pos:end="135:35"><expr pos:start="135:34" pos:end="135:35"><name pos:start="135:34" pos:end="135:35">pb</name></expr></argument>, <argument pos:start="135:38" pos:end="135:63"><expr pos:start="135:38" pos:end="135:63"><call pos:start="135:38" pos:end="135:63"><name pos:start="135:38" pos:end="135:57">bytestream2_get_byte</name><argument_list pos:start="135:58" pos:end="135:63">(<argument pos:start="135:59" pos:end="135:62"><expr pos:start="135:59" pos:end="135:62"><operator pos:start="135:59" pos:end="135:59">&amp;</operator><name pos:start="135:60" pos:end="135:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:65"><expr pos:start="137:13" pos:end="137:64"><call pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:32">bytestream2_put_byte</name><argument_list pos:start="137:33" pos:end="137:64">(<argument pos:start="137:34" pos:end="137:35"><expr pos:start="137:34" pos:end="137:35"><name pos:start="137:34" pos:end="137:35">pb</name></expr></argument>, <argument pos:start="137:38" pos:end="137:63"><expr pos:start="137:38" pos:end="137:63"><call pos:start="137:38" pos:end="137:63"><name pos:start="137:38" pos:end="137:57">bytestream2_get_byte</name><argument_list pos:start="137:58" pos:end="137:63">(<argument pos:start="137:59" pos:end="137:62"><expr pos:start="137:59" pos:end="137:62"><operator pos:start="137:59" pos:end="137:59">&amp;</operator><name pos:start="137:60" pos:end="137:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:36"><expr pos:start="139:13" pos:end="139:35"><name pos:start="139:13" pos:end="139:15">len</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <operator pos:start="139:19" pos:end="139:19">(</operator><name pos:start="139:20" pos:end="139:25">opcode</name> <operator pos:start="139:27" pos:end="139:28">&gt;&gt;</operator> <literal type="number" pos:start="139:30" pos:end="139:30">5</literal><operator pos:start="139:31" pos:end="139:31">)</operator> <operator pos:start="139:33" pos:end="139:33">-</operator> <literal type="number" pos:start="139:35" pos:end="139:35">1</literal></expr>;</expr_stmt>

            <do pos:start="141:13" pos:end="147:66">do <block pos:start="141:16" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:22">

                <expr_stmt pos:start="143:17" pos:end="143:69"><expr pos:start="143:17" pos:end="143:68"><call pos:start="143:17" pos:end="143:68"><name pos:start="143:17" pos:end="143:36">bytestream2_put_byte</name><argument_list pos:start="143:37" pos:end="143:68">(<argument pos:start="143:38" pos:end="143:39"><expr pos:start="143:38" pos:end="143:39"><name pos:start="143:38" pos:end="143:39">pb</name></expr></argument>, <argument pos:start="143:42" pos:end="143:67"><expr pos:start="143:42" pos:end="143:67"><call pos:start="143:42" pos:end="143:67"><name pos:start="143:42" pos:end="143:61">bytestream2_get_byte</name><argument_list pos:start="143:62" pos:end="143:67">(<argument pos:start="143:63" pos:end="143:66"><expr pos:start="143:63" pos:end="143:66"><operator pos:start="143:63" pos:end="143:63">&amp;</operator><name pos:start="143:64" pos:end="143:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:22"><expr pos:start="145:17" pos:end="145:21"><operator pos:start="145:17" pos:end="145:18">--</operator><name pos:start="145:19" pos:end="145:21">len</name></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="147:21" pos:end="147:65">(<expr pos:start="147:22" pos:end="147:64"><name pos:start="147:22" pos:end="147:24">len</name> <operator pos:start="147:26" pos:end="147:27">&amp;&amp;</operator> <call pos:start="147:29" pos:end="147:60"><name pos:start="147:29" pos:end="147:54">bytestream2_get_bytes_left</name><argument_list pos:start="147:55" pos:end="147:60">(<argument pos:start="147:56" pos:end="147:59"><expr pos:start="147:56" pos:end="147:59"><operator pos:start="147:56" pos:end="147:56">&amp;</operator><name pos:start="147:57" pos:end="147:59">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="147:62" pos:end="147:62">&gt;</operator> <literal type="number" pos:start="147:64" pos:end="147:64">0</literal></expr>)</condition>;</do>

        </block_content>}</block></while>

        <expr_stmt pos:start="151:9" pos:end="151:28"><expr pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:11">len</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <name pos:start="151:15" pos:end="151:20">opcode</name> <operator pos:start="151:22" pos:end="151:22">&amp;</operator> <literal type="number" pos:start="151:24" pos:end="151:27">0x1F</literal></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="169:9"><if pos:start="153:9" pos:end="169:9">if <condition pos:start="153:12" pos:end="153:17">(<expr pos:start="153:13" pos:end="153:16"><operator pos:start="153:13" pos:end="153:13">!</operator><name pos:start="153:14" pos:end="153:16">len</name></expr>)</condition> <block pos:start="153:19" pos:end="169:9">{<block_content pos:start="155:13" pos:end="167:49">

            <if_stmt pos:start="155:13" pos:end="165:13"><if pos:start="155:13" pos:end="165:13">if <condition pos:start="155:16" pos:end="155:43">(<expr pos:start="155:17" pos:end="155:42"><operator pos:start="155:17" pos:end="155:17">!</operator><call pos:start="155:18" pos:end="155:42"><name pos:start="155:18" pos:end="155:38">bytestream2_peek_byte</name><argument_list pos:start="155:39" pos:end="155:42">(<argument pos:start="155:40" pos:end="155:41"><expr pos:start="155:40" pos:end="155:41"><name pos:start="155:40" pos:end="155:41">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:45" pos:end="165:13">{<block_content pos:start="157:17" pos:end="163:91">

                <do pos:start="157:17" pos:end="163:91">do <block pos:start="157:20" pos:end="163:17">{<block_content pos:start="159:21" pos:end="161:31">

                    <expr_stmt pos:start="159:21" pos:end="159:44"><expr pos:start="159:21" pos:end="159:43"><call pos:start="159:21" pos:end="159:43"><name pos:start="159:21" pos:end="159:36">bytestream2_skip</name><argument_list pos:start="159:37" pos:end="159:43">(<argument pos:start="159:38" pos:end="159:39"><expr pos:start="159:38" pos:end="159:39"><name pos:start="159:38" pos:end="159:39">gb</name></expr></argument>, <argument pos:start="159:42" pos:end="159:42"><expr pos:start="159:42" pos:end="159:42"><literal type="number" pos:start="159:42" pos:end="159:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:31"><expr pos:start="161:21" pos:end="161:30"><name pos:start="161:21" pos:end="161:23">len</name> <operator pos:start="161:25" pos:end="161:26">+=</operator> <literal type="number" pos:start="161:28" pos:end="161:30">255</literal></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="163:25" pos:end="163:90">(<expr pos:start="163:26" pos:end="163:89"><operator pos:start="163:26" pos:end="163:26">!</operator><call pos:start="163:27" pos:end="163:51"><name pos:start="163:27" pos:end="163:47">bytestream2_peek_byte</name><argument_list pos:start="163:48" pos:end="163:51">(<argument pos:start="163:49" pos:end="163:50"><expr pos:start="163:49" pos:end="163:50"><name pos:start="163:49" pos:end="163:50">gb</name></expr></argument>)</argument_list></call> <operator pos:start="163:53" pos:end="163:54">&amp;&amp;</operator> <call pos:start="163:56" pos:end="163:85"><name pos:start="163:56" pos:end="163:81">bytestream2_get_bytes_left</name><argument_list pos:start="163:82" pos:end="163:85">(<argument pos:start="163:83" pos:end="163:84"><expr pos:start="163:83" pos:end="163:84"><name pos:start="163:83" pos:end="163:84">gb</name></expr></argument>)</argument_list></call> <operator pos:start="163:87" pos:end="163:87">&gt;</operator> <literal type="number" pos:start="163:89" pos:end="163:89">0</literal></expr>)</condition>;</do>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:49"><expr pos:start="167:13" pos:end="167:48"><name pos:start="167:13" pos:end="167:15">len</name> <operator pos:start="167:17" pos:end="167:18">+=</operator> <call pos:start="167:20" pos:end="167:43"><name pos:start="167:20" pos:end="167:39">bytestream2_get_byte</name><argument_list pos:start="167:40" pos:end="167:43">(<argument pos:start="167:41" pos:end="167:42"><expr pos:start="167:41" pos:end="167:42"><name pos:start="167:41" pos:end="167:42">gb</name></expr></argument>)</argument_list></call> <operator pos:start="167:45" pos:end="167:45">+</operator> <literal type="number" pos:start="167:47" pos:end="167:48">31</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:40"><expr pos:start="171:9" pos:end="171:39"><name pos:start="171:9" pos:end="171:11">pos</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <operator pos:start="171:15" pos:end="171:15">-</operator><call pos:start="171:16" pos:end="171:39"><name pos:start="171:16" pos:end="171:35">bytestream2_get_byte</name><argument_list pos:start="171:36" pos:end="171:39">(<argument pos:start="171:37" pos:end="171:38"><expr pos:start="171:37" pos:end="171:38"><name pos:start="171:37" pos:end="171:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:84"><expr pos:start="173:9" pos:end="173:83"><call pos:start="173:9" pos:end="173:83"><name pos:start="173:9" pos:end="173:24">bytestream2_init</name><argument_list pos:start="173:25" pos:end="173:83">(<argument pos:start="173:26" pos:end="173:29"><expr pos:start="173:26" pos:end="173:29"><operator pos:start="173:26" pos:end="173:26">&amp;</operator><name pos:start="173:27" pos:end="173:29">gbc</name></expr></argument>, <argument pos:start="173:32" pos:end="173:47"><expr pos:start="173:32" pos:end="173:47"><name pos:start="173:32" pos:end="173:47"><name pos:start="173:32" pos:end="173:33">pb</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:47">buffer_start</name></name></expr></argument>, <argument pos:start="173:50" pos:end="173:82"><expr pos:start="173:50" pos:end="173:82"><name pos:start="173:50" pos:end="173:63"><name pos:start="173:50" pos:end="173:51">pb</name><operator pos:start="173:52" pos:end="173:53">-&gt;</operator><name pos:start="173:54" pos:end="173:63">buffer_end</name></name> <operator pos:start="173:65" pos:end="173:65">-</operator> <name pos:start="173:67" pos:end="173:82"><name pos:start="173:67" pos:end="173:68">pb</name><operator pos:start="173:69" pos:end="173:70">-&gt;</operator><name pos:start="173:71" pos:end="173:82">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:105"><expr pos:start="175:9" pos:end="175:104"><call pos:start="175:9" pos:end="175:104"><name pos:start="175:9" pos:end="175:24">bytestream2_seek</name><argument_list pos:start="175:25" pos:end="175:104">(<argument pos:start="175:26" pos:end="175:29"><expr pos:start="175:26" pos:end="175:29"><operator pos:start="175:26" pos:end="175:26">&amp;</operator><name pos:start="175:27" pos:end="175:29">gbc</name></expr></argument>, <argument pos:start="175:32" pos:end="175:93"><expr pos:start="175:32" pos:end="175:93"><call pos:start="175:32" pos:end="175:53"><name pos:start="175:32" pos:end="175:49">bytestream2_tell_p</name><argument_list pos:start="175:50" pos:end="175:53">(<argument pos:start="175:51" pos:end="175:52"><expr pos:start="175:51" pos:end="175:52"><name pos:start="175:51" pos:end="175:52">pb</name></expr></argument>)</argument_list></call> <operator pos:start="175:55" pos:end="175:55">+</operator> <name pos:start="175:57" pos:end="175:59">pos</name> <operator pos:start="175:61" pos:end="175:61">-</operator> <operator pos:start="175:63" pos:end="175:63">(</operator><call pos:start="175:64" pos:end="175:87"><name pos:start="175:64" pos:end="175:83">bytestream2_get_byte</name><argument_list pos:start="175:84" pos:end="175:87">(<argument pos:start="175:85" pos:end="175:86"><expr pos:start="175:85" pos:end="175:86"><name pos:start="175:85" pos:end="175:86">gb</name></expr></argument>)</argument_list></call> <operator pos:start="175:89" pos:end="175:90">&lt;&lt;</operator> <literal type="number" pos:start="175:92" pos:end="175:92">8</literal><operator pos:start="175:93" pos:end="175:93">)</operator></expr></argument>, <argument pos:start="175:96" pos:end="175:103"><expr pos:start="175:96" pos:end="175:103"><name pos:start="175:96" pos:end="175:103">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="179:18"><if pos:start="177:9" pos:end="179:18">if <condition pos:start="177:12" pos:end="177:61">(<expr pos:start="177:13" pos:end="177:60"><call pos:start="177:13" pos:end="177:34"><name pos:start="177:13" pos:end="177:30">bytestream2_tell_p</name><argument_list pos:start="177:31" pos:end="177:34">(<argument pos:start="177:32" pos:end="177:33"><expr pos:start="177:32" pos:end="177:33"><name pos:start="177:32" pos:end="177:33">pb</name></expr></argument>)</argument_list></call> <operator pos:start="177:36" pos:end="177:37">==</operator> <call pos:start="177:39" pos:end="177:60"><name pos:start="177:39" pos:end="177:54">bytestream2_tell</name><argument_list pos:start="177:55" pos:end="177:60">(<argument pos:start="177:56" pos:end="177:59"><expr pos:start="177:56" pos:end="177:59"><operator pos:start="177:56" pos:end="177:56">&amp;</operator><name pos:start="177:57" pos:end="177:59">gbc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:18"><block_content pos:start="179:13" pos:end="179:18">

            <break pos:start="179:13" pos:end="179:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="181:9" pos:end="211:9"><if pos:start="181:9" pos:end="197:9">if <condition pos:start="181:12" pos:end="181:75">(<expr pos:start="181:13" pos:end="181:74"><name pos:start="181:13" pos:end="181:15">len</name> <operator pos:start="181:17" pos:end="181:17">&lt;</operator> <literal type="number" pos:start="181:19" pos:end="181:19">5</literal> <operator pos:start="181:21" pos:end="181:22">||</operator> <call pos:start="181:24" pos:end="181:45"><name pos:start="181:24" pos:end="181:41">bytestream2_tell_p</name><argument_list pos:start="181:42" pos:end="181:45">(<argument pos:start="181:43" pos:end="181:44"><expr pos:start="181:43" pos:end="181:44"><name pos:start="181:43" pos:end="181:44">pb</name></expr></argument>)</argument_list></call> <operator pos:start="181:47" pos:end="181:47">-</operator> <call pos:start="181:49" pos:end="181:70"><name pos:start="181:49" pos:end="181:64">bytestream2_tell</name><argument_list pos:start="181:65" pos:end="181:70">(<argument pos:start="181:66" pos:end="181:69"><expr pos:start="181:66" pos:end="181:69"><operator pos:start="181:66" pos:end="181:66">&amp;</operator><name pos:start="181:67" pos:end="181:69">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="181:72" pos:end="181:72">&lt;</operator> <literal type="number" pos:start="181:74" pos:end="181:74">4</literal></expr>)</condition> <block pos:start="181:77" pos:end="197:9">{<block_content pos:start="183:13" pos:end="195:66">

            <expr_stmt pos:start="183:13" pos:end="183:65"><expr pos:start="183:13" pos:end="183:64"><call pos:start="183:13" pos:end="183:64"><name pos:start="183:13" pos:end="183:32">bytestream2_put_byte</name><argument_list pos:start="183:33" pos:end="183:64">(<argument pos:start="183:34" pos:end="183:35"><expr pos:start="183:34" pos:end="183:35"><name pos:start="183:34" pos:end="183:35">pb</name></expr></argument>, <argument pos:start="183:38" pos:end="183:63"><expr pos:start="183:38" pos:end="183:63"><call pos:start="183:38" pos:end="183:63"><name pos:start="183:38" pos:end="183:57">bytestream2_get_byte</name><argument_list pos:start="183:58" pos:end="183:63">(<argument pos:start="183:59" pos:end="183:62"><expr pos:start="183:59" pos:end="183:62"><operator pos:start="183:59" pos:end="183:59">&amp;</operator><name pos:start="183:60" pos:end="183:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:65"><expr pos:start="185:13" pos:end="185:64"><call pos:start="185:13" pos:end="185:64"><name pos:start="185:13" pos:end="185:32">bytestream2_put_byte</name><argument_list pos:start="185:33" pos:end="185:64">(<argument pos:start="185:34" pos:end="185:35"><expr pos:start="185:34" pos:end="185:35"><name pos:start="185:34" pos:end="185:35">pb</name></expr></argument>, <argument pos:start="185:38" pos:end="185:63"><expr pos:start="185:38" pos:end="185:63"><call pos:start="185:38" pos:end="185:63"><name pos:start="185:38" pos:end="185:57">bytestream2_get_byte</name><argument_list pos:start="185:58" pos:end="185:63">(<argument pos:start="185:59" pos:end="185:62"><expr pos:start="185:59" pos:end="185:62"><operator pos:start="185:59" pos:end="185:59">&amp;</operator><name pos:start="185:60" pos:end="185:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:65"><expr pos:start="187:13" pos:end="187:64"><call pos:start="187:13" pos:end="187:64"><name pos:start="187:13" pos:end="187:32">bytestream2_put_byte</name><argument_list pos:start="187:33" pos:end="187:64">(<argument pos:start="187:34" pos:end="187:35"><expr pos:start="187:34" pos:end="187:35"><name pos:start="187:34" pos:end="187:35">pb</name></expr></argument>, <argument pos:start="187:38" pos:end="187:63"><expr pos:start="187:38" pos:end="187:63"><call pos:start="187:38" pos:end="187:63"><name pos:start="187:38" pos:end="187:57">bytestream2_get_byte</name><argument_list pos:start="187:58" pos:end="187:63">(<argument pos:start="187:59" pos:end="187:62"><expr pos:start="187:59" pos:end="187:62"><operator pos:start="187:59" pos:end="187:59">&amp;</operator><name pos:start="187:60" pos:end="187:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <do pos:start="189:13" pos:end="195:66">do <block pos:start="189:16" pos:end="195:13">{<block_content pos:start="191:17" pos:end="193:22">

                <expr_stmt pos:start="191:17" pos:end="191:69"><expr pos:start="191:17" pos:end="191:68"><call pos:start="191:17" pos:end="191:68"><name pos:start="191:17" pos:end="191:36">bytestream2_put_byte</name><argument_list pos:start="191:37" pos:end="191:68">(<argument pos:start="191:38" pos:end="191:39"><expr pos:start="191:38" pos:end="191:39"><name pos:start="191:38" pos:end="191:39">pb</name></expr></argument>, <argument pos:start="191:42" pos:end="191:67"><expr pos:start="191:42" pos:end="191:67"><call pos:start="191:42" pos:end="191:67"><name pos:start="191:42" pos:end="191:61">bytestream2_get_byte</name><argument_list pos:start="191:62" pos:end="191:67">(<argument pos:start="191:63" pos:end="191:66"><expr pos:start="191:63" pos:end="191:66"><operator pos:start="191:63" pos:end="191:63">&amp;</operator><name pos:start="191:64" pos:end="191:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:22"><expr pos:start="193:17" pos:end="193:21"><operator pos:start="193:17" pos:end="193:18">--</operator><name pos:start="193:19" pos:end="193:21">len</name></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="195:21" pos:end="195:65">(<expr pos:start="195:22" pos:end="195:64"><name pos:start="195:22" pos:end="195:24">len</name> <operator pos:start="195:26" pos:end="195:27">&amp;&amp;</operator> <call pos:start="195:29" pos:end="195:60"><name pos:start="195:29" pos:end="195:54">bytestream2_get_bytes_left</name><argument_list pos:start="195:55" pos:end="195:60">(<argument pos:start="195:56" pos:end="195:59"><expr pos:start="195:56" pos:end="195:59"><operator pos:start="195:56" pos:end="195:56">&amp;</operator><name pos:start="195:57" pos:end="195:59">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="195:62" pos:end="195:62">&gt;</operator> <literal type="number" pos:start="195:64" pos:end="195:64">0</literal></expr>)</condition>;</do>

        </block_content>}</block></if> <else pos:start="197:11" pos:end="211:9">else <block pos:start="197:16" pos:end="211:9">{<block_content pos:start="199:13" pos:end="209:66">

            <expr_stmt pos:start="199:13" pos:end="199:65"><expr pos:start="199:13" pos:end="199:64"><call pos:start="199:13" pos:end="199:64"><name pos:start="199:13" pos:end="199:32">bytestream2_put_le32</name><argument_list pos:start="199:33" pos:end="199:64">(<argument pos:start="199:34" pos:end="199:35"><expr pos:start="199:34" pos:end="199:35"><name pos:start="199:34" pos:end="199:35">pb</name></expr></argument>, <argument pos:start="199:38" pos:end="199:63"><expr pos:start="199:38" pos:end="199:63"><call pos:start="199:38" pos:end="199:63"><name pos:start="199:38" pos:end="199:57">bytestream2_get_le32</name><argument_list pos:start="199:58" pos:end="199:63">(<argument pos:start="199:59" pos:end="199:62"><expr pos:start="199:59" pos:end="199:62"><operator pos:start="199:59" pos:end="199:59">&amp;</operator><name pos:start="199:60" pos:end="199:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:18"><expr pos:start="201:13" pos:end="201:17"><name pos:start="201:13" pos:end="201:15">len</name><operator pos:start="201:16" pos:end="201:17">--</operator></expr>;</expr_stmt>

            <do pos:start="203:13" pos:end="209:66">do <block pos:start="203:16" pos:end="209:13">{<block_content pos:start="205:17" pos:end="207:22">

                <expr_stmt pos:start="205:17" pos:end="205:69"><expr pos:start="205:17" pos:end="205:68"><call pos:start="205:17" pos:end="205:68"><name pos:start="205:17" pos:end="205:36">bytestream2_put_byte</name><argument_list pos:start="205:37" pos:end="205:68">(<argument pos:start="205:38" pos:end="205:39"><expr pos:start="205:38" pos:end="205:39"><name pos:start="205:38" pos:end="205:39">pb</name></expr></argument>, <argument pos:start="205:42" pos:end="205:67"><expr pos:start="205:42" pos:end="205:67"><call pos:start="205:42" pos:end="205:67"><name pos:start="205:42" pos:end="205:61">bytestream2_get_byte</name><argument_list pos:start="205:62" pos:end="205:67">(<argument pos:start="205:63" pos:end="205:66"><expr pos:start="205:63" pos:end="205:66"><operator pos:start="205:63" pos:end="205:63">&amp;</operator><name pos:start="205:64" pos:end="205:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:22"><expr pos:start="207:17" pos:end="207:21"><name pos:start="207:17" pos:end="207:19">len</name><operator pos:start="207:20" pos:end="207:21">--</operator></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="209:21" pos:end="209:65">(<expr pos:start="209:22" pos:end="209:64"><name pos:start="209:22" pos:end="209:24">len</name> <operator pos:start="209:26" pos:end="209:27">&amp;&amp;</operator> <call pos:start="209:29" pos:end="209:60"><name pos:start="209:29" pos:end="209:54">bytestream2_get_bytes_left</name><argument_list pos:start="209:55" pos:end="209:60">(<argument pos:start="209:56" pos:end="209:59"><expr pos:start="209:56" pos:end="209:59"><operator pos:start="209:56" pos:end="209:56">&amp;</operator><name pos:start="209:57" pos:end="209:59">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="209:62" pos:end="209:62">&gt;</operator> <literal type="number" pos:start="209:64" pos:end="209:64">0</literal></expr>)</condition>;</do>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
