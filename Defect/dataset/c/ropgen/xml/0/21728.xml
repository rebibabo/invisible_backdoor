<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21728.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:36">qmp_input_get_object</name><parameter_list pos:start="1:37" pos:end="5:64">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:52">QmpInputVisitor</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">qiv</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">name</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:41">bool</name></type> <name pos:start="5:43" pos:end="5:49">consume</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:63"><decl pos:start="5:52" pos:end="5:63"><type pos:start="5:52" pos:end="5:63"><name pos:start="5:52" pos:end="5:56">Error</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier><modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="81:1">{<block_content pos:start="9:5" pos:end="79:15">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">StackObject</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">tos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">QObject</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">qobj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">QObject</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><call pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:20">QSLIST_EMPTY</name><argument_list pos:start="17:21" pos:end="17:33">(<argument pos:start="17:22" pos:end="17:32"><expr pos:start="17:22" pos:end="17:32"><operator pos:start="17:22" pos:end="17:22">&amp;</operator><name pos:start="17:23" pos:end="17:32"><name pos:start="17:23" pos:end="17:25">qiv</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:32">stack</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:36" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:25">

        <comment type="block" pos:start="19:9" pos:end="19:48">/* Starting at root, name is ignored. */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:14">assert</name><argument_list pos:start="21:15" pos:end="21:25">(<argument pos:start="21:16" pos:end="21:24"><expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:18">qiv</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:24">root</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:25">return <expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:18">qiv</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:24">root</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:55">/* We are in a container; find the next element. */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:7">tos</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:35"><name pos:start="31:11" pos:end="31:22">QSLIST_FIRST</name><argument_list pos:start="31:23" pos:end="31:35">(<argument pos:start="31:24" pos:end="31:34"><expr pos:start="31:24" pos:end="31:34"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:27">qiv</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:34">stack</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:8">qobj</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:19"><name pos:start="33:12" pos:end="33:14">tos</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">obj</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><call pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:10">assert</name><argument_list pos:start="35:11" pos:end="35:16">(<argument pos:start="35:12" pos:end="35:15"><expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="75:5"><if pos:start="39:5" pos:end="59:5">if <condition pos:start="39:8" pos:end="39:42">(<expr pos:start="39:9" pos:end="39:41"><call pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:20">qobject_type</name><argument_list pos:start="39:21" pos:end="39:26">(<argument pos:start="39:22" pos:end="39:25"><expr pos:start="39:22" pos:end="39:25"><name pos:start="39:22" pos:end="39:25">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="39:28" pos:end="39:29">==</operator> <name pos:start="39:31" pos:end="39:41">QTYPE_QDICT</name></expr>)</condition> <block pos:start="39:44" pos:end="59:5">{<block_content pos:start="41:9" pos:end="57:9">

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><call pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:14">assert</name><argument_list pos:start="41:15" pos:end="41:20">(<argument pos:start="41:16" pos:end="41:19"><expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:54"><expr pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:53"><name pos:start="43:15" pos:end="43:23">qdict_get</name><argument_list pos:start="43:24" pos:end="43:53">(<argument pos:start="43:25" pos:end="43:46"><expr pos:start="43:25" pos:end="43:46"><call pos:start="43:25" pos:end="43:46"><name pos:start="43:25" pos:end="43:40">qobject_to_qdict</name><argument_list pos:start="43:41" pos:end="43:46">(<argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><name pos:start="43:42" pos:end="43:45">qobj</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:49" pos:end="43:52"><expr pos:start="43:49" pos:end="43:52"><name pos:start="43:49" pos:end="43:52">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:37">(<expr pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">tos</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:18">h</name></name> <operator pos:start="45:20" pos:end="45:21">&amp;&amp;</operator> <name pos:start="45:23" pos:end="45:29">consume</name> <operator pos:start="45:31" pos:end="45:32">&amp;&amp;</operator> <name pos:start="45:34" pos:end="45:36">ret</name></expr>)</condition> <block pos:start="45:39" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:28">

            <decl_stmt pos:start="47:13" pos:end="47:61"><decl pos:start="47:13" pos:end="47:60"><type pos:start="47:13" pos:end="47:16"><name pos:start="47:13" pos:end="47:16">bool</name></type> <name pos:start="47:18" pos:end="47:24">removed</name> <init pos:start="47:26" pos:end="47:60">= <expr pos:start="47:28" pos:end="47:60"><call pos:start="47:28" pos:end="47:60"><name pos:start="47:28" pos:end="47:46">g_hash_table_remove</name><argument_list pos:start="47:47" pos:end="47:60">(<argument pos:start="47:48" pos:end="47:53"><expr pos:start="47:48" pos:end="47:53"><name pos:start="47:48" pos:end="47:53"><name pos:start="47:48" pos:end="47:50">tos</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:53">h</name></name></expr></argument>, <argument pos:start="47:56" pos:end="47:59"><expr pos:start="47:56" pos:end="47:59"><name pos:start="47:56" pos:end="47:59">name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><call pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:18">assert</name><argument_list pos:start="49:19" pos:end="49:27">(<argument pos:start="49:20" pos:end="49:26"><expr pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:26">removed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:17">(<expr pos:start="53:13" pos:end="53:16"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:16">ret</name></expr>)</condition> <block pos:start="53:19" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:59">

            <expr_stmt pos:start="55:13" pos:end="55:59"><expr pos:start="55:13" pos:end="55:58"><call pos:start="55:13" pos:end="55:58"><name pos:start="55:13" pos:end="55:22">error_setg</name><argument_list pos:start="55:23" pos:end="55:58">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">errp</name></expr></argument>, <argument pos:start="55:30" pos:end="55:51"><expr pos:start="55:30" pos:end="55:51"><name pos:start="55:30" pos:end="55:51">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="55:54" pos:end="55:57"><expr pos:start="55:54" pos:end="55:57"><name pos:start="55:54" pos:end="55:57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="75:5">else <block pos:start="59:12" pos:end="75:5">{<block_content pos:start="61:9" pos:end="73:9">

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><call pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:14">assert</name><argument_list pos:start="61:15" pos:end="61:49">(<argument pos:start="61:16" pos:end="61:48"><expr pos:start="61:16" pos:end="61:48"><call pos:start="61:16" pos:end="61:33"><name pos:start="61:16" pos:end="61:27">qobject_type</name><argument_list pos:start="61:28" pos:end="61:33">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="61:35" pos:end="61:36">==</operator> <name pos:start="61:38" pos:end="61:48">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><call pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:14">assert</name><argument_list pos:start="63:15" pos:end="63:21">(<argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><operator pos:start="63:16" pos:end="63:16">!</operator><name pos:start="63:17" pos:end="63:20">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:42"><expr pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:41"><name pos:start="65:15" pos:end="65:29">qlist_entry_obj</name><argument_list pos:start="65:30" pos:end="65:41">(<argument pos:start="65:31" pos:end="65:40"><expr pos:start="65:31" pos:end="65:40"><name pos:start="65:31" pos:end="65:40"><name pos:start="65:31" pos:end="65:33">tos</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:40">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:20"><expr pos:start="67:9" pos:end="67:19"><call pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:14">assert</name><argument_list pos:start="67:15" pos:end="67:19">(<argument pos:start="67:16" pos:end="67:18"><expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:19">consume</name></expr>)</condition> <block pos:start="69:22" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:48">

            <expr_stmt pos:start="71:13" pos:end="71:48"><expr pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:15">tos</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:22">entry</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:47"><name pos:start="71:26" pos:end="71:35">qlist_next</name><argument_list pos:start="71:36" pos:end="71:47">(<argument pos:start="71:37" pos:end="71:46"><expr pos:start="71:37" pos:end="71:46"><name pos:start="71:37" pos:end="71:46"><name pos:start="71:37" pos:end="71:39">tos</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:46">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
