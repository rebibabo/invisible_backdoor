<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18807.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">flic_read_header</name><parameter_list pos:start="1:28" pos:end="3:51">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:50"><decl pos:start="3:29" pos:end="3:50"><type pos:start="3:29" pos:end="3:50"><name pos:start="3:29" pos:end="3:46">AVFormatParameters</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:50">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="177:1">{<block_content pos:start="7:5" pos:end="175:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FlicDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">flic</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:42"><name pos:start="11:19" pos:end="11:24">header</name><index pos:start="11:25" pos:end="11:42">[<expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41">FLIC_HEADER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">speed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">magic_number</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:8">flic</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:13">pts</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:65">/* load the whole header and pull out the width and height */</comment>

    <if_stmt pos:start="27:5" pos:end="29:28"><if pos:start="27:5" pos:end="29:28">if <condition pos:start="27:8" pos:end="27:69">(<expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:18">get_buffer</name><argument_list pos:start="27:19" pos:end="27:48">(<argument pos:start="27:20" pos:end="27:21"><expr pos:start="27:20" pos:end="27:21"><name pos:start="27:20" pos:end="27:21">pb</name></expr></argument>, <argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">header</name></expr></argument>, <argument pos:start="27:32" pos:end="27:47"><expr pos:start="27:32" pos:end="27:47"><name pos:start="27:32" pos:end="27:47">FLIC_HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="27:50" pos:end="27:51">!=</operator> <name pos:start="27:53" pos:end="27:68">FLIC_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:28"><block_content pos:start="29:9" pos:end="29:28">

        <return pos:start="29:9" pos:end="29:28">return <expr pos:start="29:16" pos:end="29:27"><call pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:16">magic_number</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:26">AV_RL16</name><argument_list pos:start="33:27" pos:end="33:38">(<argument pos:start="33:28" pos:end="33:37"><expr pos:start="33:28" pos:end="33:37"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:37"><name pos:start="33:29" pos:end="33:34">header</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:9">speed</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:19">AV_RL32</name><argument_list pos:start="35:20" pos:end="35:34">(<argument pos:start="35:21" pos:end="35:33"><expr pos:start="35:21" pos:end="35:33"><operator pos:start="35:21" pos:end="35:21">&amp;</operator><name pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:27">header</name><index pos:start="35:28" pos:end="35:33">[<expr pos:start="35:29" pos:end="35:32"><literal type="number" pos:start="35:29" pos:end="35:32">0x10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:40">/* initialize the decoder streams */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:6">st</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:28"><name pos:start="41:10" pos:end="41:22">av_new_stream</name><argument_list pos:start="41:23" pos:end="41:28">(<argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><name pos:start="41:24" pos:end="41:24">s</name></expr></argument>, <argument pos:start="41:27" pos:end="41:27"><expr pos:start="41:27" pos:end="41:27"><literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:11">st</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:8">flic</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:28">video_stream_index</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:40"><name pos:start="47:32" pos:end="47:33">st</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:40">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:6">st</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:13">codec</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:25">codec_type</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:44">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:6">st</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:13">codec</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:23">codec_id</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:39">CODEC_ID_FLIC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">codec</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">codec_tag</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="53:32" pos:end="53:46">/* no fourcc */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:13">codec</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">width</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="55:45"><name pos:start="55:24" pos:end="55:30">AV_RL16</name><argument_list pos:start="55:31" pos:end="55:45">(<argument pos:start="55:32" pos:end="55:44"><expr pos:start="55:32" pos:end="55:44"><operator pos:start="55:32" pos:end="55:32">&amp;</operator><name pos:start="55:33" pos:end="55:44"><name pos:start="55:33" pos:end="55:38">header</name><index pos:start="55:39" pos:end="55:44">[<expr pos:start="55:40" pos:end="55:43"><literal type="number" pos:start="55:40" pos:end="55:43">0x08</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:13">codec</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:21">height</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <call pos:start="57:25" pos:end="57:46"><name pos:start="57:25" pos:end="57:31">AV_RL16</name><argument_list pos:start="57:32" pos:end="57:46">(<argument pos:start="57:33" pos:end="57:45"><expr pos:start="57:33" pos:end="57:45"><operator pos:start="57:33" pos:end="57:33">&amp;</operator><name pos:start="57:34" pos:end="57:45"><name pos:start="57:34" pos:end="57:39">header</name><index pos:start="57:40" pos:end="57:45">[<expr pos:start="57:41" pos:end="57:44"><literal type="number" pos:start="57:41" pos:end="57:44">0x0A</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="63:35"><if pos:start="61:5" pos:end="63:35">if <condition pos:start="61:8" pos:end="61:48">(<expr pos:start="61:9" pos:end="61:47"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:25"><name pos:start="61:10" pos:end="61:11">st</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:18">codec</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:25">width</name></name> <operator pos:start="61:27" pos:end="61:28">||</operator> <operator pos:start="61:30" pos:end="61:30">!</operator><name pos:start="61:31" pos:end="61:47"><name pos:start="61:31" pos:end="61:32">st</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:39">codec</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:47">height</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:35"><block_content pos:start="63:9" pos:end="63:35">

        <return pos:start="63:9" pos:end="63:35">return <expr pos:start="63:16" pos:end="63:34"><name pos:start="63:16" pos:end="63:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:50">/* send over the whole 128-byte FLIC header */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:6">st</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:13">codec</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:29">extradata_size</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:48">FLIC_HEADER_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:55"><expr pos:start="71:5" pos:end="71:54"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:6">st</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:13">codec</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:24">extradata</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <call pos:start="71:28" pos:end="71:54"><name pos:start="71:28" pos:end="71:36">av_malloc</name><argument_list pos:start="71:37" pos:end="71:54">(<argument pos:start="71:38" pos:end="71:53"><expr pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:53">FLIC_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:59"><expr pos:start="73:5" pos:end="73:58"><call pos:start="73:5" pos:end="73:58"><name pos:start="73:5" pos:end="73:10">memcpy</name><argument_list pos:start="73:11" pos:end="73:58">(<argument pos:start="73:12" pos:end="73:31"><expr pos:start="73:12" pos:end="73:31"><name pos:start="73:12" pos:end="73:31"><name pos:start="73:12" pos:end="73:13">st</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:20">codec</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:31">extradata</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:39">header</name></expr></argument>, <argument pos:start="73:42" pos:end="73:57"><expr pos:start="73:42" pos:end="73:57"><name pos:start="73:42" pos:end="73:57">FLIC_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:38"><expr pos:start="77:5" pos:end="77:37"><call pos:start="77:5" pos:end="77:37"><name pos:start="77:5" pos:end="77:19">av_set_pts_info</name><argument_list pos:start="77:20" pos:end="77:37">(<argument pos:start="77:21" pos:end="77:22"><expr pos:start="77:21" pos:end="77:22"><name pos:start="77:21" pos:end="77:22">st</name></expr></argument>, <argument pos:start="77:25" pos:end="77:26"><expr pos:start="77:25" pos:end="77:26"><literal type="number" pos:start="77:25" pos:end="77:26">33</literal></expr></argument>, <argument pos:start="77:29" pos:end="77:29"><expr pos:start="77:29" pos:end="77:29"><literal type="number" pos:start="77:29" pos:end="77:29">1</literal></expr></argument>, <argument pos:start="77:32" pos:end="77:36"><expr pos:start="77:32" pos:end="77:36"><literal type="number" pos:start="77:32" pos:end="77:36">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="85:23">/* Time to figure out the framerate: If there is a FLIC chunk magic

     * number at offset 0x10, assume this is from the Bullfrog game,

     * Magic Carpet. */</comment>

    <if_stmt pos:start="87:5" pos:end="165:5"><if pos:start="87:5" pos:end="113:5">if <condition pos:start="87:8" pos:end="87:53">(<expr pos:start="87:9" pos:end="87:52"><call pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:15">AV_RL16</name><argument_list pos:start="87:16" pos:end="87:30">(<argument pos:start="87:17" pos:end="87:29"><expr pos:start="87:17" pos:end="87:29"><operator pos:start="87:17" pos:end="87:17">&amp;</operator><name pos:start="87:18" pos:end="87:29"><name pos:start="87:18" pos:end="87:23">header</name><index pos:start="87:24" pos:end="87:29">[<expr pos:start="87:25" pos:end="87:28"><literal type="number" pos:start="87:25" pos:end="87:28">0x10</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="87:32" pos:end="87:33">==</operator> <name pos:start="87:35" pos:end="87:52">FLIC_CHUNK_MAGIC_1</name></expr>)</condition> <block pos:start="87:55" pos:end="113:5">{<block_content pos:start="91:9" pos:end="109:49">



        <expr_stmt pos:start="91:9" pos:end="91:46"><expr pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:12">flic</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:27">frame_pts_inc</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:45">FLIC_MC_PTS_INC</name></expr>;</expr_stmt>



        <comment type="block" pos:start="95:9" pos:end="95:69">/* rewind the stream since the first chunk is at offset 12 */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><call pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:17">url_fseek</name><argument_list pos:start="97:18" pos:end="97:35">(<argument pos:start="97:19" pos:end="97:20"><expr pos:start="97:19" pos:end="97:20"><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><literal type="number" pos:start="97:23" pos:end="97:24">12</literal></expr></argument>, <argument pos:start="97:27" pos:end="97:34"><expr pos:start="97:27" pos:end="97:34"><name pos:start="97:27" pos:end="97:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="101:9" pos:end="101:53">/* send over abbreviated FLIC header chunk */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><call pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:15">av_free</name><argument_list pos:start="103:16" pos:end="103:37">(<argument pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:18">st</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:25">codec</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:36">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:10">st</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:33">extradata_size</name></name> <operator pos:start="105:35" pos:end="105:35">=</operator> <literal type="number" pos:start="105:37" pos:end="105:38">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:45"><expr pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:10">st</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:17">codec</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:28">extradata</name></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <call pos:start="107:32" pos:end="107:44"><name pos:start="107:32" pos:end="107:40">av_malloc</name><argument_list pos:start="107:41" pos:end="107:44">(<argument pos:start="107:42" pos:end="107:43"><expr pos:start="107:42" pos:end="107:43"><literal type="number" pos:start="107:42" pos:end="107:43">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:49"><expr pos:start="109:9" pos:end="109:48"><call pos:start="109:9" pos:end="109:48"><name pos:start="109:9" pos:end="109:14">memcpy</name><argument_list pos:start="109:15" pos:end="109:48">(<argument pos:start="109:16" pos:end="109:35"><expr pos:start="109:16" pos:end="109:35"><name pos:start="109:16" pos:end="109:35"><name pos:start="109:16" pos:end="109:17">st</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:24">codec</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:35">extradata</name></name></expr></argument>, <argument pos:start="109:38" pos:end="109:43"><expr pos:start="109:38" pos:end="109:43"><name pos:start="109:38" pos:end="109:43">header</name></expr></argument>, <argument pos:start="109:46" pos:end="109:47"><expr pos:start="109:46" pos:end="109:47"><literal type="number" pos:start="109:46" pos:end="109:47">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="135:5">else if <condition pos:start="113:15" pos:end="113:49">(<expr pos:start="113:16" pos:end="113:48"><name pos:start="113:16" pos:end="113:27">magic_number</name> <operator pos:start="113:29" pos:end="113:30">==</operator> <name pos:start="113:32" pos:end="113:48">FLIC_FILE_MAGIC_1</name></expr>)</condition> <block pos:start="113:51" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:45">

        <comment type="block" pos:start="115:9" pos:end="131:11">/*

         * in this case, the speed (n) is number of 1/70s ticks between frames:

         *

         *    pts        n * frame #

         *  --------  =  -----------  =&gt; pts = n * (90000/70) * frame #

         *   90000           70

         *

         *  therefore, the frame pts increment = n * 1285.7

         */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:45"><expr pos:start="133:9" pos:end="133:44"><name pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:12">flic</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:27">frame_pts_inc</name></name> <operator pos:start="133:29" pos:end="133:29">=</operator> <name pos:start="133:31" pos:end="133:35">speed</name> <operator pos:start="133:37" pos:end="133:37">*</operator> <literal type="number" pos:start="133:39" pos:end="133:44">1285.7</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="135:7" pos:end="159:5">else if <condition pos:start="135:15" pos:end="137:51">(<expr pos:start="135:16" pos:end="137:50"><operator pos:start="135:16" pos:end="135:16">(</operator><name pos:start="135:17" pos:end="135:28">magic_number</name> <operator pos:start="135:30" pos:end="135:31">==</operator> <name pos:start="135:33" pos:end="135:49">FLIC_FILE_MAGIC_2</name><operator pos:start="135:50" pos:end="135:50">)</operator> <operator pos:start="135:52" pos:end="135:53">||</operator>

               <operator pos:start="137:16" pos:end="137:16">(</operator><name pos:start="137:17" pos:end="137:28">magic_number</name> <operator pos:start="137:30" pos:end="137:31">==</operator> <name pos:start="137:33" pos:end="137:49">FLIC_FILE_MAGIC_3</name><operator pos:start="137:50" pos:end="137:50">)</operator></expr>)</condition> <block pos:start="137:53" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:41">

        <comment type="block" pos:start="139:9" pos:end="155:11">/*

         * in this case, the speed (n) is number of milliseconds between frames:

         *

         *    pts        n * frame #

         *  --------  =  -----------  =&gt; pts = n * 90 * frame #

         *   90000          1000

         *

         *  therefore, the frame pts increment = n * 90

         */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:41"><expr pos:start="157:9" pos:end="157:40"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:12">flic</name><operator pos:start="157:13" pos:end="157:14">-&gt;</operator><name pos:start="157:15" pos:end="157:27">frame_pts_inc</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:35">speed</name> <operator pos:start="157:37" pos:end="157:37">*</operator> <literal type="number" pos:start="157:39" pos:end="157:40">90</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="159:7" pos:end="165:5">else <block pos:start="159:12" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:35">

        <expr_stmt pos:start="161:9" pos:end="161:79"><expr pos:start="161:9" pos:end="161:78"><call pos:start="161:9" pos:end="161:78"><name pos:start="161:9" pos:end="161:14">av_log</name><argument_list pos:start="161:15" pos:end="161:78">(<argument pos:start="161:16" pos:end="161:16"><expr pos:start="161:16" pos:end="161:16"><name pos:start="161:16" pos:end="161:16">s</name></expr></argument>, <argument pos:start="161:19" pos:end="161:29"><expr pos:start="161:19" pos:end="161:29"><name pos:start="161:19" pos:end="161:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="161:32" pos:end="161:77"><expr pos:start="161:32" pos:end="161:77"><literal type="string" pos:start="161:32" pos:end="161:77">"Invalid or unsupported magic chunk in file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="163:9" pos:end="163:35">return <expr pos:start="163:16" pos:end="163:34"><name pos:start="163:16" pos:end="163:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="169:5" pos:end="171:51"><if pos:start="169:5" pos:end="171:51">if <condition pos:start="169:8" pos:end="169:33">(<expr pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:12">flic</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:27">frame_pts_inc</name></name> <operator pos:start="169:29" pos:end="169:30">==</operator> <literal type="number" pos:start="169:32" pos:end="169:32">0</literal></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:51"><block_content pos:start="171:9" pos:end="171:51">

        <expr_stmt pos:start="171:9" pos:end="171:51"><expr pos:start="171:9" pos:end="171:50"><name pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:12">flic</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:27">frame_pts_inc</name></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <name pos:start="171:31" pos:end="171:50">FLIC_DEFAULT_PTS_INC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
