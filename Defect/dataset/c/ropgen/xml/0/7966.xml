<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7966.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:38">qemu_rbd_parse_clientname</name><parameter_list pos:start="1:39" pos:end="1:74">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">conf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:73"><decl pos:start="1:58" pos:end="1:73"><type pos:start="1:58" pos:end="1:73"><name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:73">clientname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:16">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name> <init pos:start="5:19" pos:end="5:24">= <expr pos:start="5:21" pos:end="5:24"><name pos:start="5:21" pos:end="5:24">conf</name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="49:5">while <condition pos:start="9:11" pos:end="9:14">(<expr pos:start="9:12" pos:end="9:13"><operator pos:start="9:12" pos:end="9:12">*</operator><name pos:start="9:13" pos:end="9:13">p</name></expr>)</condition> <block pos:start="9:16" pos:end="49:5">{<block_content pos:start="11:9" pos:end="47:20">

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:41"><decl pos:start="13:9" pos:end="13:40"><type pos:start="13:9" pos:end="13:20"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:18">char</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">end</name> <init pos:start="13:25" pos:end="13:40">= <expr pos:start="13:27" pos:end="13:40"><call pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:32">strchr</name><argument_list pos:start="13:33" pos:end="13:40">(<argument pos:start="13:34" pos:end="13:34"><expr pos:start="13:34" pos:end="13:34"><name pos:start="13:34" pos:end="13:34">p</name></expr></argument>, <argument pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><literal type="char" pos:start="13:37" pos:end="13:39">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">end</name></expr>)</condition> <block pos:start="17:18" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:26">

            <expr_stmt pos:start="19:13" pos:end="19:26"><expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:15">len</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:21">end</name> <operator pos:start="19:23" pos:end="19:23">-</operator> <name pos:start="19:25" pos:end="19:25">p</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:28">

            <expr_stmt pos:start="23:13" pos:end="23:28"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:15">len</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:27"><name pos:start="23:19" pos:end="23:24">strlen</name><argument_list pos:start="23:25" pos:end="23:27">(<argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="29:9" pos:end="39:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:38">(<expr pos:start="29:13" pos:end="29:37"><call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:19">strncmp</name><argument_list pos:start="29:20" pos:end="29:32">(<argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><name pos:start="29:21" pos:end="29:21">p</name></expr></argument>, <argument pos:start="29:24" pos:end="29:28"><expr pos:start="29:24" pos:end="29:28"><literal type="string" pos:start="29:24" pos:end="29:28">"id="</literal></expr></argument>, <argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">3</literal></expr></argument>)</argument_list></call> <operator pos:start="29:34" pos:end="29:35">==</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>)</condition> <block pos:start="29:40" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:30">

            <expr_stmt pos:start="31:13" pos:end="31:21"><expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:18">-=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><call pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:19">strncpy</name><argument_list pos:start="33:20" pos:end="33:43">(<argument pos:start="33:21" pos:end="33:30"><expr pos:start="33:21" pos:end="33:30"><name pos:start="33:21" pos:end="33:30">clientname</name></expr></argument>, <argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:33">p</name> <operator pos:start="33:35" pos:end="33:35">+</operator> <literal type="number" pos:start="33:37" pos:end="33:37">3</literal></expr></argument>, <argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:35"><expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:22">clientname</name><index pos:start="35:23" pos:end="35:27">[<expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">len</name></expr>]</index></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <literal type="char" pos:start="35:31" pos:end="35:34">'\0'</literal></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:30">return <expr pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:29">clientname</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:24">(<expr pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:15">end</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <name pos:start="41:20" pos:end="41:23">NULL</name></expr>)</condition> <block pos:start="41:26" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">p</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:15">end</name> <operator pos:start="47:17" pos:end="47:17">+</operator> <literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
