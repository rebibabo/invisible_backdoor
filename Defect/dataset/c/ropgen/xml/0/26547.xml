<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26547.c" pos:tabs="8"><function pos:start="1:1" pos:end="439:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vga_draw_graphic</name><parameter_list pos:start="1:29" pos:end="1:64">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:43">VGACommonState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:63">full_update</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="439:1">{<block_content pos:start="5:5" pos:end="439:1">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">y1</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">y</name></decl>, <decl pos:start="5:16" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:21">update</name></decl>, <decl pos:start="5:24" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:31">linesize</name></decl>, <decl pos:start="5:34" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:40">y_start</name></decl>, <decl pos:start="5:43" pos:end="5:53"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:43" pos:end="5:53">double_scan</name></decl>, <decl pos:start="5:56" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:56" pos:end="5:59">mask</name></decl>, <decl pos:start="5:62" pos:end="5:66"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:62" pos:end="5:66">depth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">height</name></decl>, <decl pos:start="7:24" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:36">shift_control</name></decl>, <decl pos:start="7:39" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:39" pos:end="7:49">line_offset</name></decl>, <decl pos:start="7:52" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:52" pos:end="7:57">bwidth</name></decl>, <decl pos:start="7:60" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:60" pos:end="7:63">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">ram_addr_t</name></type> <name pos:start="9:16" pos:end="9:20">page0</name></decl>, <decl pos:start="9:23" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:14"/><name pos:start="9:23" pos:end="9:27">page1</name></decl>, <decl pos:start="9:30" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:14"/><name pos:start="9:30" pos:end="9:37">page_min</name></decl>, <decl pos:start="9:40" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:14"/><name pos:start="9:40" pos:end="9:47">page_max</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">disp_width</name></decl>, <decl pos:start="11:21" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:30">multi_scan</name></decl>, <decl pos:start="11:33" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:33" pos:end="11:41">multi_run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:14">v</name></decl>, <decl pos:start="15:17" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:17" pos:end="15:21">addr1</name></decl>, <decl pos:start="15:24" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:24" pos:end="15:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:22">vga_draw_line_func</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:37">vga_draw_line</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:15">full_update</name> <operator pos:start="21:17" pos:end="21:18">|=</operator> <call pos:start="21:20" pos:end="21:41"><name pos:start="21:20" pos:end="21:38">update_basic_params</name><argument_list pos:start="21:39" pos:end="21:41">(<argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:33"><if pos:start="25:5" pos:end="27:33">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:20">full_update</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:33"><block_content pos:start="27:9" pos:end="27:33">

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:29">vga_sync_dirty_bitmap</name><argument_list pos:start="27:30" pos:end="27:32">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:21">get_resolution</name></name><argument_list pos:start="31:22" pos:end="31:41">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">s</name></expr></argument>, <argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:31">width</name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:40">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:14">disp_width</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:22">width</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:17">shift_control</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:40"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:26">gr</name><index pos:start="37:27" pos:end="37:40">[<expr pos:start="37:28" pos:end="37:39"><name pos:start="37:28" pos:end="37:39">VGA_GFX_MODE</name></expr>]</index></name> <operator pos:start="37:42" pos:end="37:43">&gt;&gt;</operator> <literal type="number" pos:start="37:45" pos:end="37:45">5</literal><operator pos:start="37:46" pos:end="37:46">)</operator> <operator pos:start="37:48" pos:end="37:48">&amp;</operator> <literal type="number" pos:start="37:50" pos:end="37:50">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:15">double_scan</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <operator pos:start="39:19" pos:end="39:19">(</operator><name pos:start="39:20" pos:end="39:43"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:24">cr</name><index pos:start="39:25" pos:end="39:43">[<expr pos:start="39:26" pos:end="39:42"><name pos:start="39:26" pos:end="39:42">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="39:45" pos:end="39:46">&gt;&gt;</operator> <literal type="number" pos:start="39:48" pos:end="39:48">7</literal><operator pos:start="39:49" pos:end="39:49">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:27">(<expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:21">shift_control</name> <operator pos:start="41:23" pos:end="41:24">!=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>)</condition> <block pos:start="41:29" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:16">

        <expr_stmt pos:start="43:9" pos:end="45:16"><expr pos:start="43:9" pos:end="45:15"><name pos:start="43:9" pos:end="43:18">multi_scan</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><operator pos:start="43:23" pos:end="43:23">(</operator><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:48"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:29">cr</name><index pos:start="43:30" pos:end="43:48">[<expr pos:start="43:31" pos:end="43:47"><name pos:start="43:31" pos:end="43:47">VGA_CRTC_MAX_SCAN</name></expr>]</index></name> <operator pos:start="43:50" pos:end="43:50">&amp;</operator> <literal type="number" pos:start="43:52" pos:end="43:55">0x1f</literal><operator pos:start="43:56" pos:end="43:56">)</operator> <operator pos:start="43:58" pos:end="43:58">+</operator> <literal type="number" pos:start="43:60" pos:end="43:60">1</literal><operator pos:start="43:61" pos:end="43:61">)</operator> <operator pos:start="43:63" pos:end="43:64">&lt;&lt;</operator> <name pos:start="43:66" pos:end="43:76">double_scan</name><operator pos:start="43:77" pos:end="43:77">)</operator>

            <operator pos:start="45:13" pos:end="45:13">-</operator> <literal type="number" pos:start="45:15" pos:end="45:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="55:5">else <block pos:start="47:12" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:33">

        <comment type="block" pos:start="49:9" pos:end="49:49">/* in CGA modes, multi_scan is ignored */</comment>

        <comment type="block" pos:start="51:9" pos:end="51:34">/* XXX: is it correct ? */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:18">multi_scan</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:32">double_scan</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:13">multi_run</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:26">multi_scan</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="61:38">(<expr pos:start="59:9" pos:end="61:37"><name pos:start="59:9" pos:end="59:21">shift_control</name> <operator pos:start="59:23" pos:end="59:24">!=</operator> <name pos:start="59:26" pos:end="59:41"><name pos:start="59:26" pos:end="59:26">s</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:41">shift_control</name></name> <operator pos:start="59:43" pos:end="59:44">||</operator>

        <name pos:start="61:9" pos:end="61:19">double_scan</name> <operator pos:start="61:21" pos:end="61:22">!=</operator> <name pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:37">double_scan</name></name></expr>)</condition> <block pos:start="61:40" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:37">

        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:19">full_update</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <literal type="number" pos:start="63:23" pos:end="63:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:24">shift_control</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:40">shift_control</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:37"><expr pos:start="67:9" pos:end="67:36"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:22">double_scan</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:36">double_scan</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="89:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:27">(<expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:21">shift_control</name> <operator pos:start="73:23" pos:end="73:24">==</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>)</condition> <block pos:start="73:29" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:9">

        <if_stmt pos:start="75:9" pos:end="79:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:42">(<expr pos:start="75:13" pos:end="75:41"><name pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:17">sr</name><index pos:start="75:18" pos:end="75:37">[<expr pos:start="75:19" pos:end="75:36"><name pos:start="75:19" pos:end="75:36">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="75:39" pos:end="75:39">&amp;</operator> <literal type="number" pos:start="75:41" pos:end="75:41">8</literal></expr>)</condition> <block pos:start="75:44" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:29">

            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:22">disp_width</name> <operator pos:start="77:24" pos:end="77:26">&lt;&lt;=</operator> <literal type="number" pos:start="77:28" pos:end="77:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="89:5">else if <condition pos:start="81:15" pos:end="81:34">(<expr pos:start="81:16" pos:end="81:33"><name pos:start="81:16" pos:end="81:28">shift_control</name> <operator pos:start="81:30" pos:end="81:31">==</operator> <literal type="number" pos:start="81:33" pos:end="81:33">1</literal></expr>)</condition> <block pos:start="81:36" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:9">

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:42">(<expr pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:17">sr</name><index pos:start="83:18" pos:end="83:37">[<expr pos:start="83:19" pos:end="83:36"><name pos:start="83:19" pos:end="83:36">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="83:39" pos:end="83:39">&amp;</operator> <literal type="number" pos:start="83:41" pos:end="83:41">8</literal></expr>)</condition> <block pos:start="83:44" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:29">

            <expr_stmt pos:start="85:13" pos:end="85:29"><expr pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:22">disp_width</name> <operator pos:start="85:24" pos:end="85:26">&lt;&lt;=</operator> <literal type="number" pos:start="85:28" pos:end="85:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:26"><expr pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:9">depth</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <call pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:22">get_bpp</name></name><argument_list pos:start="93:23" pos:end="93:25">(<argument pos:start="93:24" pos:end="93:24"><expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="439:1"><if pos:start="95:5" pos:end="439:1">if <condition pos:start="95:8" pos:end="101:31">(<expr pos:start="95:9" pos:end="101:30"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:22">line_offset</name></name> <operator pos:start="95:24" pos:end="95:25">!=</operator> <name pos:start="95:27" pos:end="95:45"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:45">last_line_offset</name></name> <operator pos:start="95:47" pos:end="95:48">||</operator>

        <name pos:start="97:9" pos:end="97:18">disp_width</name> <operator pos:start="97:20" pos:end="97:21">!=</operator> <name pos:start="97:23" pos:end="97:35"><name pos:start="97:23" pos:end="97:23">s</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:35">last_width</name></name> <operator pos:start="97:37" pos:end="97:38">||</operator>

        <name pos:start="99:9" pos:end="99:14">height</name> <operator pos:start="99:16" pos:end="99:17">!=</operator> <name pos:start="99:19" pos:end="99:32"><name pos:start="99:19" pos:end="99:19">s</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:32">last_height</name></name> <operator pos:start="99:34" pos:end="99:35">||</operator>

        <name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:21">last_depth</name></name> <operator pos:start="101:23" pos:end="101:24">!=</operator> <name pos:start="101:26" pos:end="101:30">depth</name></expr>)</condition> <block pos:start="101:33" pos:end="439:1">{<block_content pos:start="105:9" pos:end="437:64">

<cpp:if pos:start="103:1" pos:end="103:68">#<cpp:directive pos:start="103:2" pos:end="103:3">if</cpp:directive> <expr pos:start="103:5" pos:end="103:68"><call pos:start="103:5" pos:end="103:33"><name pos:start="103:5" pos:end="103:11">defined</name><argument_list pos:start="103:12" pos:end="103:33">(<argument pos:start="103:13" pos:end="103:32"><expr pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:32">HOST_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call> <operator pos:start="103:35" pos:end="103:36">==</operator> <call pos:start="103:38" pos:end="103:68"><name pos:start="103:38" pos:end="103:44">defined</name><argument_list pos:start="103:45" pos:end="103:68">(<argument pos:start="103:46" pos:end="103:67"><expr pos:start="103:46" pos:end="103:67"><name pos:start="103:46" pos:end="103:67">TARGET_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="105:9" pos:end="167:5"><if pos:start="105:9" pos:end="149:5">if <condition pos:start="105:12" pos:end="105:39">(<expr pos:start="105:13" pos:end="105:38"><name pos:start="105:13" pos:end="105:17">depth</name> <operator pos:start="105:19" pos:end="105:20">==</operator> <literal type="number" pos:start="105:22" pos:end="105:23">16</literal> <operator pos:start="105:25" pos:end="105:26">||</operator> <name pos:start="105:28" pos:end="105:32">depth</name> <operator pos:start="105:34" pos:end="105:35">==</operator> <literal type="number" pos:start="105:37" pos:end="105:38">32</literal></expr>)</condition> <block pos:start="105:41" pos:end="149:5">{<block_content pos:start="109:9" pos:end="147:24">

<cpp:else pos:start="107:1" pos:end="107:5">#<cpp:directive pos:start="107:2" pos:end="107:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="109:9" pos:end="133:9"><if pos:start="109:9" pos:end="129:9">if <condition pos:start="109:12" pos:end="109:24">(<expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:17">depth</name> <operator pos:start="109:19" pos:end="109:20">==</operator> <literal type="number" pos:start="109:22" pos:end="109:23">32</literal></expr>)</condition> <block pos:start="109:26" pos:end="129:9">{<block_content pos:start="113:13" pos:end="127:34">

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="113:13" pos:end="113:44"><expr pos:start="113:13" pos:end="113:43"><call pos:start="113:13" pos:end="113:43"><name pos:start="113:13" pos:end="113:36">qemu_free_displaysurface</name><argument_list pos:start="113:37" pos:end="113:43">(<argument pos:start="113:38" pos:end="113:42"><expr pos:start="113:38" pos:end="113:42"><name pos:start="113:38" pos:end="113:42"><name pos:start="113:38" pos:end="113:38">s</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:42">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="122:0"><expr pos:start="115:13" pos:end="119:54"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:17">ds</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:26">surface</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <call pos:start="115:30" pos:end="119:54"><name pos:start="115:30" pos:end="115:60">qemu_create_displaysurface_from</name><argument_list pos:start="115:61" pos:end="119:54">(<argument pos:start="115:62" pos:end="115:71"><expr pos:start="115:62" pos:end="115:71"><name pos:start="115:62" pos:end="115:71">disp_width</name></expr></argument>, <argument pos:start="115:74" pos:end="115:79"><expr pos:start="115:74" pos:end="115:79"><name pos:start="115:74" pos:end="115:79">height</name></expr></argument>, <argument pos:start="115:82" pos:end="115:86"><expr pos:start="115:82" pos:end="115:86"><name pos:start="115:82" pos:end="115:86">depth</name></expr></argument>,

                    <argument pos:start="117:21" pos:end="117:34"><expr pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:34">line_offset</name></name></expr></argument>,

                    <argument pos:start="119:21" pos:end="119:53"><expr pos:start="119:21" pos:end="119:53"><name pos:start="119:21" pos:end="119:31"><name pos:start="119:21" pos:end="119:21">s</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:31">vram_ptr</name></name> <operator pos:start="119:33" pos:end="119:33">+</operator> <operator pos:start="119:35" pos:end="119:35">(</operator><name pos:start="119:36" pos:end="119:48"><name pos:start="119:36" pos:end="119:36">s</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:48">start_addr</name></name> <operator pos:start="119:50" pos:end="119:50">*</operator> <literal type="number" pos:start="119:52" pos:end="119:52">4</literal><operator pos:start="119:53" pos:end="119:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="121:1" pos:end="121:68">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:68"><call pos:start="121:5" pos:end="121:33"><name pos:start="121:5" pos:end="121:11">defined</name><argument_list pos:start="121:12" pos:end="121:33">(<argument pos:start="121:13" pos:end="121:32"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:32">HOST_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call> <operator pos:start="121:35" pos:end="121:36">!=</operator> <call pos:start="121:38" pos:end="121:68"><name pos:start="121:38" pos:end="121:44">defined</name><argument_list pos:start="121:45" pos:end="121:68">(<argument pos:start="121:46" pos:end="121:67"><expr pos:start="121:46" pos:end="121:67"><name pos:start="121:46" pos:end="121:67">TARGET_WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="123:13" pos:end="126:0"><expr pos:start="123:13" pos:end="123:77"><name pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:17">ds</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:26">surface</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:30">pf</name></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <call pos:start="123:34" pos:end="123:77"><name pos:start="123:34" pos:end="123:70">qemu_different_endianness_pixelformat</name><argument_list pos:start="123:71" pos:end="123:77">(<argument pos:start="123:72" pos:end="123:76"><expr pos:start="123:72" pos:end="123:76"><name pos:start="123:72" pos:end="123:76">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><call pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:26">dpy_gfx_resize</name><argument_list pos:start="127:27" pos:end="127:33">(<argument pos:start="127:28" pos:end="127:32"><expr pos:start="127:28" pos:end="127:32"><name pos:start="127:28" pos:end="127:32"><name pos:start="127:28" pos:end="127:28">s</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:32">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="129:11" pos:end="133:9">else <block pos:start="129:16" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:59">

            <expr_stmt pos:start="131:13" pos:end="131:59"><expr pos:start="131:13" pos:end="131:58"><call pos:start="131:13" pos:end="131:58"><name pos:start="131:13" pos:end="131:31">qemu_console_resize</name><argument_list pos:start="131:32" pos:end="131:58">(<argument pos:start="131:33" pos:end="131:37"><expr pos:start="131:33" pos:end="131:37"><name pos:start="131:33" pos:end="131:37"><name pos:start="131:33" pos:end="131:33">s</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:37">ds</name></name></expr></argument>, <argument pos:start="131:40" pos:end="131:49"><expr pos:start="131:40" pos:end="131:49"><name pos:start="131:40" pos:end="131:49">disp_width</name></expr></argument>, <argument pos:start="131:52" pos:end="131:57"><expr pos:start="131:52" pos:end="131:57"><name pos:start="131:52" pos:end="131:57">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:25">last_scr_width</name></name> <operator pos:start="135:27" pos:end="135:27">=</operator> <name pos:start="135:29" pos:end="135:38">disp_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:36"><expr pos:start="137:9" pos:end="137:35"><name pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:26">last_scr_height</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:35">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:35"><expr pos:start="139:9" pos:end="139:34"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:21">last_width</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:34">disp_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:32"><expr pos:start="141:9" pos:end="141:31"><name pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:22">last_height</name></name> <operator pos:start="141:24" pos:end="141:24">=</operator> <name pos:start="141:26" pos:end="141:31">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:45"><expr pos:start="143:9" pos:end="143:44"><name pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:27">last_line_offset</name></name> <operator pos:start="143:29" pos:end="143:29">=</operator> <name pos:start="143:31" pos:end="143:44"><name pos:start="143:31" pos:end="143:31">s</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:44">line_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:30"><expr pos:start="145:9" pos:end="145:29"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:21">last_depth</name></name> <operator pos:start="145:23" pos:end="145:23">=</operator> <name pos:start="145:25" pos:end="145:29">depth</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:24"><expr pos:start="147:9" pos:end="147:23"><name pos:start="147:9" pos:end="147:19">full_update</name> <operator pos:start="147:21" pos:end="147:21">=</operator> <literal type="number" pos:start="147:23" pos:end="147:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="167:5">else if <condition pos:start="149:15" pos:end="153:39">(<expr pos:start="149:16" pos:end="153:38"><call pos:start="149:16" pos:end="149:47"><name pos:start="149:16" pos:end="149:31">is_buffer_shared</name><argument_list pos:start="149:32" pos:end="149:47">(<argument pos:start="149:33" pos:end="149:46"><expr pos:start="149:33" pos:end="149:46"><name pos:start="149:33" pos:end="149:46"><name pos:start="149:33" pos:end="149:33">s</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:37">ds</name><operator pos:start="149:38" pos:end="149:39">-&gt;</operator><name pos:start="149:40" pos:end="149:46">surface</name></name></expr></argument>)</argument_list></call> <operator pos:start="149:49" pos:end="149:50">&amp;&amp;</operator>

               <operator pos:start="151:16" pos:end="151:16">(</operator><name pos:start="151:17" pos:end="151:27">full_update</name> <operator pos:start="151:29" pos:end="151:30">||</operator> <call pos:start="151:32" pos:end="151:49"><name pos:start="151:32" pos:end="151:42">ds_get_data</name><argument_list pos:start="151:43" pos:end="151:49">(<argument pos:start="151:44" pos:end="151:48"><expr pos:start="151:44" pos:end="151:48"><name pos:start="151:44" pos:end="151:48"><name pos:start="151:44" pos:end="151:44">s</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:48">ds</name></name></expr></argument>)</argument_list></call> <operator pos:start="151:51" pos:end="151:52">!=</operator> <name pos:start="151:54" pos:end="151:64"><name pos:start="151:54" pos:end="151:54">s</name><operator pos:start="151:55" pos:end="151:56">-&gt;</operator><name pos:start="151:57" pos:end="151:64">vram_ptr</name></name>

                <operator pos:start="153:17" pos:end="153:17">+</operator> <operator pos:start="153:19" pos:end="153:19">(</operator><name pos:start="153:20" pos:end="153:32"><name pos:start="153:20" pos:end="153:20">s</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:32">start_addr</name></name> <operator pos:start="153:34" pos:end="153:34">*</operator> <literal type="number" pos:start="153:36" pos:end="153:36">4</literal><operator pos:start="153:37" pos:end="153:37">)</operator><operator pos:start="153:38" pos:end="153:38">)</operator></expr>)</condition> <block pos:start="153:41" pos:end="167:5">{<block_content pos:start="155:9" pos:end="165:31">

        <expr_stmt pos:start="155:9" pos:end="155:40"><expr pos:start="155:9" pos:end="155:39"><call pos:start="155:9" pos:end="155:39"><name pos:start="155:9" pos:end="155:32">qemu_free_displaysurface</name><argument_list pos:start="155:33" pos:end="155:39">(<argument pos:start="155:34" pos:end="155:38"><expr pos:start="155:34" pos:end="155:38"><name pos:start="155:34" pos:end="155:38"><name pos:start="155:34" pos:end="155:34">s</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:38">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="163:51"><expr pos:start="157:9" pos:end="163:50"><name pos:start="157:9" pos:end="157:22"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:13">ds</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:22">surface</name></name> <operator pos:start="157:24" pos:end="157:24">=</operator> <call pos:start="157:26" pos:end="163:50"><name pos:start="157:26" pos:end="157:56">qemu_create_displaysurface_from</name><argument_list pos:start="157:57" pos:end="163:50">(<argument pos:start="157:58" pos:end="157:67"><expr pos:start="157:58" pos:end="157:67"><name pos:start="157:58" pos:end="157:67">disp_width</name></expr></argument>,

                <argument pos:start="159:17" pos:end="159:22"><expr pos:start="159:17" pos:end="159:22"><name pos:start="159:17" pos:end="159:22">height</name></expr></argument>, <argument pos:start="159:25" pos:end="159:29"><expr pos:start="159:25" pos:end="159:29"><name pos:start="159:25" pos:end="159:29">depth</name></expr></argument>,

                <argument pos:start="161:17" pos:end="161:30"><expr pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:30">line_offset</name></name></expr></argument>,

                <argument pos:start="163:17" pos:end="163:49"><expr pos:start="163:17" pos:end="163:49"><name pos:start="163:17" pos:end="163:27"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">vram_ptr</name></name> <operator pos:start="163:29" pos:end="163:29">+</operator> <operator pos:start="163:31" pos:end="163:31">(</operator><name pos:start="163:32" pos:end="163:44"><name pos:start="163:32" pos:end="163:32">s</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:44">start_addr</name></name> <operator pos:start="163:46" pos:end="163:46">*</operator> <literal type="number" pos:start="163:48" pos:end="163:48">4</literal><operator pos:start="163:49" pos:end="163:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:31"><expr pos:start="165:9" pos:end="165:30"><call pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:23">dpy_gfx_setdata</name><argument_list pos:start="165:24" pos:end="165:30">(<argument pos:start="165:25" pos:end="165:29"><expr pos:start="165:25" pos:end="165:29"><name pos:start="165:25" pos:end="165:29"><name pos:start="165:25" pos:end="165:25">s</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:29">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="171:5" pos:end="173:55"><expr pos:start="171:5" pos:end="173:54"><name pos:start="171:5" pos:end="171:19"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:19">rgb_to_pixel</name></name> <operator pos:start="171:21" pos:end="171:21">=</operator>

        <name pos:start="173:9" pos:end="173:54"><name pos:start="173:9" pos:end="173:30">rgb_to_pixel_dup_table</name><index pos:start="173:31" pos:end="173:54">[<expr pos:start="173:32" pos:end="173:53"><call pos:start="173:32" pos:end="173:53"><name pos:start="173:32" pos:end="173:46">get_depth_index</name><argument_list pos:start="173:47" pos:end="173:53">(<argument pos:start="173:48" pos:end="173:52"><expr pos:start="173:48" pos:end="173:52"><name pos:start="173:48" pos:end="173:52"><name pos:start="173:48" pos:end="173:48">s</name><operator pos:start="173:49" pos:end="173:50">-&gt;</operator><name pos:start="173:51" pos:end="173:52">ds</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="177:5" pos:end="269:5"><if pos:start="177:5" pos:end="193:5">if <condition pos:start="177:8" pos:end="177:27">(<expr pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:21">shift_control</name> <operator pos:start="177:23" pos:end="177:24">==</operator> <literal type="number" pos:start="177:26" pos:end="177:26">0</literal></expr>)</condition> <block pos:start="177:29" pos:end="193:5">{<block_content pos:start="179:9" pos:end="191:17">

        <expr_stmt pos:start="179:9" pos:end="179:43"><expr pos:start="179:9" pos:end="179:42"><name pos:start="179:9" pos:end="179:19">full_update</name> <operator pos:start="179:21" pos:end="179:22">|=</operator> <call pos:start="179:24" pos:end="179:42"><name pos:start="179:24" pos:end="179:39">update_palette16</name><argument_list pos:start="179:40" pos:end="179:42">(<argument pos:start="179:41" pos:end="179:41"><expr pos:start="179:41" pos:end="179:41"><name pos:start="179:41" pos:end="179:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="189:9"><if pos:start="181:9" pos:end="185:9">if <condition pos:start="181:12" pos:end="181:42">(<expr pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:37"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:17">sr</name><index pos:start="181:18" pos:end="181:37">[<expr pos:start="181:19" pos:end="181:36"><name pos:start="181:19" pos:end="181:36">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="181:39" pos:end="181:39">&amp;</operator> <literal type="number" pos:start="181:41" pos:end="181:41">8</literal></expr>)</condition> <block pos:start="181:44" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:33">

            <expr_stmt pos:start="183:13" pos:end="183:33"><expr pos:start="183:13" pos:end="183:32"><name pos:start="183:13" pos:end="183:13">v</name> <operator pos:start="183:15" pos:end="183:15">=</operator> <name pos:start="183:17" pos:end="183:32">VGA_DRAW_LINE4D2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="185:11" pos:end="189:9">else <block pos:start="185:16" pos:end="189:9">{<block_content pos:start="187:13" pos:end="187:31">

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:13">v</name> <operator pos:start="187:15" pos:end="187:15">=</operator> <name pos:start="187:17" pos:end="187:30">VGA_DRAW_LINE4</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:17"><expr pos:start="191:9" pos:end="191:16"><name pos:start="191:9" pos:end="191:12">bits</name> <operator pos:start="191:14" pos:end="191:14">=</operator> <literal type="number" pos:start="191:16" pos:end="191:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="193:7" pos:end="209:5">else if <condition pos:start="193:15" pos:end="193:34">(<expr pos:start="193:16" pos:end="193:33"><name pos:start="193:16" pos:end="193:28">shift_control</name> <operator pos:start="193:30" pos:end="193:31">==</operator> <literal type="number" pos:start="193:33" pos:end="193:33">1</literal></expr>)</condition> <block pos:start="193:36" pos:end="209:5">{<block_content pos:start="195:9" pos:end="207:17">

        <expr_stmt pos:start="195:9" pos:end="195:43"><expr pos:start="195:9" pos:end="195:42"><name pos:start="195:9" pos:end="195:19">full_update</name> <operator pos:start="195:21" pos:end="195:22">|=</operator> <call pos:start="195:24" pos:end="195:42"><name pos:start="195:24" pos:end="195:39">update_palette16</name><argument_list pos:start="195:40" pos:end="195:42">(<argument pos:start="195:41" pos:end="195:41"><expr pos:start="195:41" pos:end="195:41"><name pos:start="195:41" pos:end="195:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="205:9"><if pos:start="197:9" pos:end="201:9">if <condition pos:start="197:12" pos:end="197:42">(<expr pos:start="197:13" pos:end="197:41"><name pos:start="197:13" pos:end="197:37"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:17">sr</name><index pos:start="197:18" pos:end="197:37">[<expr pos:start="197:19" pos:end="197:36"><name pos:start="197:19" pos:end="197:36">VGA_SEQ_CLOCK_MODE</name></expr>]</index></name> <operator pos:start="197:39" pos:end="197:39">&amp;</operator> <literal type="number" pos:start="197:41" pos:end="197:41">8</literal></expr>)</condition> <block pos:start="197:44" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:33">

            <expr_stmt pos:start="199:13" pos:end="199:33"><expr pos:start="199:13" pos:end="199:32"><name pos:start="199:13" pos:end="199:13">v</name> <operator pos:start="199:15" pos:end="199:15">=</operator> <name pos:start="199:17" pos:end="199:32">VGA_DRAW_LINE2D2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="201:11" pos:end="205:9">else <block pos:start="201:16" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:31">

            <expr_stmt pos:start="203:13" pos:end="203:31"><expr pos:start="203:13" pos:end="203:30"><name pos:start="203:13" pos:end="203:13">v</name> <operator pos:start="203:15" pos:end="203:15">=</operator> <name pos:start="203:17" pos:end="203:30">VGA_DRAW_LINE2</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:17"><expr pos:start="207:9" pos:end="207:16"><name pos:start="207:9" pos:end="207:12">bits</name> <operator pos:start="207:14" pos:end="207:14">=</operator> <literal type="number" pos:start="207:16" pos:end="207:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="269:5">else <block pos:start="209:12" pos:end="269:5">{<block_content pos:start="211:9" pos:end="267:9">

        <switch pos:start="211:9" pos:end="267:9">switch<condition pos:start="211:15" pos:end="211:29">(<expr pos:start="211:16" pos:end="211:28"><call pos:start="211:16" pos:end="211:28"><name pos:start="211:16" pos:end="211:25"><name pos:start="211:16" pos:end="211:16">s</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:25">get_bpp</name></name><argument_list pos:start="211:26" pos:end="211:28">(<argument pos:start="211:27" pos:end="211:27"><expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="211:31" pos:end="267:9">{<block_content pos:start="213:9" pos:end="265:18">

        <default pos:start="213:9" pos:end="213:16">default:</default>

        <case pos:start="215:9" pos:end="215:15">case <expr pos:start="215:14" pos:end="215:14"><literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>:</case>

            <expr_stmt pos:start="217:13" pos:end="217:48"><expr pos:start="217:13" pos:end="217:47"><name pos:start="217:13" pos:end="217:23">full_update</name> <operator pos:start="217:25" pos:end="217:26">|=</operator> <call pos:start="217:28" pos:end="217:47"><name pos:start="217:28" pos:end="217:44">update_palette256</name><argument_list pos:start="217:45" pos:end="217:47">(<argument pos:start="217:46" pos:end="217:46"><expr pos:start="217:46" pos:end="217:46"><name pos:start="217:46" pos:end="217:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:33"><expr pos:start="219:13" pos:end="219:32"><name pos:start="219:13" pos:end="219:13">v</name> <operator pos:start="219:15" pos:end="219:15">=</operator> <name pos:start="219:17" pos:end="219:32">VGA_DRAW_LINE8D2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:21"><expr pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:16">bits</name> <operator pos:start="221:18" pos:end="221:18">=</operator> <literal type="number" pos:start="221:20" pos:end="221:20">4</literal></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:15">case <expr pos:start="225:14" pos:end="225:14"><literal type="number" pos:start="225:14" pos:end="225:14">8</literal></expr>:</case>

            <expr_stmt pos:start="227:13" pos:end="227:48"><expr pos:start="227:13" pos:end="227:47"><name pos:start="227:13" pos:end="227:23">full_update</name> <operator pos:start="227:25" pos:end="227:26">|=</operator> <call pos:start="227:28" pos:end="227:47"><name pos:start="227:28" pos:end="227:44">update_palette256</name><argument_list pos:start="227:45" pos:end="227:47">(<argument pos:start="227:46" pos:end="227:46"><expr pos:start="227:46" pos:end="227:46"><name pos:start="227:46" pos:end="227:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:31"><expr pos:start="229:13" pos:end="229:30"><name pos:start="229:13" pos:end="229:13">v</name> <operator pos:start="229:15" pos:end="229:15">=</operator> <name pos:start="229:17" pos:end="229:30">VGA_DRAW_LINE8</name></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:21"><expr pos:start="231:13" pos:end="231:20"><name pos:start="231:13" pos:end="231:16">bits</name> <operator pos:start="231:18" pos:end="231:18">=</operator> <literal type="number" pos:start="231:20" pos:end="231:20">8</literal></expr>;</expr_stmt>

            <break pos:start="233:13" pos:end="233:18">break;</break>

        <case pos:start="235:9" pos:end="235:16">case <expr pos:start="235:14" pos:end="235:15"><literal type="number" pos:start="235:14" pos:end="235:15">15</literal></expr>:</case>

            <expr_stmt pos:start="237:13" pos:end="237:32"><expr pos:start="237:13" pos:end="237:31"><name pos:start="237:13" pos:end="237:13">v</name> <operator pos:start="237:15" pos:end="237:15">=</operator> <name pos:start="237:17" pos:end="237:31">VGA_DRAW_LINE15</name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:22"><expr pos:start="239:13" pos:end="239:21"><name pos:start="239:13" pos:end="239:16">bits</name> <operator pos:start="239:18" pos:end="239:18">=</operator> <literal type="number" pos:start="239:20" pos:end="239:21">16</literal></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="243:16">case <expr pos:start="243:14" pos:end="243:15"><literal type="number" pos:start="243:14" pos:end="243:15">16</literal></expr>:</case>

            <expr_stmt pos:start="245:13" pos:end="245:32"><expr pos:start="245:13" pos:end="245:31"><name pos:start="245:13" pos:end="245:13">v</name> <operator pos:start="245:15" pos:end="245:15">=</operator> <name pos:start="245:17" pos:end="245:31">VGA_DRAW_LINE16</name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:22"><expr pos:start="247:13" pos:end="247:21"><name pos:start="247:13" pos:end="247:16">bits</name> <operator pos:start="247:18" pos:end="247:18">=</operator> <literal type="number" pos:start="247:20" pos:end="247:21">16</literal></expr>;</expr_stmt>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        <case pos:start="251:9" pos:end="251:16">case <expr pos:start="251:14" pos:end="251:15"><literal type="number" pos:start="251:14" pos:end="251:15">24</literal></expr>:</case>

            <expr_stmt pos:start="253:13" pos:end="253:32"><expr pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:13">v</name> <operator pos:start="253:15" pos:end="253:15">=</operator> <name pos:start="253:17" pos:end="253:31">VGA_DRAW_LINE24</name></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:22"><expr pos:start="255:13" pos:end="255:21"><name pos:start="255:13" pos:end="255:16">bits</name> <operator pos:start="255:18" pos:end="255:18">=</operator> <literal type="number" pos:start="255:20" pos:end="255:21">24</literal></expr>;</expr_stmt>

            <break pos:start="257:13" pos:end="257:18">break;</break>

        <case pos:start="259:9" pos:end="259:16">case <expr pos:start="259:14" pos:end="259:15"><literal type="number" pos:start="259:14" pos:end="259:15">32</literal></expr>:</case>

            <expr_stmt pos:start="261:13" pos:end="261:32"><expr pos:start="261:13" pos:end="261:31"><name pos:start="261:13" pos:end="261:13">v</name> <operator pos:start="261:15" pos:end="261:15">=</operator> <name pos:start="261:17" pos:end="261:31">VGA_DRAW_LINE32</name></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:22"><expr pos:start="263:13" pos:end="263:21"><name pos:start="263:13" pos:end="263:16">bits</name> <operator pos:start="263:18" pos:end="263:18">=</operator> <literal type="number" pos:start="263:20" pos:end="263:21">32</literal></expr>;</expr_stmt>

            <break pos:start="265:13" pos:end="265:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:80"><expr pos:start="271:5" pos:end="271:79"><name pos:start="271:5" pos:end="271:17">vga_draw_line</name> <operator pos:start="271:19" pos:end="271:19">=</operator> <name pos:start="271:21" pos:end="271:79"><name pos:start="271:21" pos:end="271:39">vga_draw_line_table</name><index pos:start="271:40" pos:end="271:79">[<expr pos:start="271:41" pos:end="271:78"><name pos:start="271:41" pos:end="271:41">v</name> <operator pos:start="271:43" pos:end="271:43">*</operator> <name pos:start="271:45" pos:end="271:53">NB_DEPTHS</name> <operator pos:start="271:55" pos:end="271:55">+</operator> <call pos:start="271:57" pos:end="271:78"><name pos:start="271:57" pos:end="271:71">get_depth_index</name><argument_list pos:start="271:72" pos:end="271:78">(<argument pos:start="271:73" pos:end="271:77"><expr pos:start="271:73" pos:end="271:77"><name pos:start="271:73" pos:end="271:77"><name pos:start="271:73" pos:end="271:73">s</name><operator pos:start="271:74" pos:end="271:75">-&gt;</operator><name pos:start="271:76" pos:end="271:77">ds</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="275:5" pos:end="277:32"><if pos:start="275:5" pos:end="277:32">if <condition pos:start="275:8" pos:end="275:66">(<expr pos:start="275:9" pos:end="275:65"><operator pos:start="275:9" pos:end="275:9">!</operator><call pos:start="275:10" pos:end="275:41"><name pos:start="275:10" pos:end="275:25">is_buffer_shared</name><argument_list pos:start="275:26" pos:end="275:41">(<argument pos:start="275:27" pos:end="275:40"><expr pos:start="275:27" pos:end="275:40"><name pos:start="275:27" pos:end="275:40"><name pos:start="275:27" pos:end="275:27">s</name><operator pos:start="275:28" pos:end="275:29">-&gt;</operator><name pos:start="275:30" pos:end="275:31">ds</name><operator pos:start="275:32" pos:end="275:33">-&gt;</operator><name pos:start="275:34" pos:end="275:40">surface</name></name></expr></argument>)</argument_list></call> <operator pos:start="275:43" pos:end="275:44">&amp;&amp;</operator> <name pos:start="275:46" pos:end="275:65"><name pos:start="275:46" pos:end="275:46">s</name><operator pos:start="275:47" pos:end="275:48">-&gt;</operator><name pos:start="275:49" pos:end="275:65">cursor_invalidate</name></name></expr>)</condition><block type="pseudo" pos:start="277:9" pos:end="277:32"><block_content pos:start="277:9" pos:end="277:32">

        <expr_stmt pos:start="277:9" pos:end="277:32"><expr pos:start="277:9" pos:end="277:31"><call pos:start="277:9" pos:end="277:31"><name pos:start="277:9" pos:end="277:28"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:28">cursor_invalidate</name></name><argument_list pos:start="277:29" pos:end="277:31">(<argument pos:start="277:30" pos:end="277:30"><expr pos:start="277:30" pos:end="277:30"><name pos:start="277:30" pos:end="277:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="281:5" pos:end="292:0"><expr pos:start="281:5" pos:end="281:32"><name pos:start="281:5" pos:end="281:15">line_offset</name> <operator pos:start="281:17" pos:end="281:17">=</operator> <name pos:start="281:19" pos:end="281:32"><name pos:start="281:19" pos:end="281:19">s</name><operator pos:start="281:20" pos:end="281:21">-&gt;</operator><name pos:start="281:22" pos:end="281:32">line_offset</name></name></expr>;</expr_stmt>

<cpp:if pos:start="283:1" pos:end="283:5">#<cpp:directive pos:start="283:2" pos:end="283:3">if</cpp:directive> <expr pos:start="283:5" pos:end="283:5"><literal type="number" pos:start="283:5" pos:end="283:5">0</literal></expr></cpp:if>

    printf("w=%d h=%d v=%d line_offset=%d cr[0x09]=0x%02x cr[0x17]=0x%02x linecmp=%d sr[0x01]=0x%02x\n",

           width, height, v, line_offset, s-&gt;cr[9], s-&gt;cr[VGA_CRTC_MODE],

           s-&gt;line_compare, s-&gt;sr[VGA_SEQ_CLOCK_MODE]);

<cpp:endif pos:start="291:1" pos:end="291:6">#<cpp:directive pos:start="291:2" pos:end="291:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="293:5" pos:end="293:32"><expr pos:start="293:5" pos:end="293:31"><name pos:start="293:5" pos:end="293:9">addr1</name> <operator pos:start="293:11" pos:end="293:11">=</operator> <operator pos:start="293:13" pos:end="293:13">(</operator><name pos:start="293:14" pos:end="293:26"><name pos:start="293:14" pos:end="293:14">s</name><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:26">start_addr</name></name> <operator pos:start="293:28" pos:end="293:28">*</operator> <literal type="number" pos:start="293:30" pos:end="293:30">4</literal><operator pos:start="293:31" pos:end="293:31">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:36"><expr pos:start="295:5" pos:end="295:35"><name pos:start="295:5" pos:end="295:10">bwidth</name> <operator pos:start="295:12" pos:end="295:12">=</operator> <operator pos:start="295:14" pos:end="295:14">(</operator><name pos:start="295:15" pos:end="295:19">width</name> <operator pos:start="295:21" pos:end="295:21">*</operator> <name pos:start="295:23" pos:end="295:26">bits</name> <operator pos:start="295:28" pos:end="295:28">+</operator> <literal type="number" pos:start="295:30" pos:end="295:30">7</literal><operator pos:start="295:31" pos:end="295:31">)</operator> <operator pos:start="295:33" pos:end="295:33">/</operator> <literal type="number" pos:start="295:35" pos:end="295:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:17"><expr pos:start="297:5" pos:end="297:16"><name pos:start="297:5" pos:end="297:11">y_start</name> <operator pos:start="297:13" pos:end="297:13">=</operator> <operator pos:start="297:15" pos:end="297:15">-</operator><literal type="number" pos:start="297:16" pos:end="297:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:18"><expr pos:start="299:5" pos:end="299:17"><name pos:start="299:5" pos:end="299:12">page_min</name> <operator pos:start="299:14" pos:end="299:14">=</operator> <operator pos:start="299:16" pos:end="299:16">-</operator><literal type="number" pos:start="299:17" pos:end="299:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:17"><expr pos:start="301:5" pos:end="301:16"><name pos:start="301:5" pos:end="301:12">page_max</name> <operator pos:start="301:14" pos:end="301:14">=</operator> <literal type="number" pos:start="301:16" pos:end="301:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:27"><expr pos:start="303:5" pos:end="303:26"><name pos:start="303:5" pos:end="303:5">d</name> <operator pos:start="303:7" pos:end="303:7">=</operator> <call pos:start="303:9" pos:end="303:26"><name pos:start="303:9" pos:end="303:19">ds_get_data</name><argument_list pos:start="303:20" pos:end="303:26">(<argument pos:start="303:21" pos:end="303:25"><expr pos:start="303:21" pos:end="303:25"><name pos:start="303:21" pos:end="303:25"><name pos:start="303:21" pos:end="303:21">s</name><operator pos:start="303:22" pos:end="303:23">-&gt;</operator><name pos:start="303:24" pos:end="303:25">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:38"><expr pos:start="305:5" pos:end="305:37"><name pos:start="305:5" pos:end="305:12">linesize</name> <operator pos:start="305:14" pos:end="305:14">=</operator> <call pos:start="305:16" pos:end="305:37"><name pos:start="305:16" pos:end="305:30">ds_get_linesize</name><argument_list pos:start="305:31" pos:end="305:37">(<argument pos:start="305:32" pos:end="305:36"><expr pos:start="305:32" pos:end="305:36"><name pos:start="305:32" pos:end="305:36"><name pos:start="305:32" pos:end="305:32">s</name><operator pos:start="305:33" pos:end="305:34">-&gt;</operator><name pos:start="305:35" pos:end="305:36">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:11"><expr pos:start="307:5" pos:end="307:10"><name pos:start="307:5" pos:end="307:6">y1</name> <operator pos:start="307:8" pos:end="307:8">=</operator> <literal type="number" pos:start="307:10" pos:end="307:10">0</literal></expr>;</expr_stmt>

    <for pos:start="309:5" pos:end="411:5">for<control pos:start="309:8" pos:end="309:31">(<init pos:start="309:9" pos:end="309:14"><expr pos:start="309:9" pos:end="309:13"><name pos:start="309:9" pos:end="309:9">y</name> <operator pos:start="309:11" pos:end="309:11">=</operator> <literal type="number" pos:start="309:13" pos:end="309:13">0</literal></expr>;</init> <condition pos:start="309:16" pos:end="309:26"><expr pos:start="309:16" pos:end="309:25"><name pos:start="309:16" pos:end="309:16">y</name> <operator pos:start="309:18" pos:end="309:18">&lt;</operator> <name pos:start="309:20" pos:end="309:25">height</name></expr>;</condition> <incr pos:start="309:28" pos:end="309:30"><expr pos:start="309:28" pos:end="309:30"><name pos:start="309:28" pos:end="309:28">y</name><operator pos:start="309:29" pos:end="309:30">++</operator></expr></incr>)</control> <block pos:start="309:33" pos:end="411:5">{<block_content pos:start="311:9" pos:end="409:22">

        <expr_stmt pos:start="311:9" pos:end="311:21"><expr pos:start="311:9" pos:end="311:20"><name pos:start="311:9" pos:end="311:12">addr</name> <operator pos:start="311:14" pos:end="311:14">=</operator> <name pos:start="311:16" pos:end="311:20">addr1</name></expr>;</expr_stmt>

        <if_stmt pos:start="313:9" pos:end="323:9"><if pos:start="313:9" pos:end="323:9">if <condition pos:start="313:12" pos:end="313:40">(<expr pos:start="313:13" pos:end="313:39"><operator pos:start="313:13" pos:end="313:13">!</operator><operator pos:start="313:14" pos:end="313:14">(</operator><name pos:start="313:15" pos:end="313:34"><name pos:start="313:15" pos:end="313:15">s</name><operator pos:start="313:16" pos:end="313:17">-&gt;</operator><name pos:start="313:18" pos:end="313:19">cr</name><index pos:start="313:20" pos:end="313:34">[<expr pos:start="313:21" pos:end="313:33"><name pos:start="313:21" pos:end="313:33">VGA_CRTC_MODE</name></expr>]</index></name> <operator pos:start="313:36" pos:end="313:36">&amp;</operator> <literal type="number" pos:start="313:38" pos:end="313:38">1</literal><operator pos:start="313:39" pos:end="313:39">)</operator></expr>)</condition> <block pos:start="313:42" pos:end="323:9">{<block_content pos:start="315:13" pos:end="321:64">

            <decl_stmt pos:start="315:13" pos:end="315:22"><decl pos:start="315:13" pos:end="315:21"><type pos:start="315:13" pos:end="315:15"><name pos:start="315:13" pos:end="315:15">int</name></type> <name pos:start="315:17" pos:end="315:21">shift</name></decl>;</decl_stmt>

            <comment type="block" pos:start="317:13" pos:end="317:44">/* CGA compatibility handling */</comment>

            <expr_stmt pos:start="319:13" pos:end="319:59"><expr pos:start="319:13" pos:end="319:58"><name pos:start="319:13" pos:end="319:17">shift</name> <operator pos:start="319:19" pos:end="319:19">=</operator> <literal type="number" pos:start="319:21" pos:end="319:24">14</literal> <operator pos:start="319:24" pos:end="319:24">+</operator> <operator pos:start="319:26" pos:end="319:26">(</operator><operator pos:start="319:27" pos:end="319:27">(</operator><name pos:start="319:28" pos:end="319:47"><name pos:start="319:28" pos:end="319:28">s</name><operator pos:start="319:29" pos:end="319:30">-&gt;</operator><name pos:start="319:31" pos:end="319:32">cr</name><index pos:start="319:33" pos:end="319:47">[<expr pos:start="319:34" pos:end="319:46"><name pos:start="319:34" pos:end="319:46">VGA_CRTC_MODE</name></expr>]</index></name> <operator pos:start="319:49" pos:end="319:50">&gt;&gt;</operator> <literal type="number" pos:start="319:52" pos:end="319:52">6</literal><operator pos:start="319:53" pos:end="319:53">)</operator> <operator pos:start="319:55" pos:end="319:55">&amp;</operator> <literal type="number" pos:start="319:57" pos:end="319:57">1</literal><operator pos:start="319:58" pos:end="319:58">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:64"><expr pos:start="321:13" pos:end="321:63"><name pos:start="321:13" pos:end="321:16">addr</name> <operator pos:start="321:18" pos:end="321:18">=</operator> <operator pos:start="321:20" pos:end="321:20">(</operator><name pos:start="321:21" pos:end="321:24">addr</name> <operator pos:start="321:26" pos:end="321:26">&amp;</operator> <operator pos:start="321:28" pos:end="321:28">~</operator><operator pos:start="321:29" pos:end="321:29">(</operator><literal type="number" pos:start="321:30" pos:end="321:30">1</literal> <operator pos:start="321:32" pos:end="321:33">&lt;&lt;</operator> <name pos:start="321:35" pos:end="321:39">shift</name><operator pos:start="321:40" pos:end="321:40">)</operator><operator pos:start="321:41" pos:end="321:41">)</operator> <operator pos:start="321:43" pos:end="321:43">|</operator> <operator pos:start="321:45" pos:end="321:45">(</operator><operator pos:start="321:46" pos:end="321:46">(</operator><name pos:start="321:47" pos:end="321:48">y1</name> <operator pos:start="321:50" pos:end="321:50">&amp;</operator> <literal type="number" pos:start="321:52" pos:end="321:52">1</literal><operator pos:start="321:53" pos:end="321:53">)</operator> <operator pos:start="321:55" pos:end="321:56">&lt;&lt;</operator> <name pos:start="321:58" pos:end="321:62">shift</name><operator pos:start="321:63" pos:end="321:63">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="325:9" pos:end="329:9"><if pos:start="325:9" pos:end="329:9">if <condition pos:start="325:12" pos:end="325:40">(<expr pos:start="325:13" pos:end="325:39"><operator pos:start="325:13" pos:end="325:13">!</operator><operator pos:start="325:14" pos:end="325:14">(</operator><name pos:start="325:15" pos:end="325:34"><name pos:start="325:15" pos:end="325:15">s</name><operator pos:start="325:16" pos:end="325:17">-&gt;</operator><name pos:start="325:18" pos:end="325:19">cr</name><index pos:start="325:20" pos:end="325:34">[<expr pos:start="325:21" pos:end="325:33"><name pos:start="325:21" pos:end="325:33">VGA_CRTC_MODE</name></expr>]</index></name> <operator pos:start="325:36" pos:end="325:36">&amp;</operator> <literal type="number" pos:start="325:38" pos:end="325:38">2</literal><operator pos:start="325:39" pos:end="325:39">)</operator></expr>)</condition> <block pos:start="325:42" pos:end="329:9">{<block_content pos:start="327:13" pos:end="327:55">

            <expr_stmt pos:start="327:13" pos:end="327:55"><expr pos:start="327:13" pos:end="327:54"><name pos:start="327:13" pos:end="327:16">addr</name> <operator pos:start="327:18" pos:end="327:18">=</operator> <operator pos:start="327:20" pos:end="327:20">(</operator><name pos:start="327:21" pos:end="327:24">addr</name> <operator pos:start="327:26" pos:end="327:26">&amp;</operator> <operator pos:start="327:28" pos:end="327:28">~</operator><literal type="number" pos:start="327:29" pos:end="327:34">0x8000</literal><operator pos:start="327:35" pos:end="327:35">)</operator> <operator pos:start="327:37" pos:end="327:37">|</operator> <operator pos:start="327:39" pos:end="327:39">(</operator><operator pos:start="327:40" pos:end="327:40">(</operator><name pos:start="327:41" pos:end="327:42">y1</name> <operator pos:start="327:44" pos:end="327:44">&amp;</operator> <literal type="number" pos:start="327:46" pos:end="327:46">2</literal><operator pos:start="327:47" pos:end="327:47">)</operator> <operator pos:start="327:49" pos:end="327:50">&lt;&lt;</operator> <literal type="number" pos:start="327:52" pos:end="327:53">14</literal><operator pos:start="327:54" pos:end="327:54">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:29"><expr pos:start="331:9" pos:end="331:28"><name pos:start="331:9" pos:end="331:14">update</name> <operator pos:start="331:16" pos:end="331:16">=</operator> <name pos:start="331:18" pos:end="331:28">full_update</name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:21"><expr pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:13">page0</name> <operator pos:start="333:15" pos:end="333:15">=</operator> <name pos:start="333:17" pos:end="333:20">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:34"><expr pos:start="335:9" pos:end="335:33"><name pos:start="335:9" pos:end="335:13">page1</name> <operator pos:start="335:15" pos:end="335:15">=</operator> <name pos:start="335:17" pos:end="335:20">addr</name> <operator pos:start="335:22" pos:end="335:22">+</operator> <name pos:start="335:24" pos:end="335:29">bwidth</name> <operator pos:start="335:31" pos:end="335:31">-</operator> <literal type="number" pos:start="335:33" pos:end="335:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="339:60"><expr pos:start="337:9" pos:end="339:59"><name pos:start="337:9" pos:end="337:14">update</name> <operator pos:start="337:16" pos:end="337:17">|=</operator> <call pos:start="337:19" pos:end="339:59"><name pos:start="337:19" pos:end="337:41">memory_region_get_dirty</name><argument_list pos:start="337:42" pos:end="339:59">(<argument pos:start="337:43" pos:end="337:50"><expr pos:start="337:43" pos:end="337:50"><operator pos:start="337:43" pos:end="337:43">&amp;</operator><name pos:start="337:44" pos:end="337:50"><name pos:start="337:44" pos:end="337:44">s</name><operator pos:start="337:45" pos:end="337:46">-&gt;</operator><name pos:start="337:47" pos:end="337:50">vram</name></name></expr></argument>, <argument pos:start="337:53" pos:end="337:57"><expr pos:start="337:53" pos:end="337:57"><name pos:start="337:53" pos:end="337:57">page0</name></expr></argument>, <argument pos:start="337:60" pos:end="337:72"><expr pos:start="337:60" pos:end="337:72"><name pos:start="337:60" pos:end="337:64">page1</name> <operator pos:start="337:66" pos:end="337:66">-</operator> <name pos:start="337:68" pos:end="337:72">page0</name></expr></argument>,

                                          <argument pos:start="339:43" pos:end="339:58"><expr pos:start="339:43" pos:end="339:58"><name pos:start="339:43" pos:end="339:58">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="341:9" pos:end="341:59">/* explicit invalidation for the hardware cursor */</comment>

        <expr_stmt pos:start="343:9" pos:end="343:69"><expr pos:start="343:9" pos:end="343:68"><name pos:start="343:9" pos:end="343:14">update</name> <operator pos:start="343:16" pos:end="343:17">|=</operator> <operator pos:start="343:19" pos:end="343:19">(</operator><name pos:start="343:20" pos:end="343:49"><name pos:start="343:20" pos:end="343:20">s</name><operator pos:start="343:21" pos:end="343:22">-&gt;</operator><name pos:start="343:23" pos:end="343:41">invalidated_y_table</name><index pos:start="343:42" pos:end="343:49">[<expr pos:start="343:43" pos:end="343:48"><name pos:start="343:43" pos:end="343:43">y</name> <operator pos:start="343:45" pos:end="343:46">&gt;&gt;</operator> <literal type="number" pos:start="343:48" pos:end="343:48">5</literal></expr>]</index></name> <operator pos:start="343:51" pos:end="343:52">&gt;&gt;</operator> <operator pos:start="343:54" pos:end="343:54">(</operator><name pos:start="343:55" pos:end="343:55">y</name> <operator pos:start="343:57" pos:end="343:57">&amp;</operator> <literal type="number" pos:start="343:59" pos:end="343:62">0x1f</literal><operator pos:start="343:63" pos:end="343:63">)</operator><operator pos:start="343:64" pos:end="343:64">)</operator> <operator pos:start="343:66" pos:end="343:66">&amp;</operator> <literal type="number" pos:start="343:68" pos:end="343:68">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="345:9" pos:end="383:9"><if pos:start="345:9" pos:end="369:9">if <condition pos:start="345:12" pos:end="345:19">(<expr pos:start="345:13" pos:end="345:18"><name pos:start="345:13" pos:end="345:18">update</name></expr>)</condition> <block pos:start="345:21" pos:end="369:9">{<block_content pos:start="347:13" pos:end="367:13">

            <if_stmt pos:start="347:13" pos:end="349:28"><if pos:start="347:13" pos:end="349:28">if <condition pos:start="347:16" pos:end="347:28">(<expr pos:start="347:17" pos:end="347:27"><name pos:start="347:17" pos:end="347:23">y_start</name> <operator pos:start="347:25" pos:end="347:25">&lt;</operator> <literal type="number" pos:start="347:27" pos:end="347:27">0</literal></expr>)</condition><block type="pseudo" pos:start="349:17" pos:end="349:28"><block_content pos:start="349:17" pos:end="349:28">

                <expr_stmt pos:start="349:17" pos:end="349:28"><expr pos:start="349:17" pos:end="349:27"><name pos:start="349:17" pos:end="349:23">y_start</name> <operator pos:start="349:25" pos:end="349:25">=</operator> <name pos:start="349:27" pos:end="349:27">y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="351:13" pos:end="353:33"><if pos:start="351:13" pos:end="353:33">if <condition pos:start="351:16" pos:end="351:33">(<expr pos:start="351:17" pos:end="351:32"><name pos:start="351:17" pos:end="351:21">page0</name> <operator pos:start="351:23" pos:end="351:23">&lt;</operator> <name pos:start="351:25" pos:end="351:32">page_min</name></expr>)</condition><block type="pseudo" pos:start="353:17" pos:end="353:33"><block_content pos:start="353:17" pos:end="353:33">

                <expr_stmt pos:start="353:17" pos:end="353:33"><expr pos:start="353:17" pos:end="353:32"><name pos:start="353:17" pos:end="353:24">page_min</name> <operator pos:start="353:26" pos:end="353:26">=</operator> <name pos:start="353:28" pos:end="353:32">page0</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="355:13" pos:end="357:33"><if pos:start="355:13" pos:end="357:33">if <condition pos:start="355:16" pos:end="355:33">(<expr pos:start="355:17" pos:end="355:32"><name pos:start="355:17" pos:end="355:21">page1</name> <operator pos:start="355:23" pos:end="355:23">&gt;</operator> <name pos:start="355:25" pos:end="355:32">page_max</name></expr>)</condition><block type="pseudo" pos:start="357:17" pos:end="357:33"><block_content pos:start="357:17" pos:end="357:33">

                <expr_stmt pos:start="357:17" pos:end="357:33"><expr pos:start="357:17" pos:end="357:32"><name pos:start="357:17" pos:end="357:24">page_max</name> <operator pos:start="357:26" pos:end="357:26">=</operator> <name pos:start="357:28" pos:end="357:32">page1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="359:13" pos:end="367:13"><if pos:start="359:13" pos:end="367:13">if <condition pos:start="359:16" pos:end="359:52">(<expr pos:start="359:17" pos:end="359:51"><operator pos:start="359:17" pos:end="359:17">!</operator><operator pos:start="359:18" pos:end="359:18">(</operator><call pos:start="359:19" pos:end="359:50"><name pos:start="359:19" pos:end="359:34">is_buffer_shared</name><argument_list pos:start="359:35" pos:end="359:50">(<argument pos:start="359:36" pos:end="359:49"><expr pos:start="359:36" pos:end="359:49"><name pos:start="359:36" pos:end="359:49"><name pos:start="359:36" pos:end="359:36">s</name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:40">ds</name><operator pos:start="359:41" pos:end="359:42">-&gt;</operator><name pos:start="359:43" pos:end="359:49">surface</name></name></expr></argument>)</argument_list></call><operator pos:start="359:51" pos:end="359:51">)</operator></expr>)</condition> <block pos:start="359:54" pos:end="367:13">{<block_content pos:start="361:17" pos:end="365:49">

                <expr_stmt pos:start="361:17" pos:end="361:63"><expr pos:start="361:17" pos:end="361:62"><call pos:start="361:17" pos:end="361:62"><name pos:start="361:17" pos:end="361:29">vga_draw_line</name><argument_list pos:start="361:30" pos:end="361:62">(<argument pos:start="361:31" pos:end="361:31"><expr pos:start="361:31" pos:end="361:31"><name pos:start="361:31" pos:end="361:31">s</name></expr></argument>, <argument pos:start="361:34" pos:end="361:34"><expr pos:start="361:34" pos:end="361:34"><name pos:start="361:34" pos:end="361:34">d</name></expr></argument>, <argument pos:start="361:37" pos:end="361:54"><expr pos:start="361:37" pos:end="361:54"><name pos:start="361:37" pos:end="361:47"><name pos:start="361:37" pos:end="361:37">s</name><operator pos:start="361:38" pos:end="361:39">-&gt;</operator><name pos:start="361:40" pos:end="361:47">vram_ptr</name></name> <operator pos:start="361:49" pos:end="361:49">+</operator> <name pos:start="361:51" pos:end="361:54">addr</name></expr></argument>, <argument pos:start="361:57" pos:end="361:61"><expr pos:start="361:57" pos:end="361:61"><name pos:start="361:57" pos:end="361:61">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="363:17" pos:end="365:49"><if pos:start="363:17" pos:end="365:49">if <condition pos:start="363:20" pos:end="363:40">(<expr pos:start="363:21" pos:end="363:39"><name pos:start="363:21" pos:end="363:39"><name pos:start="363:21" pos:end="363:21">s</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:39">cursor_draw_line</name></name></expr>)</condition><block type="pseudo" pos:start="365:21" pos:end="365:49"><block_content pos:start="365:21" pos:end="365:49">

                    <expr_stmt pos:start="365:21" pos:end="365:49"><expr pos:start="365:21" pos:end="365:48"><call pos:start="365:21" pos:end="365:48"><name pos:start="365:21" pos:end="365:39"><name pos:start="365:21" pos:end="365:21">s</name><operator pos:start="365:22" pos:end="365:23">-&gt;</operator><name pos:start="365:24" pos:end="365:39">cursor_draw_line</name></name><argument_list pos:start="365:40" pos:end="365:48">(<argument pos:start="365:41" pos:end="365:41"><expr pos:start="365:41" pos:end="365:41"><name pos:start="365:41" pos:end="365:41">s</name></expr></argument>, <argument pos:start="365:44" pos:end="365:44"><expr pos:start="365:44" pos:end="365:44"><name pos:start="365:44" pos:end="365:44">d</name></expr></argument>, <argument pos:start="365:47" pos:end="365:47"><expr pos:start="365:47" pos:end="365:47"><name pos:start="365:47" pos:end="365:47">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="369:11" pos:end="383:9">else <block pos:start="369:16" pos:end="383:9">{<block_content pos:start="371:13" pos:end="381:13">

            <if_stmt pos:start="371:13" pos:end="381:13"><if pos:start="371:13" pos:end="381:13">if <condition pos:start="371:16" pos:end="371:29">(<expr pos:start="371:17" pos:end="371:28"><name pos:start="371:17" pos:end="371:23">y_start</name> <operator pos:start="371:25" pos:end="371:26">&gt;=</operator> <literal type="number" pos:start="371:28" pos:end="371:28">0</literal></expr>)</condition> <block pos:start="371:31" pos:end="381:13">{<block_content pos:start="375:17" pos:end="379:29">

                <comment type="block" pos:start="373:17" pos:end="373:38">/* flush to display */</comment>

                <expr_stmt pos:start="375:17" pos:end="377:56"><expr pos:start="375:17" pos:end="377:55"><call pos:start="375:17" pos:end="377:55"><name pos:start="375:17" pos:end="375:30">dpy_gfx_update</name><argument_list pos:start="375:31" pos:end="377:55">(<argument pos:start="375:32" pos:end="375:36"><expr pos:start="375:32" pos:end="375:36"><name pos:start="375:32" pos:end="375:36"><name pos:start="375:32" pos:end="375:32">s</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:36">ds</name></name></expr></argument>, <argument pos:start="375:39" pos:end="375:39"><expr pos:start="375:39" pos:end="375:39"><literal type="number" pos:start="375:39" pos:end="375:39">0</literal></expr></argument>, <argument pos:start="375:42" pos:end="375:48"><expr pos:start="375:42" pos:end="375:48"><name pos:start="375:42" pos:end="375:48">y_start</name></expr></argument>,

                               <argument pos:start="377:32" pos:end="377:41"><expr pos:start="377:32" pos:end="377:41"><name pos:start="377:32" pos:end="377:41">disp_width</name></expr></argument>, <argument pos:start="377:44" pos:end="377:54"><expr pos:start="377:44" pos:end="377:54"><name pos:start="377:44" pos:end="377:44">y</name> <operator pos:start="377:46" pos:end="377:46">-</operator> <name pos:start="377:48" pos:end="377:54">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:29"><expr pos:start="379:17" pos:end="379:28"><name pos:start="379:17" pos:end="379:23">y_start</name> <operator pos:start="379:25" pos:end="379:25">=</operator> <operator pos:start="379:27" pos:end="379:27">-</operator><literal type="number" pos:start="379:28" pos:end="379:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="385:9" pos:end="401:9"><if pos:start="385:9" pos:end="397:9">if <condition pos:start="385:12" pos:end="385:23">(<expr pos:start="385:13" pos:end="385:22"><operator pos:start="385:13" pos:end="385:13">!</operator><name pos:start="385:14" pos:end="385:22">multi_run</name></expr>)</condition> <block pos:start="385:25" pos:end="397:9">{<block_content pos:start="387:13" pos:end="395:35">

            <expr_stmt pos:start="387:13" pos:end="387:50"><expr pos:start="387:13" pos:end="387:49"><name pos:start="387:13" pos:end="387:16">mask</name> <operator pos:start="387:18" pos:end="387:18">=</operator> <operator pos:start="387:20" pos:end="387:20">(</operator><name pos:start="387:21" pos:end="387:40"><name pos:start="387:21" pos:end="387:21">s</name><operator pos:start="387:22" pos:end="387:23">-&gt;</operator><name pos:start="387:24" pos:end="387:25">cr</name><index pos:start="387:26" pos:end="387:40">[<expr pos:start="387:27" pos:end="387:39"><name pos:start="387:27" pos:end="387:39">VGA_CRTC_MODE</name></expr>]</index></name> <operator pos:start="387:42" pos:end="387:42">&amp;</operator> <literal type="number" pos:start="387:44" pos:end="387:44">3</literal><operator pos:start="387:45" pos:end="387:45">)</operator> <operator pos:start="387:47" pos:end="387:47">^</operator> <literal type="number" pos:start="387:49" pos:end="387:49">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="389:13" pos:end="391:37"><if pos:start="389:13" pos:end="391:37">if <condition pos:start="389:16" pos:end="389:36">(<expr pos:start="389:17" pos:end="389:35"><operator pos:start="389:17" pos:end="389:17">(</operator><name pos:start="389:18" pos:end="389:19">y1</name> <operator pos:start="389:21" pos:end="389:21">&amp;</operator> <name pos:start="389:23" pos:end="389:26">mask</name><operator pos:start="389:27" pos:end="389:27">)</operator> <operator pos:start="389:29" pos:end="389:30">==</operator> <name pos:start="389:32" pos:end="389:35">mask</name></expr>)</condition><block type="pseudo" pos:start="391:17" pos:end="391:37"><block_content pos:start="391:17" pos:end="391:37">

                <expr_stmt pos:start="391:17" pos:end="391:37"><expr pos:start="391:17" pos:end="391:36"><name pos:start="391:17" pos:end="391:21">addr1</name> <operator pos:start="391:23" pos:end="391:24">+=</operator> <name pos:start="391:26" pos:end="391:36">line_offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:17"><expr pos:start="393:13" pos:end="393:16"><name pos:start="393:13" pos:end="393:14">y1</name><operator pos:start="393:15" pos:end="393:16">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:35"><expr pos:start="395:13" pos:end="395:34"><name pos:start="395:13" pos:end="395:21">multi_run</name> <operator pos:start="395:23" pos:end="395:23">=</operator> <name pos:start="395:25" pos:end="395:34">multi_scan</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="397:11" pos:end="401:9">else <block pos:start="397:16" pos:end="401:9">{<block_content pos:start="399:13" pos:end="399:24">

            <expr_stmt pos:start="399:13" pos:end="399:24"><expr pos:start="399:13" pos:end="399:23"><name pos:start="399:13" pos:end="399:21">multi_run</name><operator pos:start="399:22" pos:end="399:23">--</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="403:9" pos:end="403:54">/* line compare acts on the displayed lines */</comment>

        <if_stmt pos:start="405:9" pos:end="407:22"><if pos:start="405:9" pos:end="407:22">if <condition pos:start="405:12" pos:end="405:33">(<expr pos:start="405:13" pos:end="405:32"><name pos:start="405:13" pos:end="405:13">y</name> <operator pos:start="405:15" pos:end="405:16">==</operator> <name pos:start="405:18" pos:end="405:32"><name pos:start="405:18" pos:end="405:18">s</name><operator pos:start="405:19" pos:end="405:20">-&gt;</operator><name pos:start="405:21" pos:end="405:32">line_compare</name></name></expr>)</condition><block type="pseudo" pos:start="407:13" pos:end="407:22"><block_content pos:start="407:13" pos:end="407:22">

            <expr_stmt pos:start="407:13" pos:end="407:22"><expr pos:start="407:13" pos:end="407:21"><name pos:start="407:13" pos:end="407:17">addr1</name> <operator pos:start="407:19" pos:end="407:19">=</operator> <literal type="number" pos:start="407:21" pos:end="407:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:22"><expr pos:start="409:9" pos:end="409:21"><name pos:start="409:9" pos:end="409:9">d</name> <operator pos:start="409:11" pos:end="409:12">+=</operator> <name pos:start="409:14" pos:end="409:21">linesize</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="413:5" pos:end="421:5"><if pos:start="413:5" pos:end="421:5">if <condition pos:start="413:8" pos:end="413:21">(<expr pos:start="413:9" pos:end="413:20"><name pos:start="413:9" pos:end="413:15">y_start</name> <operator pos:start="413:17" pos:end="413:18">&gt;=</operator> <literal type="number" pos:start="413:20" pos:end="413:20">0</literal></expr>)</condition> <block pos:start="413:23" pos:end="421:5">{<block_content pos:start="417:9" pos:end="419:48">

        <comment type="block" pos:start="415:9" pos:end="415:30">/* flush to display */</comment>

        <expr_stmt pos:start="417:9" pos:end="419:48"><expr pos:start="417:9" pos:end="419:47"><call pos:start="417:9" pos:end="419:47"><name pos:start="417:9" pos:end="417:22">dpy_gfx_update</name><argument_list pos:start="417:23" pos:end="419:47">(<argument pos:start="417:24" pos:end="417:28"><expr pos:start="417:24" pos:end="417:28"><name pos:start="417:24" pos:end="417:28"><name pos:start="417:24" pos:end="417:24">s</name><operator pos:start="417:25" pos:end="417:26">-&gt;</operator><name pos:start="417:27" pos:end="417:28">ds</name></name></expr></argument>, <argument pos:start="417:31" pos:end="417:31"><expr pos:start="417:31" pos:end="417:31"><literal type="number" pos:start="417:31" pos:end="417:31">0</literal></expr></argument>, <argument pos:start="417:34" pos:end="417:40"><expr pos:start="417:34" pos:end="417:40"><name pos:start="417:34" pos:end="417:40">y_start</name></expr></argument>,

                       <argument pos:start="419:24" pos:end="419:33"><expr pos:start="419:24" pos:end="419:33"><name pos:start="419:24" pos:end="419:33">disp_width</name></expr></argument>, <argument pos:start="419:36" pos:end="419:46"><expr pos:start="419:36" pos:end="419:46"><name pos:start="419:36" pos:end="419:36">y</name> <operator pos:start="419:38" pos:end="419:38">-</operator> <name pos:start="419:40" pos:end="419:46">y_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="423:5" pos:end="423:30">/* reset modified pages */</comment>

    <if_stmt pos:start="425:5" pos:end="435:5"><if pos:start="425:5" pos:end="435:5">if <condition pos:start="425:8" pos:end="425:29">(<expr pos:start="425:9" pos:end="425:28"><name pos:start="425:9" pos:end="425:16">page_max</name> <operator pos:start="425:18" pos:end="425:19">&gt;=</operator> <name pos:start="425:21" pos:end="425:28">page_min</name></expr>)</condition> <block pos:start="425:31" pos:end="435:5">{<block_content pos:start="427:9" pos:end="433:52">

        <expr_stmt pos:start="427:9" pos:end="433:52"><expr pos:start="427:9" pos:end="433:51"><call pos:start="427:9" pos:end="433:51"><name pos:start="427:9" pos:end="427:33">memory_region_reset_dirty</name><argument_list pos:start="427:34" pos:end="433:51">(<argument pos:start="427:35" pos:end="427:42"><expr pos:start="427:35" pos:end="427:42"><operator pos:start="427:35" pos:end="427:35">&amp;</operator><name pos:start="427:36" pos:end="427:42"><name pos:start="427:36" pos:end="427:36">s</name><operator pos:start="427:37" pos:end="427:38">-&gt;</operator><name pos:start="427:39" pos:end="427:42">vram</name></name></expr></argument>,

                                  <argument pos:start="429:35" pos:end="429:42"><expr pos:start="429:35" pos:end="429:42"><name pos:start="429:35" pos:end="429:42">page_min</name></expr></argument>,

                                  <argument pos:start="431:35" pos:end="431:53"><expr pos:start="431:35" pos:end="431:53"><name pos:start="431:35" pos:end="431:42">page_max</name> <operator pos:start="431:44" pos:end="431:44">-</operator> <name pos:start="431:46" pos:end="431:53">page_min</name></expr></argument>,

                                  <argument pos:start="433:35" pos:end="433:50"><expr pos:start="433:35" pos:end="433:50"><name pos:start="433:35" pos:end="433:50">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:64"><expr pos:start="437:5" pos:end="437:63"><call pos:start="437:5" pos:end="437:63"><name pos:start="437:5" pos:end="437:10">memset</name><argument_list pos:start="437:11" pos:end="437:63">(<argument pos:start="437:12" pos:end="437:33"><expr pos:start="437:12" pos:end="437:33"><name pos:start="437:12" pos:end="437:33"><name pos:start="437:12" pos:end="437:12">s</name><operator pos:start="437:13" pos:end="437:14">-&gt;</operator><name pos:start="437:15" pos:end="437:33">invalidated_y_table</name></name></expr></argument>, <argument pos:start="437:36" pos:end="437:36"><expr pos:start="437:36" pos:end="437:36"><literal type="number" pos:start="437:36" pos:end="437:36">0</literal></expr></argument>, <argument pos:start="437:39" pos:end="437:62"><expr pos:start="437:39" pos:end="437:62"><operator pos:start="437:39" pos:end="437:39">(</operator><operator pos:start="437:40" pos:end="437:40">(</operator><name pos:start="437:41" pos:end="437:46">height</name> <operator pos:start="437:48" pos:end="437:48">+</operator> <literal type="number" pos:start="437:50" pos:end="437:51">31</literal><operator pos:start="437:52" pos:end="437:52">)</operator> <operator pos:start="437:54" pos:end="437:55">&gt;&gt;</operator> <literal type="number" pos:start="437:57" pos:end="437:57">5</literal><operator pos:start="437:58" pos:end="437:58">)</operator> <operator pos:start="437:60" pos:end="437:60">*</operator> <literal type="number" pos:start="437:62" pos:end="437:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt></block_content></block></function>
</unit>
