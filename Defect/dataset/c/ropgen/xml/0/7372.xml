<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7372.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ioreq_runio_qemu_aio</name><parameter_list pos:start="1:32" pos:end="1:52">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:44">ioreq</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">ioreq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:14">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:44">= <expr pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:36">ioreq</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:44">blkdev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:57">(<expr pos:start="9:9" pos:end="9:56"><name pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:13">ioreq</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:18">req</name><operator pos:start="9:19" pos:end="9:19">.</operator><name pos:start="9:20" pos:end="9:30">nr_segments</name></name> <operator pos:start="9:32" pos:end="9:33">&amp;&amp;</operator> <call pos:start="9:35" pos:end="9:50"><name pos:start="9:35" pos:end="9:43">ioreq_map</name><argument_list pos:start="9:44" pos:end="9:50">(<argument pos:start="9:45" pos:end="9:49"><expr pos:start="9:45" pos:end="9:49"><name pos:start="9:45" pos:end="9:49">ioreq</name></expr></argument>)</argument_list></call> <operator pos:start="9:52" pos:end="9:53">==</operator> <operator pos:start="9:55" pos:end="9:55">-</operator><literal type="number" pos:start="9:56" pos:end="9:56">1</literal></expr>)</condition> <block pos:start="9:59" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:24">

        <goto pos:start="11:9" pos:end="11:24">goto <name pos:start="11:14" pos:end="11:23">err_no_map</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:9">ioreq</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">aio_inflight</name></name><operator pos:start="17:24" pos:end="17:25">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:13">ioreq</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">presync</name></name></expr>)</condition> <block pos:start="19:25" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:68"><expr pos:start="21:9" pos:end="21:67"><call pos:start="21:9" pos:end="21:67"><name pos:start="21:9" pos:end="21:22">bdrv_aio_flush</name><argument_list pos:start="21:23" pos:end="21:67">(<argument pos:start="21:24" pos:end="21:40"><expr pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:28">ioreq</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">blkdev</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:40">bs</name></name></expr></argument>, <argument pos:start="21:43" pos:end="21:59"><expr pos:start="21:43" pos:end="21:59"><name pos:start="21:43" pos:end="21:59">qemu_aio_complete</name></expr></argument>, <argument pos:start="21:62" pos:end="21:66"><expr pos:start="21:62" pos:end="21:66"><name pos:start="21:62" pos:end="21:66">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="29:5" pos:end="97:5">switch <condition pos:start="29:12" pos:end="29:33">(<expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:17">ioreq</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:22">req</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:32">operation</name></name></expr>)</condition> <block pos:start="29:35" pos:end="97:5">{<block_content pos:start="31:5" pos:end="95:17">

    <case pos:start="31:5" pos:end="31:23">case <expr pos:start="31:10" pos:end="31:22"><name pos:start="31:10" pos:end="31:22">BLKIF_OP_READ</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="35:57"><expr pos:start="33:9" pos:end="35:56"><call pos:start="33:9" pos:end="35:56"><name pos:start="33:9" pos:end="33:24">block_acct_start</name><argument_list pos:start="33:25" pos:end="35:56">(<argument pos:start="33:26" pos:end="33:51"><expr pos:start="33:26" pos:end="33:51"><call pos:start="33:26" pos:end="33:51"><name pos:start="33:26" pos:end="33:39">bdrv_get_stats</name><argument_list pos:start="33:40" pos:end="33:51">(<argument pos:start="33:41" pos:end="33:50"><expr pos:start="33:41" pos:end="33:50"><name pos:start="33:41" pos:end="33:50"><name pos:start="33:41" pos:end="33:46">blkdev</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:50">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:54" pos:end="33:65"><expr pos:start="33:54" pos:end="33:65"><operator pos:start="33:54" pos:end="33:54">&amp;</operator><name pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:59">ioreq</name><operator pos:start="33:60" pos:end="33:61">-&gt;</operator><name pos:start="33:62" pos:end="33:65">acct</name></name></expr></argument>,

                         <argument pos:start="35:26" pos:end="35:38"><expr pos:start="35:26" pos:end="35:38"><name pos:start="35:26" pos:end="35:38"><name pos:start="35:26" pos:end="35:30">ioreq</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:33">v</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:38">size</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:55"><expr pos:start="35:41" pos:end="35:55"><name pos:start="35:41" pos:end="35:55">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:13">ioreq</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:27">aio_inflight</name></name><operator pos:start="37:28" pos:end="37:29">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="43:49"><expr pos:start="39:9" pos:end="43:48"><call pos:start="39:9" pos:end="43:48"><name pos:start="39:9" pos:end="39:22">bdrv_aio_readv</name><argument_list pos:start="39:23" pos:end="43:48">(<argument pos:start="39:24" pos:end="39:33"><expr pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:29">blkdev</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:33">bs</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:60"><expr pos:start="39:36" pos:end="39:60"><name pos:start="39:36" pos:end="39:47"><name pos:start="39:36" pos:end="39:40">ioreq</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:47">start</name></name> <operator pos:start="39:49" pos:end="39:49">/</operator> <name pos:start="39:51" pos:end="39:60">BLOCK_SIZE</name></expr></argument>,

                       <argument pos:start="41:24" pos:end="41:32"><expr pos:start="41:24" pos:end="41:32"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:29">ioreq</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:32">v</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:60"><expr pos:start="41:35" pos:end="41:60"><name pos:start="41:35" pos:end="41:47"><name pos:start="41:35" pos:end="41:39">ioreq</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:42">v</name><operator pos:start="41:43" pos:end="41:43">.</operator><name pos:start="41:44" pos:end="41:47">size</name></name> <operator pos:start="41:49" pos:end="41:49">/</operator> <name pos:start="41:51" pos:end="41:60">BLOCK_SIZE</name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:40"><expr pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:40">qemu_aio_complete</name></expr></argument>, <argument pos:start="43:43" pos:end="43:47"><expr pos:start="43:43" pos:end="43:47"><name pos:start="43:43" pos:end="43:47">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:24">case <expr pos:start="47:10" pos:end="47:23"><name pos:start="47:10" pos:end="47:23">BLKIF_OP_WRITE</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:34">case <expr pos:start="49:10" pos:end="49:33"><name pos:start="49:10" pos:end="49:33">BLKIF_OP_FLUSH_DISKCACHE</name></expr>:</case>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:36">(<expr pos:start="51:13" pos:end="51:35"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:35"><name pos:start="51:14" pos:end="51:18">ioreq</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">req</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:35">nr_segments</name></name></expr>)</condition> <block pos:start="51:38" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:18">

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="61:58"><expr pos:start="59:9" pos:end="61:57"><call pos:start="59:9" pos:end="61:57"><name pos:start="59:9" pos:end="59:24">block_acct_start</name><argument_list pos:start="59:25" pos:end="61:57">(<argument pos:start="59:26" pos:end="59:51"><expr pos:start="59:26" pos:end="59:51"><call pos:start="59:26" pos:end="59:51"><name pos:start="59:26" pos:end="59:39">bdrv_get_stats</name><argument_list pos:start="59:40" pos:end="59:51">(<argument pos:start="59:41" pos:end="59:50"><expr pos:start="59:41" pos:end="59:50"><name pos:start="59:41" pos:end="59:50"><name pos:start="59:41" pos:end="59:46">blkdev</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:50">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:54" pos:end="59:65"><expr pos:start="59:54" pos:end="59:65"><operator pos:start="59:54" pos:end="59:54">&amp;</operator><name pos:start="59:55" pos:end="59:65"><name pos:start="59:55" pos:end="59:59">ioreq</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:65">acct</name></name></expr></argument>,

                         <argument pos:start="61:26" pos:end="61:38"><expr pos:start="61:26" pos:end="61:38"><name pos:start="61:26" pos:end="61:38"><name pos:start="61:26" pos:end="61:30">ioreq</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:33">v</name><operator pos:start="61:34" pos:end="61:34">.</operator><name pos:start="61:35" pos:end="61:38">size</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:56"><expr pos:start="61:41" pos:end="61:56"><name pos:start="61:41" pos:end="61:56">BLOCK_ACCT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:13">ioreq</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:27">aio_inflight</name></name><operator pos:start="63:28" pos:end="63:29">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="69:50"><expr pos:start="65:9" pos:end="69:49"><call pos:start="65:9" pos:end="69:49"><name pos:start="65:9" pos:end="65:23">bdrv_aio_writev</name><argument_list pos:start="65:24" pos:end="69:49">(<argument pos:start="65:25" pos:end="65:34"><expr pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:30">blkdev</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:34">bs</name></name></expr></argument>, <argument pos:start="65:37" pos:end="65:61"><expr pos:start="65:37" pos:end="65:61"><name pos:start="65:37" pos:end="65:48"><name pos:start="65:37" pos:end="65:41">ioreq</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:48">start</name></name> <operator pos:start="65:50" pos:end="65:50">/</operator> <name pos:start="65:52" pos:end="65:61">BLOCK_SIZE</name></expr></argument>,

                        <argument pos:start="67:25" pos:end="67:33"><expr pos:start="67:25" pos:end="67:33"><operator pos:start="67:25" pos:end="67:25">&amp;</operator><name pos:start="67:26" pos:end="67:33"><name pos:start="67:26" pos:end="67:30">ioreq</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:33">v</name></name></expr></argument>, <argument pos:start="67:36" pos:end="67:61"><expr pos:start="67:36" pos:end="67:61"><name pos:start="67:36" pos:end="67:48"><name pos:start="67:36" pos:end="67:40">ioreq</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:43">v</name><operator pos:start="67:44" pos:end="67:44">.</operator><name pos:start="67:45" pos:end="67:48">size</name></name> <operator pos:start="67:50" pos:end="67:50">/</operator> <name pos:start="67:52" pos:end="67:61">BLOCK_SIZE</name></expr></argument>,

                        <argument pos:start="69:25" pos:end="69:41"><expr pos:start="69:25" pos:end="69:41"><name pos:start="69:25" pos:end="69:41">qemu_aio_complete</name></expr></argument>, <argument pos:start="69:44" pos:end="69:48"><expr pos:start="69:44" pos:end="69:48"><name pos:start="69:44" pos:end="69:48">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:26">case <expr pos:start="73:10" pos:end="73:25"><name pos:start="73:10" pos:end="73:25">BLKIF_OP_DISCARD</name></expr>:</case>

    <block pos:start="75:5" pos:end="89:5">{<block_content pos:start="77:9" pos:end="87:14">

        <decl_stmt pos:start="77:9" pos:end="77:72"><decl pos:start="77:9" pos:end="77:71"><type pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:14">struct</name> <name pos:start="77:16" pos:end="77:36">blkif_request_discard</name></name> <modifier pos:start="77:38" pos:end="77:38">*</modifier></type><name pos:start="77:39" pos:end="77:49">discard_req</name> <init pos:start="77:51" pos:end="77:71">= <expr pos:start="77:53" pos:end="77:71"><operator pos:start="77:53" pos:end="77:53">(</operator><name pos:start="77:54" pos:end="77:57">void</name> <operator pos:start="77:59" pos:end="77:59">*</operator><operator pos:start="77:60" pos:end="77:60">)</operator><operator pos:start="77:61" pos:end="77:61">&amp;</operator><name pos:start="77:62" pos:end="77:71"><name pos:start="77:62" pos:end="77:66">ioreq</name><operator pos:start="77:67" pos:end="77:68">-&gt;</operator><name pos:start="77:69" pos:end="77:71">req</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:13">ioreq</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:27">aio_inflight</name></name><operator pos:start="79:28" pos:end="79:29">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="85:50"><expr pos:start="81:9" pos:end="85:49"><call pos:start="81:9" pos:end="85:49"><name pos:start="81:9" pos:end="81:24">bdrv_aio_discard</name><argument_list pos:start="81:25" pos:end="85:49">(<argument pos:start="81:26" pos:end="81:35"><expr pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:31">blkdev</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:35">bs</name></name></expr></argument>,

                        <argument pos:start="83:25" pos:end="83:50"><expr pos:start="83:25" pos:end="83:50"><name pos:start="83:25" pos:end="83:50"><name pos:start="83:25" pos:end="83:35">discard_req</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:50">sector_number</name></name></expr></argument>, <argument pos:start="83:53" pos:end="83:75"><expr pos:start="83:53" pos:end="83:75"><name pos:start="83:53" pos:end="83:75"><name pos:start="83:53" pos:end="83:63">discard_req</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:75">nr_sectors</name></name></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:41"><expr pos:start="85:25" pos:end="85:41"><name pos:start="85:25" pos:end="85:41">qemu_aio_complete</name></expr></argument>, <argument pos:start="85:44" pos:end="85:48"><expr pos:start="85:44" pos:end="85:48"><name pos:start="85:44" pos:end="85:48">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    </block_content>}</block>

    <default pos:start="91:5" pos:end="91:12">default:</default>

        <comment type="block" pos:start="93:9" pos:end="93:72">/* unknown operation (shouldn't happen -- parse catches this) */</comment>

        <goto pos:start="95:9" pos:end="95:17">goto <name pos:start="95:14" pos:end="95:16">err</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><call pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:21">qemu_aio_complete</name><argument_list pos:start="101:22" pos:end="101:31">(<argument pos:start="101:23" pos:end="101:27"><expr pos:start="101:23" pos:end="101:27"><name pos:start="101:23" pos:end="101:27">ioreq</name></expr></argument>, <argument pos:start="101:30" pos:end="101:30"><expr pos:start="101:30" pos:end="101:30"><literal type="number" pos:start="101:30" pos:end="101:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>



<label pos:start="109:1" pos:end="109:4"><name pos:start="109:1" pos:end="109:3">err</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:23"><expr pos:start="111:5" pos:end="111:22"><call pos:start="111:5" pos:end="111:22"><name pos:start="111:5" pos:end="111:15">ioreq_unmap</name><argument_list pos:start="111:16" pos:end="111:22">(<argument pos:start="111:17" pos:end="111:21"><expr pos:start="111:17" pos:end="111:21"><name pos:start="111:17" pos:end="111:21">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="113:1" pos:end="113:11"><name pos:start="113:1" pos:end="113:10">err_no_map</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:24"><expr pos:start="115:5" pos:end="115:23"><call pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:16">ioreq_finish</name><argument_list pos:start="115:17" pos:end="115:23">(<argument pos:start="115:18" pos:end="115:22"><expr pos:start="115:18" pos:end="115:22"><name pos:start="115:18" pos:end="115:22">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:36"><expr pos:start="117:5" pos:end="117:35"><name pos:start="117:5" pos:end="117:17"><name pos:start="117:5" pos:end="117:9">ioreq</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:17">status</name></name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:35">BLKIF_RSP_ERROR</name></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:14">return <expr pos:start="119:12" pos:end="119:13"><operator pos:start="119:12" pos:end="119:12">-</operator><literal type="number" pos:start="119:13" pos:end="119:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
