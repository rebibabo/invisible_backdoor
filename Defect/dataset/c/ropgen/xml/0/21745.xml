<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21745.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">m5208_timer_write</name><parameter_list pos:start="1:30" pos:end="3:60">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:69">offset</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:44"><decl pos:start="3:31" pos:end="3:44"><type pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:38">uint64_t</name></type> <name pos:start="3:40" pos:end="3:44">value</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:54">unsigned</name></type> <name pos:start="3:56" pos:end="3:59">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:26">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">m5208_timer_state</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:54">= <expr pos:start="7:28" pos:end="7:54"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:45">m5208_timer_state</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator><name pos:start="7:49" pos:end="7:54">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">prescale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">limit</name></decl>;</decl_stmt>

    <switch pos:start="13:5" pos:end="103:5">switch <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">offset</name></expr>)</condition> <block pos:start="13:21" pos:end="103:5">{<block_content pos:start="15:5" pos:end="101:14">

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">0</literal></expr>:</case>

        <comment type="block" pos:start="17:9" pos:end="17:43">/* The PIF bit is set-to-clear.  */</comment>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:17">value</name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <name pos:start="19:21" pos:end="19:28">PCSR_PIF</name></expr>)</condition> <block pos:start="19:31" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:31">

            <expr_stmt pos:start="21:13" pos:end="21:33"><expr pos:start="21:13" pos:end="21:32"><name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:19">pcsr</name></name> <operator pos:start="21:21" pos:end="21:22">&amp;=</operator> <operator pos:start="21:24" pos:end="21:24">~</operator><name pos:start="21:25" pos:end="21:32">PCSR_PIF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:31"><expr pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:17">value</name> <operator pos:start="23:19" pos:end="23:20">&amp;=</operator> <operator pos:start="23:22" pos:end="23:22">~</operator><name pos:start="23:23" pos:end="23:30">PCSR_PIF</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:72">/* Avoid frobbing the timer if we're just twiddling IRQ bits. */</comment>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:49">(<expr pos:start="29:13" pos:end="29:48"><operator pos:start="29:13" pos:end="29:13">(</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:21"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">pcsr</name></name> <operator pos:start="29:23" pos:end="29:23">^</operator> <name pos:start="29:25" pos:end="29:29">value</name><operator pos:start="29:30" pos:end="29:30">)</operator> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <operator pos:start="29:34" pos:end="29:34">~</operator><name pos:start="29:35" pos:end="29:42">PCSR_PIE</name><operator pos:start="29:43" pos:end="29:43">)</operator> <operator pos:start="29:45" pos:end="29:46">==</operator> <literal type="number" pos:start="29:48" pos:end="29:48">0</literal></expr>)</condition> <block pos:start="29:51" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:19">

            <expr_stmt pos:start="31:13" pos:end="31:28"><expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">pcsr</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:27">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><call pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:30">m5208_timer_update</name><argument_list pos:start="33:31" pos:end="33:33">(<argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="43:34"><if pos:start="41:9" pos:end="43:34">if <condition pos:start="41:12" pos:end="41:30">(<expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">pcsr</name></name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <name pos:start="41:23" pos:end="41:29">PCSR_EN</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:34"><block_content pos:start="43:13" pos:end="43:34">

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:23">ptimer_stop</name><argument_list pos:start="43:24" pos:end="43:33">(<argument pos:start="43:25" pos:end="43:32"><expr pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:32">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:15">pcsr</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:23">value</name></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:16">prescale</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal> <operator pos:start="51:22" pos:end="51:23">&lt;&lt;</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><operator pos:start="51:26" pos:end="51:26">(</operator><name pos:start="51:27" pos:end="51:33"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:33">pcsr</name></name> <operator pos:start="51:35" pos:end="51:35">&amp;</operator> <name pos:start="51:37" pos:end="51:49">PCSR_PRE_MASK</name><operator pos:start="51:50" pos:end="51:50">)</operator> <operator pos:start="51:52" pos:end="51:53">&gt;&gt;</operator> <name pos:start="51:55" pos:end="51:68">PCSR_PRE_SHIFT</name><operator pos:start="51:69" pos:end="51:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><call pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:23">ptimer_set_freq</name><argument_list pos:start="53:24" pos:end="53:60">(<argument pos:start="53:25" pos:end="53:32"><expr pos:start="53:25" pos:end="53:32"><name pos:start="53:25" pos:end="53:32"><name pos:start="53:25" pos:end="53:25">s</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:32">timer</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:59"><expr pos:start="53:35" pos:end="53:59"><operator pos:start="53:35" pos:end="53:35">(</operator><name pos:start="53:36" pos:end="53:43">SYS_FREQ</name> <operator pos:start="53:45" pos:end="53:45">/</operator> <literal type="number" pos:start="53:47" pos:end="53:47">2</literal><operator pos:start="53:48" pos:end="53:48">)</operator> <operator pos:start="53:50" pos:end="53:50">/</operator> <name pos:start="53:52" pos:end="53:59">prescale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:27"><if pos:start="55:9" pos:end="57:27">if <condition pos:start="55:12" pos:end="55:31">(<expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:19">pcsr</name></name> <operator pos:start="55:21" pos:end="55:21">&amp;</operator> <name pos:start="55:23" pos:end="55:30">PCSR_RLD</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:27"><block_content pos:start="57:13" pos:end="57:27">

            <expr_stmt pos:start="57:13" pos:end="57:27"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">limit</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">pmr</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="59:9" pos:end="61:27">else<block type="pseudo" pos:start="61:13" pos:end="61:27"><block_content pos:start="61:13" pos:end="61:27">

            <expr_stmt pos:start="61:13" pos:end="61:27"><expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:17">limit</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:26">0xffff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><call pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:24">ptimer_set_limit</name><argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:33"><expr pos:start="63:26" pos:end="63:33"><name pos:start="63:26" pos:end="63:33"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:33">timer</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:40"><expr pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:40">limit</name></expr></argument>, <argument pos:start="63:43" pos:end="63:43"><expr pos:start="63:43" pos:end="63:43"><literal type="number" pos:start="63:43" pos:end="63:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="69:36"><if pos:start="67:9" pos:end="69:36">if <condition pos:start="67:12" pos:end="67:30">(<expr pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:19">pcsr</name></name> <operator pos:start="67:21" pos:end="67:21">&amp;</operator> <name pos:start="67:23" pos:end="67:29">PCSR_EN</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:36"><block_content pos:start="69:13" pos:end="69:36">

            <expr_stmt pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:35"><call pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:22">ptimer_run</name><argument_list pos:start="69:23" pos:end="69:35">(<argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:31">timer</name></name></expr></argument>, <argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><literal type="number" pos:start="69:34" pos:end="69:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">2</literal></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">pmr</name></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:22">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">pcsr</name></name> <operator pos:start="77:17" pos:end="77:18">&amp;=</operator> <operator pos:start="77:20" pos:end="77:20">~</operator><name pos:start="77:21" pos:end="77:28">PCSR_PIF</name></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="89:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:38">(<expr pos:start="79:13" pos:end="79:37"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:20"><name pos:start="79:14" pos:end="79:14">s</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:20">pcsr</name></name> <operator pos:start="79:22" pos:end="79:22">&amp;</operator> <name pos:start="79:24" pos:end="79:31">PCSR_RLD</name><operator pos:start="79:32" pos:end="79:32">)</operator> <operator pos:start="79:34" pos:end="79:35">==</operator> <literal type="number" pos:start="79:37" pos:end="79:37">0</literal></expr>)</condition> <block pos:start="79:40" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:50">

            <if_stmt pos:start="81:13" pos:end="83:50"><if pos:start="81:13" pos:end="83:50">if <condition pos:start="81:16" pos:end="81:35">(<expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">pcsr</name></name> <operator pos:start="81:25" pos:end="81:25">&amp;</operator> <name pos:start="81:27" pos:end="81:34">PCSR_OVW</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:50"><block_content pos:start="83:17" pos:end="83:50">

                <expr_stmt pos:start="83:17" pos:end="83:50"><expr pos:start="83:17" pos:end="83:49"><call pos:start="83:17" pos:end="83:49"><name pos:start="83:17" pos:end="83:32">ptimer_set_count</name><argument_list pos:start="83:33" pos:end="83:49">(<argument pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:41"><name pos:start="83:34" pos:end="83:41"><name pos:start="83:34" pos:end="83:34">s</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:41">timer</name></name></expr></argument>, <argument pos:start="83:44" pos:end="83:48"><expr pos:start="83:44" pos:end="83:48"><name pos:start="83:44" pos:end="83:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:66">

            <expr_stmt pos:start="87:13" pos:end="87:66"><expr pos:start="87:13" pos:end="87:65"><call pos:start="87:13" pos:end="87:65"><name pos:start="87:13" pos:end="87:28">ptimer_set_limit</name><argument_list pos:start="87:29" pos:end="87:65">(<argument pos:start="87:30" pos:end="87:37"><expr pos:start="87:30" pos:end="87:37"><name pos:start="87:30" pos:end="87:37"><name pos:start="87:30" pos:end="87:30">s</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:37">timer</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:44"><expr pos:start="87:40" pos:end="87:44"><name pos:start="87:40" pos:end="87:44">value</name></expr></argument>, <argument pos:start="87:47" pos:end="87:64"><expr pos:start="87:47" pos:end="87:64"><name pos:start="87:47" pos:end="87:53"><name pos:start="87:47" pos:end="87:47">s</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:53">pcsr</name></name> <operator pos:start="87:55" pos:end="87:55">&amp;</operator> <name pos:start="87:57" pos:end="87:64">PCSR_OVW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:11">case <expr pos:start="93:10" pos:end="93:10"><literal type="number" pos:start="93:10" pos:end="93:10">4</literal></expr>:</case>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <default pos:start="97:5" pos:end="97:12">default:</default>

        <expr_stmt pos:start="99:9" pos:end="99:70"><expr pos:start="99:9" pos:end="99:69"><call pos:start="99:9" pos:end="99:69"><name pos:start="99:9" pos:end="99:16">hw_error</name><argument_list pos:start="99:17" pos:end="99:69">(<argument pos:start="99:18" pos:end="99:55"><expr pos:start="99:18" pos:end="99:55"><literal type="string" pos:start="99:18" pos:end="99:55">"m5208_timer_write: Bad offset 0x%x\n"</literal></expr></argument>, <argument pos:start="99:58" pos:end="99:68"><expr pos:start="99:58" pos:end="99:68"><operator pos:start="99:58" pos:end="99:58">(</operator><name pos:start="99:59" pos:end="99:61">int</name><operator pos:start="99:62" pos:end="99:62">)</operator><name pos:start="99:63" pos:end="99:68">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="105:5" pos:end="105:26"><expr pos:start="105:5" pos:end="105:25"><call pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:22">m5208_timer_update</name><argument_list pos:start="105:23" pos:end="105:25">(<argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
