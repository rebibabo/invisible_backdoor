<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10923.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:35">stellaris_enet_read</name><parameter_list pos:start="1:36" pos:end="1:76">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:75"><decl pos:start="1:51" pos:end="1:75"><type pos:start="1:51" pos:end="1:75"><name pos:start="1:51" pos:end="1:68">target_phys_addr_t</name></type> <name pos:start="1:70" pos:end="1:75">offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:5">

    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:60"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">stellaris_enet_state</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="5:60">= <expr pos:start="5:31" pos:end="5:60"><operator pos:start="5:31" pos:end="5:31">(</operator><name pos:start="5:32" pos:end="5:51">stellaris_enet_state</name> <operator pos:start="5:53" pos:end="5:53">*</operator><operator pos:start="5:54" pos:end="5:54">)</operator><name pos:start="5:55" pos:end="5:60">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="129:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="129:5">{<block_content pos:start="13:5" pos:end="127:17">

    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><literal type="number" pos:start="13:10" pos:end="13:13">0x00</literal></expr>:</case> <comment type="block" pos:start="13:16" pos:end="13:24">/* RIS */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:15">DPRINTF</name><argument_list pos:start="15:16" pos:end="15:44">(<argument pos:start="15:17" pos:end="15:35"><expr pos:start="15:17" pos:end="15:35"><literal type="string" pos:start="15:17" pos:end="15:35">"IRQ status %02x\n"</literal></expr></argument>, <argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:43">ris</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:22">return <expr pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:21">ris</name></name></expr>;</return>

    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><literal type="number" pos:start="19:10" pos:end="19:13">0x04</literal></expr>:</case> <comment type="block" pos:start="19:16" pos:end="19:23">/* IM */</comment>

        <return pos:start="21:9" pos:end="21:21">return <expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">im</name></name></expr>;</return>

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x08</literal></expr>:</case> <comment type="block" pos:start="23:16" pos:end="23:25">/* RCTL */</comment>

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">rctl</name></name></expr>;</return>

    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><literal type="number" pos:start="27:10" pos:end="27:13">0x0c</literal></expr>:</case> <comment type="block" pos:start="27:16" pos:end="27:25">/* TCTL */</comment>

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:22">tctl</name></name></expr>;</return>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x10</literal></expr>:</case> <comment type="block" pos:start="31:16" pos:end="31:25">/* DATA */</comment>

        <if_stmt pos:start="33:9" pos:end="49:9"><if pos:start="33:9" pos:end="49:9">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:26">rx_fifo_len</name></name> <operator pos:start="33:28" pos:end="33:29">==</operator> <literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr>)</condition> <block pos:start="33:34" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:69">

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:27">(<expr pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:21">np</name></name> <operator pos:start="35:23" pos:end="35:24">==</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>)</condition> <block pos:start="35:29" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:25">

                <expr_stmt pos:start="37:17" pos:end="37:39"><expr pos:start="37:17" pos:end="37:38"><call pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:20">BADF</name><argument_list pos:start="37:21" pos:end="37:38">(<argument pos:start="37:22" pos:end="37:37"><expr pos:start="37:22" pos:end="37:37"><literal type="string" pos:start="37:22" pos:end="37:37">"RX underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="39:17" pos:end="39:25">return <expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:55"><expr pos:start="43:13" pos:end="43:54"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:26">rx_fifo_len</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:50"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:34">rx</name><index pos:start="43:35" pos:end="43:50">[<expr pos:start="43:36" pos:end="43:49"><name pos:start="43:36" pos:end="43:49"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:49">next_packet</name></name></expr>]</index></name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:54">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:52"><expr pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">rx_fifo</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:46"><name pos:start="45:26" pos:end="45:26">s</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:30">rx</name><index pos:start="45:31" pos:end="45:46">[<expr pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:32">s</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:45">next_packet</name></name></expr>]</index></name><operator pos:start="45:47" pos:end="45:47">.</operator><name pos:start="45:48" pos:end="45:51">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:69"><expr pos:start="47:13" pos:end="47:68"><call pos:start="47:13" pos:end="47:68"><name pos:start="47:13" pos:end="47:19">DPRINTF</name><argument_list pos:start="47:20" pos:end="47:68">(<argument pos:start="47:21" pos:end="47:51"><expr pos:start="47:21" pos:end="47:51"><literal type="string" pos:start="47:21" pos:end="47:51">"RX FIFO start packet len=%d\n"</literal></expr></argument>, <argument pos:start="47:54" pos:end="47:67"><expr pos:start="47:54" pos:end="47:67"><name pos:start="47:54" pos:end="47:67"><name pos:start="47:54" pos:end="47:54">s</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:67">rx_fifo_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:38"><expr pos:start="51:9" pos:end="53:37"><name pos:start="51:9" pos:end="51:11">val</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">rx_fifo</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>]</index></name> <operator pos:start="51:29" pos:end="51:29">|</operator> <operator pos:start="51:31" pos:end="51:31">(</operator><name pos:start="51:32" pos:end="51:44"><name pos:start="51:32" pos:end="51:32">s</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:41">rx_fifo</name><index pos:start="51:42" pos:end="51:44">[<expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">1</literal></expr>]</index></name> <operator pos:start="51:46" pos:end="51:47">&lt;&lt;</operator> <literal type="number" pos:start="51:49" pos:end="51:49">8</literal><operator pos:start="51:50" pos:end="51:50">)</operator> <operator pos:start="51:52" pos:end="51:52">|</operator> <operator pos:start="51:54" pos:end="51:54">(</operator><name pos:start="51:55" pos:end="51:67"><name pos:start="51:55" pos:end="51:55">s</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:64">rx_fifo</name><index pos:start="51:65" pos:end="51:67">[<expr pos:start="51:66" pos:end="51:66"><literal type="number" pos:start="51:66" pos:end="51:66">2</literal></expr>]</index></name> <operator pos:start="51:69" pos:end="51:70">&lt;&lt;</operator> <literal type="number" pos:start="51:72" pos:end="51:73">16</literal><operator pos:start="51:74" pos:end="51:74">)</operator>

              <operator pos:start="53:15" pos:end="53:15">|</operator> <operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:30"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:27">rx_fifo</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><literal type="number" pos:start="53:29" pos:end="53:29">3</literal></expr>]</index></name> <operator pos:start="53:32" pos:end="53:33">&lt;&lt;</operator> <literal type="number" pos:start="53:35" pos:end="53:36">24</literal><operator pos:start="53:37" pos:end="53:37">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">rx_fifo</name></name> <operator pos:start="55:20" pos:end="55:21">+=</operator> <literal type="number" pos:start="55:23" pos:end="55:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:22">rx_fifo_len</name></name> <operator pos:start="57:24" pos:end="57:25">-=</operator> <literal type="number" pos:start="57:27" pos:end="57:27">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="73:9"><if pos:start="59:9" pos:end="73:9">if <condition pos:start="59:12" pos:end="59:32">(<expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:26">rx_fifo_len</name></name> <operator pos:start="59:28" pos:end="59:29">&lt;=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr>)</condition> <block pos:start="59:34" pos:end="73:9">{<block_content pos:start="61:13" pos:end="71:46">

            <expr_stmt pos:start="61:13" pos:end="61:31"><expr pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:26">rx_fifo_len</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:29"><expr pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:26">next_packet</name></name><operator pos:start="63:27" pos:end="63:28">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:35"><if pos:start="65:13" pos:end="67:35">if <condition pos:start="65:16" pos:end="65:37">(<expr pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:30">next_packet</name></name> <operator pos:start="65:32" pos:end="65:33">&gt;=</operator> <literal type="number" pos:start="65:35" pos:end="65:36">31</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:35"><block_content pos:start="67:17" pos:end="67:35">

                <expr_stmt pos:start="67:17" pos:end="67:35"><expr pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:30"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:30">next_packet</name></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:20"><expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:17">np</name></name><operator pos:start="69:18" pos:end="69:19">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:46"><expr pos:start="71:13" pos:end="71:45"><call pos:start="71:13" pos:end="71:45"><name pos:start="71:13" pos:end="71:19">DPRINTF</name><argument_list pos:start="71:20" pos:end="71:45">(<argument pos:start="71:21" pos:end="71:37"><expr pos:start="71:21" pos:end="71:37"><literal type="string" pos:start="71:21" pos:end="71:37">"RX done np=%d\n"</literal></expr></argument>, <argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:40">s</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:44">np</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">val</name></expr>;</return>

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x14</literal></expr>:</case> <comment type="block" pos:start="77:16" pos:end="77:24">/* IA0 */</comment>

        <return pos:start="79:9" pos:end="81:63">return <expr pos:start="79:16" pos:end="81:62"><name pos:start="79:16" pos:end="79:28"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:25">macaddr</name><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>]</index></name> <operator pos:start="79:30" pos:end="79:30">|</operator> <operator pos:start="79:32" pos:end="79:32">(</operator><name pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">macaddr</name><index pos:start="79:43" pos:end="79:45">[<expr pos:start="79:44" pos:end="79:44"><literal type="number" pos:start="79:44" pos:end="79:44">1</literal></expr>]</index></name> <operator pos:start="79:47" pos:end="79:48">&lt;&lt;</operator> <literal type="number" pos:start="79:50" pos:end="79:50">8</literal><operator pos:start="79:51" pos:end="79:51">)</operator>

               <operator pos:start="81:16" pos:end="81:16">|</operator> <operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:31"><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:28">macaddr</name><index pos:start="81:29" pos:end="81:31">[<expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">2</literal></expr>]</index></name> <operator pos:start="81:33" pos:end="81:34">&lt;&lt;</operator> <literal type="number" pos:start="81:36" pos:end="81:37">16</literal><operator pos:start="81:38" pos:end="81:38">)</operator> <operator pos:start="81:40" pos:end="81:40">|</operator> <operator pos:start="81:42" pos:end="81:42">(</operator><name pos:start="81:43" pos:end="81:55"><name pos:start="81:43" pos:end="81:43">s</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:52">macaddr</name><index pos:start="81:53" pos:end="81:55">[<expr pos:start="81:54" pos:end="81:54"><literal type="number" pos:start="81:54" pos:end="81:54">3</literal></expr>]</index></name> <operator pos:start="81:57" pos:end="81:58">&lt;&lt;</operator> <literal type="number" pos:start="81:60" pos:end="81:61">24</literal><operator pos:start="81:62" pos:end="81:62">)</operator></expr>;</return>

    <case pos:start="83:5" pos:end="83:14">case <expr pos:start="83:10" pos:end="83:13"><literal type="number" pos:start="83:10" pos:end="83:13">0x18</literal></expr>:</case> <comment type="block" pos:start="83:16" pos:end="83:24">/* IA1 */</comment>

        <return pos:start="85:9" pos:end="85:52">return <expr pos:start="85:16" pos:end="85:51"><name pos:start="85:16" pos:end="85:28"><name pos:start="85:16" pos:end="85:16">s</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:25">macaddr</name><index pos:start="85:26" pos:end="85:28">[<expr pos:start="85:27" pos:end="85:27"><literal type="number" pos:start="85:27" pos:end="85:27">4</literal></expr>]</index></name> <operator pos:start="85:30" pos:end="85:30">|</operator> <operator pos:start="85:32" pos:end="85:32">(</operator><name pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:33">s</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:42">macaddr</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">5</literal></expr>]</index></name> <operator pos:start="85:47" pos:end="85:48">&lt;&lt;</operator> <literal type="number" pos:start="85:50" pos:end="85:50">8</literal><operator pos:start="85:51" pos:end="85:51">)</operator></expr>;</return>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x1c</literal></expr>:</case> <comment type="block" pos:start="87:16" pos:end="87:24">/* THR */</comment>

        <return pos:start="89:9" pos:end="89:22">return <expr pos:start="89:16" pos:end="89:21"><name pos:start="89:16" pos:end="89:21"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:21">thr</name></name></expr>;</return>

    <case pos:start="91:5" pos:end="91:14">case <expr pos:start="91:10" pos:end="91:13"><literal type="number" pos:start="91:10" pos:end="91:13">0x20</literal></expr>:</case> <comment type="block" pos:start="91:16" pos:end="91:25">/* MCTL */</comment>

        <return pos:start="93:9" pos:end="93:23">return <expr pos:start="93:16" pos:end="93:22"><name pos:start="93:16" pos:end="93:22"><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:22">mctl</name></name></expr>;</return>

    <case pos:start="95:5" pos:end="95:14">case <expr pos:start="95:10" pos:end="95:13"><literal type="number" pos:start="95:10" pos:end="95:13">0x24</literal></expr>:</case> <comment type="block" pos:start="95:16" pos:end="95:24">/* MDV */</comment>

        <return pos:start="97:9" pos:end="97:22">return <expr pos:start="97:16" pos:end="97:21"><name pos:start="97:16" pos:end="97:21"><name pos:start="97:16" pos:end="97:16">s</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:21">mdv</name></name></expr>;</return>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x28</literal></expr>:</case> <comment type="block" pos:start="99:16" pos:end="99:25">/* MADD */</comment>

        <return pos:start="101:9" pos:end="101:17">return <expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>;</return>

    <case pos:start="103:5" pos:end="103:14">case <expr pos:start="103:10" pos:end="103:13"><literal type="number" pos:start="103:10" pos:end="103:13">0x2c</literal></expr>:</case> <comment type="block" pos:start="103:16" pos:end="103:25">/* MTXD */</comment>

        <return pos:start="105:9" pos:end="105:23">return <expr pos:start="105:16" pos:end="105:22"><name pos:start="105:16" pos:end="105:22"><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:22">mtxd</name></name></expr>;</return>

    <case pos:start="107:5" pos:end="107:14">case <expr pos:start="107:10" pos:end="107:13"><literal type="number" pos:start="107:10" pos:end="107:13">0x30</literal></expr>:</case> <comment type="block" pos:start="107:16" pos:end="107:25">/* MRXD */</comment>

        <return pos:start="109:9" pos:end="109:23">return <expr pos:start="109:16" pos:end="109:22"><name pos:start="109:16" pos:end="109:22"><name pos:start="109:16" pos:end="109:16">s</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:22">mrxd</name></name></expr>;</return>

    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x34</literal></expr>:</case> <comment type="block" pos:start="111:16" pos:end="111:23">/* NP */</comment>

        <return pos:start="113:9" pos:end="113:21">return <expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:16">s</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:20">np</name></name></expr>;</return>

    <case pos:start="115:5" pos:end="115:14">case <expr pos:start="115:10" pos:end="115:13"><literal type="number" pos:start="115:10" pos:end="115:13">0x38</literal></expr>:</case> <comment type="block" pos:start="115:16" pos:end="115:23">/* TR */</comment>

        <return pos:start="117:9" pos:end="117:17">return <expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">0</literal></expr>;</return>

    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x3c</literal></expr>:</case> <comment type="block" pos:start="119:16" pos:end="119:44">/* Undocuented: Timestamp? */</comment>

        <return pos:start="121:9" pos:end="121:17">return <expr pos:start="121:16" pos:end="121:16"><literal type="number" pos:start="121:16" pos:end="121:16">0</literal></expr>;</return>

    <default pos:start="123:5" pos:end="123:12">default:</default>

        <expr_stmt pos:start="125:9" pos:end="125:70"><expr pos:start="125:9" pos:end="125:69"><call pos:start="125:9" pos:end="125:69"><name pos:start="125:9" pos:end="125:16">hw_error</name><argument_list pos:start="125:17" pos:end="125:69">(<argument pos:start="125:18" pos:end="125:55"><expr pos:start="125:18" pos:end="125:55"><literal type="string" pos:start="125:18" pos:end="125:55">"stellaris_enet_read: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="125:58" pos:end="125:68"><expr pos:start="125:58" pos:end="125:68"><operator pos:start="125:58" pos:end="125:58">(</operator><name pos:start="125:59" pos:end="125:61">int</name><operator pos:start="125:62" pos:end="125:62">)</operator><name pos:start="125:63" pos:end="125:68">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="127:9" pos:end="127:17">return <expr pos:start="127:16" pos:end="127:16"><literal type="number" pos:start="127:16" pos:end="127:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
