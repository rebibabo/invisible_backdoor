<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26067.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">do_drive_backup</name><parameter_list pos:start="1:28" pos:end="1:80">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:39">DriveBackup</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">backup</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:60">BlockJobTxn</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">txn</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:72">Error</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier><modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="231:1">{<block_content pos:start="5:5" pos:end="229:37">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:31">target_bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:28">source</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">BdrvDirtyBitmap</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:25">bmap</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">AioContext</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:27">aio_context</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QDict</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:18">options</name> <init pos:start="15:20" pos:end="15:25">= <expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:20">local_err</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:16">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:27">(<expr pos:start="25:9" pos:end="25:26"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:26"><name pos:start="25:10" pos:end="25:15">backup</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:26">has_speed</name></name></expr>)</condition> <block pos:start="25:29" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:26">

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:14">backup</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">speed</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:37">(<expr pos:start="31:9" pos:end="31:36"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:36"><name pos:start="31:10" pos:end="31:15">backup</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:36">has_on_source_error</name></name></expr>)</condition> <block pos:start="31:39" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:59">

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:14">backup</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:31">on_source_error</name></name> <operator pos:start="33:33" pos:end="33:33">=</operator> <name pos:start="33:35" pos:end="33:58">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:36"><name pos:start="37:10" pos:end="37:15">backup</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:36">has_on_target_error</name></name></expr>)</condition> <block pos:start="37:39" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:59">

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:14">backup</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:31">on_target_error</name></name> <operator pos:start="39:33" pos:end="39:33">=</operator> <name pos:start="39:35" pos:end="39:58">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:26">(<expr pos:start="43:9" pos:end="43:25"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:25"><name pos:start="43:10" pos:end="43:15">backup</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:25">has_mode</name></name></expr>)</condition> <block pos:start="43:28" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:53">

        <expr_stmt pos:start="45:9" pos:end="45:53"><expr pos:start="45:9" pos:end="45:52"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:14">backup</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:20">mode</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:52">NEW_IMAGE_MODE_ABSOLUTE_PATHS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:28">(<expr pos:start="49:9" pos:end="49:27"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:27"><name pos:start="49:10" pos:end="49:15">backup</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">has_job_id</name></name></expr>)</condition> <block pos:start="49:30" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:30">

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:14">backup</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:22">job_id</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:29">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:6">bs</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <call pos:start="57:10" pos:end="57:46"><name pos:start="57:10" pos:end="57:24">qmp_get_root_bs</name><argument_list pos:start="57:25" pos:end="57:46">(<argument pos:start="57:26" pos:end="57:39"><expr pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:31">backup</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:39">device</name></name></expr></argument>, <argument pos:start="57:42" pos:end="57:45"><expr pos:start="57:42" pos:end="57:45"><name pos:start="57:42" pos:end="57:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:12">(<expr pos:start="59:9" pos:end="59:11"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:11">bs</name></expr>)</condition> <block pos:start="59:14" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:15">

        <return pos:start="61:9" pos:end="61:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:43"><expr pos:start="67:5" pos:end="67:42"><name pos:start="67:5" pos:end="67:15">aio_context</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:42"><name pos:start="67:19" pos:end="67:38">bdrv_get_aio_context</name><argument_list pos:start="67:39" pos:end="67:42">(<argument pos:start="67:40" pos:end="67:41"><expr pos:start="67:40" pos:end="67:41"><name pos:start="67:40" pos:end="67:41">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><call pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:23">aio_context_acquire</name><argument_list pos:start="69:24" pos:end="69:36">(<argument pos:start="69:25" pos:end="69:35"><expr pos:start="69:25" pos:end="69:35"><name pos:start="69:25" pos:end="69:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:28">(<expr pos:start="73:9" pos:end="73:27"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:27"><name pos:start="73:10" pos:end="73:15">backup</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:27">has_format</name></name></expr>)</condition> <block pos:start="73:30" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:61">

        <expr_stmt pos:start="75:9" pos:end="77:61"><expr pos:start="75:9" pos:end="77:60"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:14">backup</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:22">format</name></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <ternary pos:start="75:26" pos:end="77:60"><condition pos:start="75:26" pos:end="75:66"><expr pos:start="75:26" pos:end="75:64"><name pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:31">backup</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:37">mode</name></name> <operator pos:start="75:39" pos:end="75:40">==</operator> <name pos:start="75:42" pos:end="75:64">NEW_IMAGE_MODE_EXISTING</name></expr> ?</condition><then pos:start="77:26" pos:end="77:29">

                         <expr pos:start="77:26" pos:end="77:29"><name pos:start="77:26" pos:end="77:29">NULL</name></expr> </then><else pos:start="77:31" pos:end="77:60">: <expr pos:start="77:33" pos:end="77:60"><operator pos:start="77:33" pos:end="77:33">(</operator><name pos:start="77:34" pos:end="77:37">char</name><operator pos:start="77:38" pos:end="77:38">*</operator><operator pos:start="77:39" pos:end="77:39">)</operator> <name pos:start="77:41" pos:end="77:60"><name pos:start="77:41" pos:end="77:42">bs</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:47">drv</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:60">format_name</name></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:46">/* Early check to avoid creating target */</comment>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:66">(<expr pos:start="85:9" pos:end="85:65"><call pos:start="85:9" pos:end="85:65"><name pos:start="85:9" pos:end="85:26">bdrv_op_is_blocked</name><argument_list pos:start="85:27" pos:end="85:65">(<argument pos:start="85:28" pos:end="85:29"><expr pos:start="85:28" pos:end="85:29"><name pos:start="85:28" pos:end="85:29">bs</name></expr></argument>, <argument pos:start="85:32" pos:end="85:58"><expr pos:start="85:32" pos:end="85:58"><name pos:start="85:32" pos:end="85:58">BLOCK_OP_TYPE_BACKUP_SOURCE</name></expr></argument>, <argument pos:start="85:61" pos:end="85:64"><expr pos:start="85:61" pos:end="85:64"><name pos:start="85:61" pos:end="85:64">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:68" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:17">

        <goto pos:start="87:9" pos:end="87:17">goto <name pos:start="87:14" pos:end="87:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:41"><expr pos:start="93:5" pos:end="93:40"><name pos:start="93:5" pos:end="93:9">flags</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <name pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:14">bs</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:26">open_flags</name></name> <operator pos:start="93:28" pos:end="93:28">|</operator> <name pos:start="93:30" pos:end="93:40">BDRV_O_RDWR</name></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="99:20">/* See if we have a backing HD we can use to create our new image

     * on top of. */</comment>

    <if_stmt pos:start="101:5" pos:end="111:5"><if pos:start="101:5" pos:end="111:5">if <condition pos:start="101:8" pos:end="101:45">(<expr pos:start="101:9" pos:end="101:44"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:14">backup</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:20">sync</name></name> <operator pos:start="101:22" pos:end="101:23">==</operator> <name pos:start="101:25" pos:end="101:44">MIRROR_SYNC_MODE_TOP</name></expr>)</condition> <block pos:start="101:47" pos:end="111:5">{<block_content pos:start="103:9" pos:end="109:9">

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:14">source</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:31"><name pos:start="103:18" pos:end="103:27">backing_bs</name><argument_list pos:start="103:28" pos:end="103:31">(<argument pos:start="103:29" pos:end="103:30"><expr pos:start="103:29" pos:end="103:30"><name pos:start="103:29" pos:end="103:30">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:20">(<expr pos:start="105:13" pos:end="105:19"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:19">source</name></expr>)</condition> <block pos:start="105:22" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:49">

            <expr_stmt pos:start="107:13" pos:end="107:49"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:18">backup</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:24">sync</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:48">MIRROR_SYNC_MODE_FULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:46">(<expr pos:start="113:9" pos:end="113:45"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:14">backup</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:20">sync</name></name> <operator pos:start="113:22" pos:end="113:23">==</operator> <name pos:start="113:25" pos:end="113:45">MIRROR_SYNC_MODE_NONE</name></expr>)</condition> <block pos:start="113:48" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:20">

        <expr_stmt pos:start="115:9" pos:end="115:20"><expr pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:14">source</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:19">bs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:8">size</name> <operator pos:start="121:10" pos:end="121:10">=</operator> <call pos:start="121:12" pos:end="121:29"><name pos:start="121:12" pos:end="121:25">bdrv_getlength</name><argument_list pos:start="121:26" pos:end="121:29">(<argument pos:start="121:27" pos:end="121:28"><expr pos:start="121:27" pos:end="121:28"><name pos:start="121:27" pos:end="121:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:17">(<expr pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:12">size</name> <operator pos:start="123:14" pos:end="123:14">&lt;</operator> <literal type="number" pos:start="123:16" pos:end="123:16">0</literal></expr>)</condition> <block pos:start="123:19" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:17">

        <expr_stmt pos:start="125:9" pos:end="125:63"><expr pos:start="125:9" pos:end="125:62"><call pos:start="125:9" pos:end="125:62"><name pos:start="125:9" pos:end="125:24">error_setg_errno</name><argument_list pos:start="125:25" pos:end="125:62">(<argument pos:start="125:26" pos:end="125:29"><expr pos:start="125:26" pos:end="125:29"><name pos:start="125:26" pos:end="125:29">errp</name></expr></argument>, <argument pos:start="125:32" pos:end="125:36"><expr pos:start="125:32" pos:end="125:36"><operator pos:start="125:32" pos:end="125:32">-</operator><name pos:start="125:33" pos:end="125:36">size</name></expr></argument>, <argument pos:start="125:39" pos:end="125:61"><expr pos:start="125:39" pos:end="125:61"><literal type="string" pos:start="125:39" pos:end="125:61">"bdrv_getlength failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="127:9" pos:end="127:17">goto <name pos:start="127:14" pos:end="127:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="153:5"><if pos:start="133:5" pos:end="153:5">if <condition pos:start="133:8" pos:end="133:48">(<expr pos:start="133:9" pos:end="133:47"><name pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:14">backup</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:20">mode</name></name> <operator pos:start="133:22" pos:end="133:23">!=</operator> <name pos:start="133:25" pos:end="133:47">NEW_IMAGE_MODE_EXISTING</name></expr>)</condition> <block pos:start="133:50" pos:end="153:5">{<block_content pos:start="135:9" pos:end="151:9">

        <expr_stmt pos:start="135:9" pos:end="135:31"><expr pos:start="135:9" pos:end="135:30"><call pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:14">assert</name><argument_list pos:start="135:15" pos:end="135:30">(<argument pos:start="135:16" pos:end="135:29"><expr pos:start="135:16" pos:end="135:29"><name pos:start="135:16" pos:end="135:29"><name pos:start="135:16" pos:end="135:21">backup</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:29">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="151:9"><if pos:start="137:9" pos:end="145:9">if <condition pos:start="137:12" pos:end="137:19">(<expr pos:start="137:13" pos:end="137:18"><name pos:start="137:13" pos:end="137:18">source</name></expr>)</condition> <block pos:start="137:21" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:60">

            <expr_stmt pos:start="139:13" pos:end="143:60"><expr pos:start="139:13" pos:end="143:59"><call pos:start="139:13" pos:end="143:59"><name pos:start="139:13" pos:end="139:27">bdrv_img_create</name><argument_list pos:start="139:28" pos:end="143:59">(<argument pos:start="139:29" pos:end="139:42"><expr pos:start="139:29" pos:end="139:42"><name pos:start="139:29" pos:end="139:42"><name pos:start="139:29" pos:end="139:34">backup</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:42">target</name></name></expr></argument>, <argument pos:start="139:45" pos:end="139:58"><expr pos:start="139:45" pos:end="139:58"><name pos:start="139:45" pos:end="139:58"><name pos:start="139:45" pos:end="139:50">backup</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:58">format</name></name></expr></argument>, <argument pos:start="139:61" pos:end="139:76"><expr pos:start="139:61" pos:end="139:76"><name pos:start="139:61" pos:end="139:76"><name pos:start="139:61" pos:end="139:66">source</name><operator pos:start="139:67" pos:end="139:68">-&gt;</operator><name pos:start="139:69" pos:end="139:76">filename</name></name></expr></argument>,

                            <argument pos:start="141:29" pos:end="141:52"><expr pos:start="141:29" pos:end="141:52"><name pos:start="141:29" pos:end="141:52"><name pos:start="141:29" pos:end="141:34">source</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:39">drv</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:52">format_name</name></name></expr></argument>, <argument pos:start="141:55" pos:end="141:58"><expr pos:start="141:55" pos:end="141:58"><name pos:start="141:55" pos:end="141:58">NULL</name></expr></argument>,

                            <argument pos:start="143:29" pos:end="143:32"><expr pos:start="143:29" pos:end="143:32"><name pos:start="143:29" pos:end="143:32">size</name></expr></argument>, <argument pos:start="143:35" pos:end="143:39"><expr pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:39">flags</name></expr></argument>, <argument pos:start="143:42" pos:end="143:51"><expr pos:start="143:42" pos:end="143:51"><operator pos:start="143:42" pos:end="143:42">&amp;</operator><name pos:start="143:43" pos:end="143:51">local_err</name></expr></argument>, <argument pos:start="143:54" pos:end="143:58"><expr pos:start="143:54" pos:end="143:58"><name pos:start="143:54" pos:end="143:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="151:9">else <block pos:start="145:16" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:60">

            <expr_stmt pos:start="147:13" pos:end="149:60"><expr pos:start="147:13" pos:end="149:59"><call pos:start="147:13" pos:end="149:59"><name pos:start="147:13" pos:end="147:27">bdrv_img_create</name><argument_list pos:start="147:28" pos:end="149:59">(<argument pos:start="147:29" pos:end="147:42"><expr pos:start="147:29" pos:end="147:42"><name pos:start="147:29" pos:end="147:42"><name pos:start="147:29" pos:end="147:34">backup</name><operator pos:start="147:35" pos:end="147:36">-&gt;</operator><name pos:start="147:37" pos:end="147:42">target</name></name></expr></argument>, <argument pos:start="147:45" pos:end="147:58"><expr pos:start="147:45" pos:end="147:58"><name pos:start="147:45" pos:end="147:58"><name pos:start="147:45" pos:end="147:50">backup</name><operator pos:start="147:51" pos:end="147:52">-&gt;</operator><name pos:start="147:53" pos:end="147:58">format</name></name></expr></argument>, <argument pos:start="147:61" pos:end="147:64"><expr pos:start="147:61" pos:end="147:64"><name pos:start="147:61" pos:end="147:64">NULL</name></expr></argument>, <argument pos:start="147:67" pos:end="147:70"><expr pos:start="147:67" pos:end="147:70"><name pos:start="147:67" pos:end="147:70">NULL</name></expr></argument>, <argument pos:start="147:73" pos:end="147:76"><expr pos:start="147:73" pos:end="147:76"><name pos:start="147:73" pos:end="147:76">NULL</name></expr></argument>,

                            <argument pos:start="149:29" pos:end="149:32"><expr pos:start="149:29" pos:end="149:32"><name pos:start="149:29" pos:end="149:32">size</name></expr></argument>, <argument pos:start="149:35" pos:end="149:39"><expr pos:start="149:35" pos:end="149:39"><name pos:start="149:35" pos:end="149:39">flags</name></expr></argument>, <argument pos:start="149:42" pos:end="149:51"><expr pos:start="149:42" pos:end="149:51"><operator pos:start="149:42" pos:end="149:42">&amp;</operator><name pos:start="149:43" pos:end="149:51">local_err</name></expr></argument>, <argument pos:start="149:54" pos:end="149:58"><expr pos:start="149:54" pos:end="149:58"><name pos:start="149:54" pos:end="149:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:18">(<expr pos:start="157:9" pos:end="157:17"><name pos:start="157:9" pos:end="157:17">local_err</name></expr>)</condition> <block pos:start="157:20" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:17">

        <expr_stmt pos:start="159:9" pos:end="159:41"><expr pos:start="159:9" pos:end="159:40"><call pos:start="159:9" pos:end="159:40"><name pos:start="159:9" pos:end="159:23">error_propagate</name><argument_list pos:start="159:24" pos:end="159:40">(<argument pos:start="159:25" pos:end="159:28"><expr pos:start="159:25" pos:end="159:28"><name pos:start="159:25" pos:end="159:28">errp</name></expr></argument>, <argument pos:start="159:31" pos:end="159:39"><expr pos:start="159:31" pos:end="159:39"><name pos:start="159:31" pos:end="159:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:17">goto <name pos:start="161:14" pos:end="161:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if <condition pos:start="167:8" pos:end="167:23">(<expr pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:14">backup</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:22">format</name></name></expr>)</condition> <block pos:start="167:25" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:71">

        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:15">options</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:29"><name pos:start="169:19" pos:end="169:27">qdict_new</name><argument_list pos:start="169:28" pos:end="169:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:71"><expr pos:start="171:9" pos:end="171:70"><call pos:start="171:9" pos:end="171:70"><name pos:start="171:9" pos:end="171:17">qdict_put</name><argument_list pos:start="171:18" pos:end="171:70">(<argument pos:start="171:19" pos:end="171:25"><expr pos:start="171:19" pos:end="171:25"><name pos:start="171:19" pos:end="171:25">options</name></expr></argument>, <argument pos:start="171:28" pos:end="171:35"><expr pos:start="171:28" pos:end="171:35"><literal type="string" pos:start="171:28" pos:end="171:35">"driver"</literal></expr></argument>, <argument pos:start="171:38" pos:end="171:69"><expr pos:start="171:38" pos:end="171:69"><call pos:start="171:38" pos:end="171:69"><name pos:start="171:38" pos:end="171:53">qstring_from_str</name><argument_list pos:start="171:54" pos:end="171:69">(<argument pos:start="171:55" pos:end="171:68"><expr pos:start="171:55" pos:end="171:68"><name pos:start="171:55" pos:end="171:68"><name pos:start="171:55" pos:end="171:60">backup</name><operator pos:start="171:61" pos:end="171:62">-&gt;</operator><name pos:start="171:63" pos:end="171:68">format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:70"><expr pos:start="177:5" pos:end="177:69"><name pos:start="177:5" pos:end="177:13">target_bs</name> <operator pos:start="177:15" pos:end="177:15">=</operator> <call pos:start="177:17" pos:end="177:69"><name pos:start="177:17" pos:end="177:25">bdrv_open</name><argument_list pos:start="177:26" pos:end="177:69">(<argument pos:start="177:27" pos:end="177:40"><expr pos:start="177:27" pos:end="177:40"><name pos:start="177:27" pos:end="177:40"><name pos:start="177:27" pos:end="177:32">backup</name><operator pos:start="177:33" pos:end="177:34">-&gt;</operator><name pos:start="177:35" pos:end="177:40">target</name></name></expr></argument>, <argument pos:start="177:43" pos:end="177:46"><expr pos:start="177:43" pos:end="177:46"><name pos:start="177:43" pos:end="177:46">NULL</name></expr></argument>, <argument pos:start="177:49" pos:end="177:55"><expr pos:start="177:49" pos:end="177:55"><name pos:start="177:49" pos:end="177:55">options</name></expr></argument>, <argument pos:start="177:58" pos:end="177:62"><expr pos:start="177:58" pos:end="177:62"><name pos:start="177:58" pos:end="177:62">flags</name></expr></argument>, <argument pos:start="177:65" pos:end="177:68"><expr pos:start="177:65" pos:end="177:68"><name pos:start="177:65" pos:end="177:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="183:5"><if pos:start="179:5" pos:end="183:5">if <condition pos:start="179:8" pos:end="179:19">(<expr pos:start="179:9" pos:end="179:18"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:18">target_bs</name></expr>)</condition> <block pos:start="179:21" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:17">

        <goto pos:start="181:9" pos:end="181:17">goto <name pos:start="181:14" pos:end="181:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:49"><expr pos:start="187:5" pos:end="187:48"><call pos:start="187:5" pos:end="187:48"><name pos:start="187:5" pos:end="187:24">bdrv_set_aio_context</name><argument_list pos:start="187:25" pos:end="187:48">(<argument pos:start="187:26" pos:end="187:34"><expr pos:start="187:26" pos:end="187:34"><name pos:start="187:26" pos:end="187:34">target_bs</name></expr></argument>, <argument pos:start="187:37" pos:end="187:47"><expr pos:start="187:37" pos:end="187:47"><name pos:start="187:37" pos:end="187:47">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="191:5" pos:end="205:5"><if pos:start="191:5" pos:end="205:5">if <condition pos:start="191:8" pos:end="191:27">(<expr pos:start="191:9" pos:end="191:26"><name pos:start="191:9" pos:end="191:26"><name pos:start="191:9" pos:end="191:14">backup</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:26">has_bitmap</name></name></expr>)</condition> <block pos:start="191:29" pos:end="205:5">{<block_content pos:start="193:9" pos:end="203:9">

        <expr_stmt pos:start="193:9" pos:end="193:58"><expr pos:start="193:9" pos:end="193:57"><name pos:start="193:9" pos:end="193:12">bmap</name> <operator pos:start="193:14" pos:end="193:14">=</operator> <call pos:start="193:16" pos:end="193:57"><name pos:start="193:16" pos:end="193:37">bdrv_find_dirty_bitmap</name><argument_list pos:start="193:38" pos:end="193:57">(<argument pos:start="193:39" pos:end="193:40"><expr pos:start="193:39" pos:end="193:40"><name pos:start="193:39" pos:end="193:40">bs</name></expr></argument>, <argument pos:start="193:43" pos:end="193:56"><expr pos:start="193:43" pos:end="193:56"><name pos:start="193:43" pos:end="193:56"><name pos:start="193:43" pos:end="193:48">backup</name><operator pos:start="193:49" pos:end="193:50">-&gt;</operator><name pos:start="193:51" pos:end="193:56">bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="203:9"><if pos:start="195:9" pos:end="203:9">if <condition pos:start="195:12" pos:end="195:18">(<expr pos:start="195:13" pos:end="195:17"><operator pos:start="195:13" pos:end="195:13">!</operator><name pos:start="195:14" pos:end="195:17">bmap</name></expr>)</condition> <block pos:start="195:20" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:21">

            <expr_stmt pos:start="197:13" pos:end="197:79"><expr pos:start="197:13" pos:end="197:78"><call pos:start="197:13" pos:end="197:78"><name pos:start="197:13" pos:end="197:22">error_setg</name><argument_list pos:start="197:23" pos:end="197:78">(<argument pos:start="197:24" pos:end="197:27"><expr pos:start="197:24" pos:end="197:27"><name pos:start="197:24" pos:end="197:27">errp</name></expr></argument>, <argument pos:start="197:30" pos:end="197:61"><expr pos:start="197:30" pos:end="197:61"><literal type="string" pos:start="197:30" pos:end="197:61">"Bitmap '%s' could not be found"</literal></expr></argument>, <argument pos:start="197:64" pos:end="197:77"><expr pos:start="197:64" pos:end="197:77"><name pos:start="197:64" pos:end="197:77"><name pos:start="197:64" pos:end="197:69">backup</name><operator pos:start="197:70" pos:end="197:71">-&gt;</operator><name pos:start="197:72" pos:end="197:77">bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><call pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:22">bdrv_unref</name><argument_list pos:start="199:23" pos:end="199:33">(<argument pos:start="199:24" pos:end="199:32"><expr pos:start="199:24" pos:end="199:32"><name pos:start="199:24" pos:end="199:32">target_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="201:13" pos:end="201:21">goto <name pos:start="201:18" pos:end="201:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="213:52"><expr pos:start="209:5" pos:end="213:51"><call pos:start="209:5" pos:end="213:51"><name pos:start="209:5" pos:end="209:16">backup_start</name><argument_list pos:start="209:17" pos:end="213:51">(<argument pos:start="209:18" pos:end="209:31"><expr pos:start="209:18" pos:end="209:31"><name pos:start="209:18" pos:end="209:31"><name pos:start="209:18" pos:end="209:23">backup</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:31">job_id</name></name></expr></argument>, <argument pos:start="209:34" pos:end="209:35"><expr pos:start="209:34" pos:end="209:35"><name pos:start="209:34" pos:end="209:35">bs</name></expr></argument>, <argument pos:start="209:38" pos:end="209:46"><expr pos:start="209:38" pos:end="209:46"><name pos:start="209:38" pos:end="209:46">target_bs</name></expr></argument>, <argument pos:start="209:49" pos:end="209:61"><expr pos:start="209:49" pos:end="209:61"><name pos:start="209:49" pos:end="209:61"><name pos:start="209:49" pos:end="209:54">backup</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:61">speed</name></name></expr></argument>, <argument pos:start="209:64" pos:end="209:75"><expr pos:start="209:64" pos:end="209:75"><name pos:start="209:64" pos:end="209:75"><name pos:start="209:64" pos:end="209:69">backup</name><operator pos:start="209:70" pos:end="209:71">-&gt;</operator><name pos:start="209:72" pos:end="209:75">sync</name></name></expr></argument>,

                 <argument pos:start="211:18" pos:end="211:21"><expr pos:start="211:18" pos:end="211:21"><name pos:start="211:18" pos:end="211:21">bmap</name></expr></argument>, <argument pos:start="211:24" pos:end="211:46"><expr pos:start="211:24" pos:end="211:46"><name pos:start="211:24" pos:end="211:46"><name pos:start="211:24" pos:end="211:29">backup</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:46">on_source_error</name></name></expr></argument>, <argument pos:start="211:49" pos:end="211:71"><expr pos:start="211:49" pos:end="211:71"><name pos:start="211:49" pos:end="211:71"><name pos:start="211:49" pos:end="211:54">backup</name><operator pos:start="211:55" pos:end="211:56">-&gt;</operator><name pos:start="211:57" pos:end="211:71">on_target_error</name></name></expr></argument>,

                 <argument pos:start="213:18" pos:end="213:29"><expr pos:start="213:18" pos:end="213:29"><name pos:start="213:18" pos:end="213:29">block_job_cb</name></expr></argument>, <argument pos:start="213:32" pos:end="213:33"><expr pos:start="213:32" pos:end="213:33"><name pos:start="213:32" pos:end="213:33">bs</name></expr></argument>, <argument pos:start="213:36" pos:end="213:38"><expr pos:start="213:36" pos:end="213:38"><name pos:start="213:36" pos:end="213:38">txn</name></expr></argument>, <argument pos:start="213:41" pos:end="213:50"><expr pos:start="213:41" pos:end="213:50"><operator pos:start="213:41" pos:end="213:41">&amp;</operator><name pos:start="213:42" pos:end="213:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:26"><expr pos:start="215:5" pos:end="215:25"><call pos:start="215:5" pos:end="215:25"><name pos:start="215:5" pos:end="215:14">bdrv_unref</name><argument_list pos:start="215:15" pos:end="215:25">(<argument pos:start="215:16" pos:end="215:24"><expr pos:start="215:16" pos:end="215:24"><name pos:start="215:16" pos:end="215:24">target_bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="223:5"><if pos:start="217:5" pos:end="223:5">if <condition pos:start="217:8" pos:end="217:26">(<expr pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:17">local_err</name> <operator pos:start="217:19" pos:end="217:20">!=</operator> <name pos:start="217:22" pos:end="217:25">NULL</name></expr>)</condition> <block pos:start="217:28" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:17">

        <expr_stmt pos:start="219:9" pos:end="219:41"><expr pos:start="219:9" pos:end="219:40"><call pos:start="219:9" pos:end="219:40"><name pos:start="219:9" pos:end="219:23">error_propagate</name><argument_list pos:start="219:24" pos:end="219:40">(<argument pos:start="219:25" pos:end="219:28"><expr pos:start="219:25" pos:end="219:28"><name pos:start="219:25" pos:end="219:28">errp</name></expr></argument>, <argument pos:start="219:31" pos:end="219:39"><expr pos:start="219:31" pos:end="219:39"><name pos:start="219:31" pos:end="219:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="221:9" pos:end="221:17">goto <name pos:start="221:14" pos:end="221:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



<label pos:start="227:1" pos:end="227:4"><name pos:start="227:1" pos:end="227:3">out</name>:</label>

    <expr_stmt pos:start="229:5" pos:end="229:37"><expr pos:start="229:5" pos:end="229:36"><call pos:start="229:5" pos:end="229:36"><name pos:start="229:5" pos:end="229:23">aio_context_release</name><argument_list pos:start="229:24" pos:end="229:36">(<argument pos:start="229:25" pos:end="229:35"><expr pos:start="229:25" pos:end="229:35"><name pos:start="229:25" pos:end="229:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
