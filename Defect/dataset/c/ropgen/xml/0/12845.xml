<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12845.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">block_job_sleep_ns</name><parameter_list pos:start="1:24" pos:end="1:70">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">BlockJob</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">job</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:52">QEMUClockType</name></type> <name pos:start="1:54" pos:end="1:57">type</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:66">int64_t</name></type> <name pos:start="1:68" pos:end="1:69">ns</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:21">

    <expr_stmt pos:start="5:5" pos:end="5:22"><expr pos:start="5:5" pos:end="5:21"><call pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:21">(<argument pos:start="5:12" pos:end="5:20"><expr pos:start="5:12" pos:end="5:20"><name pos:start="5:12" pos:end="5:20"><name pos:start="5:12" pos:end="5:14">job</name><operator pos:start="5:15" pos:end="5:16">-&gt;</operator><name pos:start="5:17" pos:end="5:20">busy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:65">/* Check cancellation *before* setting busy = false, too!  */</comment>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:30">block_job_is_cancelled</name><argument_list pos:start="11:31" pos:end="11:35">(<argument pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:34">job</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:38" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">job</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">busy</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:21">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:27">block_job_is_paused</name><argument_list pos:start="21:28" pos:end="21:32">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">job</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:35" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:28">qemu_coroutine_yield</name><argument_list pos:start="23:29" pos:end="23:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:65">

        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><call pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:23">co_aio_sleep_ns</name><argument_list pos:start="27:24" pos:end="27:64">(<argument pos:start="27:25" pos:end="27:53"><expr pos:start="27:25" pos:end="27:53"><call pos:start="27:25" pos:end="27:53"><name pos:start="27:25" pos:end="27:43">blk_get_aio_context</name><argument_list pos:start="27:44" pos:end="27:53">(<argument pos:start="27:45" pos:end="27:52"><expr pos:start="27:45" pos:end="27:52"><name pos:start="27:45" pos:end="27:52"><name pos:start="27:45" pos:end="27:47">job</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:52">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><name pos:start="27:56" pos:end="27:59">type</name></expr></argument>, <argument pos:start="27:62" pos:end="27:63"><expr pos:start="27:62" pos:end="27:63"><name pos:start="27:62" pos:end="27:63">ns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:7">job</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:13">busy</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:20">true</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
