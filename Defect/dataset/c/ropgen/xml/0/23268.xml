<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23268.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">handle_packet</name><parameter_list pos:start="1:25" pos:end="1:66">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:38">MpegTSContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">ts</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:65"><decl pos:start="1:45" pos:end="1:65"><type pos:start="1:45" pos:end="1:65"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">packet</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:35">= <expr pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:27">ts</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">stream</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MpegTSFilter</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tss</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">pid</name></decl>, <decl pos:start="9:19" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:20">cc</name></decl>, <decl pos:start="9:23" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:27">cc_ok</name></decl>, <decl pos:start="9:30" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:32">afc</name></decl>, <decl pos:start="9:35" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:42">is_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">p</name></decl>, <decl pos:start="11:23" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:28">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pos</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:7">pid</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:29"><name pos:start="17:11" pos:end="17:17">AV_RB16</name><argument_list pos:start="17:18" pos:end="17:29">(<argument pos:start="17:19" pos:end="17:28"><expr pos:start="17:19" pos:end="17:28"><name pos:start="17:19" pos:end="17:24">packet</name> <operator pos:start="17:26" pos:end="17:26">+</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr></argument>)</argument_list></call> <operator pos:start="17:31" pos:end="17:31">&amp;</operator> <literal type="number" pos:start="17:33" pos:end="17:38">0x1fff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if<condition pos:start="19:7" pos:end="19:35">(<expr pos:start="19:8" pos:end="19:34"><name pos:start="19:8" pos:end="19:10">pid</name> <operator pos:start="19:12" pos:end="19:13">&amp;&amp;</operator> <call pos:start="19:15" pos:end="19:34"><name pos:start="19:15" pos:end="19:25">discard_pid</name><argument_list pos:start="19:26" pos:end="19:34">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">ts</name></expr></argument>, <argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">pid</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:12">is_start</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:21">packet</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">&amp;</operator> <literal type="number" pos:start="23:28" pos:end="23:31">0x40</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:7">tss</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:12">ts</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">pids</name><index pos:start="25:19" pos:end="25:23">[<expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">pid</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:50">(<expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:10">ts</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:22">auto_guess</name></name> <operator pos:start="27:24" pos:end="27:25">&amp;&amp;</operator> <name pos:start="27:27" pos:end="27:29">tss</name> <operator pos:start="27:31" pos:end="27:32">==</operator> <name pos:start="27:34" pos:end="27:37">NULL</name> <operator pos:start="27:39" pos:end="27:40">&amp;&amp;</operator> <name pos:start="27:42" pos:end="27:49">is_start</name></expr>)</condition> <block pos:start="27:52" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:28">

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><call pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:22">add_pes_stream</name><argument_list pos:start="29:23" pos:end="29:38">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">ts</name></expr></argument>, <argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">pid</name></expr></argument>, <argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><operator pos:start="29:33" pos:end="29:33">-</operator><literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr></argument>, <argument pos:start="29:37" pos:end="29:37"><expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:11">tss</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:27"><name pos:start="31:15" pos:end="31:16">ts</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:22">pids</name><index pos:start="31:23" pos:end="31:27">[<expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">pid</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:12">tss</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:47">/* continuity check (currently not used) */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:6">cc</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:19"><name pos:start="43:11" pos:end="43:16">packet</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">3</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">&amp;</operator> <literal type="number" pos:start="43:23" pos:end="43:25">0xf</literal><operator pos:start="43:26" pos:end="43:26">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:72"><expr pos:start="45:5" pos:end="45:71"><name pos:start="45:5" pos:end="45:9">cc_ok</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:16">tss</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:25">last_cc</name></name> <operator pos:start="45:27" pos:end="45:27">&lt;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">0</literal><operator pos:start="45:30" pos:end="45:30">)</operator> <operator pos:start="45:32" pos:end="45:33">||</operator> <operator pos:start="45:35" pos:end="45:35">(</operator><operator pos:start="45:36" pos:end="45:36">(</operator><operator pos:start="45:37" pos:end="45:37">(</operator><operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:50"><name pos:start="45:39" pos:end="45:41">tss</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:50">last_cc</name></name> <operator pos:start="45:52" pos:end="45:52">+</operator> <literal type="number" pos:start="45:54" pos:end="45:54">1</literal><operator pos:start="45:55" pos:end="45:55">)</operator> <operator pos:start="45:57" pos:end="45:57">&amp;</operator> <literal type="number" pos:start="45:59" pos:end="45:62">0x0f</literal><operator pos:start="45:63" pos:end="45:63">)</operator> <operator pos:start="45:65" pos:end="45:66">==</operator> <name pos:start="45:68" pos:end="45:69">cc</name><operator pos:start="45:70" pos:end="45:70">)</operator><operator pos:start="45:71" pos:end="45:71">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">tss</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">last_cc</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:21">cc</name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:31">/* skip adaptation field */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:7">afc</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <operator pos:start="53:11" pos:end="53:11">(</operator><name pos:start="53:12" pos:end="53:20"><name pos:start="53:12" pos:end="53:17">packet</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><literal type="number" pos:start="53:19" pos:end="53:19">3</literal></expr>]</index></name> <operator pos:start="53:22" pos:end="53:23">&gt;&gt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">4</literal><operator pos:start="53:26" pos:end="53:26">)</operator> <operator pos:start="53:28" pos:end="53:28">&amp;</operator> <literal type="number" pos:start="53:30" pos:end="53:30">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:5">p</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <name pos:start="55:9" pos:end="55:14">packet</name> <operator pos:start="55:16" pos:end="55:16">+</operator> <literal type="number" pos:start="55:18" pos:end="55:18">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:17"><if pos:start="57:5" pos:end="59:17">if <condition pos:start="57:8" pos:end="57:17">(<expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:11">afc</name> <operator pos:start="57:13" pos:end="57:14">==</operator> <literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:17"><block_content pos:start="59:9" pos:end="59:17"> <comment type="block" pos:start="57:19" pos:end="57:38">/* reserved value */</comment>

        <return pos:start="59:9" pos:end="59:17">return <expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="63:17"><if pos:start="61:5" pos:end="63:17">if <condition pos:start="61:8" pos:end="61:17">(<expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">afc</name> <operator pos:start="61:13" pos:end="61:14">==</operator> <literal type="number" pos:start="61:16" pos:end="61:16">2</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:17"><block_content pos:start="63:9" pos:end="63:17"> <comment type="block" pos:start="61:19" pos:end="61:45">/* adaptation field only */</comment>

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:17">(<expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">afc</name> <operator pos:start="65:13" pos:end="65:14">==</operator> <literal type="number" pos:start="65:16" pos:end="65:16">3</literal></expr>)</condition> <block pos:start="65:19" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:22">

        <comment type="block" pos:start="67:9" pos:end="67:34">/* skip adapation field */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">p</name> <operator pos:start="69:11" pos:end="69:12">+=</operator> <name pos:start="69:14" pos:end="69:17"><name pos:start="69:14" pos:end="69:14">p</name><index pos:start="69:15" pos:end="69:17">[<expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>]</index></name> <operator pos:start="69:19" pos:end="69:19">+</operator> <literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:43">/* if past the end of packet, ignore */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:9">p_end</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:18">packet</name> <operator pos:start="75:20" pos:end="75:20">+</operator> <name pos:start="75:22" pos:end="75:35">TS_PACKET_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:17"><if pos:start="77:5" pos:end="79:17">if <condition pos:start="77:8" pos:end="77:19">(<expr pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:9">p</name> <operator pos:start="77:11" pos:end="77:12">&gt;=</operator> <name pos:start="77:14" pos:end="77:18">p_end</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:17"><block_content pos:start="79:9" pos:end="79:17">

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:36"><expr pos:start="83:5" pos:end="83:35"><name pos:start="83:5" pos:end="83:7">pos</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:35"><name pos:start="83:11" pos:end="83:19">url_ftell</name><argument_list pos:start="83:20" pos:end="83:35">(<argument pos:start="83:21" pos:end="83:34"><expr pos:start="83:21" pos:end="83:34"><name pos:start="83:21" pos:end="83:34"><name pos:start="83:21" pos:end="83:22">ts</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:30">stream</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:41"><expr pos:start="85:5" pos:end="85:40"><name pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:6">ts</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:13">pos47</name></name><operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:18">pos</name> <operator pos:start="85:20" pos:end="85:20">%</operator> <name pos:start="85:22" pos:end="85:40"><name pos:start="85:22" pos:end="85:23">ts</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:40">raw_packet_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="151:5"><if pos:start="89:5" pos:end="139:5">if <condition pos:start="89:8" pos:end="89:36">(<expr pos:start="89:9" pos:end="89:35"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:11">tss</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:17">type</name></name> <operator pos:start="89:19" pos:end="89:20">==</operator> <name pos:start="89:22" pos:end="89:35">MPEGTS_SECTION</name></expr>)</condition> <block pos:start="89:38" pos:end="139:5">{<block_content pos:start="91:9" pos:end="137:9">

        <if_stmt pos:start="91:9" pos:end="137:9"><if pos:start="91:9" pos:end="127:9">if <condition pos:start="91:12" pos:end="91:21">(<expr pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:20">is_start</name></expr>)</condition> <block pos:start="91:23" pos:end="127:9">{<block_content pos:start="95:13" pos:end="125:13">

            <comment type="block" pos:start="93:13" pos:end="93:39">/* pointer field present */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:23"><expr pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:15">len</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <operator pos:start="95:19" pos:end="95:19">*</operator><name pos:start="95:20" pos:end="95:20">p</name><operator pos:start="95:21" pos:end="95:22">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:25"><if pos:start="97:13" pos:end="99:25">if <condition pos:start="97:16" pos:end="97:32">(<expr pos:start="97:17" pos:end="97:31"><name pos:start="97:17" pos:end="97:17">p</name> <operator pos:start="97:19" pos:end="97:19">+</operator> <name pos:start="97:21" pos:end="97:23">len</name> <operator pos:start="97:25" pos:end="97:25">&gt;</operator> <name pos:start="97:27" pos:end="97:31">p_end</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:25"><block_content pos:start="99:17" pos:end="99:25">

                <return pos:start="99:17" pos:end="99:25">return <expr pos:start="99:24" pos:end="99:24"><literal type="number" pos:start="99:24" pos:end="99:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="101:13" pos:end="115:13"><if pos:start="101:13" pos:end="115:13">if <condition pos:start="101:16" pos:end="101:29">(<expr pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:19">len</name> <operator pos:start="101:21" pos:end="101:22">&amp;&amp;</operator> <name pos:start="101:24" pos:end="101:28">cc_ok</name></expr>)</condition> <block pos:start="101:31" pos:end="115:13">{<block_content pos:start="105:17" pos:end="113:29">

                <comment type="block" pos:start="103:17" pos:end="103:51">/* write remaining section bytes */</comment>

                <expr_stmt pos:start="105:17" pos:end="107:46"><expr pos:start="105:17" pos:end="107:45"><call pos:start="105:17" pos:end="107:45"><name pos:start="105:17" pos:end="105:34">write_section_data</name><argument_list pos:start="105:35" pos:end="107:45">(<argument pos:start="105:36" pos:end="105:36"><expr pos:start="105:36" pos:end="105:36"><name pos:start="105:36" pos:end="105:36">s</name></expr></argument>, <argument pos:start="105:39" pos:end="105:41"><expr pos:start="105:39" pos:end="105:41"><name pos:start="105:39" pos:end="105:41">tss</name></expr></argument>,

                                   <argument pos:start="107:36" pos:end="107:36"><expr pos:start="107:36" pos:end="107:36"><name pos:start="107:36" pos:end="107:36">p</name></expr></argument>, <argument pos:start="107:39" pos:end="107:41"><expr pos:start="107:39" pos:end="107:41"><name pos:start="107:39" pos:end="107:41">len</name></expr></argument>, <argument pos:start="107:44" pos:end="107:44"><expr pos:start="107:44" pos:end="107:44"><literal type="number" pos:start="107:44" pos:end="107:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="109:17" pos:end="109:58">/* check whether filter has been closed */</comment>

                <if_stmt pos:start="111:17" pos:end="113:29"><if pos:start="111:17" pos:end="113:29">if <condition pos:start="111:20" pos:end="111:35">(<expr pos:start="111:21" pos:end="111:34"><operator pos:start="111:21" pos:end="111:21">!</operator><name pos:start="111:22" pos:end="111:34"><name pos:start="111:22" pos:end="111:23">ts</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:29">pids</name><index pos:start="111:30" pos:end="111:34">[<expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">pid</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:29"><block_content pos:start="113:21" pos:end="113:29">

                    <return pos:start="113:21" pos:end="113:29">return <expr pos:start="113:28" pos:end="113:28"><literal type="number" pos:start="113:28" pos:end="113:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:21"><expr pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:13">p</name> <operator pos:start="117:15" pos:end="117:16">+=</operator> <name pos:start="117:18" pos:end="117:20">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="125:13"><if pos:start="119:13" pos:end="125:13">if <condition pos:start="119:16" pos:end="119:26">(<expr pos:start="119:17" pos:end="119:25"><name pos:start="119:17" pos:end="119:17">p</name> <operator pos:start="119:19" pos:end="119:19">&lt;</operator> <name pos:start="119:21" pos:end="119:25">p_end</name></expr>)</condition> <block pos:start="119:28" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:52">

                <expr_stmt pos:start="121:17" pos:end="123:52"><expr pos:start="121:17" pos:end="123:51"><call pos:start="121:17" pos:end="123:51"><name pos:start="121:17" pos:end="121:34">write_section_data</name><argument_list pos:start="121:35" pos:end="123:51">(<argument pos:start="121:36" pos:end="121:36"><expr pos:start="121:36" pos:end="121:36"><name pos:start="121:36" pos:end="121:36">s</name></expr></argument>, <argument pos:start="121:39" pos:end="121:41"><expr pos:start="121:39" pos:end="121:41"><name pos:start="121:39" pos:end="121:41">tss</name></expr></argument>,

                                   <argument pos:start="123:36" pos:end="123:36"><expr pos:start="123:36" pos:end="123:36"><name pos:start="123:36" pos:end="123:36">p</name></expr></argument>, <argument pos:start="123:39" pos:end="123:47"><expr pos:start="123:39" pos:end="123:47"><name pos:start="123:39" pos:end="123:43">p_end</name> <operator pos:start="123:45" pos:end="123:45">-</operator> <name pos:start="123:47" pos:end="123:47">p</name></expr></argument>, <argument pos:start="123:50" pos:end="123:50"><expr pos:start="123:50" pos:end="123:50"><literal type="number" pos:start="123:50" pos:end="123:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="137:9">else <block pos:start="127:16" pos:end="137:9">{<block_content pos:start="129:13" pos:end="135:13">

            <if_stmt pos:start="129:13" pos:end="135:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:22">(<expr pos:start="129:17" pos:end="129:21"><name pos:start="129:17" pos:end="129:21">cc_ok</name></expr>)</condition> <block pos:start="129:24" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:52">

                <expr_stmt pos:start="131:17" pos:end="133:52"><expr pos:start="131:17" pos:end="133:51"><call pos:start="131:17" pos:end="133:51"><name pos:start="131:17" pos:end="131:34">write_section_data</name><argument_list pos:start="131:35" pos:end="133:51">(<argument pos:start="131:36" pos:end="131:36"><expr pos:start="131:36" pos:end="131:36"><name pos:start="131:36" pos:end="131:36">s</name></expr></argument>, <argument pos:start="131:39" pos:end="131:41"><expr pos:start="131:39" pos:end="131:41"><name pos:start="131:39" pos:end="131:41">tss</name></expr></argument>,

                                   <argument pos:start="133:36" pos:end="133:36"><expr pos:start="133:36" pos:end="133:36"><name pos:start="133:36" pos:end="133:36">p</name></expr></argument>, <argument pos:start="133:39" pos:end="133:47"><expr pos:start="133:39" pos:end="133:47"><name pos:start="133:39" pos:end="133:43">p_end</name> <operator pos:start="133:45" pos:end="133:45">-</operator> <name pos:start="133:47" pos:end="133:47">p</name></expr></argument>, <argument pos:start="133:50" pos:end="133:50"><expr pos:start="133:50" pos:end="133:50"><literal type="number" pos:start="133:50" pos:end="133:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="139:7" pos:end="151:5">else <block pos:start="139:12" pos:end="151:5">{<block_content pos:start="141:9" pos:end="149:23">

        <decl_stmt pos:start="141:9" pos:end="141:16"><decl pos:start="141:9" pos:end="141:15"><type pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:11">int</name></type> <name pos:start="141:13" pos:end="141:15">ret</name></decl>;</decl_stmt>

        <comment type="line" pos:start="143:9" pos:end="143:77">// Note: The position here points actually behind the current packet.</comment>

        <if_stmt pos:start="145:9" pos:end="149:23"><if pos:start="145:9" pos:end="149:23">if <condition pos:start="145:12" pos:end="147:76">(<expr pos:start="145:13" pos:end="147:75"><operator pos:start="145:13" pos:end="145:13">(</operator><name pos:start="145:14" pos:end="145:16">ret</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <call pos:start="145:20" pos:end="147:70"><name pos:start="145:20" pos:end="145:43"><name pos:start="145:20" pos:end="145:22">tss</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:25">u</name><operator pos:start="145:26" pos:end="145:26">.</operator><name pos:start="145:27" pos:end="145:36">pes_filter</name><operator pos:start="145:37" pos:end="145:37">.</operator><name pos:start="145:38" pos:end="145:43">pes_cb</name></name><argument_list pos:start="145:44" pos:end="147:70">(<argument pos:start="145:45" pos:end="145:47"><expr pos:start="145:45" pos:end="145:47"><name pos:start="145:45" pos:end="145:47">tss</name></expr></argument>, <argument pos:start="145:50" pos:end="145:50"><expr pos:start="145:50" pos:end="145:50"><name pos:start="145:50" pos:end="145:50">p</name></expr></argument>, <argument pos:start="145:53" pos:end="145:61"><expr pos:start="145:53" pos:end="145:61"><name pos:start="145:53" pos:end="145:57">p_end</name> <operator pos:start="145:59" pos:end="145:59">-</operator> <name pos:start="145:61" pos:end="145:61">p</name></expr></argument>, <argument pos:start="145:64" pos:end="145:71"><expr pos:start="145:64" pos:end="145:71"><name pos:start="145:64" pos:end="145:71">is_start</name></expr></argument>,

                                            <argument pos:start="147:45" pos:end="147:69"><expr pos:start="147:45" pos:end="147:69"><name pos:start="147:45" pos:end="147:47">pos</name> <operator pos:start="147:49" pos:end="147:49">-</operator> <name pos:start="147:51" pos:end="147:69"><name pos:start="147:51" pos:end="147:52">ts</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:69">raw_packet_size</name></name></expr></argument>)</argument_list></call><operator pos:start="147:71" pos:end="147:71">)</operator> <operator pos:start="147:73" pos:end="147:73">&lt;</operator> <literal type="number" pos:start="147:75" pos:end="147:75">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:23"><block_content pos:start="149:13" pos:end="149:23">

            <return pos:start="149:13" pos:end="149:23">return <expr pos:start="149:20" pos:end="149:22"><name pos:start="149:20" pos:end="149:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
