<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21521.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">qemu_mod_timer</name><parameter_list pos:start="1:20" pos:end="1:55">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:29">QEMUTimer</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:33">ts</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:54"><decl pos:start="1:36" pos:end="1:54"><type pos:start="1:36" pos:end="1:54"><name pos:start="1:36" pos:end="1:42">int64_t</name></type> <name pos:start="1:44" pos:end="1:54">expire_time</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:13">QEMUTimer</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier><modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">pt</name></decl>, <decl pos:start="5:21" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">t</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><call pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:18">qemu_del_timer</name><argument_list pos:start="9:19" pos:end="9:22">(<argument pos:start="9:20" pos:end="9:21"><expr pos:start="9:20" pos:end="9:21"><name pos:start="9:20" pos:end="9:21">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:42">/* add the timer in the sorted list */</comment>

    <comment type="block" pos:start="15:5" pos:end="17:59">/* NOTE: this code must be signal safe because

       qemu_timer_expired() can be called from a signal. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:6">pt</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <operator pos:start="19:10" pos:end="19:10">&amp;</operator><name pos:start="19:11" pos:end="19:40"><name pos:start="19:11" pos:end="19:23">active_timers</name><index pos:start="19:24" pos:end="19:40">[<expr pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:26">ts</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:33">clock</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:39">type</name></name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="35:5">for<control pos:start="21:8" pos:end="21:11">(<init pos:start="21:9" pos:end="21:9">;</init><condition pos:start="21:10" pos:end="21:10">;</condition><incr/>)</control> <block pos:start="21:13" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:22">

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">t</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">*</operator><name pos:start="23:14" pos:end="23:15">pt</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:15">(<expr pos:start="25:13" pos:end="25:14"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:14">t</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:13">t</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:26">expire_time</name></name> <operator pos:start="29:28" pos:end="29:28">&gt;</operator> <name pos:start="29:30" pos:end="29:40">expire_time</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:10">pt</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:21"><name pos:start="33:15" pos:end="33:15">t</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:21">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:6">ts</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:19">expire_time</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:33">expire_time</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:6">ts</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:12">next</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <operator pos:start="39:16" pos:end="39:16">*</operator><name pos:start="39:17" pos:end="39:18">pt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:13"><expr pos:start="41:5" pos:end="41:12"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:7">pt</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:12">ts</name></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:29">/* Rearm if necessary  */</comment>

    <if_stmt pos:start="47:5" pos:end="61:5"><if pos:start="47:5" pos:end="61:5">if <condition pos:start="47:8" pos:end="47:46">(<expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:10">pt</name> <operator pos:start="47:12" pos:end="47:13">==</operator> <operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:45"><name pos:start="47:16" pos:end="47:28">active_timers</name><index pos:start="47:29" pos:end="47:45">[<expr pos:start="47:30" pos:end="47:44"><name pos:start="47:30" pos:end="47:44"><name pos:start="47:30" pos:end="47:31">ts</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:38">clock</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:44">type</name></name></expr>]</index></name></expr>)</condition> <block pos:start="47:48" pos:end="61:5">{<block_content pos:start="49:9" pos:end="59:32">

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:59">(<expr pos:start="49:13" pos:end="49:58"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:31"><name pos:start="49:14" pos:end="49:24">alarm_timer</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">flags</name></name> <operator pos:start="49:33" pos:end="49:33">&amp;</operator> <name pos:start="49:35" pos:end="49:52">ALARM_FLAG_EXPIRED</name><operator pos:start="49:53" pos:end="49:53">)</operator> <operator pos:start="49:55" pos:end="49:56">==</operator> <literal type="number" pos:start="49:58" pos:end="49:58">0</literal></expr>)</condition> <block pos:start="49:61" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:48">

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:34">qemu_rearm_alarm_timer</name><argument_list pos:start="51:35" pos:end="51:47">(<argument pos:start="51:36" pos:end="51:46"><expr pos:start="51:36" pos:end="51:46"><name pos:start="51:36" pos:end="51:46">alarm_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:67">/* Interrupt execution to force deadline recalculation.  */</comment>

        <if_stmt pos:start="57:9" pos:end="59:32"><if pos:start="57:9" pos:end="59:32">if <condition pos:start="57:12" pos:end="57:23">(<expr pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:22">use_icount</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:32"><block_content pos:start="59:13" pos:end="59:32">

            <expr_stmt pos:start="59:13" pos:end="59:32"><expr pos:start="59:13" pos:end="59:31"><call pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:29">qemu_notify_event</name><argument_list pos:start="59:30" pos:end="59:31">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
