<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5037.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">msi_uninit</name><parameter_list pos:start="1:16" pos:end="1:38">(<parameter pos:start="1:17" pos:end="1:37"><decl pos:start="1:17" pos:end="1:37"><type pos:start="1:17" pos:end="1:37"><name pos:start="1:17" pos:end="1:32"><name pos:start="1:17" pos:end="1:22">struct</name> <name pos:start="1:24" pos:end="1:32">PCIDevice</name></name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:36">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:18">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:20">cap_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:47">(<expr pos:start="11:9" pos:end="11:46"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:26"><name pos:start="11:11" pos:end="11:13">dev</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:26">cap_present</name></name> <operator pos:start="11:28" pos:end="11:28">&amp;</operator> <name pos:start="11:30" pos:end="11:45">QEMU_PCI_CAP_MSI</name><operator pos:start="11:46" pos:end="11:46">)</operator></expr>)</condition> <block pos:start="11:49" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:9">flags</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:58"><name pos:start="17:13" pos:end="17:24">pci_get_word</name><argument_list pos:start="17:25" pos:end="17:58">(<argument pos:start="17:26" pos:end="17:57"><expr pos:start="17:26" pos:end="17:57"><name pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:28">dev</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">config</name></name> <operator pos:start="17:38" pos:end="17:38">+</operator> <call pos:start="17:40" pos:end="17:57"><name pos:start="17:40" pos:end="17:52">msi_flags_off</name><argument_list pos:start="17:53" pos:end="17:57">(<argument pos:start="17:54" pos:end="17:56"><expr pos:start="17:54" pos:end="17:56"><name pos:start="17:54" pos:end="17:56">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:12">cap_size</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:36"><name pos:start="19:16" pos:end="19:29">msi_cap_sizeof</name><argument_list pos:start="19:30" pos:end="19:36">(<argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:22">pci_del_capability</name><argument_list pos:start="21:23" pos:end="21:53">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">dev</name></expr></argument>, <argument pos:start="21:29" pos:end="21:42"><expr pos:start="21:29" pos:end="21:42"><name pos:start="21:29" pos:end="21:42">PCI_CAP_ID_MSI</name></expr></argument>, <argument pos:start="21:45" pos:end="21:52"><expr pos:start="21:45" pos:end="21:52"><name pos:start="21:45" pos:end="21:52">cap_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:7">dev</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:20">cap_present</name></name> <operator pos:start="23:22" pos:end="23:23">&amp;=</operator> <operator pos:start="23:25" pos:end="23:25">~</operator><name pos:start="23:26" pos:end="23:41">QEMU_PCI_CAP_MSI</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:18">MSI_DEV_PRINTF</name><argument_list pos:start="27:19" pos:end="27:35">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">dev</name></expr></argument>, <argument pos:start="27:25" pos:end="27:34"><expr pos:start="27:25" pos:end="27:34"><literal type="string" pos:start="27:25" pos:end="27:34">"uninit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
