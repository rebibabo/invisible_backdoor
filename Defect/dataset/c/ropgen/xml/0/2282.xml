<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2282.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">advanced_decode_i_mbs</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">VC9Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:3" pos:end="35:13">

  <decl_stmt pos:start="5:3" pos:end="7:38"><decl pos:start="5:3" pos:end="5:7"><type pos:start="5:3" pos:end="5:5"><name pos:start="5:3" pos:end="5:5">int</name></type> <name pos:start="5:7" pos:end="5:7">i</name></decl>, <decl pos:start="5:10" pos:end="5:10"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:10" pos:end="5:10">x</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:13" pos:end="5:13">y</name></decl>, <decl pos:start="5:16" pos:end="5:20"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:16" pos:end="5:20">cbpcy</name></decl>, <decl pos:start="5:23" pos:end="5:28"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:23" pos:end="5:28">mqdiff</name></decl>, <decl pos:start="5:31" pos:end="5:35"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:31" pos:end="5:35">absmq</name></decl>, <decl pos:start="5:38" pos:end="5:43"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:38" pos:end="5:43">mquant</name></decl>, <decl pos:start="5:46" pos:end="5:52"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:46" pos:end="5:52">ac_pred</name></decl>, <decl pos:start="5:55" pos:end="5:62"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="5:55" pos:end="5:62">condover</name></decl>,

    <decl pos:start="7:5" pos:end="7:18"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="7:5" pos:end="7:14">current_mb</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:37"><type ref="prev" pos:start="5:3" pos:end="5:5"/><name pos:start="7:21" pos:end="7:33">over_flags_mb</name> <init pos:start="7:35" pos:end="7:37">= <expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="33:5">for <control pos:start="11:9" pos:end="11:34">(<init pos:start="11:10" pos:end="11:13"><expr pos:start="11:10" pos:end="11:12"><name pos:start="11:10" pos:end="11:10">y</name><operator pos:start="11:11" pos:end="11:11">=</operator><literal type="number" pos:start="11:12" pos:end="11:12">0</literal></expr>;</init> <condition pos:start="11:15" pos:end="11:29"><expr pos:start="11:15" pos:end="11:28"><name pos:start="11:15" pos:end="11:15">y</name><operator pos:start="11:16" pos:end="11:16">&lt;</operator><name pos:start="11:17" pos:end="11:28"><name pos:start="11:17" pos:end="11:17">v</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:28">height_mb</name></name></expr>;</condition> <incr pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:31">y</name><operator pos:start="11:32" pos:end="11:33">++</operator></expr></incr>)</control>

    <block pos:start="13:5" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:21">

        <for pos:start="15:9" pos:end="29:9">for <control pos:start="15:13" pos:end="15:37">(<init pos:start="15:14" pos:end="15:17"><expr pos:start="15:14" pos:end="15:16"><name pos:start="15:14" pos:end="15:14">x</name><operator pos:start="15:15" pos:end="15:15">=</operator><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</init> <condition pos:start="15:19" pos:end="15:32"><expr pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:19">x</name><operator pos:start="15:20" pos:end="15:20">&lt;</operator><name pos:start="15:21" pos:end="15:31"><name pos:start="15:21" pos:end="15:21">v</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:31">width_mb</name></name></expr>;</condition> <incr pos:start="15:34" pos:end="15:36"><expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:34">x</name><operator pos:start="15:35" pos:end="15:36">++</operator></expr></incr>)</control>

        <block pos:start="17:9" pos:end="29:9">{<block_content pos:start="19:13" pos:end="27:25">

            <if_stmt pos:start="19:13" pos:end="21:46"><if pos:start="19:13" pos:end="21:46">if <condition pos:start="19:16" pos:end="19:36">(<expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:17">v</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:32">ac_pred_plane</name><index pos:start="19:33" pos:end="19:35">[<expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:46"><block_content pos:start="21:17" pos:end="21:46">

                <expr_stmt pos:start="21:17" pos:end="21:46"><expr pos:start="21:17" pos:end="21:45"><name pos:start="21:17" pos:end="21:23">ac_pred</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:45"><name pos:start="21:27" pos:end="21:34">get_bits</name><argument_list pos:start="21:35" pos:end="21:45">(<argument pos:start="21:36" pos:end="21:41"><expr pos:start="21:36" pos:end="21:41"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:37">v</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:41">gb</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="23:13" pos:end="25:52"><if pos:start="23:13" pos:end="25:52">if <condition pos:start="23:16" pos:end="23:53">(<expr pos:start="23:17" pos:end="23:52"><name pos:start="23:17" pos:end="23:24">condover</name> <operator pos:start="23:26" pos:end="23:27">==</operator> <literal type="number" pos:start="23:29" pos:end="23:29">3</literal> <operator pos:start="23:31" pos:end="23:32">&amp;&amp;</operator> <name pos:start="23:34" pos:end="23:52"><name pos:start="23:34" pos:end="23:34">v</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:52">over_flags_plane</name></name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:52"><block_content pos:start="25:17" pos:end="25:52">

                <expr_stmt pos:start="25:17" pos:end="25:52"><expr pos:start="25:17" pos:end="25:51"><name pos:start="25:17" pos:end="25:29">over_flags_mb</name> <operator pos:start="25:31" pos:end="25:31">=</operator> <call pos:start="25:33" pos:end="25:51"><name pos:start="25:33" pos:end="25:40">get_bits</name><argument_list pos:start="25:41" pos:end="25:51">(<argument pos:start="25:42" pos:end="25:47"><expr pos:start="25:42" pos:end="25:47"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:43">v</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:47">gb</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:50"><expr pos:start="25:50" pos:end="25:50"><literal type="number" pos:start="25:50" pos:end="25:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><call pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:22">GET_MQUANT</name><argument_list pos:start="27:23" pos:end="27:24">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:18">current_mb</name><operator pos:start="31:19" pos:end="31:20">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
