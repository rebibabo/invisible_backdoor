<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21495.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:24">drop_sync</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:35">QIOChannel</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ioc</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:48">size_t</name></type> <name pos:start="1:50" pos:end="1:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:15">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>, <decl pos:start="5:18" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:18" pos:end="5:24">dropped</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:20"><name pos:start="7:10" pos:end="7:14">small</name><index pos:start="7:15" pos:end="7:20">[<expr pos:start="7:16" pos:end="7:19"><literal type="number" pos:start="7:16" pos:end="7:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:16">buffer</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:71"><expr pos:start="13:5" pos:end="13:70"><name pos:start="13:5" pos:end="13:10">buffer</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <ternary pos:start="13:14" pos:end="13:70"><condition pos:start="13:14" pos:end="13:35"><expr pos:start="13:14" pos:end="13:33"><sizeof pos:start="13:14" pos:end="13:26">sizeof<argument_list pos:start="13:20" pos:end="13:26">(<argument pos:start="13:21" pos:end="13:25"><expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:25">small</name></expr></argument>)</argument_list></sizeof> <operator pos:start="13:28" pos:end="13:28">&lt;</operator> <name pos:start="13:30" pos:end="13:33">size</name></expr> ?</condition><then pos:start="13:37" pos:end="13:41"> <expr pos:start="13:37" pos:end="13:41"><name pos:start="13:37" pos:end="13:41">small</name></expr> </then><else pos:start="13:43" pos:end="13:70">: <expr pos:start="13:45" pos:end="13:70"><call pos:start="13:45" pos:end="13:70"><name pos:start="13:45" pos:end="13:52">g_malloc</name><argument_list pos:start="13:53" pos:end="13:70">(<argument pos:start="13:54" pos:end="13:69"><expr pos:start="13:54" pos:end="13:69"><call pos:start="13:54" pos:end="13:69"><name pos:start="13:54" pos:end="13:56">MIN</name><argument_list pos:start="13:57" pos:end="13:69">(<argument pos:start="13:58" pos:end="13:62"><expr pos:start="13:58" pos:end="13:62"><literal type="number" pos:start="13:58" pos:end="13:62">65536</literal></expr></argument>, <argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><name pos:start="13:65" pos:end="13:68">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <while pos:start="15:5" pos:end="29:5">while <condition pos:start="15:11" pos:end="15:20">(<expr pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:15">size</name> <operator pos:start="15:17" pos:end="15:17">&gt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition> <block pos:start="15:22" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:20">

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:54"><name pos:start="17:15" pos:end="17:23">read_sync</name><argument_list pos:start="17:24" pos:end="17:54">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">ioc</name></expr></argument>, <argument pos:start="17:30" pos:end="17:35"><expr pos:start="17:30" pos:end="17:35"><name pos:start="17:30" pos:end="17:35">buffer</name></expr></argument>, <argument pos:start="17:38" pos:end="17:53"><expr pos:start="17:38" pos:end="17:53"><call pos:start="17:38" pos:end="17:53"><name pos:start="17:38" pos:end="17:40">MIN</name><argument_list pos:start="17:41" pos:end="17:53">(<argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><literal type="number" pos:start="17:42" pos:end="17:46">65536</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:52"><expr pos:start="17:49" pos:end="17:52"><name pos:start="17:49" pos:end="17:52">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:25">

            <goto pos:start="21:13" pos:end="21:25">goto <name pos:start="21:18" pos:end="21:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><call pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:27">(<argument pos:start="25:16" pos:end="25:26"><expr pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:18">ret</name> <operator pos:start="25:20" pos:end="25:21">&lt;=</operator> <name pos:start="25:23" pos:end="25:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:15">-=</operator> <name pos:start="27:17" pos:end="27:19">ret</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <name pos:start="31:11" pos:end="31:17">dropped</name></expr>;</expr_stmt>



 <label pos:start="35:2" pos:end="35:9"><name pos:start="35:2" pos:end="35:8">cleanup</name>:</label>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:14">buffer</name> <operator pos:start="37:16" pos:end="37:17">!=</operator> <name pos:start="37:19" pos:end="37:23">small</name></expr>)</condition> <block pos:start="37:26" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:23">

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><call pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:22">(<argument pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:21">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:15">return <expr pos:start="43:12" pos:end="43:14"><name pos:start="43:12" pos:end="43:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
