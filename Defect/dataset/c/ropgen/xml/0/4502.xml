<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4502.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">rv30_decode_mb_info</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">RV34DecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">r</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:34">

    <decl_stmt pos:start="5:5" pos:end="5:137"><decl pos:start="5:5" pos:end="5:136"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:33">rv30_p_types</name><index pos:start="5:34" pos:end="5:36">[<expr pos:start="5:35" pos:end="5:35"><literal type="number" pos:start="5:35" pos:end="5:35">6</literal></expr>]</index></name> <init pos:start="5:38" pos:end="5:136">= <expr pos:start="5:40" pos:end="5:136"><block pos:start="5:40" pos:end="5:136">{ <expr pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:53">RV34_MB_SKIP</name></expr>, <expr pos:start="5:56" pos:end="5:70"><name pos:start="5:56" pos:end="5:70">RV34_MB_P_16x16</name></expr>, <expr pos:start="5:73" pos:end="5:85"><name pos:start="5:73" pos:end="5:85">RV34_MB_P_8x8</name></expr>, <expr pos:start="5:88" pos:end="5:89"><operator pos:start="5:88" pos:end="5:88">-</operator><literal type="number" pos:start="5:89" pos:end="5:89">1</literal></expr>, <expr pos:start="5:92" pos:end="5:109"><name pos:start="5:92" pos:end="5:109">RV34_MB_TYPE_INTRA</name></expr>, <expr pos:start="5:112" pos:end="5:134"><name pos:start="5:112" pos:end="5:134">RV34_MB_TYPE_INTRA16x16</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:158"><decl pos:start="7:5" pos:end="7:157"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:20">int</name></type> <name pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:33">rv30_b_types</name><index pos:start="7:34" pos:end="7:36">[<expr pos:start="7:35" pos:end="7:35"><literal type="number" pos:start="7:35" pos:end="7:35">6</literal></expr>]</index></name> <init pos:start="7:38" pos:end="7:157">= <expr pos:start="7:40" pos:end="7:157"><block pos:start="7:40" pos:end="7:157">{ <expr pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:53">RV34_MB_SKIP</name></expr>, <expr pos:start="7:56" pos:end="7:71"><name pos:start="7:56" pos:end="7:71">RV34_MB_B_DIRECT</name></expr>, <expr pos:start="7:74" pos:end="7:90"><name pos:start="7:74" pos:end="7:90">RV34_MB_B_FORWARD</name></expr>, <expr pos:start="7:93" pos:end="7:110"><name pos:start="7:93" pos:end="7:110">RV34_MB_B_BACKWARD</name></expr>, <expr pos:start="7:113" pos:end="7:130"><name pos:start="7:113" pos:end="7:130">RV34_MB_TYPE_INTRA</name></expr>, <expr pos:start="7:133" pos:end="7:155"><name pos:start="7:133" pos:end="7:155">RV34_MB_TYPE_INTRA16x16</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:26">r</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">GetBitContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">gb</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">code</name> <init pos:start="13:14" pos:end="13:37">= <expr pos:start="13:16" pos:end="13:37"><call pos:start="13:16" pos:end="13:37"><name pos:start="13:16" pos:end="13:33">svq3_get_ue_golomb</name><argument_list pos:start="13:34" pos:end="13:37">(<argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if<condition pos:start="17:7" pos:end="17:17">(<expr pos:start="17:8" pos:end="17:16"><name pos:start="17:8" pos:end="17:11">code</name> <operator pos:start="17:13" pos:end="17:13">&gt;</operator> <literal type="number" pos:start="17:15" pos:end="17:16">11</literal></expr>)</condition><block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><call pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:66">(<argument pos:start="19:16" pos:end="19:23"><expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">avctx</name></name></expr></argument>, <argument pos:start="19:26" pos:end="19:37"><expr pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:40" pos:end="19:65"><expr pos:start="19:40" pos:end="19:65"><literal type="string" pos:start="19:40" pos:end="19:65">"Incorrect MB type code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if<condition pos:start="25:7" pos:end="25:16">(<expr pos:start="25:8" pos:end="25:15"><name pos:start="25:8" pos:end="25:11">code</name> <operator pos:start="25:13" pos:end="25:13">&gt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">5</literal></expr>)</condition><block pos:start="25:17" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><call pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:57">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">avctx</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:40" pos:end="27:56"><expr pos:start="27:40" pos:end="27:56"><literal type="string" pos:start="27:40" pos:end="27:56">"dquant needed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">code</name> <operator pos:start="29:14" pos:end="29:15">-=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">6</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:34"><if pos:start="33:5" pos:end="35:34">if<condition pos:start="33:7" pos:end="33:41">(<expr pos:start="33:8" pos:end="33:40"><name pos:start="33:8" pos:end="33:19"><name pos:start="33:8" pos:end="33:8">s</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:19">pict_type</name></name> <operator pos:start="33:21" pos:end="33:22">!=</operator> <name pos:start="33:24" pos:end="33:40">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:34"><block_content pos:start="35:9" pos:end="35:34">

        <return pos:start="35:9" pos:end="35:34">return <expr pos:start="35:16" pos:end="35:33"><name pos:start="35:16" pos:end="35:33"><name pos:start="35:16" pos:end="35:27">rv30_p_types</name><index pos:start="35:28" pos:end="35:33">[<expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">code</name></expr>]</index></name></expr>;</return></block_content></block></if>

    <else pos:start="37:5" pos:end="39:34">else<block type="pseudo" pos:start="39:9" pos:end="39:34"><block_content pos:start="39:9" pos:end="39:34">

        <return pos:start="39:9" pos:end="39:34">return <expr pos:start="39:16" pos:end="39:33"><name pos:start="39:16" pos:end="39:33"><name pos:start="39:16" pos:end="39:27">rv30_b_types</name><index pos:start="39:28" pos:end="39:33">[<expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">code</name></expr>]</index></name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
