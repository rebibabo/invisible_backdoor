<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19727.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">wc3_read_packet</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="209:1">{<block_content pos:start="7:5" pos:end="207:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">Wc3DemuxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">wc3</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">fourcc_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">packet_read</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:46"><decl pos:start="19:5" pos:end="19:45"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name></type> <name pos:start="19:19" pos:end="19:45"><name pos:start="19:19" pos:end="19:26">preamble</name><index pos:start="19:27" pos:end="19:45">[<expr pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:44">WC3_PREAMBLE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name></type> <name pos:start="21:19" pos:end="21:28"><name pos:start="21:19" pos:end="21:22">text</name><index pos:start="21:23" pos:end="21:28">[<expr pos:start="21:24" pos:end="21:27"><literal type="number" pos:start="21:24" pos:end="21:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:16">int</name></type> <name pos:start="23:18" pos:end="23:31">palette_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:19"><type pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:17">char</name></type> <name pos:start="27:19" pos:end="27:19">r</name></decl>, <decl pos:start="27:22" pos:end="27:22"><type ref="prev" pos:start="27:5" pos:end="27:17"/><name pos:start="27:22" pos:end="27:22">g</name></decl>, <decl pos:start="27:25" pos:end="27:25"><type ref="prev" pos:start="27:5" pos:end="27:17"/><name pos:start="27:25" pos:end="27:25">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:27"><decl pos:start="29:5" pos:end="29:26"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:26">base_palette_index</name></decl>;</decl_stmt>



    <while pos:start="33:5" pos:end="203:5">while <condition pos:start="33:11" pos:end="33:24">(<expr pos:start="33:12" pos:end="33:23"><operator pos:start="33:12" pos:end="33:12">!</operator><name pos:start="33:13" pos:end="33:23">packet_read</name></expr>)</condition> <block pos:start="33:26" pos:end="203:5">{<block_content pos:start="39:9" pos:end="201:9">



        <comment type="block" pos:start="37:9" pos:end="37:41">/* get the next chunk preamble */</comment>

        <if_stmt pos:start="39:9" pos:end="43:31"><if pos:start="39:9" pos:end="43:31">if <condition pos:start="39:12" pos:end="41:30">(<expr pos:start="39:13" pos:end="41:29"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:62"><name pos:start="39:20" pos:end="39:29">get_buffer</name><argument_list pos:start="39:30" pos:end="39:62">(<argument pos:start="39:31" pos:end="39:32"><expr pos:start="39:31" pos:end="39:32"><name pos:start="39:31" pos:end="39:32">pb</name></expr></argument>, <argument pos:start="39:35" pos:end="39:42"><expr pos:start="39:35" pos:end="39:42"><name pos:start="39:35" pos:end="39:42">preamble</name></expr></argument>, <argument pos:start="39:45" pos:end="39:61"><expr pos:start="39:45" pos:end="39:61"><name pos:start="39:45" pos:end="39:61">WC3_PREAMBLE_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="39:63" pos:end="39:63">)</operator> <operator pos:start="39:65" pos:end="39:66">!=</operator>

            <name pos:start="41:13" pos:end="41:29">WC3_PREAMBLE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:31"><block_content pos:start="43:13" pos:end="43:31">

            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:25">AVERROR</name><argument_list pos:start="43:26" pos:end="43:30">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:18">fourcc_tag</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="47:42"><name pos:start="47:22" pos:end="47:28">AV_RL32</name><argument_list pos:start="47:29" pos:end="47:42">(<argument pos:start="47:30" pos:end="47:41"><expr pos:start="47:30" pos:end="47:41"><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:41"><name pos:start="47:31" pos:end="47:38">preamble</name><index pos:start="47:39" pos:end="47:41">[<expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:44">/* chunk sizes are 16-bit aligned */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:12">size</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><call pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:23">AV_RB32</name><argument_list pos:start="51:24" pos:end="51:37">(<argument pos:start="51:25" pos:end="51:36"><expr pos:start="51:25" pos:end="51:36"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:36"><name pos:start="51:26" pos:end="51:33">preamble</name><index pos:start="51:34" pos:end="51:36">[<expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:39">+</operator> <literal type="number" pos:start="51:41" pos:end="51:41">1</literal><operator pos:start="51:42" pos:end="51:42">)</operator> <operator pos:start="51:44" pos:end="51:44">&amp;</operator> <operator pos:start="51:46" pos:end="51:46">(</operator><operator pos:start="51:47" pos:end="51:47">~</operator><literal type="number" pos:start="51:48" pos:end="51:48">1</literal><operator pos:start="51:49" pos:end="51:49">)</operator></expr>;</expr_stmt>



        <switch pos:start="55:9" pos:end="201:9">switch <condition pos:start="55:16" pos:end="55:27">(<expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:26">fourcc_tag</name></expr>)</condition> <block pos:start="55:29" pos:end="201:9">{<block_content pos:start="59:9" pos:end="199:18">



        <case pos:start="59:9" pos:end="59:22">case <expr pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:21">BRCH_TAG</name></expr>:</case>

            <comment type="block" pos:start="61:13" pos:end="61:23">/* no-op */</comment>

            <break pos:start="63:13" pos:end="63:18">break;</break>



        <case pos:start="67:9" pos:end="67:22">case <expr pos:start="67:14" pos:end="67:21"><name pos:start="67:14" pos:end="67:21">SHOT_TAG</name></expr>:</case>

            <comment type="block" pos:start="69:13" pos:end="69:37">/* load up new palette */</comment>

            <if_stmt pos:start="71:13" pos:end="73:36"><if pos:start="71:13" pos:end="73:36">if <condition pos:start="71:16" pos:end="71:57">(<expr pos:start="71:17" pos:end="71:56"><operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:20">ret</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:50"><name pos:start="71:24" pos:end="71:33">get_buffer</name><argument_list pos:start="71:34" pos:end="71:50">(<argument pos:start="71:35" pos:end="71:36"><expr pos:start="71:35" pos:end="71:36"><name pos:start="71:35" pos:end="71:36">pb</name></expr></argument>, <argument pos:start="71:39" pos:end="71:46"><expr pos:start="71:39" pos:end="71:46"><name pos:start="71:39" pos:end="71:46">preamble</name></expr></argument>, <argument pos:start="71:49" pos:end="71:49"><expr pos:start="71:49" pos:end="71:49"><literal type="number" pos:start="71:49" pos:end="71:49">4</literal></expr></argument>)</argument_list></call><operator pos:start="71:51" pos:end="71:51">)</operator> <operator pos:start="71:53" pos:end="71:54">!=</operator> <literal type="number" pos:start="71:56" pos:end="71:56">4</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:36"><block_content pos:start="73:17" pos:end="73:36">

                <return pos:start="73:17" pos:end="73:36">return <expr pos:start="73:24" pos:end="73:35"><call pos:start="73:24" pos:end="73:35"><name pos:start="73:24" pos:end="73:30">AVERROR</name><argument_list pos:start="73:31" pos:end="73:35">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:26">palette_number</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <call pos:start="75:30" pos:end="75:50"><name pos:start="75:30" pos:end="75:36">AV_RL32</name><argument_list pos:start="75:37" pos:end="75:50">(<argument pos:start="75:38" pos:end="75:49"><expr pos:start="75:38" pos:end="75:49"><operator pos:start="75:38" pos:end="75:38">&amp;</operator><name pos:start="75:39" pos:end="75:49"><name pos:start="75:39" pos:end="75:46">preamble</name><index pos:start="75:47" pos:end="75:49">[<expr pos:start="75:48" pos:end="75:48"><literal type="number" pos:start="75:48" pos:end="75:48">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="79:43"><if pos:start="77:13" pos:end="79:43">if <condition pos:start="77:16" pos:end="77:53">(<expr pos:start="77:17" pos:end="77:52"><name pos:start="77:17" pos:end="77:30">palette_number</name> <operator pos:start="77:32" pos:end="77:33">&gt;=</operator> <name pos:start="77:35" pos:end="77:52"><name pos:start="77:35" pos:end="77:37">wc3</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:52">palette_count</name></name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:43"><block_content pos:start="79:17" pos:end="79:43">

                <return pos:start="79:17" pos:end="79:43">return <expr pos:start="79:24" pos:end="79:42"><name pos:start="79:24" pos:end="79:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:68"><expr pos:start="81:13" pos:end="81:67"><name pos:start="81:13" pos:end="81:30">base_palette_index</name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:47">palette_number</name> <operator pos:start="81:49" pos:end="81:49">*</operator> <name pos:start="81:51" pos:end="81:63">PALETTE_COUNT</name> <operator pos:start="81:65" pos:end="81:65">*</operator> <literal type="number" pos:start="81:67" pos:end="81:67">3</literal></expr>;</expr_stmt>

            <for pos:start="83:13" pos:end="93:13">for <control pos:start="83:17" pos:end="83:47">(<init pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">i</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</init> <condition pos:start="83:25" pos:end="83:42"><expr pos:start="83:25" pos:end="83:41"><name pos:start="83:25" pos:end="83:25">i</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <name pos:start="83:29" pos:end="83:41">PALETTE_COUNT</name></expr>;</condition> <incr pos:start="83:44" pos:end="83:46"><expr pos:start="83:44" pos:end="83:46"><name pos:start="83:44" pos:end="83:44">i</name><operator pos:start="83:45" pos:end="83:46">++</operator></expr></incr>)</control> <block pos:start="83:49" pos:end="93:13">{<block_content pos:start="85:17" pos:end="91:77">

                <expr_stmt pos:start="85:17" pos:end="85:66"><expr pos:start="85:17" pos:end="85:65"><name pos:start="85:17" pos:end="85:17">r</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:65"><name pos:start="85:21" pos:end="85:23">wc3</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:33">palettes</name><index pos:start="85:34" pos:end="85:65">[<expr pos:start="85:35" pos:end="85:64"><name pos:start="85:35" pos:end="85:52">base_palette_index</name> <operator pos:start="85:54" pos:end="85:54">+</operator> <name pos:start="85:56" pos:end="85:56">i</name> <operator pos:start="85:58" pos:end="85:58">*</operator> <literal type="number" pos:start="85:60" pos:end="85:62">3</literal> <operator pos:start="85:62" pos:end="85:62">+</operator> <literal type="number" pos:start="85:64" pos:end="85:64">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:66"><expr pos:start="87:17" pos:end="87:65"><name pos:start="87:17" pos:end="87:17">g</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:65"><name pos:start="87:21" pos:end="87:23">wc3</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:33">palettes</name><index pos:start="87:34" pos:end="87:65">[<expr pos:start="87:35" pos:end="87:64"><name pos:start="87:35" pos:end="87:52">base_palette_index</name> <operator pos:start="87:54" pos:end="87:54">+</operator> <name pos:start="87:56" pos:end="87:56">i</name> <operator pos:start="87:58" pos:end="87:58">*</operator> <literal type="number" pos:start="87:60" pos:end="87:62">3</literal> <operator pos:start="87:62" pos:end="87:62">+</operator> <literal type="number" pos:start="87:64" pos:end="87:64">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:66"><expr pos:start="89:17" pos:end="89:65"><name pos:start="89:17" pos:end="89:17">b</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:65"><name pos:start="89:21" pos:end="89:23">wc3</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:33">palettes</name><index pos:start="89:34" pos:end="89:65">[<expr pos:start="89:35" pos:end="89:64"><name pos:start="89:35" pos:end="89:52">base_palette_index</name> <operator pos:start="89:54" pos:end="89:54">+</operator> <name pos:start="89:56" pos:end="89:56">i</name> <operator pos:start="89:58" pos:end="89:58">*</operator> <literal type="number" pos:start="89:60" pos:end="89:62">3</literal> <operator pos:start="89:62" pos:end="89:62">+</operator> <literal type="number" pos:start="89:64" pos:end="89:64">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:77"><expr pos:start="91:17" pos:end="91:76"><name pos:start="91:17" pos:end="91:47"><name pos:start="91:17" pos:end="91:19">wc3</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:36">palette_control</name><operator pos:start="91:37" pos:end="91:37">.</operator><name pos:start="91:38" pos:end="91:44">palette</name><index pos:start="91:45" pos:end="91:47">[<expr pos:start="91:46" pos:end="91:46"><name pos:start="91:46" pos:end="91:46">i</name></expr>]</index></name> <operator pos:start="91:49" pos:end="91:49">=</operator> <operator pos:start="91:51" pos:end="91:51">(</operator><name pos:start="91:52" pos:end="91:52">r</name> <operator pos:start="91:54" pos:end="91:55">&lt;&lt;</operator> <literal type="number" pos:start="91:57" pos:end="91:58">16</literal><operator pos:start="91:59" pos:end="91:59">)</operator> <operator pos:start="91:61" pos:end="91:61">|</operator> <operator pos:start="91:63" pos:end="91:63">(</operator><name pos:start="91:64" pos:end="91:64">g</name> <operator pos:start="91:66" pos:end="91:67">&lt;&lt;</operator> <literal type="number" pos:start="91:69" pos:end="91:69">8</literal><operator pos:start="91:70" pos:end="91:70">)</operator> <operator pos:start="91:72" pos:end="91:72">|</operator> <operator pos:start="91:74" pos:end="91:74">(</operator><name pos:start="91:75" pos:end="91:75">b</name><operator pos:start="91:76" pos:end="91:76">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="95:13" pos:end="95:53"><expr pos:start="95:13" pos:end="95:52"><name pos:start="95:13" pos:end="95:48"><name pos:start="95:13" pos:end="95:15">wc3</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:32">palette_control</name><operator pos:start="95:33" pos:end="95:33">.</operator><name pos:start="95:34" pos:end="95:48">palette_changed</name></name> <operator pos:start="95:50" pos:end="95:50">=</operator> <literal type="number" pos:start="95:52" pos:end="95:52">1</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>



        <case pos:start="101:9" pos:end="101:22">case <expr pos:start="101:14" pos:end="101:21"><name pos:start="101:14" pos:end="101:21">VGA__TAG</name></expr>:</case>

            <comment type="block" pos:start="103:13" pos:end="103:38">/* send out video chunk */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:46"><expr pos:start="105:13" pos:end="105:45"><name pos:start="105:13" pos:end="105:15">ret</name><operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:45"><name pos:start="105:18" pos:end="105:30">av_get_packet</name><argument_list pos:start="105:31" pos:end="105:45">(<argument pos:start="105:32" pos:end="105:33"><expr pos:start="105:32" pos:end="105:33"><name pos:start="105:32" pos:end="105:33">pb</name></expr></argument>, <argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:38">pkt</name></expr></argument>, <argument pos:start="105:41" pos:end="105:44"><expr pos:start="105:41" pos:end="105:44"><name pos:start="105:41" pos:end="105:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:56"><expr pos:start="107:13" pos:end="107:55"><name pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:15">pkt</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:29">stream_index</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:55"><name pos:start="107:33" pos:end="107:35">wc3</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:55">video_stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:15">pkt</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:20">pts</name></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:31"><name pos:start="109:24" pos:end="109:26">wc3</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:31">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="113:35"><if pos:start="111:13" pos:end="113:35">if <condition pos:start="111:16" pos:end="111:28">(<expr pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:22">!=</operator> <name pos:start="111:24" pos:end="111:27">size</name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:35"><block_content pos:start="113:17" pos:end="113:35">

                <expr_stmt pos:start="113:17" pos:end="113:35"><expr pos:start="113:17" pos:end="113:34"><name pos:start="113:17" pos:end="113:19">ret</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:29">AVERROR</name><argument_list pos:start="113:30" pos:end="113:34">(<argument pos:start="113:31" pos:end="113:33"><expr pos:start="113:31" pos:end="113:33"><name pos:start="113:31" pos:end="113:33">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:28"><expr pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:23">packet_read</name> <operator pos:start="115:25" pos:end="115:25">=</operator> <literal type="number" pos:start="115:27" pos:end="115:27">1</literal></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>



        <case pos:start="121:9" pos:end="130:0">case <expr pos:start="121:14" pos:end="121:21"><name pos:start="121:14" pos:end="121:21">TEXT_TAG</name></expr>:</case>

            <comment type="block" pos:start="123:13" pos:end="123:32">/* subtitle chunk */</comment>

<cpp:if pos:start="125:1" pos:end="125:5">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:5"><literal type="number" pos:start="125:5" pos:end="125:5">0</literal></expr></cpp:if>

            url_fseek(pb, size, SEEK_CUR);

<cpp:else pos:start="129:1" pos:end="129:5">#<cpp:directive pos:start="129:2" pos:end="129:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="131:13" pos:end="154:0"><if pos:start="131:13" pos:end="133:35">if <condition pos:start="131:16" pos:end="131:92">(<expr pos:start="131:17" pos:end="131:91"><operator pos:start="131:17" pos:end="131:17">(</operator><name pos:start="131:18" pos:end="131:25">unsigned</name><operator pos:start="131:26" pos:end="131:26">)</operator><name pos:start="131:27" pos:end="131:30">size</name> <operator pos:start="131:32" pos:end="131:32">&gt;</operator> <sizeof pos:start="131:34" pos:end="131:45">sizeof<argument_list pos:start="131:40" pos:end="131:45">(<argument pos:start="131:41" pos:end="131:44"><expr pos:start="131:41" pos:end="131:44"><name pos:start="131:41" pos:end="131:44">text</name></expr></argument>)</argument_list></sizeof> <operator pos:start="131:47" pos:end="131:48">||</operator> <operator pos:start="131:50" pos:end="131:50">(</operator><name pos:start="131:51" pos:end="131:53">ret</name> <operator pos:start="131:55" pos:end="131:55">=</operator> <call pos:start="131:57" pos:end="131:82"><name pos:start="131:57" pos:end="131:66">get_buffer</name><argument_list pos:start="131:67" pos:end="131:82">(<argument pos:start="131:68" pos:end="131:69"><expr pos:start="131:68" pos:end="131:69"><name pos:start="131:68" pos:end="131:69">pb</name></expr></argument>, <argument pos:start="131:72" pos:end="131:75"><expr pos:start="131:72" pos:end="131:75"><name pos:start="131:72" pos:end="131:75">text</name></expr></argument>, <argument pos:start="131:78" pos:end="131:81"><expr pos:start="131:78" pos:end="131:81"><name pos:start="131:78" pos:end="131:81">size</name></expr></argument>)</argument_list></call><operator pos:start="131:83" pos:end="131:83">)</operator> <operator pos:start="131:85" pos:end="131:86">!=</operator> <name pos:start="131:88" pos:end="131:91">size</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:35"><block_content pos:start="133:17" pos:end="133:35">

                <expr_stmt pos:start="133:17" pos:end="133:35"><expr pos:start="133:17" pos:end="133:34"><name pos:start="133:17" pos:end="133:19">ret</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <call pos:start="133:23" pos:end="133:34"><name pos:start="133:23" pos:end="133:29">AVERROR</name><argument_list pos:start="133:30" pos:end="133:34">(<argument pos:start="133:31" pos:end="133:33"><expr pos:start="133:31" pos:end="133:33"><name pos:start="133:31" pos:end="133:33">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="135:13" pos:end="154:0">else <block pos:start="135:18" pos:end="154:0">{<block_content pos:start="137:17" pos:end="149:74">

                <decl_stmt pos:start="137:17" pos:end="137:26"><decl pos:start="137:17" pos:end="137:25"><type pos:start="137:17" pos:end="137:19"><name pos:start="137:17" pos:end="137:19">int</name></type> <name pos:start="137:21" pos:end="137:21">i</name> <init pos:start="137:23" pos:end="137:25">= <expr pos:start="137:25" pos:end="137:25"><literal type="number" pos:start="137:25" pos:end="137:25">0</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:61"><expr pos:start="139:17" pos:end="139:60"><call pos:start="139:17" pos:end="139:60"><name pos:start="139:17" pos:end="139:22">av_log</name> <argument_list pos:start="139:24" pos:end="139:60">(<argument pos:start="139:25" pos:end="139:25"><expr pos:start="139:25" pos:end="139:25"><name pos:start="139:25" pos:end="139:25">s</name></expr></argument>, <argument pos:start="139:28" pos:end="139:39"><expr pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="139:42" pos:end="139:59"><expr pos:start="139:42" pos:end="139:59"><literal type="string" pos:start="139:42" pos:end="139:59">"Subtitle time!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:74"><expr pos:start="141:17" pos:end="141:73"><call pos:start="141:17" pos:end="141:73"><name pos:start="141:17" pos:end="141:22">av_log</name> <argument_list pos:start="141:24" pos:end="141:73">(<argument pos:start="141:25" pos:end="141:25"><expr pos:start="141:25" pos:end="141:25"><name pos:start="141:25" pos:end="141:25">s</name></expr></argument>, <argument pos:start="141:28" pos:end="141:39"><expr pos:start="141:28" pos:end="141:39"><name pos:start="141:28" pos:end="141:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="141:42" pos:end="141:58"><expr pos:start="141:42" pos:end="141:58"><literal type="string" pos:start="141:42" pos:end="141:58">"  inglish: %s\n"</literal></expr></argument>, <argument pos:start="141:61" pos:end="141:72"><expr pos:start="141:61" pos:end="141:72"><operator pos:start="141:61" pos:end="141:61">&amp;</operator><name pos:start="141:62" pos:end="141:72"><name pos:start="141:62" pos:end="141:65">text</name><index pos:start="141:66" pos:end="141:72">[<expr pos:start="141:67" pos:end="141:71"><name pos:start="141:67" pos:end="141:67">i</name> <operator pos:start="141:69" pos:end="141:69">+</operator> <literal type="number" pos:start="141:71" pos:end="141:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:33"><expr pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:17">i</name> <operator pos:start="143:19" pos:end="143:20">+=</operator> <name pos:start="143:22" pos:end="143:28"><name pos:start="143:22" pos:end="143:25">text</name><index pos:start="143:26" pos:end="143:28">[<expr pos:start="143:27" pos:end="143:27"><name pos:start="143:27" pos:end="143:27">i</name></expr>]</index></name> <operator pos:start="143:30" pos:end="143:30">+</operator> <literal type="number" pos:start="143:32" pos:end="143:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:74"><expr pos:start="145:17" pos:end="145:73"><call pos:start="145:17" pos:end="145:73"><name pos:start="145:17" pos:end="145:22">av_log</name> <argument_list pos:start="145:24" pos:end="145:73">(<argument pos:start="145:25" pos:end="145:25"><expr pos:start="145:25" pos:end="145:25"><name pos:start="145:25" pos:end="145:25">s</name></expr></argument>, <argument pos:start="145:28" pos:end="145:39"><expr pos:start="145:28" pos:end="145:39"><name pos:start="145:28" pos:end="145:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="145:42" pos:end="145:58"><expr pos:start="145:42" pos:end="145:58"><literal type="string" pos:start="145:42" pos:end="145:58">"  doytsch: %s\n"</literal></expr></argument>, <argument pos:start="145:61" pos:end="145:72"><expr pos:start="145:61" pos:end="145:72"><operator pos:start="145:61" pos:end="145:61">&amp;</operator><name pos:start="145:62" pos:end="145:72"><name pos:start="145:62" pos:end="145:65">text</name><index pos:start="145:66" pos:end="145:72">[<expr pos:start="145:67" pos:end="145:71"><name pos:start="145:67" pos:end="145:67">i</name> <operator pos:start="145:69" pos:end="145:69">+</operator> <literal type="number" pos:start="145:71" pos:end="145:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:33"><expr pos:start="147:17" pos:end="147:32"><name pos:start="147:17" pos:end="147:17">i</name> <operator pos:start="147:19" pos:end="147:20">+=</operator> <name pos:start="147:22" pos:end="147:28"><name pos:start="147:22" pos:end="147:25">text</name><index pos:start="147:26" pos:end="147:28">[<expr pos:start="147:27" pos:end="147:27"><name pos:start="147:27" pos:end="147:27">i</name></expr>]</index></name> <operator pos:start="147:30" pos:end="147:30">+</operator> <literal type="number" pos:start="147:32" pos:end="147:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:74"><expr pos:start="149:17" pos:end="149:73"><call pos:start="149:17" pos:end="149:73"><name pos:start="149:17" pos:end="149:22">av_log</name> <argument_list pos:start="149:24" pos:end="149:73">(<argument pos:start="149:25" pos:end="149:25"><expr pos:start="149:25" pos:end="149:25"><name pos:start="149:25" pos:end="149:25">s</name></expr></argument>, <argument pos:start="149:28" pos:end="149:39"><expr pos:start="149:28" pos:end="149:39"><name pos:start="149:28" pos:end="149:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="149:42" pos:end="149:58"><expr pos:start="149:42" pos:end="149:58"><literal type="string" pos:start="149:42" pos:end="149:58">"  fronsay: %s\n"</literal></expr></argument>, <argument pos:start="149:61" pos:end="149:72"><expr pos:start="149:61" pos:end="149:72"><operator pos:start="149:61" pos:end="149:61">&amp;</operator><name pos:start="149:62" pos:end="149:72"><name pos:start="149:62" pos:end="149:65">text</name><index pos:start="149:66" pos:end="149:72">[<expr pos:start="149:67" pos:end="149:71"><name pos:start="149:67" pos:end="149:67">i</name> <operator pos:start="149:69" pos:end="149:69">+</operator> <literal type="number" pos:start="149:71" pos:end="149:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

            <break pos:start="155:13" pos:end="155:18">break;</break>



        <case pos:start="159:9" pos:end="159:22">case <expr pos:start="159:14" pos:end="159:21"><name pos:start="159:14" pos:end="159:21">AUDI_TAG</name></expr>:</case>

            <comment type="block" pos:start="161:13" pos:end="161:38">/* send out audio chunk */</comment>

            <expr_stmt pos:start="163:13" pos:end="163:46"><expr pos:start="163:13" pos:end="163:45"><name pos:start="163:13" pos:end="163:15">ret</name><operator pos:start="163:16" pos:end="163:16">=</operator> <call pos:start="163:18" pos:end="163:45"><name pos:start="163:18" pos:end="163:30">av_get_packet</name><argument_list pos:start="163:31" pos:end="163:45">(<argument pos:start="163:32" pos:end="163:33"><expr pos:start="163:32" pos:end="163:33"><name pos:start="163:32" pos:end="163:33">pb</name></expr></argument>, <argument pos:start="163:36" pos:end="163:38"><expr pos:start="163:36" pos:end="163:38"><name pos:start="163:36" pos:end="163:38">pkt</name></expr></argument>, <argument pos:start="163:41" pos:end="163:44"><expr pos:start="163:41" pos:end="163:44"><name pos:start="163:41" pos:end="163:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:56"><expr pos:start="165:13" pos:end="165:55"><name pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:15">pkt</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:29">stream_index</name></name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:55"><name pos:start="165:33" pos:end="165:35">wc3</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:55">audio_stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:32"><expr pos:start="167:13" pos:end="167:31"><name pos:start="167:13" pos:end="167:20"><name pos:start="167:13" pos:end="167:15">pkt</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:20">pts</name></name> <operator pos:start="167:22" pos:end="167:22">=</operator> <name pos:start="167:24" pos:end="167:31"><name pos:start="167:24" pos:end="167:26">wc3</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:31">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="171:35"><if pos:start="169:13" pos:end="171:35">if <condition pos:start="169:16" pos:end="169:28">(<expr pos:start="169:17" pos:end="169:27"><name pos:start="169:17" pos:end="169:19">ret</name> <operator pos:start="169:21" pos:end="169:22">!=</operator> <name pos:start="169:24" pos:end="169:27">size</name></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:35"><block_content pos:start="171:17" pos:end="171:35">

                <expr_stmt pos:start="171:17" pos:end="171:35"><expr pos:start="171:17" pos:end="171:34"><name pos:start="171:17" pos:end="171:19">ret</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <call pos:start="171:23" pos:end="171:34"><name pos:start="171:23" pos:end="171:29">AVERROR</name><argument_list pos:start="171:30" pos:end="171:34">(<argument pos:start="171:31" pos:end="171:33"><expr pos:start="171:31" pos:end="171:33"><name pos:start="171:31" pos:end="171:33">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="175:13" pos:end="175:37">/* time to advance pts */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:23"><expr pos:start="177:13" pos:end="177:22"><name pos:start="177:13" pos:end="177:20"><name pos:start="177:13" pos:end="177:15">wc3</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:20">pts</name></name><operator pos:start="177:21" pos:end="177:22">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:23">packet_read</name> <operator pos:start="181:25" pos:end="181:25">=</operator> <literal type="number" pos:start="181:27" pos:end="181:27">1</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>



        <default pos:start="187:9" pos:end="187:16">default:</default>

            <expr_stmt pos:start="189:13" pos:end="193:68"><expr pos:start="189:13" pos:end="193:67"><call pos:start="189:13" pos:end="193:67"><name pos:start="189:13" pos:end="189:18">av_log</name> <argument_list pos:start="189:20" pos:end="193:67">(<argument pos:start="189:21" pos:end="189:21"><expr pos:start="189:21" pos:end="189:21"><name pos:start="189:21" pos:end="189:21">s</name></expr></argument>, <argument pos:start="189:24" pos:end="189:35"><expr pos:start="189:24" pos:end="189:35"><name pos:start="189:24" pos:end="189:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:38" pos:end="189:96"><expr pos:start="189:38" pos:end="189:96"><literal type="string" pos:start="189:38" pos:end="189:96">"  unrecognized WC3 chunk: %c%c%c%c (0x%02X%02X%02X%02X)\n"</literal></expr></argument>,

                <argument pos:start="191:17" pos:end="191:27"><expr pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:24">preamble</name><index pos:start="191:25" pos:end="191:27">[<expr pos:start="191:26" pos:end="191:26"><literal type="number" pos:start="191:26" pos:end="191:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="191:30" pos:end="191:40"><expr pos:start="191:30" pos:end="191:40"><name pos:start="191:30" pos:end="191:40"><name pos:start="191:30" pos:end="191:37">preamble</name><index pos:start="191:38" pos:end="191:40">[<expr pos:start="191:39" pos:end="191:39"><literal type="number" pos:start="191:39" pos:end="191:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="191:43" pos:end="191:53"><expr pos:start="191:43" pos:end="191:53"><name pos:start="191:43" pos:end="191:53"><name pos:start="191:43" pos:end="191:50">preamble</name><index pos:start="191:51" pos:end="191:53">[<expr pos:start="191:52" pos:end="191:52"><literal type="number" pos:start="191:52" pos:end="191:52">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="191:56" pos:end="191:66"><expr pos:start="191:56" pos:end="191:66"><name pos:start="191:56" pos:end="191:66"><name pos:start="191:56" pos:end="191:63">preamble</name><index pos:start="191:64" pos:end="191:66">[<expr pos:start="191:65" pos:end="191:65"><literal type="number" pos:start="191:65" pos:end="191:65">3</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="193:17" pos:end="193:27"><expr pos:start="193:17" pos:end="193:27"><name pos:start="193:17" pos:end="193:27"><name pos:start="193:17" pos:end="193:24">preamble</name><index pos:start="193:25" pos:end="193:27">[<expr pos:start="193:26" pos:end="193:26"><literal type="number" pos:start="193:26" pos:end="193:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:30" pos:end="193:40"><expr pos:start="193:30" pos:end="193:40"><name pos:start="193:30" pos:end="193:40"><name pos:start="193:30" pos:end="193:37">preamble</name><index pos:start="193:38" pos:end="193:40">[<expr pos:start="193:39" pos:end="193:39"><literal type="number" pos:start="193:39" pos:end="193:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:43" pos:end="193:53"><expr pos:start="193:43" pos:end="193:53"><name pos:start="193:43" pos:end="193:53"><name pos:start="193:43" pos:end="193:50">preamble</name><index pos:start="193:51" pos:end="193:53">[<expr pos:start="193:52" pos:end="193:52"><literal type="number" pos:start="193:52" pos:end="193:52">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:56" pos:end="193:66"><expr pos:start="193:56" pos:end="193:66"><name pos:start="193:56" pos:end="193:66"><name pos:start="193:56" pos:end="193:63">preamble</name><index pos:start="193:64" pos:end="193:66">[<expr pos:start="193:65" pos:end="193:65"><literal type="number" pos:start="193:65" pos:end="193:65">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:38"><expr pos:start="195:13" pos:end="195:37"><name pos:start="195:13" pos:end="195:15">ret</name> <operator pos:start="195:17" pos:end="195:17">=</operator> <name pos:start="195:19" pos:end="195:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:28"><expr pos:start="197:13" pos:end="197:27"><name pos:start="197:13" pos:end="197:23">packet_read</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <literal type="number" pos:start="197:27" pos:end="197:27">1</literal></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <return pos:start="207:5" pos:end="207:15">return <expr pos:start="207:12" pos:end="207:14"><name pos:start="207:12" pos:end="207:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
