<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20907.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qemu_add_polling_cb</name><parameter_list pos:start="1:24" pos:end="1:56">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:35">PollingFunc</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">func</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:16">PollingEntry</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier><modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">ppe</name></decl>, <decl pos:start="5:25" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:27">pe</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:6">pe</name> <operator pos:start="7:8" pos:end="7:8">=</operator> <call pos:start="7:10" pos:end="7:40"><name pos:start="7:10" pos:end="7:18">g_malloc0</name><argument_list pos:start="7:19" pos:end="7:40">(<argument pos:start="7:20" pos:end="7:39"><expr pos:start="7:20" pos:end="7:39"><sizeof pos:start="7:20" pos:end="7:39">sizeof<argument_list pos:start="7:26" pos:end="7:39">(<argument pos:start="7:27" pos:end="7:38"><expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38">PollingEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:6">pe</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:12">func</name></name> <operator pos:start="9:14" pos:end="9:14">=</operator> <name pos:start="9:16" pos:end="9:19">func</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:6">pe</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:14">opaque</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <name pos:start="11:18" pos:end="11:23">opaque</name></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="13:71">for<control pos:start="13:8" pos:end="13:70">(<init pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:11">ppe</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">&amp;</operator><name pos:start="13:16" pos:end="13:34">first_polling_entry</name></expr>;</init> <condition pos:start="13:37" pos:end="13:49"><expr pos:start="13:37" pos:end="13:48"><operator pos:start="13:37" pos:end="13:37">*</operator><name pos:start="13:38" pos:end="13:40">ppe</name> <operator pos:start="13:42" pos:end="13:43">!=</operator> <name pos:start="13:45" pos:end="13:48">NULL</name></expr>;</condition> <incr pos:start="13:51" pos:end="13:69"><expr pos:start="13:51" pos:end="13:69"><name pos:start="13:51" pos:end="13:53">ppe</name> <operator pos:start="13:55" pos:end="13:55">=</operator> <operator pos:start="13:57" pos:end="13:57">&amp;</operator><name pos:start="13:58" pos:end="13:69"><operator pos:start="13:58" pos:end="13:58">(</operator><operator pos:start="13:59" pos:end="13:59">*</operator><name pos:start="13:60" pos:end="13:62">ppe</name><operator pos:start="13:63" pos:end="13:63">)</operator><operator pos:start="13:64" pos:end="13:65">-&gt;</operator><name pos:start="13:66" pos:end="13:69">next</name></name></expr></incr>)</control><block type="pseudo" pos:start="13:71" pos:end="13:71"><block_content pos:start="13:71" pos:end="13:71"><empty_stmt pos:start="13:71" pos:end="13:71">;</empty_stmt></block_content></block></for>

    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:8">ppe</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:13">pe</name></expr>;</expr_stmt>

    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
