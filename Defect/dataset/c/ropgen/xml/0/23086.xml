<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23086.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">vpc_open</name><parameter_list pos:start="1:20" pos:end="1:52">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:51"><decl pos:start="1:43" pos:end="1:51"><type pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:51">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="223:1">{<block_content pos:start="5:5" pos:end="221:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVVPCState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:21">vhd_footer</name></name><modifier pos:start="9:22" pos:end="9:22">*</modifier></type> <name pos:start="9:24" pos:end="9:29">footer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:29">vhd_dyndisk_header</name></name><modifier pos:start="11:30" pos:end="11:30">*</modifier></type> <name pos:start="11:32" pos:end="11:45">dyndisk_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:15">buf</name><index pos:start="13:16" pos:end="13:28">[<expr pos:start="13:17" pos:end="13:27"><name pos:start="13:17" pos:end="13:27">HEADER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:21">checksum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">err</name> <init pos:start="17:13" pos:end="17:16">= <expr pos:start="17:15" pos:end="17:16"><operator pos:start="17:15" pos:end="17:15">-</operator><literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">disk_type</name> <init pos:start="19:19" pos:end="19:31">= <expr pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:31">VHD_DYNAMIC</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:75">(<expr pos:start="23:9" pos:end="23:74"><call pos:start="23:9" pos:end="23:59"><name pos:start="23:9" pos:end="23:18">bdrv_pread</name><argument_list pos:start="23:19" pos:end="23:59">(<argument pos:start="23:20" pos:end="23:27"><expr pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:21">bs</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:27">file</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:45"><expr pos:start="23:33" pos:end="23:45"><name pos:start="23:33" pos:end="23:45"><name pos:start="23:33" pos:end="23:33">s</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:45">footer_buf</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:58"><expr pos:start="23:48" pos:end="23:58"><name pos:start="23:48" pos:end="23:58">HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="23:61" pos:end="23:62">!=</operator> <name pos:start="23:64" pos:end="23:74">HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:10">footer</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <operator pos:start="29:14" pos:end="29:14">(</operator>struct <name pos:start="29:22" pos:end="29:31">vhd_footer</name><operator pos:start="29:32" pos:end="29:32">*</operator><operator pos:start="29:33" pos:end="29:33">)</operator> <name pos:start="29:35" pos:end="29:47"><name pos:start="29:35" pos:end="29:35">s</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:47">footer_buf</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="59:5"><if pos:start="31:5" pos:end="59:5">if <condition pos:start="31:8" pos:end="31:48">(<expr pos:start="31:9" pos:end="31:47"><call pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:15">strncmp</name><argument_list pos:start="31:16" pos:end="31:47">(<argument pos:start="31:17" pos:end="31:31"><expr pos:start="31:17" pos:end="31:31"><name pos:start="31:17" pos:end="31:31"><name pos:start="31:17" pos:end="31:22">footer</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:31">creator</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:43"><expr pos:start="31:34" pos:end="31:43"><literal type="string" pos:start="31:34" pos:end="31:43">"conectix"</literal></expr></argument>, <argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:50" pos:end="59:5">{<block_content pos:start="33:9" pos:end="57:30">

        <decl_stmt pos:start="33:9" pos:end="33:50"><decl pos:start="33:9" pos:end="33:49"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:22">offset</name> <init pos:start="33:24" pos:end="33:49">= <expr pos:start="33:26" pos:end="33:49"><call pos:start="33:26" pos:end="33:49"><name pos:start="33:26" pos:end="33:39">bdrv_getlength</name><argument_list pos:start="33:40" pos:end="33:49">(<argument pos:start="33:41" pos:end="33:48"><expr pos:start="33:41" pos:end="33:48"><name pos:start="33:41" pos:end="33:48"><name pos:start="33:41" pos:end="33:42">bs</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:48">file</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:33">(<expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:18">offset</name> <operator pos:start="35:20" pos:end="35:20">&lt;</operator> <name pos:start="35:22" pos:end="35:32">HEADER_SIZE</name></expr>)</condition> <block pos:start="35:35" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:22">

            <goto pos:start="37:13" pos:end="37:22">goto <name pos:start="37:18" pos:end="37:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="41:9" pos:end="41:78">/* If a fixed disk, the footer is found only at the end of the file */</comment>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="45:31">(<expr pos:start="43:13" pos:end="45:30"><call pos:start="43:13" pos:end="43:80"><name pos:start="43:13" pos:end="43:22">bdrv_pread</name><argument_list pos:start="43:23" pos:end="43:80">(<argument pos:start="43:24" pos:end="43:31"><expr pos:start="43:24" pos:end="43:31"><name pos:start="43:24" pos:end="43:31"><name pos:start="43:24" pos:end="43:25">bs</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:31">file</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:51"><expr pos:start="43:34" pos:end="43:51"><name pos:start="43:34" pos:end="43:39">offset</name><operator pos:start="43:40" pos:end="43:40">-</operator><name pos:start="43:41" pos:end="43:51">HEADER_SIZE</name></expr></argument>, <argument pos:start="43:54" pos:end="43:66"><expr pos:start="43:54" pos:end="43:66"><name pos:start="43:54" pos:end="43:66"><name pos:start="43:54" pos:end="43:54">s</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:66">footer_buf</name></name></expr></argument>, <argument pos:start="43:69" pos:end="43:79"><expr pos:start="43:69" pos:end="43:79"><name pos:start="43:69" pos:end="43:79">HEADER_SIZE</name></expr></argument>)</argument_list></call>

                <operator pos:start="45:17" pos:end="45:18">!=</operator> <name pos:start="45:20" pos:end="45:30">HEADER_SIZE</name></expr>)</condition> <block pos:start="45:33" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:22">

            <goto pos:start="47:13" pos:end="47:22">goto <name pos:start="47:18" pos:end="47:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:52">(<expr pos:start="51:13" pos:end="51:51"><call pos:start="51:13" pos:end="51:51"><name pos:start="51:13" pos:end="51:19">strncmp</name><argument_list pos:start="51:20" pos:end="51:51">(<argument pos:start="51:21" pos:end="51:35"><expr pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:26">footer</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:35">creator</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:47"><expr pos:start="51:38" pos:end="51:47"><literal type="string" pos:start="51:38" pos:end="51:47">"conectix"</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:50"><expr pos:start="51:50" pos:end="51:50"><literal type="number" pos:start="51:50" pos:end="51:50">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:54" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:22">

            <goto pos:start="53:13" pos:end="53:22">goto <name pos:start="53:18" pos:end="53:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:17">disk_type</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:29">VHD_FIXED</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:12">checksum</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:44"><name pos:start="63:16" pos:end="63:26">be32_to_cpu</name><argument_list pos:start="63:27" pos:end="63:44">(<argument pos:start="63:28" pos:end="63:43"><expr pos:start="63:28" pos:end="63:43"><name pos:start="63:28" pos:end="63:43"><name pos:start="63:28" pos:end="63:33">footer</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:43">checksum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:10">footer</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:20">checksum</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:42"><if pos:start="67:5" pos:end="71:42">if <condition pos:start="67:8" pos:end="67:61">(<expr pos:start="67:9" pos:end="67:60"><call pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:20">vpc_checksum</name><argument_list pos:start="67:21" pos:end="67:48">(<argument pos:start="67:22" pos:end="67:34"><expr pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:34">footer_buf</name></name></expr></argument>, <argument pos:start="67:37" pos:end="67:47"><expr pos:start="67:37" pos:end="67:47"><name pos:start="67:37" pos:end="67:47">HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="67:50" pos:end="67:51">!=</operator> <name pos:start="67:53" pos:end="67:60">checksum</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="71:42"><block_content pos:start="69:9" pos:end="71:42">

        <expr_stmt pos:start="69:9" pos:end="71:42"><expr pos:start="69:9" pos:end="71:41"><call pos:start="69:9" pos:end="71:41"><name pos:start="69:9" pos:end="69:15">fprintf</name><argument_list pos:start="69:16" pos:end="71:41">(<argument pos:start="69:17" pos:end="69:22"><expr pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:22">stderr</name></expr></argument>, <argument pos:start="69:25" pos:end="71:26"><expr pos:start="69:25" pos:end="71:26"><literal type="string" pos:start="69:25" pos:end="69:68">"block-vpc: The header checksum of '%s' is "</literal>

            <literal type="string" pos:start="71:13" pos:end="71:26">"incorrect.\n"</literal></expr></argument>, <argument pos:start="71:29" pos:end="71:40"><expr pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:30">bs</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:40">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:75">/* Write 'checksum' back to footer, or else will leave it with zero. */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:45"><expr pos:start="77:5" pos:end="77:44"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:10">footer</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:20">checksum</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:44"><name pos:start="77:24" pos:end="77:34">be32_to_cpu</name><argument_list pos:start="77:35" pos:end="77:44">(<argument pos:start="77:36" pos:end="77:43"><expr pos:start="77:36" pos:end="77:43"><name pos:start="77:36" pos:end="77:43">checksum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="81:5" pos:end="81:72">// The visible size of a image in Virtual PC depends on the geometry</comment>

    <comment type="line" pos:start="83:5" pos:end="83:75">// rather than on the size stored in the footer (the size in the footer</comment>

    <comment type="line" pos:start="85:5" pos:end="85:28">// is too large usually)</comment>

    <expr_stmt pos:start="87:5" pos:end="89:73"><expr pos:start="87:5" pos:end="89:72"><name pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:6">bs</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:21">total_sectors</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <operator pos:start="87:25" pos:end="87:25">(</operator><name pos:start="87:26" pos:end="87:32">int64_t</name><operator pos:start="87:33" pos:end="87:33">)</operator>

        <call pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:19">be16_to_cpu</name><argument_list pos:start="89:20" pos:end="89:33">(<argument pos:start="89:21" pos:end="89:32"><expr pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:26">footer</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:32">cyls</name></name></expr></argument>)</argument_list></call> <operator pos:start="89:35" pos:end="89:35">*</operator> <name pos:start="89:37" pos:end="89:49"><name pos:start="89:37" pos:end="89:42">footer</name><operator pos:start="89:43" pos:end="89:44">-&gt;</operator><name pos:start="89:45" pos:end="89:49">heads</name></name> <operator pos:start="89:51" pos:end="89:51">*</operator> <name pos:start="89:53" pos:end="89:72"><name pos:start="89:53" pos:end="89:58">footer</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:72">secs_per_cyl</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:46">(<expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:10">bs</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:25">total_sectors</name></name> <operator pos:start="93:27" pos:end="93:28">&gt;=</operator> <literal type="number" pos:start="93:30" pos:end="93:34">65535</literal> <operator pos:start="93:36" pos:end="93:36">*</operator> <literal type="number" pos:start="93:38" pos:end="93:39">16</literal> <operator pos:start="93:41" pos:end="93:41">*</operator> <literal type="number" pos:start="93:43" pos:end="93:45">255</literal></expr>)</condition> <block pos:start="93:48" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:18">

        <expr_stmt pos:start="95:9" pos:end="95:21"><expr pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:11">err</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <operator pos:start="95:15" pos:end="95:15">-</operator><name pos:start="95:16" pos:end="95:20">EFBIG</name></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="197:5"><if pos:start="103:5" pos:end="197:5">if <condition pos:start="103:8" pos:end="103:33">(<expr pos:start="103:9" pos:end="103:32"><name pos:start="103:9" pos:end="103:17">disk_type</name> <operator pos:start="103:19" pos:end="103:20">==</operator> <name pos:start="103:22" pos:end="103:32">VHD_DYNAMIC</name></expr>)</condition> <block pos:start="103:35" pos:end="197:5">{<block_content pos:start="105:9" pos:end="196:0">

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="107:44">(<expr pos:start="105:13" pos:end="107:43"><call pos:start="105:13" pos:end="107:28"><name pos:start="105:13" pos:end="105:22">bdrv_pread</name><argument_list pos:start="105:23" pos:end="107:28">(<argument pos:start="105:24" pos:end="105:31"><expr pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:25">bs</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:31">file</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:65"><expr pos:start="105:34" pos:end="105:65"><call pos:start="105:34" pos:end="105:65"><name pos:start="105:34" pos:end="105:44">be64_to_cpu</name><argument_list pos:start="105:45" pos:end="105:65">(<argument pos:start="105:46" pos:end="105:64"><expr pos:start="105:46" pos:end="105:64"><name pos:start="105:46" pos:end="105:64"><name pos:start="105:46" pos:end="105:51">footer</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:64">data_offset</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:68" pos:end="105:70"><expr pos:start="105:68" pos:end="105:70"><name pos:start="105:68" pos:end="105:70">buf</name></expr></argument>,

                <argument pos:start="107:17" pos:end="107:27"><expr pos:start="107:17" pos:end="107:27"><name pos:start="107:17" pos:end="107:27">HEADER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="107:30" pos:end="107:31">!=</operator> <name pos:start="107:33" pos:end="107:43">HEADER_SIZE</name></expr>)</condition> <block pos:start="107:46" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:22">

            <goto pos:start="109:13" pos:end="109:22">goto <name pos:start="109:18" pos:end="109:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:59"><expr pos:start="115:9" pos:end="115:58"><name pos:start="115:9" pos:end="115:22">dyndisk_header</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <operator pos:start="115:26" pos:end="115:26">(</operator>struct <name pos:start="115:34" pos:end="115:51">vhd_dyndisk_header</name> <operator pos:start="115:53" pos:end="115:53">*</operator><operator pos:start="115:54" pos:end="115:54">)</operator> <name pos:start="115:56" pos:end="115:58">buf</name></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="123:9"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:58">(<expr pos:start="119:13" pos:end="119:57"><call pos:start="119:13" pos:end="119:57"><name pos:start="119:13" pos:end="119:19">strncmp</name><argument_list pos:start="119:20" pos:end="119:57">(<argument pos:start="119:21" pos:end="119:41"><expr pos:start="119:21" pos:end="119:41"><name pos:start="119:21" pos:end="119:41"><name pos:start="119:21" pos:end="119:34">dyndisk_header</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:41">magic</name></name></expr></argument>, <argument pos:start="119:44" pos:end="119:53"><expr pos:start="119:44" pos:end="119:53"><literal type="string" pos:start="119:44" pos:end="119:53">"cxsparse"</literal></expr></argument>, <argument pos:start="119:56" pos:end="119:56"><expr pos:start="119:56" pos:end="119:56"><literal type="number" pos:start="119:56" pos:end="119:56">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:60" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:22">

            <goto pos:start="121:13" pos:end="121:22">goto <name pos:start="121:18" pos:end="121:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:64"><expr pos:start="127:9" pos:end="127:63"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:21">block_size</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <call pos:start="127:25" pos:end="127:63"><name pos:start="127:25" pos:end="127:35">be32_to_cpu</name><argument_list pos:start="127:36" pos:end="127:63">(<argument pos:start="127:37" pos:end="127:62"><expr pos:start="127:37" pos:end="127:62"><name pos:start="127:37" pos:end="127:62"><name pos:start="127:37" pos:end="127:50">dyndisk_header</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:62">block_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:68"><expr pos:start="129:9" pos:end="129:67"><name pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:22">bitmap_size</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <operator pos:start="129:26" pos:end="129:26">(</operator><operator pos:start="129:27" pos:end="129:27">(</operator><name pos:start="129:28" pos:end="129:40"><name pos:start="129:28" pos:end="129:28">s</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:40">block_size</name></name> <operator pos:start="129:42" pos:end="129:42">/</operator> <operator pos:start="129:44" pos:end="129:44">(</operator><literal type="number" pos:start="129:45" pos:end="129:45">8</literal> <operator pos:start="129:47" pos:end="129:47">*</operator> <literal type="number" pos:start="129:49" pos:end="129:51">512</literal><operator pos:start="129:52" pos:end="129:52">)</operator><operator pos:start="129:53" pos:end="129:53">)</operator> <operator pos:start="129:55" pos:end="129:55">+</operator> <literal type="number" pos:start="129:57" pos:end="129:59">511</literal><operator pos:start="129:60" pos:end="129:60">)</operator> <operator pos:start="129:62" pos:end="129:62">&amp;</operator> <operator pos:start="129:64" pos:end="129:64">~</operator><literal type="number" pos:start="129:65" pos:end="129:67">511</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:78"><expr pos:start="133:9" pos:end="133:77"><name pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:28">max_table_entries</name></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <call pos:start="133:32" pos:end="133:77"><name pos:start="133:32" pos:end="133:42">be32_to_cpu</name><argument_list pos:start="133:43" pos:end="133:77">(<argument pos:start="133:44" pos:end="133:76"><expr pos:start="133:44" pos:end="133:76"><name pos:start="133:44" pos:end="133:76"><name pos:start="133:44" pos:end="133:57">dyndisk_header</name><operator pos:start="133:58" pos:end="133:59">-&gt;</operator><name pos:start="133:60" pos:end="133:76">max_table_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:58"><expr pos:start="135:9" pos:end="135:57"><name pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:20">pagetable</name></name> <operator pos:start="135:22" pos:end="135:22">=</operator> <call pos:start="135:24" pos:end="135:57"><name pos:start="135:24" pos:end="135:31">g_malloc</name><argument_list pos:start="135:32" pos:end="135:57">(<argument pos:start="135:33" pos:end="135:56"><expr pos:start="135:33" pos:end="135:56"><name pos:start="135:33" pos:end="135:52"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:52">max_table_entries</name></name> <operator pos:start="135:54" pos:end="135:54">*</operator> <literal type="number" pos:start="135:56" pos:end="135:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:66"><expr pos:start="139:9" pos:end="139:65"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:21">bat_offset</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <call pos:start="139:25" pos:end="139:65"><name pos:start="139:25" pos:end="139:35">be64_to_cpu</name><argument_list pos:start="139:36" pos:end="139:65">(<argument pos:start="139:37" pos:end="139:64"><expr pos:start="139:37" pos:end="139:64"><name pos:start="139:37" pos:end="139:64"><name pos:start="139:37" pos:end="139:50">dyndisk_header</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:64">table_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="143:70">(<expr pos:start="141:13" pos:end="143:69"><call pos:start="141:13" pos:end="143:41"><name pos:start="141:13" pos:end="141:22">bdrv_pread</name><argument_list pos:start="141:23" pos:end="143:41">(<argument pos:start="141:24" pos:end="141:31"><expr pos:start="141:24" pos:end="141:31"><name pos:start="141:24" pos:end="141:31"><name pos:start="141:24" pos:end="141:25">bs</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:31">file</name></name></expr></argument>, <argument pos:start="141:34" pos:end="141:46"><expr pos:start="141:34" pos:end="141:46"><name pos:start="141:34" pos:end="141:46"><name pos:start="141:34" pos:end="141:34">s</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:46">bat_offset</name></name></expr></argument>, <argument pos:start="141:49" pos:end="141:60"><expr pos:start="141:49" pos:end="141:60"><name pos:start="141:49" pos:end="141:60"><name pos:start="141:49" pos:end="141:49">s</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:60">pagetable</name></name></expr></argument>,

                <argument pos:start="143:17" pos:end="143:40"><expr pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:36"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:36">max_table_entries</name></name> <operator pos:start="143:38" pos:end="143:38">*</operator> <literal type="number" pos:start="143:40" pos:end="143:40">4</literal></expr></argument>)</argument_list></call> <operator pos:start="143:43" pos:end="143:44">!=</operator> <name pos:start="143:46" pos:end="143:65"><name pos:start="143:46" pos:end="143:46">s</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:65">max_table_entries</name></name> <operator pos:start="143:67" pos:end="143:67">*</operator> <literal type="number" pos:start="143:69" pos:end="143:69">4</literal></expr>)</condition> <block pos:start="143:72" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:22">

            <goto pos:start="145:13" pos:end="145:22">goto <name pos:start="145:18" pos:end="145:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="151:9" pos:end="153:70"><expr pos:start="151:9" pos:end="153:69"><name pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:33">free_data_block_offset</name></name> <operator pos:start="151:35" pos:end="151:35">=</operator>

            <operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:26"><name pos:start="153:14" pos:end="153:14">s</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:26">bat_offset</name></name> <operator pos:start="153:28" pos:end="153:28">+</operator> <operator pos:start="153:30" pos:end="153:30">(</operator><name pos:start="153:31" pos:end="153:50"><name pos:start="153:31" pos:end="153:31">s</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:50">max_table_entries</name></name> <operator pos:start="153:52" pos:end="153:52">*</operator> <literal type="number" pos:start="153:54" pos:end="153:54">4</literal><operator pos:start="153:55" pos:end="153:55">)</operator> <operator pos:start="153:57" pos:end="153:57">+</operator> <literal type="number" pos:start="153:59" pos:end="153:61">511</literal><operator pos:start="153:62" pos:end="153:62">)</operator> <operator pos:start="153:64" pos:end="153:64">&amp;</operator> <operator pos:start="153:66" pos:end="153:66">~</operator><literal type="number" pos:start="153:67" pos:end="153:69">511</literal></expr>;</expr_stmt>



        <for pos:start="157:9" pos:end="177:9">for <control pos:start="157:13" pos:end="157:50">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">i</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:45"><expr pos:start="157:21" pos:end="157:44"><name pos:start="157:21" pos:end="157:21">i</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:44"><name pos:start="157:25" pos:end="157:25">s</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:44">max_table_entries</name></name></expr>;</condition> <incr pos:start="157:47" pos:end="157:49"><expr pos:start="157:47" pos:end="157:49"><name pos:start="157:47" pos:end="157:47">i</name><operator pos:start="157:48" pos:end="157:49">++</operator></expr></incr>)</control> <block pos:start="157:52" pos:end="177:9">{<block_content pos:start="159:13" pos:end="175:13">

            <expr_stmt pos:start="159:13" pos:end="159:43"><expr pos:start="159:13" pos:end="159:42"><call pos:start="159:13" pos:end="159:42"><name pos:start="159:13" pos:end="159:24">be32_to_cpus</name><argument_list pos:start="159:25" pos:end="159:42">(<argument pos:start="159:26" pos:end="159:41"><expr pos:start="159:26" pos:end="159:41"><operator pos:start="159:26" pos:end="159:26">&amp;</operator><name pos:start="159:27" pos:end="159:41"><name pos:start="159:27" pos:end="159:27">s</name><operator pos:start="159:28" pos:end="159:29">-&gt;</operator><name pos:start="159:30" pos:end="159:38">pagetable</name><index pos:start="159:39" pos:end="159:41">[<expr pos:start="159:40" pos:end="159:40"><name pos:start="159:40" pos:end="159:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="175:13"><if pos:start="161:13" pos:end="175:13">if <condition pos:start="161:16" pos:end="161:46">(<expr pos:start="161:17" pos:end="161:45"><name pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:28">pagetable</name><index pos:start="161:29" pos:end="161:31">[<expr pos:start="161:30" pos:end="161:30"><name pos:start="161:30" pos:end="161:30">i</name></expr>]</index></name> <operator pos:start="161:33" pos:end="161:34">!=</operator> <literal type="number" pos:start="161:36" pos:end="161:45">0xFFFFFFFF</literal></expr>)</condition> <block pos:start="161:48" pos:end="175:13">{<block_content pos:start="163:17" pos:end="173:17">

                <decl_stmt pos:start="163:17" pos:end="165:51"><decl pos:start="163:17" pos:end="165:50"><type pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:23">int64_t</name></type> <name pos:start="163:25" pos:end="163:28">next</name> <init pos:start="163:30" pos:end="165:50">= <expr pos:start="163:32" pos:end="165:50"><operator pos:start="163:32" pos:end="163:32">(</operator><literal type="number" pos:start="163:33" pos:end="163:35">512</literal> <operator pos:start="163:37" pos:end="163:37">*</operator> <operator pos:start="163:39" pos:end="163:39">(</operator><name pos:start="163:40" pos:end="163:46">int64_t</name><operator pos:start="163:47" pos:end="163:47">)</operator> <name pos:start="163:49" pos:end="163:63"><name pos:start="163:49" pos:end="163:49">s</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:60">pagetable</name><index pos:start="163:61" pos:end="163:63">[<expr pos:start="163:62" pos:end="163:62"><name pos:start="163:62" pos:end="163:62">i</name></expr>]</index></name><operator pos:start="163:64" pos:end="163:64">)</operator> <operator pos:start="163:66" pos:end="163:66">+</operator>

                    <name pos:start="165:21" pos:end="165:34"><name pos:start="165:21" pos:end="165:21">s</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:34">bitmap_size</name></name> <operator pos:start="165:36" pos:end="165:36">+</operator> <name pos:start="165:38" pos:end="165:50"><name pos:start="165:38" pos:end="165:38">s</name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:50">block_size</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="169:17" pos:end="173:17"><if pos:start="169:17" pos:end="173:17">if <condition pos:start="169:20" pos:end="169:53">(<expr pos:start="169:21" pos:end="169:52"><name pos:start="169:21" pos:end="169:24">next</name> <operator pos:start="169:26" pos:end="169:26">&gt;</operator> <name pos:start="169:28" pos:end="169:52"><name pos:start="169:28" pos:end="169:28">s</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:52">free_data_block_offset</name></name></expr>)</condition> <block pos:start="169:55" pos:end="173:17">{<block_content pos:start="171:21" pos:end="171:53">

                    <expr_stmt pos:start="171:21" pos:end="171:53"><expr pos:start="171:21" pos:end="171:52"><name pos:start="171:21" pos:end="171:45"><name pos:start="171:21" pos:end="171:21">s</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:45">free_data_block_offset</name></name> <operator pos:start="171:47" pos:end="171:47">=</operator> <name pos:start="171:49" pos:end="171:52">next</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="181:9" pos:end="186:0"><expr pos:start="181:9" pos:end="181:44"><name pos:start="181:9" pos:end="181:29"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:29">last_bitmap_offset</name></name> <operator pos:start="181:31" pos:end="181:31">=</operator> <operator pos:start="181:33" pos:end="181:33">(</operator><name pos:start="181:34" pos:end="181:40">int64_t</name><operator pos:start="181:41" pos:end="181:41">)</operator> <operator pos:start="181:43" pos:end="181:43">-</operator><literal type="number" pos:start="181:44" pos:end="181:44">1</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="185:1" pos:end="185:12">#<cpp:directive pos:start="185:2" pos:end="185:6">ifdef</cpp:directive> <name pos:start="185:8" pos:end="185:12">CACHE</name></cpp:ifdef>

        <expr_stmt pos:start="187:9" pos:end="187:40"><expr pos:start="187:9" pos:end="187:39"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:23">pageentry_u8</name></name> <operator pos:start="187:25" pos:end="187:25">=</operator> <call pos:start="187:27" pos:end="187:39"><name pos:start="187:27" pos:end="187:34">g_malloc</name><argument_list pos:start="187:35" pos:end="187:39">(<argument pos:start="187:36" pos:end="187:38"><expr pos:start="187:36" pos:end="187:38"><literal type="number" pos:start="187:36" pos:end="187:38">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:43"><expr pos:start="189:9" pos:end="189:42"><name pos:start="189:9" pos:end="189:24"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:24">pageentry_u32</name></name> <operator pos:start="189:26" pos:end="189:26">=</operator> <name pos:start="189:28" pos:end="189:42"><name pos:start="189:28" pos:end="189:28">s</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:42">pageentry_u8</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:43"><expr pos:start="191:9" pos:end="191:42"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:24">pageentry_u16</name></name> <operator pos:start="191:26" pos:end="191:26">=</operator> <name pos:start="191:28" pos:end="191:42"><name pos:start="191:28" pos:end="191:28">s</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:42">pageentry_u8</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="196:0"><expr pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:25">last_pagetable</name></name> <operator pos:start="193:27" pos:end="193:27">=</operator> <operator pos:start="193:29" pos:end="193:29">-</operator><literal type="number" pos:start="193:30" pos:end="193:30">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="195:1" pos:end="195:6">#<cpp:directive pos:start="195:2" pos:end="195:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:33"><expr pos:start="201:5" pos:end="201:32"><call pos:start="201:5" pos:end="201:32"><name pos:start="201:5" pos:end="201:22">qemu_co_mutex_init</name><argument_list pos:start="201:23" pos:end="201:32">(<argument pos:start="201:24" pos:end="201:31"><expr pos:start="201:24" pos:end="201:31"><operator pos:start="201:24" pos:end="201:24">&amp;</operator><name pos:start="201:25" pos:end="201:31"><name pos:start="201:25" pos:end="201:25">s</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="205:5" pos:end="205:52">/* Disable migration when VHD images are used */</comment>

    <expr_stmt pos:start="207:5" pos:end="211:56"><expr pos:start="207:5" pos:end="211:55"><call pos:start="207:5" pos:end="211:55"><name pos:start="207:5" pos:end="207:13">error_set</name><argument_list pos:start="207:14" pos:end="211:55">(<argument pos:start="207:15" pos:end="207:35"><expr pos:start="207:15" pos:end="207:35"><operator pos:start="207:15" pos:end="207:15">&amp;</operator><name pos:start="207:16" pos:end="207:35"><name pos:start="207:16" pos:end="207:16">s</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:35">migration_blocker</name></name></expr></argument>,

              <argument pos:start="209:15" pos:end="209:53"><expr pos:start="209:15" pos:end="209:53"><name pos:start="209:15" pos:end="209:53">QERR_BLOCK_FORMAT_FEATURE_NOT_SUPPORTED</name></expr></argument>,

              <argument pos:start="211:15" pos:end="211:19"><expr pos:start="211:15" pos:end="211:19"><literal type="string" pos:start="211:15" pos:end="211:19">"vpc"</literal></expr></argument>, <argument pos:start="211:22" pos:end="211:36"><expr pos:start="211:22" pos:end="211:36"><name pos:start="211:22" pos:end="211:36"><name pos:start="211:22" pos:end="211:23">bs</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:36">device_name</name></name></expr></argument>, <argument pos:start="211:39" pos:end="211:54"><expr pos:start="211:39" pos:end="211:54"><literal type="string" pos:start="211:39" pos:end="211:54">"live migration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:46"><expr pos:start="213:5" pos:end="213:45"><call pos:start="213:5" pos:end="213:45"><name pos:start="213:5" pos:end="213:23">migrate_add_blocker</name><argument_list pos:start="213:24" pos:end="213:45">(<argument pos:start="213:25" pos:end="213:44"><expr pos:start="213:25" pos:end="213:44"><name pos:start="213:25" pos:end="213:44"><name pos:start="213:25" pos:end="213:25">s</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:44">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>

 <label pos:start="219:2" pos:end="219:6"><name pos:start="219:2" pos:end="219:5">fail</name>:</label>

    <return pos:start="221:5" pos:end="221:15">return <expr pos:start="221:12" pos:end="221:14"><name pos:start="221:12" pos:end="221:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
